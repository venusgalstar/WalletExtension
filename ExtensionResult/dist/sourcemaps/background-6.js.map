{"version":3,"sources":["node_modules/node-forge/lib/x509.js","node_modules/node-forge/lib/pkcs7asn1.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/crypto.js","node_modules/pull-reader/index.js","node_modules/buffer-indexof/index.js","node_modules/libp2p-record/src/selectors/public-key.js","node_modules/libp2p-record/src/validators/public-key.js","node_modules/pull-ws/index.js","node_modules/relative-url/index.js","node_modules/pull-ws/sink.js","node_modules/pull-ws/source.js","node_modules/libp2p-kad-dht/src/peer-list.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/crypto.js","node_modules/eventemitter3/index.js","node_modules/libp2p-kad-dht/src/peer-distance-list.js","node_modules/libp2p-kad-dht/src/query/workerQueue.js","node_modules/libp2p-kad-dht/src/query/path.js","node_modules/libp2p-kad-dht/src/rpc/handlers/index.js","node_modules/pull-pair/index.js","node_modules/libp2p-secio/src/handshake/crypto.js","node_modules/libp2p-secio/src/etm.js","node_modules/libp2p-secio/src/support.js","node_modules/libp2p-websocket-star/src/errors/index.js","node_modules/socket.io-pull-stream/src/index.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_transform.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_writable.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_readable.js","node_modules/parseuri/index.js","node_modules/socket.io-client/lib/on.js","node_modules/parseqs/index.js","node_modules/component-bind/index.js","node_modules/to-array/index.js","node_modules/has-binary2/index.js","node_modules/socket.io-client/node_modules/debug/src/debug.js","node_modules/socket.io-parser/node_modules/isarray/index.js","node_modules/socket.io-parser/is-buffer.js","node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/node_modules/debug/src/browser.js","node_modules/backo2/index.js","node_modules/indexof/index.js","node_modules/engine.io-client/lib/index.js","node_modules/libp2p-ping/src/constants.js","node_modules/libp2p-ping/src/util.js","node_modules/libp2p-floodsub/src/config.js","node_modules/libp2p-pubsub/src/index.js","node_modules/latency-monitor/dist/LatencyMonitor.js","node_modules/libp2p-switch/src/observe-connection.js","node_modules/libp2p-switch/src/connection/incoming.js","node_modules/libp2p-switch/src/stats/old-peers.js","node_modules/libp2p-switch/src/stats/stat.js","node_modules/libp2p-switch/src/constants.js","node_modules/libp2p-switch/src/dialer/queueManager.js","node_modules/libp2p-switch/src/utils.js","node_modules/multistream-select/src/index.js","node_modules/libp2p-switch/src/connection/index.js","node_modules/libp2p-identify/src/index.js","node_modules/libp2p-switch/src/limit-dialer/index.js","node_modules/libp2p-circuit/src/circuit.js","node_modules/ipfs-unixfs-exporter/src/utils/extract-data-from-block.js","node_modules/ipfs-unixfs-exporter/src/utils/validate-offset-and-length.js","node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js","node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/file.js","node_modules/ipfs-unixfs-exporter/src/utils/find-cid-in-shard.js","node_modules/ipfs-utils/node_modules/readable-stream/errors-browser.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/ipfs-unixfs-importer/src/utils/persist.js","node_modules/ipfs-unixfs-importer/src/dir-sharded.js","node_modules/ipfs-unixfs-importer/src/dag-builder/file/trickle.js","node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js","node_modules/ipfs-unixfs-importer/src/dag-builder/file/flat.js","node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.js","node_modules/ipfs-unixfs-importer/src/chunker/rabin.js","node_modules/ipfs-mfs/src/core/utils/hamt-utils.js","node_modules/promise-timeout/index.js","node_modules/observable-webworkers/lib/index.js","node_modules/mortice/lib/browser.js","node_modules/mortice/lib/node.js","node_modules/@metamask/key-tree/node_modules/bip39/src/index.js","node_modules/encoding-down/node_modules/abstract-leveldown/next-tick-browser.js","node_modules/encoding-down/node_modules/level-supports/index.js","node_modules/libp2p-crypto/node_modules/secp256k1/lib/js/ecjpoint.js","node_modules/libp2p-crypto/node_modules/secp256k1/lib/js/bn/optimized.js","node_modules/drbg.js/lib/hash-info.json","node_modules/node-forge/lib/pss.js","node_modules/node-forge/lib/mgf.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/utils.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/blake.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/pull-reader/state.js","node_modules/libp2p-record/node_modules/multihashing-async/src/index.js","node_modules/pull-ws/ready.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/utils.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/blake.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/libp2p-kad-dht/src/peer-queue.js","node_modules/libp2p-kad-dht/src/rpc/handlers/ping.js","node_modules/libp2p-kad-dht/src/rpc/handlers/put-value.js","node_modules/libp2p-kad-dht/src/rpc/handlers/add-provider.js","node_modules/libp2p-kad-dht/src/rpc/handlers/find-node.js","node_modules/libp2p-kad-dht/src/rpc/handlers/get-providers.js","node_modules/libp2p-kad-dht/src/rpc/handlers/get-value.js","node_modules/libp2p-secio/src/handshake/secio.proto.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/index.js","node_modules/data-queue/index.js","node_modules/socket.io-pull-stream/node_modules/uuid/index.js","node_modules/socket.io-pull-stream/node_modules/debug/src/browser.js","node_modules/simple-peer/node_modules/readable-stream/errors-browser.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/has-binary2/node_modules/isarray/index.js","node_modules/socket.io-client/node_modules/ms/index.js","node_modules/socket.io-parser/node_modules/debug/src/debug.js","node_modules/engine.io-parser/lib/browser.js","node_modules/engine.io-client/lib/socket.js","node_modules/libp2p-pubsub/src/message/sign.js","node_modules/libp2p-pubsub/src/utils.js","node_modules/libp2p-pubsub/src/peer.js","node_modules/libp2p-pubsub/src/message/index.js","node_modules/time-cache/src/index.js","node_modules/latency-monitor/dist/VisibilityChangeEmitter.js","node_modules/latency-monitor/node_modules/debug/src/browser.js","node_modules/libp2p-switch/src/connection/base.js","node_modules/libp2p-switch/node_modules/bignumber.js/bignumber.js","node_modules/retimer/retimer.js","node_modules/libp2p-switch/src/dialer/queue.js","node_modules/multistream-select/src/constants.js","node_modules/multistream-select/src/listener/match-exact.js","node_modules/multistream-select/src/listener/match-semver.js","node_modules/multistream-select/src/dialer/index.js","node_modules/multistream-select/src/listener/index.js","node_modules/libp2p-identify/src/message.js","node_modules/libp2p-identify/src/listener.js","node_modules/libp2p-identify/src/dialer.js","node_modules/libp2p-switch/src/limit-dialer/queue.js","node_modules/libp2p-circuit/src/circuit/utils.js","node_modules/libp2p-circuit/src/circuit/dialer.js","node_modules/libp2p-circuit/src/listener.js","node_modules/hamt-sharding/src/bucket.js","node_modules/deep-extend/lib/deep-extend.js","node_modules/hamt-sharding/src/index.js","node_modules/async-iterator-batch/index.js","node_modules/bl/bl.js","node_modules/rabin-wasm/src/index.js","node_modules/mortice/lib/constants.js","node_modules/shortid/index.js","node_modules/@metamask/key-tree/node_modules/bip39/src/_wordlists.js","node_modules/xtend/mutable.js","node_modules/node-forge/lib/mgf1.js","node_modules/libp2p-record/node_modules/multihashing-async/src/crypto.js","node_modules/heap/index.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/crypto.js","node_modules/socket.io-pull-stream/node_modules/uuid/v4.js","node_modules/socket.io-pull-stream/node_modules/uuid/v1.js","node_modules/socket.io-pull-stream/node_modules/debug/src/common.js","node_modules/socket.io-parser/node_modules/ms/index.js","node_modules/engine.io-parser/lib/keys.js","node_modules/engine.io-parser/lib/utf8.js","node_modules/after/index.js","node_modules/arraybuffer.slice/index.js","node_modules/blob/index.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/engine.io-client/lib/transport.js","node_modules/engine.io-client/node_modules/debug/src/browser.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/libp2p-pubsub/src/message/rpc.proto.js","node_modules/libp2p-pubsub/src/message/topic-descriptor.proto.js","node_modules/lodash.throttle/index.js","node_modules/latency-monitor/node_modules/debug/src/debug.js","node_modules/retimer/time-browser.js","node_modules/multistream-select/node_modules/semver/semver.js","node_modules/multistream-select/src/select.js","node_modules/multistream-select/src/util.js","node_modules/multistream-select/src/listener/ls-handler.js","node_modules/multistream-select/src/listener/select-handler.js","node_modules/libp2p-circuit/src/protocol/index.js","node_modules/libp2p-circuit/src/multicodec.js","node_modules/libp2p-circuit/src/circuit/stream-handler.js","node_modules/libp2p-circuit/src/circuit/hop.js","node_modules/libp2p-circuit/src/circuit/stop.js","node_modules/sparse-array/index.js","node_modules/hamt-sharding/src/consumable-hash.js","node_modules/bl/node_modules/readable-stream/readable-browser.js","node_modules/rabin-wasm/src/rabin.js","node_modules/rabin-wasm/dist/rabin-wasm.js","node_modules/shortid/lib/index.js","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/chinese_traditional.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/italian.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/french.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/korean.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/chinese_simplified.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/czech.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/english.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/portuguese.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/spanish.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/japanese.json","node_modules/libp2p-record/node_modules/multihashing-async/src/utils.js","node_modules/libp2p-record/node_modules/multihashing-async/src/blake.js","node_modules/libp2p-record/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/heap/lib/heap.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/utils.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/blake.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/socket.io-pull-stream/node_modules/uuid/lib/rng-browser.js","node_modules/socket.io-pull-stream/node_modules/uuid/lib/bytesToUuid.js","node_modules/engine.io-client/node_modules/debug/src/debug.js","node_modules/engine.io-client/lib/xmlhttprequest.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/latency-monitor/node_modules/ms/index.js","node_modules/async/some.js","node_modules/hamt-sharding/src/consumable-buffer.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/bl/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/bl/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js","node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js","node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js","node_modules/assemblyscript/lib/loader/index.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/build.js","node_modules/engine.io-client/node_modules/ms/index.js","node_modules/engine.io-client/lib/globalThis.browser.js","node_modules/has-cors/index.js","node_modules/component-inherit/index.js","node_modules/yeast/index.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/bl/node_modules/readable-stream/errors-browser.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/generate.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/nanoid/format.browser.js","app/scripts/background.js"],"names":["forge","require","asn1","pki","module","exports","oids","_shortNames","publicKeyValidator","rsa","x509CertificateValidator","name","tagClass","Class","UNIVERSAL","type","Type","SEQUENCE","constructed","value","captureAsn1","CONTEXT_SPECIFIC","optional","INTEGER","capture","OID","UTCTIME","GENERALIZEDTIME","BITSTRING","captureBitStringValue","rsassaPssParameterValidator","certificationRequestInfoValidator","SET","certificationRequestValidator","_getAttribute","obj","options","shortName","attr","rval","i","attributes","length","RDNAttributesAsArray","rdn","md","set","si","derToOid","valueTagClass","update","push","CRIAttributesAsArray","seq","values","vi","extensionRequest","extensions","ei","certificateExtensionFromAsn1","_readSignatureParameters","oid","fillDefaults","params","hash","algorithmOid","mgf","saltLength","errors","validate","error","Error","hashOid","undefined","maskGenOid","maskGenHashOid","charCodeAt","_createSignatureDigest","signatureOid","sha1","create","md5","sha256","sha384","sha512","_verifySignature","scheme","cert","certificate","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","pss","publicKey","verify","digest","getBytes","signature","_dnToAsn1","attrs","PRINTABLESTRING","UTF8","util","encodeUtf8","oidToDer","_fillMissingFields","attribute","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","e","id","extension","unused","b2","b3","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","String","fromCharCode","cA","BOOLEAN","integerToDer","pathLenConstraint","key","indexOf","client","server","email","objsign","reserved","sslCA","emailCA","objCA","n","altNames","altName","ip","bytesFromIP","test","comment","IA5STRING","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","toHex","OCTETSTRING","keyIdentifier","authorityCertIssuer","issuer","serialNumber","hexToBytes","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","parts","NULL","_CRIAttributesToAsn1","csr","certificateFromPem","pem","computeHash","strict","msg","decode","headerType","procType","fromDer","body","certificateFromAsn1","certificateToPem","maxline","toDer","certificateToAsn1","encode","publicKeyFromPem","publicKeyFromAsn1","publicKeyToPem","publicKeyToAsn1","publicKeyToRSAPublicKeyPem","publicKeyToRSAPublicKey","getPublicKeyFingerprint","bytes","start","encoding","hex","delimiter","match","join","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","createCertificate","siginfo","validity","notBefore","Date","notAfter","getField","sn","addField","subject","setSubject","uniqueId","setIssuer","setExtensions","exts","getExtension","ext","sign","algorithm","tbsCertificate","getTBSCertificate","child","issued","expectedIssuer","actualIssuer","isIssuer","parent","s","iattr","sattr","verifySubjectKeyIdentifier","publicKeyOid","rsaEncryption","version","certVersion","serial","createBuffer","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","parameters","certinfoSignatureParams","certSignature","certValidity1UTCTime","utcTimeToDate","certValidity2GeneralizedTime","generalizedTimeToDate","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","ev","derToInteger","gn","bytesToIP","bytesToHex","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","jan_1_1950","jan_1_2050","_dateToAsn1","date","dateToUtcTime","dateToGeneralizedTime","tbs","certificateExtensionsToAsn1","distinguishedNameToAsn1","dn","createCaStore","certs","caStore","getBySubject","ensureSubjectHasHash","getIssuer","addCertificate","hasCertificate","tmp","isArray","der1","listAllCertificates","certList","hasOwnProperty","removeCertificate","result","splice","certificateError","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","unknown_ca","verifyCertificateChain","chain","slice","validityCheckDate","first","depth","shift","selfSigned","message","now","parents","verified","ex","se","keyUsage","basicConstraints","bcExt","keyUsageExt","vfd","ret","p7v","pkcs7asn1","pkcs7","contentInfoValidator","encryptedContentInfoValidator","envelopedDataValidator","concat","encryptedDataValidator","signerValidator","signedDataValidator","recipientInfoValidator","sha3","murmur3","utils","sha","toCallback","toBuf","fromString","fromNumberTo32BitBuf","sha2256","sha2512","sha3512","sha3_512","sha3384","sha3_384","sha3256","sha3_256","sha3224","sha3_224","shake128","shake_128","shake256","shake_256","keccak224","keccak_224","keccak256","keccak_256","keccak384","keccak_384","keccak512","keccak_512","murmur3128","x64","hash128","murmur332","x86","hash32","addBlake","dblSha2256","buf","cb","err","firstHash","Buffer","from","State","isFunction","f","maxDelay","fn","delay","a","timer","setTimeout","clearTimeout","timeout","read","readTimed","ended","streaming","abort","queue","reading","state","drain","has","get","next","more","data","add","reader","_read","len","_timeout","Number","isFinite","search","offset","m","k","records","setImmediate","multihashing","func","callback","done","isBuffer","toString","keyhash","publicKeyHash","equals","source","sink","createServer","connect","URL","url","location","protocolMap","defaultProtocol","proto","parse","protocol","replace","host","hostname","format","slashes","port","pathname","ready","nextTick","process","socket","opts","closeOnEnd","onClose","end","readyState","addEventListener","wasClean","code","event","close","send","receiver","buffer","started","evt","ArrayBuffer","constructor","byteLength","this","list","info","find","isEqual","Boolean","toArray","pop","Object","prototype","prefix","Events","EE","context","once","addListener","emitter","TypeError","listener","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","call","getOwnPropertySymbols","listeners","handlers","l","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","distance","map","originDhtKey","capacity","peerDistances","peers","pd","peerId","convertPeerId","dhtKey","el","sort","b","compare","anyCloser","peerIds","dhtKeys","furthestDistance","keyDistance","promisify","promiseToCallback","dht","run","path","log","concurrency","setupQueue","execution","q","peer","processNext","stop","unsaturated","running","fill","kill","workers","filter","w","reject","resolve","async","execPromise","Promise","assign","peersToQuery","dequeue","peersSeen","continueQuerying","continueQueryingError","execError","execQuery","queryComplete","pathComplete","res","queryError","queryFunc","peersQueried","closerPeers","all","closer","_isSelf","peerBook","put","_peerDiscovered","addPeerToQuery","PeerQueue","withTimeout","initialPeers","addInitialPeer","fromKey","query","workerQueue","enqueue","T","TYPES","GET_VALUE","PUT_VALUE","FIND_NODE","ADD_PROVIDER","GET_PROVIDERS","PING","waiting","_waiting","protons","PeerId","crypto","parallel","waterfall","debug","pbm","support","createProposal","proposal","out","rand","randomBytes","pubkey","local","public","exchanges","ciphers","hashes","proposalEncoded","Propose","createExchange","keys","generateEphemeralKeyPair","protocols","curveT","ephemeralKey","shared","generate","genSharedKey","selectionOut","in","sig","exchange","epubkey","Exchange","identify","remote","unmarshalPublicKey","createFromPubKey","remoteId","toB58String","selectProtocols","pubKeyBytes","nonce","split","selectBest","selected","order","cipherT","hashT","selectionIn","sigOk","generateKeys","secret","keyStretcher","k1","k2","_cb","makeMacAndCipher","verifyNonce","n2","n1","pull","asyncMap","lp","lpOpts","fixed","ensureBuffer","c","createBoxStream","cipher","mac","chunk","encrypt","createUnboxStream","decipher","macSize","mark","macd","expected","decrypt","decrypted","mh","collect","theBest","p1","p2","second","firstCandidate","secondCandidate","target","hmac","makeMac","macKey","cipherType","iv","aes","makeCipher","cipherKey","macAndCipher","oh1","oh2","write","shake","decodeFromReader","ERR_WS_STAR_WEBSOCKET_CONNECTION","Queue","uuid","sioname","_log","doCodec","codec","console","codecs","v","plain","getCodec","co","sio","opt","createSink","sioplog","bind","_","doErr","append","loop","val","SIOSink","createSource","unlisten","SIOSource","createProxy","tsio","ERR_STREAM_PREMATURE_CLOSE","codes","noop","eos","stream","called","_len","_key","readable","writable","onlegacyfinish","onfinish","writableEnded","_writableState","finished","readableEnded","_readableState","endEmitted","onend","onerror","onclose","onrequest","req","setHeader","isRequest","_require$codes","ERR_MISSING_ARGS","ERR_STREAM_DESTROYED","destroyer","writing","closed","destroyed","destroy","pipe","to","popCallback","streams","destroys","forEach","reduce","objectKeys","Duplex","Readable","Writable","method","allowHalfOpen","onEndNT","self","defineProperty","enumerable","highWaterMark","getBuffer","PassThrough","Transform","_transform","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","er","ts","_transformState","transforming","writecb","writechunk","rs","needReadable","needTransform","writeencoding","sync","transform","flush","_flush","prefinish","_this","_write","_destroy","err2","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","Stream","OurUint8Array","global","Uint8Array","realHasInstance","destroyImpl","getHighWaterMark","ERR_INVALID_ARG_TYPE","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","errorOrDestroy","nop","isDuplex","objectMode","writableObjectMode","finalCalled","needDrain","ending","noDecode","decodeStrings","defaultEncoding","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","emitClose","autoDestroy","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","rState","current","Symbol","hasInstance","Function","object","_uint8ArrayToBuffer","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","endWritable","_undestroy","undestroy","ReadableState","EElistenerCount","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","readableObjectMode","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","unshift","isPaused","setEncoding","enc","p","head","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","resume","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","pipeOnDrain","pause","prependListener","dests","index","wrap","asyncIterator","_fromList","iterable","re","str","substring","exec","uri","authority","ipv6uri","pathNames","regx","substr","queryKey","$0","$1","$2","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","array","withNativeBlob","Blob","withNativeFile","File","hasBinary","toJSON","createDebug","namespace","prevTime","enabled","curr","ms","diff","prev","coerce","formatter","formatters","formatArgs","logFn","useColors","color","colors","Math","abs","selectColor","init","instances","stack","disable","enable","namespaces","save","skips","RegExp","instance","humanize","arr","withNativeBuffer","withNativeArrayBuffer","isView","_deconstructPacket","buffers","placeholder","_placeholder","num","newData","_reconstructPacket","deconstructPacket","packet","packetData","pack","attachments","reconstructPacket","removeBlobs","pendingBlobs","bloblessData","_removeBlobs","curKey","containingObject","fileReader","FileReader","onload","readAsArrayBuffer","load","r","storage","env","DEBUG","lastC","removeItem","window","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","chrome","localStorage","localstorage","JSON","stringify","Backoff","min","max","factor","jitter","attempts","duration","pow","random","deviation","floor","reset","setMin","setMax","setJitter","parser","PROTOCOL","PING_LENGTH","constants","rnd","multicodec","empty","asyncEach","TimeCache","errcode","Peer","signMessage","debugName","libp2p","super","signMessages","peerInfo","topics","Map","seenCache","_dials","Set","_onConnection","_dialPeer","_addPeer","existing","_removePeer","_references","delete","idB58Str","isConnected","dialProtocol","conn","pubsubStopped","_onDial","attachConnection","getPeerInfo","_processConnection","_onConnectionEnd","_buildMessage","normalizeOutRpcMessage","publish","messages","subscribe","unsubscribe","handle","peerInfos","getAll","unhandle","_createClass","defineProperties","props","descriptor","configurable","Constructor","protoProps","staticProps","_events2","_interopRequireDefault","_get2","_isFunction2","_VisibilityChangeEmitter2","__esModule","default","_classCallCheck","_possibleConstructorReturn","ReferenceError","LatencyMonitor","_EventEmitter","_ref","latencyCheckIntervalMs","dataEmitIntervalMs","asyncTestFn","latencyRandomPercentage","that","_latecyCheckMultiply","_latecyCheckSubtract","hrtime","getDeltaMS","startTime","performance","round","_latencyData","_initLatencyData","isBrowser","_visibilityChangeEmitter","pageInFocus","_startTimers","_emitSummary","_stopTimers","isVisible","subClass","superClass","setPrototypeOf","_inherits","_this2","_checkLatencyID","_checkLatency","_emitIntervalID","setInterval","unref","clearInterval","summary","getSummary","latency","minMs","maxMs","avgMs","totalMs","POSITIVE_INFINITY","lengthMs","_this3","randomness","localData","deltaOffset","ceil","deltaMS","NEGATIVE_INFINITY","Connection","transport","connection","observer","setPeerInfo","pi","incoming","outgoing","FSM","multistream","withIs","BaseConnection","_switch","transportKey","_peerInfo","theirPeerInfo","theirB58Id","ourPeerInfo","switch","protocolMuxer","msListener","Listener","_state","DISCONNECTED","disconnect","DIALED","privatize","PRIVATIZING","PRIVATIZED","ENCRYPTING","ENCRYPTED","upgrade","UPGRADING","MUXED","DISCONNECTING","_onDisconnected","_onPrivatizing","_onPrivatized","_onEncrypting","_onUpgrading","tag","addHandler","_conn","className","symbolName","LRU","maxSize","patched","remove","Big","MovingAverage","retimer","initialCounters","_options","_queue","_stats","_frequencyLastTime","_frequencyAccumulators","_movingAverages","_update","intervals","movingAverageIntervals","interval","_resetComputeTimeout","snapshot","movingAverages","counter","inc","reschedule","_nextTimeout","urgency","computeThrottleMaxQueueSize","computeThrottleTimeout","op","_applyOp","_updateFrequency","latestTime","timeDiff","_updateFrequencyFor","timeDiffMS","hz","movingAverageInterval","movingAverage","plus","BLACK_LIST_TTL","BLACK_LIST_ATTEMPTS","DIAL_TIMEOUT","MAX_COLD_CALLS","MAX_PARALLEL_DIALS","QUARTER_HOUR","PRIORITY_HIGH","PRIORITY_LOW","DIAL_ABORTED","_coldCallQueue","_dialingQueues","_queues","_cleanInterval","_clean","dialQueue","blackListed","Infinity","isRunning","_peerBook","targetQueue","getQueue","priority","size","dialer","useFSM","isDialAllowed","nextQueue","clearBlacklist","blackListCount","_onQueueStopped","Identify","msHandle","msSelect","select","identifyDialer","cryptoPeerInfo","observedAddrs","uniqueBy","getValue","Dialer","matchSemver","matchExact","Circuit","errCode","observeConnection","CONNECTION_FAILED","DIAL_SELF","INVALID_STATE_TRANSITION","NO_TRANSPORTS_REGISTERED","maybeUnexpectedEnd","muxer","startState","dial","DIALING","CONNECTED","ABORTED","ERRORED","_onDialing","_onDialed","conns","_onDisconnecting","_onAborted","_onErrored","_onStateError","getState","newStream","_protocolHandshake","hasTransports","tKeys","availableTransports","circuitEnabled","transports","includes","nextTransport","multiaddrs","tasks","msDialer","observedConn","encryptedConn","muxers","_didUpgrade","nextMuxer","_identify","results","msConn","tryEach","DialQueue","perPeerLimit","dialTimeout","queues","dialMany","addrs","token","cancel","dialSingle","addr","ps","mafmt","multiaddr","CircuitDialer","utilsFactory","createListener","swarm","relays","canHop","relayPeers","_dialSwarmRelays","relay","segment","relaySegment","ma","peerInfoFromMa","_dialRelay","handler","matches","block","blockStart","requestedStart","requestedEnd","blockEnd","alloc","cid","node","unixfs","ipld","Links","links","link","Hash","Name","listDirectory","file","extractDataFromBlock","validateOffsetAndLength","UnixFS","emitBytes","streamPosition","unmarshal","Data","childStart","childLink","childEnd","blockSizes","fileSize","Bucket","DirSharded","toPrefix","position","toUpperCase","padStart","findShardCid","bucket","rootBucket","hashFn","hamtDepth","lastBucket","pos","_putObjectAt","_findNewBucketAndPos","bucketPath","_parent","reverse","toBucketPath","_posAtParent","entryPrefix","entryName","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","actual","determiner","this_len","endsWith","arg","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_defineProperty","_defineProperties","inspect","custom","tail","allocUnsafe","copy","hasStrings","_getString","_getBuffer","nb","getOwnPropertyDescriptors","_objectSpread","customInspect","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","then","wrapForNext","_Object$create","iterator","mc","cidVersion","isNaN","hashAlg","DAGLink","DAGNode","Dir","persist","extend","justHash","defaultOptions","children","_children","labelPrefix","isBucket","shard","subShard","dir","flushedDir","label","Size","bitField","fanout","tableSize","hashType","marshal","_bucket","childCount","leafCount","directChildrenCount","childrenCount","onlyChild","eachLeafSeries","batch","root","iteration","maxDepth","subTree","Root","layerRepeat","layer","maxChildrenPerNode","isFull","addChild","SubTree","trickleStream","currentDepth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","reduceToParents","roots","chunked","bl","currentLength","emitted","maxChunkSize","newBl","shallowSlice","rabin","jsRabin","avg","minChunkSize","avgChunkSize","sizepow","log2","bits","polynomial","pending","sizes","fingerprint","recreateHamtLevel","parentBucket","positionAtParent","addLinksToHamtBucket","TSize","generatePath","fileName","rootNode","currentBucket","nextSegment","updateHamtDirectory","hashOnly","createShard","contents","parentKey","dirty","flat","TimeoutError","timeoutMillis","race","observable","worker","dispatchEvent","removeEventListener","shortid","WORKER_REQUEST_READ_LOCK","WORKER_RELEASE_READ_LOCK","MASTER_GRANT_READ_LOCK","WORKER_REQUEST_WRITE_LOCK","WORKER_RELEASE_WRITE_LOCK","MASTER_GRANT_WRITE_LOCK","handleWorkerLockRequest","masterEvent","requestType","releaseType","grantType","requestEvent","identifier","postMessage","releaseEventListener","releaseEvent","makeWorkerLockRequest","responseEvent","catch","singleProcess","isWorker","readLock","writeLock","cluster","isMaster","createHash","pbkdf2_1","_wordlists_1","DEFAULT_WORDLIST","_default","INVALID_MNEMONIC","INVALID_ENTROPY","WORDLIST_REQUIRED","normalize","lpad","padString","binaryToByte","bin","bytesToBinary","deriveChecksumBits","entropyBuffer","CS","salt","password","mnemonicToEntropy","mnemonic","wordlist","words","word","dividerIndex","entropyBits","checksumBits","entropyBytes","entropy","entropyToMnemonic","binary","mnemonicToSeedSync","mnemonicBuffer","saltBuffer","pbkdf2Sync","mnemonicToSeed","saltMixin","iterations","keylen","pbkdf2","derivedKey","pbkdf2Promise","generateMnemonic","strength","rng","validateMnemonic","setDefaultWordlist","language","wordlists","getDefaultWordlist","lang","every","_wordlists_2","xtend","manifest","bufferKeys","snapshots","permanence","seek","status","createIfMissing","errorIfExists","deferredOpen","openCallback","promises","encodings","additionalMethods","BN","ECJPoint","y","z","one","zero","zOne","fromNumber","neg","inf","redNeg","pz2","redSqr","z2","u1","redMul","u2","s1","s2","h","redSub","isZero","dbl","h2","h3","nx","redIAdd","redISub","mixedAdd","toECJPoint","ny","nz","xx","yy","yyyy","redAdd","t","yyyy8","d","c8","dblp","point","umulTo10x10","num1","num2","lo","mid","hi","o","a0","al0","ah0","al1","ah1","al2","ah2","al3","ah3","al4","ah4","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","bl2","bh2","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","securityStrength","outlen","seedlen","sha224","sLen","hLen","digestLength","salt_","prng","pssobj","modBits","emBits","emLen","mHash","getBytesSync","m_","ByteBuffer","fillWithByte","putBytes","putByte","db","maskLen","dbMask","maskedDB","mask","em","checkLen","mgf1","doWork","input","other","_input","number","blake","blake2b","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sInit","blake2sUpdate","blake2sFinal","makeB2Hash","hf","ctx","nodeify","webCrypto","subtle","webkitSubtle","msCrypto","getWebCrypto","webCryptoHash","oncomplete","raw","_length","_buffers","multihash","Multihashing","coerceCode","functions","newHash","cleanup","handleOpen","handleErr","Heap","static","keyBuffer","convertBuffer","heap","xorCompare","logger","record","errMsg","_verifyRecordLocally","timeReceived","bufferToKey","datastore","serialize","CID","foundProvider","providerPeers","toBaseEncodedString","providers","addProvider","Message","_betterPeersToQuery","response","clusterLevel","PeerInfo","dsKey","exists","getProviders","Record","isPublicKeyKey","fromPublicKeyKey","pubKey","_checkLocalDatastore","ed","unleak","prepend","height","v1","v4","_typeof","_console","setItem","getItem","__nwjs","plural","parseFloat","long","fmtShort","base64encoder","sliceBuffer","after","utf8","isAndroid","isPhantomJS","dontSendBlobs","packets","open","ping","pong","packetslist","ary","each","eachWithIndex","encodePacket","supportsBinary","utf8encode","encodeBase64Packet","contentArray","resultBuffer","encodeArrayBuffer","fr","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","b64data","b64","readAsDataURL","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","tryDecode","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","acc","resultArray","bufferIndex","isString","ab","view","lenStr","binaryIdentifier","lengthAry","bufferTail","tailArray","msgLength","total","Emitter","parseuri","parseqs","Socket","secure","agent","forceJSONP","jsonp","forceBase64","enablesXDR","withCredentials","timestampParam","timestampRequests","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","ca","rejectUnauthorized","forceNode","isReactNative","product","extraHeaders","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","Transport","createTransport","clone","EIO","sid","requestTimeout","setTransport","onDrain","onPacket","onError","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","freezeTransport","onTransportClose","onupgrade","onOpen","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","compress","waitForUpgrade","cleanupAndClose","reason","desc","filteredUpgrades","SignPrefix","privKey","bs58","randomSeqno","msgId","seqno","anyMatch","bHas","ensureArray","maybeArray","normalizeInRpcMessages","normalizeOutRpcMessages","Pushable","RPC","isWritable","onEnd","_sendRawSubscriptions","subs","topic","topicID","subscriptions","sendSubscriptions","sendUnsubscriptions","sendMessages","msgs","updateSubscriptions","changes","subopt","rpcProto","topicDescriptorProto","rpc","td","SubOpts","throttle","entries","sweep","getTime","getTimeElapsed","timestamp","VisibilityChangeEmitter","_initializeVisibilityVarNames","_addVisibilityChangeListener","hidden","visibilityChange","mozHidden","msHidden","webkitHidden","_hidden","_visibilityChange","_handleVisibilityChange","visible","eventName","protect","protector","globalObject","BigNumber","isNumeric","hasSymbol","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","xc","yc","intCheck","isOdd","toExponential","toFixedPoint","zs","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabet","caseChanged","isNum","_isBigNumber","rm","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","getRandomValues","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","dp","Uint32Array","sum","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","d0","d1","d2","exp","n0","toNumber","toPrecision","toStringTag","for","define","amd","Retimer","_started","_rescheduled","_scheduled","_args","_timer","timerWrapper","ConnectionFSM","ERR_BLACKLISTED","createConnectionWithProtocol","onStopped","_run","blacklist","ttl","minTTL","maxTTL","_getOrCreateConnection","connectionFSM","getOne","didCreate","queuedDial","PROTOCOL_ID","MULTICODEC_NOT_SUPPORTED","myProtocol","senderProtocol","semver","mps","sps","myName","myVersion","senderName","senderVersion","satisfies","varint","take","pullLP","rawConn","ls","lsStream","collectLs","assert","selectHandler","lsHandler","handlerFunc","matchFunc","selectStream","shConn","sh","pInfoSelf","getObservedAddrs","msgSend","protocolVersion","agentVersion","listenAddrs","observedAddr","expectedPeerInfo","warn","hasObservedAddr","oa","limit","task","_doWork","_dialWithTimeout","setInnerConn","writeResponse","streamHandler","CircuitRelay","STATUS","getB58String","b58Id","isMultiaddr","getPeerId","isPeerInfo","peerIdB58Str","createFromB58String","isPeerId","isPeerConnected","muxedConns","validateAddrs","dstPeer","HOP","Status","HOP_DST_MULTIADDR_INVALID","STOP_DST_MULTIADDR_INVALID","srcPeer","HOP_SRC_MULTIADDR_INVALID","STOP_SRC_MULTIADDR_INVALID","peerIdFromId","createFromBytes","StreamHandler","relayConns","_dialRelayHelper","strMa","dstConn","CAN_HOP","SUCCESS","dstMa","_negotiateRelay","nextRelay","srcMas","dstPeerId","Stop","Hop","connHandler","stopHandler","hopHandler","hop","listen","request","MALFORMED_MESSAGE","STOP","INVALID_MSG_TYPE","getAddrs","p2pAddrs","peerMa","encapsulate","SparseArray","wrapHash","posAtParent","_popCount","place","_putAt","_findChild","_findPlace","_at","_delAt","compactArray","c2","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","hashValue","newPlace","unset","_level","untake","nodes","output","mappedChildren","isSpecificValue","cloneSpecificValue","deepCloneArray","item","deepExtend","safeGetProperty","property","things","DuplexStream","_bufs","_callback","piper","inherits","_offset","_t","tot","_reverseOffset","blOffset","bufferId","_appendBuffer","dst","dstStart","srcStart","srcEnd","bufoff","startOffset","endOffset","trunc","duplicate","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","methods","readDoubleBE","readDoubleLE","readFloatBE","readFloatLE","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","Rabin","getRabin","windowSize","compiled","czech","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","portuguese","english","EN","seed","putInt32","putBuffer","truncate","bytesToUuid","rnds","ii","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","codePoints","byteString","ucs2encode","err_cb","bail","proxy","arraybuffer","abv","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","getBlob","mapArrayBufferViews","byteOffset","BlobBuilderConstructor","bb","part","BlobConstructor","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","description","doOpen","doClose","onData","XMLHttpRequest","XHR","JSONP","websocket","polling","xd","isSSL","xdomain","xscheme","FUNC_ERROR_TEXT","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","freeSelf","objectToString","nativeMax","nativeMin","debounce","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","isObject","isObjectLike","isSymbol","SemVer","NODE_DEBUG","SEMVER_SPEC_VERSION","tokens","R","tok","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","includePrerelease","trim","major","minor","patch","prerelease","build","valid","clean","compareMain","comparePre","compareIdentifiers","compareBuild","release","version1","version2","v2","defaultResult","numeric","anum","bnum","neq","Comparator","comp","ANY","operator","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","rsort","Range","range","parseRange","isSatisfiable","comparators","remainingComparators","testComparator","otherComparator","intersects","isX","hyphenReplace","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","testSet","allowed","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","comparator","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","M","pr","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","some","thisComparators","rangeComparators","thisComparator","rangeComparator","toComparators","maxSatisfying","versions","maxSV","rangeObj","minSatisfying","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","rtl","lastIndex","handshake","writeEncoded","createLogger","rId","printer","writer","protos","nProtos","encodingLength","encodedProtos","handlersMap","supportedProtocols","supportedProtocol","sp","matcher","protobuf","maxLength","isValid","getRawConn","series","active","HOP_CANT_SPEAK_RELAY","srcPeerId","HOP_CANT_RELAY_TO_SELF","noPeer","HOP_NO_CONN_TO_DST","_circuit","_connectToStop","srcSh","HOP_CANT_DIAL_DST","_negotiateStop","dstSh","stopMsg","HOP_CANT_OPEN_DST_STREAM","_dstConn","srcIdStr","dstIdStr","Success","newConn","popCountReduce","byte","popCount","_v","sortInternal","valueOnly","elem","_bitArrays","_data","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","_sortData","mapped","reducer","initialValue","finder","found","noCreate","bytePos","_bytePosFor","bitPos","targetLength","randomIndex","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","ConsumableBuffer","InfiniteHash","_value","_hashFn","_depth","_availableBits","_currentBufferIndex","pendingBits","_produceMoreBits","available","availableBits","availableForUntake","totalBits","pipeline","asModule","lengths","Int32Array","lengthsPtr","newArray","pointer","processed","getArray","freeArray","cleanArr","instantiateStreaming","loadWebAssembly","imp","supported","wasm","Response","WebAssembly","clusterWorkerId","seedValue","workerId","characters","newCharacters","shuffled","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","factory","lastelt","returnitem","_i","_ref1","_results","_results1","_j","los","startpos","newitem","parentpos","childpos","endpos","rightpos","pushpop","peek","contains","insert","top","front","rnds8","byteToHex","bth","hasCORS","globalThis","XDomainRequest","BrowserWebSocket","NodeWebSocket","inherit","yeast","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onopen","onmessage","schema","Polling","JSONPPolling","callbacks","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","doPoll","createElement","insertAt","getElementsByTagName","insertBefore","appendChild","area","iframeId","left","setAttribute","complete","initIframe","html","action","submit","attachEvent","onreadystatechange","Request","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onLoad","responseText","contentType","getResponseHeader","responseType","requestsCount","requests","onSuccess","fromError","unloadHandler","_createTester2","_doParallel2","_identity2","START_MASKS","STOP_MASKS","byteBitsToInt","maskFor","_currentBytePos","_currentBitPos","_haveBits","taking","hasBigInt64","BigUint64Array","thisPtr","getStringImpl","U32","U16","ptr","dataOffset","dataRemain","chunkSize","subarray","preInstantiate","imports","baseModule","getString","memory","Uint16Array","mesg","line","colm","trace","postInstantiate","I8","U8","I16","I32","F32","F64","I64","U64","rawExports","memory_allocate","memory_fill","memory_free","setargc","_setargc","checkMem","Int8Array","Int16Array","BigInt64Array","Float32Array","Float64Array","newString","dataLength","unsafe","ctor","elementSize","BYTES_PER_ELEMENT","clz32","computeBufferSize","setLength","newFunction","original","grow","getFunction","wrapFunction","demangle","instantiate","Instance","prop","internalName","classElem","thisValue","getOwnPropertyNames","getter","setter","instantiateBuffer","Module","previousSeed","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","unique","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","nextValue","shuffle","lookup","previousSeconds","seconds","decoded","hasXHR2","poll","onPause","callbackfn","_seed_","loopCounter","randomByte","LN2","step","_endOfStream","_pump","_debounceStream","_loglevel","_extensionizer","_obsStore","_extensionPortStream","_browser","_ethRpcErrors","_app","_time","_metametrics","_migrations","_migrator","_extension","_localStore","_networkStore","_createStreamSink","_notificationManager","_interopRequireWildcard","_metamaskController","_firstTimeState","_getFirstPreferredLangCode","_getObjStructure","_setup","sentry","firstTimeState","setDefaultLevel","METAMASK_DEBUG","platform","notificationManager","METAMASK_NOTIFIER","popupIsOpen","notificationIsOpen","uiIsTriggering","openMetamaskTabsIDs","requestAccountTabIds","inTest","IN_TEST","localStore","versionedData","triggerUi","tabs","getActiveTabs","currentlyActiveMetamaskTab","tab","isVivaldi","extData","showPopup","openPopup","SECOND","metamaskGetState","initState","migrator","migrations","generateInitialState","captureMessage","vaultStructure","captureException","migrateData","isSupported","loadStateFromPersistence","initLangCode","controller","infuraProjectId","showUserConfirmation","getRequestAccountTabIds","getOpenMetamaskTabsIds","versionifyData","getCurrentChainId","networkController","getIpfsGateway","preferencesController","provider","storeAsStream","store","storeTransformStream","persistData","dataPersistenceFailing","runtime","onConnect","connectRemote","onConnectExternal","connectExternal","metamaskInternalProcessHash","ENVIRONMENT_TYPE_POPUP","ENVIRONMENT_TYPE_NOTIFICATION","ENVIRONMENT_TYPE_FULLSCREEN","metamaskBlockedPorts","isClientOpenStatus","onCloseEnvironmentInstances","isClientOpen","environmentType","onClientClosed","onEnvironmentTypeClosed","remotePort","processName","isMetaMaskInternalProcess","portStream","setupTrustedCommunication","sender","tabId","origin","onMessage","setupUntrustedCommunication","connectionStream","updateBadge","getUnapprovedTransactionCount","browserAction","setBadgeText","text","setBadgeBackgroundColor","unapprovedTxCount","txController","getUnapprovedTxCount","unapprovedMsgCount","messageManager","unapprovedPersonalMsgCount","personalMessageManager","unapprovedDecryptMsgCount","decryptMessageManager","unapprovedEncryptionPublicKeyMsgCount","encryptionPublicKeyManager","unapprovedTypedMessagesCount","typedMessageManager","approvalController","getTotalApprovalCount","appStateController","waitingForUnlock","rejectUnapprovedNotifications","txStateManager","getUnapprovedTxList","txId","setTxStatusRejected","tx","rejectMsg","REJECT_NOTFICIATION_CLOSE_SIG","REJECT_NOTFICIATION_CLOSE","ethErrors","userRejectedRequest","METAMASK_CONTROLLER_EVENTS","UPDATE_BADGE","controllerMessenger","APPROVAL_STATE_CHANGE","NOTIFICATION_MANAGER_EVENTS","POPUP_CLOSED","automaticallyClosed","setupController","initialize","onInstalled","openExtensionInBrowser"],"mappings":"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CA,WACA,SACA,WACA,QACA,UACA,WACA,OACA,SACA,OACA,WACA,WACA,OACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,WACA,WACA,SACA,UACA,SACA,WACA,WACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,UACA,WACA,WACA,QACA,QACA,WACA,UACA,WACA,WACA,WACA,WACA,SACA,OACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,WACA,OACA,UACA,WACA,QACA,WACA,WACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,OACA,UACA,SACA,WACA,UACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,QACA,WACA,OACA,WACA,UACA,OACA,WACA,SACA,WACA,UACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,QACA,WACA,SACA,YACA,SACA,QACA,SACA,UACA,SACA,UACA,SACA,OACA,UACA,WACA,UACA,QACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,QACA,WACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,OACA,SACA,SACA,OACA,WACA,QACA,WACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,QACA,SACA,UACA,WACA,WACA,SACA,UACA,YACA,WACA,WACA,QACA,WACA,SACA,QACA,UACA,OACA,SACA,UACA,OACA,QACA,QACA,UACA,WACA,UACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,OACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,UACA,QACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,OACA,UACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,UACA,SACA,UACA,YACA,OACA,SACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,QACA,OACA,QACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,QACA,WACA,WACA,QACA,UACA,UACA,YACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,YACA,QACA,OACA,SACA,WACA,SACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,SACA,YACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,UACA,UACA,OACA,QACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,WACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,WACA,SACA,WACA,WACA,WACA,SACA,YACA,UACA,YACA,WACA,YACA,SACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,OACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,OACA,SACA,UACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,UACA,OACA,UACA,OACA,UACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,OACA,QACA,UACA,WACA,QACA,UACA,OACA,UACA,WACA,QACA,UACA,QACA,WACA,UACA,WACA,OACA,UACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,OACA,OACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,WACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,OACA,SACA,QACA,UACA,UACA,WACA,OACA,UACA,UACA,UACA,QACA,UACA,WACA,OACA,UACA,WACA,UACA,WACA,WACA,QACA,UACA,WACA,QACA,UACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,OACA,WACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,QACA,WACA,OACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,OACA,WACA,SACA,SACA,OACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,QACA,UACA,UACA,UACA,QACA,QACA,QACA,UACA,OACA,WACA,OACA,UACA,WACA,SACA,QACA,UACA,SACA,QACA,UACA,WACA,QACA,SACA,UACA,UACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,WACA,WACA,QACA,UACA,UACA,YACA,UACA,UACA,UACA,OACA,WACA,UACA,UACA,QACA,WACA,QACA,WACA,WACA,YACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,QACA,QACA,UACA,SACA,OACA,SACA,WACA,QACA,UACA,UACA,UACA,UACA,QACA,WACA,QACA,WACA,UACA,WACA,UACA,WACA,QACA,SACA,SACA,WACA,OACA,WACA,QACA,UACA,UACA,OACA,WACA,UACA,WACA,QACA,WACA,WACA,QACA,SACA,QACA,UACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,UACA,SACA,SACA,WACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,SACA,WACA,OACA,UACA,WACA,QACA,WACA,UACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,SACA,WACA,QACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,WACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,UACA,SACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,YACA,QACA,WACA,UACA,SACA,UACA,OACA,QACA,WACA,WACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,YACA,OACA,WACA,SACA,OACA,UACA,QACA,WACA,WACA,UACA,UACA,SACA,UACA,OACA,SACA,QACA,OACA,UACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,OACA,WACA,OACA,WACA,SACA,WACA,QACA,OACA,UACA,UACA,QACA,QACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,WACA,WACA,YACA,UACA,QACA,WACA,OACA,SACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,WACA,QACA,WACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,WACA,WACA,WACA,OACA,UACA,QACA,UACA,UACA,OACA,UACA,WACA,UACA,QACA,WACA,OACA,UACA,UACA,UACA,SACA,UACA,YACA,OACA,UACA,UACA,UACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,WACA,UACA,WACA,QACA,WACA,YACA,UACA,WACA,SACA,SACA,QACA,OACA,UACA,YACA,QACA,UACA,YACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,YACA,SACA,WACA,WACA,QACA,UACA,YACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,QACA,UACA,SACA,OACA,UACA,SACA,WACA,OACA,UACA,QACA,YACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,OACA,OACA,SACA,UACA,UACA,YACA,WACA,SACA,UACA,WACA,UACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,OACA,WACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,YACA,YACA,YACA,OACA,UACA,UACA,UACA,UACA,UACA,YACA,UACA,OACA,SACA,WACA,UACA,SACA,QACA,YACA,QACA,UACA,WACA,QACA,QACA,YACA,SACA,QACA,QACA,WACA,YACA,OACA,UACA,WACA,UACA,UACA,QACA,SACA,YACA,UACA,SACA,WACA,UACA,YACA,OACA,WACA,WACA,WACA,UACA,WACA,WACA,SACA,SACA,OACA,QACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,OACA,QACA,OACA,WACA,SACA,UACA,QACA,QACA,QACA,UACA,UACA,UACA,UACA,OACA,YACA,OACA,WACA,UACA,UACA,QACA,OACA,SACA,YACA,WACA,UACA,OACA,SACA,UACA,WACA,QACA,WACA,UACA,WACA,WACA,SACA,UACA,OACA,UACA,SACA,UACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,OACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,UACA,OACA,YACA,SACA,UACA,YACA,QACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,OACA,WACA,UACA,SACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,WACA,SACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,UACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,QACA,UACA,OACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,QACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,OACA,SACA,WACA,QACA,UACA,QACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,QACA,UACA,UACA,OACA,WACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,WACA,YACA,OACA,YACA,QACA,WACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,YACA,SACA,SACA,QACA,UACA,YACA,WACA,OACA,YACA,WACA,WACA,OACA,SACA,WACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,UACA,YACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,UACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,SACA,UACA,UACA,WACA,OACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,YACA,UACA,SACA,OACA,WACA,UACA,SACA,OACA,WACA,SACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,OACA,UACA,UACA,SACA,WACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,QACA,UACA,YACA,SACA,UACA,UACA,SACA,QACA,UACA,YACA,SACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,UACA,SACA,YACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,SACA,WACA,WACA,SACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,YACA,YACA,YACA,UACA,SACA,WACA,YACA,YACA,UACA,WACA,YACA,QACA,YACA,WACA,WACA,OACA,WACA,SACA,QACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,WACA,YACA,UACA,UACA,SACA,YACA,UACA,WACA,UACA,WACA,YACA,QACA,QACA,UACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,YACA,WACA,UACA,QACA,WACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,SACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,WACA,UACA,WACA,OACA,UACA,YACA,UACA,QACA,UACA,UACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,WACA,SACA,WACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,OACA,WACA,WACA,WACA,QACA,QACA,UACA,YACA,SACA,UACA,QACA,UACA,WACA,UACA,QACA,YACA,YACA,UACA,QACA,UACA,QACA,SACA,WACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,OACA,YACA,WACA,UACA,UACA,YACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,SACA,SACA,WACA,QACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,WACA,QACA,WACA,WACA,UACA,SACA,YACA,OACA,UACA,UACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,UACA,WACA,WACA,YACA,OACA,YACA,UACA,UACA,OACA,UACA,UACA,UACA,UACA,YACA,QACA,UACA,UACA,WACA,QACA,OACA,UACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,YACA,UACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,QACA,SACA,YACA,WACA,OACA,UACA,SACA,YACA,QACA,UACA,UACA,YACA,QACA,UACA,OACA,QACA,WACA,UACA,YACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,YACA,SACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,YACA,SACA,UACA,OACA,YACA,YACA,WACA,SACA,QACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,OACA,SACA,UACA,UACA,WACA,QACA,UACA,OACA,UACA,SACA,SACA,WACA,QACA,QACA,WACA,YACA,SACA,YACA,WACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,UACA,OACA,SACA,QACA,SACA,WACA,UACA,WACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,QACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,OACA,YACA,UACA,SACA,SACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,UACA,SACA,SACA,UACA,SACA,SACA,YACA,QACA,SACA,UACA,WACA,WACA,OACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,SACA,OACA,UACA,SACA,YACA,QACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,SACA,OACA,UACA,UACA,UACA,SACA,UACA,OACA,OACA,WACA,SACA,QACA,WACA,UACA,WACA,QACA,UACA,UACA,UACA,SACA,UACA,OACA,UACA,UACA,UACA,QACA,UACA,QACA,QACA,SACA,WACA,SACA,OACA,+PChgEAD,EAAAC,QAAA,CACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,YACA,SACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,QACA,UACA,WACA,QACA,UACA,YACA,WACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,YACA,SACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,WACA,QACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,WACA,UACA,SACA,QACA,YACA,WACA,SACA,SACA,UACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,SACA,YACA,QACA,WACA,WACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,YACA,UACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,UACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,WACA,UACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,UACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,SACA,aaACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,WACA,YACA,WACA,SACA,QACA,UACA,UACA,WACA,QACA,WACA,WACA,UACA,QACA,WACA,SACA,QACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,WACA,SACA,SACA,YACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,WACA,UACA,QACA,UACA,WACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,YACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,SACA,SACA,UACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,YACA,UACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,aACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,YACA,WACA,UACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,UACA,QACA,QACA,UACA,WACA,UACA,WACA,SACA,SACA,WACA,UACA,SACA,SACA,SACA,UACA,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,SACA,YACA,UACA,WACA,WACA,YACA,YACA,SACA,SACA,YACA,WACA,WACA,UACA,WACA,UACA,SACA,WACA,WACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,aACA,UACA,YACA,YACA,SACA,YACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,QACA,WACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,WACA,WACA,aACA,UACA,WACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,aACA,SACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,SACA,YACA,WACA,UACA,UACA,YACA,SACA,SACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,UACA,YACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,YACA,UACA,UACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,QACA,WACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,SACA,SACA,WACA,YACA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,QACA,UACA,WACA,QACA,QACA,QACA,UACA,QACA,UACA,SACA,UACA,WACA,SACA,UACA,QACA,UACA,SACA,QACA,WACA,SACA,UACA,QACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,aACA,SACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,UACA,QACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,SACA,QACA,SACA,YACA,aaACA,WACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,WACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,WACA,SACA,WACA,UACA,UACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,YACA,YACA,UACA,UACA,WACA,QACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,WACA,SACA,WACA,SACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,YACA,UACA,SACA,YACA,UACA,WACA,YACA,aACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,SACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,WACA,YACA,YACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,YACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,QACA,WACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,UACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,aACA,YACA,UACA,UACA,UACA,UACA,QACA,UACA,WACA,UACA,WACA,UACA,UACA,aACA,WACA,WACA,WACA,UACA,YACA,UACA,UACA,UACA,WACA,YACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,QACA,SACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,WACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,WACA,UACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,UACA,UACA,YACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,QACA,WACA,SACA,QACA,UACA,QACA,SACA,WACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,QACA,UACA,WACA,QACA,WACA,UACA,QACA,SACA,WACA,YACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,QACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,UACA,QACA,SACA,QACA,UACA,WACA,UACA,SACA,WACA,SACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,QACA,WACA,WACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,QACA,WACA,SACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,WACA,QACA,WACA,UACA,WACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,SACA,WACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,YACA,WACA,SACA,QACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,WACA,WACA,QACA,SACA,SACA,SACA,WACA,SACA,QACA,UACA,WACA,UACA,SACA,WACA,WACA,SACA,QACA,SACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,iQChgEAD,EAAAC,QAAA,CACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,WACA,QACA,SACA,UACA,SACA,SACA,QACA,WACA,SACA,SACA,QACA,WACA,UACA,WACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,QACA,WACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,cACA,UACA,QACA,UACA,QACA,QACA,QACA,YACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,WACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,YACA,QACA,SACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,ccACA,WACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,UACA,YACA,QACA,QACA,WACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,WACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,YACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,SACA,SACA,QACA,WACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,aACA,WACA,SACA,SACA,SACA,QACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,WACA,SACA,SACA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,YACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,YACA,UACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,WACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,YACA,WACA,SACA,YACA,QACA,QACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,WACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,YACA,SACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,SACA,YACA,SACA,SACA,QACA,YACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,aACA,QACA,QACA,YACA,QACA,SACA,WACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,QACA,QACA,QACA,UACA,WACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,WACA,SACA,SACA,QACA,YACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,SACA,YACA,UACA,QACA,UACA,YACA,SACA,UACA,SACA,UACA,QACA,QACA,SACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,acACA,UACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,YACA,SACA,SACA,UACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,QACA,WACA,WACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,QACA,UACA,WACA,QACA,QACA,YACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,WACA,SACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,UACA,SACA,WACA,QACA,WACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,UACA,WACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,SACA,SACA,WACA,QACA,SACA,UACA,QACA,SACA,SACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,YACA,QACA,UACA,QACA,QACA,WACA,QACA,SACA,QACA,QACA,WACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,SACA,WACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,WACA,QACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,QACA,UACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,YACA,QACA,SACA,SACA,QACA,QACA,QACA,UACA,YACA,SACA,SACA,QACA,QACA,WACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,SACA,cACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,acACA,QACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,WACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,SACA,UACA,QACA,cACA,WACA,QACA,SACA,QACA,SACA,SACA,UACA,WACA,YACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,WACA,QACA,UACA,SACA,SACA,UACA,aACA,QACA,SACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,SACA,WACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,aACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,aACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,YACA,QACA,WACA,UACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,QACA,UACA,SACA,WACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,QACA,SACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,WACA,QACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,+PChgsQChgEAD,EAAAC,QAAA,CACA,WACA,UACA,SACA,SACA,OACA,UACA,OACA,UACA,WACA,SACA,UACA,WACA,SACA,SACA,WACA,QACA,WACA,SACA,WACA,WACA,QACA,WACA,QACA,WACA,OACA,UACA,OACA,QACA,SACA,QACA,UACA,UACA,SACA,OACA,QACA,WACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,WACA,SACA,QACA,SACA,SACA,QACA,UACA,QACA,SACA,UACA,WACA,SACA,QACA,QACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,QACA,QACA,WACA,WACA,SACA,UACA,QACA,SACA,SACA,WACA,UACA,OACA,QACA,OACA,UACA,UACA,WACA,SACA,UACA,UACA,SACA,QACA,WACA,OACA,SACA,UACA,QACA,QACA,SACA,QACA,WACA,WACA,SACA,QACA,SACA,UACA,OACA,QACA,QACA,UACA,WACA,WACA,QACA,OACA,UACA,WACA,SACA,UACA,QACA,SACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,SACA,QACA,OACA,OACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,QACA,UACA,WACA,UACA,QACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,OACA,UACA,SACA,OACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,SACA,OACA,QACA,WACA,OACA,OACA,SACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,OACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,WACA,QACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,WACA,OACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,WACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,UACA,QACA,QACA,UACA,UACA,WACA,WACA,UACA,SACA,OACA,QACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,OACA,WACA,SACA,QACA,QACA,WACA,WACA,QACA,UACA,QACA,SACA,QACA,WACA,QACA,OACA,UACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,SACA,QACA,QACA,QACA,UACA,UACA,SACA,SACA,OACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,WACA,UACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,UACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,UACA,OACA,OACA,OACA,WACA,OACA,SACA,OACA,OACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,SACA,QACA,UACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,WACA,WACA,QACA,SACA,OACA,WACA,OACA,WACA,QACA,UACA,WACA,OACA,QACA,OACA,OACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,UACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,WACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,QACA,OACA,SACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,OACA,SACA,UACA,QACA,UACA,UACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,WACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,SACA,QACA,QACA,SACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,WACA,QACA,WACA,SACA,QACA,UACA,QACA,UACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,SACA,WACA,QACA,UACA,QACA,SACA,WACA,SACA,WACA,QACA,QACA,SACA,OACA,UACA,WACA,UACA,UACA,SACA,OACA,UACA,UACA,QACA,QACA,UACA,UACA,SACA,WACA,WACA,QACA,WACA,OACA,WACA,OACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,UACA,SACA,QACA,QACA,WACA,SACA,WACA,OACA,SACA,QACA,QACA,OACA,UACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,OACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,QACA,UACA,UACA,QACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,QACA,UACA,WACA,SACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,SACA,SACA,SACA,OACA,UACA,UACA,QACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,OACA,UACA,SACA,SACA,SACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,OACA,WACA,OACA,UACA,QACA,UACA,SACA,QACA,UACA,UACA,OACA,WACA,OACA,SACA,QACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,QACA,UACA,UACA,WACA,UACA,UACA,OACA,UACA,SACA,QACA,UACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,QACA,UACA,QACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,UACA,WACA,UACA,QACA,WACA,UACA,WACA,WACA,UACA,QACA,UACA,QACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,QACA,WACA,SACA,SACA,OACA,QACA,OACA,SACA,OACA,QACA,UACA,QACA,WACA,UACA,UACA,OACA,OACA,WACA,QACA,OACA,SACA,SACA,QACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,WACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,SACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,SACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,WACA,QACA,QACA,UACA,UACA,OACA,WACA,OACA,QACA,SACA,QACA,SACA,QACA,UACA,UACA,WACA,SACA,QACA,WACA,WACA,WACA,SACA,WACA,WACA,SACA,QACA,SACA,OACA,WACA,UACA,SACA,SACA,WACA,UACA,QACA,QACA,SACA,WACA,QACA,UACA,QACA,WACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,WACA,OACA,WACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,SACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,SACA,WACA,SACA,OACA,SACA,QACA,WACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,WACA,WACA,QACA,WACA,SACA,UACA,SACA,OACA,UACA,WACA,SACA,SACA,SACA,WACA,SACA,QACA,QACA,QACA,OACA,WACA,QACA,SACA,WACA,WACA,OACA,QACA,UACA,UACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,SACA,QACA,OACA,UACA,QACA,QACA,OACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,QACA,WACA,SACA,QACA,UACA,QACA,SACA,QACA,QACA,UACA,WACA,OACA,QACA,UACA,QACA,UACA,WACA,QACA,OACA,OACA,SACA,WACA,SACA,UACA,WACA,QACA,QACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,QACA,UACA,QACA,WACA,QACA,SACA,SACA,WACA,QACA,QACA,UACA,QACA,WACA,UACA,UACA,WACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,UACA,SACA,OACA,WACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,OACA,UACA,SACA,WACA,WACA,SACA,OACA,SACA,WACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,UACA,SACA,UACA,WACA,QACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,SACA,UACA,QACA,SACA,QACA,UACA,OACA,OACA,WACA,QACA,OACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,QACA,WACA,OACA,WACA,UACA,SACA,WACA,UACA,SACA,WACA,OACA,WACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,SACA,WACA,OACA,QACA,UACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,QACA,OACA,OACA,UACA,QACA,SACA,QACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,QACA,SACA,SACA,QACA,UACA,UACA,WACA,SACA,UACA,SACA,WACA,SACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,SACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,WACA,WACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,WACA,UACA,UACA,WACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,SACA,UACA,QACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,WACA,SACA,WACA,OACA,QACA,WACA,SACA,SACA,SACA,UACA,UACA,OACA,OACA,UACA,UACA,SACA,OACA,QACA,OACA,QACA,OACA,UACA,UACA,UACA,SACA,WACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,OACA,QACA,SACA,WACA,SACA,WACA,QACA,SACA,SACA,UACA,QACA,WACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,SACA,SACA,WACA,SACA,QACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,QACA,WACA,WACA,UACA,UACA,WACA,SACA,OACA,QACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,WACA,WACA,UACA,OACA,UACA,WACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,QACA,WACA,OACA,UACA,WACA,SACA,UACA,WACA,QACA,SACA,UACA,SACA,QACA,UACA,UACA,SACA,OACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,UACA,WACA,WACA,UACA,QACA,UACA,QACA,UACA,WACA,OACA,QACA,QACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,WACA,UACA,QACA,WACA,WACA,SACA,QACA,UACA,OACA,QACA,WACA,OACA,UACA,QACA,QACA,QACA,SACA,SACA,OACA,UACA,UACA,WACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,WACA,WACA,WACA,OACA,QACA,SACA,WACA,QACA,UACA,WACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,OACA,OACA,UACA,WACA,UACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,WACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,WACA,OACA,WACA,QACA,SACA,SACA,SACA,SACA,UACA,WACA,SACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,SACA,UACA,SACA,QACA,QACA,UACA,UACA,SACA,SACA,WACA,QACA,SACA,SACA,WACA,UACA,WACA,QACA,WACA,UACA,UACA,WACA,UACA,QACA,UACA,QACA,SACA,UACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,OACA,UACA,UACA,QACA,QACA,QACA,SACA,UACA,UACA,QACA,QACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,WACA,OACA,QACA,OACA,UACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,WACA,QACA,WACA,OACA,WACA,SACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,QACA,QACA,SACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,OACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,WACA,WACA,QACA,UACA,UACA,WACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,UACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,WACA,QACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,WACA,SACA,QACA,OACA,SACA,QACA,WACA,OACA,UACA,QACA,QACA,OACA,SACA,OACA,SACA,QACA,UACA,OACA,UACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,QACA,QACA,QACA,WACA,UACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,OACA,UACA,SACA,WACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,SACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,SACA,WACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,QACA,QACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,UACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,SACA,UACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,WACA,QACA,SACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,SACA,OACA,UACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,QACA,OACA,QACA,UACA,WACA,OACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,OACA,UACA,WACA,QACA,WACA,UACA,SACA,UACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,WACA,OACA,SACA,WACA,WACA,SACA,UACA,WACA,OACA,WACA,SACA,UACA,OACA,QACA,WACA,4PChgEAD,EAAAC,QAAA,CACA,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,6PChgEAD,EAAAC,QAAA,CACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,QACA,UACA,SACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,SACA,WACA,QACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,WACA,SACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,WACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,WACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,WACA,WACA,SACA,QACA,UACA,OACA,UACA,SACA,UACA,UACA,QACA,WACA,SACA,WACA,QACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,OACA,QACA,UACA,SACA,OACA,WACA,UACA,UACA,WACA,WACA,WACA,QACA,WACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,UACA,UACA,WACA,WACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,WACA,QACA,UACA,SACA,OACA,UACA,WACA,QACA,WACA,UACA,WACA,QACA,QACA,OACA,UACA,WACA,OACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,WACA,UACA,SACA,SACA,QACA,QACA,WACA,QACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,WACA,QACA,QACA,UACA,WACA,UACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,QACA,UACA,SACA,UACA,OACA,SACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,SACA,WACA,UACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,WACA,QACA,SACA,SACA,WACA,QACA,SACA,WACA,SACA,WACA,SACA,QACA,UACA,OACA,QACA,SACA,UACA,OACA,WACA,WACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,OACA,WACA,WACA,WACA,WACA,WACA,SACA,SACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,UACA,UACA,WACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,QACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,WACA,SACA,WACA,SACA,QACA,UACA,UACA,SACA,WACA,UACA,QACA,WACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,WACA,UACA,QACA,SACA,UACA,WACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,SACA,QACA,WACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,QACA,UACA,WACA,WACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,OACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,UACA,SACA,QACA,UACA,UACA,WACA,QACA,QACA,QACA,UACA,UACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,WACA,UACA,QACA,WACA,SACA,OACA,WACA,SACA,QACA,UACA,OACA,UACA,WACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,SACA,QACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,SACA,SACA,WACA,UACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,QACA,QACA,SACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,QACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,SACA,QACA,QACA,UACA,UACA,WACA,UACA,QACA,WACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,QACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,WACA,UACA,QACA,UACA,SACA,OACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,QACA,UACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,WACA,WACA,WACA,WACA,UACA,SACA,UACA,SACA,QACA,UACA,QACA,QACA,WACA,SACA,UACA,UACA,WACA,WACA,SACA,WACA,QACA,OACA,OACA,UACA,WACA,SACA,WACA,QACA,SACA,QACA,UACA,QACA,WACA,WACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,OACA,SACA,UACA,OACA,WACA,WACA,UACA,WACA,QACA,UACA,QACA,QACA,UACA,UACA,OACA,UACA,QACA,UACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,WACA,QACA,SACA,UACA,SACA,QACA,QACA,UACA,UACA,UACA,WACA,WACA,OACA,SACA,SACA,UACA,SACA,QACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,UACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,UACA,SACA,SACA,QACA,WACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,UACA,QACA,QACA,UACA,QACA,QACA,WACA,WACA,SACA,WACA,UACA,WACA,QACA,SACA,UACA,WACA,WACA,QACA,UACA,UACA,OACA,SACA,OACA,UACA,WACA,QACA,QACA,UACA,SACA,UACA,UACA,QACA,WACA,WACA,QACA,OACA,UACA,UACA,WACA,OACA,WACA,QACA,UACA,UACA,WACA,WACA,WACA,OACA,QACA,QACA,WACA,SACA,SACA,QACA,OACA,UACA,WACA,WACA,SACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,QACA,WACA,SACA,WACA,WACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,OACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,SACA,UACA,WACA,WACA,UACA,UACA,QACA,WACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,OACA,SACA,SACA,QACA,OACA,QACA,SACA,OACA,WACA,QACA,SACA,UACA,OACA,QACA,WACA,UACA,QACA,WACA,WACA,UACA,QACA,OACA,SACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,QACA,WACA,QACA,SACA,WACA,UACA,QACA,UACA,UACA,WACA,OACA,WACA,WACA,OACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,UACA,QACA,OACA,UACA,UACA,UACA,UACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,OACA,UACA,QACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,UACA,WACA,UACA,UACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,QACA,SACA,WACA,UACA,WACA,WACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,QACA,WACA,SACA,SACA,WACA,SACA,QACA,WACA,SACA,UACA,WACA,SACA,UACA,QACA,WACA,SACA,SACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,QACA,OACA,SACA,QACA,UACA,SACA,QACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,QACA,UACA,WACA,UACA,OACA,SACA,SACA,UACA,SACA,SACA,WACA,UACA,UACA,QACA,UACA,WACA,WACA,WACA,UACA,UACA,OACA,SACA,UACA,WACA,QACA,QACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,WACA,UACA,QACA,WACA,UACA,SACA,UACA,OACA,UACA,QACA,UACA,UACA,SACA,QACA,WACA,WACA,WACA,WACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,WACA,WACA,SACA,OACA,UACA,QACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,WACA,UACA,UACA,SACA,OACA,WACA,WACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,UACA,WACA,QACA,SACA,SACA,SACA,WACA,UACA,WACA,UACA,SACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,QACA,SACA,WACA,QACA,OACA,WACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,WACA,WACA,SACA,WACA,QACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,UACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,OACA,OACA,SACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,OACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,QACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,WACA,WACA,QACA,QACA,WACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,QACA,SACA,SACA,UACA,UACA,QACA,WACA,WACA,UACA,SACA,WACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,WACA,QACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,WACA,WACA,SACA,OACA,UACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,QACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,OACA,UACA,WACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,OACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,WACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,WACA,SACA,WACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,WACA,UACA,QACA,UACA,OACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,QACA,QACA,WACA,QACA,SACA,WACA,WACA,WACA,WACA,UACA,QACA,UACA,WACA,UACA,WACA,SACA,OACA,UACA,WACA,QACA,UACA,QACA,OACA,QACA,WACA,WACA,UACA,SACA,SACA,UACA,WACA,OACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,WACA,UACA,WACA,SACA,UACA,OACA,UACA,SACA,UACA,UACA,UACA,UACA,QACA,OACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,QACA,WACA,SACA,OACA,SACA,UACA,WACA,QACA,WACA,QACA,QACA,UACA,SACA,SACA,QACA,UACA,WACA,UACA,WACA,UACA,UACA,QACA,SACA,UACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,UACA,OACA,UACA,UACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,QACA,UACA,SACA,OACA,UACA,UACA,SACA,UACA,QACA,SACA,QACA,WACA,SACA,WACA,WACA,WACA,WACA,UACA,QACA,UACA,QACA,WACA,WACA,SACA,SACA,SACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,QACA,SACA,SACA,UACA,SACA,OACA,SACA,OACA,QACA,QACA,WACA,UACA,WACA,QACA,SACA,OACA,UACA,WACA,WACA,OACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,SACA,WACA,UACA,WACA,QACA,QACA,QACA,QACA,UACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,WACA,SACA,SACA,WACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,WACA,UACA,WACA,QACA,OACA,UACA,SACA,UACA,WACA,QACA,UACA,QACA,UACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,UACA,WACA,WACA,WACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,UACA,SACA,WACA,oQChgEAD,EAAAC,QAAA,CACA,SACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,OACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,UACA,OACA,WACA,SACA,UACA,SACA,OACA,SACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,SACA,OACA,SACA,UACA,UACA,OACA,UACA,QACA,SACA,QACA,WACA,UACA,UACA,QACA,QACA,SACA,OACA,WACA,SACA,UACA,UACA,OACA,QACA,UACA,QACA,QACA,SACA,QACA,WACA,SACA,QACA,OACA,SACA,UACA,QACA,SACA,OACA,UACA,MACA,QACA,SACA,UACA,WACA,OACA,SACA,UACA,QACA,UACA,OACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,UACA,UACA,QACA,OACA,SACA,QACA,MACA,WACA,QACA,WACA,SACA,QACA,OACA,QACA,QACA,WACA,OACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,UACA,SACA,UACA,WACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,UACA,QACA,SACA,SACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,WACA,SACA,OACA,QACA,SACA,UACA,OACA,SACA,MACA,UACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,OACA,QACA,WACA,SACA,SACA,UACA,OACA,UACA,UACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,QACA,QACA,OACA,SACA,QACA,UACA,OACA,QACA,OACA,QACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,WACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,SACA,OACA,QACA,WACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,SACA,SACA,SACA,OACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,MACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,UACA,UACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,QACA,UACA,MACA,QACA,SACA,SACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,MACA,UACA,OACA,WACA,WACA,SACA,SACA,SACA,SACA,MACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,WACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,UACA,SACA,UACA,WACA,QACA,QACA,OACA,SACA,QACA,QACA,MACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,OACA,QACA,WACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,UACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,WACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,OACA,OACA,WACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,WACA,SACA,OACA,WACA,SACA,QACA,MACA,UACA,QACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,QACA,OACA,UACA,QACA,SACA,MACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,MACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,QACA,WACA,SACA,QACA,UACA,OACA,SACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,SACA,UACA,UACA,OACA,SACA,WACA,QACA,QACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,MACA,OACA,UACA,OACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,OACA,UACA,SACA,UACA,SACA,QACA,OACA,SACA,SACA,OACA,UACA,OACA,UACA,SACA,QACA,SACA,QACA,SACA,WACA,QACA,QACA,UACA,SACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,UACA,WACA,SACA,QACA,QACA,UACA,WACA,OACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,OACA,SACA,QACA,SACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,UACA,WACA,SACA,SACA,QACA,QACA,QACA,WACA,UACA,QACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,QACA,SACA,UACA,OACA,WACA,WACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,OACA,SACA,UACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,SACA,OACA,QACA,QACA,UACA,OACA,WACA,MACA,QACA,QACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,QACA,SACA,UACA,QACA,UACA,QACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,UACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,MACA,SACA,OACA,QACA,UACA,QACA,SACA,QACA,OACA,UACA,OACA,MACA,UACA,UACA,UACA,OACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,QACA,QACA,QACA,OACA,UACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,OACA,WACA,QACA,QACA,UACA,QACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,UACA,SACA,SACA,QACA,OACA,OACA,UACA,UACA,OACA,QACA,QACA,OACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,WACA,UACA,QACA,MACA,QACA,UACA,UACA,OACA,OACA,OACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,OACA,MACA,MACA,SACA,SACA,QACA,OACA,OACA,OACA,SACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,WACA,SACA,OACA,UACA,OACA,QACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,MACA,WACA,QACA,UACA,SACA,SACA,MACA,QACA,SACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,QACA,QACA,SACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,MACA,QACA,UACA,UACA,WACA,QACA,QACA,UACA,UACA,QACA,UACA,QACA,QACA,OACA,WACA,SACA,WACA,QACA,QACA,QACA,UACA,OACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,UACA,UACA,OACA,SACA,OACA,SACA,UACA,QACA,OACA,SACA,WACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,UACA,OACA,QACA,UACA,WACA,UACA,YACA,MACA,UACA,QACA,UACA,MACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,UACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,YACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,UACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,OACA,SACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,UACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,SACA,UACA,UACA,QACA,QACA,UACA,OACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,MACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,MACA,QACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,UACA,OACA,UACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,SACA,SACA,MACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,OACA,SACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,WACA,UACA,SACA,SACA,UACA,OACA,QACA,OACA,QACA,UACA,UACA,SACA,SACA,QACA,WACA,WACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,SACA,UACA,UACA,OACA,UACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,WACA,QACA,WACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,UACA,UACA,UACA,SACA,YACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,WACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,SACA,WACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,YACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,WACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,MACA,QACA,WACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,OACA,QACA,OACA,UACA,OACA,OACA,SACA,SACA,UACA,UACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,WACA,SACA,OACA,UACA,QACA,QACA,UACA,MACA,QACA,QACA,UACA,UACA,UACA,QACA,WACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,OACA,SACA,QACA,QACA,SACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,SACA,OACA,WACA,MACA,QACA,OACA,SACA,OACA,UACA,OACA,OACA,UACA,QACA,UACA,MACA,OACA,SACA,SACA,QACA,OACA,QACA,UACA,OACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,SACA,OACA,SACA,SACA,YACA,SACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,MACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,WACA,OACA,SACA,SACA,QACA,UACA,QACA,MACA,QACA,UACA,OACA,UACA,UACA,QACA,QACA,SACA,QACA,WACA,QACA,WACA,QACA,QACA,SACA,QACA,OACA,UACA,UACA,SACA,QACA,QACA,OACA,MACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,+PChgEAD,EAAAC,QAAA,CACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,MACA,SACA,MACA,MACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,SACA,MACA,QACA,QACA,OACA,OACA,SACA,OACA,OACA,MACA,QACA,MACA,QACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,QACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,QACA,SACA,OACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,UACA,MACA,MACA,OACA,OACA,OACA,UACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,MACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,QACA,MACA,MACA,MACA,QACA,SACA,OACA,MACA,MACA,OACA,MACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,SACA,SACA,MACA,OACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,MACA,MACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,MACA,OACA,OACA,MACA,QACA,QACA,QACA,MACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,MACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,UACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,QACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,WACA,OACA,WACA,WACA,WACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,UACA,MACA,SACA,MACA,MACA,MACA,MACA,SACA,MACA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,MACA,QACA,MACA,OACA,OACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,MACA,OACA,MACA,MACA,QACA,QACA,MACA,QACA,MACA,QACA,MACA,MACA,MACA,OACA,QACA,SACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,WACA,QACA,MACA,QACA,MACA,QACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,UACA,QACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,SACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,SACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,MACA,QACA,MACA,OACA,MACA,QACA,OACA,OACA,MACA,MACA,OACA,QACA,MACA,MACA,QACA,UACA,OACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,QACA,SACA,OACA,SACA,MACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,QACA,OACA,MACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,MACA,UACA,MACA,MACA,MACA,OACA,SACA,OACA,MACA,OACA,MACA,QACA,OACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,UACA,QACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,SACA,OACA,MACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,MACA,SACA,MACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,MACA,SACA,MACA,WACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,QACA,OACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,UACA,SACA,MACA,OACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,SACA,OACA,SACA,QACA,OACA,MACA,QACA,MACA,QACA,QACA,SACA,OACA,SACA,QACA,MACA,OACA,QACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,WACA,OACA,MACA,MACA,MACA,OACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,WACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,QACA,QACA,UACA,OACA,QACA,OACA,SACA,MACA,MACA,QACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,QACA,MACA,OACA,QACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,SACA,SACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,OACA,MACA,QACA,OACA,QACA,MACA,MACA,SACA,QACA,QACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,WACA,OACA,SACA,SACA,OACA,OACA,MACA,QACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,QACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,UACA,MACA,MACA,MACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,MACA,OACA,SACA,SACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,QACA,QACA,OACA,MACA,MACA,MACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,SACA,OACA,OACA,MACA,QACA,MACA,MACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,UACA,QACA,OACA,OACA,SACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,MACA,OACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,SACA,MACA,WACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,UACA,MACA,QACA,QACA,QACA,OACA,MACA,QACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,QACA,QACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,OACA,OACA,SACA,OACA,MACA,MACA,MACA,MACA,MACA,QACA,SACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,OACA,QACA,OACA,SACA,OACA,OACA,QACA,MACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,WACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,MACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,UACA,QACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,OACA,MACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,QACA,QACA,OACA,QACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,SACA,OACA,MACA,SACA,OACA,MACA,MACA,OACA,OACA,QACA,UACA,UACA,MACA,MACA,OACA,SACA,OACA,OACA,MACA,MACA,QACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,MACA,QACA,MACA,WACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,QACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,UACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,SACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,QACA,MACA,kTC9/DAA,EAAAyV,WAAA2/C,GACA,SAAAC,EAAA56C,GACA,IAAAwJ,EACA,IACAA,EAAAmxC,EAAAC,GACA,MAAAx9C,GAEA,YADAwE,EAAAD,SAAA3B,EAAA5C,GAIAwE,EAAAD,SAAA3B,EAAA,KAAAwJ,IAIAjkB,EAAA0V,MAAA,CAAA0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","file":"../ExtensionSource/background-6.js","sourcesContent":["/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","'use strict'\nvar State = require('./state')\n\nfunction isInteger (i) {\n  return Number.isFinite(i)\n}\n\nfunction isFunction (f) {\n  return 'function' === typeof f\n}\n\nfunction maxDelay(fn, delay) {\n  if(!delay) return fn\n  return function (a, cb) {\n    var timer = setTimeout(function () {\n      fn(new Error('pull-reader: read exceeded timeout'), cb)\n    }, delay)\n    fn(a, function (err, value) {\n      clearTimeout(timer)\n      cb(err, value)\n    })\n\n  }\n\n}\n\nmodule.exports = function (timeout) {\n\n  var queue = [], read, readTimed, reading = false\n  var state = State(), ended, streaming, abort\n\n  function drain () {\n    while (queue.length) {\n      if(null == queue[0].length && state.has(1)) {\n        queue.shift().cb(null, state.get())\n      }\n      else if(state.has(queue[0].length)) {\n        var next = queue.shift()\n        next.cb(null, state.get(next.length))\n      }\n      else if(ended == true && queue[0].length && state.length < queue[0].length) {\n        var msg = 'stream ended with:'+state.length+' but wanted:'+queue[0].length\n        queue.shift().cb(new Error(msg))\n      }\n      else if(ended)\n        queue.shift().cb(ended)\n      else\n        return !!queue.length\n    }\n    //always read a little data\n    return queue.length || !state.has(1) || abort\n  }\n\n  function more () {\n    var d = drain()\n    if(d && !reading)\n    if(read && !reading && !streaming) {\n      reading = true\n      readTimed (null, function (err, data) {\n        reading = false\n        if(err) {\n          ended = err\n          return drain()\n        }\n        state.add(data)\n        more()\n      })\n    }\n  }\n\n  function reader (_read) {\n    if(abort) {\n      while(queue.length) queue.shift().cb(abort)\n      return cb && cb(abort)\n    }\n    readTimed = maxDelay(_read, timeout)\n    read = _read\n    more()\n  }\n\n  reader.abort = function (err, cb) {\n    abort = err || true\n    if(read) {\n      reading = true\n      read(abort, function () {\n        while(queue.length) queue.shift().cb(abort)\n        cb && cb(abort)\n      })\n    }\n    else\n      cb()\n  }\n\n  reader.read = function (len, _timeout, cb) {\n    if(isFunction(_timeout))\n      cb = _timeout, _timeout = timeout\n    if(isFunction(cb)) {\n      queue.push({length: isInteger(len) ? len : null, cb: cb})\n      more()\n    }\n    else {\n      //switch into streaming mode for the rest of the stream.\n      streaming = true\n      //wait for the current read to complete\n      return function (abort, cb) {\n        //if there is anything still in the queue,\n        if(reading || state.has(1)) {\n          if(abort) return read(abort, cb)\n          queue.push({length: null, cb: cb})\n          more()\n        }\n        else\n          maxDelay(read, _timeout)(abort, function (err, data) {\n            cb(err, data)\n          })\n      }\n    }\n  }\n\n  return reader\n}\n\n\n\n\n\n\n","module.exports = function bufferIndexOf(buf,search,offset){\n  offset = offset||0\n  \n  var m = 0;\n  var s = -1;\n  for(var i=offset;i<buf.length;++i){\n    if(buf[i] == search[m]) {\n      if(s == -1) s = i;\n      ++m;\n      if(m == search.length) break;\n    } else {\n      s = -1;\n      m = 0;\n    }\n  }\n\n  if (s > -1 && buf.length - s < search.length) return -1;\n  return s;\n}\n","'use strict'\n\n/**\n * Best record selector, for public key records.\n * Simply returns the first record, as all valid public key\n * records are equal.\n *\n * @param {Buffer} k\n * @param {Array<Buffer>} records\n * @returns {number}\n */\nconst publicKeySelector = (k, records) => {\n  return 0\n}\n\nmodule.exports = publicKeySelector\n","'use strict'\n\nconst setImmediate = require('async/setImmediate')\nconst multihashing = require('multihashing-async')\n\n/**\n * Validator for publick key records.\n * Verifies that the passed in record value is the PublicKey\n * that matches the passed in key.\n *\n * @param {Buffer} key - A valid key is of the form `'/pk/<keymultihash>'`\n * @param {Buffer} publicKey - The public key to validate against (protobuf encoded).\n * @param {function(Error)} callback\n * @returns {undefined}\n */\nconst validatePublicKeyRecord = (key, publicKey, callback) => {\n  const done = (err) => setImmediate(() => callback(err))\n\n  if (!Buffer.isBuffer(key)) {\n    return done(new Error('\"key\" must be a Buffer'))\n  }\n\n  if (key.length < 3) {\n    return done(new Error('invalid public key record'))\n  }\n\n  const prefix = key.slice(0, 4).toString()\n\n  if (prefix !== '/pk/') {\n    return done(new Error('key was not prefixed with /pk/'))\n  }\n\n  const keyhash = key.slice(4)\n\n  multihashing(publicKey, 'sha2-256', (err, publicKeyHash) => {\n    if (err) {\n      return done(err)\n    }\n\n    if (!keyhash.equals(publicKeyHash)) {\n      return done(new Error('public key does not match passed in key'))\n    }\n\n    done()\n  })\n}\n\nmodule.exports = {\n  func: validatePublicKeyRecord,\n  sign: false\n}\n","var exports = module.exports = require('./duplex')\n\nexports.source = require('./source');\nexports.sink = require('./sink');\nexports.createServer = require('./server')\nexports.connect = require('./client')\n","\n//normalize a ws url.\nvar URL = require('url')\nmodule.exports = function (url, location, protocolMap, defaultProtocol) {\n  protocolMap = protocolMap ||{}\n  /*\n\n  https://nodejs.org/dist/latest-v6.x/docs/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost\n\n  I didn't know this, but url.parse takes a 3rd\n  argument which interprets \"//foo.com\" as the hostname,\n  but without the protocol. by default, // is interpreted\n  as the path.\n\n  that lets us do what the wsurl module does.\n  https://www.npmjs.com/package/wsurl\n\n  but most of the time, I want to write js\n  that will work on localhost, and will work\n  on a server...\n\n  so I want to just do createWebSocket('/')\n  and get \"ws://mydomain.com/\"\n\n  */\n\n  var url = URL.parse(url, false, true)\n\n  var proto\n  if(url.protocol) proto = url.protocol\n  else {\n    proto = location.protocol ? location.protocol.replace(/:$/,'') : 'http'\n    proto = ((protocolMap)[proto] || defaultProtocol || proto) + ':'\n  }\n\n  //handle quirk in url package\n  if(url.host && url.host[0] === ':')\n    url.host = null\n\n  //useful for websockets\n  if(url.hostname) {\n    return URL.format({\n      protocol: proto,\n      slashes: true,\n      hostname: url.hostname,\n      port: url.port,\n      pathname: url.pathname,\n      search: url.search\n    })\n  }\n  else url.host = location.host\n\n  //included for completeness. would you want to do this?\n  if(url.port) {\n    return URL.format({\n      protocol: proto,\n      slashes: true,\n      host: location.hostname + ':' + url.port,\n      port: url.port,\n      pathname: url.pathname,\n      search: url.search\n    })\n  }\n\n  //definately useful for websockets\n  if(url.pathname) {\n    return URL.format({\n      protocol: proto,\n      slashes: true,\n      host: url.host,\n      pathname: url.pathname,\n      search: url.search\n    })\n  }\n  else\n    url.pathname = location.pathname\n\n  //included for completeness. would you want to do this?\n  if(url.search) {\n    return URL.format({\n      protocol: proto,\n      slashes: true,\n      host: url.host,\n      pathname: url.pathname,\n      search: url.search\n    })\n  }\n  else url.search = location.search\n\n  return url.format(url)\n}\n\n\n\n\n\n","var ready = require('./ready');\n\n/**\n  ### `sink(socket, opts?)`\n\n  Create a pull-stream `Sink` that will write data to the `socket`.\n\n  <<< examples/write.js\n\n**/\n\nvar nextTick = typeof setImmediate !== 'undefined' ? setImmediate : process.nextTick\n\nmodule.exports = function(socket, opts) {\n  return function (read) {\n    opts = opts || {}\n    var closeOnEnd = opts.closeOnEnd !== false;\n    var onClose = 'function' === typeof opts ? opts : opts.onClose;\n\n    function next(end, data) {\n      // if the stream has ended, simply return\n      if (end) {\n        if (closeOnEnd && socket.readyState <= 1) {\n          if(onClose)\n            socket.addEventListener('close', function (ev) {\n              if(ev.wasClean || ev.code === 1006) onClose()\n              else {\n                var err = new Error('ws error')\n                err.event = ev\n                onClose(err)\n              }\n            });\n\n          socket.close()\n        }\n\n        return;\n      }\n\n      // socket ready?\n      ready(socket, function(end) {\n        if (end) {\n          return read(end, function () {});\n        }\n        socket.send(data);\n        nextTick(function() {\n          read(null, next);\n        });\n      });\n    }\n\n    read(null, next);\n  }\n}\n","/**\n  ### `source(socket)`\n\n  Create a pull-stream `Source` that will read data from the `socket`.\n\n  <<< examples/read.js\n\n**/\nvar Buffer = require('safe-buffer').Buffer;\n\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nmodule.exports = function(socket, cb) {\n  var buffer = [];\n  var receiver;\n  var ended;\n  var started = false;\n  socket.addEventListener('message', function(evt) {\n    var data = evt.data;\n    if (isArrayBuffer(data)) {\n      data = Buffer.from(data);\n    }\n\n    if (receiver) {\n      return receiver(null, data);\n    }\n\n    buffer.push(data);\n  });\n\n  socket.addEventListener('close', function(evt) {\n    if (ended) return\n    if (receiver) {\n      receiver(ended = true)\n    }\n  });\n\n  socket.addEventListener('error', function (evt) {\n    if (ended) return;\n    ended = evt;\n    if(!started) {\n      started = true\n      cb && cb(evt)\n    }\n    if (receiver) {\n      receiver(ended)\n    }\n  });\n\n  socket.addEventListener('open', function (evt) {\n    if(started || ended) return\n    started = true\n  })\n\n  function read(abort, cb) {\n    receiver = null;\n\n    //if stream has already ended.\n    if (ended)\n      return cb(ended);\n\n    // if ended, abort\n    else if (abort) {\n      //this will callback when socket closes\n      receiver = cb\n      socket.close()\n    }\n\n    // return data, if any\n    else if(buffer.length > 0)\n      cb(null, buffer.shift());\n\n    // wait for more data (or end)\n    else\n      receiver = cb;\n\n  };\n\n  return read;\n};\n","'use strict'\n\n/**\n * A list of unique peer infos.\n */\nclass PeerList {\n  constructor () {\n    this.list = []\n  }\n\n  /**\n   * Add a new info. Returns `true` if it was a new one\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n  push (info) {\n    if (!this.has(info)) {\n      this.list.push(info)\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Check if this PeerInfo is already in here.\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n  has (info) {\n    const match = this.list.find((i) => i.id.isEqual(info.id))\n    return Boolean(match)\n  }\n\n  /**\n   * Get the list as an array.\n   *\n   * @returns {Array<PeerInfo>}\n   */\n  toArray () {\n    return this.list.slice()\n  }\n\n  /**\n   * Remove the last element\n   *\n   * @returns {PeerInfo}\n   */\n  pop () {\n    return this.list.pop()\n  }\n\n  /**\n   * The length of the list\n   *\n   * @type {number}\n   */\n  get length () {\n    return this.list.length\n  }\n}\n\nmodule.exports = PeerList\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict'\n\nconst distance = require('xor-distance')\nconst utils = require('./utils')\nconst map = require('async/map')\n\n/**\n * Maintains a list of peerIds sorted by distance from a DHT key.\n */\nclass PeerDistanceList {\n  /**\n   * Creates a new PeerDistanceList.\n   *\n   * @param {Buffer} originDhtKey - the DHT key from which distance is calculated\n   * @param {number} capacity - the maximum size of the list\n   */\n  constructor (originDhtKey, capacity) {\n    this.originDhtKey = originDhtKey\n    this.capacity = capacity\n    this.peerDistances = []\n  }\n\n  /**\n   * The length of the list\n   */\n  get length () {\n    return this.peerDistances.length\n  }\n\n  /**\n   * The peerIds in the list, in order of distance from the origin key\n   */\n  get peers () {\n    return this.peerDistances.map(pd => pd.peerId)\n  }\n\n  /**\n   * Add a peerId to the list.\n   *\n   * @param {PeerId} peerId\n   * @param {function(Error)} callback\n   * @returns {void}\n   */\n  add (peerId, callback) {\n    if (this.peerDistances.find(pd => pd.peerId.id.equals(peerId.id))) {\n      return callback()\n    }\n\n    utils.convertPeerId(peerId, (err, dhtKey) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const el = {\n        peerId,\n        distance: distance(this.originDhtKey, dhtKey)\n      }\n\n      this.peerDistances.push(el)\n      this.peerDistances.sort((a, b) => distance.compare(a.distance, b.distance))\n      this.peerDistances = this.peerDistances.slice(0, this.capacity)\n\n      callback()\n    })\n  }\n\n  /**\n   * Indicates whether any of the peerIds passed as a parameter are closer\n   * to the origin key than the furthest peerId in the PeerDistanceList.\n   *\n   * @param {Array<PeerId>} peerIds\n   * @param {function(Error, Boolean)} callback\n   * @returns {void}\n   */\n  anyCloser (peerIds, callback) {\n    if (!peerIds.length) {\n      return callback(null, false)\n    }\n\n    if (!this.length) {\n      return callback(null, true)\n    }\n\n    map(peerIds, (peerId, cb) => utils.convertPeerId(peerId, cb), (err, dhtKeys) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const furthestDistance = this.peerDistances[this.peerDistances.length - 1].distance\n      for (const dhtKey of dhtKeys) {\n        const keyDistance = distance(this.originDhtKey, dhtKey)\n        if (distance.compare(keyDistance, furthestDistance) < 0) {\n          return callback(null, true)\n        }\n      }\n      return callback(null, false)\n    })\n  }\n}\n\nmodule.exports = PeerDistanceList\n","'use strict'\n\nconst queue = require('async/queue')\nconst promisify = require('promisify-es6')\nconst promiseToCallback = require('promise-to-callback')\n\nclass WorkerQueue {\n  /**\n   * Creates a new WorkerQueue.\n   *\n   * @param {DHT} dht\n   * @param {Run} run\n   * @param {Object} path\n   * @param {function} log\n   */\n  constructor (dht, run, path, log) {\n    this.dht = dht\n    this.run = run\n    this.path = path\n    this.log = log\n\n    this.concurrency = this.dht.concurrency\n    this.queue = this.setupQueue()\n    // a container for resolve/reject functions that will be populated\n    // when execute() is called\n    this.execution = null\n  }\n\n  /**\n   * Create the underlying async queue.\n   *\n   * @returns {Object}\n   */\n  setupQueue () {\n    const q = queue((peer, cb) => {\n      promiseToCallback(this.processNext(peer))(cb)\n    }, this.concurrency)\n\n    // If there's an error, stop the worker\n    q.error = (err) => {\n      this.log.error('queue', err)\n      this.stop(err)\n    }\n\n    // When all peers in the queue have been processed, stop the worker\n    q.drain = () => {\n      this.log('queue:drain')\n      this.stop()\n    }\n\n    // When a space opens up in the queue, add some more peers\n    q.unsaturated = () => {\n      if (this.running) {\n        this.fill()\n      }\n    }\n\n    q.buffer = 0\n\n    return q\n  }\n\n  /**\n   * Stop the worker, optionally providing an error to pass to the worker's\n   * callback.\n   *\n   * @param {Error} err\n   */\n  stop (err) {\n    if (!this.running) {\n      return\n    }\n\n    this.running = false\n    this.queue.kill()\n    this.log('worker:stop, %d workers still running', this.run.workers.filter(w => w.running).length)\n    if (err) {\n      this.execution.reject(err)\n    } else {\n      this.execution.resolve()\n    }\n  }\n\n  /**\n   * Use the queue from async to keep `concurrency` amount items running\n   * per path.\n   *\n   * @return {Promise<void>}\n   */\n  async execute () {\n    this.running = true\n    // store the promise resolution functions to be resolved at end of queue\n    this.execution = {}\n    const execPromise = new Promise((resolve, reject) => Object.assign(this.execution, { resolve, reject }))\n    // start queue\n    this.fill()\n    // await completion\n    await execPromise\n  }\n\n  /**\n   * Add peers to the worker queue until there are enough to satisfy the\n   * worker queue concurrency.\n   * Note that we don't want to take any more than those required to satisfy\n   * concurrency from the peers-to-query queue, because we always want to\n   * query the closest peers to the key first, and new peers are continously\n   * being added to the peers-to-query queue.\n   */\n  fill () {\n    // Note:\n    // - queue.running(): number of items that are currently running\n    // - queue.length(): the number of items that are waiting to be run\n    while (this.queue.running() + this.queue.length() < this.concurrency &&\n           this.path.peersToQuery.length > 0) {\n      this.queue.push(this.path.peersToQuery.dequeue())\n    }\n  }\n\n  /**\n   * Process the next peer in the queue\n   *\n   * @param {PeerId} peer\n   * @returns {Promise<void>}\n   */\n  async processNext (peer) {\n    if (!this.running) {\n      return\n    }\n\n    // The paths must be disjoint, meaning that no two paths in the Query may\n    // traverse the same peer\n    if (this.run.peersSeen.has(peer)) {\n      return\n    }\n\n    // Check if we've queried enough peers already\n    let continueQuerying, continueQueryingError\n    try {\n      continueQuerying = await this.run.continueQuerying(this)\n    } catch (err) {\n      continueQueryingError = err\n    }\n\n    // Abort and ignore any error if we're no longer running\n    if (!this.running) {\n      return\n    }\n\n    if (continueQueryingError) {\n      throw continueQueryingError\n    }\n\n    // No peer we're querying is closer, stop the queue\n    // This will cause queries that may potentially result in\n    // closer nodes to be ended, but it reduces overall query time\n    if (!continueQuerying) {\n      this.stop()\n      return\n    }\n\n    // Check if another path has queried this peer in the mean time\n    if (this.run.peersSeen.has(peer)) {\n      return\n    }\n    this.run.peersSeen.add(peer)\n\n    // Execute the query on the next peer\n    this.log('queue:work')\n    let state, execError\n    try {\n      state = await this.execQuery(peer)\n    } catch (err) {\n      execError = err\n    }\n\n    // Abort and ignore any error if we're no longer running\n    if (!this.running) {\n      return\n    }\n\n    this.log('queue:work:done', execError, state)\n\n    if (execError) {\n      throw execError\n    }\n\n    // If query is complete, stop all workers.\n    // Note: run.stop() calls stop() on all the workers, which kills the\n    // queue and resolves execution\n    if (state && state.queryComplete) {\n      this.log('query:complete')\n      this.run.stop()\n      return\n    }\n\n    // If path is complete, just stop this worker.\n    // Note: this.stop() kills the queue and resolves execution\n    if (state && state.pathComplete) {\n      this.stop()\n    }\n  }\n\n  /**\n   * Execute a query on the next peer.\n   *\n   * @param {PeerId} peer\n   * @returns {Promise<void>}\n   * @private\n   */\n  async execQuery (peer) {\n    let res, queryError\n    try {\n      res = await this.path.queryFunc(peer)\n    } catch (err) {\n      queryError = err\n    }\n\n    // Abort and ignore any error if we're no longer running\n    if (!this.running) {\n      return\n    }\n\n    if (queryError) {\n      this.run.errors.push(queryError)\n      return\n    }\n\n    // Add the peer to the closest peers we have successfully queried\n    await promisify(cb => this.run.peersQueried.add(peer, cb))()\n\n    // If the query indicates that this path or the whole query is complete\n    // set the path result and bail out\n    if (res.pathComplete || res.queryComplete) {\n      this.path.res = res\n      return {\n        pathComplete: res.pathComplete,\n        queryComplete: res.queryComplete\n      }\n    }\n\n    // If there are closer peers to query, add them to the queue\n    if (res.closerPeers && res.closerPeers.length > 0) {\n      await Promise.all(res.closerPeers.map(async (closer) => {\n        // don't add ourselves\n        if (this.dht._isSelf(closer.id)) {\n          return\n        }\n        closer = this.dht.peerBook.put(closer)\n        this.dht._peerDiscovered(closer)\n        await this.path.addPeerToQuery(closer.id)\n      }))\n    }\n  }\n}\n\nmodule.exports = WorkerQueue\n","'use strict'\n\nconst PeerQueue = require('../peer-queue')\nconst utils = require('../utils')\n\n// TODO: Temporary until parallel dial in Switch have a proper\n// timeout. Requires async/await refactor of transports and\n// dial abort logic. This gives us 30s to complete the `queryFunc`.\n// This should help reduce the high end call times of queries\nconst QUERY_FUNC_TIMEOUT = 30e3\n\n/**\n * Manages a single Path through the DHT.\n */\nclass Path {\n  /**\n   * Creates a Path.\n   *\n   * @param {Run} run\n   * @param {queryFunc} queryFunc\n   */\n  constructor (run, queryFunc) {\n    this.run = run\n    this.queryFunc = utils.withTimeout(queryFunc, QUERY_FUNC_TIMEOUT)\n    if (!this.queryFunc) throw new Error('Path requires a `queryFn` to be specified')\n    if (typeof this.queryFunc !== 'function') throw new Error('Path expected `queryFn` to be a function. Got ' + typeof this.queryFunc)\n\n    /**\n     * @type {Array<PeerId>}\n     */\n    this.initialPeers = []\n\n    /**\n     * @type {PeerQueue}\n     */\n    this.peersToQuery = null\n  }\n\n  /**\n   * Add a peer to the set of peers that are used to intialize the path.\n   *\n   * @param {PeerId} peer\n   */\n  addInitialPeer (peer) {\n    this.initialPeers.push(peer)\n  }\n\n  /**\n   * Execute the path.\n   *\n   * @returns {Promise}\n   *\n   */\n  async execute () {\n    // Create a queue of peers ordered by distance from the key\n    const queue = await PeerQueue.fromKey(this.run.query.key)\n    // Add initial peers to the queue\n    this.peersToQuery = queue\n    await Promise.all(this.initialPeers.map(peer => this.addPeerToQuery(peer)))\n    await this.run.workerQueue(this)\n  }\n\n  /**\n   * Add a peer to the peers to be queried.\n   *\n   * @param {PeerId} peer\n   * @returns {Promise<void>}\n   */\n  async addPeerToQuery (peer) {\n    // Don't add self\n    if (this.run.query.dht._isSelf(peer)) {\n      return\n    }\n\n    // The paths must be disjoint, meaning that no two paths in the Query may\n    // traverse the same peer\n    if (this.run.peersSeen.has(peer)) {\n      return\n    }\n\n    await this.peersToQuery.enqueue(peer)\n  }\n}\n\nmodule.exports = Path\n","'use strict'\n\nconst T = require('../../message').TYPES\n\nmodule.exports = (dht) => {\n  const handlers = {\n    [T.GET_VALUE]: require('./get-value')(dht),\n    [T.PUT_VALUE]: require('./put-value')(dht),\n    [T.FIND_NODE]: require('./find-node')(dht),\n    [T.ADD_PROVIDER]: require('./add-provider')(dht),\n    [T.GET_PROVIDERS]: require('./get-providers')(dht),\n    [T.PING]: require('./ping')(dht)\n  }\n\n  /**\n   * Get the message handler matching the passed in type.\n   *\n   * @param {number} type\n   *\n   * @returns {function(PeerInfo, Message, function(Error, Message))}\n   *\n   * @private\n   */\n  return function getMessageHandler (type) {\n    return handlers[type]\n  }\n}\n","'use strict'\n\n//a pair of pull streams where one drains from the other\nmodule.exports = function () {\n  var _read, waiting\n  function sink (read) {\n    if('function' !== typeof read)\n      throw new Error('read must be function')\n\n    if(_read)\n      throw new Error('already piped')\n    _read = read\n    if(waiting) {\n      var _waiting = waiting\n      waiting = null\n      _read.apply(null, _waiting)\n    }\n  }\n  function source (abort, cb) {\n    if(_read)\n      _read(abort, cb)\n    else\n      waiting = [abort, cb]\n  }\n\n  return {\n    source: source, sink: sink\n  }\n}\n\n","'use strict'\n\nconst protons = require('protons')\nconst PeerId = require('peer-id')\nconst crypto = require('libp2p-crypto')\nconst parallel = require('async/parallel')\nconst waterfall = require('async/waterfall')\nconst debug = require('debug')\nconst log = debug('libp2p:secio')\nlog.error = debug('libp2p:secio:error')\n\nconst pbm = protons(require('./secio.proto'))\n\nconst support = require('../support')\n\n// nonceSize is the size of our nonces (in bytes)\nconst nonceSize = 16\n\nexports.createProposal = (state) => {\n  state.proposal.out = {\n    rand: crypto.randomBytes(nonceSize),\n    pubkey: state.key.local.public.bytes,\n    exchanges: support.exchanges.join(','),\n    ciphers: support.ciphers.join(','),\n    hashes: support.hashes.join(',')\n  }\n\n  state.proposalEncoded.out = pbm.Propose.encode(state.proposal.out)\n  return state.proposalEncoded.out\n}\n\nexports.createExchange = (state, callback) => {\n  crypto.keys.generateEphemeralKeyPair(state.protocols.local.curveT, (err, res) => {\n    if (err) {\n      return callback(err)\n    }\n\n    state.ephemeralKey.local = res.key\n    state.shared.generate = res.genSharedKey\n\n    // Gather corpus to sign.\n    const selectionOut = Buffer.concat([\n      state.proposalEncoded.out,\n      state.proposalEncoded.in,\n      state.ephemeralKey.local\n    ])\n\n    state.key.local.sign(selectionOut, (err, sig) => {\n      if (err) {\n        return callback(err)\n      }\n\n      state.exchange.out = {\n        epubkey: state.ephemeralKey.local,\n        signature: sig\n      }\n\n      callback(null, pbm.Exchange.encode(state.exchange.out))\n    })\n  })\n}\n\nexports.identify = (state, msg, callback) => {\n  log('1.1 identify')\n\n  state.proposalEncoded.in = msg\n  state.proposal.in = pbm.Propose.decode(msg)\n  const pubkey = state.proposal.in.pubkey\n\n  state.key.remote = crypto.keys.unmarshalPublicKey(pubkey)\n\n  PeerId.createFromPubKey(pubkey.toString('base64'), (err, remoteId) => {\n    if (err) {\n      return callback(err)\n    }\n\n    // If we know who we are dialing to, double check\n    if (state.id.remote) {\n      if (state.id.remote.toB58String() !== remoteId.toB58String()) {\n        return callback(new Error('dialed to the wrong peer, Ids do not match'))\n      }\n    } else {\n      state.id.remote = remoteId\n    }\n\n    log('1.1 identify - %s - identified remote peer as %s', state.id.local.toB58String(), state.id.remote.toB58String())\n    callback()\n  })\n}\n\nexports.selectProtocols = (state, callback) => {\n  log('1.2 selection')\n\n  const local = {\n    pubKeyBytes: state.key.local.public.bytes,\n    exchanges: support.exchanges,\n    hashes: support.hashes,\n    ciphers: support.ciphers,\n    nonce: state.proposal.out.rand\n  }\n\n  const remote = {\n    pubKeyBytes: state.proposal.in.pubkey,\n    exchanges: state.proposal.in.exchanges.split(','),\n    hashes: state.proposal.in.hashes.split(','),\n    ciphers: state.proposal.in.ciphers.split(','),\n    nonce: state.proposal.in.rand\n  }\n\n  support.selectBest(local, remote, (err, selected) => {\n    if (err) {\n      return callback(err)\n    }\n    // we use the same params for both directions (must choose same curve)\n    // WARNING: if they dont SelectBest the same way, this won't work...\n    state.protocols.remote = {\n      order: selected.order,\n      curveT: selected.curveT,\n      cipherT: selected.cipherT,\n      hashT: selected.hashT\n    }\n\n    state.protocols.local = {\n      order: selected.order,\n      curveT: selected.curveT,\n      cipherT: selected.cipherT,\n      hashT: selected.hashT\n    }\n    callback()\n  })\n}\n\nexports.verify = (state, msg, callback) => {\n  log('2.1. verify')\n\n  state.exchange.in = pbm.Exchange.decode(msg)\n  state.ephemeralKey.remote = state.exchange.in.epubkey\n\n  const selectionIn = Buffer.concat([\n    state.proposalEncoded.in,\n    state.proposalEncoded.out,\n    state.ephemeralKey.remote\n  ])\n\n  state.key.remote.verify(selectionIn, state.exchange.in.signature, (err, sigOk) => {\n    if (err) {\n      return callback(err)\n    }\n\n    if (!sigOk) {\n      return callback(new Error('Bad signature'))\n    }\n\n    log('2.1. verify - signature verified')\n    callback()\n  })\n}\n\nexports.generateKeys = (state, callback) => {\n  log('2.2. keys')\n\n  waterfall([\n    (cb) => state.shared.generate(state.exchange.in.epubkey, cb),\n    (secret, cb) => {\n      state.shared.secret = secret\n\n      crypto.keys.keyStretcher(\n        state.protocols.local.cipherT,\n        state.protocols.local.hashT,\n        state.shared.secret,\n        cb\n      )\n    },\n    (keys, cb) => {\n      // use random nonces to decide order.\n      if (state.protocols.local.order > 0) {\n        state.protocols.local.keys = keys.k1\n        state.protocols.remote.keys = keys.k2\n      } else if (state.protocols.local.order < 0) {\n        // swap\n        state.protocols.local.keys = keys.k2\n        state.protocols.remote.keys = keys.k1\n      } else {\n        // we should've bailed before state. but if not, bail here.\n        return cb(new Error('you are trying to talk to yourself'))\n      }\n\n      log('2.3. mac + cipher')\n\n      parallel([\n        (_cb) => support.makeMacAndCipher(state.protocols.local, _cb),\n        (_cb) => support.makeMacAndCipher(state.protocols.remote, _cb)\n      ], cb)\n    }\n  ], callback)\n}\n\nexports.verifyNonce = (state, n2) => {\n  const n1 = state.proposal.out.rand\n\n  if (n1.equals(n2)) return\n\n  throw new Error(\n    `Failed to read our encrypted nonce: ${n1.toString('hex')} != ${n2.toString('hex')}`\n  )\n}\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst map = require('pull-stream/throughs/map')\nconst asyncMap = require('pull-stream/throughs/async-map')\nconst lp = require('pull-length-prefixed')\n\nconst lpOpts = {\n  fixed: true,\n  bytes: 4\n}\n\nexports.createBoxStream = (cipher, mac) => {\n  return pull(\n    ensureBuffer(),\n    asyncMap((chunk, cb) => {\n      cipher.encrypt(chunk, (err, data) => {\n        if (err) {\n          return cb(err)\n        }\n\n        mac.digest(data, (err, digest) => {\n          if (err) {\n            return cb(err)\n          }\n\n          cb(null, Buffer.concat([data, digest]))\n        })\n      })\n    }),\n    lp.encode(lpOpts)\n  )\n}\n\nexports.createUnboxStream = (decipher, mac) => {\n  return pull(\n    ensureBuffer(),\n    lp.decode(lpOpts),\n    asyncMap((chunk, cb) => {\n      const l = chunk.length\n      const macSize = mac.length\n\n      if (l < macSize) {\n        return cb(new Error(`buffer (${l}) shorter than MAC size (${macSize})`))\n      }\n\n      const mark = l - macSize\n      const data = chunk.slice(0, mark)\n      const macd = chunk.slice(mark)\n\n      mac.digest(data, (err, expected) => {\n        if (err) {\n          return cb(err)\n        }\n\n        if (!macd.equals(expected)) {\n          return cb(new Error(`MAC Invalid: ${macd.toString('hex')} != ${expected.toString('hex')}`))\n        }\n\n        // all good, decrypt\n        decipher.decrypt(data, (err, decrypted) => {\n          if (err) {\n            return cb(err)\n          }\n\n          cb(null, decrypted)\n        })\n      })\n    })\n  )\n}\n\nfunction ensureBuffer () {\n  return map((c) => {\n    if (typeof c === 'string') {\n      return Buffer.from(c, 'utf-8')\n    }\n\n    return c\n  })\n}\n","'use strict'\n\nconst mh = require('multihashing-async')\nconst lp = require('pull-length-prefixed')\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst collect = require('pull-stream/sinks/collect')\nconst crypto = require('libp2p-crypto')\nconst parallel = require('async/parallel')\n\nexports.exchanges = [\n  'P-256',\n  'P-384',\n  'P-521'\n]\n\nexports.ciphers = [\n  'AES-256',\n  'AES-128'\n]\n\nexports.hashes = [\n  'SHA256',\n  'SHA512'\n]\n\n// Determines which algorithm to use.  Note:  f(a, b) = f(b, a)\nexports.theBest = (order, p1, p2) => {\n  let first\n  let second\n\n  if (order < 0) {\n    first = p2\n    second = p1\n  } else if (order > 0) {\n    first = p1\n    second = p2\n  } else {\n    return p1[0]\n  }\n\n  for (let firstCandidate of first) {\n    for (let secondCandidate of second) {\n      if (firstCandidate === secondCandidate) {\n        return firstCandidate\n      }\n    }\n  }\n\n  throw new Error('No algorithms in common!')\n}\n\nexports.makeMacAndCipher = (target, callback) => {\n  parallel([\n    (cb) => makeMac(target.hashT, target.keys.macKey, cb),\n    (cb) => makeCipher(target.cipherT, target.keys.iv, target.keys.cipherKey, cb)\n  ], (err, macAndCipher) => {\n    if (err) {\n      return callback(err)\n    }\n\n    target.mac = macAndCipher[0]\n    target.cipher = macAndCipher[1]\n    callback()\n  })\n}\n\nfunction makeMac (hash, key, callback) {\n  crypto.hmac.create(hash, key, callback)\n}\n\nfunction makeCipher (cipherType, iv, key, callback) {\n  if (cipherType === 'AES-128' || cipherType === 'AES-256') {\n    return crypto.aes.create(key, iv, callback)\n  }\n\n  // TODO: figure out if Blowfish is needed and if so find a library for it.\n  callback(new Error(`unrecognized cipher type: ${cipherType}`))\n}\n\nexports.selectBest = (local, remote, cb) => {\n  exports.digest(Buffer.concat([\n    remote.pubKeyBytes,\n    local.nonce\n  ]), (err, oh1) => {\n    if (err) {\n      return cb(err)\n    }\n\n    exports.digest(Buffer.concat([\n      local.pubKeyBytes,\n      remote.nonce\n    ]), (err, oh2) => {\n      if (err) {\n        return cb(err)\n      }\n\n      const order = Buffer.compare(oh1, oh2)\n\n      if (order === 0) {\n        return cb(new Error('you are trying to talk to yourself'))\n      }\n\n      cb(null, {\n        curveT: exports.theBest(order, local.exchanges, remote.exchanges),\n        cipherT: exports.theBest(order, local.ciphers, remote.ciphers),\n        hashT: exports.theBest(order, local.hashes, remote.hashes),\n        order\n      })\n    })\n  })\n}\n\nexports.digest = (buf, cb) => {\n  mh.digest(buf, 'sha2-256', buf.length, cb)\n}\n\nexports.write = function write (state, msg, cb) {\n  cb = cb || (() => {})\n  pull(\n    values([msg]),\n    lp.encode({ fixed: true, bytes: 4 }),\n    collect((err, res) => {\n      if (err) {\n        return cb(err)\n      }\n      state.shake.write(res[0])\n      cb()\n    })\n  )\n}\n\nexports.read = function read (reader, cb) {\n  lp.decodeFromReader(reader, { fixed: true, bytes: 4 }, cb)\n}\n","'use strict'\n\nexports.ERR_WS_STAR_WEBSOCKET_CONNECTION = 'ERR_WS_STAR_WEBSOCKET_CONNECTION'\n","'use strict'\n\n// socket.io-pull-stream\nconst Queue = require('data-queue')\nconst uuid = require('uuid')\nconst pull = require('pull-stream')\nconst sioname = (type, name) => 'socket.io-pull-stream.' + type + (name ? '.' + name : '')\nconst debug = require('debug')\nconst _log = debug('socket.io-pull-stream')\n\nfunction doCodec (codec, data) {\n  if (data == null) return data\n  try {\n    return codec(data)\n  } catch (e) {\n    console.error('Codec Error')\n    console.error(e)\n    return false\n  }\n}\n\nconst codecs = {\n  hex: {\n    encode: v => v.toString('hex'),\n    decode: v => Buffer.from(v, 'hex')\n  },\n  plain: {\n    encode: v => v,\n    decode: v => v\n  },\n  buffer: { // always do Buffer.from because browsers\n    encode: v => Buffer.from(v),\n    decode: v => Buffer.from(v)\n  }\n}\n\nfunction getCodec (c) {\n  if (!c) c = 'plain'\n  if (typeof c === 'object') return c\n  const co = codecs[c]\n  if (!co) throw new Error('Invalid codec ' + c)\n  return co\n}\n\nfunction SIOSource (sio, id, opt) {\n  const q = Queue()\n  const log = sio.sioplog.bind(sio.sioplog, 'source(' + id + ')')\n  const codec = getCodec(opt.codec).decode\n  log('create source')\n  sio.emit(sioname('accept', id))\n\n  function unlisten () {\n    sio.removeAllListeners(sioname('error', id))\n    sio.removeAllListeners(sioname('queue', id))\n  }\n\n  sio.on(sioname('error', id), err => {\n    if (err === true) log('finish')\n    else log('error')\n    unlisten()\n    q.append({end: err})\n  })\n  sio.on(sioname('queue', id), data => {\n    log('queue data')\n    q.append({data: doCodec(codec, data)})\n  })\n  sio.once('disconnect', () => {\n    unlisten()\n    q.append({end: true})\n  })\n  return function (end, cb) {\n    log('reading')\n    if (end) return cb(end)\n    q.get((err, data) => {\n      if (err) return cb(err)\n      if (data.end) {\n        q.error(data.end)\n        return cb(data.end)\n      }\n      return cb(null, data.data)\n    })\n  }\n}\n\nfunction SIOSink (sio, id, opt) {\n  const q = Queue()\n  const log = sio.sioplog.bind(sio.sioplog, '  sink(' + id + ')')\n  const codec = getCodec(opt.codec).encode\n  let ended\n  log('create sink')\n  sio.once(sioname('accept', id), () => {\n    log('start transmission')\n\n    function loop () {\n      q.get((_, val) => {\n        let {data, err} = val || {}\n        if (_) err = _\n        log('send', err && err === true ? 'finish' : err ? 'error' : data ? 'data' : '<invalid>')\n        if (err && !_) q.error(err)\n        if (err) return sio.emit(sioname('error', id), err)\n        if (data) sio.emit(sioname('queue', id), doCodec(codec, data))\n        loop()\n      })\n    }\n    loop()\n  })\n\n  function doErr (end) {\n    q.append({err: end})\n    ended = end\n  }\n\n  sio.once('disconnect', () => doErr(true))\n\n  return function (read) {\n    read(null, function next (end, data) {\n      if (end) return doErr(end)\n      if (ended) return read(ended, next)\n      q.append({data})\n      read(null, next)\n    })\n  }\n}\n\nmodule.exports = function SIOPullStream (sio, opt) {\n  if (sio.createSink) return\n  sio.sioplog = sio.id ? _log.bind(_log, '[' + sio.id + ']') : _log\n  sio.createSink = (id, _) => {\n    if (!id) id = uuid()\n    const sink = SIOSink(sio, id, opt || _)\n    sink.id = id\n    return sink\n  }\n  sio.createSource = (id, _) => {\n    const source = SIOSource(sio, id, opt || _)\n    source.id = id\n    return source\n  }\n  sio.createProxy = (id, tsio, _) => {\n    pull(\n      sio.createSource(id, _),\n      tsio.createSink(id, _)\n    )\n  }\n}\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","'use strict'\n\nmodule.exports = {\n  PROTOCOL: '/ipfs/ping/1.0.0',\n  PING_LENGTH: 32\n}\n","'use strict'\n\nconst crypto = require('libp2p-crypto')\nconst constants = require('./constants')\n\nexports = module.exports\n\nexports.rnd = (length) => {\n  if (!length) {\n    length = constants.PING_LENGTH\n  }\n  return crypto.randomBytes(length)\n}\n","'use strict'\n\nconst debug = require('debug')\n\nconst log = debug('libp2p:floodsub')\nlog.err = debug('libp2p:floodsub:error')\n\nmodule.exports = {\n  log: log,\n  multicodec: '/floodsub/1.0.0'\n}\n","'use strict'\n\nconst EventEmitter = require('events')\nconst pull = require('pull-stream/pull')\nconst empty = require('pull-stream/sources/empty')\nconst asyncEach = require('async/each')\nconst TimeCache = require('time-cache')\nconst debug = require('debug')\nconst errcode = require('err-code')\n\nconst Peer = require('./peer')\nconst message = require('./message')\nconst { signMessage } = require('./message/sign')\nconst utils = require('./utils')\n\nconst nextTick = require('async/nextTick')\n\n/**\n * PubsubBaseProtocol handles the peers and connections logic for pubsub routers\n */\nclass PubsubBaseProtocol extends EventEmitter {\n  /**\n   * @param {String} debugName\n   * @param {String} multicodec\n   * @param {Object} libp2p libp2p implementation\n   * @param {Object} options\n   * @param {boolean} options.signMessages if messages should be signed, defaults to true\n   * @constructor\n   */\n  constructor (debugName, multicodec, libp2p, options) {\n    super()\n\n    options = {\n      signMessages: true,\n      ...options\n    }\n\n    this.log = debug(debugName)\n    this.log.err = debug(`${debugName}:error`)\n    this.multicodec = multicodec\n    this.libp2p = libp2p\n    this.started = false\n\n    if (options.signMessages) {\n      this.peerId = this.libp2p.peerInfo.id\n    }\n\n    /**\n     * Map of topics to which peers are subscribed to\n     *\n     * @type {Map<string, Peer>}\n     */\n    this.topics = new Map()\n\n    /**\n     * Cache of seen messages\n     *\n     * @type {TimeCache}\n     */\n    this.seenCache = new TimeCache()\n\n    /**\n     * Map of peers.\n     *\n     * @type {Map<string, Peer>}\n     */\n    this.peers = new Map()\n\n    // Dials that are currently in progress\n    this._dials = new Set()\n\n    this._onConnection = this._onConnection.bind(this)\n    this._dialPeer = this._dialPeer.bind(this)\n  }\n\n  /**\n   * Add a new connected peer to the peers map.\n   * @private\n   * @param {PeerInfo} peer peer info\n   * @returns {PeerInfo}\n   */\n  _addPeer (peer) {\n    const id = peer.info.id.toB58String()\n\n    /*\n      Always use an existing peer.\n\n      What is happening here is: \"If the other peer has already dialed to me, we already have\n      an establish link between the two, what might be missing is a\n      Connection specifically between me and that Peer\"\n     */\n    let existing = this.peers.get(id)\n    if (!existing) {\n      this.log('new peer', id)\n      this.peers.set(id, peer)\n      existing = peer\n\n      peer.once('close', () => this._removePeer(peer))\n    }\n    ++existing._references\n\n    return existing\n  }\n\n  /**\n   * Remove a peer from the peers map if it has no references.\n   * @private\n   * @param {Peer} peer peer state\n   * @returns {PeerInfo}\n   */\n  _removePeer (peer) {\n    const id = peer.info.id.toB58String()\n\n    this.log('remove', id, peer._references)\n    // Only delete when no one else is referencing this peer.\n    if (--peer._references === 0) {\n      this.log('delete peer', id)\n      this.peers.delete(id)\n    }\n\n    return peer\n  }\n\n  /**\n   * Dial a received peer.\n   * @private\n   * @param {PeerInfo} peerInfo peer info\n   * @param {function} callback\n   * @returns {void}\n   */\n  _dialPeer (peerInfo, callback) {\n    callback = callback || function noop () { }\n    const idB58Str = peerInfo.id.toB58String()\n\n    // If already have a PubSub conn, ignore\n    const peer = this.peers.get(idB58Str)\n    if (peer && peer.isConnected) {\n      return nextTick(() => callback())\n    }\n\n    // If already dialing this peer, ignore\n    if (this._dials.has(idB58Str)) {\n      this.log('already dialing %s, ignoring dial attempt', idB58Str)\n      return nextTick(() => callback())\n    }\n    this._dials.add(idB58Str)\n\n    this.log('dialing %s', idB58Str)\n    this.libp2p.dialProtocol(peerInfo, this.multicodec, (err, conn) => {\n      this.log('dial to %s complete', idB58Str)\n\n      // If the dial is not in the set, it means that pubsub has been\n      // stopped\n      const pubsubStopped = !this._dials.has(idB58Str)\n      this._dials.delete(idB58Str)\n\n      if (err) {\n        this.log.err(err)\n        return callback()\n      }\n\n      // pubsub has been stopped, so we should just bail out\n      if (pubsubStopped) {\n        this.log('pubsub was stopped, not processing dial to %s', idB58Str)\n        return callback()\n      }\n\n      this._onDial(peerInfo, conn, callback)\n    })\n  }\n\n  /**\n   * Dial a received peer.\n   * @private\n   * @param {PeerInfo} peerInfo peer info\n   * @param {Connection} conn connection to the peer\n   * @param {function} callback\n   */\n  _onDial (peerInfo, conn, callback) {\n    const idB58Str = peerInfo.id.toB58String()\n    this.log('connected', idB58Str)\n\n    const peer = this._addPeer(new Peer(peerInfo))\n    peer.attachConnection(conn)\n\n    nextTick(() => callback())\n  }\n\n  /**\n   * On successful connection event.\n   * @private\n   * @param {String} protocol connection protocol\n   * @param {Connection} conn connection to the peer\n   */\n  _onConnection (protocol, conn) {\n    conn.getPeerInfo((err, peerInfo) => {\n      if (err) {\n        this.log.err('Failed to identify incomming conn', err)\n        return pull(empty(), conn)\n      }\n\n      const idB58Str = peerInfo.id.toB58String()\n      const peer = this._addPeer(new Peer(peerInfo))\n\n      this._processConnection(idB58Str, conn, peer)\n    })\n  }\n\n  /**\n   * Overriding the implementation of _processConnection should keep the connection and is\n   * responsible for processing each RPC message received by other peers.\n   * @abstract\n   * @param {string} idB58Str peer id string in base58\n   * @param {Connection} conn connection\n   * @param {PeerInfo} peer peer info\n   * @returns {undefined}\n   *\n   */\n  _processConnection (idB58Str, conn, peer) {\n    throw errcode('_processConnection must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * On connection end event.\n   * @private\n   * @param {string} idB58Str peer id string in base58\n   * @param {PeerInfo} peer peer info\n   * @param {Error} err error for connection end\n   */\n  _onConnectionEnd (idB58Str, peer, err) {\n    // socket hang up, means the one side canceled\n    if (err && err.message !== 'socket hang up') {\n      this.log.err(err)\n    }\n\n    this.log('connection ended', idB58Str, err ? err.message : '')\n    this._removePeer(peer)\n  }\n\n  /**\n   * Normalizes the message and signs it, if signing is enabled\n   *\n   * @param {Message} message\n   * @param {function(Error, Message)} callback\n   */\n  _buildMessage (message, callback) {\n    const msg = utils.normalizeOutRpcMessage(message)\n    if (this.peerId) {\n      signMessage(this.peerId, msg, callback)\n    } else {\n      nextTick(callback, null, msg)\n    }\n  }\n\n  /**\n   * Overriding the implementation of publish should handle the appropriate algorithms for the publish/subscriber implementation.\n   * For example, a Floodsub implementation might simply publish each message to each topic for every peer\n   * @abstract\n   * @param {Array<string>|string} topics\n   * @param {Array<any>|any} messages\n   * @param {function(Error)} callback\n   * @returns {undefined}\n   *\n   */\n  publish (topics, messages, callback) {\n    throw errcode('publish must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Overriding the implementation of subscribe should handle the appropriate algorithms for the publish/subscriber implementation.\n   * For example, a Floodsub implementation might simply send a message for every peer showing interest in the topics\n   * @abstract\n   * @param {Array<string>|string} topics\n   * @returns {undefined}\n   */\n  subscribe (topics) {\n    throw errcode('subscribe must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Overriding the implementation of unsubscribe should handle the appropriate algorithms for the publish/subscriber implementation.\n   * For example, a Floodsub implementation might simply send a message for every peer revoking interest in the topics\n   * @abstract\n   * @param {Array<string>|string} topics\n   * @returns {undefined}\n   */\n  unsubscribe (topics) {\n    throw errcode('unsubscribe must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Mounts the pubsub protocol onto the libp2p node and sends our\n   * subscriptions to every peer conneceted\n   *\n   * @param {Function} callback\n   * @returns {undefined}\n   *\n   */\n  start (callback) {\n    if (this.started) {\n      return nextTick(() => callback(new Error('already started')))\n    }\n    this.log('starting')\n\n    this.libp2p.handle(this.multicodec, this._onConnection)\n\n    // Speed up any new peer that comes in my way\n    this.libp2p.on('peer:connect', this._dialPeer)\n\n    // Dial already connected peers\n    const peerInfos = Object.values(this.libp2p.peerBook.getAll())\n\n    asyncEach(peerInfos, (peer, cb) => this._dialPeer(peer, cb), (err) => {\n      nextTick(() => {\n        this.log('started')\n        this.started = true\n        callback(err)\n      })\n    })\n  }\n\n  /**\n   * Unmounts the pubsub protocol and shuts down every connection\n   *\n   * @param {Function} callback\n   * @returns {undefined}\n   *\n   */\n  stop (callback) {\n    if (!this.started) {\n      return nextTick(() => callback(new Error('not started yet')))\n    }\n\n    this.libp2p.unhandle(this.multicodec)\n    this.libp2p.removeListener('peer:connect', this._dialPeer)\n\n    // Prevent any dials that are in flight from being processed\n    this._dials = new Set()\n\n    this.log('stopping')\n    asyncEach(this.peers.values(), (peer, cb) => peer.close(cb), (err) => {\n      if (err) {\n        return callback(err)\n      }\n\n      this.log('stopped')\n      this.peers = new Map()\n      this.started = false\n      callback()\n    })\n  }\n}\n\nmodule.exports = PubsubBaseProtocol\nmodule.exports.message = message\nmodule.exports.utils = utils\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _get = require('lodash/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _isFunction = require('lodash/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _VisibilityChangeEmitter = require('./VisibilityChangeEmitter');\n\nvar _VisibilityChangeEmitter2 = _interopRequireDefault(_VisibilityChangeEmitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window */\n\n\nvar debug = require('debug')('latency-monitor:LatencyMonitor');\n\n/**\n * @typedef {Object} SummaryObject\n * @property {Number} events How many events were called\n * @property {Number} minMS What was the min time for a cb to be called\n * @property {Number} maxMS What was the max time for a cb to be called\n * @property {Number} avgMs What was the average time for a cb to be called\n * @property {Number} lengthMs How long this interval was in ms\n */\n\n/**\n * A class to monitor latency of any async function which works in a browser or node. This works by periodically calling\n * the asyncTestFn and timing how long it takes the callback to be called. It can also periodically emit stats about this.\n * This can be disabled and stats can be pulled via setting dataEmitIntervalMs = 0.\n *\n * The default implementation is an event loop latency monitor. This works by firing periodic events into the event loop\n * and timing how long it takes to get back.\n *\n * @example\n * const monitor = new LatencyMonitor();\n * monitor.on('data', (summary) => console.log('Event Loop Latency: %O', summary));\n *\n * @example\n * const monitor = new LatencyMonitor({latencyCheckIntervalMs: 1000, dataEmitIntervalMs: 60000, asyncTestFn:ping});\n * monitor.on('data', (summary) => console.log('Ping Pong Latency: %O', summary));\n */\n\nvar LatencyMonitor = function (_EventEmitter) {\n    _inherits(LatencyMonitor, _EventEmitter);\n\n    /**\n     * @param {Number} [latencyCheckIntervalMs=500] How often to add a latency check event (ms)\n     * @param {Number} [dataEmitIntervalMs=5000] How often to summarize latency check events. null or 0 disables event firing\n     * @param {function} [asyncTestFn] What cb-style async function to use\n     * @param {Number} [latencyRandomPercentage=5] What percent (+/-) of latencyCheckIntervalMs should we randomly use? This helps avoid alignment to other events.\n     */\n    function LatencyMonitor() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            latencyCheckIntervalMs = _ref.latencyCheckIntervalMs,\n            dataEmitIntervalMs = _ref.dataEmitIntervalMs,\n            asyncTestFn = _ref.asyncTestFn,\n            latencyRandomPercentage = _ref.latencyRandomPercentage;\n\n        _classCallCheck(this, LatencyMonitor);\n\n        var _this = _possibleConstructorReturn(this, (LatencyMonitor.__proto__ || Object.getPrototypeOf(LatencyMonitor)).call(this));\n\n        var that = _this;\n\n        // 0 isn't valid here, so its ok to use ||\n        that.latencyCheckIntervalMs = latencyCheckIntervalMs || 500; // 0.5s\n        that.latencyRandomPercentage = latencyRandomPercentage || 10;\n        that._latecyCheckMultiply = 2 * (that.latencyRandomPercentage / 100.0) * that.latencyCheckIntervalMs;\n        that._latecyCheckSubtract = that._latecyCheckMultiply / 2;\n\n        that.dataEmitIntervalMs = dataEmitIntervalMs === null || dataEmitIntervalMs === 0 ? undefined : dataEmitIntervalMs || 5 * 1000; // 5s\n        debug('latencyCheckIntervalMs: %s dataEmitIntervalMs: %s', that.latencyCheckIntervalMs, that.dataEmitIntervalMs);\n        if (that.dataEmitIntervalMs) {\n            debug('Expecting ~%s events per summary', that.latencyCheckIntervalMs / that.dataEmitIntervalMs);\n        } else {\n            debug('Not emitting summaries');\n        }\n\n        that.asyncTestFn = asyncTestFn; // If there is no asyncFn, we measure latency\n\n        // If process: use high resolution timer\n        if (process && process.hrtime) {\n            debug('Using process.hrtime for timing');\n            that.now = process.hrtime;\n            that.getDeltaMS = function (startTime) {\n                var hrtime = that.now(startTime);\n                return hrtime[0] * 1000 + hrtime[1] / 1000000;\n            };\n            // Let's try for a timer that only monotonically increases\n        } else if (typeof window !== 'undefined' && (0, _get2.default)(window, 'performance.now')) {\n            debug('Using performance.now for timing');\n            that.now = window.performance.now.bind(window.performance);\n            that.getDeltaMS = function (startTime) {\n                return Math.round(that.now() - startTime);\n            };\n        } else {\n            debug('Using Date.now for timing');\n            that.now = Date.now;\n            that.getDeltaMS = function (startTime) {\n                return that.now() - startTime;\n            };\n        }\n\n        that._latencyData = that._initLatencyData();\n\n        // We check for isBrowser because of browsers set max rates of timeouts when a page is hidden,\n        // so we fall back to another library\n        // See: http://stackoverflow.com/questions/6032429/chrome-timeouts-interval-suspended-in-background-tabs\n        if (isBrowser()) {\n            that._visibilityChangeEmitter = new _VisibilityChangeEmitter2.default();\n            that._visibilityChangeEmitter.on('visibilityChange', function (pageInFocus) {\n                if (pageInFocus) {\n                    that._startTimers();\n                } else {\n                    that._emitSummary();\n                    that._stopTimers();\n                }\n            });\n        }\n\n        if (!that._visibilityChangeEmitter || that._visibilityChangeEmitter.isVisible()) {\n            that._startTimers();\n        }\n        return _this;\n    }\n\n    /**\n     * Start internal timers\n     * @private\n     */\n\n\n    _createClass(LatencyMonitor, [{\n        key: '_startTimers',\n        value: function _startTimers() {\n            var _this2 = this;\n\n            // Timer already started, ignore this\n            if (this._checkLatencyID) {\n                return;\n            }\n            this._checkLatency();\n            if (this.dataEmitIntervalMs) {\n                this._emitIntervalID = setInterval(function () {\n                    return _this2._emitSummary();\n                }, this.dataEmitIntervalMs);\n                if ((0, _isFunction2.default)(this._emitIntervalID.unref)) {\n                    this._emitIntervalID.unref(); // Doesn't block exit\n                }\n            }\n        }\n\n        /**\n         * Stop internal timers\n         * @private\n         */\n\n    }, {\n        key: '_stopTimers',\n        value: function _stopTimers() {\n            if (this._checkLatencyID) {\n                clearTimeout(this._checkLatencyID);\n                this._checkLatencyID = undefined;\n            }\n            if (this._emitIntervalID) {\n                clearInterval(this._emitIntervalID);\n                this._emitIntervalID = undefined;\n            }\n        }\n\n        /**\n         * Emit summary only if there were events. It might not have any events if it was forced via a page hidden/show\n         * @private\n         */\n\n    }, {\n        key: '_emitSummary',\n        value: function _emitSummary() {\n            var summary = this.getSummary();\n            if (summary.events > 0) {\n                this.emit('data', summary);\n            }\n        }\n\n        /**\n         * Calling this function will end the collection period. If a timing event was already fired and somewhere in the queue,\n         * it will not count for this time period\n         * @returns {SummaryObject}\n         */\n\n    }, {\n        key: 'getSummary',\n        value: function getSummary() {\n            // We might want to adjust for the number of expected events\n            // Example: first 1 event it comes back, then such a long blocker that the next emit check comes\n            // Then this fires - looks like no latency!!\n            var latency = {\n                events: this._latencyData.events,\n                minMs: this._latencyData.minMs,\n                maxMs: this._latencyData.maxMs,\n                avgMs: this._latencyData.events ? this._latencyData.totalMs / this._latencyData.events : Number.POSITIVE_INFINITY,\n                lengthMs: this.getDeltaMS(this._latencyData.startTime)\n            };\n            this._latencyData = this._initLatencyData(); // Clear\n\n            debug('Summary: %O', latency);\n            return latency;\n        }\n\n        /**\n         * Randomly calls an async fn every roughly latencyCheckIntervalMs (plus some randomness). If no async fn is found,\n         * it will simply report on event loop latency.\n         *\n         * @private\n         */\n\n    }, {\n        key: '_checkLatency',\n        value: function _checkLatency() {\n            var _this3 = this;\n\n            var that = this;\n            // Randomness is needed to avoid alignment by accident to regular things in the event loop\n            var randomness = Math.random() * that._latecyCheckMultiply - that._latecyCheckSubtract;\n\n            // We use this to ensure that in case some overlap somehow, we don't take the wrong startTime/offset\n            var localData = {\n                deltaOffset: Math.ceil(that.latencyCheckIntervalMs + randomness),\n                startTime: that.now()\n            };\n\n            var cb = function cb() {\n                // We are already stopped, ignore this datapoint\n                if (!_this3._checkLatencyID) {\n                    return;\n                }\n                var deltaMS = that.getDeltaMS(localData.startTime) - localData.deltaOffset;\n                that._checkLatency(); // Start again ASAP\n\n                // Add the data point. If this gets complex, refactor it\n                that._latencyData.events++;\n                that._latencyData.minMs = Math.min(that._latencyData.minMs, deltaMS);\n                that._latencyData.maxMs = Math.max(that._latencyData.maxMs, deltaMS);\n                that._latencyData.totalMs += deltaMS;\n                debug('MS: %s Data: %O', deltaMS, that._latencyData);\n            };\n            debug('localData: %O', localData);\n\n            this._checkLatencyID = setTimeout(function () {\n                // This gets rid of including event loop\n                if (that.asyncTestFn) {\n                    // Clear timing related things\n                    localData.deltaOffset = 0;\n                    localData.startTime = that.now();\n                    that.asyncTestFn(cb);\n                } else {\n                    // setTimeout is not more accurate than 1ms, so this will ensure positive numbers. Add 1 to emitted data to remove.\n                    // This is not the best, but for now it'll be just fine. This isn't meant to be sub ms accurate.\n                    localData.deltaOffset -= 1;\n                    // If there is no function to test, we mean check latency which is a special case that is really cb => cb()\n                    // We avoid that for the few extra function all overheads. Also, we want to keep the timers different\n                    cb();\n                }\n            }, localData.deltaOffset);\n\n            if ((0, _isFunction2.default)(this._checkLatencyID.unref)) {\n                this._checkLatencyID.unref(); // Doesn't block exit\n            }\n        }\n    }, {\n        key: '_initLatencyData',\n        value: function _initLatencyData() {\n            return {\n                startTime: this.now(),\n                minMs: Number.POSITIVE_INFINITY,\n                maxMs: Number.NEGATIVE_INFINITY,\n                events: 0,\n                totalMs: 0\n            };\n        }\n    }]);\n\n    return LatencyMonitor;\n}(_events2.default);\n\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nexports.default = LatencyMonitor;\n//# sourceMappingURL=LatencyMonitor.js.map\n","'use strict'\n\nconst Connection = require('interface-connection').Connection\nconst pull = require('pull-stream/pull')\n\n/**\n * Creates a pull stream to run the given Connection stream through\n * the given Observer. This provides a way to more easily monitor connections\n * and their metadata. A new Connection will be returned that contains\n * has the attached Observer.\n *\n * @param {Transport} transport\n * @param {string} protocol\n * @param {Connection} connection\n * @param {Observer} observer\n * @returns {Connection}\n */\nmodule.exports = (transport, protocol, connection, observer) => {\n  const peerInfo = new Promise((resolve, reject) => {\n    connection.getPeerInfo((err, peerInfo) => {\n      if (!err && peerInfo) {\n        resolve(peerInfo)\n        return\n      }\n\n      const setPeerInfo = connection.setPeerInfo\n      connection.setPeerInfo = (pi) => {\n        setPeerInfo.call(connection, pi)\n        resolve(pi)\n      }\n    })\n  })\n\n  const stream = {\n    source: pull(\n      connection,\n      observer.incoming(transport, protocol, peerInfo)),\n    sink: pull(\n      observer.outgoing(transport, protocol, peerInfo),\n      connection)\n  }\n\n  return new Connection(stream, connection)\n}\n","'use strict'\n\nconst FSM = require('fsm-event')\nconst multistream = require('multistream-select')\nconst withIs = require('class-is')\n\nconst BaseConnection = require('./base')\n\nclass IncomingConnectionFSM extends BaseConnection {\n  constructor ({ connection, _switch, transportKey, peerInfo }) {\n    super({\n      _switch,\n      name: `inc:${_switch._peerInfo.id.toB58String().slice(0, 8)}`\n    })\n    this.conn = connection\n    this.theirPeerInfo = peerInfo || null\n    this.theirB58Id = this.theirPeerInfo ? this.theirPeerInfo.id.toB58String() : null\n    this.ourPeerInfo = this.switch._peerInfo\n    this.transportKey = transportKey\n    this.protocolMuxer = this.switch.protocolMuxer(this.transportKey)\n    this.msListener = new multistream.Listener()\n\n    this._state = FSM('DIALED', {\n      DISCONNECTED: {\n        disconnect: 'DISCONNECTED'\n      },\n      DIALED: { // Base connection to peer established\n        privatize: 'PRIVATIZING',\n        encrypt: 'ENCRYPTING'\n      },\n      PRIVATIZING: { // Protecting the base connection\n        done: 'PRIVATIZED',\n        disconnect: 'DISCONNECTING'\n      },\n      PRIVATIZED: { // Base connection is protected\n        encrypt: 'ENCRYPTING'\n      },\n      ENCRYPTING: { // Encrypting the base connection\n        done: 'ENCRYPTED',\n        disconnect: 'DISCONNECTING'\n      },\n      ENCRYPTED: { // Upgrading could not happen, the connection is encrypted and waiting\n        upgrade: 'UPGRADING',\n        disconnect: 'DISCONNECTING'\n      },\n      UPGRADING: { // Attempting to upgrade the connection with muxers\n        done: 'MUXED'\n      },\n      MUXED: {\n        disconnect: 'DISCONNECTING'\n      },\n      DISCONNECTING: { // Shutting down the connection\n        done: 'DISCONNECTED'\n      }\n    })\n\n    this._state.on('DISCONNECTED', () => this._onDisconnected())\n    this._state.on('PRIVATIZING', () => this._onPrivatizing())\n    this._state.on('PRIVATIZED', () => this._onPrivatized())\n    this._state.on('ENCRYPTING', () => this._onEncrypting())\n    this._state.on('ENCRYPTED', () => {\n      this.log('successfully encrypted connection to %s', this.theirB58Id || 'unknown peer')\n      this.emit('encrypted', this.conn)\n    })\n    this._state.on('UPGRADING', () => this._onUpgrading())\n    this._state.on('MUXED', () => {\n      this.log('successfully muxed connection to %s', this.theirB58Id || 'unknown peer')\n      this.emit('muxed', this.conn)\n    })\n    this._state.on('DISCONNECTING', () => {\n      this._state('done')\n    })\n  }\n\n  /**\n   * Attempts to encrypt `this.conn` with the Switch's crypto.\n   *\n   * @private\n   * @fires IncomingConnectionFSM#error\n   * @returns {void}\n   */\n  _onEncrypting () {\n    this.log('encrypting connection via %s', this.switch.crypto.tag)\n\n    this.msListener.addHandler(this.switch.crypto.tag, (protocol, _conn) => {\n      this.conn = this.switch.crypto.encrypt(this.ourPeerInfo.id, _conn, undefined, (err) => {\n        if (err) {\n          return this.close(err)\n        }\n        this.conn.getPeerInfo((_, peerInfo) => {\n          this.theirPeerInfo = peerInfo\n          this._state('done')\n        })\n      })\n    }, null)\n\n    // Start handling the connection\n    this.msListener.handle(this.conn, (err) => {\n      if (err) {\n        this.emit('crypto handshaking failed', err)\n      }\n    })\n  }\n\n  _onUpgrading () {\n    this.log('adding the protocol muxer to the connection')\n    this.protocolMuxer(this.conn, this.msListener)\n    this._state('done')\n  }\n}\n\nmodule.exports = withIs(IncomingConnectionFSM, {\n  className: 'IncomingConnectionFSM',\n  symbolName: 'libp2p-switch/IncomingConnectionFSM'\n})\n","'use strict'\n\nconst LRU = require('hashlru')\n\n/**\n * Creates and returns a Least Recently Used Cache\n *\n * @param {Number} maxSize\n * @returns {LRUCache}\n */\nmodule.exports = (maxSize) => {\n  const patched = LRU(maxSize)\n  patched.delete = patched.remove\n  return patched\n}\n","'use strict'\n\nconst EventEmitter = require('events')\nconst Big = require('bignumber.js')\nconst MovingAverage = require('moving-average')\nconst retimer = require('retimer')\n\n/**\n * A queue based manager for stat processing\n *\n * @param {Array<string>} initialCounters\n * @param {any} options\n */\nclass Stats extends EventEmitter {\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    this._queue = []\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    this._frequencyAccumulators = {}\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    const intervals = this._options.movingAverageIntervals\n\n    for (var i = 0; i < initialCounters.length; i++) {\n      var key = initialCounters[i]\n      this._stats[key] = Big(0)\n      this._movingAverages[key] = {}\n      for (var k = 0; k < intervals.length; k++) {\n        var interval = intervals[k]\n        var ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      }\n    }\n  }\n\n  /**\n   * Initializes the internal timer if there are items in the queue. This\n   * should only need to be called if `Stats.stop` was previously called, as\n   * `Stats.push` will also start the processing.\n   *\n   * @returns {void}\n   */\n  start () {\n    if (this._queue.length) {\n      this._resetComputeTimeout()\n    }\n  }\n\n  /**\n   * Stops processing and computing of stats by clearing the internal\n   * timer.\n   *\n   * @returns {void}\n   */\n  stop () {\n    if (this._timeout) {\n      this._timeout.clear()\n      this._timeout = null\n    }\n  }\n\n  /**\n   * Returns a clone of the current stats.\n   *\n   * @returns {Map<string, Stat>}\n   */\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  /**\n   * Returns a clone of the internal movingAverages\n   *\n   * @returns {Array<MovingAverage>}\n   */\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  /**\n   * Pushes the given operation data to the queue, along with the\n   * current Timestamp, then resets the update timer.\n   *\n   * @param {string} counter\n   * @param {number} inc\n   * @returns {void}\n   */\n  push (counter, inc) {\n    this._queue.push([counter, inc, Date.now()])\n    this._resetComputeTimeout()\n  }\n\n  /**\n   * Resets the timeout for triggering updates.\n   *\n   * @private\n   * @returns {void}\n   */\n  _resetComputeTimeout () {\n    if (this._timeout) {\n      this._timeout.reschedule(this._nextTimeout())\n    } else {\n      this._timeout = retimer(this._update, this._nextTimeout())\n    }\n  }\n\n  /**\n   * Calculates and returns the timeout for the next update based on\n   * the urgency of the update.\n   *\n   * @private\n   * @returns {number}\n   */\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    const timeout = Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n    return timeout\n  }\n\n  /**\n   * If there are items in the queue, they will will be processed and\n   * the frequency for all items will be updated based on the Timestamp\n   * of the last item in the queue. The `update` event will also be emitted\n   * with the latest stats.\n   *\n   * If there are no items in the queue, no action is taken.\n   *\n   * @private\n   * @returns {void}\n   */\n  _update () {\n    this._timeout = null\n    if (this._queue.length) {\n      let last\n      while (this._queue.length) {\n        const op = last = this._queue.shift()\n        this._applyOp(op)\n      }\n\n      this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  /**\n   * For each key in the stats, the frequncy and moving averages\n   * will be updated via Stats._updateFrequencyFor based on the time\n   * difference between calls to this method.\n   *\n   * @private\n   * @param {Timestamp} latestTime\n   * @returns {void}\n   */\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    Object.keys(this._stats).forEach((key) => {\n      this._updateFrequencyFor(key, timeDiff, latestTime)\n    })\n\n    this._frequencyLastTime = latestTime\n  }\n\n  /**\n   * Updates the `movingAverages` for the given `key` and also\n   * resets the `frequencyAccumulator` for the `key`.\n   *\n   * @private\n   * @param {string} key\n   * @param {number} timeDiffMS Time in milliseconds\n   * @param {Timestamp} latestTime Time in ticks\n   * @returns {void}\n   */\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    // if `timeDiff` is zero, `hz` becomes Infinity, so we fallback to 1ms\n    const safeTimeDiff = timeDiffMS || 1\n    const hz = (count / safeTimeDiff) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n\n    const intervals = this._options.movingAverageIntervals\n\n    for (var i = 0; i < intervals.length; i++) {\n      var movingAverageInterval = intervals[i]\n      var movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    }\n  }\n\n  /**\n   * For the given operation, `op`, the stats and `frequencyAccumulator`\n   * will be updated or initialized if they don't already exist.\n   *\n   * @private\n   * @param {Array<string, number>} op\n   * @throws {InvalidNumber}\n   * @returns {void}\n   */\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error('invalid increment number:', inc)\n    }\n\n    let n\n\n    if (!this._stats.hasOwnProperty(key)) {\n      n = this._stats[key] = Big(0)\n    } else {\n      n = this._stats[key]\n    }\n    this._stats[key] = n.plus(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n\nmodule.exports = Stats\n","'use strict'\n\nmodule.exports = {\n  BLACK_LIST_TTL: 5 * 60 * 1e3, // How long before an errored peer can be dialed again\n  BLACK_LIST_ATTEMPTS: 5, // Num of unsuccessful dials before a peer is permanently blacklisted\n  DIAL_TIMEOUT: 30e3, // How long in ms a dial attempt is allowed to take\n  MAX_COLD_CALLS: 50, // How many dials w/o protocols that can be queued\n  MAX_PARALLEL_DIALS: 100, // Maximum allowed concurrent dials\n  QUARTER_HOUR: 15 * 60e3,\n  PRIORITY_HIGH: 10,\n  PRIORITY_LOW: 20\n}\n","'use strict'\n\nconst once = require('once')\nconst Queue = require('./queue')\nconst { DIAL_ABORTED } = require('../errors')\nconst nextTick = require('async/nextTick')\nconst retimer = require('retimer')\nconst { QUARTER_HOUR, PRIORITY_HIGH } = require('../constants')\nconst debug = require('debug')\nconst log = debug('libp2p:switch:dial:manager')\nconst noop = () => {}\n\nclass DialQueueManager {\n  /**\n   * @constructor\n   * @param {Switch} _switch\n   */\n  constructor (_switch) {\n    this._queue = new Set()\n    this._coldCallQueue = new Set()\n    this._dialingQueues = new Set()\n    this._queues = {}\n    this.switch = _switch\n    this._cleanInterval = retimer(this._clean.bind(this), QUARTER_HOUR)\n    this.start()\n  }\n\n  /**\n   * Runs through all queues, aborts and removes them if they\n   * are no longer valid. A queue that is blacklisted indefinitely,\n   * is considered no longer valid.\n   * @private\n   */\n  _clean () {\n    const queues = Object.values(this._queues)\n    queues.forEach(dialQueue => {\n      // Clear if the queue has reached max blacklist\n      if (dialQueue.blackListed === Infinity) {\n        dialQueue.abort()\n        delete this._queues[dialQueue.id]\n        return\n      }\n\n      // Keep track of blacklisted queues\n      if (dialQueue.blackListed) return\n\n      // Clear if peer is no longer active\n      // To avoid reallocating memory, dont delete queues of\n      // connected peers, as these are highly likely to leverage the\n      // queues in the immediate term\n      if (!dialQueue.isRunning && dialQueue.length < 1) {\n        let isConnected = false\n        try {\n          const peerInfo = this.switch._peerBook.get(dialQueue.id)\n          isConnected = Boolean(peerInfo.isConnected())\n        } catch (_) {\n          // If we get an error, that means the peerbook doesnt have the peer\n        }\n\n        if (!isConnected) {\n          dialQueue.abort()\n          delete this._queues[dialQueue.id]\n        }\n      }\n    })\n\n    this._cleanInterval.reschedule(QUARTER_HOUR)\n  }\n\n  /**\n   * Allows the `DialQueueManager` to execute dials\n   */\n  start () {\n    this.isRunning = true\n  }\n\n  /**\n   * Iterates over all items in the DialerQueue\n   * and executes there callback with an error.\n   *\n   * This causes the entire DialerQueue to be drained\n   */\n  stop () {\n    this.isRunning = false\n    // Clear the general queue\n    this._queue.clear()\n    // Clear the cold call queue\n    this._coldCallQueue.clear()\n\n    this._cleanInterval.clear()\n\n    // Abort the individual peer queues\n    const queues = Object.values(this._queues)\n    queues.forEach(dialQueue => {\n      dialQueue.abort()\n      delete this._queues[dialQueue.id]\n    })\n  }\n\n  /**\n   * Adds the `dialRequest` to the queue and ensures queue is running\n   *\n   * @param {DialRequest} dialRequest\n   * @returns {void}\n   */\n  add ({ peerInfo, protocol, options, callback }) {\n    callback = callback ? once(callback) : noop\n\n    // Add the dial to its respective queue\n    const targetQueue = this.getQueue(peerInfo)\n\n    // Cold Call\n    if (options.priority > PRIORITY_HIGH) {\n      // If we have too many cold calls, abort the dial immediately\n      if (this._coldCallQueue.size >= this.switch.dialer.MAX_COLD_CALLS) {\n        return nextTick(callback, DIAL_ABORTED())\n      }\n\n      if (this._queue.has(targetQueue.id)) {\n        return nextTick(callback, DIAL_ABORTED())\n      }\n    }\n\n    targetQueue.add(protocol, options.useFSM, callback)\n\n    // If we're already connected to the peer, start the queue now\n    // While it might cause queues to go over the max parallel amount,\n    // it avoids blocking peers we're already connected to\n    if (peerInfo.isConnected()) {\n      targetQueue.start()\n      return\n    }\n\n    // If dialing is not allowed, abort\n    if (!targetQueue.isDialAllowed()) {\n      return\n    }\n\n    // Add the id to its respective queue set if the queue isn't running\n    if (!targetQueue.isRunning) {\n      if (options.priority <= PRIORITY_HIGH) {\n        this._queue.add(targetQueue.id)\n        this._coldCallQueue.delete(targetQueue.id)\n      // Only add it to the cold queue if it's not in the normal queue\n      } else {\n        this._coldCallQueue.add(targetQueue.id)\n      }\n    }\n\n    this.run()\n  }\n\n  /**\n   * Will execute up to `MAX_PARALLEL_DIALS` dials\n   */\n  run () {\n    if (!this.isRunning) return\n\n    if (this._dialingQueues.size < this.switch.dialer.MAX_PARALLEL_DIALS) {\n      let nextQueue = { done: true }\n      // Check the queue first and fall back to the cold call queue\n      if (this._queue.size > 0) {\n        nextQueue = this._queue.values().next()\n        this._queue.delete(nextQueue.value)\n      } else if (this._coldCallQueue.size > 0) {\n        nextQueue = this._coldCallQueue.values().next()\n        this._coldCallQueue.delete(nextQueue.value)\n      }\n\n      if (nextQueue.done) {\n        return\n      }\n\n      let targetQueue = this._queues[nextQueue.value]\n\n      if (!targetQueue) {\n        log('missing queue %s, maybe it was aborted?', nextQueue.value)\n        return\n      }\n\n      this._dialingQueues.add(targetQueue.id)\n      targetQueue.start()\n    }\n  }\n\n  /**\n   * Will remove the `peerInfo` from the dial blacklist\n   * @param {PeerInfo} peerInfo\n   */\n  clearBlacklist (peerInfo) {\n    const queue = this.getQueue(peerInfo)\n    queue.blackListed = null\n    queue.blackListCount = 0\n  }\n\n  /**\n   * A handler for when dialing queues stop. This will trigger\n   * `run()` in order to keep the queue processing.\n   * @private\n   * @param {string} id peer id of the queue that stopped\n   */\n  _onQueueStopped (id) {\n    this._dialingQueues.delete(id)\n    this.run()\n  }\n\n  /**\n   * Returns the `Queue` for the given `peerInfo`\n   * @param {PeerInfo} peerInfo\n   * @returns {Queue}\n   */\n  getQueue (peerInfo) {\n    const id = peerInfo.id.toB58String()\n\n    this._queues[id] = this._queues[id] || new Queue(id, this.switch, this._onQueueStopped.bind(this))\n    return this._queues[id]\n  }\n}\n\nmodule.exports = DialQueueManager\n","'use strict'\n\nconst Identify = require('libp2p-identify')\n\n/**\n * For a given multistream, registers to handle the given connection\n * @param {MultistreamDialer} multistream\n * @param {Connection} connection\n * @returns {Promise}\n */\nmodule.exports.msHandle = (multistream, connection) => {\n  return new Promise((resolve, reject) => {\n    multistream.handle(connection, (err) => {\n      if (err) return reject(err)\n      resolve()\n    })\n  })\n}\n\n/**\n * For a given multistream, selects the given protocol\n * @param {MultistreamDialer} multistream\n * @param {string} protocol\n * @returns {Promise} Resolves the selected Connection\n */\nmodule.exports.msSelect = (multistream, protocol) => {\n  return new Promise((resolve, reject) => {\n    multistream.select(protocol, (err, connection) => {\n      if (err) return reject(err)\n      resolve(connection)\n    })\n  })\n}\n\n/**\n * Runs identify for the given connection and verifies it against the\n * PeerInfo provided\n * @param {Connection} connection\n * @param {PeerInfo} cryptoPeerInfo The PeerInfo determined during crypto exchange\n * @returns {Promise} Resolves {peerInfo, observedAddrs}\n */\nmodule.exports.identifyDialer = (connection, cryptoPeerInfo) => {\n  return new Promise((resolve, reject) => {\n    Identify.dialer(connection, cryptoPeerInfo, (err, peerInfo, observedAddrs) => {\n      if (err) return reject(err)\n      resolve({ peerInfo, observedAddrs })\n    })\n  })\n}\n\n/**\n * Get unique values from `arr` using `getValue` to determine\n * what is used for uniqueness\n * @param {Array} arr The array to get unique values for\n * @param {function(value)} getValue The function to determine what is compared\n * @returns {Array}\n */\nmodule.exports.uniqueBy = (arr, getValue) => {\n  return [...new Map(arr.map((i) => [getValue(i), i])).values()]\n}\n","'use strict'\n\nexports.Listener = exports.listener = require('./listener')\nexports.Dialer = exports.dialer = require('./dialer')\nexports.matchSemver = require('./listener/match-semver')\nexports.matchExact = require('./listener/match-exact')\nexports.constants = require('./constants')\n","'use strict'\n\nconst FSM = require('fsm-event')\nconst Circuit = require('libp2p-circuit')\nconst multistream = require('multistream-select')\nconst withIs = require('class-is')\nconst BaseConnection = require('./base')\nconst parallel = require('async/parallel')\nconst nextTick = require('async/nextTick')\nconst identify = require('libp2p-identify')\nconst errCode = require('err-code')\nconst { msHandle, msSelect, identifyDialer } = require('../utils')\n\nconst observeConnection = require('../observe-connection')\nconst {\n  CONNECTION_FAILED,\n  DIAL_SELF,\n  INVALID_STATE_TRANSITION,\n  NO_TRANSPORTS_REGISTERED,\n  maybeUnexpectedEnd\n} = require('../errors')\n\n/**\n * @typedef {Object} ConnectionOptions\n * @property {Switch} _switch Our switch instance\n * @property {PeerInfo} peerInfo The PeerInfo of the peer to dial\n * @property {Muxer} muxer Optional - A muxed connection\n * @property {Connection} conn Optional - The base connection\n * @property {string} type Optional - identify the connection as incoming or outgoing. Defaults to out.\n */\n\n/**\n * ConnectionFSM handles the complex logic of managing a connection\n * between peers. ConnectionFSM is internally composed of a state machine\n * to help improve the usability and debuggability of connections. The\n * state machine also helps to improve the ability to handle dial backoff,\n * coalescing dials and dial locks.\n */\nclass ConnectionFSM extends BaseConnection {\n  /**\n   * @param {ConnectionOptions} connectionOptions\n   * @constructor\n   */\n  constructor ({ _switch, peerInfo, muxer, conn, type = 'out' }) {\n    super({\n      _switch,\n      name: `${type}:${_switch._peerInfo.id.toB58String().slice(0, 8)}`\n    })\n\n    this.theirPeerInfo = peerInfo\n    this.theirB58Id = this.theirPeerInfo.id.toB58String()\n\n    this.conn = conn // The base connection\n    this.muxer = muxer // The upgraded/muxed connection\n\n    let startState = 'DISCONNECTED'\n    if (this.muxer) {\n      startState = 'MUXED'\n    }\n\n    this._state = FSM(startState, {\n      DISCONNECTED: { // No active connections exist for the peer\n        dial: 'DIALING',\n        disconnect: 'DISCONNECTED',\n        done: 'DISCONNECTED'\n      },\n      DIALING: { // Creating an initial connection\n        abort: 'ABORTED',\n        // emit events for different transport dials?\n        done: 'DIALED',\n        error: 'ERRORED',\n        disconnect: 'DISCONNECTING'\n      },\n      DIALED: { // Base connection to peer established\n        encrypt: 'ENCRYPTING',\n        privatize: 'PRIVATIZING'\n      },\n      PRIVATIZING: { // Protecting the base connection\n        done: 'PRIVATIZED',\n        abort: 'ABORTED',\n        disconnect: 'DISCONNECTING'\n      },\n      PRIVATIZED: { // Base connection is protected\n        encrypt: 'ENCRYPTING'\n      },\n      ENCRYPTING: { // Encrypting the base connection\n        done: 'ENCRYPTED',\n        error: 'ERRORED',\n        disconnect: 'DISCONNECTING'\n      },\n      ENCRYPTED: { // Upgrading could not happen, the connection is encrypted and waiting\n        upgrade: 'UPGRADING',\n        disconnect: 'DISCONNECTING'\n      },\n      UPGRADING: { // Attempting to upgrade the connection with muxers\n        stop: 'CONNECTED', // If we cannot mux, stop upgrading\n        done: 'MUXED',\n        error: 'ERRORED',\n        disconnect: 'DISCONNECTING'\n      },\n      MUXED: {\n        disconnect: 'DISCONNECTING'\n      },\n      CONNECTED: { // A non muxed connection is established\n        disconnect: 'DISCONNECTING'\n      },\n      DISCONNECTING: { // Shutting down the connection\n        done: 'DISCONNECTED',\n        disconnect: 'DISCONNECTING'\n      },\n      ABORTED: { }, // A severe event occurred\n      ERRORED: { // An error occurred, but future dials may be allowed\n        disconnect: 'DISCONNECTING' // There could be multiple options here, but this is a likely action\n      }\n    })\n\n    this._state.on('DISCONNECTED', () => this._onDisconnected())\n    this._state.on('DIALING', () => this._onDialing())\n    this._state.on('DIALED', () => this._onDialed())\n    this._state.on('PRIVATIZING', () => this._onPrivatizing())\n    this._state.on('PRIVATIZED', () => this._onPrivatized())\n    this._state.on('ENCRYPTING', () => this._onEncrypting())\n    this._state.on('ENCRYPTED', () => {\n      this.log('successfully encrypted connection to %s', this.theirB58Id)\n      this.emit('encrypted', this.conn)\n    })\n    this._state.on('UPGRADING', () => this._onUpgrading())\n    this._state.on('MUXED', () => {\n      this.log('successfully muxed connection to %s', this.theirB58Id)\n      delete this.switch.conns[this.theirB58Id]\n      this.emit('muxed', this.muxer)\n    })\n    this._state.on('CONNECTED', () => {\n      this.log('unmuxed connection opened to %s', this.theirB58Id)\n      this.emit('unmuxed', this.conn)\n    })\n    this._state.on('DISCONNECTING', () => this._onDisconnecting())\n    this._state.on('ABORTED', () => this._onAborted())\n    this._state.on('ERRORED', () => this._onErrored())\n    this._state.on('error', (err) => this._onStateError(err))\n  }\n\n  /**\n   * Puts the state into dialing mode\n   *\n   * @fires ConnectionFSM#Error May emit a DIAL_SELF error\n   * @returns {void}\n   */\n  dial () {\n    if (this.theirB58Id === this.ourPeerInfo.id.toB58String()) {\n      return this.emit('error', DIAL_SELF())\n    } else if (this.getState() === 'DIALING') {\n      return this.log('attempted to dial while already dialing, ignoring')\n    }\n\n    this._state('dial')\n  }\n\n  /**\n   * Initiates a handshake for the given protocol\n   *\n   * @param {string} protocol The protocol to negotiate\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  shake (protocol, callback) {\n    // If there is no protocol set yet, don't perform the handshake\n    if (!protocol) {\n      return callback(null, null)\n    }\n\n    if (this.muxer && this.muxer.newStream) {\n      return this.muxer.newStream((err, stream) => {\n        if (err) {\n          return callback(err, null)\n        }\n\n        this.log('created new stream to %s', this.theirB58Id)\n        this._protocolHandshake(protocol, stream, callback)\n      })\n    }\n\n    this._protocolHandshake(protocol, this.conn, callback)\n  }\n\n  /**\n   * Puts the state into muxing mode\n   *\n   * @returns {void}\n   */\n  upgrade () {\n    this._state('upgrade')\n  }\n\n  /**\n   * Event handler for dialing. Transitions state when successful.\n   *\n   * @private\n   * @fires ConnectionFSM#error\n   * @returns {void}\n   */\n  _onDialing () {\n    this.log('dialing %s', this.theirB58Id)\n\n    if (!this.switch.hasTransports()) {\n      return this.close(NO_TRANSPORTS_REGISTERED())\n    }\n\n    const tKeys = this.switch.availableTransports(this.theirPeerInfo)\n\n    const circuitEnabled = Boolean(this.switch.transports[Circuit.tag])\n\n    if (circuitEnabled && !tKeys.includes(Circuit.tag)) {\n      tKeys.push(Circuit.tag)\n    }\n\n    const nextTransport = (key) => {\n      let transport = key\n      if (!transport) {\n        if (!circuitEnabled) {\n          return this.close(\n            CONNECTION_FAILED(`Circuit not enabled and all transports failed to dial peer ${this.theirB58Id}!`)\n          )\n        }\n\n        return this.close(\n          CONNECTION_FAILED(`No available transports to dial peer ${this.theirB58Id}!`)\n        )\n      }\n\n      if (transport === Circuit.tag) {\n        this.theirPeerInfo.multiaddrs.add(`/p2p-circuit/p2p/${this.theirB58Id}`)\n      }\n\n      this.log('dialing transport %s', transport)\n      this.switch.transport.dial(transport, this.theirPeerInfo, (errors, _conn) => {\n        if (errors) {\n          this.emit('error:connection_attempt_failed', errors)\n          this.log(errors)\n          return nextTransport(tKeys.shift())\n        }\n\n        this.conn = observeConnection(transport, null, _conn, this.switch.observer)\n        this._state('done')\n      })\n    }\n\n    nextTransport(tKeys.shift())\n  }\n\n  /**\n   * Once a connection has been successfully dialed, the connection\n   * will be privatized or encrypted depending on the presence of the\n   * Switch.protector.\n   *\n   * @returns {void}\n   */\n  _onDialed () {\n    this.log('successfully dialed %s', this.theirB58Id)\n\n    this.emit('connected', this.conn)\n  }\n\n  /**\n   * Event handler for disconnecting. Handles any needed cleanup\n   *\n   * @returns {void}\n   */\n  _onDisconnecting () {\n    this.log('disconnecting from %s', this.theirB58Id, Boolean(this.muxer))\n\n    delete this.switch.conns[this.theirB58Id]\n\n    let tasks = []\n\n    // Clean up stored connections\n    if (this.muxer) {\n      tasks.push((cb) => {\n        this.muxer.end(() => {\n          delete this.muxer\n          cb()\n        })\n      })\n    }\n\n    // If we have the base connection, abort it\n    // Ignore abort errors, since we're closing\n    if (this.conn) {\n      try {\n        this.conn.source.abort()\n      } catch (_) { }\n      delete this.conn\n    }\n\n    parallel(tasks, () => {\n      this._state('done')\n    })\n  }\n\n  /**\n   * Attempts to encrypt `this.conn` with the Switch's crypto.\n   *\n   * @private\n   * @fires ConnectionFSM#error\n   * @returns {void}\n   */\n  _onEncrypting () {\n    const msDialer = new multistream.Dialer()\n    msDialer.handle(this.conn, (err) => {\n      if (err) {\n        return this.close(maybeUnexpectedEnd(err))\n      }\n\n      this.log('selecting crypto %s to %s', this.switch.crypto.tag, this.theirB58Id)\n\n      msDialer.select(this.switch.crypto.tag, (err, _conn) => {\n        if (err) {\n          return this.close(maybeUnexpectedEnd(err))\n        }\n\n        const observedConn = observeConnection(null, this.switch.crypto.tag, _conn, this.switch.observer)\n        const encryptedConn = this.switch.crypto.encrypt(this.ourPeerInfo.id, observedConn, this.theirPeerInfo.id, (err) => {\n          if (err) {\n            return this.close(err)\n          }\n\n          this.conn = encryptedConn\n          this.conn.setPeerInfo(this.theirPeerInfo)\n          this._state('done')\n        })\n      })\n    })\n  }\n\n  /**\n   * Iterates over each Muxer on the Switch and attempts to upgrade\n   * the given `connection`. Successful muxed connections will be stored\n   * on the Switch.muxedConns with `b58Id` as their key for future reference.\n   *\n   * @private\n   * @returns {void}\n   */\n  _onUpgrading () {\n    const muxers = Object.keys(this.switch.muxers)\n    this.log('upgrading connection to %s', this.theirB58Id)\n\n    if (muxers.length === 0) {\n      return this._state('stop')\n    }\n\n    const msDialer = new multistream.Dialer()\n    msDialer.handle(this.conn, (err) => {\n      if (err) {\n        return this._didUpgrade(err)\n      }\n\n      // 1. try to handshake in one of the muxers available\n      // 2. if succeeds\n      //  - add the muxedConn to the list of muxedConns\n      //  - add incomming new streams to connHandler\n      const nextMuxer = (key) => {\n        this.log('selecting %s', key)\n        msDialer.select(key, (err, _conn) => {\n          if (err) {\n            if (muxers.length === 0) {\n              return this._didUpgrade(err)\n            }\n\n            return nextMuxer(muxers.shift())\n          }\n\n          // observe muxed connections\n          const conn = observeConnection(null, key, _conn, this.switch.observer)\n\n          this.muxer = this.switch.muxers[key].dialer(conn)\n\n          this.muxer.once('close', () => {\n            this.close()\n          })\n\n          // For incoming streams, in case identify is on\n          this.muxer.on('stream', (conn) => {\n            this.log('new stream created via muxer to %s', this.theirB58Id)\n            conn.setPeerInfo(this.theirPeerInfo)\n            this.switch.protocolMuxer(null)(conn)\n          })\n\n          this._didUpgrade(null)\n\n          // Run identify on the connection\n          if (this.switch.identify) {\n            this._identify((err, results) => {\n              if (err) {\n                return this.close(err)\n              }\n              this.theirPeerInfo = this.switch._peerBook.put(results.peerInfo)\n            })\n          }\n        })\n      }\n\n      nextMuxer(muxers.shift())\n    })\n  }\n\n  /**\n   * Runs the identify protocol on the connection\n   * @private\n   * @param {function(error, { PeerInfo })} callback\n   * @returns {void}\n   */\n  _identify (callback) {\n    if (!this.muxer) {\n      return nextTick(callback, errCode('The connection was already closed', 'ERR_CONNECTION_CLOSED'))\n    }\n    this.muxer.newStream(async (err, conn) => {\n      if (err) return callback(err)\n      const ms = new multistream.Dialer()\n      let results\n      try {\n        await msHandle(ms, conn)\n        const msConn = await msSelect(ms, identify.multicodec)\n        results = await identifyDialer(msConn, this.theirPeerInfo)\n      } catch (err) {\n        return callback(err)\n      }\n      callback(null, results)\n    })\n  }\n\n  /**\n   * Analyses the given error, if it exists, to determine where the state machine\n   * needs to go.\n   *\n   * @param {Error} err\n   * @returns {void}\n   */\n  _didUpgrade (err) {\n    if (err) {\n      this.log('Error upgrading connection:', err)\n      this.switch.conns[this.theirB58Id] = this\n      this.emit('error:upgrade_failed', err)\n      // Cant upgrade, hold the encrypted connection\n      return this._state('stop')\n    }\n\n    // move the state machine forward\n    this._state('done')\n  }\n\n  /**\n   * Performs the protocol handshake for the given protocol\n   * over the given connection. The resulting error or connection\n   * will be returned via the callback.\n   *\n   * @private\n   * @param {string} protocol\n   * @param {Connection} connection\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  _protocolHandshake (protocol, connection, callback) {\n    const msDialer = new multistream.Dialer()\n    msDialer.handle(connection, (err) => {\n      if (err) {\n        return callback(err, null)\n      }\n\n      msDialer.select(protocol, (err, _conn) => {\n        if (err) {\n          this.log('could not perform protocol handshake:', err)\n          return callback(err, null)\n        }\n\n        const conn = observeConnection(null, protocol, _conn, this.switch.observer)\n        this.log('successfully performed handshake of %s to %s', protocol, this.theirB58Id)\n        this.emit('connection', conn)\n        callback(null, conn)\n      })\n    })\n  }\n\n  /**\n   * Event handler for state transition errors\n   *\n   * @param {Error} err\n   * @returns {void}\n   */\n  _onStateError (err) {\n    this.emit('error', INVALID_STATE_TRANSITION(err))\n    this.log(err)\n  }\n}\n\nmodule.exports = withIs(ConnectionFSM, {\n  className: 'ConnectionFSM',\n  symbolName: 'libp2p-switch/ConnectionFSM'\n})\n","'use strict'\n\nexports = module.exports\nexports.multicodec = '/ipfs/id/1.0.0'\nexports.listener = require('./listener')\nexports.dialer = require('./dialer')\nexports.message = require('./message')\n","'use strict'\n\nconst tryEach = require('async/tryEach')\nconst debug = require('debug')\n\nconst log = debug('libp2p:switch:dialer')\n\nconst DialQueue = require('./queue')\n\n/**\n * Track dials per peer and limited them.\n */\nclass LimitDialer {\n  /**\n   * Create a new dialer.\n   *\n   * @param {number} perPeerLimit\n   * @param {number} dialTimeout\n   */\n  constructor (perPeerLimit, dialTimeout) {\n    log('create: %s peer limit, %s dial timeout', perPeerLimit, dialTimeout)\n    this.perPeerLimit = perPeerLimit\n    this.dialTimeout = dialTimeout\n    this.queues = new Map()\n  }\n\n  /**\n   * Dial a list of multiaddrs on the given transport.\n   *\n   * @param {PeerId} peer\n   * @param {SwarmTransport} transport\n   * @param {Array<Multiaddr>} addrs\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  dialMany (peer, transport, addrs, callback) {\n    log('dialMany:start')\n    // we use a token to track if we want to cancel following dials\n    const token = { cancel: false }\n\n    let errors = []\n    const tasks = addrs.map((m) => {\n      return (cb) => this.dialSingle(peer, transport, m, token, (err, result) => {\n        if (err) {\n          errors.push(err)\n          return cb(err)\n        }\n        return cb(null, result)\n      })\n    })\n\n    tryEach(tasks, (_, result) => {\n      if (result && result.conn) {\n        log('dialMany:success')\n        return callback(null, result)\n      }\n\n      log('dialMany:error')\n      callback(errors)\n    })\n  }\n\n  /**\n   * Dial a single multiaddr on the given transport.\n   *\n   * @param {PeerId} peer\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {CancelToken} token\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  dialSingle (peer, transport, addr, token, callback) {\n    const ps = peer.toB58String()\n    log('dialSingle: %s:%s', ps, addr.toString())\n    let q\n    if (this.queues.has(ps)) {\n      q = this.queues.get(ps)\n    } else {\n      q = new DialQueue(this.perPeerLimit, this.dialTimeout)\n      this.queues.set(ps, q)\n    }\n\n    q.push(transport, addr, token, callback)\n  }\n}\n\nmodule.exports = LimitDialer\n","'use strict'\n\nconst mafmt = require('mafmt')\nconst multiaddr = require('multiaddr')\n\nconst CircuitDialer = require('./circuit/dialer')\nconst utilsFactory = require('./circuit/utils')\n\nconst debug = require('debug')\nconst log = debug('libp2p:circuit:transportdialer')\nlog.err = debug('libp2p:circuit:error:transportdialer')\n\nconst createListener = require('./listener')\n\nclass Circuit {\n  static get tag () {\n    return 'Circuit'\n  }\n\n  /**\n   * Creates an instance of Dialer.\n   *\n   * @param {Swarm} swarm - the swarm\n   * @param {any} options - config options\n   *\n   * @memberOf Dialer\n   */\n  constructor (swarm, options) {\n    this.options = options || {}\n\n    this.swarm = swarm\n    this.dialer = null\n    this.utils = utilsFactory(swarm)\n    this.peerInfo = this.swarm._peerInfo\n    this.relays = this.filter(this.peerInfo.multiaddrs.toArray())\n\n    // if no explicit relays, add a default relay addr\n    if (this.relays.length === 0) {\n      this.peerInfo\n        .multiaddrs\n        .add(`/p2p-circuit/ipfs/${this.peerInfo.id.toB58String()}`)\n    }\n\n    this.dialer = new CircuitDialer(swarm, options)\n\n    this.swarm.on('peer-mux-established', (peerInfo) => {\n      this.dialer.canHop(peerInfo)\n    })\n    this.swarm.on('peer-mux-closed', (peerInfo) => {\n      this.dialer.relayPeers.delete(peerInfo.id.toB58String())\n    })\n  }\n\n  /**\n   * Dial the relays in the Addresses.Swarm config\n   *\n   * @param {Array} relays\n   * @return {void}\n   */\n  _dialSwarmRelays () {\n    // if we have relay addresses in swarm config, then dial those relays\n    this.relays.forEach((relay) => {\n      let relaySegments = relay\n        .toString()\n        .split('/p2p-circuit')\n        .filter(segment => segment.length)\n\n      relaySegments.forEach((relaySegment) => {\n        const ma = this.utils.peerInfoFromMa(multiaddr(relaySegment))\n        this.dialer._dialRelay(ma)\n      })\n    })\n  }\n\n  /**\n   * Dial a peer over a relay\n   *\n   * @param {multiaddr} ma - the multiaddr of the peer to dial\n   * @param {Object} options - dial options\n   * @param {Function} cb - a callback called once dialed\n   * @returns {Connection} - the connection\n   *\n   * @memberOf Dialer\n   */\n  dial (ma, options, cb) {\n    return this.dialer.dial(ma, options, cb)\n  }\n\n  /**\n   * Create a listener\n   *\n   * @param {any} options\n   * @param {Function} handler\n   * @return {listener}\n   */\n  createListener (options, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = this.options || {}\n    }\n\n    const listener = createListener(this.swarm, options, handler)\n    listener.on('listen', this._dialSwarmRelays.bind(this))\n    return listener\n  }\n\n  /**\n   * Filter check for all multiaddresses\n   * that this transport can dial on\n   *\n   * @param {any} multiaddrs\n   * @returns {Array<multiaddr>}\n   *\n   * @memberOf Dialer\n   */\n  filter (multiaddrs) {\n    if (!Array.isArray(multiaddrs)) {\n      multiaddrs = [multiaddrs]\n    }\n    return multiaddrs.filter((ma) => {\n      return mafmt.Circuit.matches(ma)\n    })\n  }\n}\n\nmodule.exports = Circuit\n","'use strict'\n\nmodule.exports = function extractDataFromBlock (block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length\n  const blockEnd = blockStart + blockLength\n\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    // If we are looking for a byte range that is starts after the start of the block,\n    // return an empty block.  This can happen when internal nodes contain data\n    return Buffer.alloc(0)\n  }\n\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    // If the end byte is in the current block, truncate the block to the end byte\n    block = block.slice(0, requestedEnd - blockStart)\n  }\n\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    // If the start byte is in the current block, skip to the start byte\n    block = block.slice(requestedStart - blockStart)\n  }\n\n  return block\n}\n","'use strict'\n\nconst errCode = require('err-code')\n\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (!length && length !== 0) {\n    length = size - offset\n  }\n\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset + length > size) {\n    length = size - offset\n  }\n\n  return {\n    offset,\n    length\n  }\n}\n\nmodule.exports = validateOffsetAndLength\n","'use strict'\n\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return async function * (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name, `${path}/${link.Name}`, [], depth + 1, ipld)\n\n      yield result.entry\n    }\n  }\n}\n\nmodule.exports = directoryContent\n","'use strict'\n\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return (options = {}) => {\n    return listDirectory(node, path, resolve, depth, ipld, options)\n  }\n}\n\nasync function * listDirectory (node, path, resolve, depth, ipld, options) {\n  const links = node.Links\n\n  for (const link of links) {\n    const name = link.Name.substring(2)\n\n    if (name) {\n      const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, ipld)\n\n      yield result.entry\n    } else {\n      // descend into subshard\n      node = await ipld.get(link.Hash)\n\n      for await (const file of listDirectory(node, path, resolve, depth, ipld, options)) {\n        yield file\n      }\n    }\n  }\n}\n\nmodule.exports = hamtShardedDirectoryContent\n","'use strict'\n\nconst extractDataFromBlock = require('../../../utils/extract-data-from-block')\nconst validateOffsetAndLength = require('../../../utils/validate-offset-and-length')\nconst UnixFS = require('ipfs-unixfs')\nconst errCode = require('err-code')\n\nasync function * emitBytes (ipld, node, start, end, streamPosition = 0) {\n  // a `raw` node\n  if (Buffer.isBuffer(node)) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end)\n\n    if (buf.length) {\n      yield buf\n    }\n\n    streamPosition += buf.length\n\n    return streamPosition\n  }\n\n  let file\n\n  try {\n    file = UnixFS.unmarshal(node.Data)\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  // might be a unixfs `raw` node or have data on intermediate nodes\n  const nodeHasData = Boolean(file.data && file.data.length)\n\n  if (nodeHasData) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end)\n\n    if (buf.length) {\n      yield buf\n    }\n\n    streamPosition += file.data.length\n  }\n\n  let childStart = streamPosition\n\n  // work out which child nodes contain the requested data\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i]\n    const childEnd = streamPosition + file.blockSizes[i]\n\n    if ((start >= childStart && start < childEnd) || // child has offset byte\n        (end > childStart && end <= childEnd) || // child has end byte\n        (start < childStart && end > childEnd)) { // child is between offset and end bytes\n      const child = await ipld.get(childLink.Hash)\n\n      for await (const buf of emitBytes(ipld, child, start, end, streamPosition)) {\n        streamPosition += buf.length\n\n        yield buf\n      }\n    }\n\n    streamPosition = childEnd\n    childStart = childEnd + 1\n  }\n}\n\nconst fileContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return (options = {}) => {\n    const fileSize = unixfs.fileSize()\n\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(fileSize, options.offset, options.length)\n\n    const start = offset\n    const end = offset + length\n\n    return emitBytes(ipld, node, start, end)\n  }\n}\n\nmodule.exports = fileContent\n","'use strict'\n\nconst Bucket = require('hamt-sharding/src/bucket')\nconst DirSharded = require('ipfs-unixfs-importer/src/dir-sharded')\n\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(\n    links.map(link => {\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        return bucket._putObjectAt(pos, new Bucket({\n          hashFn: DirSharded.hashFn\n        }, bucket, pos))\n      }\n\n      return rootBucket.put(link.Name.substring(2), true)\n    })\n  )\n}\n\nconst toPrefix = (position) => {\n  return position\n    .toString('16')\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nconst toBucketPath = (position) => {\n  let bucket = position.bucket\n  const path = []\n\n  while (bucket._parent) {\n    path.push(bucket)\n\n    bucket = bucket._parent\n  }\n\n  path.push(bucket)\n\n  return path.reverse()\n}\n\nconst findShardCid = async (node, name, ipld, context) => {\n  if (!context) {\n    context = {\n      rootBucket: new Bucket({\n        hashFn: DirSharded.hashFn\n      }),\n      hamtDepth: 1\n    }\n\n    context.lastBucket = context.rootBucket\n  }\n\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket)\n\n  const position = await context.rootBucket._findNewBucketAndPos(name)\n  let prefix = toPrefix(position.pos)\n  const bucketPath = toBucketPath(position)\n\n  if (bucketPath.length > (context.hamtDepth)) {\n    context.lastBucket = bucketPath[context.hamtDepth]\n\n    prefix = toPrefix(context.lastBucket._posAtParent)\n  }\n\n  const link = node.Links.find(link => {\n    const entryPrefix = link.Name.substring(0, 2)\n    const entryName = link.Name.substring(2)\n\n    if (entryPrefix !== prefix) {\n      // not the entry or subshard we're looking for\n      return\n    }\n\n    if (entryName && entryName !== name) {\n      // not the entry we're looking for\n      return\n    }\n\n    return true\n  })\n\n  if (!link) {\n    return null\n  }\n\n  if (link.Name.substring(2) === name) {\n    return link.Hash\n  }\n\n  context.hamtDepth++\n\n  node = await ipld.get(link.Hash)\n\n  return findShardCid(node, name, ipld, context)\n}\n\nmodule.exports = findShardCid\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict'\n\nconst mh = require('multihashes')\nconst mc = require('multicodec')\n\nconst persist = (node, ipld, options) => {\n  if (!options.codec && node.length) {\n    options.cidVersion = 1\n    options.codec = 'raw'\n  }\n\n  if (isNaN(options.hashAlg)) {\n    options.hashAlg = mh.names[options.hashAlg]\n  }\n\n  if (options.hashAlg !== mh.names['sha2-256']) {\n    options.cidVersion = 1\n  }\n\n  if (options.format) {\n    options.codec = options.format\n  }\n\n  const format = mc[options.codec.toUpperCase().replace(/-/g, '_')]\n\n  return ipld.put(node, format, options)\n}\n\nmodule.exports = persist\n","'use strict'\n\nconst {\n  DAGLink,\n  DAGNode\n} = require('ipld-dag-pb')\nconst UnixFS = require('ipfs-unixfs')\nconst multihashing = require('multihashing-async')\nconst Dir = require('./dir')\nconst persist = require('./utils/persist')\nconst Bucket = require('hamt-sharding')\nconst extend = require('deep-extend')\n\nconst hashFn = async function (value) {\n  const hash = await multihashing(Buffer.from(value, 'utf8'), 'murmur3-128')\n\n  // Multihashing inserts preamble of 2 bytes. Remove it.\n  // Also, murmur3 outputs 128 bit but, accidently, IPFS Go's\n  // implementation only uses the first 64, so we must do the same\n  // for parity..\n  const justHash = hash.slice(2, 10)\n  const length = justHash.length\n  const result = Buffer.alloc(length)\n  // TODO: invert buffer because that's how Go impl does it\n  for (let i = 0; i < length; i++) {\n    result[length - i - 1] = justHash[i]\n  }\n\n  return result\n}\nhashFn.code = 0x22 // TODO: get this from multihashing-async?\n\nconst defaultOptions = {\n  hashFn: hashFn\n}\n\nclass DirSharded extends Dir {\n  constructor (props, options) {\n    options = extend({}, defaultOptions, options)\n\n    super(props, options)\n\n    this._bucket = Bucket(options)\n  }\n\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  async * flush (path, ipld) {\n    for await (const entry of flush(path, this._bucket, ipld, this.options)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = DirSharded\n\nmodule.exports.hashFn = hashFn\n\nasync function * flush (path, bucket, ipld, options) {\n  const children = bucket._children\n  const links = []\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (Bucket.isBucket(child)) {\n      let shard\n\n      for await (const subShard of await flush('', child, ipld, options)) {\n        shard = subShard\n      }\n\n      links.push(await new DAGLink(labelPrefix, shard.node.size, shard.cid))\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(dir.path, ipld)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push(new DAGLink(label, flushedDir.node.size, flushedDir.cid))\n    } else {\n      const value = child.value\n\n      if (!value.node) {\n        if (value.cid) {\n          value.node = await ipld.get(value.cid)\n        } else {\n          continue\n        }\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.node.length || value.node.size || value.node.Size\n\n      links.push(await new DAGLink(label, size, value.cid))\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Buffer.from(children.bitField().reverse())\n  const dir = new UnixFS('hamt-sharded-directory', data)\n  dir.fanout = bucket.tableSize()\n  dir.hashType = options.hashFn.code\n\n  const node = DAGNode.create(dir.marshal(), links)\n  const cid = await persist(node, ipld, options)\n\n  yield {\n    cid,\n    node,\n    unixfs: dir,\n    path\n  }\n}\n","'use strict'\n\nconst batch = require('async-iterator-batch')\n\nmodule.exports = function * trickleReduceToRoot (source, reduce, options) {\n  yield trickleStream(source, reduce, options)\n}\n\nasync function trickleStream (source, reduce, options) {\n  let root\n  let iteration = 0\n  let maxDepth = 1\n  let subTree = root = new Root(options.layerRepeat)\n\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce))\n      }\n\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++\n      }\n\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration)\n\n      iteration++\n    }\n\n    subTree.append(layer)\n  }\n\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce))\n  }\n\n  return root.reduce(reduce)\n}\n\nclass SubTree {\n  constructor (maxDepth, layerRepeat, iteration) {\n    this.maxDepth = maxDepth\n    this.layerRepeat = layerRepeat\n    this.currentDepth = 1\n    this.iteration = iteration\n\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    }\n  }\n\n  isFull () {\n    if (!this.root.data) {\n      return false\n    }\n\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      // can descend\n      this._addNextNodeToParent(this.node)\n\n      return false\n    }\n\n    // try to find new node from node.parent\n    const distantRelative = this._findParent(this.node, this.currentDepth)\n\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative)\n\n      return false\n    }\n\n    return true\n  }\n\n  _addNextNodeToParent (parent) {\n    this.parent = parent\n\n    // find site for new node\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    }\n\n    parent.children.push(nextNode)\n\n    this.currentDepth = nextNode.depth\n    this.node = nextNode\n  }\n\n  append (layer) {\n    this.node.data = layer\n  }\n\n  reduce (reduce) {\n    return this._reduce(this.root, reduce)\n  }\n\n  async _reduce (node, reduce) {\n    let children = []\n\n    if (node.children.length) {\n      children = await Promise.all(\n        node.children\n          .filter(child => child.data)\n          .map(child => this._reduce(child, reduce))\n      )\n    }\n\n    return reduce(node.data.concat(children))\n  }\n\n  _findParent (node, depth) {\n    const parent = node.parent\n\n    if (!parent || parent.depth === 0) {\n      return\n    }\n\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      // this layer is full, may be able to traverse to a different branch\n      return this._findParent(parent, depth)\n    }\n\n    return parent\n  }\n}\n\nclass Root extends SubTree {\n  constructor (layerRepeat) {\n    super(0, layerRepeat)\n\n    this.root.depth = 0\n    this.currentDepth = 1\n  }\n\n  addChild (child) {\n    this.root.children.push(child)\n  }\n\n  reduce (reduce) {\n    return reduce(this.root.data.concat(this.root.children))\n  }\n}\n","'use strict'\n\nconst batch = require('async-iterator-batch')\n\nasync function * balanced (source, reduce, options) {\n  yield await reduceToParents(source, reduce, options)\n}\n\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nmodule.exports = balanced\n","'use strict'\n\nconst batch = require('async-iterator-batch')\n\nmodule.exports = async function * (source, reduce) {\n  const roots = []\n\n  for await (const chunk of batch(source, Infinity)) {\n    roots.push(await reduce(chunk))\n  }\n\n  yield roots[0]\n}\n","'use strict'\n\nconst BufferList = require('bl')\n\nmodule.exports = async function * fixedSizeChunker (source, options) {\n  let bl = new BufferList()\n  let currentLength = 0\n  let emitted = false\n  const maxChunkSize = options.maxChunkSize\n\n  for await (const buffer of source) {\n    bl.append(buffer)\n\n    currentLength += buffer.length\n\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize)\n      emitted = true\n\n      // throw away consumed bytes\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList()\n        currentLength = 0\n      } else {\n        const newBl = new BufferList()\n        newBl.append(bl.shallowSlice(maxChunkSize))\n        bl = newBl\n\n        // update our offset\n        currentLength -= maxChunkSize\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield bl.slice(0, currentLength)\n  }\n}\n","'use strict'\n\nconst BufferList = require('bl')\nconst { create } = require('rabin-wasm')\nconst errcode = require('err-code')\n\nmodule.exports = async function * rabinChunker (source, options) {\n  const rabin = jsRabin()\n\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\nconst jsRabin = () => {\n  return async function * (source, options) {\n    const r = await create(options.bits, options.min, options.max, options.window)\n    const buffers = new BufferList()\n    let pending = []\n\n    for await (const chunk of source) {\n      buffers.append(chunk)\n      pending.push(chunk)\n\n      const sizes = r.fingerprint(Buffer.concat(pending))\n      pending = []\n\n      for (let i = 0; i < sizes.length; i++) {\n        var size = sizes[i]\n        var buf = buffers.slice(0, size)\n        buffers.consume(size)\n\n        yield buf\n      }\n    }\n\n    if (buffers.length) {\n      yield buffers.slice(0)\n    }\n  }\n}\n","'use strict'\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\nconst Bucket = require('hamt-sharding/src/bucket')\nconst DirSharded = require('ipfs-unixfs-importer/src/dir-sharded')\nconst log = require('debug')('ipfs:mfs:core:utils:hamt-utils')\nconst UnixFS = require('ipfs-unixfs')\nconst mc = require('multicodec')\nconst mh = require('multihashes')\nconst last = require('async-iterator-last')\n\nconst updateHamtDirectory = async (context, links, bucket, options) => {\n  // update parent with new bit field\n  const data = Buffer.from(bucket._children.bitField().reverse())\n  const dir = new UnixFS('hamt-sharded-directory', data)\n  dir.fanout = bucket.tableSize()\n  dir.hashType = DirSharded.hashFn.code\n\n  const format = mc[options.format.toUpperCase().replace(/-/g, '_')]\n  const hashAlg = mh.names[options.hashAlg]\n\n  const parent = DAGNode.create(dir.marshal(), links)\n  const cid = await context.ipld.put(parent, format, {\n    cidVersion: options.cidVersion,\n    hashAlg,\n    hashOnly: !options.flush\n  })\n\n  return {\n    node: parent,\n    cid\n  }\n}\n\nconst recreateHamtLevel = async (links, rootBucket, parentBucket, positionAtParent) => {\n  // recreate this level of the HAMT\n  const bucket = new Bucket({\n    hashFn: DirSharded.hashFn,\n    hash: parentBucket ? parentBucket._options.hash : undefined\n  }, parentBucket, positionAtParent)\n\n  if (parentBucket) {\n    parentBucket._putObjectAt(positionAtParent, bucket)\n  }\n\n  await addLinksToHamtBucket(links, bucket, rootBucket)\n\n  return bucket\n}\n\nconst addLinksToHamtBucket = async (links, bucket, rootBucket) => {\n  await Promise.all(\n    links.map(link => {\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        bucket._putObjectAt(pos, new Bucket({\n          hashFn: DirSharded.hashFn\n        }, bucket, pos))\n\n        return Promise.resolve()\n      }\n\n      return (rootBucket || bucket).put(link.Name.substring(2), {\n        size: link.TSize,\n        cid: link.Hash\n      })\n    })\n  )\n}\n\nconst toPrefix = (position) => {\n  return position\n    .toString('16')\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nconst generatePath = async (context, fileName, rootNode) => {\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateHamtLevel(rootNode.Links, null, null, null)\n  const position = await rootBucket._findNewBucketAndPos(fileName)\n\n  // the path to the root bucket\n  let path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n  let currentBucket = position.bucket\n\n  while (currentBucket !== rootBucket) {\n    path.push({\n      bucket: currentBucket,\n      prefix: toPrefix(currentBucket._posAtParent)\n    })\n\n    currentBucket = currentBucket._parent\n  }\n\n  path.reverse()\n  path[0].node = rootNode\n\n  // load DAGNode for each path segment\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]\n\n    // find prefix in links\n    const link = segment.node.Links\n      .filter(link => link.Name.substring(0, 2) === segment.prefix)\n      .pop()\n\n    // entry was not in shard\n    if (!link) {\n      // reached bottom of tree, file will be added to the current bucket\n      log(`Link ${segment.prefix}${fileName} will be added`)\n      // return path\n      continue\n    }\n\n    // found entry\n    if (link.Name === `${segment.prefix}${fileName}`) {\n      log(`Link ${segment.prefix}${fileName} will be replaced`)\n      // file already existed, file will be added to the current bucket\n      // return path\n      continue\n    }\n\n    // found subshard\n    log(`Found subshard ${segment.prefix}`)\n    const node = await context.ipld.get(link.Hash)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[i + 1]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n\n      await recreateHamtLevel(node.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n      const position = await rootBucket._findNewBucketAndPos(fileName)\n\n      // i--\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: node\n      })\n\n      continue\n    }\n\n    const nextSegment = path[i + 1]\n\n    // add intermediate links to bucket\n    await addLinksToHamtBucket(node.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = node\n  }\n\n  await rootBucket.put(fileName, true)\n\n  path.reverse()\n\n  return {\n    rootBucket,\n    path\n  }\n}\n\nconst createShard = async (context, contents, options) => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: null,\n    parentKey: null,\n    path: '',\n    dirty: true,\n    flat: false\n  }, options)\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  return last(shard.flush('', context.ipld, null))\n}\n\nmodule.exports = {\n  generatePath,\n  updateHamtDirectory,\n  recreateHamtLevel,\n  addLinksToHamtBucket,\n  toPrefix,\n  createShard\n}\n","// Copyright (c) 2015-2017 David M. Lee, II\n'use strict';\n\n/**\n * Local reference to TimeoutError\n * @private\n */\nvar TimeoutError;\n\n/**\n * Rejects a promise with a {@link TimeoutError} if it does not settle within\n * the specified timeout.\n *\n * @param {Promise} promise The promise.\n * @param {number} timeoutMillis Number of milliseconds to wait on settling.\n * @returns {Promise} Either resolves/rejects with `promise`, or rejects with\n *                   `TimeoutError`, whichever settles first.\n */\nvar timeout = module.exports.timeout = function(promise, timeoutMillis) {\n  var error = new TimeoutError(),\n      timeout;\n\n  return Promise.race([\n    promise,\n    new Promise(function(resolve, reject) {\n      timeout = setTimeout(function() {\n        reject(error);\n      }, timeoutMillis);\n    }),\n  ]).then(function(v) {\n    clearTimeout(timeout);\n    return v;\n  }, function(err) {\n    clearTimeout(timeout);\n    throw err;\n  });\n};\n\n/**\n * Exception indicating that the timeout expired.\n */\nTimeoutError = module.exports.TimeoutError = function() {\n  Error.call(this)\n  this.stack = Error().stack\n  this.message = 'Timeout';\n};\n\nTimeoutError.prototype = Object.create(Error.prototype);\nTimeoutError.prototype.name = \"TimeoutError\";\n","const events = {}\n\nconst observable = (worker) => {\n  worker.addEventListener('message', (event) => {\n    observable.dispatchEvent('message', worker, event)\n  })\n\n  if (worker.port) {\n    worker.port.addEventListener('message', (event) => {\n      observable.dispatchEvent('message', worker, event)\n    })\n  }\n}\n\nobservable.addEventListener = (type, fn) => {\n  if (!events[type]) {\n    events[type] = []\n  }\n\n  events[type].push(fn)\n}\n\nobservable.removeEventListener = (type, fn) => {\n  if (!events[type]) {\n    return\n  }\n\n  events[type] = events[type]\n    .filter(listener => listener === fn)\n}\n\nobservable.dispatchEvent = function () {\n  const args = Array.prototype.slice.call(arguments)\n  const type = args.shift()\n\n  if (!events[type]) {\n    return\n  }\n\n  events[type].forEach(fn => fn.apply(null, args))\n}\n\nmodule.exports = observable\n","const EventEmitter = require('events').EventEmitter\nconst shortid = require('shortid')\nconst {\n  WORKER_REQUEST_READ_LOCK,\n  WORKER_RELEASE_READ_LOCK,\n  MASTER_GRANT_READ_LOCK,\n  WORKER_REQUEST_WRITE_LOCK,\n  WORKER_RELEASE_WRITE_LOCK,\n  MASTER_GRANT_WRITE_LOCK\n} = require('./constants')\nconst observer = require('observable-webworkers')\n\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n  return (worker, event) => {\n    if (!event || !event.data || event.data.type !== requestType) {\n      return\n    }\n\n    const requestEvent = {\n      type: event.data.type,\n      name: event.data.name,\n      identifier: event.data.identifier\n    }\n\n    emitter.emit(masterEvent, requestEvent.name, () => {\n      // grant lock to worker\n      worker.postMessage({\n        type: grantType,\n        name: requestEvent.name,\n        identifier: requestEvent.identifier\n      })\n\n      // wait for worker to finish\n      return new Promise((resolve) => {\n        const releaseEventListener = (event) => {\n          if (!event || !event.data) {\n            return\n          }\n\n          const releaseEvent = {\n            type: event.data.type,\n            name: event.data.name,\n            identifier: event.data.identifier\n          }\n\n          if (releaseEvent && releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n            worker.removeEventListener('message', releaseEventListener)\n            resolve()\n          }\n        }\n\n        worker.addEventListener('message', releaseEventListener)\n      })\n    })\n  }\n}\n\nconst makeWorkerLockRequest = (global, name, requestType, grantType, releaseType) => {\n  return (fn) => {\n    const id = shortid.generate()\n\n    global.postMessage({\n      type: requestType,\n      identifier: id,\n      name\n    })\n\n    return new Promise((resolve, reject) => {\n      const listener = (event) => {\n        if (!event || !event.data) {\n          return\n        }\n\n        const responseEvent = {\n          type: event.data.type,\n          identifier: event.data.identifier\n        }\n\n        if (responseEvent && responseEvent.type === grantType && responseEvent.identifier === id) {\n          global.removeEventListener('message', listener)\n\n          let error\n\n          fn()\n            .catch((err) => {\n              error = err\n            })\n            .then((result) => {\n              global.postMessage({\n                type: releaseType,\n                identifier: id,\n                name\n              })\n\n              if (error) {\n                return reject(error)\n              }\n\n              return resolve(result)\n            })\n        }\n      }\n\n      global.addEventListener('message', listener)\n    })\n  }\n}\n\nconst defaultOptions = {\n  global: global,\n  singleProcess: false\n}\n\nmodule.exports = (options) => {\n  options = Object.assign({}, defaultOptions, options)\n  const isMaster = !!options.global.document || options.singleProcess\n\n  if (isMaster) {\n    const emitter = new EventEmitter()\n\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK))\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK))\n\n    return emitter\n  }\n\n  return {\n    isWorker: true,\n    readLock: (name, options) => makeWorkerLockRequest(options.global, name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n    writeLock: (name, options) => makeWorkerLockRequest(options.global, name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n  }\n}\n","const EventEmitter = require('events').EventEmitter\nconst shortid = require('shortid')\nconst {\n  WORKER_REQUEST_READ_LOCK,\n  WORKER_RELEASE_READ_LOCK,\n  MASTER_GRANT_READ_LOCK,\n  WORKER_REQUEST_WRITE_LOCK,\n  WORKER_RELEASE_WRITE_LOCK,\n  MASTER_GRANT_WRITE_LOCK\n} = require('./constants')\nlet cluster\n\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n  return (worker, requestEvent) => {\n    if (requestEvent && requestEvent.type === requestType) {\n      emitter.emit(masterEvent, requestEvent.name, () => {\n        // grant lock to worker\n        worker.send({\n          type: grantType,\n          name: requestEvent.name,\n          identifier: requestEvent.identifier\n        })\n\n        // wait for worker to finish\n        return new Promise((resolve) => {\n          const releaseEventListener = (releaseEvent) => {\n            if (releaseEvent && releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n              worker.removeListener('message', releaseEventListener)\n              resolve()\n            }\n          }\n\n          worker.on('message', releaseEventListener)\n        })\n      })\n    }\n  }\n}\n\nconst makeWorkerLockRequest = (name, requestType, grantType, releaseType) => {\n  return (fn) => {\n    const id = shortid.generate()\n\n    process.send({\n      type: requestType,\n      identifier: id,\n      name\n    })\n\n    return new Promise((resolve, reject) => {\n      const listener = (event) => {\n        if (event && event.type === grantType && event.identifier === id) {\n          process.removeListener('message', listener)\n\n          let error = null\n\n          fn()\n            .catch((err) => {\n              error = err\n            })\n            .then((result) => {\n              process.send({\n                type: releaseType,\n                identifier: id,\n                name\n              })\n\n              if (error) {\n                return reject(error)\n              }\n\n              resolve(result)\n            })\n        }\n      }\n\n      process.on('message', listener)\n    })\n  }\n}\n\nmodule.exports = (options) => {\n  try {\n    cluster = require('cluster')\n\n    if (!Object.keys(cluster).length) {\n      return\n    }\n  } catch (_) {\n    return\n  }\n\n  if (cluster.isMaster || options.singleProcess) {\n    const emitter = new EventEmitter()\n\n    cluster.on('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK))\n    cluster.on('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK))\n\n    return emitter\n  }\n\n  return {\n    isWorker: true,\n    readLock: (name, options) => makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n    writeLock: (name, options) => makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require(\"create-hash\");\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst randomBytes = require(\"randombytes\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction pbkdf2Promise(password, saltMixin, iterations, keylen, digest) {\n    return Promise.resolve().then(() => new Promise((resolve, reject) => {\n        const callback = (err, derivedKey) => {\n            if (err) {\n                return reject(err);\n            }\n            else {\n                return resolve(derivedKey);\n            }\n        };\n        pbkdf2_1.pbkdf2(password, saltMixin, iterations, keylen, digest, callback);\n    }));\n}\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n    const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return Promise.resolve().then(() => {\n        const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n        const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n        return pbkdf2Promise(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n    });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","module.exports = require('immediate')\n","'use strict'\n\n// For (old) browser support\nvar xtend = require('xtend')\nvar assign = require('xtend/mutable')\n\nmodule.exports = function supports () {\n  var manifest = xtend.apply(null, arguments)\n\n  return assign(manifest, {\n    // Features of abstract-leveldown\n    bufferKeys: manifest.bufferKeys || false,\n    snapshots: manifest.snapshots || false,\n    permanence: manifest.permanence || false,\n    seek: manifest.seek || false,\n    clear: manifest.clear || false,\n\n    // Features of abstract-leveldown that levelup doesn't have\n    status: manifest.status || false,\n\n    // Features of disk-based implementations\n    createIfMissing: manifest.createIfMissing || false,\n    errorIfExists: manifest.errorIfExists || false,\n\n    // Features of level(up) that abstract-leveldown doesn't have yet\n    deferredOpen: manifest.deferredOpen || false,\n    openCallback: manifest.openCallback || false,\n    promises: manifest.promises || false,\n    streams: manifest.streams || false,\n    encodings: manifest.encodings || false,\n\n    // Methods that are not part of abstract-leveldown or levelup\n    additionalMethods: xtend(manifest.additionalMethods)\n  })\n}\n","'use strict'\nvar BN = require('./bn')\n\nfunction ECJPoint (x, y, z) {\n  if (x === null && y === null && z === null) {\n    this.x = ECJPoint.one\n    this.y = ECJPoint.one\n    this.z = ECJPoint.zero\n  } else {\n    this.x = x\n    this.y = y\n    this.z = z\n  }\n\n  this.zOne = this.z === ECJPoint.one\n}\n\nECJPoint.zero = BN.fromNumber(0)\nECJPoint.one = BN.fromNumber(1)\n\nECJPoint.prototype.neg = function () {\n  if (this.inf) return this\n\n  return new ECJPoint(this.x, this.y.redNeg(), this.z)\n}\n\nECJPoint.prototype.add = function (p) {\n  // O + P = P\n  if (this.inf) return p\n\n  // P + O = P\n  if (p.inf) return this\n\n  // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#addition-add-1998-cmo-2\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr()\n  var z2 = this.z.redSqr()\n  var u1 = this.x.redMul(pz2)\n  var u2 = p.x.redMul(z2)\n  var s1 = this.y.redMul(pz2).redMul(p.z)\n  var s2 = p.y.redMul(z2).redMul(this.z)\n\n  var h = u1.redSub(u2)\n  var r = s1.redSub(s2)\n  if (h.isZero()) {\n    if (r.isZero()) return this.dbl()\n    return new ECJPoint(null, null, null)\n  }\n\n  var h2 = h.redSqr()\n  var v = u1.redMul(h2)\n  var h3 = h2.redMul(h)\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n  var nz = this.z.redMul(p.z).redMul(h)\n\n  return new ECJPoint(nx, ny, nz)\n}\n\nECJPoint.prototype.mixedAdd = function (p) {\n  // O + P = P\n  if (this.inf) return p.toECJPoint()\n\n  // P + O = P\n  if (p.inf) return this\n\n  // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#addition-add-1998-cmo-2\n  //   with p.z = 1\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr()\n  var u1 = this.x\n  var u2 = p.x.redMul(z2)\n  var s1 = this.y\n  var s2 = p.y.redMul(z2).redMul(this.z)\n\n  var h = u1.redSub(u2)\n  var r = s1.redSub(s2)\n  if (h.isZero()) {\n    if (r.isZero()) return this.dbl()\n    return new ECJPoint(null, null, null)\n  }\n\n  var h2 = h.redSqr()\n  var v = u1.redMul(h2)\n  var h3 = h2.redMul(h)\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n  var nz = this.z.redMul(h)\n\n  return new ECJPoint(nx, ny, nz)\n}\n\nECJPoint.prototype.dbl = function () {\n  if (this.inf) return this\n\n  var nx\n  var ny\n  var nz\n\n  // Z = 1\n  if (this.zOne) {\n    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-mdbl-2007-bl\n    // 1M + 5S + 6A + 3*2 + 1*3 + 1*8\n\n    // XX = X1^2\n    var xx = this.x.redSqr()\n    // YY = Y1^2\n    var yy = this.y.redSqr()\n    // YYYY = YY^2\n    var yyyy = yy.redSqr()\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy)\n    s = s.redIAdd(s)\n    // M = 3 * XX\n    var m = xx.redAdd(xx).redIAdd(xx)\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s)\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy).redIAdd(yyyy).redIAdd(yyyy)\n\n    // X3 = T\n    nx = t\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8)\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y)\n  } else {\n    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-dbl-2009-l\n    // 2M + 5S + 6A + 3*2 + 1*3 + 1*8\n\n    // A = X1^2\n    var a = this.x.redSqr()\n    // B = Y1^2\n    var b = this.y.redSqr()\n    // C = B^2\n    var c = b.redSqr()\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c)\n    d = d.redIAdd(d)\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a)\n    // F = E^2\n    var f = e.redSqr()\n\n    // 8 * C\n    var c8 = c.redIAdd(c).redIAdd(c).redIAdd(c)\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d)\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8)\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z)\n    nz = nz.redIAdd(nz)\n  }\n\n  return new ECJPoint(nx, ny, nz)\n}\n\nECJPoint.prototype.dblp = function (pow) {\n  if (pow === 0 || this.inf) return this\n\n  var point = this\n  for (var i = 0; i < pow; i++) point = point.dbl()\n\n  return point\n}\n\nObject.defineProperty(ECJPoint.prototype, 'inf', {\n  enumerable: true,\n  get: function () {\n    return this.z.isZero()\n  }\n})\n\nmodule.exports = ECJPoint\n","'use strict'\nexports.umulTo10x10 = function (num1, num2, out) {\n  var a = num1.words\n  var b = num2.words\n  var o = out.words\n  var c = 0\n  var lo\n  var mid\n  var hi\n  var a0 = a[0] | 0\n  var al0 = a0 & 0x1fff\n  var ah0 = a0 >>> 13\n  var a1 = a[1] | 0\n  var al1 = a1 & 0x1fff\n  var ah1 = a1 >>> 13\n  var a2 = a[2] | 0\n  var al2 = a2 & 0x1fff\n  var ah2 = a2 >>> 13\n  var a3 = a[3] | 0\n  var al3 = a3 & 0x1fff\n  var ah3 = a3 >>> 13\n  var a4 = a[4] | 0\n  var al4 = a4 & 0x1fff\n  var ah4 = a4 >>> 13\n  var a5 = a[5] | 0\n  var al5 = a5 & 0x1fff\n  var ah5 = a5 >>> 13\n  var a6 = a[6] | 0\n  var al6 = a6 & 0x1fff\n  var ah6 = a6 >>> 13\n  var a7 = a[7] | 0\n  var al7 = a7 & 0x1fff\n  var ah7 = a7 >>> 13\n  var a8 = a[8] | 0\n  var al8 = a8 & 0x1fff\n  var ah8 = a8 >>> 13\n  var a9 = a[9] | 0\n  var al9 = a9 & 0x1fff\n  var ah9 = a9 >>> 13\n  var b0 = b[0] | 0\n  var bl0 = b0 & 0x1fff\n  var bh0 = b0 >>> 13\n  var b1 = b[1] | 0\n  var bl1 = b1 & 0x1fff\n  var bh1 = b1 >>> 13\n  var b2 = b[2] | 0\n  var bl2 = b2 & 0x1fff\n  var bh2 = b2 >>> 13\n  var b3 = b[3] | 0\n  var bl3 = b3 & 0x1fff\n  var bh3 = b3 >>> 13\n  var b4 = b[4] | 0\n  var bl4 = b4 & 0x1fff\n  var bh4 = b4 >>> 13\n  var b5 = b[5] | 0\n  var bl5 = b5 & 0x1fff\n  var bh5 = b5 >>> 13\n  var b6 = b[6] | 0\n  var bl6 = b6 & 0x1fff\n  var bh6 = b6 >>> 13\n  var b7 = b[7] | 0\n  var bl7 = b7 & 0x1fff\n  var bh7 = b7 >>> 13\n  var b8 = b[8] | 0\n  var bl8 = b8 & 0x1fff\n  var bh8 = b8 >>> 13\n  var b9 = b[9] | 0\n  var bl9 = b9 & 0x1fff\n  var bh9 = b9 >>> 13\n\n  out.length = 19\n  /* k = 0 */\n  lo = Math.imul(al0, bl0)\n  mid = Math.imul(al0, bh0)\n  mid += Math.imul(ah0, bl0)\n  hi = Math.imul(ah0, bh0)\n  var w0 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w0 >>> 26)\n  w0 &= 0x3ffffff\n  /* k = 1 */\n  lo = Math.imul(al1, bl0)\n  mid = Math.imul(al1, bh0)\n  mid += Math.imul(ah1, bl0)\n  hi = Math.imul(ah1, bh0)\n  lo += Math.imul(al0, bl1)\n  mid += Math.imul(al0, bh1)\n  mid += Math.imul(ah0, bl1)\n  hi += Math.imul(ah0, bh1)\n  var w1 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w1 >>> 26)\n  w1 &= 0x3ffffff\n  /* k = 2 */\n  lo = Math.imul(al2, bl0)\n  mid = Math.imul(al2, bh0)\n  mid += Math.imul(ah2, bl0)\n  hi = Math.imul(ah2, bh0)\n  lo += Math.imul(al1, bl1)\n  mid += Math.imul(al1, bh1)\n  mid += Math.imul(ah1, bl1)\n  hi += Math.imul(ah1, bh1)\n  lo += Math.imul(al0, bl2)\n  mid += Math.imul(al0, bh2)\n  mid += Math.imul(ah0, bl2)\n  hi += Math.imul(ah0, bh2)\n  var w2 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w2 >>> 26)\n  w2 &= 0x3ffffff\n  /* k = 3 */\n  lo = Math.imul(al3, bl0)\n  mid = Math.imul(al3, bh0)\n  mid += Math.imul(ah3, bl0)\n  hi = Math.imul(ah3, bh0)\n  lo += Math.imul(al2, bl1)\n  mid += Math.imul(al2, bh1)\n  mid += Math.imul(ah2, bl1)\n  hi += Math.imul(ah2, bh1)\n  lo += Math.imul(al1, bl2)\n  mid += Math.imul(al1, bh2)\n  mid += Math.imul(ah1, bl2)\n  hi += Math.imul(ah1, bh2)\n  lo += Math.imul(al0, bl3)\n  mid += Math.imul(al0, bh3)\n  mid += Math.imul(ah0, bl3)\n  hi += Math.imul(ah0, bh3)\n  var w3 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w3 >>> 26)\n  w3 &= 0x3ffffff\n  /* k = 4 */\n  lo = Math.imul(al4, bl0)\n  mid = Math.imul(al4, bh0)\n  mid += Math.imul(ah4, bl0)\n  hi = Math.imul(ah4, bh0)\n  lo += Math.imul(al3, bl1)\n  mid += Math.imul(al3, bh1)\n  mid += Math.imul(ah3, bl1)\n  hi += Math.imul(ah3, bh1)\n  lo += Math.imul(al2, bl2)\n  mid += Math.imul(al2, bh2)\n  mid += Math.imul(ah2, bl2)\n  hi += Math.imul(ah2, bh2)\n  lo += Math.imul(al1, bl3)\n  mid += Math.imul(al1, bh3)\n  mid += Math.imul(ah1, bl3)\n  hi += Math.imul(ah1, bh3)\n  lo += Math.imul(al0, bl4)\n  mid += Math.imul(al0, bh4)\n  mid += Math.imul(ah0, bl4)\n  hi += Math.imul(ah0, bh4)\n  var w4 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w4 >>> 26)\n  w4 &= 0x3ffffff\n  /* k = 5 */\n  lo = Math.imul(al5, bl0)\n  mid = Math.imul(al5, bh0)\n  mid += Math.imul(ah5, bl0)\n  hi = Math.imul(ah5, bh0)\n  lo += Math.imul(al4, bl1)\n  mid += Math.imul(al4, bh1)\n  mid += Math.imul(ah4, bl1)\n  hi += Math.imul(ah4, bh1)\n  lo += Math.imul(al3, bl2)\n  mid += Math.imul(al3, bh2)\n  mid += Math.imul(ah3, bl2)\n  hi += Math.imul(ah3, bh2)\n  lo += Math.imul(al2, bl3)\n  mid += Math.imul(al2, bh3)\n  mid += Math.imul(ah2, bl3)\n  hi += Math.imul(ah2, bh3)\n  lo += Math.imul(al1, bl4)\n  mid += Math.imul(al1, bh4)\n  mid += Math.imul(ah1, bl4)\n  hi += Math.imul(ah1, bh4)\n  lo += Math.imul(al0, bl5)\n  mid += Math.imul(al0, bh5)\n  mid += Math.imul(ah0, bl5)\n  hi += Math.imul(ah0, bh5)\n  var w5 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w5 >>> 26)\n  w5 &= 0x3ffffff\n  /* k = 6 */\n  lo = Math.imul(al6, bl0)\n  mid = Math.imul(al6, bh0)\n  mid += Math.imul(ah6, bl0)\n  hi = Math.imul(ah6, bh0)\n  lo += Math.imul(al5, bl1)\n  mid += Math.imul(al5, bh1)\n  mid += Math.imul(ah5, bl1)\n  hi += Math.imul(ah5, bh1)\n  lo += Math.imul(al4, bl2)\n  mid += Math.imul(al4, bh2)\n  mid += Math.imul(ah4, bl2)\n  hi += Math.imul(ah4, bh2)\n  lo += Math.imul(al3, bl3)\n  mid += Math.imul(al3, bh3)\n  mid += Math.imul(ah3, bl3)\n  hi += Math.imul(ah3, bh3)\n  lo += Math.imul(al2, bl4)\n  mid += Math.imul(al2, bh4)\n  mid += Math.imul(ah2, bl4)\n  hi += Math.imul(ah2, bh4)\n  lo += Math.imul(al1, bl5)\n  mid += Math.imul(al1, bh5)\n  mid += Math.imul(ah1, bl5)\n  hi += Math.imul(ah1, bh5)\n  lo += Math.imul(al0, bl6)\n  mid += Math.imul(al0, bh6)\n  mid += Math.imul(ah0, bl6)\n  hi += Math.imul(ah0, bh6)\n  var w6 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w6 >>> 26)\n  w6 &= 0x3ffffff\n  /* k = 7 */\n  lo = Math.imul(al7, bl0)\n  mid = Math.imul(al7, bh0)\n  mid += Math.imul(ah7, bl0)\n  hi = Math.imul(ah7, bh0)\n  lo += Math.imul(al6, bl1)\n  mid += Math.imul(al6, bh1)\n  mid += Math.imul(ah6, bl1)\n  hi += Math.imul(ah6, bh1)\n  lo += Math.imul(al5, bl2)\n  mid += Math.imul(al5, bh2)\n  mid += Math.imul(ah5, bl2)\n  hi += Math.imul(ah5, bh2)\n  lo += Math.imul(al4, bl3)\n  mid += Math.imul(al4, bh3)\n  mid += Math.imul(ah4, bl3)\n  hi += Math.imul(ah4, bh3)\n  lo += Math.imul(al3, bl4)\n  mid += Math.imul(al3, bh4)\n  mid += Math.imul(ah3, bl4)\n  hi += Math.imul(ah3, bh4)\n  lo += Math.imul(al2, bl5)\n  mid += Math.imul(al2, bh5)\n  mid += Math.imul(ah2, bl5)\n  hi += Math.imul(ah2, bh5)\n  lo += Math.imul(al1, bl6)\n  mid += Math.imul(al1, bh6)\n  mid += Math.imul(ah1, bl6)\n  hi += Math.imul(ah1, bh6)\n  lo += Math.imul(al0, bl7)\n  mid += Math.imul(al0, bh7)\n  mid += Math.imul(ah0, bl7)\n  hi += Math.imul(ah0, bh7)\n  var w7 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w7 >>> 26)\n  w7 &= 0x3ffffff\n  /* k = 8 */\n  lo = Math.imul(al8, bl0)\n  mid = Math.imul(al8, bh0)\n  mid += Math.imul(ah8, bl0)\n  hi = Math.imul(ah8, bh0)\n  lo += Math.imul(al7, bl1)\n  mid += Math.imul(al7, bh1)\n  mid += Math.imul(ah7, bl1)\n  hi += Math.imul(ah7, bh1)\n  lo += Math.imul(al6, bl2)\n  mid += Math.imul(al6, bh2)\n  mid += Math.imul(ah6, bl2)\n  hi += Math.imul(ah6, bh2)\n  lo += Math.imul(al5, bl3)\n  mid += Math.imul(al5, bh3)\n  mid += Math.imul(ah5, bl3)\n  hi += Math.imul(ah5, bh3)\n  lo += Math.imul(al4, bl4)\n  mid += Math.imul(al4, bh4)\n  mid += Math.imul(ah4, bl4)\n  hi += Math.imul(ah4, bh4)\n  lo += Math.imul(al3, bl5)\n  mid += Math.imul(al3, bh5)\n  mid += Math.imul(ah3, bl5)\n  hi += Math.imul(ah3, bh5)\n  lo += Math.imul(al2, bl6)\n  mid += Math.imul(al2, bh6)\n  mid += Math.imul(ah2, bl6)\n  hi += Math.imul(ah2, bh6)\n  lo += Math.imul(al1, bl7)\n  mid += Math.imul(al1, bh7)\n  mid += Math.imul(ah1, bl7)\n  hi += Math.imul(ah1, bh7)\n  lo += Math.imul(al0, bl8)\n  mid += Math.imul(al0, bh8)\n  mid += Math.imul(ah0, bl8)\n  hi += Math.imul(ah0, bh8)\n  var w8 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w8 >>> 26)\n  w8 &= 0x3ffffff\n  /* k = 9 */\n  lo = Math.imul(al9, bl0)\n  mid = Math.imul(al9, bh0)\n  mid += Math.imul(ah9, bl0)\n  hi = Math.imul(ah9, bh0)\n  lo += Math.imul(al8, bl1)\n  mid += Math.imul(al8, bh1)\n  mid += Math.imul(ah8, bl1)\n  hi += Math.imul(ah8, bh1)\n  lo += Math.imul(al7, bl2)\n  mid += Math.imul(al7, bh2)\n  mid += Math.imul(ah7, bl2)\n  hi += Math.imul(ah7, bh2)\n  lo += Math.imul(al6, bl3)\n  mid += Math.imul(al6, bh3)\n  mid += Math.imul(ah6, bl3)\n  hi += Math.imul(ah6, bh3)\n  lo += Math.imul(al5, bl4)\n  mid += Math.imul(al5, bh4)\n  mid += Math.imul(ah5, bl4)\n  hi += Math.imul(ah5, bh4)\n  lo += Math.imul(al4, bl5)\n  mid += Math.imul(al4, bh5)\n  mid += Math.imul(ah4, bl5)\n  hi += Math.imul(ah4, bh5)\n  lo += Math.imul(al3, bl6)\n  mid += Math.imul(al3, bh6)\n  mid += Math.imul(ah3, bl6)\n  hi += Math.imul(ah3, bh6)\n  lo += Math.imul(al2, bl7)\n  mid += Math.imul(al2, bh7)\n  mid += Math.imul(ah2, bl7)\n  hi += Math.imul(ah2, bh7)\n  lo += Math.imul(al1, bl8)\n  mid += Math.imul(al1, bh8)\n  mid += Math.imul(ah1, bl8)\n  hi += Math.imul(ah1, bh8)\n  lo += Math.imul(al0, bl9)\n  mid += Math.imul(al0, bh9)\n  mid += Math.imul(ah0, bl9)\n  hi += Math.imul(ah0, bh9)\n  var w9 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w9 >>> 26)\n  w9 &= 0x3ffffff\n  /* k = 10 */\n  lo = Math.imul(al9, bl1)\n  mid = Math.imul(al9, bh1)\n  mid += Math.imul(ah9, bl1)\n  hi = Math.imul(ah9, bh1)\n  lo += Math.imul(al8, bl2)\n  mid += Math.imul(al8, bh2)\n  mid += Math.imul(ah8, bl2)\n  hi += Math.imul(ah8, bh2)\n  lo += Math.imul(al7, bl3)\n  mid += Math.imul(al7, bh3)\n  mid += Math.imul(ah7, bl3)\n  hi += Math.imul(ah7, bh3)\n  lo += Math.imul(al6, bl4)\n  mid += Math.imul(al6, bh4)\n  mid += Math.imul(ah6, bl4)\n  hi += Math.imul(ah6, bh4)\n  lo += Math.imul(al5, bl5)\n  mid += Math.imul(al5, bh5)\n  mid += Math.imul(ah5, bl5)\n  hi += Math.imul(ah5, bh5)\n  lo += Math.imul(al4, bl6)\n  mid += Math.imul(al4, bh6)\n  mid += Math.imul(ah4, bl6)\n  hi += Math.imul(ah4, bh6)\n  lo += Math.imul(al3, bl7)\n  mid += Math.imul(al3, bh7)\n  mid += Math.imul(ah3, bl7)\n  hi += Math.imul(ah3, bh7)\n  lo += Math.imul(al2, bl8)\n  mid += Math.imul(al2, bh8)\n  mid += Math.imul(ah2, bl8)\n  hi += Math.imul(ah2, bh8)\n  lo += Math.imul(al1, bl9)\n  mid += Math.imul(al1, bh9)\n  mid += Math.imul(ah1, bl9)\n  hi += Math.imul(ah1, bh9)\n  var w10 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w10 >>> 26)\n  w10 &= 0x3ffffff\n  /* k = 11 */\n  lo = Math.imul(al9, bl2)\n  mid = Math.imul(al9, bh2)\n  mid += Math.imul(ah9, bl2)\n  hi = Math.imul(ah9, bh2)\n  lo += Math.imul(al8, bl3)\n  mid += Math.imul(al8, bh3)\n  mid += Math.imul(ah8, bl3)\n  hi += Math.imul(ah8, bh3)\n  lo += Math.imul(al7, bl4)\n  mid += Math.imul(al7, bh4)\n  mid += Math.imul(ah7, bl4)\n  hi += Math.imul(ah7, bh4)\n  lo += Math.imul(al6, bl5)\n  mid += Math.imul(al6, bh5)\n  mid += Math.imul(ah6, bl5)\n  hi += Math.imul(ah6, bh5)\n  lo += Math.imul(al5, bl6)\n  mid += Math.imul(al5, bh6)\n  mid += Math.imul(ah5, bl6)\n  hi += Math.imul(ah5, bh6)\n  lo += Math.imul(al4, bl7)\n  mid += Math.imul(al4, bh7)\n  mid += Math.imul(ah4, bl7)\n  hi += Math.imul(ah4, bh7)\n  lo += Math.imul(al3, bl8)\n  mid += Math.imul(al3, bh8)\n  mid += Math.imul(ah3, bl8)\n  hi += Math.imul(ah3, bh8)\n  lo += Math.imul(al2, bl9)\n  mid += Math.imul(al2, bh9)\n  mid += Math.imul(ah2, bl9)\n  hi += Math.imul(ah2, bh9)\n  var w11 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w11 >>> 26)\n  w11 &= 0x3ffffff\n  /* k = 12 */\n  lo = Math.imul(al9, bl3)\n  mid = Math.imul(al9, bh3)\n  mid += Math.imul(ah9, bl3)\n  hi = Math.imul(ah9, bh3)\n  lo += Math.imul(al8, bl4)\n  mid += Math.imul(al8, bh4)\n  mid += Math.imul(ah8, bl4)\n  hi += Math.imul(ah8, bh4)\n  lo += Math.imul(al7, bl5)\n  mid += Math.imul(al7, bh5)\n  mid += Math.imul(ah7, bl5)\n  hi += Math.imul(ah7, bh5)\n  lo += Math.imul(al6, bl6)\n  mid += Math.imul(al6, bh6)\n  mid += Math.imul(ah6, bl6)\n  hi += Math.imul(ah6, bh6)\n  lo += Math.imul(al5, bl7)\n  mid += Math.imul(al5, bh7)\n  mid += Math.imul(ah5, bl7)\n  hi += Math.imul(ah5, bh7)\n  lo += Math.imul(al4, bl8)\n  mid += Math.imul(al4, bh8)\n  mid += Math.imul(ah4, bl8)\n  hi += Math.imul(ah4, bh8)\n  lo += Math.imul(al3, bl9)\n  mid += Math.imul(al3, bh9)\n  mid += Math.imul(ah3, bl9)\n  hi += Math.imul(ah3, bh9)\n  var w12 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w12 >>> 26)\n  w12 &= 0x3ffffff\n  /* k = 13 */\n  lo = Math.imul(al9, bl4)\n  mid = Math.imul(al9, bh4)\n  mid += Math.imul(ah9, bl4)\n  hi = Math.imul(ah9, bh4)\n  lo += Math.imul(al8, bl5)\n  mid += Math.imul(al8, bh5)\n  mid += Math.imul(ah8, bl5)\n  hi += Math.imul(ah8, bh5)\n  lo += Math.imul(al7, bl6)\n  mid += Math.imul(al7, bh6)\n  mid += Math.imul(ah7, bl6)\n  hi += Math.imul(ah7, bh6)\n  lo += Math.imul(al6, bl7)\n  mid += Math.imul(al6, bh7)\n  mid += Math.imul(ah6, bl7)\n  hi += Math.imul(ah6, bh7)\n  lo += Math.imul(al5, bl8)\n  mid += Math.imul(al5, bh8)\n  mid += Math.imul(ah5, bl8)\n  hi += Math.imul(ah5, bh8)\n  lo += Math.imul(al4, bl9)\n  mid += Math.imul(al4, bh9)\n  mid += Math.imul(ah4, bl9)\n  hi += Math.imul(ah4, bh9)\n  var w13 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w13 >>> 26)\n  w13 &= 0x3ffffff\n  /* k = 14 */\n  lo = Math.imul(al9, bl5)\n  mid = Math.imul(al9, bh5)\n  mid += Math.imul(ah9, bl5)\n  hi = Math.imul(ah9, bh5)\n  lo += Math.imul(al8, bl6)\n  mid += Math.imul(al8, bh6)\n  mid += Math.imul(ah8, bl6)\n  hi += Math.imul(ah8, bh6)\n  lo += Math.imul(al7, bl7)\n  mid += Math.imul(al7, bh7)\n  mid += Math.imul(ah7, bl7)\n  hi += Math.imul(ah7, bh7)\n  lo += Math.imul(al6, bl8)\n  mid += Math.imul(al6, bh8)\n  mid += Math.imul(ah6, bl8)\n  hi += Math.imul(ah6, bh8)\n  lo += Math.imul(al5, bl9)\n  mid += Math.imul(al5, bh9)\n  mid += Math.imul(ah5, bl9)\n  hi += Math.imul(ah5, bh9)\n  var w14 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w14 >>> 26)\n  w14 &= 0x3ffffff\n  /* k = 15 */\n  lo = Math.imul(al9, bl6)\n  mid = Math.imul(al9, bh6)\n  mid += Math.imul(ah9, bl6)\n  hi = Math.imul(ah9, bh6)\n  lo += Math.imul(al8, bl7)\n  mid += Math.imul(al8, bh7)\n  mid += Math.imul(ah8, bl7)\n  hi += Math.imul(ah8, bh7)\n  lo += Math.imul(al7, bl8)\n  mid += Math.imul(al7, bh8)\n  mid += Math.imul(ah7, bl8)\n  hi += Math.imul(ah7, bh8)\n  lo += Math.imul(al6, bl9)\n  mid += Math.imul(al6, bh9)\n  mid += Math.imul(ah6, bl9)\n  hi += Math.imul(ah6, bh9)\n  var w15 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w15 >>> 26)\n  w15 &= 0x3ffffff\n  /* k = 16 */\n  lo = Math.imul(al9, bl7)\n  mid = Math.imul(al9, bh7)\n  mid += Math.imul(ah9, bl7)\n  hi = Math.imul(ah9, bh7)\n  lo += Math.imul(al8, bl8)\n  mid += Math.imul(al8, bh8)\n  mid += Math.imul(ah8, bl8)\n  hi += Math.imul(ah8, bh8)\n  lo += Math.imul(al7, bl9)\n  mid += Math.imul(al7, bh9)\n  mid += Math.imul(ah7, bl9)\n  hi += Math.imul(ah7, bh9)\n  var w16 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w16 >>> 26)\n  w16 &= 0x3ffffff\n  /* k = 17 */\n  lo = Math.imul(al9, bl8)\n  mid = Math.imul(al9, bh8)\n  mid += Math.imul(ah9, bl8)\n  hi = Math.imul(ah9, bh8)\n  lo += Math.imul(al8, bl9)\n  mid += Math.imul(al8, bh9)\n  mid += Math.imul(ah8, bl9)\n  hi += Math.imul(ah8, bh9)\n  var w17 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w17 >>> 26)\n  w17 &= 0x3ffffff\n  /* k = 18 */\n  lo = Math.imul(al9, bl9)\n  mid = Math.imul(al9, bh9)\n  mid += Math.imul(ah9, bl9)\n  hi = Math.imul(ah9, bh9)\n  var w18 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w18 >>> 26)\n  w18 &= 0x3ffffff\n  o[0] = w0\n  o[1] = w1\n  o[2] = w2\n  o[3] = w3\n  o[4] = w4\n  o[5] = w5\n  o[6] = w6\n  o[7] = w7\n  o[8] = w8\n  o[9] = w9\n  o[10] = w10\n  o[11] = w11\n  o[12] = w12\n  o[13] = w13\n  o[14] = w14\n  o[15] = w15\n  o[16] = w16\n  o[17] = w17\n  o[18] = w18\n  if (c !== 0) {\n    o[19] = c\n    out.length++\n  }\n  return out\n}\n","module.exports={\n  \"sha1\": {\n    \"securityStrength\": 128,\n    \"outlen\": 160,\n    \"seedlen\": 440\n  },\n  \"sha224\": {\n    \"securityStrength\": 192,\n    \"outlen\": 224,\n    \"seedlen\": 440\n  },\n  \"sha256\": {\n    \"securityStrength\": 256,\n    \"outlen\": 256,\n    \"seedlen\": 440\n  },\n  \"sha384\": {\n    \"securityStrength\": 256,\n    \"outlen\": 384,\n    \"seedlen\": 888\n  },\n  \"sha512\": {\n    \"securityStrength\": 256,\n    \"outlen\": 512,\n    \"seedlen\": 888\n  }\n}\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","\nmodule.exports = function () {\n\n  var buffers = [], length = 0\n\n  //just used for debugging...\n  function calcLength () {\n    return buffers.reduce(function (a, b) {\n      return a + b.length\n    }, 0)\n  }\n\n  return {\n    length: length,\n    data: this,\n    add: function (data) {\n      if(!Buffer.isBuffer(data))\n        throw new Error('data must be a buffer, was: ' + JSON.stringify(data))\n      this.length = length = length + data.length\n      buffers.push(data)\n      return this\n    },\n    has: function (n) {\n      if(null == n) return length > 0\n      return length >= n\n    },\n    get: function (n) {\n      var _length\n      if(n == null || n === length) {\n        length = 0\n        var _buffers = buffers\n        buffers = []\n        if(_buffers.length == 1)\n          return _buffers[0]\n        else\n          return Buffer.concat(_buffers)\n      } else if (buffers.length > 1 && n <= (_length = buffers[0].length)) {\n        var buf = buffers[0].slice(0, n)\n        if(n === _length) {\n          buffers.shift()\n        }\n        else {\n          buffers[0] = buffers[0].slice(n, _length)\n        }\n        length -= n\n        return buf\n      }  else if(n < length) {\n        var out = [], len = 0\n\n        while((len + buffers[0].length) < n) {\n          var b = buffers.shift()\n          len += b.length\n          out.push(b)\n        }\n\n        if(len < n) {\n          out.push(buffers[0].slice(0, n - len))\n          buffers[0] = buffers[0].slice(n - len, buffers[0].length)\n          this.length = length = length - n\n        }\n        return Buffer.concat(out)\n      }\n      else\n        throw new Error('could not get ' + n + ' bytes')\n    }\n  }\n\n}\n\n\n\n\n\n","'use strict'\n\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\n\nmodule.exports = Multihashing\n\n/**\n * Hash the given `buf` using the algorithm specified\n * by `func`.\n *\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nfunction Multihashing (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  Multihashing.digest(buf, func, length, (err, digest) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, multihash.encode(digest, func, length))\n  })\n}\n\n/**\n * The `buffer` module for easy use in the browser.\n *\n * @type {Buffer}\n */\nMultihashing.Buffer = Buffer // for browser things\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nMultihashing.digest = function (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  let cb = callback\n  if (length) {\n    cb = (err, digest) => {\n      if (err) {\n        return callback(err)\n      }\n\n      callback(null, digest.slice(0, length))\n    }\n  }\n\n  let hash\n  try {\n    hash = Multihashing.createHash(func)\n  } catch (err) {\n    return cb(err)\n  }\n\n  hash(buf, cb)\n}\n\n/**\n * @param {string|number} func\n *\n * @returns {function} - The to `func` corresponding hash function.\n */\nMultihashing.createHash = function (func) {\n  func = multihash.coerceCode(func)\n  if (!Multihashing.functions[func]) {\n    throw new Error('multihash function ' + func + ' not yet supported')\n  }\n\n  return Multihashing.functions[func]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n * @type {Object}\n */\nMultihashing.functions = {\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n\nMultihashing.validate = (data, hash, callback) => {\n  let algo = multihash.decode(hash).name\n  Multihashing(data, algo, (err, newHash) => {\n    if (err) return callback(err)\n    callback(err, Buffer.compare(hash, newHash) === 0)\n  })\n}\n","module.exports = function(socket, callback) {\n  var remove = socket && (socket.removeEventListener || socket.removeListener);\n\n  function cleanup () {\n    if (typeof remove == 'function') {\n      remove.call(socket, 'open', handleOpen);\n      remove.call(socket, 'error', handleErr);\n    }\n  }\n\n  function handleOpen(evt) {\n    cleanup(); callback();\n  }\n\n  function handleErr (evt) {\n    cleanup(); callback(evt);\n  }\n\n  // if the socket is closing or closed, return end\n  if (socket.readyState >= 2) {\n    return callback(true);\n  }\n\n  // if open, trigger the callback\n  if (socket.readyState === 1) {\n    return callback();\n  }\n\n  socket.addEventListener('open', handleOpen);\n  socket.addEventListener('error', handleErr);\n};\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","'use strict'\n\nconst Heap = require('heap')\nconst distance = require('xor-distance')\nconst debug = require('debug')\nconst promisify = require('promisify-es6')\n\nconst utils = require('./utils')\n\nconst log = debug('libp2p:dht:peer-queue')\n\n/**\n * PeerQueue is a heap that sorts its entries (PeerIds) by their\n * xor distance to the inital provided key.\n */\nclass PeerQueue {\n  /**\n   * Create from a given peer id.\n   *\n   * @param {PeerId} id\n   * @returns {Promise<PeerQueue>}\n   */\n  static async fromPeerId (id) {\n    const key = await promisify(cb => utils.convertPeerId(id, cb))()\n    return new PeerQueue(key)\n  }\n\n  /**\n   * Create from a given buffer.\n   *\n   * @param {Buffer} keyBuffer\n   * @returns {Promise<PeerQueue>}\n   */\n  static async fromKey (keyBuffer) {\n    const key = await promisify(cb => utils.convertBuffer(keyBuffer, cb))()\n    return new PeerQueue(key)\n  }\n\n  /**\n   * Create a new PeerQueue.\n   *\n   * @param {Buffer} from - The sha2-256 encoded peer id\n   */\n  constructor (from) {\n    log('create: %b', from)\n    this.from = from\n    this.heap = new Heap(utils.xorCompare)\n  }\n\n  /**\n   * Add a new PeerId to the queue.\n   *\n   * @param {PeerId} id\n   * @returns {Promise}\n   */\n  async enqueue (id) {\n    log('enqueue %s', id.toB58String())\n    const key = await promisify(cb => utils.convertPeerId(id, cb))()\n\n    const el = {\n      id: id,\n      distance: distance(this.from, key)\n    }\n\n    this.heap.push(el)\n  }\n\n  /**\n   * Returns the closest peer to the `from` peer.\n   *\n   * @returns {PeerId}\n   */\n  dequeue () {\n    const el = this.heap.pop()\n    log('dequeue %s', el.id.toB58String())\n    return el.id\n  }\n\n  get length () {\n    return this.heap.size()\n  }\n}\n\nmodule.exports = PeerQueue\n","'use strict'\n\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:ping')\n\n  /**\n   * Process `Ping` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function ping (peer, msg, callback) {\n    log('from %s', peer.id.toB58String())\n    callback(null, msg)\n  }\n}\n","'use strict'\n\nconst utils = require('../../utils')\nconst errcode = require('err-code')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:put-value')\n\n  /**\n   * Process `PutValue` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function putValue (peer, msg, callback) {\n    const key = msg.key\n    log('key: %b', key)\n\n    const record = msg.record\n\n    if (!record) {\n      const errMsg = `Empty record from: ${peer.id.toB58String()}`\n\n      log.error(errMsg)\n      return callback(errcode(new Error(errMsg), 'ERR_EMPTY_RECORD'))\n    }\n\n    dht._verifyRecordLocally(record, (err) => {\n      if (err) {\n        log.error(err.message)\n        return callback(err)\n      }\n\n      record.timeReceived = new Date()\n\n      const key = utils.bufferToKey(record.key)\n\n      dht.datastore.put(key, record.serialize(), (err) => {\n        if (err) {\n          return callback(err)\n        }\n\n        callback(null, msg)\n      })\n    })\n  }\n}\n","'use strict'\n\nconst CID = require('cids')\nconst errcode = require('err-code')\nconst promiseToCallback = require('promise-to-callback')\n\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:add-provider')\n  /**\n   * Process `AddProvider` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error)} callback\n   * @returns {undefined}\n   */\n  return function addProvider (peer, msg, callback) {\n    log('start')\n\n    if (!msg.key || msg.key.length === 0) {\n      return callback(errcode(new Error('Missing key'), 'ERR_MISSING_KEY'))\n    }\n\n    let cid\n    try {\n      cid = new CID(msg.key)\n    } catch (err) {\n      const errMsg = `Invalid CID: ${err.message}`\n\n      return callback(errcode(new Error(errMsg), 'ERR_INVALID_CID'))\n    }\n\n    let foundProvider = false\n    msg.providerPeers.forEach((pi) => {\n      // Ignore providers not from the originator\n      if (!pi.id.isEqual(peer.id)) {\n        log('invalid provider peer %s from %s', pi.id.toB58String(), peer.id.toB58String())\n        return\n      }\n\n      if (pi.multiaddrs.size < 1) {\n        log('no valid addresses for provider %s. Ignore', peer.id.toB58String())\n        return\n      }\n\n      log('received provider %s for %s (addrs %s)', peer.id.toB58String(), cid.toBaseEncodedString(), pi.multiaddrs.toArray().map((m) => m.toString()))\n\n      if (!dht._isSelf(pi.id)) {\n        foundProvider = true\n        dht.peerBook.put(pi)\n        promiseToCallback(dht.providers.addProvider(cid, pi.id))(err => callback(err))\n      }\n    })\n\n    // Previous versions of the JS DHT sent erroneous providers in the\n    // `providerPeers` field. In order to accommodate older clients that have\n    // this bug, we fall back to assuming the originator is the provider if\n    // we can't find any valid providers in the payload.\n    // https://github.com/libp2p/js-libp2p-kad-dht/pull/127\n    // https://github.com/libp2p/js-libp2p-kad-dht/issues/128\n    if (!foundProvider) {\n      promiseToCallback(dht.providers.addProvider(cid, peer.id))(err => callback(err))\n    }\n  }\n}\n","'use strict'\n\nconst waterfall = require('async/waterfall')\n\nconst Message = require('../../message')\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:find-node')\n\n  /**\n   * Process `FindNode` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function findNode (peer, msg, callback) {\n    log('start')\n\n    waterfall([\n      (cb) => {\n        if (msg.key.equals(dht.peerInfo.id.id)) {\n          return cb(null, [dht.peerInfo])\n        }\n\n        dht._betterPeersToQuery(msg, peer, cb)\n      },\n      (closer, cb) => {\n        const response = new Message(msg.type, Buffer.alloc(0), msg.clusterLevel)\n\n        if (closer.length > 0) {\n          response.closerPeers = closer\n        } else {\n          log('handle FindNode %s: could not find anything', peer.id.toB58String())\n        }\n\n        cb(null, response)\n      }\n    ], callback)\n  }\n}\n","'use strict'\n\nconst CID = require('cids')\nconst parallel = require('async/parallel')\nconst PeerInfo = require('peer-info')\nconst promiseToCallback = require('promise-to-callback')\nconst errcode = require('err-code')\n\nconst Message = require('../../message')\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:get-providers')\n\n  /**\n   * Process `GetProviders` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function getProviders (peer, msg, callback) {\n    let cid\n    try {\n      cid = new CID(msg.key)\n    } catch (err) {\n      return callback(errcode(new Error(`Invalid CID: ${err.message}`), 'ERR_INVALID_CID'))\n    }\n\n    log('%s', cid.toBaseEncodedString())\n\n    const dsKey = utils.bufferToKey(cid.buffer)\n\n    parallel([\n      (cb) => dht.datastore.has(dsKey, (err, exists) => {\n        if (err) {\n          log.error('Failed to check datastore existence', err)\n          return cb(null, false)\n        }\n\n        cb(null, exists)\n      }),\n      (cb) => promiseToCallback(dht.providers.getProviders(cid))(cb),\n      (cb) => dht._betterPeersToQuery(msg, peer, cb)\n    ], (err, res) => {\n      if (err) {\n        return callback(err)\n      }\n      const has = res[0]\n      const closer = res[2]\n      const providers = res[1].map((p) => {\n        if (dht.peerBook.has(p)) {\n          return dht.peerBook.get(p)\n        }\n\n        return dht.peerBook.put(new PeerInfo(p))\n      })\n\n      if (has) {\n        providers.push(dht.peerInfo)\n      }\n\n      const response = new Message(msg.type, msg.key, msg.clusterLevel)\n\n      if (providers.length > 0) {\n        response.providerPeers = providers\n      }\n\n      if (closer.length > 0) {\n        response.closerPeers = closer\n      }\n\n      log('got %s providers %s closerPeers', providers.length, closer.length)\n\n      callback(null, response)\n    })\n  }\n}\n","'use strict'\n\nconst parallel = require('async/parallel')\nconst Record = require('libp2p-record').Record\n\nconst errcode = require('err-code')\n\nconst Message = require('../../message')\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:get-value')\n\n  /**\n   * Process `GetValue` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function getValue (peer, msg, callback) {\n    const key = msg.key\n\n    log('key: %b', key)\n\n    if (!key || key.length === 0) {\n      return callback(errcode(new Error('Invalid key'), 'ERR_INVALID_KEY'))\n    }\n\n    const response = new Message(Message.TYPES.GET_VALUE, key, msg.clusterLevel)\n\n    if (utils.isPublicKeyKey(key)) {\n      log('is public key')\n      const id = utils.fromPublicKeyKey(key)\n      let info\n\n      if (dht._isSelf(id)) {\n        info = dht.peerInfo\n      } else if (dht.peerBook.has(id)) {\n        info = dht.peerBook.get(id)\n      }\n\n      if (info && info.id.pubKey) {\n        log('returning found public key')\n        response.record = new Record(key, info.id.pubKey.bytes)\n        return callback(null, response)\n      }\n    }\n\n    parallel([\n      (cb) => dht._checkLocalDatastore(key, cb),\n      (cb) => dht._betterPeersToQuery(msg, peer, cb)\n    ], (err, res) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const record = res[0]\n      const closer = res[1]\n\n      if (record) {\n        log('got record')\n        response.record = record\n      }\n\n      if (closer.length > 0) {\n        log('got closer %s', closer.length)\n        response.closerPeers = closer\n      }\n\n      callback(null, response)\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = `message Propose {\n  optional bytes rand = 1;\n  optional bytes pubkey = 2;\n  optional string exchanges = 3;\n  optional string ciphers = 4;\n  optional string hashes = 5;\n}\n\nmessage Exchange {\n  optional bytes epubkey = 1;\n  optional bytes signature = 2;\n}`\n","'use strict'\n\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\n\nmodule.exports = Multihashing\n\n/**\n * Hash the given `buf` using the algorithm specified\n * by `func`.\n *\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nfunction Multihashing (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  Multihashing.digest(buf, func, length, (err, digest) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, multihash.encode(digest, func, length))\n  })\n}\n\n/**\n * The `buffer` module for easy use in the browser.\n *\n * @type {Buffer}\n */\nMultihashing.Buffer = Buffer // for browser things\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nMultihashing.digest = function (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  let cb = callback\n  if (length) {\n    cb = (err, digest) => {\n      if (err) {\n        return callback(err)\n      }\n\n      callback(null, digest.slice(0, length))\n    }\n  }\n\n  let hash\n  try {\n    hash = Multihashing.createHash(func)\n  } catch (err) {\n    return cb(err)\n  }\n\n  hash(buf, cb)\n}\n\n/**\n * @param {string|number} func\n *\n * @returns {function} - The to `func` corresponding hash function.\n */\nMultihashing.createHash = function (func) {\n  func = multihash.coerceCode(func)\n  if (!Multihashing.functions[func]) {\n    throw new Error('multihash function ' + func + ' not yet supported')\n  }\n\n  return Multihashing.functions[func]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n * @type {Object}\n */\nMultihashing.functions = {\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n","\"use strict\"\n\nconst EE = require(\"events\").EventEmitter\n\nfunction DataQueue() {\n  const ee = new EE()\n  let q = []\n  let ed\n\n  function unleak() {\n    ee.removeAllListeners(\"err\")\n    ee.removeAllListeners(\"data\")\n  }\n\n  return {\n    append: data => {\n      if (ed) return ed\n      q.push(data)\n      ee.emit(\"data\")\n    },\n    prepend: data => { //better only call this before the get queue starts\n      if (ed) return ed\n      q.unshift(data)\n    },\n    error: e => {\n      ed = e\n      ee.emit(\"err\", e)\n    },\n    get: cb => {\n      unleak()\n      if (ed) return cb(ed)\n      if (q.length) return cb(null, q.shift())\n      ee.once(\"err\", e => {\n        unleak()\n        cb(e)\n      })\n      ee.once(\"data\", () => {\n        unleak()\n        return cb(null, q.shift())\n      })\n    },\n    height: () => q.length\n  }\n}\nmodule.exports = DataQueue\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = require('events').EventEmitter;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","'use strict'\n\nconst { Message } = require('./index')\nconst SignPrefix = Buffer.from('libp2p-pubsub:')\n\nmodule.exports.SignPrefix = SignPrefix\n\n/**\n * Signs the provided message with the given `peerId`\n *\n * @param {PeerId} peerId\n * @param {Message} message\n * @param {function(Error, Message)} callback\n * @returns {void}\n */\nmodule.exports.signMessage = function (peerId, message, callback) {\n  // Get the message in bytes, and prepend with the pubsub prefix\n  const bytes = Buffer.concat([\n    SignPrefix,\n    Message.encode(message)\n  ])\n\n  // Sign the bytes with the private key\n  peerId.privKey.sign(bytes, (err, signature) => {\n    if (err) return callback(err)\n\n    callback(null, {\n      ...message,\n      signature: signature,\n      key: peerId.pubKey.bytes\n    })\n  })\n}\n","'use strict'\n\nconst crypto = require('libp2p-crypto')\nconst bs58 = require('bs58')\n\nexports = module.exports\n\n/**\n * Generatea random sequence number.\n *\n * @returns {Buffer}\n * @private\n */\nexports.randomSeqno = () => {\n  return crypto.randomBytes(20)\n}\n\n/**\n * Generate a message id, based on the `from` and `seqno`.\n *\n * @param {string} from\n * @param {Buffer} seqno\n * @returns {string}\n * @private\n */\nexports.msgId = (from, seqno) => {\n  return from + seqno.toString('hex')\n}\n\n/**\n * Check if any member of the first set is also a member\n * of the second set.\n *\n * @param {Set|Array} a\n * @param {Set|Array} b\n * @returns {boolean}\n * @private\n */\nexports.anyMatch = (a, b) => {\n  let bHas\n  if (Array.isArray(b)) {\n    bHas = (val) => b.indexOf(val) > -1\n  } else {\n    bHas = (val) => b.has(val)\n  }\n\n  for (let val of a) {\n    if (bHas(val)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Make everything an array.\n *\n * @param {any} maybeArray\n * @returns {Array}\n * @private\n */\nexports.ensureArray = (maybeArray) => {\n  if (!Array.isArray(maybeArray)) {\n    return [maybeArray]\n  }\n\n  return maybeArray\n}\n\nexports.normalizeInRpcMessages = (messages) => {\n  if (!messages) {\n    return messages\n  }\n  return messages.map((msg) => {\n    const m = Object.assign({}, msg)\n    if (Buffer.isBuffer(msg.from)) {\n      m.from = bs58.encode(msg.from)\n    }\n    return m\n  })\n}\n\nexports.normalizeOutRpcMessage = (message) => {\n  const m = Object.assign({}, message)\n  if (typeof message.from === 'string' || message.from instanceof String) {\n    m.from = bs58.decode(message.from)\n  }\n  return m\n}\n\nexports.normalizeOutRpcMessages = (messages) => {\n  if (!messages) {\n    return messages\n  }\n  return messages.map(exports.normalizeOutRpcMessage)\n}\n","'use strict'\n\nconst lp = require('pull-length-prefixed')\nconst Pushable = require('pull-pushable')\nconst pull = require('pull-stream')\nconst setImmediate = require('async/setImmediate')\nconst EventEmitter = require('events')\n\nconst { RPC } = require('./message')\n\n/**\n * The known state of a connected peer.\n */\nclass Peer extends EventEmitter {\n  /**\n   * @param {PeerInfo} info\n   */\n  constructor (info) {\n    super()\n\n    /**\n     * @type {PeerInfo}\n     */\n    this.info = info\n    /**\n     * @type {Connection}\n     */\n    this.conn = null\n    /**\n     * @type {Set}\n     */\n    this.topics = new Set()\n    /**\n     * @type {Pushable}\n     */\n    this.stream = null\n\n    this._references = 0\n  }\n\n  /**\n   * Is the peer connected currently?\n   *\n   * @type {boolean}\n   */\n  get isConnected () {\n    return Boolean(this.conn)\n  }\n\n  /**\n   * Do we have a connection to write on?\n   *\n   * @type {boolean}\n   */\n  get isWritable () {\n    return Boolean(this.stream)\n  }\n\n  /**\n   * Send a message to this peer.\n   * Throws if there is no `stream` to write to available.\n   *\n   * @param {Buffer} msg\n   * @returns {undefined}\n   */\n  write (msg) {\n    if (!this.isWritable) {\n      const id = this.info.id.toB58String()\n      throw new Error('No writable connection to ' + id)\n    }\n\n    this.stream.push(msg)\n  }\n\n  /**\n   * Attach the peer to a connection and setup a write stream\n   *\n   * @param {Connection} conn\n   * @returns {undefined}\n   */\n  attachConnection (conn) {\n    this.conn = conn\n    this.stream = new Pushable()\n\n    pull(\n      this.stream,\n      lp.encode(),\n      conn,\n      pull.onEnd(() => {\n        this.conn = null\n        this.stream = null\n        this.emit('close')\n      })\n    )\n\n    this.emit('connection')\n  }\n\n  _sendRawSubscriptions (topics, subscribe) {\n    if (topics.size === 0) {\n      return\n    }\n\n    const subs = []\n    topics.forEach((topic) => {\n      subs.push({\n        subscribe: subscribe,\n        topicID: topic\n      })\n    })\n\n    this.write(RPC.encode({\n      subscriptions: subs\n    }))\n  }\n\n  /**\n   * Send the given subscriptions to this peer.\n   * @param {Set|Array} topics\n   * @returns {undefined}\n   */\n  sendSubscriptions (topics) {\n    this._sendRawSubscriptions(topics, true)\n  }\n\n  /**\n   * Send the given unsubscriptions to this peer.\n   * @param {Set|Array} topics\n   * @returns {undefined}\n   */\n  sendUnsubscriptions (topics) {\n    this._sendRawSubscriptions(topics, false)\n  }\n\n  /**\n   * Send messages to this peer.\n   *\n   * @param {Array<any>} msgs\n   * @returns {undefined}\n   */\n  sendMessages (msgs) {\n    this.write(RPC.encode({\n      msgs: msgs\n    }))\n  }\n\n  /**\n   * Bulk process subscription updates.\n   *\n   * @param {Array} changes\n   * @returns {undefined}\n   */\n  updateSubscriptions (changes) {\n    changes.forEach((subopt) => {\n      if (subopt.subscribe) {\n        this.topics.add(subopt.topicID)\n      } else {\n        this.topics.delete(subopt.topicID)\n      }\n    })\n  }\n\n  /**\n   * Closes the open connection to peer\n   *\n   * @param {Function} callback\n   * @returns {undefined}\n   */\n  close (callback) {\n    // Force removal of peer\n    this._references = 1\n\n    // End the pushable\n    if (this.stream) {\n      this.stream.end()\n    }\n\n    setImmediate(() => {\n      this.conn = null\n      this.stream = null\n      this.emit('close')\n      callback()\n    })\n  }\n}\n\nmodule.exports = Peer\n","'use strict'\n\nconst protons = require('protons')\n\nconst rpcProto = protons(require('./rpc.proto.js'))\nconst RPC = rpcProto.RPC\nconst topicDescriptorProto = protons(require('./topic-descriptor.proto.js'))\n\nexports = module.exports\nexports.rpc = rpcProto\nexports.td = topicDescriptorProto\nexports.RPC = RPC\nexports.Message = RPC.Message\nexports.SubOpts = RPC.SubOpts\n","'use strict'\n\nconst throttle = require('lodash.throttle')\nexports = module.exports = TimeCache\n\nfunction TimeCache (options) {\n  if (!(this instanceof TimeCache)) {\n    return new TimeCache(options)\n  }\n\n  options = options || {}\n\n  const validity = options.validity || 30 // seconds\n\n  const entries = new Map()\n\n  const sweep = throttle(() => {\n    entries.forEach((entry, key) => {\n      const v = entry.validity || validity\n      const delta = getTimeElapsed(entry.timestamp)\n      if (delta > v) {\n        entries.delete(key)\n      }\n    })\n  }, 200)\n\n  this.put = (key, value, validity) => {\n    if (!this.has(key)) {\n      entries.set(key, {\n        value: value,\n        timestamp: new Date(),\n        validity: validity\n      })\n    }\n\n    sweep()\n  }\n\n  this.get = (key) => {\n    if (entries.has(key)) {\n      return entries.get(key).value\n    } else {\n      throw new Error('key does not exist')\n    }\n  }\n\n  this.has = (key) => {\n    return entries.has(key)\n  }\n}\n\nfunction getTimeElapsed (prevTime) {\n  const currentTime = new Date()\n  const a = currentTime.getTime() - prevTime.getTime()\n\n  return Math.floor(a / 1000)\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document */\n\nvar debug = require('debug')('latency-monitor:VisibilityChangeEmitter');\n\n/**\n * Listen to page visibility change events (i.e. when the page is focused / blurred) by an event emitter.\n *\n * Warning: This does not work on all browsers, but should work on all modern browsers\n *\n * @example\n *\n *     const myVisibilityEmitter = new VisibilityChangeEmitter();\n *\n *     myVisibilityEmitter.on('visibilityChange', (pageInFocus) => {\n *        if ( pageInFocus ){\n *            // Page is in focus\n *            console.log('In focus');\n *        }\n *        else {\n *            // Page is blurred\n *            console.log('Out of focus');\n *        }\n *     });\n *     // To access the visibility state directly, call:\n *     console.log('Am I focused now? ' + myVisibilityEmitter.isVisible());\n *\n * @class VisibilityChangeEmitter\n */\n\nvar VisibilityChangeEmitter = function (_EventEmitter) {\n    _inherits(VisibilityChangeEmitter, _EventEmitter);\n\n    /**\n     * Creates a VisibilityChangeEmitter\n     */\n    function VisibilityChangeEmitter() {\n        _classCallCheck(this, VisibilityChangeEmitter);\n\n        var _this = _possibleConstructorReturn(this, (VisibilityChangeEmitter.__proto__ || Object.getPrototypeOf(VisibilityChangeEmitter)).call(this));\n\n        if (typeof document === 'undefined') {\n            debug('This is not a browser, no \"document\" found. Stopping.');\n            return _possibleConstructorReturn(_this);\n        }\n        _this._initializeVisibilityVarNames();\n        _this._addVisibilityChangeListener();\n        return _this;\n    }\n\n    /**\n     * document.hidden and document.visibilityChange are the two variables we need to check for;\n     * Since these variables are named differently in different browsers, this function sets\n     * the appropriate name based on the browser being used. Once executed, tha actual names of\n     * document.hidden and document.visibilityChange are found in this._hidden and this._visibilityChange\n     * respectively\n     * @private\n     */\n\n\n    _createClass(VisibilityChangeEmitter, [{\n        key: '_initializeVisibilityVarNames',\n        value: function _initializeVisibilityVarNames() {\n            var hidden = void 0;\n            var visibilityChange = void 0;\n            if (typeof document.hidden !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                hidden = 'hidden';\n                visibilityChange = 'visibilitychange';\n            } else if (typeof document.mozHidden !== 'undefined') {\n                hidden = 'mozHidden';\n                visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.msHidden !== 'undefined') {\n                hidden = 'msHidden';\n                visibilityChange = 'msvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                hidden = 'webkitHidden';\n                visibilityChange = 'webkitvisibilitychange';\n            }\n            this._hidden = hidden;\n            this._visibilityChange = visibilityChange;\n        }\n\n        /**\n         * Adds an event listener on the document that listens to changes in document.visibilityChange\n         * (or whatever name by which the visibilityChange variable is known in the browser)\n         * @private\n         */\n\n    }, {\n        key: '_addVisibilityChangeListener',\n        value: function _addVisibilityChangeListener() {\n            if (typeof document.addEventListener === 'undefined' || typeof document[this._hidden] === 'undefined') {\n                debug('Checking page visibility requires a browser that supports the Page Visibility API.');\n            } else {\n                // Handle page visibility change\n                document.addEventListener(this._visibilityChange, this._handleVisibilityChange.bind(this), false);\n            }\n        }\n\n        /**\n         * The function returns ```true``` if the page is visible or ```false``` if the page is not visible and\n         * ```undefined``` if the page visibility API is not supported by the browser.\n         * @returns {Boolean|void} whether the page is now visible or not (undefined is unknown)\n         */\n\n    }, {\n        key: 'isVisible',\n        value: function isVisible() {\n            if (this._hidden === undefined || document[this._hidden] === undefined) {\n                return undefined;\n            }\n\n            return !document[this._hidden];\n        }\n\n        /**\n         * The function that is called when document.visibilityChange has changed\n         * It emits an event called visibilityChange and sends the value of document.hidden as a\n         * parameter\n         *\n         * @private\n         */\n\n    }, {\n        key: '_handleVisibilityChange',\n        value: function _handleVisibilityChange() {\n            var visible = !document[this._hidden];\n            debug(visible ? 'Page Visible' : 'Page Hidden');\n            // Emit the event\n            this.emit('visibilityChange', visible);\n        }\n    }]);\n\n    return VisibilityChangeEmitter;\n}(_events2.default);\n\nexports.default = VisibilityChangeEmitter;\n//# sourceMappingURL=VisibilityChangeEmitter.js.map\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","'use strict'\n\nconst EventEmitter = require('events').EventEmitter\nconst debug = require('debug')\nconst withIs = require('class-is')\n\nclass BaseConnection extends EventEmitter {\n  constructor ({ _switch, name }) {\n    super()\n\n    this.switch = _switch\n    this.ourPeerInfo = this.switch._peerInfo\n    this.log = debug(`libp2p:conn:${name}`)\n    this.log.error = debug(`libp2p:conn:${name}:error`)\n  }\n\n  /**\n   * Puts the state into its disconnecting flow\n   *\n   * @param {Error} err Will be emitted if provided\n   * @returns {void}\n   */\n  close (err) {\n    if (this._state._state === 'DISCONNECTING') return\n    this.log('closing connection to %s', this.theirB58Id)\n    if (err && this._events.error) {\n      this.emit('error', err)\n    }\n    this._state('disconnect')\n  }\n\n  emit (eventName, ...args) {\n    if (eventName === 'error' && !this._events.error) {\n      this.log.error(...args)\n    } else {\n      super.emit(eventName, ...args)\n    }\n  }\n\n  /**\n   * Gets the current state of the connection\n   *\n   * @returns {string} The current state of the connection\n   */\n  getState () {\n    return this._state._state\n  }\n\n  /**\n   * Puts the state into encrypting mode\n   *\n   * @returns {void}\n   */\n  encrypt () {\n    this._state('encrypt')\n  }\n\n  /**\n   * Puts the state into privatizing mode\n   *\n   * @returns {void}\n   */\n  protect () {\n    this._state('privatize')\n  }\n\n  /**\n   * Puts the state into muxing mode\n   *\n   * @returns {void}\n   */\n  upgrade () {\n    this._state('upgrade')\n  }\n\n  /**\n   * Event handler for disconnected.\n   *\n   * @fires BaseConnection#close\n   * @returns {void}\n   */\n  _onDisconnected () {\n    this.switch.connection.remove(this)\n    this.log('disconnected from %s', this.theirB58Id)\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  /**\n   * Event handler for privatized\n   *\n   * @fires BaseConnection#private\n   * @returns {void}\n   */\n  _onPrivatized () {\n    this.emit('private', this.conn)\n  }\n\n  /**\n   * Wraps this.conn with the Switch.protector for private connections\n   *\n   * @private\n   * @fires ConnectionFSM#error\n   * @returns {void}\n   */\n  _onPrivatizing () {\n    if (!this.switch.protector) {\n      return this._state('done')\n    }\n\n    this.conn = this.switch.protector.protect(this.conn, (err) => {\n      if (err) {\n        return this.close(err)\n      }\n\n      this.log('successfully privatized conn to %s', this.theirB58Id)\n      this.conn.setPeerInfo(this.theirPeerInfo)\n      this._state('done')\n    })\n  }\n}\n\nmodule.exports = withIs(BaseConnection, {\n  className: 'BaseConnection',\n  symbolName: 'libp2p-switch/BaseConnection'\n})\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) -- > 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict'\n\nvar getTime = require('./time')\n\nfunction Retimer (callback, timeout, args) {\n  var that = this\n\n  this._started = getTime()\n  this._rescheduled = 0\n  this._scheduled = timeout\n  this._args = args\n\n  this._timer = setTimeout(timerWrapper, timeout)\n\n  function timerWrapper () {\n    if (that._rescheduled > 0) {\n      that._scheduled = that._rescheduled - (getTime() - that._started)\n      that._timer = setTimeout(timerWrapper, that._scheduled)\n      that._rescheduled = 0\n    } else {\n      callback.apply(null, that._args)\n    }\n  }\n}\n\nRetimer.prototype.reschedule = function (timeout) {\n  var now = getTime()\n  if ((now + timeout) - (this._started + this._scheduled) < 0) {\n    return false\n  } else {\n    this._started = now\n    this._rescheduled = timeout\n    return true\n  }\n}\n\nRetimer.prototype.clear = function () {\n  clearTimeout(this._timer)\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  var args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n","'use strict'\n\nconst ConnectionFSM = require('../connection')\nconst { DIAL_ABORTED, ERR_BLACKLISTED } = require('../errors')\nconst nextTick = require('async/nextTick')\nconst once = require('once')\nconst debug = require('debug')\nconst log = debug('libp2p:switch:dial')\nlog.error = debug('libp2p:switch:dial:error')\n\n/**\n * Components required to execute a dial\n * @typedef {Object} DialRequest\n * @property {PeerInfo} peerInfo - The peer to dial to\n * @property {string} [protocol] - The protocol to create a stream for\n * @property {object} options\n * @property {boolean} options.useFSM - If `callback` should return a ConnectionFSM\n * @property {number} options.priority - The priority of the dial\n * @property {function(Error, Connection|ConnectionFSM)} callback\n */\n\n/**\n * @typedef {Object} NewConnection\n * @property {ConnectionFSM} connectionFSM\n * @property {boolean} didCreate\n */\n\n/**\n * Attempts to create a new connection or stream (when muxed),\n * via negotiation of the given `protocol`. If no `protocol` is\n * provided, no action will be taken and `callback` will be called\n * immediately with no error or values.\n *\n * @param {object} options\n * @param {string} options.protocol\n * @param {ConnectionFSM} options.connection\n * @param {function(Error, Connection)} options.callback\n * @returns {void}\n */\nfunction createConnectionWithProtocol ({ protocol, connection, callback }) {\n  if (!protocol) {\n    return callback()\n  }\n  connection.shake(protocol, (err, conn) => {\n    if (!conn) {\n      return callback(err)\n    }\n\n    conn.setPeerInfo(connection.theirPeerInfo)\n    callback(null, conn)\n  })\n}\n\n/**\n * A convenience array wrapper for controlling\n * a per peer queue\n *\n * @returns {Queue}\n */\nclass Queue {\n  /**\n   * @constructor\n   * @param {string} peerId\n   * @param {Switch} _switch\n   * @param {function(string)} onStopped Called when the queue stops\n   */\n  constructor (peerId, _switch, onStopped) {\n    this.id = peerId\n    this.switch = _switch\n    this._queue = []\n    this.blackListed = null\n    this.blackListCount = 0\n    this.isRunning = false\n    this.onStopped = onStopped\n  }\n  get length () {\n    return this._queue.length\n  }\n\n  /**\n   * Adds the dial request to the queue. The queue is not automatically started\n   * @param {string} protocol\n   * @param {boolean} useFSM If callback should use a ConnectionFSM instead\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  add (protocol, useFSM, callback) {\n    if (!this.isDialAllowed()) {\n      return nextTick(callback, ERR_BLACKLISTED())\n    }\n    this._queue.push({ protocol, useFSM, callback })\n  }\n\n  /**\n   * Determines whether or not dialing is currently allowed\n   * @returns {boolean}\n   */\n  isDialAllowed () {\n    if (this.blackListed) {\n      // If the blacklist ttl has passed, reset it\n      if (Date.now() > this.blackListed) {\n        this.blackListed = null\n        return true\n      }\n      // Dial is not allowed\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Starts the queue. If the queue was started `true` will be returned.\n   * If the queue was already running `false` is returned.\n   * @returns {boolean}\n   */\n  start () {\n    if (!this.isRunning) {\n      log('starting dial queue to %s', this.id)\n      this.isRunning = true\n      this._run()\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Stops the queue\n   */\n  stop () {\n    if (this.isRunning) {\n      log('stopping dial queue to %s', this.id)\n      this.isRunning = false\n      this.onStopped(this.id)\n    }\n  }\n\n  /**\n   * Stops the queue and errors the callback for each dial request\n   */\n  abort () {\n    while (this.length > 0) {\n      let dial = this._queue.shift()\n      dial.callback(DIAL_ABORTED())\n    }\n    this.stop()\n  }\n\n  /**\n   * Marks the queue as blacklisted. The queue will be immediately aborted.\n   * @returns {void}\n   */\n  blacklist () {\n    this.blackListCount++\n\n    if (this.blackListCount >= this.switch.dialer.BLACK_LIST_ATTEMPTS) {\n      this.blackListed = Infinity\n      return\n    }\n\n    let ttl = this.switch.dialer.BLACK_LIST_TTL * Math.pow(this.blackListCount, 3)\n    const minTTL = ttl * 0.9\n    const maxTTL = ttl * 1.1\n\n    // Add a random jitter of 20% to the ttl\n    ttl = Math.floor(Math.random() * (maxTTL - minTTL) + minTTL)\n\n    this.blackListed = Date.now() + ttl\n    this.abort()\n  }\n\n  /**\n   * Attempts to find a muxed connection for the given peer. If one\n   * isn't found, a new one will be created.\n   *\n   * Returns an array containing two items. The ConnectionFSM and wether\n   * or not the ConnectionFSM was just created. The latter can be used\n   * to determine dialing needs.\n   *\n   * @private\n   * @param {PeerInfo} peerInfo\n   * @returns {NewConnection}\n   */\n  _getOrCreateConnection (peerInfo) {\n    let connectionFSM = this.switch.connection.getOne(this.id)\n    let didCreate = false\n\n    if (!connectionFSM) {\n      connectionFSM = new ConnectionFSM({\n        _switch: this.switch,\n        peerInfo,\n        muxer: null,\n        conn: null\n      })\n\n      this.switch.connection.add(connectionFSM)\n\n      // Add control events and start the dialer\n      connectionFSM.once('connected', () => connectionFSM.protect())\n      connectionFSM.once('private', () => connectionFSM.encrypt())\n      connectionFSM.once('encrypted', () => connectionFSM.upgrade())\n\n      didCreate = true\n    }\n\n    return { connectionFSM, didCreate }\n  }\n\n  /**\n   * Executes the next dial in the queue for the given peer\n   * @private\n   * @returns {void}\n   */\n  _run () {\n    // If we have no items in the queue or we're stopped, exit\n    if (this.length < 1 || !this.isRunning) {\n      log('stopping the queue for %s', this.id)\n      return this.stop()\n    }\n\n    const next = once(() => {\n      log('starting next dial to %s', this.id)\n      this._run()\n    })\n\n    const peerInfo = this.switch._peerBook.get(this.id)\n    let queuedDial = this._queue.shift()\n    let { connectionFSM, didCreate } = this._getOrCreateConnection(peerInfo)\n\n    // If the dial expects a ConnectionFSM, we can provide that back now\n    if (queuedDial.useFSM) {\n      nextTick(queuedDial.callback, null, connectionFSM)\n    }\n\n    // If we can handshake protocols, get a new stream and call run again\n    if (['MUXED', 'CONNECTED'].includes(connectionFSM.getState())) {\n      queuedDial.connection = connectionFSM\n      createConnectionWithProtocol(queuedDial)\n      next()\n      return\n    }\n\n    // If we error, error the queued dial\n    // In the future, it may be desired to error the other queued dials,\n    // depending on the error.\n    connectionFSM.once('error', (err) => {\n      queuedDial.callback(err)\n      // Dont blacklist peers we have identified and that we are connected to\n      if (peerInfo.protocols.size > 0 && peerInfo.isConnected()) {\n        return\n      }\n      this.blacklist()\n    })\n\n    connectionFSM.once('close', () => {\n      next()\n    })\n\n    // If we're not muxed yet, add listeners\n    connectionFSM.once('muxed', () => {\n      this.blackListCount = 0 // reset blacklisting on good connections\n      queuedDial.connection = connectionFSM\n      createConnectionWithProtocol(queuedDial)\n      next()\n    })\n\n    connectionFSM.once('unmuxed', () => {\n      this.blackListCount = 0\n      queuedDial.connection = connectionFSM\n      createConnectionWithProtocol(queuedDial)\n      next()\n    })\n\n    // If we have a new connection, start dialing\n    if (didCreate) {\n      connectionFSM.dial()\n    }\n  }\n}\n\nmodule.exports = Queue\n","'use strict'\n\nexports = module.exports\n\nexports.PROTOCOL_ID = '/multistream/1.0.0'\n\nexports.errors = {\n  MULTICODEC_NOT_SUPPORTED: 'ERR_MULTICODEC_NOT_SUPPORTED'\n}\n","'use strict'\n\n/**\n * Match protocols exactly.\n *\n * @param {string} myProtocol\n * @param {string} senderProtocol\n * @param {function(Error, boolean)} callback\n * @returns {undefined}\n * @type {matchHandler}\n */\nfunction matchExact (myProtocol, senderProtocol, callback) {\n  const result = myProtocol === senderProtocol\n  callback(null, result)\n}\n\nmodule.exports = matchExact\n","'use strict'\n\nconst semver = require('semver')\n\n/**\n * Match protocols using semver `~` matching.\n *\n * @param {string} myProtocol\n * @param {string} senderProtocol\n * @param {function(Error, boolean)} callback\n * @returns {undefined}\n * @type {matchHandler}\n */\nfunction matchSemver (myProtocol, senderProtocol, callback) {\n  const mps = myProtocol.split('/')\n  const sps = senderProtocol.split('/')\n  const myName = mps[1]\n  const myVersion = mps[2]\n\n  const senderName = sps[1]\n  const senderVersion = sps[2]\n\n  if (myName !== senderName) {\n    return callback(null, false)\n  }\n  // does my protocol satisfy the sender?\n  const valid = semver.satisfies(myVersion, '~' + senderVersion)\n\n  callback(null, valid)\n}\n\nmodule.exports = matchSemver\n","'use strict'\n\nconst varint = require('varint')\nconst pull = require('pull-stream/pull')\nconst map = require('pull-stream/throughs/map')\nconst collect = require('pull-stream/sinks/collect')\nconst take = require('pull-stream/throughs/take')\nconst pullLP = require('pull-length-prefixed')\nconst Connection = require('interface-connection').Connection\nconst util = require('../util')\nconst select = require('../select')\nconst once = require('once')\n\nconst PROTOCOL_ID = require('./../constants').PROTOCOL_ID\n\n/**\n *\n */\nclass Dialer {\n  /**\n   * Create a new Dialer.\n   */\n  constructor () {\n    this.conn = null\n    this.log = util.log.dialer()\n  }\n\n  /**\n   * Perform the multistream handshake.\n   *\n   * @param {Connection} rawConn - The connection on which\n   * to perform the handshake.\n   * @param {function(Error)} callback - Called when the handshake completed.\n   * @returns {undefined}\n   */\n  handle (rawConn, callback) {\n    this.log('dialer handle conn')\n    callback = once(callback)\n    const s = select(PROTOCOL_ID, (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n      this.log('handshake success')\n\n      this.conn = new Connection(conn, rawConn)\n\n      callback()\n    }, this.log)\n\n    // Handle unexpected errors from pull, like 'already piped'\n    try {\n      pull(\n        rawConn,\n        s,\n        rawConn\n      )\n    } catch (err) {\n      this.log.error(err)\n      callback(err)\n    }\n  }\n\n  /**\n   * Select a protocol\n   *\n   * @param {string} protocol - A string of the protocol that we want to handshake.\n   * @param {function(Error, Connection)} callback - `err` is\n   * an error object that gets passed if something wrong happ\n   * end (e.g: if the protocol selected is not supported by\n   * the other end) and conn is the connection handshaked\n   * with the other end.\n   *\n   * @returns {undefined}\n   */\n  select (protocol, callback) {\n    this.log('dialer select ' + protocol)\n    callback = once(callback)\n    if (!this.conn) {\n      return callback(new Error('multistream handshake has not finalized yet'))\n    }\n\n    const s = select(protocol, (err, conn) => {\n      if (err) {\n        this.conn = new Connection(conn, this.conn)\n        return callback(err)\n      }\n      callback(null, new Connection(conn, this.conn))\n    }, this.log)\n\n    pull(\n      this.conn,\n      s,\n      this.conn\n    )\n  }\n\n  /**\n   * List all available protocols.\n   *\n   * @param {function(Error, Array<string>)} callback - If\n   * something wrong happend `Error` exists, otherwise\n   * `protocols` is a list of the supported\n   * protocols on the other end.\n   *\n   * @returns {undefined}\n   */\n  ls (callback) {\n    callback = once(callback)\n\n    const lsStream = select('ls', (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n\n      pull(\n        conn,\n        pullLP.decode(),\n        collectLs(conn),\n        map(stringify),\n        collect((err, list) => {\n          if (err) {\n            return callback(err)\n          }\n          callback(null, list.slice(1))\n        })\n      )\n    }, this.log)\n\n    pull(\n      this.conn,\n      lsStream,\n      this.conn\n    )\n  }\n}\n\nfunction stringify (buf) {\n  return buf.toString().slice(0, -1)\n}\n\nfunction collectLs (conn) {\n  let first = true\n  let counter = 0\n\n  return take((msg) => {\n    if (first) {\n      varint.decode(msg)\n      counter = varint.decode(msg, varint.decode.bytes)\n      return true\n    }\n\n    return counter-- > 0\n  })\n}\n\nmodule.exports = Dialer\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst assert = require('assert')\nconst select = require('../select')\nconst selectHandler = require('./select-handler')\nconst lsHandler = require('./ls-handler')\nconst matchExact = require('./match-exact')\n\nconst util = require('./../util')\nconst Connection = require('interface-connection').Connection\n\nconst PROTOCOL_ID = require('./../constants').PROTOCOL_ID\n\n/**\n * Listener\n */\nclass Listener {\n  /**\n   * Create a new Listener.\n   */\n  constructor () {\n    this.handlers = {\n      ls: {\n        handlerFunc: (protocol, conn) => lsHandler(this, conn),\n        matchFunc: matchExact\n\n      }\n    }\n    this.log = util.log.listener()\n  }\n\n  /**\n   * Perform the multistream handshake.\n   *\n   * @param {Connection} rawConn - The connection on which\n   * to perform the handshake.\n   * @param {function(Error)} callback - Called when the handshake completed.\n   * @returns {undefined}\n   */\n  handle (rawConn, callback) {\n    this.log('listener handle conn')\n\n    const selectStream = select(PROTOCOL_ID, (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const shConn = new Connection(conn, rawConn)\n\n      const sh = selectHandler(shConn, this.handlers, this.log)\n\n      pull(\n        shConn,\n        sh,\n        shConn\n      )\n\n      callback()\n    }, this.log)\n\n    pull(\n      rawConn,\n      selectStream,\n      rawConn\n    )\n  }\n\n  /**\n   * Handle a given `protocol`.\n   *\n   * @param {string} protocol - A string identifying the protocol.\n   * @param {function(string, Connection)} handlerFunc - Will be called if there is a handshake performed on `protocol`.\n   * @param {matchHandler} [matchFunc=matchExact]\n   * @returns {undefined}\n   */\n  addHandler (protocol, handlerFunc, matchFunc) {\n    this.log('adding handler: ' + protocol)\n    assert(typeof handlerFunc === 'function', 'handler must be a function')\n\n    if (this.handlers[protocol]) {\n      this.log('overwriting handler for ' + protocol)\n    }\n\n    if (!matchFunc) {\n      matchFunc = matchExact\n    }\n\n    this.handlers[protocol] = {\n      handlerFunc: handlerFunc,\n      matchFunc: matchFunc\n    }\n  }\n\n  /**\n   * Receives a protocol and a callback and should\n   * call `callback(err, result)` where `err` is if\n   * there was a error on the matching function, and\n   * `result` is a boolean that represents if a\n   * match happened.\n   *\n   * @callback matchHandler\n   * @param {string} myProtocol\n   * @param {string} senderProtocol\n   * @param {function(Error, boolean)} callback\n   * @returns {undefined}\n   */\n}\n\nmodule.exports = Listener\n","'use strict'\n\nconst protons = require('protons')\nconst schema = `\nmessage Identify {\n  // protocolVersion determines compatibility between peers\n  optional string protocolVersion = 5; // e.g. ipfs/1.0.0\n\n  // agentVersion is like a UserAgent string in browsers, or client version in bittorrent\n  // includes the client name and client.\n  optional string agentVersion = 6; // e.g. go-ipfs/0.1.0\n\n  // publicKey is this node's public key (which also gives its node.ID)\n  // - may not need to be sent, as secure channel implies it has been sent.\n  // - then again, if we change / disable secure channel, may still want it.\n  optional bytes publicKey = 1;\n\n  // listenAddrs are the multiaddrs the sender node listens for open connections on\n  repeated bytes listenAddrs = 2;\n\n  // oservedAddr is the multiaddr of the remote endpoint that the sender node perceives\n  // this is useful information to convey to the other side, as it helps the remote endpoint\n  // determine whether its connection to the local peer goes through NAT.\n  optional bytes observedAddr = 4;\n\n  repeated string protocols = 3;\n}\n`\n\nmodule.exports = protons(schema).Identify\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst lp = require('pull-length-prefixed')\n\nconst msg = require('./message')\n\nmodule.exports = (conn, pInfoSelf) => {\n  // send what I see from the other + my Info\n  conn.getObservedAddrs((err, observedAddrs) => {\n    if (err) { return }\n    observedAddrs = observedAddrs[0]\n\n    let publicKey = Buffer.alloc(0)\n    if (pInfoSelf.id.pubKey) {\n      publicKey = pInfoSelf.id.pubKey.bytes\n    }\n\n    const msgSend = msg.encode({\n      protocolVersion: 'ipfs/0.1.0',\n      agentVersion: 'na',\n      publicKey: publicKey,\n      listenAddrs: pInfoSelf.multiaddrs.toArray().map((ma) => ma.buffer),\n      observedAddr: observedAddrs ? observedAddrs.buffer : Buffer.from(''),\n      protocols: Array.from(pInfoSelf.protocols)\n    })\n\n    pull(\n      values([msgSend]),\n      lp.encode(),\n      conn\n    )\n  })\n}\n","'use strict'\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst multiaddr = require('multiaddr')\nconst pull = require('pull-stream/pull')\nconst take = require('pull-stream/throughs/take')\nconst collect = require('pull-stream/sinks/collect')\nconst lp = require('pull-length-prefixed')\n\nconst msg = require('./message')\n\nmodule.exports = (conn, expectedPeerInfo, callback) => {\n  if (typeof expectedPeerInfo === 'function') {\n    callback = expectedPeerInfo\n    expectedPeerInfo = null\n    console.warn('WARNING: no expected peer info was given, identify will not be able to verify peer integrity')\n  }\n\n  pull(\n    conn,\n    lp.decode(),\n    take(1),\n    collect((err, data) => {\n      if (err) {\n        return callback(err)\n      }\n\n      // connection got closed graciously\n      if (data.length === 0) {\n        return callback(new Error('conn was closed, did not receive data'))\n      }\n\n      const input = msg.decode(data[0])\n\n      PeerId.createFromPubKey(input.publicKey, (err, id) => {\n        if (err) {\n          return callback(err)\n        }\n\n        const peerInfo = new PeerInfo(id)\n        if (expectedPeerInfo && expectedPeerInfo.id.toB58String() !== id.toB58String()) {\n          return callback(new Error('invalid peer'))\n        }\n\n        try {\n          input.listenAddrs\n            .map(multiaddr)\n            .forEach((ma) => peerInfo.multiaddrs.add(ma))\n        } catch (err) {\n          return callback(err)\n        }\n\n        let observedAddr\n\n        try {\n          observedAddr = getObservedAddrs(input)\n        } catch (err) {\n          return callback(err)\n        }\n\n        // Copy the protocols\n        peerInfo.protocols = new Set(input.protocols)\n\n        callback(null, peerInfo, observedAddr)\n      })\n    })\n  )\n}\n\nfunction getObservedAddrs (input) {\n  if (!hasObservedAddr(input)) {\n    return []\n  }\n\n  let addrs = input.observedAddr\n\n  if (!Array.isArray(addrs)) {\n    addrs = [addrs]\n  }\n\n  return addrs.map((oa) => multiaddr(oa))\n}\n\nfunction hasObservedAddr (input) {\n  return input.observedAddr && input.observedAddr.length > 0\n}\n","'use strict'\n\nconst Connection = require('interface-connection').Connection\nconst pull = require('pull-stream/pull')\nconst empty = require('pull-stream/sources/empty')\nconst timeout = require('async/timeout')\nconst queue = require('async/queue')\nconst debug = require('debug')\nconst once = require('once')\n\nconst log = debug('libp2p:switch:dialer:queue')\nlog.error = debug('libp2p:switch:dialer:queue:error')\n\n/**\n * Queue up the amount of dials to a given peer.\n */\nclass DialQueue {\n  /**\n   * Create a new dial queue.\n   *\n   * @param {number} limit\n   * @param {number} dialTimeout\n   */\n  constructor (limit, dialTimeout) {\n    this.dialTimeout = dialTimeout\n\n    this.queue = queue((task, cb) => {\n      this._doWork(task.transport, task.addr, task.token, cb)\n    }, limit)\n  }\n\n  /**\n   * The actual work done by the queue.\n   *\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {CancelToken} token\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   * @private\n   */\n  _doWork (transport, addr, token, callback) {\n    callback = once(callback)\n    log('work:start')\n    this._dialWithTimeout(transport, addr, (err, conn) => {\n      if (err) {\n        log.error(`${transport.constructor.name}:work`, err)\n        return callback(err)\n      }\n\n      if (token.cancel) {\n        log('work:cancel')\n        // clean up already done dials\n        pull(empty(), conn)\n        // If we can close the connection, do it\n        if (typeof conn.close === 'function') {\n          return conn.close((_) => callback(null))\n        }\n        return callback(null)\n      }\n\n      // one is enough\n      token.cancel = true\n\n      log('work:success')\n\n      const proxyConn = new Connection()\n      proxyConn.setInnerConn(conn)\n      callback(null, { multiaddr: addr, conn: conn })\n    })\n  }\n\n  /**\n   * Dial the given transport, timing out with the set timeout.\n   *\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   *\n   * @private\n   */\n  _dialWithTimeout (transport, addr, callback) {\n    timeout((cb) => {\n      const conn = transport.dial(addr, (err) => {\n        if (err) {\n          return cb(err)\n        }\n\n        cb(null, conn)\n      })\n    }, this.dialTimeout)(callback)\n  }\n\n  /**\n   * Add new work to the queue.\n   *\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {CancelToken} token\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  push (transport, addr, token, callback) {\n    this.queue.push({ transport, addr, token }, callback)\n  }\n}\n\nmodule.exports = DialQueue\n","'use strict'\n\nconst multiaddr = require('multiaddr')\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst proto = require('../protocol')\n\nmodule.exports = function (swarm) {\n  /**\n   * Get b58 string from multiaddr or peerinfo\n   *\n   * @param {Multiaddr|PeerInfo} peer\n   * @return {*}\n   */\n  function getB58String (peer) {\n    let b58Id = null\n    if (multiaddr.isMultiaddr(peer)) {\n      const relayMa = multiaddr(peer)\n      b58Id = relayMa.getPeerId()\n    } else if (PeerInfo.isPeerInfo(peer)) {\n      b58Id = peer.id.toB58String()\n    }\n\n    return b58Id\n  }\n\n  /**\n   * Helper to make a peer info from a multiaddrs\n   *\n   * @param {Multiaddr|PeerInfo|PeerId} ma\n   * @param {Swarm} swarm\n   * @return {PeerInfo}\n   * @private\n   */\n  // TODO: this is ripped off of libp2p, should probably be a generally available util function\n  function peerInfoFromMa (peer) {\n    let p\n    // PeerInfo\n    if (PeerInfo.isPeerInfo(peer)) {\n      p = peer\n      // Multiaddr instance (not string)\n    } else if (multiaddr.isMultiaddr(peer)) {\n      const peerIdB58Str = peer.getPeerId()\n      try {\n        p = swarm._peerBook.get(peerIdB58Str)\n      } catch (err) {\n        p = new PeerInfo(PeerId.createFromB58String(peerIdB58Str))\n      }\n      p.multiaddrs.add(peer)\n      // PeerId\n    } else if (PeerId.isPeerId(peer)) {\n      const peerIdB58Str = peer.toB58String()\n      p = swarm._peerBook.has(peerIdB58Str) ? swarm._peerBook.get(peerIdB58Str) : peer\n    }\n\n    return p\n  }\n\n  /**\n   * Checks if peer has an existing connection\n   *\n   * @param {String} peerId\n   * @param {Swarm} swarm\n   * @return {Boolean}\n   */\n  function isPeerConnected (peerId) {\n    return swarm.muxedConns[peerId] || swarm.conns[peerId]\n  }\n\n  /**\n   * Write a response\n   *\n   * @param {StreamHandler} streamHandler\n   * @param {CircuitRelay.Status} status\n   * @param {Function} cb\n   * @returns {*}\n   */\n  function writeResponse (streamHandler, status, cb) {\n    cb = cb || (() => {})\n    streamHandler.write(proto.CircuitRelay.encode({\n      type: proto.CircuitRelay.Type.STATUS,\n      code: status\n    }))\n    return cb()\n  }\n\n  /**\n   * Validate incomming HOP/STOP message\n   *\n   * @param {CircuitRelay} msg\n   * @param {StreamHandler} streamHandler\n   * @param {CircuitRelay.Type} type\n   * @returns {*}\n   * @param {Function} cb\n   */\n  function validateAddrs (msg, streamHandler, type, cb) {\n    try {\n      msg.dstPeer.addrs.forEach((addr) => {\n        return multiaddr(addr)\n      })\n    } catch (err) {\n      writeResponse(streamHandler, type === proto.CircuitRelay.Type.HOP\n        ? proto.CircuitRelay.Status.HOP_DST_MULTIADDR_INVALID\n        : proto.CircuitRelay.Status.STOP_DST_MULTIADDR_INVALID)\n      return cb(err)\n    }\n\n    try {\n      msg.srcPeer.addrs.forEach((addr) => {\n        return multiaddr(addr)\n      })\n    } catch (err) {\n      writeResponse(streamHandler, type === proto.CircuitRelay.Type.HOP\n        ? proto.CircuitRelay.Status.HOP_SRC_MULTIADDR_INVALID\n        : proto.CircuitRelay.Status.STOP_SRC_MULTIADDR_INVALID)\n      return cb(err)\n    }\n\n    return cb(null)\n  }\n\n  function peerIdFromId (id) {\n    if (typeof id === 'string') {\n      return PeerId.createFromB58String(id)\n    }\n\n    return PeerId.createFromBytes(id)\n  }\n\n  return {\n    getB58String,\n    peerInfoFromMa,\n    isPeerConnected,\n    validateAddrs,\n    writeResponse,\n    peerIdFromId\n  }\n}\n","'use strict'\n\nconst once = require('once')\nconst PeerId = require('peer-id')\nconst waterfall = require('async/waterfall')\nconst setImmediate = require('async/setImmediate')\nconst multiaddr = require('multiaddr')\n\nconst Connection = require('interface-connection').Connection\n\nconst utilsFactory = require('./utils')\nconst StreamHandler = require('./stream-handler')\n\nconst debug = require('debug')\nconst log = debug('libp2p:circuit:dialer')\nlog.err = debug('libp2p:circuit:error:dialer')\n\nconst multicodec = require('../multicodec')\nconst proto = require('../protocol')\n\nclass Dialer {\n  /**\n   * Creates an instance of Dialer.\n   * @param {Swarm} swarm - the swarm\n   * @param {any} options - config options\n   *\n   * @memberOf Dialer\n   */\n  constructor (swarm, options) {\n    this.swarm = swarm\n    this.relayPeers = new Map()\n    this.relayConns = new Map()\n    this.options = options\n    this.utils = utilsFactory(swarm)\n  }\n\n  /**\n   * Helper that returns a relay connection\n   *\n   * @param {*} relay\n   * @param {*} callback\n   * @returns {Function} - callback\n   */\n  _dialRelayHelper (relay, callback) {\n    if (this.relayConns.has(relay.id.toB58String())) {\n      return callback(null, this.relayConns.get(relay.id.toB58String()))\n    }\n\n    return this._dialRelay(relay, callback)\n  }\n\n  /**\n   * Dial a peer over a relay\n   *\n   * @param {multiaddr} ma - the multiaddr of the peer to dial\n   * @param {Function} cb - a callback called once dialed\n   * @returns {Connection} - the connection\n   *\n   */\n  dial (ma, cb) {\n    cb = cb || (() => { })\n    const strMa = ma.toString()\n    if (!strMa.includes('/p2p-circuit')) {\n      log.err('invalid circuit address')\n      return cb(new Error('invalid circuit address'))\n    }\n\n    const addr = strMa.split('p2p-circuit') // extract relay address if any\n    const relay = addr[0] === '/' ? null : multiaddr(addr[0])\n    const peer = multiaddr(addr[1] || addr[0])\n\n    const dstConn = new Connection()\n    setImmediate(\n      this._dialPeer.bind(this),\n      peer,\n      relay,\n      (err, conn) => {\n        if (err) {\n          log.err(err)\n          return cb(err)\n        }\n\n        dstConn.setInnerConn(conn)\n        cb(null, dstConn)\n      })\n\n    return dstConn\n  }\n\n  /**\n   * Does the peer support the HOP protocol\n   *\n   * @param {PeerInfo} peer\n   * @param {Function} callback\n   * @returns {void}\n   */\n  canHop (peer, callback) {\n    callback = once(callback || (() => { }))\n\n    this._dialRelayHelper(peer, (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const sh = new StreamHandler(conn)\n      waterfall([\n        (cb) => sh.write(proto.CircuitRelay.encode({\n          type: proto.CircuitRelay.Type.CAN_HOP\n        }), cb),\n        (cb) => sh.read(cb)\n      ], (err, msg) => {\n        if (err) {\n          return callback(err)\n        }\n        const response = proto.CircuitRelay.decode(msg)\n\n        if (response.code !== proto.CircuitRelay.Status.SUCCESS) {\n          const err = new Error(`HOP not supported, skipping - ${this.utils.getB58String(peer)}`)\n          log(err)\n          return callback(err)\n        }\n\n        log('HOP supported adding as relay - %s', this.utils.getB58String(peer))\n        this.relayPeers.set(this.utils.getB58String(peer), peer)\n        sh.close()\n        callback()\n      })\n    })\n  }\n\n  /**\n   * Dial the destination peer over a relay\n   *\n   * @param {multiaddr} dstMa\n   * @param {Connection|PeerInfo} relay\n   * @param {Function} cb\n   * @return {Function|void}\n   * @private\n   */\n  _dialPeer (dstMa, relay, cb) {\n    if (typeof relay === 'function') {\n      cb = relay\n      relay = null\n    }\n\n    if (!cb) {\n      cb = () => {}\n    }\n\n    dstMa = multiaddr(dstMa)\n    // if no relay provided, dial on all available relays until one succeeds\n    if (!relay) {\n      const relays = Array.from(this.relayPeers.values())\n      let next = (nextRelay) => {\n        if (!nextRelay) {\n          let err = `no relay peers were found or all relays failed to dial`\n          log.err(err)\n          return cb(err)\n        }\n\n        return this._negotiateRelay(\n          nextRelay,\n          dstMa,\n          (err, conn) => {\n            if (err) {\n              log.err(err)\n              return next(relays.shift())\n            }\n            cb(null, conn)\n          })\n      }\n      next(relays.shift())\n    } else {\n      return this._negotiateRelay(\n        relay,\n        dstMa,\n        (err, conn) => {\n          if (err) {\n            log.err('An error has occurred negotiating the relay connection', err)\n            return cb(err)\n          }\n\n          return cb(null, conn)\n        })\n    }\n  }\n\n  /**\n   * Negotiate the relay connection\n   *\n   * @param {Multiaddr|PeerInfo|Connection} relay - the Connection or PeerInfo of the relay\n   * @param {multiaddr} dstMa - the multiaddr of the peer to relay the connection for\n   * @param {Function} callback - a callback which gets the negotiated relay connection\n   * @returns {void}\n   * @private\n   *\n   * @memberOf Dialer\n   */\n  _negotiateRelay (relay, dstMa, callback) {\n    dstMa = multiaddr(dstMa)\n    relay = this.utils.peerInfoFromMa(relay)\n    const srcMas = this.swarm._peerInfo.multiaddrs.toArray()\n    this._dialRelayHelper(relay, (err, conn) => {\n      if (err) {\n        log.err(err)\n        return callback(err)\n      }\n      let sh = new StreamHandler(conn)\n      waterfall([\n        (cb) => {\n          log('negotiating relay for peer %s', dstMa.getPeerId())\n          let dstPeerId\n          try {\n            dstPeerId = PeerId.createFromB58String(dstMa.getPeerId()).id\n          } catch (err) {\n            return cb(err)\n          }\n          sh.write(\n            proto.CircuitRelay.encode({\n              type: proto.CircuitRelay.Type.HOP,\n              srcPeer: {\n                id: this.swarm._peerInfo.id.id,\n                addrs: srcMas.map((addr) => addr.buffer)\n              },\n              dstPeer: {\n                id: dstPeerId,\n                addrs: [dstMa.buffer]\n              }\n            }), cb)\n        },\n        (cb) => sh.read(cb)\n      ], (err, msg) => {\n        if (err) {\n          return callback(err)\n        }\n        const message = proto.CircuitRelay.decode(msg)\n        if (message.type !== proto.CircuitRelay.Type.STATUS) {\n          return callback(new Error(`Got invalid message type - ` +\n            `expected ${proto.CircuitRelay.Type.STATUS} got ${message.type}`))\n        }\n\n        if (message.code !== proto.CircuitRelay.Status.SUCCESS) {\n          return callback(new Error(`Got ${message.code} error code trying to dial over relay`))\n        }\n\n        callback(null, new Connection(sh.rest()))\n      })\n    })\n  }\n\n  /**\n   * Dial a relay peer by its PeerInfo\n   *\n   * @param {PeerInfo} peer - the PeerInfo of the relay peer\n   * @param {Function} cb - a callback with the connection to the relay peer\n   * @returns {void}\n   * @private\n   */\n  _dialRelay (peer, cb) {\n    cb = once(cb || (() => { }))\n\n    this.swarm.dial(\n      peer,\n      multicodec.relay,\n      once((err, conn) => {\n        if (err) {\n          log.err(err)\n          return cb(err)\n        }\n        cb(null, conn)\n      }))\n  }\n}\n\nmodule.exports = Dialer\n","'use strict'\n\nconst setImmediate = require('async/setImmediate')\n\nconst multicodec = require('./multicodec')\nconst EE = require('events').EventEmitter\nconst multiaddr = require('multiaddr')\nconst mafmt = require('mafmt')\nconst Stop = require('./circuit/stop')\nconst Hop = require('./circuit/hop')\nconst proto = require('./protocol')\nconst utilsFactory = require('./circuit/utils')\n\nconst StreamHandler = require('./circuit/stream-handler')\n\nconst debug = require('debug')\n\nconst log = debug('libp2p:circuit:listener')\nlog.err = debug('libp2p:circuit:error:listener')\n\nmodule.exports = (swarm, options, connHandler) => {\n  const listener = new EE()\n  const utils = utilsFactory(swarm)\n\n  listener.stopHandler = new Stop(swarm)\n  listener.stopHandler.on('connection', (conn) => listener.emit('connection', conn))\n  listener.hopHandler = new Hop(swarm, options.hop)\n\n  /**\n   * Add swarm handler and listen for incoming connections\n   *\n   * @param {Multiaddr} ma\n   * @param {Function} callback\n   * @return {void}\n   */\n  listener.listen = (ma, callback) => {\n    callback = callback || (() => {})\n\n    swarm.handle(multicodec.relay, (_, conn) => {\n      const sh = new StreamHandler(conn)\n\n      sh.read((err, msg) => {\n        if (err) {\n          log.err(err)\n          return\n        }\n\n        let request = null\n        try {\n          request = proto.CircuitRelay.decode(msg)\n        } catch (err) {\n          return utils.writeResponse(\n            sh,\n            proto.CircuitRelay.Status.MALFORMED_MESSAGE)\n        }\n\n        switch (request.type) {\n          case proto.CircuitRelay.Type.CAN_HOP:\n          case proto.CircuitRelay.Type.HOP: {\n            return listener.hopHandler.handle(request, sh)\n          }\n\n          case proto.CircuitRelay.Type.STOP: {\n            return listener.stopHandler.handle(request, sh, connHandler)\n          }\n\n          default: {\n            utils.writeResponse(\n              sh,\n              proto.CircuitRelay.Status.INVALID_MSG_TYPE)\n            return sh.close()\n          }\n        }\n      })\n    })\n\n    setImmediate(() => listener.emit('listen'))\n    callback()\n  }\n\n  /**\n   * Remove swarm listener\n   *\n   * @param {Function} cb\n   * @return {void}\n   */\n  listener.close = (cb) => {\n    swarm.unhandle(multicodec.relay)\n    setImmediate(() => listener.emit('close'))\n    cb()\n  }\n\n  /**\n   * Get fixed up multiaddrs\n   *\n   * NOTE: This method will grab the peers multiaddrs and expand them such that:\n   *\n   * a) If it's an existing /p2p-circuit address for a specific relay i.e.\n   *    `/ip4/0.0.0.0/tcp/0/ipfs/QmRelay/p2p-circuit` this method will expand the\n   *    address to `/ip4/0.0.0.0/tcp/0/ipfs/QmRelay/p2p-circuit/ipfs/QmPeer` where\n   *    `QmPeer` is this peers id\n   * b) If it's not a /p2p-circuit address, it will encapsulate the address as a /p2p-circuit\n   *    addr, such when dialing over a relay with this address, it will create the circuit using\n   *    the encapsulated transport address. This is useful when for example, a peer should only\n   *    be dialed over TCP rather than any other transport\n   *\n   * @param {Function} callback\n   * @return {void}\n   */\n  listener.getAddrs = (callback) => {\n    let addrs = swarm._peerInfo.multiaddrs.toArray()\n\n    // get all the explicit relay addrs excluding self\n    let p2pAddrs = addrs.filter((addr) => {\n      return mafmt.Circuit.matches(addr) &&\n        !addr.toString().includes(swarm._peerInfo.id.toB58String())\n    })\n\n    // use the explicit relays instead of any relay\n    if (p2pAddrs.length) {\n      addrs = p2pAddrs\n    }\n\n    let listenAddrs = []\n    addrs.forEach((addr) => {\n      const peerMa = `/p2p-circuit/ipfs/${swarm._peerInfo.id.toB58String()}`\n      if (addr.toString() === peerMa) {\n        listenAddrs.push(multiaddr(peerMa))\n        return\n      }\n\n      if (!mafmt.Circuit.matches(addr)) {\n        if (addr.getPeerId()) {\n          // by default we're reachable over any relay\n          listenAddrs.push(multiaddr(`/p2p-circuit`).encapsulate(addr))\n        } else {\n          const ma = `${addr}/ipfs/${swarm._peerInfo.id.toB58String()}`\n          listenAddrs.push(multiaddr(`/p2p-circuit`).encapsulate(ma))\n        }\n      } else {\n        listenAddrs.push(addr.encapsulate(`/ipfs/${swarm._peerInfo.id.toB58String()}`))\n      }\n    })\n\n    callback(null, listenAddrs)\n  }\n\n  return listener\n}\n","'use strict'\n\nconst SparseArray = require('sparse-array')\nconst wrapHash = require('./consumable-hash')\n\nconst defaultOptions = {\n  bits: 8\n}\n\nclass Bucket {\n  constructor (options, parent, posAtParent) {\n    this._options = Object.assign({}, defaultOptions, options)\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    if (!this._options.hashFn) {\n      throw new Error('please define an options.hashFn')\n    }\n\n    // make sure we only wrap options.hashFn once in the whole tree\n    if (!this._options.hash) {\n      this._options.hash = wrapHash(this._options.hashFn)\n    }\n    this._children = new SparseArray()\n  }\n\n  static isBucket (o) {\n    return o instanceof Bucket\n  }\n\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  leafCount () {\n    return this._children.compactArray().reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        for (const c2 of child.eachLeafSeries()) {\n          yield c2\n        }\n      } else {\n        yield child\n      }\n    }\n  }\n\n  serialize (map, reduce) {\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, []))\n  }\n\n  async asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  async _findPlace (key) {\n    const hashValue = this._options.hash(key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue\n    }\n  }\n\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key !== key) {\n      // conflict\n\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(child.hash)\n      newPlace.bucket._putAt(newPlace, child.key, child.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  _delAt (pos) {\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (!(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\nfunction exists (o) {\n  return Boolean(o)\n}\n\nfunction mapNode (node, index) {\n  return node.key\n}\n\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n\n    return asyncReduce(output)\n  }\n}\n\nmodule.exports = Bucket\n","/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2018 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = Buffer.alloc\n\t\t\t? Buffer.alloc(val.length)\n\t\t\t: new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\nfunction safeGetProperty(object, property) {\n\treturn property === '__proto__' ? undefined : object[property];\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if isn't an object, is null, or is an array\n\t\tif (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = safeGetProperty(target, key); // source value\n\t\t\tval = safeGetProperty(obj, key); // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n};\n","'use strict'\n\nconst Bucket = require('./bucket')\n\nmodule.exports = function createHAMT (options) {\n  return new Bucket(options)\n}\n\nmodule.exports.isBucket = Bucket.isBucket\n","'use strict'\n\nasync function * batch (source, size) {\n  let things = []\n\n  for await (const set of source) {\n    things = things.concat(set)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\nvar DuplexStream = require('readable-stream').Duplex\n  , util         = require('util')\n\nfunction BufferList (callback) {\n  if (!(this instanceof BufferList))\n    return new BufferList(callback)\n\n  this._bufs  = []\n  this.length = 0\n\n  if (typeof callback == 'function') {\n    this._callback = callback\n\n    var piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n  } else {\n    this.append(callback)\n  }\n\n  DuplexStream.call(this)\n}\n\n\nutil.inherits(BufferList, DuplexStream)\n\n\nBufferList.prototype._offset = function _offset (offset) {\n  var tot = 0, i = 0, _t\n  if (offset === 0) return [ 0, 0 ]\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length\n    if (offset < _t || i == this._bufs.length - 1) {\n      return [ i, offset - tot ]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  var bufferId = blOffset[0]\n  var offset = blOffset[1]\n  for (var i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n  return offset\n}\n\nBufferList.prototype.append = function append (buf) {\n  var i = 0\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf)\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++)\n      this.append(buf[i])\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++)\n      this.append(buf._bufs[i])\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number')\n      buf = buf.toString()\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\n\nBufferList.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback == 'function')\n    callback()\n}\n\n\nBufferList.prototype._read = function _read (size) {\n  if (!this.length)\n    return this.push(null)\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\n\nBufferList.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n  var offset = this._offset(index)\n  return this._bufs[offset[0]][offset[1]]\n}\n\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start == 'number' && start < 0)\n    start += this.length\n  if (typeof end == 'number' && end < 0)\n    end += this.length\n  return this.copy(null, 0, start, end)\n}\n\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0)\n    srcStart = 0\n  if (typeof srcEnd != 'number' || srcEnd > this.length)\n    srcEnd = this.length\n  if (srcStart >= this.length)\n    return dst || Buffer.alloc(0)\n  if (srcEnd <= 0)\n    return dst || Buffer.alloc(0)\n\n  var copy   = !!dst\n    , off    = this._offset(srcStart)\n    , len    = srcEnd - srcStart\n    , bytes  = len\n    , bufoff = (copy && dstStart) || 0\n    , start  = off[1]\n    , l\n    , i\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) { // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start)\n      start = 0\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0)\n    start += this.length\n  if (end < 0)\n    end += this.length\n\n  if (start === end) {\n    return new BufferList()\n  }\n  var startOffset = this._offset(start)\n    , endOffset = this._offset(end)\n    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] == 0)\n    buffers.pop()\n  else\n    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])\n\n  if (startOffset[1] != 0)\n    buffers[0] = buffers[0].slice(startOffset[1])\n\n  return new BufferList(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n  return this\n}\n\n\nBufferList.prototype.duplicate = function duplicate () {\n  var i = 0\n    , copy = new BufferList()\n\n  for (; i < this._bufs.length; i++)\n    copy.append(this._bufs[i])\n\n  return copy\n}\n\n\nBufferList.prototype._destroy = function _destroy (err, cb) {\n  this._bufs.length = 0\n  this.length = 0\n  cb(err)\n}\n\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n      search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (search instanceof BufferList) {\n    search = search.slice()\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  var blOffset = this._offset(offset)\n  var blIndex = blOffset[0] // index of which internal buffer we're working on\n  var buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (blIndex; blIndex < this._bufs.length; blIndex++) {\n    var buff = this._bufs[blIndex]\n    while(buffOffset < buff.length) {\n      var availableWindow = buff.length - buffOffset\n      if (availableWindow >= search.length) {\n        var nativeSearchResult = buff.indexOf(search, buffOffset)\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        var revOffset = this._reverseOffset([blIndex, buffOffset])\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n        buffOffset++\n      }\n    }\n    buffOffset = 0\n  }\n  return -1\n}\n\nBufferList.prototype._match = function(offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n  for (var searchOffset = 0; searchOffset < search.length ; searchOffset++) {\n    if(this.get(offset + searchOffset) !== search[searchOffset]){\n      return false\n    }\n  }\n  return true\n}\n\n\n;(function () {\n  var methods = {\n      'readDoubleBE' : 8\n    , 'readDoubleLE' : 8\n    , 'readFloatBE'  : 4\n    , 'readFloatLE'  : 4\n    , 'readInt32BE'  : 4\n    , 'readInt32LE'  : 4\n    , 'readUInt32BE' : 4\n    , 'readUInt32LE' : 4\n    , 'readInt16BE'  : 2\n    , 'readInt16LE'  : 2\n    , 'readUInt16BE' : 2\n    , 'readUInt16LE' : 2\n    , 'readInt8'     : 1\n    , 'readUInt8'    : 1\n    , 'readIntBE'    : null\n    , 'readIntLE'    : null\n    , 'readUIntBE'   : null\n    , 'readUIntLE'   : null\n  }\n\n  for (var m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      }\n      else {\n        BufferList.prototype[m] = function (offset) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n\nmodule.exports = BufferList\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (bits, min, max, windowSize) => {\n    const compiled = await getRabin()\n\n    return new Rabin(bits, min, max, windowSize, compiled)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","\nmodule.exports = {\n  WORKER_REQUEST_READ_LOCK: 'lock:worker:request-read',\n  WORKER_RELEASE_READ_LOCK: 'lock:worker:release-read',\n  MASTER_GRANT_READ_LOCK: 'lock:master:grant-read',\n\n  WORKER_REQUEST_WRITE_LOCK: 'lock:worker:request-write',\n  WORKER_RELEASE_WRITE_LOCK: 'lock:worker:release-write',\n  MASTER_GRANT_WRITE_LOCK: 'lock:master:grant-write'\n}\n","'use strict';\nmodule.exports = require('./lib/index');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/czech.json');\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/portuguese.json');\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","module.exports = require('./lib/heap');\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","'use strict'\nmodule.exports = `\nmessage RPC {\n  repeated SubOpts subscriptions = 1;\n  repeated Message msgs = 2;\n\n  message SubOpts {\n    optional bool subscribe = 1; // subscribe or unsubcribe\n    optional string topicID = 2;\n  }\n\n  message Message {\n    optional bytes from = 1;\n    optional bytes data = 2;\n    optional bytes seqno = 3;\n    repeated string topicIDs = 4;\n    optional bytes signature = 5;\n    optional bytes key = 6;\n  }\n}`\n","'use strict'\nmodule.exports = `\n// topicCID = cid(merkledag_protobuf(topicDescriptor)); (not the topic.name)\nmessage TopicDescriptor {\n  optional string name = 1;\n  optional AuthOpts auth = 2;\n  optional EncOpts enc = 2;\n\n  message AuthOpts {\n    optional AuthMode mode = 1;\n    repeated bytes keys = 2; // root keys to trust\n\n    enum AuthMode {\n      NONE = 0; // no authentication, anyone can publish\n      KEY = 1; // only messages signed by keys in the topic descriptor are accepted\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n\n  message EncOpts {\n    optional EncMode mode = 1;\n    repeated bytes keyHashes = 2; // the hashes of the shared keys used (salted)\n\n    enum EncMode {\n      NONE = 0; // no encryption, anyone can read\n      SHAREDKEY = 1; // messages are encrypted with shared key\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n}`\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","'use strict'\n\nmodule.exports = function getTime () {\n  return Date.now()\n}\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> -- > * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x -- > >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x -- > >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x -- > >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 -- > >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 -- > >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ -- > * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x -- > >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x -- > >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x -- > >=1.2.0 <2.0.0\n// ^1.2.3 -- > >=1.2.3 <2.0.0\n// ^1.2.0 -- > >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n","'use strict'\n\nconst handshake = require('pull-handshake')\nconst pullLP = require('pull-length-prefixed')\nconst util = require('./util')\nconst writeEncoded = util.writeEncoded\n\nconst errCode = require('err-code')\nconst { errors } = require('./constants')\n\nfunction select (multicodec, callback, log) {\n  const stream = handshake({\n    timeout: 60 * 1000\n  }, callback)\n\n  const shake = stream.handshake\n\n  log('writing multicodec: ' + multicodec)\n  writeEncoded(shake, Buffer.from(multicodec + '\\n'), callback)\n\n  pullLP.decodeFromReader(shake, (err, data) => {\n    if (err) {\n      return callback(err)\n    }\n    const protocol = data.toString().slice(0, -1)\n\n    if (protocol !== multicodec) {\n      const err = errCode(new Error(`\"${multicodec}\" not supported`), errors.MULTICODEC_NOT_SUPPORTED)\n\n      return callback(err, shake.rest())\n    }\n\n    log('received ack: ' + protocol)\n    callback(null, shake.rest())\n  })\n\n  return stream\n}\n\nmodule.exports = select\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst collect = require('pull-stream/sinks/collect')\nconst pullLP = require('pull-length-prefixed')\nconst debug = require('debug')\n\nexports = module.exports\n\nfunction randomId () {\n  return ((~~(Math.random() * 1e9)).toString(36))\n}\n\n// prefixes a message with a varint\n// TODO this is a pull-stream 'creep' (pull stream to add a byte?')\nfunction encode (msg, callback) {\n  pull(\n    values(Buffer.isBuffer(msg) ? [msg] : [Buffer.from(msg)]),\n    pullLP.encode(),\n    collect((err, encoded) => {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, encoded[0])\n    })\n  )\n}\n\nexports.writeEncoded = (writer, msg, callback) => {\n  encode(msg, (err, msg) => {\n    if (err) {\n      return callback(err)\n    }\n    writer.write(msg)\n  })\n}\n\nfunction createLogger (type) {\n  const rId = randomId()\n\n  function printer (logger) {\n    return (msg) => {\n      if (Array.isArray(msg)) {\n        msg = msg.join(' ')\n      }\n      logger('(%s) %s', rId, msg)\n    }\n  }\n\n  const log = printer(debug('mss:' + type))\n  log.error = printer(debug('mss:' + type + ':error'))\n\n  return log\n}\n\nexports.log = {}\n\nexports.log.dialer = () => {\n  return createLogger('dialer\\t')\n}\nexports.log.listener = () => {\n  return createLogger('listener\\t')\n}\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst pullLP = require('pull-length-prefixed')\nconst varint = require('varint')\n\nfunction lsHandler (self, conn) {\n  const protos = Object.keys(self.handlers).filter((key) => key !== 'ls')\n\n  const nProtos = protos.length\n  // total size of the list of protocols, including varint and newline\n  const size = protos.reduce((size, proto) => {\n    const p = Buffer.from(proto + '\\n')\n    const el = varint.encodingLength(p.length)\n    return size + el\n  }, 0)\n\n  const buf = Buffer.concat([\n    Buffer.from(varint.encode(nProtos)),\n    Buffer.from(varint.encode(size)),\n    Buffer.from('\\n')\n  ])\n\n  const encodedProtos = protos.map((proto) => {\n    return Buffer.from(proto + '\\n')\n  })\n\n  pull(\n    values([buf].concat(encodedProtos)),\n    pullLP.encode(),\n    conn\n  )\n}\n\nmodule.exports = lsHandler\n","'use strict'\n\nconst handshake = require('pull-handshake')\nconst lp = require('pull-length-prefixed')\nconst Connection = require('interface-connection').Connection\nconst writeEncoded = require('../util.js').writeEncoded\nconst some = require('async/some')\n\nfunction selectHandler (rawConn, handlersMap, log) {\n  const cb = (err) => {\n    // incoming errors are irrelevant for the app\n    log.error(err)\n  }\n\n  const stream = handshake({ timeout: 60 * 1000 }, cb)\n  const shake = stream.handshake\n\n  next()\n  return stream\n\n  function next () {\n    lp.decodeFromReader(shake, (err, data) => {\n      if (err) {\n        return cb(err)\n      }\n      log('received:', data.toString())\n      const protocol = data.toString().slice(0, -1)\n\n      matcher(protocol, handlersMap, (err, result) => {\n        if (err) {\n          return cb(err)\n        }\n        const key = result\n\n        if (key) {\n          log('send ack back of: ' + protocol)\n          writeEncoded(shake, data, cb)\n\n          const conn = new Connection(shake.rest(), rawConn)\n          handlersMap[key].handlerFunc(protocol, conn)\n        } else {\n          log('not supported protocol: ' + protocol)\n          writeEncoded(shake, Buffer.from('na\\n'))\n          next()\n        }\n      })\n    })\n  }\n}\n\nfunction matcher (protocol, handlers, callback) {\n  const supportedProtocols = Object.keys(handlers)\n  let supportedProtocol = false\n\n  some(supportedProtocols,\n    (sp, cb) => {\n      handlers[sp].matchFunc(sp, protocol, (err, result) => {\n        if (err) {\n          return cb(err)\n        }\n        if (result) {\n          supportedProtocol = sp\n        }\n        cb()\n      })\n    },\n    (err) => {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, supportedProtocol)\n    }\n  )\n}\n\nmodule.exports = selectHandler\n","'use strict'\nconst protobuf = require('protons')\nmodule.exports = protobuf(`\nmessage CircuitRelay {\n\n  enum Status {\n    SUCCESS                    = 100;\n    HOP_SRC_ADDR_TOO_LONG      = 220;\n    HOP_DST_ADDR_TOO_LONG      = 221;\n    HOP_SRC_MULTIADDR_INVALID  = 250;\n    HOP_DST_MULTIADDR_INVALID  = 251;\n    HOP_NO_CONN_TO_DST         = 260;\n    HOP_CANT_DIAL_DST          = 261;\n    HOP_CANT_OPEN_DST_STREAM   = 262;\n    HOP_CANT_SPEAK_RELAY       = 270;\n    HOP_CANT_RELAY_TO_SELF     = 280;\n    STOP_SRC_ADDR_TOO_LONG     = 320;\n    STOP_DST_ADDR_TOO_LONG     = 321;\n    STOP_SRC_MULTIADDR_INVALID = 350;\n    STOP_DST_MULTIADDR_INVALID = 351;\n    STOP_RELAY_REFUSED         = 390;\n    MALFORMED_MESSAGE          = 400;\n  }\n\n  enum Type { // RPC identifier, either HOP, STOP or STATUS\n    HOP = 1;\n    STOP = 2;\n    STATUS = 3;\n    CAN_HOP = 4;\n  }\n\n  message Peer {\n    required bytes id = 1;    // peer id\n    repeated bytes addrs = 2; // peer's known addresses\n  }\n\n  optional Type type = 1;     // Type of the message\n\n  optional Peer srcPeer = 2;  // srcPeer and dstPeer are used when Type is HOP or STATUS\n  optional Peer dstPeer = 3;\n\n  optional Status code = 4;   // Status code, used when Type is STATUS\n}\n`)\n","'use strict'\n\nmodule.exports = {\n  relay: '/libp2p/circuit/relay/0.1.0'\n}\n","'use strict'\n\nconst values = require('pull-stream/sources/values')\nconst collect = require('pull-stream/sinks/collect')\nconst empty = require('pull-stream/sources/empty')\nconst pull = require('pull-stream/pull')\nconst lp = require('pull-length-prefixed')\nconst handshake = require('pull-handshake')\n\nconst debug = require('debug')\nconst log = debug('libp2p:circuit:stream-handler')\nlog.err = debug('libp2p:circuit:error:stream-handler')\n\nclass StreamHandler {\n  /**\n   * Create a stream handler for connection\n   *\n   * @param {Connection} conn - connection to read/write\n   * @param {Function|undefined} cb - handshake callback called on error\n   * @param {Number} timeout - handshake timeout\n   * @param {Number} maxLength - max bytes length of message\n   */\n  constructor (conn, cb, timeout, maxLength) {\n    this.conn = conn\n    this.stream = null\n    this.shake = null\n    this.timeout = cb || 1000 * 60\n    this.maxLength = maxLength || 4096\n\n    if (typeof cb === 'function') {\n      this.timeout = timeout || 1000 * 60\n    }\n\n    this.stream = handshake({ timeout: this.timeout }, cb)\n    this.shake = this.stream.handshake\n\n    pull(this.stream, conn, this.stream)\n  }\n\n  isValid () {\n    return this.conn && this.shake && this.stream\n  }\n\n  /**\n   * Read and decode message\n   *\n   * @param {Function} cb\n   * @returns {void|Function}\n   */\n  read (cb) {\n    if (!this.isValid()) {\n      return cb(new Error(`handler is not in a valid state`))\n    }\n\n    lp.decodeFromReader(\n      this.shake,\n      { maxLength: this.maxLength },\n      (err, msg) => {\n        if (err) {\n          log.err(err)\n          // this.shake.abort(err)\n          return cb(err)\n        }\n\n        return cb(null, msg)\n      })\n  }\n\n  /**\n   * Encode and write array of buffers\n   *\n   * @param {Buffer[]} msg\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  write (msg, cb) {\n    cb = cb || (() => {})\n\n    if (!this.isValid()) {\n      return cb(new Error(`handler is not in a valid state`))\n    }\n\n    pull(\n      values([msg]),\n      lp.encode(),\n      collect((err, encoded) => {\n        if (err) {\n          log.err(err)\n          this.shake.abort(err)\n          return cb(err)\n        }\n\n        encoded.forEach((e) => this.shake.write(e))\n        cb()\n      })\n    )\n  }\n\n  /**\n   * Get the raw Connection\n   *\n   * @returns {null|Connection|*}\n   */\n  getRawConn () {\n    return this.conn\n  }\n\n  /**\n   * Return the handshake rest stream and invalidate handler\n   *\n   * @return {*|{source, sink}}\n   */\n  rest () {\n    const rest = this.shake.rest()\n\n    this.conn = null\n    this.stream = null\n    this.shake = null\n    return rest\n  }\n\n  /**\n   * Close the stream\n   *\n   * @returns {undefined}\n   */\n  close () {\n    if (!this.isValid()) {\n      return\n    }\n\n    // close stream\n    pull(\n      empty(),\n      this.rest()\n    )\n  }\n}\n\nmodule.exports = StreamHandler\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst debug = require('debug')\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst EE = require('events').EventEmitter\nconst once = require('once')\nconst utilsFactory = require('./utils')\nconst StreamHandler = require('./stream-handler')\nconst proto = require('../protocol').CircuitRelay\nconst multiaddr = require('multiaddr')\nconst series = require('async/series')\nconst waterfall = require('async/waterfall')\nconst setImmediate = require('async/setImmediate')\n\nconst multicodec = require('./../multicodec')\n\nconst log = debug('libp2p:circuit:relay')\nlog.err = debug('libp2p:circuit:error:relay')\n\nclass Hop extends EE {\n  /**\n   * Construct a Circuit object\n   *\n   * This class will handle incoming circuit connections and\n   * either start a relay or hand the relayed connection to\n   * the swarm\n   *\n   * @param {Swarm} swarm\n   * @param {Object} options\n   */\n  constructor (swarm, options) {\n    super()\n    this.swarm = swarm\n    this.peerInfo = this.swarm._peerInfo\n    this.utils = utilsFactory(swarm)\n    this.config = options || { active: false, enabled: false }\n    this.active = this.config.active\n  }\n\n  /**\n   * Handle the relay message\n   *\n   * @param {CircuitRelay} message\n   * @param {StreamHandler} sh\n   * @returns {*}\n   */\n  handle (message, sh) {\n    if (!this.config.enabled) {\n      this.utils.writeResponse(\n        sh,\n        proto.Status.HOP_CANT_SPEAK_RELAY)\n      return sh.close()\n    }\n\n    // check if message is `CAN_HOP`\n    if (message.type === proto.Type.CAN_HOP) {\n      this.utils.writeResponse(\n        sh,\n        proto.Status.SUCCESS)\n      return sh.close()\n    }\n\n    // This is a relay request - validate and create a circuit\n    let srcPeerId = null\n    let dstPeerId = null\n    try {\n      srcPeerId = PeerId.createFromBytes(message.srcPeer.id).toB58String()\n      dstPeerId = PeerId.createFromBytes(message.dstPeer.id).toB58String()\n    } catch (err) {\n      log.err(err)\n\n      if (!srcPeerId) {\n        this.utils.writeResponse(\n          sh,\n          proto.Status.HOP_SRC_MULTIADDR_INVALID)\n        return sh.close()\n      }\n\n      if (!dstPeerId) {\n        this.utils.writeResponse(\n          sh,\n          proto.Status.HOP_DST_MULTIADDR_INVALID)\n        return sh.close()\n      }\n    }\n\n    if (srcPeerId === dstPeerId) {\n      this.utils.writeResponse(\n        sh,\n        proto.Status.HOP_CANT_RELAY_TO_SELF)\n      return sh.close()\n    }\n\n    if (!message.dstPeer.addrs.length) {\n      // TODO: use encapsulate here\n      const addr = multiaddr(`/p2p-circuit/ipfs/${dstPeerId}`).buffer\n      message.dstPeer.addrs.push(addr)\n    }\n\n    log('trying to establish a circuit: %s <-> %s', srcPeerId, dstPeerId)\n    const noPeer = () => {\n      // log.err(err)\n      this.utils.writeResponse(\n        sh,\n        proto.Status.HOP_NO_CONN_TO_DST)\n      return sh.close()\n    }\n\n    const isConnected = (cb) => {\n      let dstPeer\n      try {\n        dstPeer = this.swarm._peerBook.get(dstPeerId)\n        if (!dstPeer.isConnected() && !this.active) {\n          const err = new Error(`No Connection to peer ${dstPeerId}`)\n          noPeer(err)\n          return cb(err)\n        }\n      } catch (err) {\n        if (!this.active) {\n          noPeer(err)\n          return cb(err)\n        }\n      }\n      cb()\n    }\n\n    series([\n      (cb) => this.utils.validateAddrs(message, sh, proto.Type.HOP, cb),\n      (cb) => isConnected(cb),\n      (cb) => this._circuit(sh, message, cb)\n    ], (err) => {\n      if (err) {\n        log.err(err)\n        sh.close()\n        return setImmediate(() => this.emit('circuit:error', err))\n      }\n      setImmediate(() => this.emit('circuit:success'))\n    })\n  }\n\n  /**\n   * Connect to STOP\n   *\n   * @param {PeerInfo} peer\n   * @param {StreamHandler} srcSh\n   * @param {function} callback\n   * @returns {void}\n   */\n  _connectToStop (peer, srcSh, callback) {\n    this._dialPeer(peer, (err, dstConn) => {\n      if (err) {\n        this.utils.writeResponse(\n          srcSh,\n          proto.Status.HOP_CANT_DIAL_DST)\n        log.err(err)\n        return callback(err)\n      }\n\n      return this.utils.writeResponse(\n        srcSh,\n        proto.Status.SUCCESS,\n        (err) => {\n          if (err) {\n            log.err(err)\n            return callback(err)\n          }\n          return callback(null, dstConn)\n        })\n    })\n  }\n\n  /**\n   * Negotiate STOP\n   *\n   * @param {StreamHandler} dstSh\n   * @param {StreamHandler} srcSh\n   * @param {CircuitRelay} message\n   * @param {function} callback\n   * @returns {void}\n   */\n  _negotiateStop (dstSh, srcSh, message, callback) {\n    const stopMsg = Object.assign({}, message, {\n      type: proto.Type.STOP // change the message type\n    })\n    dstSh.write(proto.encode(stopMsg),\n      (err) => {\n        if (err) {\n          this.utils.writeResponse(\n            srcSh,\n            proto.Status.HOP_CANT_OPEN_DST_STREAM)\n          log.err(err)\n          return callback(err)\n        }\n\n        // read response from STOP\n        dstSh.read((err, msg) => {\n          if (err) {\n            log.err(err)\n            return callback(err)\n          }\n\n          const message = proto.decode(msg)\n          if (message.code !== proto.Status.SUCCESS) {\n            return callback(new Error(`Unable to create circuit!`))\n          }\n\n          return callback(null, msg)\n        })\n      })\n  }\n\n  /**\n   * Attempt to make a circuit from A <-> R <-> B where R is this relay\n   *\n   * @param {StreamHandler} srcSh - the source stream handler\n   * @param {CircuitRelay} message - the message with the src and dst entries\n   * @param {Function} callback - callback to signal success or failure\n   * @returns {void}\n   * @private\n   */\n  _circuit (srcSh, message, callback) {\n    let dstSh = null\n    waterfall([\n      (cb) => this._connectToStop(message.dstPeer, srcSh, cb),\n      (_dstConn, cb) => {\n        dstSh = new StreamHandler(_dstConn)\n        this._negotiateStop(dstSh, srcSh, message, cb)\n      }\n    ], (err) => {\n      if (err) {\n        // close/end the source stream if there was an error\n        if (srcSh) {\n          srcSh.close()\n        }\n\n        if (dstSh) {\n          dstSh.close()\n        }\n        return callback(err)\n      }\n\n      const src = srcSh.rest()\n      const dst = dstSh.rest()\n\n      const srcIdStr = PeerId.createFromBytes(message.srcPeer.id).toB58String()\n      const dstIdStr = PeerId.createFromBytes(message.dstPeer.id).toB58String()\n\n      // circuit the src and dst streams\n      pull(\n        src,\n        dst,\n        src\n      )\n      log('circuit %s <-> %s established', srcIdStr, dstIdStr)\n      callback()\n    })\n  }\n\n  /**\n   * Dial the dest peer and create a circuit\n   *\n   * @param {Multiaddr} dstPeer\n   * @param {Function} callback\n   * @returns {void}\n   * @private\n   */\n  _dialPeer (dstPeer, callback) {\n    const peerInfo = new PeerInfo(PeerId.createFromBytes(dstPeer.id))\n    dstPeer.addrs.forEach((a) => peerInfo.multiaddrs.add(a))\n    this.swarm.dial(peerInfo, multicodec.relay, once((err, conn) => {\n      if (err) {\n        log.err(err)\n        return callback(err)\n      }\n\n      callback(null, conn)\n    }))\n  }\n}\n\nmodule.exports = Hop\n","'use strict'\n\nconst setImmediate = require('async/setImmediate')\n\nconst EE = require('events').EventEmitter\nconst Connection = require('interface-connection').Connection\nconst utilsFactory = require('./utils')\nconst PeerInfo = require('peer-info')\nconst proto = require('../protocol').CircuitRelay\nconst series = require('async/series')\n\nconst debug = require('debug')\n\nconst log = debug('libp2p:circuit:stop')\nlog.err = debug('libp2p:circuit:error:stop')\n\nclass Stop extends EE {\n  constructor (swarm) {\n    super()\n    this.swarm = swarm\n    this.utils = utilsFactory(swarm)\n  }\n\n  /**\n   * Handle the incoming STOP message\n   *\n   * @param {{}} msg  - the parsed protobuf message\n   * @param {StreamHandler} sh  - the stream handler wrapped connection\n   * @param {Function} callback  - callback\n   * @returns {undefined}\n   */\n  handle (msg, sh, callback) {\n    callback = callback || (() => {})\n\n    series([\n      (cb) => this.utils.validateAddrs(msg, sh, proto.Type.STOP, cb),\n      (cb) => this.utils.writeResponse(sh, proto.Status.Success, cb)\n    ], (err) => {\n      if (err) {\n        // we don't return the error here,\n        // since multistream select don't expect one\n        callback()\n        return log(err)\n      }\n\n      const peerInfo = new PeerInfo(this.utils.peerIdFromId(msg.srcPeer.id))\n      msg.srcPeer.addrs.forEach((addr) => peerInfo.multiaddrs.add(addr))\n      const newConn = new Connection(sh.rest())\n      newConn.setPeerInfo(peerInfo)\n      setImmediate(() => this.emit('connection', newConn))\n      callback(newConn)\n    })\n  }\n}\n\nmodule.exports = Stop\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\n\nmodule.exports = function wrapHash (hashFn) {\n  return function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n}\n\nclass InfiniteHash {\n  constructor (value, hashFn) {\n    if ((typeof value) !== 'string' && !Buffer.isBuffer(value)) {\n      throw new Error('can only hash strings or buffers')\n    }\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n    this._buffers = []\n  }\n\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? this._value + this._depth : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param { __import__(\"./../dist/rabin\").default } asModule\n     * @memberof Rabin\n     */\n    constructor(bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, asModule) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize)\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = this.asModule.newArray(lengths)\n        const pointer = this.asModule.newArray(buf)\n\n        // run finderprint\n        this.rabin.fingerprint(pointer, lengthsPtr)\n\n        const processed = this.asModule.getArray(Int32Array, lengthsPtr)\n\n        //free memory\n        this.asModule.freeArray(lengthsPtr)\n        this.asModule.freeArray(pointer)\n\n        // TODO: remove this. @see https://github.com/ipfs/js-ipfs/issues/2118#issuecomment-497722625\n        // clean extra 0s in the array\n        const cleanArr = []\n        for (let i = 0; i < processed.length; i++) {\n            if(processed[i] === 0) break\n            cleanArr[i] = processed[i];\n        }\n\n        return cleanArr\n    }\n}\n\nmodule.exports = Rabin","\nconst { instantiateStreaming } = require(\"assemblyscript/lib/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,90,16,96,0,0,96,2,127,127,1,127,96,4,127,127,127,127,0,96,1,127,1,127,96,3,127,127,127,0,96,1,126,1,127,96,2,126,126,1,126,96,5,127,127,127,127,127,1,127,96,3,127,127,126,0,96,2,127,127,1,126,96,3,127,127,127,1,127,96,1,127,0,96,2,127,127,0,96,1,127,1,126,96,2,127,126,0,96,0,1,127,2,13,1,3,101,110,118,5,97,98,111,114,116,0,2,3,57,56,3,3,12,3,3,15,5,6,1,8,4,1,9,11,7,4,10,10,11,0,0,0,3,12,3,12,3,12,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,4,4,1,112,0,1,5,3,1,0,1,6,26,5,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,7,253,6,44,6,109,101,109,111,114,121,2,0,5,116,97,98,108,101,1,0,6,100,101,103,114,101,101,0,7,3,109,111,100,0,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,23,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,24,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,25,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,26,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,27,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,28,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,29,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,30,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,31,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,32,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,33,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,34,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,35,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,36,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,37,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,38,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,39,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,40,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,41,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,42,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,43,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,44,27,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,95,100,101,103,114,101,101,0,45,27,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,95,100,101,103,114,101,101,0,46,26,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,95,115,104,105,102,116,0,47,26,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,95,115,104,105,102,116,0,48,22,82,97,98,105,110,35,103,101,116,58,97,118,101,114,97,103,101,95,98,105,116,115,0,49,22,82,97,98,105,110,35,115,101,116,58,97,118,101,114,97,103,101,95,98,105,116,115,0,50,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,51,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,52,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,53,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,54,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,55,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,56,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,15,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,16,14,109,101,109,111,114,121,46,99,111,109,112,97,114,101,0,18,15,109,101,109,111,114,121,46,97,108,108,111,99,97,116,101,0,4,11,109,101,109,111,114,121,46,102,114,101,101,0,19,12,109,101,109,111,114,121,46,114,101,115,101,116,0,20,8,1,21,9,7,1,0,65,0,11,1,22,10,188,30,56,104,1,3,127,32,0,65,128,128,128,128,4,75,4,64,0,11,35,1,34,1,32,0,65,1,32,0,65,1,75,27,106,65,7,106,65,120,113,34,0,63,0,34,2,65,16,116,75,4,64,32,2,32,0,32,1,107,65,255,255,3,106,65,128,128,124,113,65,16,118,34,3,32,2,32,3,74,27,64,0,65,0,72,4,64,32,3,64,0,65,0,72,4,64,0,11,11,11,32,0,36,1,32,1,11,51,1,1,127,32,0,65,248,255,255,255,3,75,4,64,65,0,65,200,0,65,26,65,2,16,0,0,11,65,1,65,32,32,0,65,7,106,103,107,116,16,1,34,1,32,0,54,2,0,32,1,11,145,3,1,1,127,32,1,69,4,64,15,11,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,4,64,15,11,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,4,64,15,11,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,4,64,15,11,65,0,32,0,107,65,3,113,34,2,32,0,106,34,0,65,0,54,2,0,32,1,32,2,107,65,124,113,34,1,32,0,106,65,4,107,65,0,54,2,0,32,1,65,8,77,4,64,15,11,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,4,64,15,11,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,65,4,113,65,24,106,34,2,32,0,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,6,0,32,0,16,1,11,76,1,1,127,65,128,16,16,2,34,1,65,8,106,65,128,16,16,3,32,0,69,4,64,65,12,16,1,33,0,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,32,1,54,2,0,32,0,65,0,54,2,4,32,0,65,128,16,54,2,8,32,0,11,8,0,65,12,16,1,16,5,11,70,2,1,127,1,126,66,128,128,128,128,128,128,128,128,128,127,33,2,3,64,2,64,32,1,65,192,0,78,13,0,32,0,32,2,131,66,0,86,4,64,65,63,32,1,107,15,5,32,2,66,1,136,33,2,32,1,65,1,106,33,1,12,2,11,0,11,11,65,127,11,175,2,2,1,127,2,126,3,64,2,127,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,0,32,3,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,2,127,32,1,33,4,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,3,32,4,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,78,4,64,32,1,2,127,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,0,32,3,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,1,32,3,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,107,172,134,32,0,133,33,0,12,1,11,11,32,0,11,96,1,1,127,32,1,65,248,255,255,255,3,75,4,64,65,0,65,8,65,23,65,34,16,0,0,11,32,1,16,2,34,2,65,8,106,32,1,16,3,32,0,69,4,64,65,12,16,1,33,0,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,32,2,54,2,0,32,0,65,0,54,2,4,32,0,32,1,54,2,8,32,0,11,49,0,32,1,32,0,40,2,8,65,3,118,79,4,64,65,0,65,8,65,50,65,63,16,0,0,11,32,0,40,2,4,32,0,40,2,0,32,1,65,3,116,106,106,32,2,55,3,8,11,43,0,32,1,32,0,40,2,8,79,4,64,65,0,65,8,65,50,65,63,16,0,0,11,32,0,40,2,4,32,1,32,0,40,2,0,106,106,32,2,58,0,8,11,41,0,32,1,32,0,40,2,8,79,4,64,65,0,65,8,65,39,65,63,16,0,0,11,32,0,40,2,4,32,1,32,0,40,2,0,106,106,45,0,8,11,47,0,32,1,32,0,40,2,8,65,3,118,79,4,64,65,0,65,8,65,39,65,63,16,0,0,11,32,0,40,2,4,32,0,40,2,0,32,1,65,3,116,106,106,41,3,8,11,166,10,2,3,127,5,126,35,2,69,4,64,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,4,32,0,41,3,72,33,6,3,64,2,127,32,4,33,5,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,32,6,33,7,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,7,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,78,4,64,32,6,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,6,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,107,172,134,32,5,133,33,4,12,1,11,11,65,0,33,1,3,64,32,1,32,0,40,2,4,65,1,107,72,4,64,32,5,66,8,134,33,4,32,0,41,3,72,33,6,3,64,2,127,32,4,33,5,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,2,127,32,6,33,7,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,7,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,78,4,64,32,6,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,6,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,107,172,134,32,5,133,33,4,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,35,4,32,2,32,5,16,10,32,2,65,1,106,33,2,12,1,11,11,2,127,32,0,41,3,72,33,4,66,128,128,128,128,128,128,128,128,128,127,33,5,65,0,33,2,3,64,32,2,65,192,0,72,4,64,65,63,32,2,107,32,4,32,5,131,66,0,86,13,2,26,32,5,66,1,136,33,5,32,2,65,1,106,33,2,12,1,11,11,65,127,11,172,33,8,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,3,33,3,32,2,172,32,8,134,33,5,32,0,41,3,72,33,6,3,64,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,32,6,33,7,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,7,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,78,4,64,32,6,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,6,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,107,172,134,32,5,133,33,5,12,1,11,11,32,3,32,2,32,2,172,32,8,134,32,5,132,16,10,32,2,65,1,106,33,2,12,1,11,11,65,1,36,2,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,65,0,16,11,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,12,33,1,32,0,40,2,0,32,0,40,2,8,65,1,16,11,32,0,32,0,41,3,40,35,4,32,1,65,255,1,113,16,13,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,41,3,40,32,0,41,3,88,136,167,33,1,32,0,32,0,41,3,40,66,8,134,55,3,40,32,0,32,0,41,3,40,66,1,132,55,3,40,32,0,32,0,41,3,40,35,3,32,1,65,255,1,113,16,13,133,55,3,40,11,234,1,0,32,0,69,4,64,65,128,1,16,1,33,0,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,66,0,55,3,104,32,0,66,0,55,3,112,32,0,66,0,55,3,120,32,0,32,1,173,55,3,96,32,0,32,2,173,55,3,104,32,0,32,3,173,55,3,112,32,0,65,12,16,1,32,4,16,9,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,0,41,3,96,134,66,1,125,55,3,120,32,0,66,243,130,183,218,216,230,232,30,55,3,72,32,0,66,53,55,3,80,32,0,32,0,41,3,80,66,8,125,55,3,88,32,0,16,14,32,0,11,206,4,1,5,127,32,1,40,2,8,33,4,32,1,40,2,0,65,8,106,33,5,3,64,2,127,65,0,33,3,3,64,32,3,32,4,72,4,64,32,3,32,5,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,12,33,6,32,0,40,2,0,32,0,40,2,8,32,1,16,11,32,0,32,0,41,3,40,35,4,32,6,65,255,1,113,16,13,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,41,3,40,32,0,41,3,88,136,167,33,6,32,0,32,0,41,3,40,66,8,134,55,3,40,32,0,32,0,41,3,40,32,1,173,132,55,3,40,32,0,32,0,41,3,40,35,3,32,6,65,255,1,113,16,13,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,2,127,32,0,41,3,16,32,0,41,3,104,90,34,1,4,64,32,0,41,3,40,32,0,41,3,120,131,66,0,81,33,1,11,32,1,69,11,4,127,32,0,41,3,16,32,0,41,3,112,90,5,32,1,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,65,0,16,11,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,12,33,1,32,0,40,2,0,32,0,40,2,8,65,1,16,11,32,0,32,0,41,3,40,35,4,32,1,65,255,1,113,16,13,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,41,3,40,32,0,41,3,88,136,167,33,1,32,0,32,0,41,3,40,66,8,134,55,3,40,32,0,32,0,41,3,40,66,1,132,55,3,40,32,0,32,0,41,3,40,35,3,32,1,65,255,1,113,16,13,133,55,3,40,32,3,65,1,106,12,3,5,32,3,65,1,106,33,3,12,2,11,0,11,11,65,127,11,34,1,65,0,78,4,64,32,4,32,1,107,33,4,32,1,32,5,106,33,5,32,7,34,1,65,1,106,33,7,32,2,40,2,4,32,2,40,2,0,32,1,65,2,116,106,106,32,0,41,3,56,62,2,8,32,2,40,2,4,32,2,40,2,0,32,1,65,2,116,106,106,40,2,8,26,12,1,11,11,11,88,1,1,127,32,0,32,1,70,4,64,65,0,15,11,3,64,32,2,65,0,71,34,3,4,64,32,0,45,0,0,32,1,45,0,0,70,33,3,11,32,3,4,64,32,2,65,1,107,33,2,32,0,65,1,106,33,0,32,1,65,1,106,33,1,12,1,11,11,32,2,4,127,32,0,45,0,0,32,1,45,0,0,107,5,65,0,11,11,10,0,32,0,32,1,32,2,16,17,11,3,0,1,11,6,0,35,0,36,1,11,19,0,65,136,1,36,0,35,0,36,1,16,6,36,3,16,6,36,4,11,3,0,1,11,7,0,32,0,40,2,0,11,9,0,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,7,0,32,0,41,3,104,11,9,0,32,0,32,1,55,3,104,11,7,0,32,0,41,3,112,11,9,0,32,0,32,1,55,3,112,11,7,0,32,0,41,3,120,11,9,0,32,0,32,1,55,3,120,11,11,128,1,2,0,65,8,11,57,27,0,0,0,126,0,108,0,105,0,98,0,47,0,105,0,110,0,116,0,101,0,114,0,110,0,97,0,108,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,200,0,11,59,28,0,0,0,126,0,108,0,105,0,98,0,47,0,105,0,110,0,116,0,101,0,114,0,110,0,97,0,108,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,32,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,14,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiateStreaming(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","module.exports=[\n    \"的\",\n    \"一\",\n    \"是\",\n    \"在\",\n    \"不\",\n    \"了\",\n    \"有\",\n    \"和\",\n    \"人\",\n    \"這\",\n    \"中\",\n    \"大\",\n    \"為\",\n    \"上\",\n    \"個\",\n    \"國\",\n    \"我\",\n    \"以\",\n    \"要\",\n    \"他\",\n    \"時\",\n    \"來\",\n    \"用\",\n    \"們\",\n    \"生\",\n    \"到\",\n    \"作\",\n    \"地\",\n    \"於\",\n    \"出\",\n    \"就\",\n    \"分\",\n    \"對\",\n    \"成\",\n    \"會\",\n    \"可\",\n    \"主\",\n    \"發\",\n    \"年\",\n    \"動\",\n    \"同\",\n    \"工\",\n    \"也\",\n    \"能\",\n    \"下\",\n    \"過\",\n    \"子\",\n    \"說\",\n    \"產\",\n    \"種\",\n    \"面\",\n    \"而\",\n    \"方\",\n    \"後\",\n    \"多\",\n    \"定\",\n    \"行\",\n    \"學\",\n    \"法\",\n    \"所\",\n    \"民\",\n    \"得\",\n    \"經\",\n    \"十\",\n    \"三\",\n    \"之\",\n    \"進\",\n    \"著\",\n    \"等\",\n    \"部\",\n    \"度\",\n    \"家\",\n    \"電\",\n    \"力\",\n    \"裡\",\n    \"如\",\n    \"水\",\n    \"化\",\n    \"高\",\n    \"自\",\n    \"二\",\n    \"理\",\n    \"起\",\n    \"小\",\n    \"物\",\n    \"現\",\n    \"實\",\n    \"加\",\n    \"量\",\n    \"都\",\n    \"兩\",\n    \"體\",\n    \"制\",\n    \"機\",\n    \"當\",\n    \"使\",\n    \"點\",\n    \"從\",\n    \"業\",\n    \"本\",\n    \"去\",\n    \"把\",\n    \"性\",\n    \"好\",\n    \"應\",\n    \"開\",\n    \"它\",\n    \"合\",\n    \"還\",\n    \"因\",\n    \"由\",\n    \"其\",\n    \"些\",\n    \"然\",\n    \"前\",\n    \"外\",\n    \"天\",\n    \"政\",\n    \"四\",\n    \"日\",\n    \"那\",\n    \"社\",\n    \"義\",\n    \"事\",\n    \"平\",\n    \"形\",\n    \"相\",\n    \"全\",\n    \"表\",\n    \"間\",\n    \"樣\",\n    \"與\",\n    \"關\",\n    \"各\",\n    \"重\",\n    \"新\",\n    \"線\",\n    \"內\",\n    \"數\",\n    \"正\",\n    \"心\",\n    \"反\",\n    \"你\",\n    \"明\",\n    \"看\",\n    \"原\",\n    \"又\",\n    \"麼\",\n    \"利\",\n    \"比\",\n    \"或\",\n    \"但\",\n    \"質\",\n    \"氣\",\n    \"第\",\n    \"向\",\n    \"道\",\n    \"命\",\n    \"此\",\n    \"變\",\n    \"條\",\n    \"只\",\n    \"沒\",\n    \"結\",\n    \"解\",\n    \"問\",\n    \"意\",\n    \"建\",\n    \"月\",\n    \"公\",\n    \"無\",\n    \"系\",\n    \"軍\",\n    \"很\",\n    \"情\",\n    \"者\",\n    \"最\",\n    \"立\",\n    \"代\",\n    \"想\",\n    \"已\",\n    \"通\",\n    \"並\",\n    \"提\",\n    \"直\",\n    \"題\",\n    \"黨\",\n    \"程\",\n    \"展\",\n    \"五\",\n    \"果\",\n    \"料\",\n    \"象\",\n    \"員\",\n    \"革\",\n    \"位\",\n    \"入\",\n    \"常\",\n    \"文\",\n    \"總\",\n    \"次\",\n    \"品\",\n    \"式\",\n    \"活\",\n    \"設\",\n    \"及\",\n    \"管\",\n    \"特\",\n    \"件\",\n    \"長\",\n    \"求\",\n    \"老\",\n    \"頭\",\n    \"基\",\n    \"資\",\n    \"邊\",\n    \"流\",\n    \"路\",\n    \"級\",\n    \"少\",\n    \"圖\",\n    \"山\",\n    \"統\",\n    \"接\",\n    \"知\",\n    \"較\",\n    \"將\",\n    \"組\",\n    \"見\",\n    \"計\",\n    \"別\",\n    \"她\",\n    \"手\",\n    \"角\",\n    \"期\",\n    \"根\",\n    \"論\",\n    \"運\",\n    \"農\",\n    \"指\",\n    \"幾\",\n    \"九\",\n    \"區\",\n    \"強\",\n    \"放\",\n    \"決\",\n    \"西\",\n    \"被\",\n    \"幹\",\n    \"做\",\n    \"必\",\n    \"戰\",\n    \"先\",\n    \"回\",\n    \"則\",\n    \"任\",\n    \"取\",\n    \"據\",\n    \"處\",\n    \"隊\",\n    \"南\",\n    \"給\",\n    \"色\",\n    \"光\",\n    \"門\",\n    \"即\",\n    \"保\",\n    \"治\",\n    \"北\",\n    \"造\",\n    \"百\",\n    \"規\",\n    \"熱\",\n    \"領\",\n    \"七\",\n    \"海\",\n    \"口\",\n    \"東\",\n    \"導\",\n    \"器\",\n    \"壓\",\n    \"志\",\n    \"世\",\n    \"金\",\n    \"增\",\n    \"爭\",\n    \"濟\",\n    \"階\",\n    \"油\",\n    \"思\",\n    \"術\",\n    \"極\",\n    \"交\",\n    \"受\",\n    \"聯\",\n    \"什\",\n    \"認\",\n    \"六\",\n    \"共\",\n    \"權\",\n    \"收\",\n    \"證\",\n    \"改\",\n    \"清\",\n    \"美\",\n    \"再\",\n    \"採\",\n    \"轉\",\n    \"更\",\n    \"單\",\n    \"風\",\n    \"切\",\n    \"打\",\n    \"白\",\n    \"教\",\n    \"速\",\n    \"花\",\n    \"帶\",\n    \"安\",\n    \"場\",\n    \"身\",\n    \"車\",\n    \"例\",\n    \"真\",\n    \"務\",\n    \"具\",\n    \"萬\",\n    \"每\",\n    \"目\",\n    \"至\",\n    \"達\",\n    \"走\",\n    \"積\",\n    \"示\",\n    \"議\",\n    \"聲\",\n    \"報\",\n    \"鬥\",\n    \"完\",\n    \"類\",\n    \"八\",\n    \"離\",\n    \"華\",\n    \"名\",\n    \"確\",\n    \"才\",\n    \"科\",\n    \"張\",\n    \"信\",\n    \"馬\",\n    \"節\",\n    \"話\",\n    \"米\",\n    \"整\",\n    \"空\",\n    \"元\",\n    \"況\",\n    \"今\",\n    \"集\",\n    \"溫\",\n    \"傳\",\n    \"土\",\n    \"許\",\n    \"步\",\n    \"群\",\n    \"廣\",\n    \"石\",\n    \"記\",\n    \"需\",\n    \"段\",\n    \"研\",\n    \"界\",\n    \"拉\",\n    \"林\",\n    \"律\",\n    \"叫\",\n    \"且\",\n    \"究\",\n    \"觀\",\n    \"越\",\n    \"織\",\n    \"裝\",\n    \"影\",\n    \"算\",\n    \"低\",\n    \"持\",\n    \"音\",\n    \"眾\",\n    \"書\",\n    \"布\",\n    \"复\",\n    \"容\",\n    \"兒\",\n    \"須\",\n    \"際\",\n    \"商\",\n    \"非\",\n    \"驗\",\n    \"連\",\n    \"斷\",\n    \"深\",\n    \"難\",\n    \"近\",\n    \"礦\",\n    \"千\",\n    \"週\",\n    \"委\",\n    \"素\",\n    \"技\",\n    \"備\",\n    \"半\",\n    \"辦\",\n    \"青\",\n    \"省\",\n    \"列\",\n    \"習\",\n    \"響\",\n    \"約\",\n    \"支\",\n    \"般\",\n    \"史\",\n    \"感\",\n    \"勞\",\n    \"便\",\n    \"團\",\n    \"往\",\n    \"酸\",\n    \"歷\",\n    \"市\",\n    \"克\",\n    \"何\",\n    \"除\",\n    \"消\",\n    \"構\",\n    \"府\",\n    \"稱\",\n    \"太\",\n    \"準\",\n    \"精\",\n    \"值\",\n    \"號\",\n    \"率\",\n    \"族\",\n    \"維\",\n    \"劃\",\n    \"選\",\n    \"標\",\n    \"寫\",\n    \"存\",\n    \"候\",\n    \"毛\",\n    \"親\",\n    \"快\",\n    \"效\",\n    \"斯\",\n    \"院\",\n    \"查\",\n    \"江\",\n    \"型\",\n    \"眼\",\n    \"王\",\n    \"按\",\n    \"格\",\n    \"養\",\n    \"易\",\n    \"置\",\n    \"派\",\n    \"層\",\n    \"片\",\n    \"始\",\n    \"卻\",\n    \"專\",\n    \"狀\",\n    \"育\",\n    \"廠\",\n    \"京\",\n    \"識\",\n    \"適\",\n    \"屬\",\n    \"圓\",\n    \"包\",\n    \"火\",\n    \"住\",\n    \"調\",\n    \"滿\",\n    \"縣\",\n    \"局\",\n    \"照\",\n    \"參\",\n    \"紅\",\n    \"細\",\n    \"引\",\n    \"聽\",\n    \"該\",\n    \"鐵\",\n    \"價\",\n    \"嚴\",\n    \"首\",\n    \"底\",\n    \"液\",\n    \"官\",\n    \"德\",\n    \"隨\",\n    \"病\",\n    \"蘇\",\n    \"失\",\n    \"爾\",\n    \"死\",\n    \"講\",\n    \"配\",\n    \"女\",\n    \"黃\",\n    \"推\",\n    \"顯\",\n    \"談\",\n    \"罪\",\n    \"神\",\n    \"藝\",\n    \"呢\",\n    \"席\",\n    \"含\",\n    \"企\",\n    \"望\",\n    \"密\",\n    \"批\",\n    \"營\",\n    \"項\",\n    \"防\",\n    \"舉\",\n    \"球\",\n    \"英\",\n    \"氧\",\n    \"勢\",\n    \"告\",\n    \"李\",\n    \"台\",\n    \"落\",\n    \"木\",\n    \"幫\",\n    \"輪\",\n    \"破\",\n    \"亞\",\n    \"師\",\n    \"圍\",\n    \"注\",\n    \"遠\",\n    \"字\",\n    \"材\",\n    \"排\",\n    \"供\",\n    \"河\",\n    \"態\",\n    \"封\",\n    \"另\",\n    \"施\",\n    \"減\",\n    \"樹\",\n    \"溶\",\n    \"怎\",\n    \"止\",\n    \"案\",\n    \"言\",\n    \"士\",\n    \"均\",\n    \"武\",\n    \"固\",\n    \"葉\",\n    \"魚\",\n    \"波\",\n    \"視\",\n    \"僅\",\n    \"費\",\n    \"緊\",\n    \"愛\",\n    \"左\",\n    \"章\",\n    \"早\",\n    \"朝\",\n    \"害\",\n    \"續\",\n    \"輕\",\n    \"服\",\n    \"試\",\n    \"食\",\n    \"充\",\n    \"兵\",\n    \"源\",\n    \"判\",\n    \"護\",\n    \"司\",\n    \"足\",\n    \"某\",\n    \"練\",\n    \"差\",\n    \"致\",\n    \"板\",\n    \"田\",\n    \"降\",\n    \"黑\",\n    \"犯\",\n    \"負\",\n    \"擊\",\n    \"范\",\n    \"繼\",\n    \"興\",\n    \"似\",\n    \"餘\",\n    \"堅\",\n    \"曲\",\n    \"輸\",\n    \"修\",\n    \"故\",\n    \"城\",\n    \"夫\",\n    \"夠\",\n    \"送\",\n    \"筆\",\n    \"船\",\n    \"佔\",\n    \"右\",\n    \"財\",\n    \"吃\",\n    \"富\",\n    \"春\",\n    \"職\",\n    \"覺\",\n    \"漢\",\n    \"畫\",\n    \"功\",\n    \"巴\",\n    \"跟\",\n    \"雖\",\n    \"雜\",\n    \"飛\",\n    \"檢\",\n    \"吸\",\n    \"助\",\n    \"昇\",\n    \"陽\",\n    \"互\",\n    \"初\",\n    \"創\",\n    \"抗\",\n    \"考\",\n    \"投\",\n    \"壞\",\n    \"策\",\n    \"古\",\n    \"徑\",\n    \"換\",\n    \"未\",\n    \"跑\",\n    \"留\",\n    \"鋼\",\n    \"曾\",\n    \"端\",\n    \"責\",\n    \"站\",\n    \"簡\",\n    \"述\",\n    \"錢\",\n    \"副\",\n    \"盡\",\n    \"帝\",\n    \"射\",\n    \"草\",\n    \"衝\",\n    \"承\",\n    \"獨\",\n    \"令\",\n    \"限\",\n    \"阿\",\n    \"宣\",\n    \"環\",\n    \"雙\",\n    \"請\",\n    \"超\",\n    \"微\",\n    \"讓\",\n    \"控\",\n    \"州\",\n    \"良\",\n    \"軸\",\n    \"找\",\n    \"否\",\n    \"紀\",\n    \"益\",\n    \"依\",\n    \"優\",\n    \"頂\",\n    \"礎\",\n    \"載\",\n    \"倒\",\n    \"房\",\n    \"突\",\n    \"坐\",\n    \"粉\",\n    \"敵\",\n    \"略\",\n    \"客\",\n    \"袁\",\n    \"冷\",\n    \"勝\",\n    \"絕\",\n    \"析\",\n    \"塊\",\n    \"劑\",\n    \"測\",\n    \"絲\",\n    \"協\",\n    \"訴\",\n    \"念\",\n    \"陳\",\n    \"仍\",\n    \"羅\",\n    \"鹽\",\n    \"友\",\n    \"洋\",\n    \"錯\",\n    \"苦\",\n    \"夜\",\n    \"刑\",\n    \"移\",\n    \"頻\",\n    \"逐\",\n    \"靠\",\n    \"混\",\n    \"母\",\n    \"短\",\n    \"皮\",\n    \"終\",\n    \"聚\",\n    \"汽\",\n    \"村\",\n    \"雲\",\n    \"哪\",\n    \"既\",\n    \"距\",\n    \"衛\",\n    \"停\",\n    \"烈\",\n    \"央\",\n    \"察\",\n    \"燒\",\n    \"迅\",\n    \"境\",\n    \"若\",\n    \"印\",\n    \"洲\",\n    \"刻\",\n    \"括\",\n    \"激\",\n    \"孔\",\n    \"搞\",\n    \"甚\",\n    \"室\",\n    \"待\",\n    \"核\",\n    \"校\",\n    \"散\",\n    \"侵\",\n    \"吧\",\n    \"甲\",\n    \"遊\",\n    \"久\",\n    \"菜\",\n    \"味\",\n    \"舊\",\n    \"模\",\n    \"湖\",\n    \"貨\",\n    \"損\",\n    \"預\",\n    \"阻\",\n    \"毫\",\n    \"普\",\n    \"穩\",\n    \"乙\",\n    \"媽\",\n    \"植\",\n    \"息\",\n    \"擴\",\n    \"銀\",\n    \"語\",\n    \"揮\",\n    \"酒\",\n    \"守\",\n    \"拿\",\n    \"序\",\n    \"紙\",\n    \"醫\",\n    \"缺\",\n    \"雨\",\n    \"嗎\",\n    \"針\",\n    \"劉\",\n    \"啊\",\n    \"急\",\n    \"唱\",\n    \"誤\",\n    \"訓\",\n    \"願\",\n    \"審\",\n    \"附\",\n    \"獲\",\n    \"茶\",\n    \"鮮\",\n    \"糧\",\n    \"斤\",\n    \"孩\",\n    \"脫\",\n    \"硫\",\n    \"肥\",\n    \"善\",\n    \"龍\",\n    \"演\",\n    \"父\",\n    \"漸\",\n    \"血\",\n    \"歡\",\n    \"械\",\n    \"掌\",\n    \"歌\",\n    \"沙\",\n    \"剛\",\n    \"攻\",\n    \"謂\",\n    \"盾\",\n    \"討\",\n    \"晚\",\n    \"粒\",\n    \"亂\",\n    \"燃\",\n    \"矛\",\n    \"乎\",\n    \"殺\",\n    \"藥\",\n    \"寧\",\n    \"魯\",\n    \"貴\",\n    \"鐘\",\n    \"煤\",\n    \"讀\",\n    \"班\",\n    \"伯\",\n    \"香\",\n    \"介\",\n    \"迫\",\n    \"句\",\n    \"豐\",\n    \"培\",\n    \"握\",\n    \"蘭\",\n    \"擔\",\n    \"弦\",\n    \"蛋\",\n    \"沉\",\n    \"假\",\n    \"穿\",\n    \"執\",\n    \"答\",\n    \"樂\",\n    \"誰\",\n    \"順\",\n    \"煙\",\n    \"縮\",\n    \"徵\",\n    \"臉\",\n    \"喜\",\n    \"松\",\n    \"腳\",\n    \"困\",\n    \"異\",\n    \"免\",\n    \"背\",\n    \"星\",\n    \"福\",\n    \"買\",\n    \"染\",\n    \"井\",\n    \"概\",\n    \"慢\",\n    \"怕\",\n    \"磁\",\n    \"倍\",\n    \"祖\",\n    \"皇\",\n    \"促\",\n    \"靜\",\n    \"補\",\n    \"評\",\n    \"翻\",\n    \"肉\",\n    \"踐\",\n    \"尼\",\n    \"衣\",\n    \"寬\",\n    \"揚\",\n    \"棉\",\n    \"希\",\n    \"傷\",\n    \"操\",\n    \"垂\",\n    \"秋\",\n    \"宜\",\n    \"氫\",\n    \"套\",\n    \"督\",\n    \"振\",\n    \"架\",\n    \"亮\",\n    \"末\",\n    \"憲\",\n    \"慶\",\n    \"編\",\n    \"牛\",\n    \"觸\",\n    \"映\",\n    \"雷\",\n    \"銷\",\n    \"詩\",\n    \"座\",\n    \"居\",\n    \"抓\",\n    \"裂\",\n    \"胞\",\n    \"呼\",\n    \"娘\",\n    \"景\",\n    \"威\",\n    \"綠\",\n    \"晶\",\n    \"厚\",\n    \"盟\",\n    \"衡\",\n    \"雞\",\n    \"孫\",\n    \"延\",\n    \"危\",\n    \"膠\",\n    \"屋\",\n    \"鄉\",\n    \"臨\",\n    \"陸\",\n    \"顧\",\n    \"掉\",\n    \"呀\",\n    \"燈\",\n    \"歲\",\n    \"措\",\n    \"束\",\n    \"耐\",\n    \"劇\",\n    \"玉\",\n    \"趙\",\n    \"跳\",\n    \"哥\",\n    \"季\",\n    \"課\",\n    \"凱\",\n    \"胡\",\n    \"額\",\n    \"款\",\n    \"紹\",\n    \"卷\",\n    \"齊\",\n    \"偉\",\n    \"蒸\",\n    \"殖\",\n    \"永\",\n    \"宗\",\n    \"苗\",\n    \"川\",\n    \"爐\",\n    \"岩\",\n    \"弱\",\n    \"零\",\n    \"楊\",\n    \"奏\",\n    \"沿\",\n    \"露\",\n    \"桿\",\n    \"探\",\n    \"滑\",\n    \"鎮\",\n    \"飯\",\n    \"濃\",\n    \"航\",\n    \"懷\",\n    \"趕\",\n    \"庫\",\n    \"奪\",\n    \"伊\",\n    \"靈\",\n    \"稅\",\n    \"途\",\n    \"滅\",\n    \"賽\",\n    \"歸\",\n    \"召\",\n    \"鼓\",\n    \"播\",\n    \"盤\",\n    \"裁\",\n    \"險\",\n    \"康\",\n    \"唯\",\n    \"錄\",\n    \"菌\",\n    \"純\",\n    \"借\",\n    \"糖\",\n    \"蓋\",\n    \"橫\",\n    \"符\",\n    \"私\",\n    \"努\",\n    \"堂\",\n    \"域\",\n    \"槍\",\n    \"潤\",\n    \"幅\",\n    \"哈\",\n    \"竟\",\n    \"熟\",\n    \"蟲\",\n    \"澤\",\n    \"腦\",\n    \"壤\",\n    \"碳\",\n    \"歐\",\n    \"遍\",\n    \"側\",\n    \"寨\",\n    \"敢\",\n    \"徹\",\n    \"慮\",\n    \"斜\",\n    \"薄\",\n    \"庭\",\n    \"納\",\n    \"彈\",\n    \"飼\",\n    \"伸\",\n    \"折\",\n    \"麥\",\n    \"濕\",\n    \"暗\",\n    \"荷\",\n    \"瓦\",\n    \"塞\",\n    \"床\",\n    \"築\",\n    \"惡\",\n    \"戶\",\n    \"訪\",\n    \"塔\",\n    \"奇\",\n    \"透\",\n    \"梁\",\n    \"刀\",\n    \"旋\",\n    \"跡\",\n    \"卡\",\n    \"氯\",\n    \"遇\",\n    \"份\",\n    \"毒\",\n    \"泥\",\n    \"退\",\n    \"洗\",\n    \"擺\",\n    \"灰\",\n    \"彩\",\n    \"賣\",\n    \"耗\",\n    \"夏\",\n    \"擇\",\n    \"忙\",\n    \"銅\",\n    \"獻\",\n    \"硬\",\n    \"予\",\n    \"繁\",\n    \"圈\",\n    \"雪\",\n    \"函\",\n    \"亦\",\n    \"抽\",\n    \"篇\",\n    \"陣\",\n    \"陰\",\n    \"丁\",\n    \"尺\",\n    \"追\",\n    \"堆\",\n    \"雄\",\n    \"迎\",\n    \"泛\",\n    \"爸\",\n    \"樓\",\n    \"避\",\n    \"謀\",\n    \"噸\",\n    \"野\",\n    \"豬\",\n    \"旗\",\n    \"累\",\n    \"偏\",\n    \"典\",\n    \"館\",\n    \"索\",\n    \"秦\",\n    \"脂\",\n    \"潮\",\n    \"爺\",\n    \"豆\",\n    \"忽\",\n    \"托\",\n    \"驚\",\n    \"塑\",\n    \"遺\",\n    \"愈\",\n    \"朱\",\n    \"替\",\n    \"纖\",\n    \"粗\",\n    \"傾\",\n    \"尚\",\n    \"痛\",\n    \"楚\",\n    \"謝\",\n    \"奮\",\n    \"購\",\n    \"磨\",\n    \"君\",\n    \"池\",\n    \"旁\",\n    \"碎\",\n    \"骨\",\n    \"監\",\n    \"捕\",\n    \"弟\",\n    \"暴\",\n    \"割\",\n    \"貫\",\n    \"殊\",\n    \"釋\",\n    \"詞\",\n    \"亡\",\n    \"壁\",\n    \"頓\",\n    \"寶\",\n    \"午\",\n    \"塵\",\n    \"聞\",\n    \"揭\",\n    \"炮\",\n    \"殘\",\n    \"冬\",\n    \"橋\",\n    \"婦\",\n    \"警\",\n    \"綜\",\n    \"招\",\n    \"吳\",\n    \"付\",\n    \"浮\",\n    \"遭\",\n    \"徐\",\n    \"您\",\n    \"搖\",\n    \"谷\",\n    \"贊\",\n    \"箱\",\n    \"隔\",\n    \"訂\",\n    \"男\",\n    \"吹\",\n    \"園\",\n    \"紛\",\n    \"唐\",\n    \"敗\",\n    \"宋\",\n    \"玻\",\n    \"巨\",\n    \"耕\",\n    \"坦\",\n    \"榮\",\n    \"閉\",\n    \"灣\",\n    \"鍵\",\n    \"凡\",\n    \"駐\",\n    \"鍋\",\n    \"救\",\n    \"恩\",\n    \"剝\",\n    \"凝\",\n    \"鹼\",\n    \"齒\",\n    \"截\",\n    \"煉\",\n    \"麻\",\n    \"紡\",\n    \"禁\",\n    \"廢\",\n    \"盛\",\n    \"版\",\n    \"緩\",\n    \"淨\",\n    \"睛\",\n    \"昌\",\n    \"婚\",\n    \"涉\",\n    \"筒\",\n    \"嘴\",\n    \"插\",\n    \"岸\",\n    \"朗\",\n    \"莊\",\n    \"街\",\n    \"藏\",\n    \"姑\",\n    \"貿\",\n    \"腐\",\n    \"奴\",\n    \"啦\",\n    \"慣\",\n    \"乘\",\n    \"夥\",\n    \"恢\",\n    \"勻\",\n    \"紗\",\n    \"扎\",\n    \"辯\",\n    \"耳\",\n    \"彪\",\n    \"臣\",\n    \"億\",\n    \"璃\",\n    \"抵\",\n    \"脈\",\n    \"秀\",\n    \"薩\",\n    \"俄\",\n    \"網\",\n    \"舞\",\n    \"店\",\n    \"噴\",\n    \"縱\",\n    \"寸\",\n    \"汗\",\n    \"掛\",\n    \"洪\",\n    \"賀\",\n    \"閃\",\n    \"柬\",\n    \"爆\",\n    \"烯\",\n    \"津\",\n    \"稻\",\n    \"牆\",\n    \"軟\",\n    \"勇\",\n    \"像\",\n    \"滾\",\n    \"厘\",\n    \"蒙\",\n    \"芳\",\n    \"肯\",\n    \"坡\",\n    \"柱\",\n    \"盪\",\n    \"腿\",\n    \"儀\",\n    \"旅\",\n    \"尾\",\n    \"軋\",\n    \"冰\",\n    \"貢\",\n    \"登\",\n    \"黎\",\n    \"削\",\n    \"鑽\",\n    \"勒\",\n    \"逃\",\n    \"障\",\n    \"氨\",\n    \"郭\",\n    \"峰\",\n    \"幣\",\n    \"港\",\n    \"伏\",\n    \"軌\",\n    \"畝\",\n    \"畢\",\n    \"擦\",\n    \"莫\",\n    \"刺\",\n    \"浪\",\n    \"秘\",\n    \"援\",\n    \"株\",\n    \"健\",\n    \"售\",\n    \"股\",\n    \"島\",\n    \"甘\",\n    \"泡\",\n    \"睡\",\n    \"童\",\n    \"鑄\",\n    \"湯\",\n    \"閥\",\n    \"休\",\n    \"匯\",\n    \"舍\",\n    \"牧\",\n    \"繞\",\n    \"炸\",\n    \"哲\",\n    \"磷\",\n    \"績\",\n    \"朋\",\n    \"淡\",\n    \"尖\",\n    \"啟\",\n    \"陷\",\n    \"柴\",\n    \"呈\",\n    \"徒\",\n    \"顏\",\n    \"淚\",\n    \"稍\",\n    \"忘\",\n    \"泵\",\n    \"藍\",\n    \"拖\",\n    \"洞\",\n    \"授\",\n    \"鏡\",\n    \"辛\",\n    \"壯\",\n    \"鋒\",\n    \"貧\",\n    \"虛\",\n    \"彎\",\n    \"摩\",\n    \"泰\",\n    \"幼\",\n    \"廷\",\n    \"尊\",\n    \"窗\",\n    \"綱\",\n    \"弄\",\n    \"隸\",\n    \"疑\",\n    \"氏\",\n    \"宮\",\n    \"姐\",\n    \"震\",\n    \"瑞\",\n    \"怪\",\n    \"尤\",\n    \"琴\",\n    \"循\",\n    \"描\",\n    \"膜\",\n    \"違\",\n    \"夾\",\n    \"腰\",\n    \"緣\",\n    \"珠\",\n    \"窮\",\n    \"森\",\n    \"枝\",\n    \"竹\",\n    \"溝\",\n    \"催\",\n    \"繩\",\n    \"憶\",\n    \"邦\",\n    \"剩\",\n    \"幸\",\n    \"漿\",\n    \"欄\",\n    \"擁\",\n    \"牙\",\n    \"貯\",\n    \"禮\",\n    \"濾\",\n    \"鈉\",\n    \"紋\",\n    \"罷\",\n    \"拍\",\n    \"咱\",\n    \"喊\",\n    \"袖\",\n    \"埃\",\n    \"勤\",\n    \"罰\",\n    \"焦\",\n    \"潛\",\n    \"伍\",\n    \"墨\",\n    \"欲\",\n    \"縫\",\n    \"姓\",\n    \"刊\",\n    \"飽\",\n    \"仿\",\n    \"獎\",\n    \"鋁\",\n    \"鬼\",\n    \"麗\",\n    \"跨\",\n    \"默\",\n    \"挖\",\n    \"鏈\",\n    \"掃\",\n    \"喝\",\n    \"袋\",\n    \"炭\",\n    \"污\",\n    \"幕\",\n    \"諸\",\n    \"弧\",\n    \"勵\",\n    \"梅\",\n    \"奶\",\n    \"潔\",\n    \"災\",\n    \"舟\",\n    \"鑑\",\n    \"苯\",\n    \"訟\",\n    \"抱\",\n    \"毀\",\n    \"懂\",\n    \"寒\",\n    \"智\",\n    \"埔\",\n    \"寄\",\n    \"屆\",\n    \"躍\",\n    \"渡\",\n    \"挑\",\n    \"丹\",\n    \"艱\",\n    \"貝\",\n    \"碰\",\n    \"拔\",\n    \"爹\",\n    \"戴\",\n    \"碼\",\n    \"夢\",\n    \"芽\",\n    \"熔\",\n    \"赤\",\n    \"漁\",\n    \"哭\",\n    \"敬\",\n    \"顆\",\n    \"奔\",\n    \"鉛\",\n    \"仲\",\n    \"虎\",\n    \"稀\",\n    \"妹\",\n    \"乏\",\n    \"珍\",\n    \"申\",\n    \"桌\",\n    \"遵\",\n    \"允\",\n    \"隆\",\n    \"螺\",\n    \"倉\",\n    \"魏\",\n    \"銳\",\n    \"曉\",\n    \"氮\",\n    \"兼\",\n    \"隱\",\n    \"礙\",\n    \"赫\",\n    \"撥\",\n    \"忠\",\n    \"肅\",\n    \"缸\",\n    \"牽\",\n    \"搶\",\n    \"博\",\n    \"巧\",\n    \"殼\",\n    \"兄\",\n    \"杜\",\n    \"訊\",\n    \"誠\",\n    \"碧\",\n    \"祥\",\n    \"柯\",\n    \"頁\",\n    \"巡\",\n    \"矩\",\n    \"悲\",\n    \"灌\",\n    \"齡\",\n    \"倫\",\n    \"票\",\n    \"尋\",\n    \"桂\",\n    \"鋪\",\n    \"聖\",\n    \"恐\",\n    \"恰\",\n    \"鄭\",\n    \"趣\",\n    \"抬\",\n    \"荒\",\n    \"騰\",\n    \"貼\",\n    \"柔\",\n    \"滴\",\n    \"猛\",\n    \"闊\",\n    \"輛\",\n    \"妻\",\n    \"填\",\n    \"撤\",\n    \"儲\",\n    \"簽\",\n    \"鬧\",\n    \"擾\",\n    \"紫\",\n    \"砂\",\n    \"遞\",\n    \"戲\",\n    \"吊\",\n    \"陶\",\n    \"伐\",\n    \"餵\",\n    \"療\",\n    \"瓶\",\n    \"婆\",\n    \"撫\",\n    \"臂\",\n    \"摸\",\n    \"忍\",\n    \"蝦\",\n    \"蠟\",\n    \"鄰\",\n    \"胸\",\n    \"鞏\",\n    \"擠\",\n    \"偶\",\n    \"棄\",\n    \"槽\",\n    \"勁\",\n    \"乳\",\n    \"鄧\",\n    \"吉\",\n    \"仁\",\n    \"爛\",\n    \"磚\",\n    \"租\",\n    \"烏\",\n    \"艦\",\n    \"伴\",\n    \"瓜\",\n    \"淺\",\n    \"丙\",\n    \"暫\",\n    \"燥\",\n    \"橡\",\n    \"柳\",\n    \"迷\",\n    \"暖\",\n    \"牌\",\n    \"秧\",\n    \"膽\",\n    \"詳\",\n    \"簧\",\n    \"踏\",\n    \"瓷\",\n    \"譜\",\n    \"呆\",\n    \"賓\",\n    \"糊\",\n    \"洛\",\n    \"輝\",\n    \"憤\",\n    \"競\",\n    \"隙\",\n    \"怒\",\n    \"粘\",\n    \"乃\",\n    \"緒\",\n    \"肩\",\n    \"籍\",\n    \"敏\",\n    \"塗\",\n    \"熙\",\n    \"皆\",\n    \"偵\",\n    \"懸\",\n    \"掘\",\n    \"享\",\n    \"糾\",\n    \"醒\",\n    \"狂\",\n    \"鎖\",\n    \"淀\",\n    \"恨\",\n    \"牲\",\n    \"霸\",\n    \"爬\",\n    \"賞\",\n    \"逆\",\n    \"玩\",\n    \"陵\",\n    \"祝\",\n    \"秒\",\n    \"浙\",\n    \"貌\",\n    \"役\",\n    \"彼\",\n    \"悉\",\n    \"鴨\",\n    \"趨\",\n    \"鳳\",\n    \"晨\",\n    \"畜\",\n    \"輩\",\n    \"秩\",\n    \"卵\",\n    \"署\",\n    \"梯\",\n    \"炎\",\n    \"灘\",\n    \"棋\",\n    \"驅\",\n    \"篩\",\n    \"峽\",\n    \"冒\",\n    \"啥\",\n    \"壽\",\n    \"譯\",\n    \"浸\",\n    \"泉\",\n    \"帽\",\n    \"遲\",\n    \"矽\",\n    \"疆\",\n    \"貸\",\n    \"漏\",\n    \"稿\",\n    \"冠\",\n    \"嫩\",\n    \"脅\",\n    \"芯\",\n    \"牢\",\n    \"叛\",\n    \"蝕\",\n    \"奧\",\n    \"鳴\",\n    \"嶺\",\n    \"羊\",\n    \"憑\",\n    \"串\",\n    \"塘\",\n    \"繪\",\n    \"酵\",\n    \"融\",\n    \"盆\",\n    \"錫\",\n    \"廟\",\n    \"籌\",\n    \"凍\",\n    \"輔\",\n    \"攝\",\n    \"襲\",\n    \"筋\",\n    \"拒\",\n    \"僚\",\n    \"旱\",\n    \"鉀\",\n    \"鳥\",\n    \"漆\",\n    \"沈\",\n    \"眉\",\n    \"疏\",\n    \"添\",\n    \"棒\",\n    \"穗\",\n    \"硝\",\n    \"韓\",\n    \"逼\",\n    \"扭\",\n    \"僑\",\n    \"涼\",\n    \"挺\",\n    \"碗\",\n    \"栽\",\n    \"炒\",\n    \"杯\",\n    \"患\",\n    \"餾\",\n    \"勸\",\n    \"豪\",\n    \"遼\",\n    \"勃\",\n    \"鴻\",\n    \"旦\",\n    \"吏\",\n    \"拜\",\n    \"狗\",\n    \"埋\",\n    \"輥\",\n    \"掩\",\n    \"飲\",\n    \"搬\",\n    \"罵\",\n    \"辭\",\n    \"勾\",\n    \"扣\",\n    \"估\",\n    \"蔣\",\n    \"絨\",\n    \"霧\",\n    \"丈\",\n    \"朵\",\n    \"姆\",\n    \"擬\",\n    \"宇\",\n    \"輯\",\n    \"陝\",\n    \"雕\",\n    \"償\",\n    \"蓄\",\n    \"崇\",\n    \"剪\",\n    \"倡\",\n    \"廳\",\n    \"咬\",\n    \"駛\",\n    \"薯\",\n    \"刷\",\n    \"斥\",\n    \"番\",\n    \"賦\",\n    \"奉\",\n    \"佛\",\n    \"澆\",\n    \"漫\",\n    \"曼\",\n    \"扇\",\n    \"鈣\",\n    \"桃\",\n    \"扶\",\n    \"仔\",\n    \"返\",\n    \"俗\",\n    \"虧\",\n    \"腔\",\n    \"鞋\",\n    \"棱\",\n    \"覆\",\n    \"框\",\n    \"悄\",\n    \"叔\",\n    \"撞\",\n    \"騙\",\n    \"勘\",\n    \"旺\",\n    \"沸\",\n    \"孤\",\n    \"吐\",\n    \"孟\",\n    \"渠\",\n    \"屈\",\n    \"疾\",\n    \"妙\",\n    \"惜\",\n    \"仰\",\n    \"狠\",\n    \"脹\",\n    \"諧\",\n    \"拋\",\n    \"黴\",\n    \"桑\",\n    \"崗\",\n    \"嘛\",\n    \"衰\",\n    \"盜\",\n    \"滲\",\n    \"臟\",\n    \"賴\",\n    \"湧\",\n    \"甜\",\n    \"曹\",\n    \"閱\",\n    \"肌\",\n    \"哩\",\n    \"厲\",\n    \"烴\",\n    \"緯\",\n    \"毅\",\n    \"昨\",\n    \"偽\",\n    \"症\",\n    \"煮\",\n    \"嘆\",\n    \"釘\",\n    \"搭\",\n    \"莖\",\n    \"籠\",\n    \"酷\",\n    \"偷\",\n    \"弓\",\n    \"錐\",\n    \"恆\",\n    \"傑\",\n    \"坑\",\n    \"鼻\",\n    \"翼\",\n    \"綸\",\n    \"敘\",\n    \"獄\",\n    \"逮\",\n    \"罐\",\n    \"絡\",\n    \"棚\",\n    \"抑\",\n    \"膨\",\n    \"蔬\",\n    \"寺\",\n    \"驟\",\n    \"穆\",\n    \"冶\",\n    \"枯\",\n    \"冊\",\n    \"屍\",\n    \"凸\",\n    \"紳\",\n    \"坯\",\n    \"犧\",\n    \"焰\",\n    \"轟\",\n    \"欣\",\n    \"晉\",\n    \"瘦\",\n    \"禦\",\n    \"錠\",\n    \"錦\",\n    \"喪\",\n    \"旬\",\n    \"鍛\",\n    \"壟\",\n    \"搜\",\n    \"撲\",\n    \"邀\",\n    \"亭\",\n    \"酯\",\n    \"邁\",\n    \"舒\",\n    \"脆\",\n    \"酶\",\n    \"閒\",\n    \"憂\",\n    \"酚\",\n    \"頑\",\n    \"羽\",\n    \"漲\",\n    \"卸\",\n    \"仗\",\n    \"陪\",\n    \"闢\",\n    \"懲\",\n    \"杭\",\n    \"姚\",\n    \"肚\",\n    \"捉\",\n    \"飄\",\n    \"漂\",\n    \"昆\",\n    \"欺\",\n    \"吾\",\n    \"郎\",\n    \"烷\",\n    \"汁\",\n    \"呵\",\n    \"飾\",\n    \"蕭\",\n    \"雅\",\n    \"郵\",\n    \"遷\",\n    \"燕\",\n    \"撒\",\n    \"姻\",\n    \"赴\",\n    \"宴\",\n    \"煩\",\n    \"債\",\n    \"帳\",\n    \"斑\",\n    \"鈴\",\n    \"旨\",\n    \"醇\",\n    \"董\",\n    \"餅\",\n    \"雛\",\n    \"姿\",\n    \"拌\",\n    \"傅\",\n    \"腹\",\n    \"妥\",\n    \"揉\",\n    \"賢\",\n    \"拆\",\n    \"歪\",\n    \"葡\",\n    \"胺\",\n    \"丟\",\n    \"浩\",\n    \"徽\",\n    \"昂\",\n    \"墊\",\n    \"擋\",\n    \"覽\",\n    \"貪\",\n    \"慰\",\n    \"繳\",\n    \"汪\",\n    \"慌\",\n    \"馮\",\n    \"諾\",\n    \"姜\",\n    \"誼\",\n    \"兇\",\n    \"劣\",\n    \"誣\",\n    \"耀\",\n    \"昏\",\n    \"躺\",\n    \"盈\",\n    \"騎\",\n    \"喬\",\n    \"溪\",\n    \"叢\",\n    \"盧\",\n    \"抹\",\n    \"悶\",\n    \"諮\",\n    \"刮\",\n    \"駕\",\n    \"纜\",\n    \"悟\",\n    \"摘\",\n    \"鉺\",\n    \"擲\",\n    \"頗\",\n    \"幻\",\n    \"柄\",\n    \"惠\",\n    \"慘\",\n    \"佳\",\n    \"仇\",\n    \"臘\",\n    \"窩\",\n    \"滌\",\n    \"劍\",\n    \"瞧\",\n    \"堡\",\n    \"潑\",\n    \"蔥\",\n    \"罩\",\n    \"霍\",\n    \"撈\",\n    \"胎\",\n    \"蒼\",\n    \"濱\",\n    \"倆\",\n    \"捅\",\n    \"湘\",\n    \"砍\",\n    \"霞\",\n    \"邵\",\n    \"萄\",\n    \"瘋\",\n    \"淮\",\n    \"遂\",\n    \"熊\",\n    \"糞\",\n    \"烘\",\n    \"宿\",\n    \"檔\",\n    \"戈\",\n    \"駁\",\n    \"嫂\",\n    \"裕\",\n    \"徙\",\n    \"箭\",\n    \"捐\",\n    \"腸\",\n    \"撐\",\n    \"曬\",\n    \"辨\",\n    \"殿\",\n    \"蓮\",\n    \"攤\",\n    \"攪\",\n    \"醬\",\n    \"屏\",\n    \"疫\",\n    \"哀\",\n    \"蔡\",\n    \"堵\",\n    \"沫\",\n    \"皺\",\n    \"暢\",\n    \"疊\",\n    \"閣\",\n    \"萊\",\n    \"敲\",\n    \"轄\",\n    \"鉤\",\n    \"痕\",\n    \"壩\",\n    \"巷\",\n    \"餓\",\n    \"禍\",\n    \"丘\",\n    \"玄\",\n    \"溜\",\n    \"曰\",\n    \"邏\",\n    \"彭\",\n    \"嘗\",\n    \"卿\",\n    \"妨\",\n    \"艇\",\n    \"吞\",\n    \"韋\",\n    \"怨\",\n    \"矮\",\n    \"歇\"\n]\n","module.exports=[\n    \"abaco\",\n    \"abbaglio\",\n    \"abbinato\",\n    \"abete\",\n    \"abisso\",\n    \"abolire\",\n    \"abrasivo\",\n    \"abrogato\",\n    \"accadere\",\n    \"accenno\",\n    \"accusato\",\n    \"acetone\",\n    \"achille\",\n    \"acido\",\n    \"acqua\",\n    \"acre\",\n    \"acrilico\",\n    \"acrobata\",\n    \"acuto\",\n    \"adagio\",\n    \"addebito\",\n    \"addome\",\n    \"adeguato\",\n    \"aderire\",\n    \"adipe\",\n    \"adottare\",\n    \"adulare\",\n    \"affabile\",\n    \"affetto\",\n    \"affisso\",\n    \"affranto\",\n    \"aforisma\",\n    \"afoso\",\n    \"africano\",\n    \"agave\",\n    \"agente\",\n    \"agevole\",\n    \"aggancio\",\n    \"agire\",\n    \"agitare\",\n    \"agonismo\",\n    \"agricolo\",\n    \"agrumeto\",\n    \"aguzzo\",\n    \"alabarda\",\n    \"alato\",\n    \"albatro\",\n    \"alberato\",\n    \"albo\",\n    \"albume\",\n    \"alce\",\n    \"alcolico\",\n    \"alettone\",\n    \"alfa\",\n    \"algebra\",\n    \"aliante\",\n    \"alibi\",\n    \"alimento\",\n    \"allagato\",\n    \"allegro\",\n    \"allievo\",\n    \"allodola\",\n    \"allusivo\",\n    \"almeno\",\n    \"alogeno\",\n    \"alpaca\",\n    \"alpestre\",\n    \"altalena\",\n    \"alterno\",\n    \"alticcio\",\n    \"altrove\",\n    \"alunno\",\n    \"alveolo\",\n    \"alzare\",\n    \"amalgama\",\n    \"amanita\",\n    \"amarena\",\n    \"ambito\",\n    \"ambrato\",\n    \"ameba\",\n    \"america\",\n    \"ametista\",\n    \"amico\",\n    \"ammasso\",\n    \"ammenda\",\n    \"ammirare\",\n    \"ammonito\",\n    \"amore\",\n    \"ampio\",\n    \"ampliare\",\n    \"amuleto\",\n    \"anacardo\",\n    \"anagrafe\",\n    \"analista\",\n    \"anarchia\",\n    \"anatra\",\n    \"anca\",\n    \"ancella\",\n    \"ancora\",\n    \"andare\",\n    \"andrea\",\n    \"anello\",\n    \"angelo\",\n    \"angolare\",\n    \"angusto\",\n    \"anima\",\n    \"annegare\",\n    \"annidato\",\n    \"anno\",\n    \"annuncio\",\n    \"anonimo\",\n    \"anticipo\",\n    \"anzi\",\n    \"apatico\",\n    \"apertura\",\n    \"apode\",\n    \"apparire\",\n    \"appetito\",\n    \"appoggio\",\n    \"approdo\",\n    \"appunto\",\n    \"aprile\",\n    \"arabica\",\n    \"arachide\",\n    \"aragosta\",\n    \"araldica\",\n    \"arancio\",\n    \"aratura\",\n    \"arazzo\",\n    \"arbitro\",\n    \"archivio\",\n    \"ardito\",\n    \"arenile\",\n    \"argento\",\n    \"argine\",\n    \"arguto\",\n    \"aria\",\n    \"armonia\",\n    \"arnese\",\n    \"arredato\",\n    \"arringa\",\n    \"arrosto\",\n    \"arsenico\",\n    \"arso\",\n    \"artefice\",\n    \"arzillo\",\n    \"asciutto\",\n    \"ascolto\",\n    \"asepsi\",\n    \"asettico\",\n    \"asfalto\",\n    \"asino\",\n    \"asola\",\n    \"aspirato\",\n    \"aspro\",\n    \"assaggio\",\n    \"asse\",\n    \"assoluto\",\n    \"assurdo\",\n    \"asta\",\n    \"astenuto\",\n    \"astice\",\n    \"astratto\",\n    \"atavico\",\n    \"ateismo\",\n    \"atomico\",\n    \"atono\",\n    \"attesa\",\n    \"attivare\",\n    \"attorno\",\n    \"attrito\",\n    \"attuale\",\n    \"ausilio\",\n    \"austria\",\n    \"autista\",\n    \"autonomo\",\n    \"autunno\",\n    \"avanzato\",\n    \"avere\",\n    \"avvenire\",\n    \"avviso\",\n    \"avvolgere\",\n    \"azione\",\n    \"azoto\",\n    \"azzimo\",\n    \"azzurro\",\n    \"babele\",\n    \"baccano\",\n    \"bacino\",\n    \"baco\",\n    \"badessa\",\n    \"badilata\",\n    \"bagnato\",\n    \"baita\",\n    \"balcone\",\n    \"baldo\",\n    \"balena\",\n    \"ballata\",\n    \"balzano\",\n    \"bambino\",\n    \"bandire\",\n    \"baraonda\",\n    \"barbaro\",\n    \"barca\",\n    \"baritono\",\n    \"barlume\",\n    \"barocco\",\n    \"basilico\",\n    \"basso\",\n    \"batosta\",\n    \"battuto\",\n    \"baule\",\n    \"bava\",\n    \"bavosa\",\n    \"becco\",\n    \"beffa\",\n    \"belgio\",\n    \"belva\",\n    \"benda\",\n    \"benevole\",\n    \"benigno\",\n    \"benzina\",\n    \"bere\",\n    \"berlina\",\n    \"beta\",\n    \"bibita\",\n    \"bici\",\n    \"bidone\",\n    \"bifido\",\n    \"biga\",\n    \"bilancia\",\n    \"bimbo\",\n    \"binocolo\",\n    \"biologo\",\n    \"bipede\",\n    \"bipolare\",\n    \"birbante\",\n    \"birra\",\n    \"biscotto\",\n    \"bisesto\",\n    \"bisnonno\",\n    \"bisonte\",\n    \"bisturi\",\n    \"bizzarro\",\n    \"blando\",\n    \"blatta\",\n    \"bollito\",\n    \"bonifico\",\n    \"bordo\",\n    \"bosco\",\n    \"botanico\",\n    \"bottino\",\n    \"bozzolo\",\n    \"braccio\",\n    \"bradipo\",\n    \"brama\",\n    \"branca\",\n    \"bravura\",\n    \"bretella\",\n    \"brevetto\",\n    \"brezza\",\n    \"briglia\",\n    \"brillante\",\n    \"brindare\",\n    \"broccolo\",\n    \"brodo\",\n    \"bronzina\",\n    \"brullo\",\n    \"bruno\",\n    \"bubbone\",\n    \"buca\",\n    \"budino\",\n    \"buffone\",\n    \"buio\",\n    \"bulbo\",\n    \"buono\",\n    \"burlone\",\n    \"burrasca\",\n    \"bussola\",\n    \"busta\",\n    \"cadetto\",\n    \"caduco\",\n    \"calamaro\",\n    \"calcolo\",\n    \"calesse\",\n    \"calibro\",\n    \"calmo\",\n    \"caloria\",\n    \"cambusa\",\n    \"camerata\",\n    \"camicia\",\n    \"cammino\",\n    \"camola\",\n    \"campale\",\n    \"canapa\",\n    \"candela\",\n    \"cane\",\n    \"canino\",\n    \"canotto\",\n    \"cantina\",\n    \"capace\",\n    \"capello\",\n    \"capitolo\",\n    \"capogiro\",\n    \"cappero\",\n    \"capra\",\n    \"capsula\",\n    \"carapace\",\n    \"carcassa\",\n    \"cardo\",\n    \"carisma\",\n    \"carovana\",\n    \"carretto\",\n    \"cartolina\",\n    \"casaccio\",\n    \"cascata\",\n    \"caserma\",\n    \"caso\",\n    \"cassone\",\n    \"castello\",\n    \"casuale\",\n    \"catasta\",\n    \"catena\",\n    \"catrame\",\n    \"cauto\",\n    \"cavillo\",\n    \"cedibile\",\n    \"cedrata\",\n    \"cefalo\",\n    \"celebre\",\n    \"cellulare\",\n    \"cena\",\n    \"cenone\",\n    \"centesimo\",\n    \"ceramica\",\n    \"cercare\",\n    \"certo\",\n    \"cerume\",\n    \"cervello\",\n    \"cesoia\",\n    \"cespo\",\n    \"ceto\",\n    \"chela\",\n    \"chiaro\",\n    \"chicca\",\n    \"chiedere\",\n    \"chimera\",\n    \"china\",\n    \"chirurgo\",\n    \"chitarra\",\n    \"ciao\",\n    \"ciclismo\",\n    \"cifrare\",\n    \"cigno\",\n    \"cilindro\",\n    \"ciottolo\",\n    \"circa\",\n    \"cirrosi\",\n    \"citrico\",\n    \"cittadino\",\n    \"ciuffo\",\n    \"civetta\",\n    \"civile\",\n    \"classico\",\n    \"clinica\",\n    \"cloro\",\n    \"cocco\",\n    \"codardo\",\n    \"codice\",\n    \"coerente\",\n    \"cognome\",\n    \"collare\",\n    \"colmato\",\n    \"colore\",\n    \"colposo\",\n    \"coltivato\",\n    \"colza\",\n    \"coma\",\n    \"cometa\",\n    \"commando\",\n    \"comodo\",\n    \"computer\",\n    \"comune\",\n    \"conciso\",\n    \"condurre\",\n    \"conferma\",\n    \"congelare\",\n    \"coniuge\",\n    \"connesso\",\n    \"conoscere\",\n    \"consumo\",\n    \"continuo\",\n    \"convegno\",\n    \"coperto\",\n    \"copione\",\n    \"coppia\",\n    \"copricapo\",\n    \"corazza\",\n    \"cordata\",\n    \"coricato\",\n    \"cornice\",\n    \"corolla\",\n    \"corpo\",\n    \"corredo\",\n    \"corsia\",\n    \"cortese\",\n    \"cosmico\",\n    \"costante\",\n    \"cottura\",\n    \"covato\",\n    \"cratere\",\n    \"cravatta\",\n    \"creato\",\n    \"credere\",\n    \"cremoso\",\n    \"crescita\",\n    \"creta\",\n    \"criceto\",\n    \"crinale\",\n    \"crisi\",\n    \"critico\",\n    \"croce\",\n    \"cronaca\",\n    \"crostata\",\n    \"cruciale\",\n    \"crusca\",\n    \"cucire\",\n    \"cuculo\",\n    \"cugino\",\n    \"cullato\",\n    \"cupola\",\n    \"curatore\",\n    \"cursore\",\n    \"curvo\",\n    \"cuscino\",\n    \"custode\",\n    \"dado\",\n    \"daino\",\n    \"dalmata\",\n    \"damerino\",\n    \"daniela\",\n    \"dannoso\",\n    \"danzare\",\n    \"datato\",\n    \"davanti\",\n    \"davvero\",\n    \"debutto\",\n    \"decennio\",\n    \"deciso\",\n    \"declino\",\n    \"decollo\",\n    \"decreto\",\n    \"dedicato\",\n    \"definito\",\n    \"deforme\",\n    \"degno\",\n    \"delegare\",\n    \"delfino\",\n    \"delirio\",\n    \"delta\",\n    \"demenza\",\n    \"denotato\",\n    \"dentro\",\n    \"deposito\",\n    \"derapata\",\n    \"derivare\",\n    \"deroga\",\n    \"descritto\",\n    \"deserto\",\n    \"desiderio\",\n    \"desumere\",\n    \"detersivo\",\n    \"devoto\",\n    \"diametro\",\n    \"dicembre\",\n    \"diedro\",\n    \"difeso\",\n    \"diffuso\",\n    \"digerire\",\n    \"digitale\",\n    \"diluvio\",\n    \"dinamico\",\n    \"dinnanzi\",\n    \"dipinto\",\n    \"diploma\",\n    \"dipolo\",\n    \"diradare\",\n    \"dire\",\n    \"dirotto\",\n    \"dirupo\",\n    \"disagio\",\n    \"discreto\",\n    \"disfare\",\n    \"disgelo\",\n    \"disposto\",\n    \"distanza\",\n    \"disumano\",\n    \"dito\",\n    \"divano\",\n    \"divelto\",\n    \"dividere\",\n    \"divorato\",\n    \"doblone\",\n    \"docente\",\n    \"doganale\",\n    \"dogma\",\n    \"dolce\",\n    \"domato\",\n    \"domenica\",\n    \"dominare\",\n    \"dondolo\",\n    \"dono\",\n    \"dormire\",\n    \"dote\",\n    \"dottore\",\n    \"dovuto\",\n    \"dozzina\",\n    \"drago\",\n    \"druido\",\n    \"dubbio\",\n    \"dubitare\",\n    \"ducale\",\n    \"duna\",\n    \"duomo\",\n    \"duplice\",\n    \"duraturo\",\n    \"ebano\",\n    \"eccesso\",\n    \"ecco\",\n    \"eclissi\",\n    \"economia\",\n    \"edera\",\n    \"edicola\",\n    \"edile\",\n    \"editoria\",\n    \"educare\",\n    \"egemonia\",\n    \"egli\",\n    \"egoismo\",\n    \"egregio\",\n    \"elaborato\",\n    \"elargire\",\n    \"elegante\",\n    \"elencato\",\n    \"eletto\",\n    \"elevare\",\n    \"elfico\",\n    \"elica\",\n    \"elmo\",\n    \"elsa\",\n    \"eluso\",\n    \"emanato\",\n    \"emblema\",\n    \"emesso\",\n    \"emiro\",\n    \"emotivo\",\n    \"emozione\",\n    \"empirico\",\n    \"emulo\",\n    \"endemico\",\n    \"enduro\",\n    \"energia\",\n    \"enfasi\",\n    \"enoteca\",\n    \"entrare\",\n    \"enzima\",\n    \"epatite\",\n    \"epilogo\",\n    \"episodio\",\n    \"epocale\",\n    \"eppure\",\n    \"equatore\",\n    \"erario\",\n    \"erba\",\n    \"erboso\",\n    \"erede\",\n    \"eremita\",\n    \"erigere\",\n    \"ermetico\",\n    \"eroe\",\n    \"erosivo\",\n    \"errante\",\n    \"esagono\",\n    \"esame\",\n    \"esanime\",\n    \"esaudire\",\n    \"esca\",\n    \"esempio\",\n    \"esercito\",\n    \"esibito\",\n    \"esigente\",\n    \"esistere\",\n    \"esito\",\n    \"esofago\",\n    \"esortato\",\n    \"esoso\",\n    \"espanso\",\n    \"espresso\",\n    \"essenza\",\n    \"esso\",\n    \"esteso\",\n    \"estimare\",\n    \"estonia\",\n    \"estroso\",\n    \"esultare\",\n    \"etilico\",\n    \"etnico\",\n    \"etrusco\",\n    \"etto\",\n    \"euclideo\",\n    \"europa\",\n    \"evaso\",\n    \"evidenza\",\n    \"evitato\",\n    \"evoluto\",\n    \"evviva\",\n    \"fabbrica\",\n    \"faccenda\",\n    \"fachiro\",\n    \"falco\",\n    \"famiglia\",\n    \"fanale\",\n    \"fanfara\",\n    \"fango\",\n    \"fantasma\",\n    \"fare\",\n    \"farfalla\",\n    \"farinoso\",\n    \"farmaco\",\n    \"fascia\",\n    \"fastoso\",\n    \"fasullo\",\n    \"faticare\",\n    \"fato\",\n    \"favoloso\",\n    \"febbre\",\n    \"fecola\",\n    \"fede\",\n    \"fegato\",\n    \"felpa\",\n    \"feltro\",\n    \"femmina\",\n    \"fendere\",\n    \"fenomeno\",\n    \"fermento\",\n    \"ferro\",\n    \"fertile\",\n    \"fessura\",\n    \"festivo\",\n    \"fetta\",\n    \"feudo\",\n    \"fiaba\",\n    \"fiducia\",\n    \"fifa\",\n    \"figurato\",\n    \"filo\",\n    \"finanza\",\n    \"finestra\",\n    \"finire\",\n    \"fiore\",\n    \"fiscale\",\n    \"fisico\",\n    \"fiume\",\n    \"flacone\",\n    \"flamenco\",\n    \"flebo\",\n    \"flemma\",\n    \"florido\",\n    \"fluente\",\n    \"fluoro\",\n    \"fobico\",\n    \"focaccia\",\n    \"focoso\",\n    \"foderato\",\n    \"foglio\",\n    \"folata\",\n    \"folclore\",\n    \"folgore\",\n    \"fondente\",\n    \"fonetico\",\n    \"fonia\",\n    \"fontana\",\n    \"forbito\",\n    \"forchetta\",\n    \"foresta\",\n    \"formica\",\n    \"fornaio\",\n    \"foro\",\n    \"fortezza\",\n    \"forzare\",\n    \"fosfato\",\n    \"fosso\",\n    \"fracasso\",\n    \"frana\",\n    \"frassino\",\n    \"fratello\",\n    \"freccetta\",\n    \"frenata\",\n    \"fresco\",\n    \"frigo\",\n    \"frollino\",\n    \"fronde\",\n    \"frugale\",\n    \"frutta\",\n    \"fucilata\",\n    \"fucsia\",\n    \"fuggente\",\n    \"fulmine\",\n    \"fulvo\",\n    \"fumante\",\n    \"fumetto\",\n    \"fumoso\",\n    \"fune\",\n    \"funzione\",\n    \"fuoco\",\n    \"furbo\",\n    \"furgone\",\n    \"furore\",\n    \"fuso\",\n    \"futile\",\n    \"gabbiano\",\n    \"gaffe\",\n    \"galateo\",\n    \"gallina\",\n    \"galoppo\",\n    \"gambero\",\n    \"gamma\",\n    \"garanzia\",\n    \"garbo\",\n    \"garofano\",\n    \"garzone\",\n    \"gasdotto\",\n    \"gasolio\",\n    \"gastrico\",\n    \"gatto\",\n    \"gaudio\",\n    \"gazebo\",\n    \"gazzella\",\n    \"geco\",\n    \"gelatina\",\n    \"gelso\",\n    \"gemello\",\n    \"gemmato\",\n    \"gene\",\n    \"genitore\",\n    \"gennaio\",\n    \"genotipo\",\n    \"gergo\",\n    \"ghepardo\",\n    \"ghiaccio\",\n    \"ghisa\",\n    \"giallo\",\n    \"gilda\",\n    \"ginepro\",\n    \"giocare\",\n    \"gioiello\",\n    \"giorno\",\n    \"giove\",\n    \"girato\",\n    \"girone\",\n    \"gittata\",\n    \"giudizio\",\n    \"giurato\",\n    \"giusto\",\n    \"globulo\",\n    \"glutine\",\n    \"gnomo\",\n    \"gobba\",\n    \"golf\",\n    \"gomito\",\n    \"gommone\",\n    \"gonfio\",\n    \"gonna\",\n    \"governo\",\n    \"gracile\",\n    \"grado\",\n    \"grafico\",\n    \"grammo\",\n    \"grande\",\n    \"grattare\",\n    \"gravoso\",\n    \"grazia\",\n    \"greca\",\n    \"gregge\",\n    \"grifone\",\n    \"grigio\",\n    \"grinza\",\n    \"grotta\",\n    \"gruppo\",\n    \"guadagno\",\n    \"guaio\",\n    \"guanto\",\n    \"guardare\",\n    \"gufo\",\n    \"guidare\",\n    \"ibernato\",\n    \"icona\",\n    \"identico\",\n    \"idillio\",\n    \"idolo\",\n    \"idra\",\n    \"idrico\",\n    \"idrogeno\",\n    \"igiene\",\n    \"ignaro\",\n    \"ignorato\",\n    \"ilare\",\n    \"illeso\",\n    \"illogico\",\n    \"illudere\",\n    \"imballo\",\n    \"imbevuto\",\n    \"imbocco\",\n    \"imbuto\",\n    \"immane\",\n    \"immerso\",\n    \"immolato\",\n    \"impacco\",\n    \"impeto\",\n    \"impiego\",\n    \"importo\",\n    \"impronta\",\n    \"inalare\",\n    \"inarcare\",\n    \"inattivo\",\n    \"incanto\",\n    \"incendio\",\n    \"inchino\",\n    \"incisivo\",\n    \"incluso\",\n    \"incontro\",\n    \"incrocio\",\n    \"incubo\",\n    \"indagine\",\n    \"india\",\n    \"indole\",\n    \"inedito\",\n    \"infatti\",\n    \"infilare\",\n    \"inflitto\",\n    \"ingaggio\",\n    \"ingegno\",\n    \"inglese\",\n    \"ingordo\",\n    \"ingrosso\",\n    \"innesco\",\n    \"inodore\",\n    \"inoltrare\",\n    \"inondato\",\n    \"insano\",\n    \"insetto\",\n    \"insieme\",\n    \"insonnia\",\n    \"insulina\",\n    \"intasato\",\n    \"intero\",\n    \"intonaco\",\n    \"intuito\",\n    \"inumidire\",\n    \"invalido\",\n    \"invece\",\n    \"invito\",\n    \"iperbole\",\n    \"ipnotico\",\n    \"ipotesi\",\n    \"ippica\",\n    \"iride\",\n    \"irlanda\",\n    \"ironico\",\n    \"irrigato\",\n    \"irrorare\",\n    \"isolato\",\n    \"isotopo\",\n    \"isterico\",\n    \"istituto\",\n    \"istrice\",\n    \"italia\",\n    \"iterare\",\n    \"labbro\",\n    \"labirinto\",\n    \"lacca\",\n    \"lacerato\",\n    \"lacrima\",\n    \"lacuna\",\n    \"laddove\",\n    \"lago\",\n    \"lampo\",\n    \"lancetta\",\n    \"lanterna\",\n    \"lardoso\",\n    \"larga\",\n    \"laringe\",\n    \"lastra\",\n    \"latenza\",\n    \"latino\",\n    \"lattuga\",\n    \"lavagna\",\n    \"lavoro\",\n    \"legale\",\n    \"leggero\",\n    \"lembo\",\n    \"lentezza\",\n    \"lenza\",\n    \"leone\",\n    \"lepre\",\n    \"lesivo\",\n    \"lessato\",\n    \"lesto\",\n    \"letterale\",\n    \"leva\",\n    \"levigato\",\n    \"libero\",\n    \"lido\",\n    \"lievito\",\n    \"lilla\",\n    \"limatura\",\n    \"limitare\",\n    \"limpido\",\n    \"lineare\",\n    \"lingua\",\n    \"liquido\",\n    \"lira\",\n    \"lirica\",\n    \"lisca\",\n    \"lite\",\n    \"litigio\",\n    \"livrea\",\n    \"locanda\",\n    \"lode\",\n    \"logica\",\n    \"lombare\",\n    \"londra\",\n    \"longevo\",\n    \"loquace\",\n    \"lorenzo\",\n    \"loto\",\n    \"lotteria\",\n    \"luce\",\n    \"lucidato\",\n    \"lumaca\",\n    \"luminoso\",\n    \"lungo\",\n    \"lupo\",\n    \"luppolo\",\n    \"lusinga\",\n    \"lusso\",\n    \"lutto\",\n    \"macabro\",\n    \"macchina\",\n    \"macero\",\n    \"macinato\",\n    \"madama\",\n    \"magico\",\n    \"maglia\",\n    \"magnete\",\n    \"magro\",\n    \"maiolica\",\n    \"malafede\",\n    \"malgrado\",\n    \"malinteso\",\n    \"malsano\",\n    \"malto\",\n    \"malumore\",\n    \"mana\",\n    \"mancia\",\n    \"mandorla\",\n    \"mangiare\",\n    \"manifesto\",\n    \"mannaro\",\n    \"manovra\",\n    \"mansarda\",\n    \"mantide\",\n    \"manubrio\",\n    \"mappa\",\n    \"maratona\",\n    \"marcire\",\n    \"maretta\",\n    \"marmo\",\n    \"marsupio\",\n    \"maschera\",\n    \"massaia\",\n    \"mastino\",\n    \"materasso\",\n    \"matricola\",\n    \"mattone\",\n    \"maturo\",\n    \"mazurca\",\n    \"meandro\",\n    \"meccanico\",\n    \"mecenate\",\n    \"medesimo\",\n    \"meditare\",\n    \"mega\",\n    \"melassa\",\n    \"melis\",\n    \"melodia\",\n    \"meninge\",\n    \"meno\",\n    \"mensola\",\n    \"mercurio\",\n    \"merenda\",\n    \"merlo\",\n    \"meschino\",\n    \"mese\",\n    \"messere\",\n    \"mestolo\",\n    \"metallo\",\n    \"metodo\",\n    \"mettere\",\n    \"miagolare\",\n    \"mica\",\n    \"micelio\",\n    \"michele\",\n    \"microbo\",\n    \"midollo\",\n    \"miele\",\n    \"migliore\",\n    \"milano\",\n    \"milite\",\n    \"mimosa\",\n    \"minerale\",\n    \"mini\",\n    \"minore\",\n    \"mirino\",\n    \"mirtillo\",\n    \"miscela\",\n    \"missiva\",\n    \"misto\",\n    \"misurare\",\n    \"mitezza\",\n    \"mitigare\",\n    \"mitra\",\n    \"mittente\",\n    \"mnemonico\",\n    \"modello\",\n    \"modifica\",\n    \"modulo\",\n    \"mogano\",\n    \"mogio\",\n    \"mole\",\n    \"molosso\",\n    \"monastero\",\n    \"monco\",\n    \"mondina\",\n    \"monetario\",\n    \"monile\",\n    \"monotono\",\n    \"monsone\",\n    \"montato\",\n    \"monviso\",\n    \"mora\",\n    \"mordere\",\n    \"morsicato\",\n    \"mostro\",\n    \"motivato\",\n    \"motosega\",\n    \"motto\",\n    \"movenza\",\n    \"movimento\",\n    \"mozzo\",\n    \"mucca\",\n    \"mucosa\",\n    \"muffa\",\n    \"mughetto\",\n    \"mugnaio\",\n    \"mulatto\",\n    \"mulinello\",\n    \"multiplo\",\n    \"mummia\",\n    \"munto\",\n    \"muovere\",\n    \"murale\",\n    \"musa\",\n    \"muscolo\",\n    \"musica\",\n    \"mutevole\",\n    \"muto\",\n    \"nababbo\",\n    \"nafta\",\n    \"nanometro\",\n    \"narciso\",\n    \"narice\",\n    \"narrato\",\n    \"nascere\",\n    \"nastrare\",\n    \"naturale\",\n    \"nautica\",\n    \"naviglio\",\n    \"nebulosa\",\n    \"necrosi\",\n    \"negativo\",\n    \"negozio\",\n    \"nemmeno\",\n    \"neofita\",\n    \"neretto\",\n    \"nervo\",\n    \"nessuno\",\n    \"nettuno\",\n    \"neutrale\",\n    \"neve\",\n    \"nevrotico\",\n    \"nicchia\",\n    \"ninfa\",\n    \"nitido\",\n    \"nobile\",\n    \"nocivo\",\n    \"nodo\",\n    \"nome\",\n    \"nomina\",\n    \"nordico\",\n    \"normale\",\n    \"norvegese\",\n    \"nostrano\",\n    \"notare\",\n    \"notizia\",\n    \"notturno\",\n    \"novella\",\n    \"nucleo\",\n    \"nulla\",\n    \"numero\",\n    \"nuovo\",\n    \"nutrire\",\n    \"nuvola\",\n    \"nuziale\",\n    \"oasi\",\n    \"obbedire\",\n    \"obbligo\",\n    \"obelisco\",\n    \"oblio\",\n    \"obolo\",\n    \"obsoleto\",\n    \"occasione\",\n    \"occhio\",\n    \"occidente\",\n    \"occorrere\",\n    \"occultare\",\n    \"ocra\",\n    \"oculato\",\n    \"odierno\",\n    \"odorare\",\n    \"offerta\",\n    \"offrire\",\n    \"offuscato\",\n    \"oggetto\",\n    \"oggi\",\n    \"ognuno\",\n    \"olandese\",\n    \"olfatto\",\n    \"oliato\",\n    \"oliva\",\n    \"ologramma\",\n    \"oltre\",\n    \"omaggio\",\n    \"ombelico\",\n    \"ombra\",\n    \"omega\",\n    \"omissione\",\n    \"ondoso\",\n    \"onere\",\n    \"onice\",\n    \"onnivoro\",\n    \"onorevole\",\n    \"onta\",\n    \"operato\",\n    \"opinione\",\n    \"opposto\",\n    \"oracolo\",\n    \"orafo\",\n    \"ordine\",\n    \"orecchino\",\n    \"orefice\",\n    \"orfano\",\n    \"organico\",\n    \"origine\",\n    \"orizzonte\",\n    \"orma\",\n    \"ormeggio\",\n    \"ornativo\",\n    \"orologio\",\n    \"orrendo\",\n    \"orribile\",\n    \"ortensia\",\n    \"ortica\",\n    \"orzata\",\n    \"orzo\",\n    \"osare\",\n    \"oscurare\",\n    \"osmosi\",\n    \"ospedale\",\n    \"ospite\",\n    \"ossa\",\n    \"ossidare\",\n    \"ostacolo\",\n    \"oste\",\n    \"otite\",\n    \"otre\",\n    \"ottagono\",\n    \"ottimo\",\n    \"ottobre\",\n    \"ovale\",\n    \"ovest\",\n    \"ovino\",\n    \"oviparo\",\n    \"ovocito\",\n    \"ovunque\",\n    \"ovviare\",\n    \"ozio\",\n    \"pacchetto\",\n    \"pace\",\n    \"pacifico\",\n    \"padella\",\n    \"padrone\",\n    \"paese\",\n    \"paga\",\n    \"pagina\",\n    \"palazzina\",\n    \"palesare\",\n    \"pallido\",\n    \"palo\",\n    \"palude\",\n    \"pandoro\",\n    \"pannello\",\n    \"paolo\",\n    \"paonazzo\",\n    \"paprica\",\n    \"parabola\",\n    \"parcella\",\n    \"parere\",\n    \"pargolo\",\n    \"pari\",\n    \"parlato\",\n    \"parola\",\n    \"partire\",\n    \"parvenza\",\n    \"parziale\",\n    \"passivo\",\n    \"pasticca\",\n    \"patacca\",\n    \"patologia\",\n    \"pattume\",\n    \"pavone\",\n    \"peccato\",\n    \"pedalare\",\n    \"pedonale\",\n    \"peggio\",\n    \"peloso\",\n    \"penare\",\n    \"pendice\",\n    \"penisola\",\n    \"pennuto\",\n    \"penombra\",\n    \"pensare\",\n    \"pentola\",\n    \"pepe\",\n    \"pepita\",\n    \"perbene\",\n    \"percorso\",\n    \"perdonato\",\n    \"perforare\",\n    \"pergamena\",\n    \"periodo\",\n    \"permesso\",\n    \"perno\",\n    \"perplesso\",\n    \"persuaso\",\n    \"pertugio\",\n    \"pervaso\",\n    \"pesatore\",\n    \"pesista\",\n    \"peso\",\n    \"pestifero\",\n    \"petalo\",\n    \"pettine\",\n    \"petulante\",\n    \"pezzo\",\n    \"piacere\",\n    \"pianta\",\n    \"piattino\",\n    \"piccino\",\n    \"picozza\",\n    \"piega\",\n    \"pietra\",\n    \"piffero\",\n    \"pigiama\",\n    \"pigolio\",\n    \"pigro\",\n    \"pila\",\n    \"pilifero\",\n    \"pillola\",\n    \"pilota\",\n    \"pimpante\",\n    \"pineta\",\n    \"pinna\",\n    \"pinolo\",\n    \"pioggia\",\n    \"piombo\",\n    \"piramide\",\n    \"piretico\",\n    \"pirite\",\n    \"pirolisi\",\n    \"pitone\",\n    \"pizzico\",\n    \"placebo\",\n    \"planare\",\n    \"plasma\",\n    \"platano\",\n    \"plenario\",\n    \"pochezza\",\n    \"poderoso\",\n    \"podismo\",\n    \"poesia\",\n    \"poggiare\",\n    \"polenta\",\n    \"poligono\",\n    \"pollice\",\n    \"polmonite\",\n    \"polpetta\",\n    \"polso\",\n    \"poltrona\",\n    \"polvere\",\n    \"pomice\",\n    \"pomodoro\",\n    \"ponte\",\n    \"popoloso\",\n    \"porfido\",\n    \"poroso\",\n    \"porpora\",\n    \"porre\",\n    \"portata\",\n    \"posa\",\n    \"positivo\",\n    \"possesso\",\n    \"postulato\",\n    \"potassio\",\n    \"potere\",\n    \"pranzo\",\n    \"prassi\",\n    \"pratica\",\n    \"precluso\",\n    \"predica\",\n    \"prefisso\",\n    \"pregiato\",\n    \"prelievo\",\n    \"premere\",\n    \"prenotare\",\n    \"preparato\",\n    \"presenza\",\n    \"pretesto\",\n    \"prevalso\",\n    \"prima\",\n    \"principe\",\n    \"privato\",\n    \"problema\",\n    \"procura\",\n    \"produrre\",\n    \"profumo\",\n    \"progetto\",\n    \"prolunga\",\n    \"promessa\",\n    \"pronome\",\n    \"proposta\",\n    \"proroga\",\n    \"proteso\",\n    \"prova\",\n    \"prudente\",\n    \"prugna\",\n    \"prurito\",\n    \"psiche\",\n    \"pubblico\",\n    \"pudica\",\n    \"pugilato\",\n    \"pugno\",\n    \"pulce\",\n    \"pulito\",\n    \"pulsante\",\n    \"puntare\",\n    \"pupazzo\",\n    \"pupilla\",\n    \"puro\",\n    \"quadro\",\n    \"qualcosa\",\n    \"quasi\",\n    \"querela\",\n    \"quota\",\n    \"raccolto\",\n    \"raddoppio\",\n    \"radicale\",\n    \"radunato\",\n    \"raffica\",\n    \"ragazzo\",\n    \"ragione\",\n    \"ragno\",\n    \"ramarro\",\n    \"ramingo\",\n    \"ramo\",\n    \"randagio\",\n    \"rantolare\",\n    \"rapato\",\n    \"rapina\",\n    \"rappreso\",\n    \"rasatura\",\n    \"raschiato\",\n    \"rasente\",\n    \"rassegna\",\n    \"rastrello\",\n    \"rata\",\n    \"ravveduto\",\n    \"reale\",\n    \"recepire\",\n    \"recinto\",\n    \"recluta\",\n    \"recondito\",\n    \"recupero\",\n    \"reddito\",\n    \"redimere\",\n    \"regalato\",\n    \"registro\",\n    \"regola\",\n    \"regresso\",\n    \"relazione\",\n    \"remare\",\n    \"remoto\",\n    \"renna\",\n    \"replica\",\n    \"reprimere\",\n    \"reputare\",\n    \"resa\",\n    \"residente\",\n    \"responso\",\n    \"restauro\",\n    \"rete\",\n    \"retina\",\n    \"retorica\",\n    \"rettifica\",\n    \"revocato\",\n    \"riassunto\",\n    \"ribadire\",\n    \"ribelle\",\n    \"ribrezzo\",\n    \"ricarica\",\n    \"ricco\",\n    \"ricevere\",\n    \"riciclato\",\n    \"ricordo\",\n    \"ricreduto\",\n    \"ridicolo\",\n    \"ridurre\",\n    \"rifasare\",\n    \"riflesso\",\n    \"riforma\",\n    \"rifugio\",\n    \"rigare\",\n    \"rigettato\",\n    \"righello\",\n    \"rilassato\",\n    \"rilevato\",\n    \"rimanere\",\n    \"rimbalzo\",\n    \"rimedio\",\n    \"rimorchio\",\n    \"rinascita\",\n    \"rincaro\",\n    \"rinforzo\",\n    \"rinnovo\",\n    \"rinomato\",\n    \"rinsavito\",\n    \"rintocco\",\n    \"rinuncia\",\n    \"rinvenire\",\n    \"riparato\",\n    \"ripetuto\",\n    \"ripieno\",\n    \"riportare\",\n    \"ripresa\",\n    \"ripulire\",\n    \"risata\",\n    \"rischio\",\n    \"riserva\",\n    \"risibile\",\n    \"riso\",\n    \"rispetto\",\n    \"ristoro\",\n    \"risultato\",\n    \"risvolto\",\n    \"ritardo\",\n    \"ritegno\",\n    \"ritmico\",\n    \"ritrovo\",\n    \"riunione\",\n    \"riva\",\n    \"riverso\",\n    \"rivincita\",\n    \"rivolto\",\n    \"rizoma\",\n    \"roba\",\n    \"robotico\",\n    \"robusto\",\n    \"roccia\",\n    \"roco\",\n    \"rodaggio\",\n    \"rodere\",\n    \"roditore\",\n    \"rogito\",\n    \"rollio\",\n    \"romantico\",\n    \"rompere\",\n    \"ronzio\",\n    \"rosolare\",\n    \"rospo\",\n    \"rotante\",\n    \"rotondo\",\n    \"rotula\",\n    \"rovescio\",\n    \"rubizzo\",\n    \"rubrica\",\n    \"ruga\",\n    \"rullino\",\n    \"rumine\",\n    \"rumoroso\",\n    \"ruolo\",\n    \"rupe\",\n    \"russare\",\n    \"rustico\",\n    \"sabato\",\n    \"sabbiare\",\n    \"sabotato\",\n    \"sagoma\",\n    \"salasso\",\n    \"saldatura\",\n    \"salgemma\",\n    \"salivare\",\n    \"salmone\",\n    \"salone\",\n    \"saltare\",\n    \"saluto\",\n    \"salvo\",\n    \"sapere\",\n    \"sapido\",\n    \"saporito\",\n    \"saraceno\",\n    \"sarcasmo\",\n    \"sarto\",\n    \"sassoso\",\n    \"satellite\",\n    \"satira\",\n    \"satollo\",\n    \"saturno\",\n    \"savana\",\n    \"savio\",\n    \"saziato\",\n    \"sbadiglio\",\n    \"sbalzo\",\n    \"sbancato\",\n    \"sbarra\",\n    \"sbattere\",\n    \"sbavare\",\n    \"sbendare\",\n    \"sbirciare\",\n    \"sbloccato\",\n    \"sbocciato\",\n    \"sbrinare\",\n    \"sbruffone\",\n    \"sbuffare\",\n    \"scabroso\",\n    \"scadenza\",\n    \"scala\",\n    \"scambiare\",\n    \"scandalo\",\n    \"scapola\",\n    \"scarso\",\n    \"scatenare\",\n    \"scavato\",\n    \"scelto\",\n    \"scenico\",\n    \"scettro\",\n    \"scheda\",\n    \"schiena\",\n    \"sciarpa\",\n    \"scienza\",\n    \"scindere\",\n    \"scippo\",\n    \"sciroppo\",\n    \"scivolo\",\n    \"sclerare\",\n    \"scodella\",\n    \"scolpito\",\n    \"scomparto\",\n    \"sconforto\",\n    \"scoprire\",\n    \"scorta\",\n    \"scossone\",\n    \"scozzese\",\n    \"scriba\",\n    \"scrollare\",\n    \"scrutinio\",\n    \"scuderia\",\n    \"scultore\",\n    \"scuola\",\n    \"scuro\",\n    \"scusare\",\n    \"sdebitare\",\n    \"sdoganare\",\n    \"seccatura\",\n    \"secondo\",\n    \"sedano\",\n    \"seggiola\",\n    \"segnalato\",\n    \"segregato\",\n    \"seguito\",\n    \"selciato\",\n    \"selettivo\",\n    \"sella\",\n    \"selvaggio\",\n    \"semaforo\",\n    \"sembrare\",\n    \"seme\",\n    \"seminato\",\n    \"sempre\",\n    \"senso\",\n    \"sentire\",\n    \"sepolto\",\n    \"sequenza\",\n    \"serata\",\n    \"serbato\",\n    \"sereno\",\n    \"serio\",\n    \"serpente\",\n    \"serraglio\",\n    \"servire\",\n    \"sestina\",\n    \"setola\",\n    \"settimana\",\n    \"sfacelo\",\n    \"sfaldare\",\n    \"sfamato\",\n    \"sfarzoso\",\n    \"sfaticato\",\n    \"sfera\",\n    \"sfida\",\n    \"sfilato\",\n    \"sfinge\",\n    \"sfocato\",\n    \"sfoderare\",\n    \"sfogo\",\n    \"sfoltire\",\n    \"sforzato\",\n    \"sfratto\",\n    \"sfruttato\",\n    \"sfuggito\",\n    \"sfumare\",\n    \"sfuso\",\n    \"sgabello\",\n    \"sgarbato\",\n    \"sgonfiare\",\n    \"sgorbio\",\n    \"sgrassato\",\n    \"sguardo\",\n    \"sibilo\",\n    \"siccome\",\n    \"sierra\",\n    \"sigla\",\n    \"signore\",\n    \"silenzio\",\n    \"sillaba\",\n    \"simbolo\",\n    \"simpatico\",\n    \"simulato\",\n    \"sinfonia\",\n    \"singolo\",\n    \"sinistro\",\n    \"sino\",\n    \"sintesi\",\n    \"sinusoide\",\n    \"sipario\",\n    \"sisma\",\n    \"sistole\",\n    \"situato\",\n    \"slitta\",\n    \"slogatura\",\n    \"sloveno\",\n    \"smarrito\",\n    \"smemorato\",\n    \"smentito\",\n    \"smeraldo\",\n    \"smilzo\",\n    \"smontare\",\n    \"smottato\",\n    \"smussato\",\n    \"snellire\",\n    \"snervato\",\n    \"snodo\",\n    \"sobbalzo\",\n    \"sobrio\",\n    \"soccorso\",\n    \"sociale\",\n    \"sodale\",\n    \"soffitto\",\n    \"sogno\",\n    \"soldato\",\n    \"solenne\",\n    \"solido\",\n    \"sollazzo\",\n    \"solo\",\n    \"solubile\",\n    \"solvente\",\n    \"somatico\",\n    \"somma\",\n    \"sonda\",\n    \"sonetto\",\n    \"sonnifero\",\n    \"sopire\",\n    \"soppeso\",\n    \"sopra\",\n    \"sorgere\",\n    \"sorpasso\",\n    \"sorriso\",\n    \"sorso\",\n    \"sorteggio\",\n    \"sorvolato\",\n    \"sospiro\",\n    \"sosta\",\n    \"sottile\",\n    \"spada\",\n    \"spalla\",\n    \"spargere\",\n    \"spatola\",\n    \"spavento\",\n    \"spazzola\",\n    \"specie\",\n    \"spedire\",\n    \"spegnere\",\n    \"spelatura\",\n    \"speranza\",\n    \"spessore\",\n    \"spettrale\",\n    \"spezzato\",\n    \"spia\",\n    \"spigoloso\",\n    \"spillato\",\n    \"spinoso\",\n    \"spirale\",\n    \"splendido\",\n    \"sportivo\",\n    \"sposo\",\n    \"spranga\",\n    \"sprecare\",\n    \"spronato\",\n    \"spruzzo\",\n    \"spuntino\",\n    \"squillo\",\n    \"sradicare\",\n    \"srotolato\",\n    \"stabile\",\n    \"stacco\",\n    \"staffa\",\n    \"stagnare\",\n    \"stampato\",\n    \"stantio\",\n    \"starnuto\",\n    \"stasera\",\n    \"statuto\",\n    \"stelo\",\n    \"steppa\",\n    \"sterzo\",\n    \"stiletto\",\n    \"stima\",\n    \"stirpe\",\n    \"stivale\",\n    \"stizzoso\",\n    \"stonato\",\n    \"storico\",\n    \"strappo\",\n    \"stregato\",\n    \"stridulo\",\n    \"strozzare\",\n    \"strutto\",\n    \"stuccare\",\n    \"stufo\",\n    \"stupendo\",\n    \"subentro\",\n    \"succoso\",\n    \"sudore\",\n    \"suggerito\",\n    \"sugo\",\n    \"sultano\",\n    \"suonare\",\n    \"superbo\",\n    \"supporto\",\n    \"surgelato\",\n    \"surrogato\",\n    \"sussurro\",\n    \"sutura\",\n    \"svagare\",\n    \"svedese\",\n    \"sveglio\",\n    \"svelare\",\n    \"svenuto\",\n    \"svezia\",\n    \"sviluppo\",\n    \"svista\",\n    \"svizzera\",\n    \"svolta\",\n    \"svuotare\",\n    \"tabacco\",\n    \"tabulato\",\n    \"tacciare\",\n    \"taciturno\",\n    \"tale\",\n    \"talismano\",\n    \"tampone\",\n    \"tannino\",\n    \"tara\",\n    \"tardivo\",\n    \"targato\",\n    \"tariffa\",\n    \"tarpare\",\n    \"tartaruga\",\n    \"tasto\",\n    \"tattico\",\n    \"taverna\",\n    \"tavolata\",\n    \"tazza\",\n    \"teca\",\n    \"tecnico\",\n    \"telefono\",\n    \"temerario\",\n    \"tempo\",\n    \"temuto\",\n    \"tendone\",\n    \"tenero\",\n    \"tensione\",\n    \"tentacolo\",\n    \"teorema\",\n    \"terme\",\n    \"terrazzo\",\n    \"terzetto\",\n    \"tesi\",\n    \"tesserato\",\n    \"testato\",\n    \"tetro\",\n    \"tettoia\",\n    \"tifare\",\n    \"tigella\",\n    \"timbro\",\n    \"tinto\",\n    \"tipico\",\n    \"tipografo\",\n    \"tiraggio\",\n    \"tiro\",\n    \"titanio\",\n    \"titolo\",\n    \"titubante\",\n    \"tizio\",\n    \"tizzone\",\n    \"toccare\",\n    \"tollerare\",\n    \"tolto\",\n    \"tombola\",\n    \"tomo\",\n    \"tonfo\",\n    \"tonsilla\",\n    \"topazio\",\n    \"topologia\",\n    \"toppa\",\n    \"torba\",\n    \"tornare\",\n    \"torrone\",\n    \"tortora\",\n    \"toscano\",\n    \"tossire\",\n    \"tostatura\",\n    \"totano\",\n    \"trabocco\",\n    \"trachea\",\n    \"trafila\",\n    \"tragedia\",\n    \"tralcio\",\n    \"tramonto\",\n    \"transito\",\n    \"trapano\",\n    \"trarre\",\n    \"trasloco\",\n    \"trattato\",\n    \"trave\",\n    \"treccia\",\n    \"tremolio\",\n    \"trespolo\",\n    \"tributo\",\n    \"tricheco\",\n    \"trifoglio\",\n    \"trillo\",\n    \"trincea\",\n    \"trio\",\n    \"tristezza\",\n    \"triturato\",\n    \"trivella\",\n    \"tromba\",\n    \"trono\",\n    \"troppo\",\n    \"trottola\",\n    \"trovare\",\n    \"truccato\",\n    \"tubatura\",\n    \"tuffato\",\n    \"tulipano\",\n    \"tumulto\",\n    \"tunisia\",\n    \"turbare\",\n    \"turchino\",\n    \"tuta\",\n    \"tutela\",\n    \"ubicato\",\n    \"uccello\",\n    \"uccisore\",\n    \"udire\",\n    \"uditivo\",\n    \"uffa\",\n    \"ufficio\",\n    \"uguale\",\n    \"ulisse\",\n    \"ultimato\",\n    \"umano\",\n    \"umile\",\n    \"umorismo\",\n    \"uncinetto\",\n    \"ungere\",\n    \"ungherese\",\n    \"unicorno\",\n    \"unificato\",\n    \"unisono\",\n    \"unitario\",\n    \"unte\",\n    \"uovo\",\n    \"upupa\",\n    \"uragano\",\n    \"urgenza\",\n    \"urlo\",\n    \"usanza\",\n    \"usato\",\n    \"uscito\",\n    \"usignolo\",\n    \"usuraio\",\n    \"utensile\",\n    \"utilizzo\",\n    \"utopia\",\n    \"vacante\",\n    \"vaccinato\",\n    \"vagabondo\",\n    \"vagliato\",\n    \"valanga\",\n    \"valgo\",\n    \"valico\",\n    \"valletta\",\n    \"valoroso\",\n    \"valutare\",\n    \"valvola\",\n    \"vampata\",\n    \"vangare\",\n    \"vanitoso\",\n    \"vano\",\n    \"vantaggio\",\n    \"vanvera\",\n    \"vapore\",\n    \"varano\",\n    \"varcato\",\n    \"variante\",\n    \"vasca\",\n    \"vedetta\",\n    \"vedova\",\n    \"veduto\",\n    \"vegetale\",\n    \"veicolo\",\n    \"velcro\",\n    \"velina\",\n    \"velluto\",\n    \"veloce\",\n    \"venato\",\n    \"vendemmia\",\n    \"vento\",\n    \"verace\",\n    \"verbale\",\n    \"vergogna\",\n    \"verifica\",\n    \"vero\",\n    \"verruca\",\n    \"verticale\",\n    \"vescica\",\n    \"vessillo\",\n    \"vestale\",\n    \"veterano\",\n    \"vetrina\",\n    \"vetusto\",\n    \"viandante\",\n    \"vibrante\",\n    \"vicenda\",\n    \"vichingo\",\n    \"vicinanza\",\n    \"vidimare\",\n    \"vigilia\",\n    \"vigneto\",\n    \"vigore\",\n    \"vile\",\n    \"villano\",\n    \"vimini\",\n    \"vincitore\",\n    \"viola\",\n    \"vipera\",\n    \"virgola\",\n    \"virologo\",\n    \"virulento\",\n    \"viscoso\",\n    \"visione\",\n    \"vispo\",\n    \"vissuto\",\n    \"visura\",\n    \"vita\",\n    \"vitello\",\n    \"vittima\",\n    \"vivanda\",\n    \"vivido\",\n    \"viziare\",\n    \"voce\",\n    \"voga\",\n    \"volatile\",\n    \"volere\",\n    \"volpe\",\n    \"voragine\",\n    \"vulcano\",\n    \"zampogna\",\n    \"zanna\",\n    \"zappato\",\n    \"zattera\",\n    \"zavorra\",\n    \"zefiro\",\n    \"zelante\",\n    \"zelo\",\n    \"zenzero\",\n    \"zerbino\",\n    \"zibetto\",\n    \"zinco\",\n    \"zircone\",\n    \"zitto\",\n    \"zolla\",\n    \"zotico\",\n    \"zucchero\",\n    \"zufolo\",\n    \"zulu\",\n    \"zuppa\"\n]\n","module.exports=[\n    \"abaisser\",\n    \"abandon\",\n    \"abdiquer\",\n    \"abeille\",\n    \"abolir\",\n    \"aborder\",\n    \"aboutir\",\n    \"aboyer\",\n    \"abrasif\",\n    \"abreuver\",\n    \"abriter\",\n    \"abroger\",\n    \"abrupt\",\n    \"absence\",\n    \"absolu\",\n    \"absurde\",\n    \"abusif\",\n    \"abyssal\",\n    \"académie\",\n    \"acajou\",\n    \"acarien\",\n    \"accabler\",\n    \"accepter\",\n    \"acclamer\",\n    \"accolade\",\n    \"accroche\",\n    \"accuser\",\n    \"acerbe\",\n    \"achat\",\n    \"acheter\",\n    \"aciduler\",\n    \"acier\",\n    \"acompte\",\n    \"acquérir\",\n    \"acronyme\",\n    \"acteur\",\n    \"actif\",\n    \"actuel\",\n    \"adepte\",\n    \"adéquat\",\n    \"adhésif\",\n    \"adjectif\",\n    \"adjuger\",\n    \"admettre\",\n    \"admirer\",\n    \"adopter\",\n    \"adorer\",\n    \"adoucir\",\n    \"adresse\",\n    \"adroit\",\n    \"adulte\",\n    \"adverbe\",\n    \"aérer\",\n    \"aéronef\",\n    \"affaire\",\n    \"affecter\",\n    \"affiche\",\n    \"affreux\",\n    \"affubler\",\n    \"agacer\",\n    \"agencer\",\n    \"agile\",\n    \"agiter\",\n    \"agrafer\",\n    \"agréable\",\n    \"agrume\",\n    \"aider\",\n    \"aiguille\",\n    \"ailier\",\n    \"aimable\",\n    \"aisance\",\n    \"ajouter\",\n    \"ajuster\",\n    \"alarmer\",\n    \"alchimie\",\n    \"alerte\",\n    \"algèbre\",\n    \"algue\",\n    \"aliéner\",\n    \"aliment\",\n    \"alléger\",\n    \"alliage\",\n    \"allouer\",\n    \"allumer\",\n    \"alourdir\",\n    \"alpaga\",\n    \"altesse\",\n    \"alvéole\",\n    \"amateur\",\n    \"ambigu\",\n    \"ambre\",\n    \"aménager\",\n    \"amertume\",\n    \"amidon\",\n    \"amiral\",\n    \"amorcer\",\n    \"amour\",\n    \"amovible\",\n    \"amphibie\",\n    \"ampleur\",\n    \"amusant\",\n    \"analyse\",\n    \"anaphore\",\n    \"anarchie\",\n    \"anatomie\",\n    \"ancien\",\n    \"anéantir\",\n    \"angle\",\n    \"angoisse\",\n    \"anguleux\",\n    \"animal\",\n    \"annexer\",\n    \"annonce\",\n    \"annuel\",\n    \"anodin\",\n    \"anomalie\",\n    \"anonyme\",\n    \"anormal\",\n    \"antenne\",\n    \"antidote\",\n    \"anxieux\",\n    \"apaiser\",\n    \"apéritif\",\n    \"aplanir\",\n    \"apologie\",\n    \"appareil\",\n    \"appeler\",\n    \"apporter\",\n    \"appuyer\",\n    \"aquarium\",\n    \"aqueduc\",\n    \"arbitre\",\n    \"arbuste\",\n    \"ardeur\",\n    \"ardoise\",\n    \"argent\",\n    \"arlequin\",\n    \"armature\",\n    \"armement\",\n    \"armoire\",\n    \"armure\",\n    \"arpenter\",\n    \"arracher\",\n    \"arriver\",\n    \"arroser\",\n    \"arsenic\",\n    \"artériel\",\n    \"article\",\n    \"aspect\",\n    \"asphalte\",\n    \"aspirer\",\n    \"assaut\",\n    \"asservir\",\n    \"assiette\",\n    \"associer\",\n    \"assurer\",\n    \"asticot\",\n    \"astre\",\n    \"astuce\",\n    \"atelier\",\n    \"atome\",\n    \"atrium\",\n    \"atroce\",\n    \"attaque\",\n    \"attentif\",\n    \"attirer\",\n    \"attraper\",\n    \"aubaine\",\n    \"auberge\",\n    \"audace\",\n    \"audible\",\n    \"augurer\",\n    \"aurore\",\n    \"automne\",\n    \"autruche\",\n    \"avaler\",\n    \"avancer\",\n    \"avarice\",\n    \"avenir\",\n    \"averse\",\n    \"aveugle\",\n    \"aviateur\",\n    \"avide\",\n    \"avion\",\n    \"aviser\",\n    \"avoine\",\n    \"avouer\",\n    \"avril\",\n    \"axial\",\n    \"axiome\",\n    \"badge\",\n    \"bafouer\",\n    \"bagage\",\n    \"baguette\",\n    \"baignade\",\n    \"balancer\",\n    \"balcon\",\n    \"baleine\",\n    \"balisage\",\n    \"bambin\",\n    \"bancaire\",\n    \"bandage\",\n    \"banlieue\",\n    \"bannière\",\n    \"banquier\",\n    \"barbier\",\n    \"baril\",\n    \"baron\",\n    \"barque\",\n    \"barrage\",\n    \"bassin\",\n    \"bastion\",\n    \"bataille\",\n    \"bateau\",\n    \"batterie\",\n    \"baudrier\",\n    \"bavarder\",\n    \"belette\",\n    \"bélier\",\n    \"belote\",\n    \"bénéfice\",\n    \"berceau\",\n    \"berger\",\n    \"berline\",\n    \"bermuda\",\n    \"besace\",\n    \"besogne\",\n    \"bétail\",\n    \"beurre\",\n    \"biberon\",\n    \"bicycle\",\n    \"bidule\",\n    \"bijou\",\n    \"bilan\",\n    \"bilingue\",\n    \"billard\",\n    \"binaire\",\n    \"biologie\",\n    \"biopsie\",\n    \"biotype\",\n    \"biscuit\",\n    \"bison\",\n    \"bistouri\",\n    \"bitume\",\n    \"bizarre\",\n    \"blafard\",\n    \"blague\",\n    \"blanchir\",\n    \"blessant\",\n    \"blinder\",\n    \"blond\",\n    \"bloquer\",\n    \"blouson\",\n    \"bobard\",\n    \"bobine\",\n    \"boire\",\n    \"boiser\",\n    \"bolide\",\n    \"bonbon\",\n    \"bondir\",\n    \"bonheur\",\n    \"bonifier\",\n    \"bonus\",\n    \"bordure\",\n    \"borne\",\n    \"botte\",\n    \"boucle\",\n    \"boueux\",\n    \"bougie\",\n    \"boulon\",\n    \"bouquin\",\n    \"bourse\",\n    \"boussole\",\n    \"boutique\",\n    \"boxeur\",\n    \"branche\",\n    \"brasier\",\n    \"brave\",\n    \"brebis\",\n    \"brèche\",\n    \"breuvage\",\n    \"bricoler\",\n    \"brigade\",\n    \"brillant\",\n    \"brioche\",\n    \"brique\",\n    \"brochure\",\n    \"broder\",\n    \"bronzer\",\n    \"brousse\",\n    \"broyeur\",\n    \"brume\",\n    \"brusque\",\n    \"brutal\",\n    \"bruyant\",\n    \"buffle\",\n    \"buisson\",\n    \"bulletin\",\n    \"bureau\",\n    \"burin\",\n    \"bustier\",\n    \"butiner\",\n    \"butoir\",\n    \"buvable\",\n    \"buvette\",\n    \"cabanon\",\n    \"cabine\",\n    \"cachette\",\n    \"cadeau\",\n    \"cadre\",\n    \"caféine\",\n    \"caillou\",\n    \"caisson\",\n    \"calculer\",\n    \"calepin\",\n    \"calibre\",\n    \"calmer\",\n    \"calomnie\",\n    \"calvaire\",\n    \"camarade\",\n    \"caméra\",\n    \"camion\",\n    \"campagne\",\n    \"canal\",\n    \"caneton\",\n    \"canon\",\n    \"cantine\",\n    \"canular\",\n    \"capable\",\n    \"caporal\",\n    \"caprice\",\n    \"capsule\",\n    \"capter\",\n    \"capuche\",\n    \"carabine\",\n    \"carbone\",\n    \"caresser\",\n    \"caribou\",\n    \"carnage\",\n    \"carotte\",\n    \"carreau\",\n    \"carton\",\n    \"cascade\",\n    \"casier\",\n    \"casque\",\n    \"cassure\",\n    \"causer\",\n    \"caution\",\n    \"cavalier\",\n    \"caverne\",\n    \"caviar\",\n    \"cédille\",\n    \"ceinture\",\n    \"céleste\",\n    \"cellule\",\n    \"cendrier\",\n    \"censurer\",\n    \"central\",\n    \"cercle\",\n    \"cérébral\",\n    \"cerise\",\n    \"cerner\",\n    \"cerveau\",\n    \"cesser\",\n    \"chagrin\",\n    \"chaise\",\n    \"chaleur\",\n    \"chambre\",\n    \"chance\",\n    \"chapitre\",\n    \"charbon\",\n    \"chasseur\",\n    \"chaton\",\n    \"chausson\",\n    \"chavirer\",\n    \"chemise\",\n    \"chenille\",\n    \"chéquier\",\n    \"chercher\",\n    \"cheval\",\n    \"chien\",\n    \"chiffre\",\n    \"chignon\",\n    \"chimère\",\n    \"chiot\",\n    \"chlorure\",\n    \"chocolat\",\n    \"choisir\",\n    \"chose\",\n    \"chouette\",\n    \"chrome\",\n    \"chute\",\n    \"cigare\",\n    \"cigogne\",\n    \"cimenter\",\n    \"cinéma\",\n    \"cintrer\",\n    \"circuler\",\n    \"cirer\",\n    \"cirque\",\n    \"citerne\",\n    \"citoyen\",\n    \"citron\",\n    \"civil\",\n    \"clairon\",\n    \"clameur\",\n    \"claquer\",\n    \"classe\",\n    \"clavier\",\n    \"client\",\n    \"cligner\",\n    \"climat\",\n    \"clivage\",\n    \"cloche\",\n    \"clonage\",\n    \"cloporte\",\n    \"cobalt\",\n    \"cobra\",\n    \"cocasse\",\n    \"cocotier\",\n    \"coder\",\n    \"codifier\",\n    \"coffre\",\n    \"cogner\",\n    \"cohésion\",\n    \"coiffer\",\n    \"coincer\",\n    \"colère\",\n    \"colibri\",\n    \"colline\",\n    \"colmater\",\n    \"colonel\",\n    \"combat\",\n    \"comédie\",\n    \"commande\",\n    \"compact\",\n    \"concert\",\n    \"conduire\",\n    \"confier\",\n    \"congeler\",\n    \"connoter\",\n    \"consonne\",\n    \"contact\",\n    \"convexe\",\n    \"copain\",\n    \"copie\",\n    \"corail\",\n    \"corbeau\",\n    \"cordage\",\n    \"corniche\",\n    \"corpus\",\n    \"correct\",\n    \"cortège\",\n    \"cosmique\",\n    \"costume\",\n    \"coton\",\n    \"coude\",\n    \"coupure\",\n    \"courage\",\n    \"couteau\",\n    \"couvrir\",\n    \"coyote\",\n    \"crabe\",\n    \"crainte\",\n    \"cravate\",\n    \"crayon\",\n    \"créature\",\n    \"créditer\",\n    \"crémeux\",\n    \"creuser\",\n    \"crevette\",\n    \"cribler\",\n    \"crier\",\n    \"cristal\",\n    \"critère\",\n    \"croire\",\n    \"croquer\",\n    \"crotale\",\n    \"crucial\",\n    \"cruel\",\n    \"crypter\",\n    \"cubique\",\n    \"cueillir\",\n    \"cuillère\",\n    \"cuisine\",\n    \"cuivre\",\n    \"culminer\",\n    \"cultiver\",\n    \"cumuler\",\n    \"cupide\",\n    \"curatif\",\n    \"curseur\",\n    \"cyanure\",\n    \"cycle\",\n    \"cylindre\",\n    \"cynique\",\n    \"daigner\",\n    \"damier\",\n    \"danger\",\n    \"danseur\",\n    \"dauphin\",\n    \"débattre\",\n    \"débiter\",\n    \"déborder\",\n    \"débrider\",\n    \"débutant\",\n    \"décaler\",\n    \"décembre\",\n    \"déchirer\",\n    \"décider\",\n    \"déclarer\",\n    \"décorer\",\n    \"décrire\",\n    \"décupler\",\n    \"dédale\",\n    \"déductif\",\n    \"déesse\",\n    \"défensif\",\n    \"défiler\",\n    \"défrayer\",\n    \"dégager\",\n    \"dégivrer\",\n    \"déglutir\",\n    \"dégrafer\",\n    \"déjeuner\",\n    \"délice\",\n    \"déloger\",\n    \"demander\",\n    \"demeurer\",\n    \"démolir\",\n    \"dénicher\",\n    \"dénouer\",\n    \"dentelle\",\n    \"dénuder\",\n    \"départ\",\n    \"dépenser\",\n    \"déphaser\",\n    \"déplacer\",\n    \"déposer\",\n    \"déranger\",\n    \"dérober\",\n    \"désastre\",\n    \"descente\",\n    \"désert\",\n    \"désigner\",\n    \"désobéir\",\n    \"dessiner\",\n    \"destrier\",\n    \"détacher\",\n    \"détester\",\n    \"détourer\",\n    \"détresse\",\n    \"devancer\",\n    \"devenir\",\n    \"deviner\",\n    \"devoir\",\n    \"diable\",\n    \"dialogue\",\n    \"diamant\",\n    \"dicter\",\n    \"différer\",\n    \"digérer\",\n    \"digital\",\n    \"digne\",\n    \"diluer\",\n    \"dimanche\",\n    \"diminuer\",\n    \"dioxyde\",\n    \"directif\",\n    \"diriger\",\n    \"discuter\",\n    \"disposer\",\n    \"dissiper\",\n    \"distance\",\n    \"divertir\",\n    \"diviser\",\n    \"docile\",\n    \"docteur\",\n    \"dogme\",\n    \"doigt\",\n    \"domaine\",\n    \"domicile\",\n    \"dompter\",\n    \"donateur\",\n    \"donjon\",\n    \"donner\",\n    \"dopamine\",\n    \"dortoir\",\n    \"dorure\",\n    \"dosage\",\n    \"doseur\",\n    \"dossier\",\n    \"dotation\",\n    \"douanier\",\n    \"double\",\n    \"douceur\",\n    \"douter\",\n    \"doyen\",\n    \"dragon\",\n    \"draper\",\n    \"dresser\",\n    \"dribbler\",\n    \"droiture\",\n    \"duperie\",\n    \"duplexe\",\n    \"durable\",\n    \"durcir\",\n    \"dynastie\",\n    \"éblouir\",\n    \"écarter\",\n    \"écharpe\",\n    \"échelle\",\n    \"éclairer\",\n    \"éclipse\",\n    \"éclore\",\n    \"écluse\",\n    \"école\",\n    \"économie\",\n    \"écorce\",\n    \"écouter\",\n    \"écraser\",\n    \"écrémer\",\n    \"écrivain\",\n    \"écrou\",\n    \"écume\",\n    \"écureuil\",\n    \"édifier\",\n    \"éduquer\",\n    \"effacer\",\n    \"effectif\",\n    \"effigie\",\n    \"effort\",\n    \"effrayer\",\n    \"effusion\",\n    \"égaliser\",\n    \"égarer\",\n    \"éjecter\",\n    \"élaborer\",\n    \"élargir\",\n    \"électron\",\n    \"élégant\",\n    \"éléphant\",\n    \"élève\",\n    \"éligible\",\n    \"élitisme\",\n    \"éloge\",\n    \"élucider\",\n    \"éluder\",\n    \"emballer\",\n    \"embellir\",\n    \"embryon\",\n    \"émeraude\",\n    \"émission\",\n    \"emmener\",\n    \"émotion\",\n    \"émouvoir\",\n    \"empereur\",\n    \"employer\",\n    \"emporter\",\n    \"emprise\",\n    \"émulsion\",\n    \"encadrer\",\n    \"enchère\",\n    \"enclave\",\n    \"encoche\",\n    \"endiguer\",\n    \"endosser\",\n    \"endroit\",\n    \"enduire\",\n    \"énergie\",\n    \"enfance\",\n    \"enfermer\",\n    \"enfouir\",\n    \"engager\",\n    \"engin\",\n    \"englober\",\n    \"énigme\",\n    \"enjamber\",\n    \"enjeu\",\n    \"enlever\",\n    \"ennemi\",\n    \"ennuyeux\",\n    \"enrichir\",\n    \"enrobage\",\n    \"enseigne\",\n    \"entasser\",\n    \"entendre\",\n    \"entier\",\n    \"entourer\",\n    \"entraver\",\n    \"énumérer\",\n    \"envahir\",\n    \"enviable\",\n    \"envoyer\",\n    \"enzyme\",\n    \"éolien\",\n    \"épaissir\",\n    \"épargne\",\n    \"épatant\",\n    \"épaule\",\n    \"épicerie\",\n    \"épidémie\",\n    \"épier\",\n    \"épilogue\",\n    \"épine\",\n    \"épisode\",\n    \"épitaphe\",\n    \"époque\",\n    \"épreuve\",\n    \"éprouver\",\n    \"épuisant\",\n    \"équerre\",\n    \"équipe\",\n    \"ériger\",\n    \"érosion\",\n    \"erreur\",\n    \"éruption\",\n    \"escalier\",\n    \"espadon\",\n    \"espèce\",\n    \"espiègle\",\n    \"espoir\",\n    \"esprit\",\n    \"esquiver\",\n    \"essayer\",\n    \"essence\",\n    \"essieu\",\n    \"essorer\",\n    \"estime\",\n    \"estomac\",\n    \"estrade\",\n    \"étagère\",\n    \"étaler\",\n    \"étanche\",\n    \"étatique\",\n    \"éteindre\",\n    \"étendoir\",\n    \"éternel\",\n    \"éthanol\",\n    \"éthique\",\n    \"ethnie\",\n    \"étirer\",\n    \"étoffer\",\n    \"étoile\",\n    \"étonnant\",\n    \"étourdir\",\n    \"étrange\",\n    \"étroit\",\n    \"étude\",\n    \"euphorie\",\n    \"évaluer\",\n    \"évasion\",\n    \"éventail\",\n    \"évidence\",\n    \"éviter\",\n    \"évolutif\",\n    \"évoquer\",\n    \"exact\",\n    \"exagérer\",\n    \"exaucer\",\n    \"exceller\",\n    \"excitant\",\n    \"exclusif\",\n    \"excuse\",\n    \"exécuter\",\n    \"exemple\",\n    \"exercer\",\n    \"exhaler\",\n    \"exhorter\",\n    \"exigence\",\n    \"exiler\",\n    \"exister\",\n    \"exotique\",\n    \"expédier\",\n    \"explorer\",\n    \"exposer\",\n    \"exprimer\",\n    \"exquis\",\n    \"extensif\",\n    \"extraire\",\n    \"exulter\",\n    \"fable\",\n    \"fabuleux\",\n    \"facette\",\n    \"facile\",\n    \"facture\",\n    \"faiblir\",\n    \"falaise\",\n    \"fameux\",\n    \"famille\",\n    \"farceur\",\n    \"farfelu\",\n    \"farine\",\n    \"farouche\",\n    \"fasciner\",\n    \"fatal\",\n    \"fatigue\",\n    \"faucon\",\n    \"fautif\",\n    \"faveur\",\n    \"favori\",\n    \"fébrile\",\n    \"féconder\",\n    \"fédérer\",\n    \"félin\",\n    \"femme\",\n    \"fémur\",\n    \"fendoir\",\n    \"féodal\",\n    \"fermer\",\n    \"féroce\",\n    \"ferveur\",\n    \"festival\",\n    \"feuille\",\n    \"feutre\",\n    \"février\",\n    \"fiasco\",\n    \"ficeler\",\n    \"fictif\",\n    \"fidèle\",\n    \"figure\",\n    \"filature\",\n    \"filetage\",\n    \"filière\",\n    \"filleul\",\n    \"filmer\",\n    \"filou\",\n    \"filtrer\",\n    \"financer\",\n    \"finir\",\n    \"fiole\",\n    \"firme\",\n    \"fissure\",\n    \"fixer\",\n    \"flairer\",\n    \"flamme\",\n    \"flasque\",\n    \"flatteur\",\n    \"fléau\",\n    \"flèche\",\n    \"fleur\",\n    \"flexion\",\n    \"flocon\",\n    \"flore\",\n    \"fluctuer\",\n    \"fluide\",\n    \"fluvial\",\n    \"folie\",\n    \"fonderie\",\n    \"fongible\",\n    \"fontaine\",\n    \"forcer\",\n    \"forgeron\",\n    \"formuler\",\n    \"fortune\",\n    \"fossile\",\n    \"foudre\",\n    \"fougère\",\n    \"fouiller\",\n    \"foulure\",\n    \"fourmi\",\n    \"fragile\",\n    \"fraise\",\n    \"franchir\",\n    \"frapper\",\n    \"frayeur\",\n    \"frégate\",\n    \"freiner\",\n    \"frelon\",\n    \"frémir\",\n    \"frénésie\",\n    \"frère\",\n    \"friable\",\n    \"friction\",\n    \"frisson\",\n    \"frivole\",\n    \"froid\",\n    \"fromage\",\n    \"frontal\",\n    \"frotter\",\n    \"fruit\",\n    \"fugitif\",\n    \"fuite\",\n    \"fureur\",\n    \"furieux\",\n    \"furtif\",\n    \"fusion\",\n    \"futur\",\n    \"gagner\",\n    \"galaxie\",\n    \"galerie\",\n    \"gambader\",\n    \"garantir\",\n    \"gardien\",\n    \"garnir\",\n    \"garrigue\",\n    \"gazelle\",\n    \"gazon\",\n    \"géant\",\n    \"gélatine\",\n    \"gélule\",\n    \"gendarme\",\n    \"général\",\n    \"génie\",\n    \"genou\",\n    \"gentil\",\n    \"géologie\",\n    \"géomètre\",\n    \"géranium\",\n    \"germe\",\n    \"gestuel\",\n    \"geyser\",\n    \"gibier\",\n    \"gicler\",\n    \"girafe\",\n    \"givre\",\n    \"glace\",\n    \"glaive\",\n    \"glisser\",\n    \"globe\",\n    \"gloire\",\n    \"glorieux\",\n    \"golfeur\",\n    \"gomme\",\n    \"gonfler\",\n    \"gorge\",\n    \"gorille\",\n    \"goudron\",\n    \"gouffre\",\n    \"goulot\",\n    \"goupille\",\n    \"gourmand\",\n    \"goutte\",\n    \"graduel\",\n    \"graffiti\",\n    \"graine\",\n    \"grand\",\n    \"grappin\",\n    \"gratuit\",\n    \"gravir\",\n    \"grenat\",\n    \"griffure\",\n    \"griller\",\n    \"grimper\",\n    \"grogner\",\n    \"gronder\",\n    \"grotte\",\n    \"groupe\",\n    \"gruger\",\n    \"grutier\",\n    \"gruyère\",\n    \"guépard\",\n    \"guerrier\",\n    \"guide\",\n    \"guimauve\",\n    \"guitare\",\n    \"gustatif\",\n    \"gymnaste\",\n    \"gyrostat\",\n    \"habitude\",\n    \"hachoir\",\n    \"halte\",\n    \"hameau\",\n    \"hangar\",\n    \"hanneton\",\n    \"haricot\",\n    \"harmonie\",\n    \"harpon\",\n    \"hasard\",\n    \"hélium\",\n    \"hématome\",\n    \"herbe\",\n    \"hérisson\",\n    \"hermine\",\n    \"héron\",\n    \"hésiter\",\n    \"heureux\",\n    \"hiberner\",\n    \"hibou\",\n    \"hilarant\",\n    \"histoire\",\n    \"hiver\",\n    \"homard\",\n    \"hommage\",\n    \"homogène\",\n    \"honneur\",\n    \"honorer\",\n    \"honteux\",\n    \"horde\",\n    \"horizon\",\n    \"horloge\",\n    \"hormone\",\n    \"horrible\",\n    \"houleux\",\n    \"housse\",\n    \"hublot\",\n    \"huileux\",\n    \"humain\",\n    \"humble\",\n    \"humide\",\n    \"humour\",\n    \"hurler\",\n    \"hydromel\",\n    \"hygiène\",\n    \"hymne\",\n    \"hypnose\",\n    \"idylle\",\n    \"ignorer\",\n    \"iguane\",\n    \"illicite\",\n    \"illusion\",\n    \"image\",\n    \"imbiber\",\n    \"imiter\",\n    \"immense\",\n    \"immobile\",\n    \"immuable\",\n    \"impact\",\n    \"impérial\",\n    \"implorer\",\n    \"imposer\",\n    \"imprimer\",\n    \"imputer\",\n    \"incarner\",\n    \"incendie\",\n    \"incident\",\n    \"incliner\",\n    \"incolore\",\n    \"indexer\",\n    \"indice\",\n    \"inductif\",\n    \"inédit\",\n    \"ineptie\",\n    \"inexact\",\n    \"infini\",\n    \"infliger\",\n    \"informer\",\n    \"infusion\",\n    \"ingérer\",\n    \"inhaler\",\n    \"inhiber\",\n    \"injecter\",\n    \"injure\",\n    \"innocent\",\n    \"inoculer\",\n    \"inonder\",\n    \"inscrire\",\n    \"insecte\",\n    \"insigne\",\n    \"insolite\",\n    \"inspirer\",\n    \"instinct\",\n    \"insulter\",\n    \"intact\",\n    \"intense\",\n    \"intime\",\n    \"intrigue\",\n    \"intuitif\",\n    \"inutile\",\n    \"invasion\",\n    \"inventer\",\n    \"inviter\",\n    \"invoquer\",\n    \"ironique\",\n    \"irradier\",\n    \"irréel\",\n    \"irriter\",\n    \"isoler\",\n    \"ivoire\",\n    \"ivresse\",\n    \"jaguar\",\n    \"jaillir\",\n    \"jambe\",\n    \"janvier\",\n    \"jardin\",\n    \"jauger\",\n    \"jaune\",\n    \"javelot\",\n    \"jetable\",\n    \"jeton\",\n    \"jeudi\",\n    \"jeunesse\",\n    \"joindre\",\n    \"joncher\",\n    \"jongler\",\n    \"joueur\",\n    \"jouissif\",\n    \"journal\",\n    \"jovial\",\n    \"joyau\",\n    \"joyeux\",\n    \"jubiler\",\n    \"jugement\",\n    \"junior\",\n    \"jupon\",\n    \"juriste\",\n    \"justice\",\n    \"juteux\",\n    \"juvénile\",\n    \"kayak\",\n    \"kimono\",\n    \"kiosque\",\n    \"label\",\n    \"labial\",\n    \"labourer\",\n    \"lacérer\",\n    \"lactose\",\n    \"lagune\",\n    \"laine\",\n    \"laisser\",\n    \"laitier\",\n    \"lambeau\",\n    \"lamelle\",\n    \"lampe\",\n    \"lanceur\",\n    \"langage\",\n    \"lanterne\",\n    \"lapin\",\n    \"largeur\",\n    \"larme\",\n    \"laurier\",\n    \"lavabo\",\n    \"lavoir\",\n    \"lecture\",\n    \"légal\",\n    \"léger\",\n    \"légume\",\n    \"lessive\",\n    \"lettre\",\n    \"levier\",\n    \"lexique\",\n    \"lézard\",\n    \"liasse\",\n    \"libérer\",\n    \"libre\",\n    \"licence\",\n    \"licorne\",\n    \"liège\",\n    \"lièvre\",\n    \"ligature\",\n    \"ligoter\",\n    \"ligue\",\n    \"limer\",\n    \"limite\",\n    \"limonade\",\n    \"limpide\",\n    \"linéaire\",\n    \"lingot\",\n    \"lionceau\",\n    \"liquide\",\n    \"lisière\",\n    \"lister\",\n    \"lithium\",\n    \"litige\",\n    \"littoral\",\n    \"livreur\",\n    \"logique\",\n    \"lointain\",\n    \"loisir\",\n    \"lombric\",\n    \"loterie\",\n    \"louer\",\n    \"lourd\",\n    \"loutre\",\n    \"louve\",\n    \"loyal\",\n    \"lubie\",\n    \"lucide\",\n    \"lucratif\",\n    \"lueur\",\n    \"lugubre\",\n    \"luisant\",\n    \"lumière\",\n    \"lunaire\",\n    \"lundi\",\n    \"luron\",\n    \"lutter\",\n    \"luxueux\",\n    \"machine\",\n    \"magasin\",\n    \"magenta\",\n    \"magique\",\n    \"maigre\",\n    \"maillon\",\n    \"maintien\",\n    \"mairie\",\n    \"maison\",\n    \"majorer\",\n    \"malaxer\",\n    \"maléfice\",\n    \"malheur\",\n    \"malice\",\n    \"mallette\",\n    \"mammouth\",\n    \"mandater\",\n    \"maniable\",\n    \"manquant\",\n    \"manteau\",\n    \"manuel\",\n    \"marathon\",\n    \"marbre\",\n    \"marchand\",\n    \"mardi\",\n    \"maritime\",\n    \"marqueur\",\n    \"marron\",\n    \"marteler\",\n    \"mascotte\",\n    \"massif\",\n    \"matériel\",\n    \"matière\",\n    \"matraque\",\n    \"maudire\",\n    \"maussade\",\n    \"mauve\",\n    \"maximal\",\n    \"méchant\",\n    \"méconnu\",\n    \"médaille\",\n    \"médecin\",\n    \"méditer\",\n    \"méduse\",\n    \"meilleur\",\n    \"mélange\",\n    \"mélodie\",\n    \"membre\",\n    \"mémoire\",\n    \"menacer\",\n    \"mener\",\n    \"menhir\",\n    \"mensonge\",\n    \"mentor\",\n    \"mercredi\",\n    \"mérite\",\n    \"merle\",\n    \"messager\",\n    \"mesure\",\n    \"métal\",\n    \"météore\",\n    \"méthode\",\n    \"métier\",\n    \"meuble\",\n    \"miauler\",\n    \"microbe\",\n    \"miette\",\n    \"mignon\",\n    \"migrer\",\n    \"milieu\",\n    \"million\",\n    \"mimique\",\n    \"mince\",\n    \"minéral\",\n    \"minimal\",\n    \"minorer\",\n    \"minute\",\n    \"miracle\",\n    \"miroiter\",\n    \"missile\",\n    \"mixte\",\n    \"mobile\",\n    \"moderne\",\n    \"moelleux\",\n    \"mondial\",\n    \"moniteur\",\n    \"monnaie\",\n    \"monotone\",\n    \"monstre\",\n    \"montagne\",\n    \"monument\",\n    \"moqueur\",\n    \"morceau\",\n    \"morsure\",\n    \"mortier\",\n    \"moteur\",\n    \"motif\",\n    \"mouche\",\n    \"moufle\",\n    \"moulin\",\n    \"mousson\",\n    \"mouton\",\n    \"mouvant\",\n    \"multiple\",\n    \"munition\",\n    \"muraille\",\n    \"murène\",\n    \"murmure\",\n    \"muscle\",\n    \"muséum\",\n    \"musicien\",\n    \"mutation\",\n    \"muter\",\n    \"mutuel\",\n    \"myriade\",\n    \"myrtille\",\n    \"mystère\",\n    \"mythique\",\n    \"nageur\",\n    \"nappe\",\n    \"narquois\",\n    \"narrer\",\n    \"natation\",\n    \"nation\",\n    \"nature\",\n    \"naufrage\",\n    \"nautique\",\n    \"navire\",\n    \"nébuleux\",\n    \"nectar\",\n    \"néfaste\",\n    \"négation\",\n    \"négliger\",\n    \"négocier\",\n    \"neige\",\n    \"nerveux\",\n    \"nettoyer\",\n    \"neurone\",\n    \"neutron\",\n    \"neveu\",\n    \"niche\",\n    \"nickel\",\n    \"nitrate\",\n    \"niveau\",\n    \"noble\",\n    \"nocif\",\n    \"nocturne\",\n    \"noirceur\",\n    \"noisette\",\n    \"nomade\",\n    \"nombreux\",\n    \"nommer\",\n    \"normatif\",\n    \"notable\",\n    \"notifier\",\n    \"notoire\",\n    \"nourrir\",\n    \"nouveau\",\n    \"novateur\",\n    \"novembre\",\n    \"novice\",\n    \"nuage\",\n    \"nuancer\",\n    \"nuire\",\n    \"nuisible\",\n    \"numéro\",\n    \"nuptial\",\n    \"nuque\",\n    \"nutritif\",\n    \"obéir\",\n    \"objectif\",\n    \"obliger\",\n    \"obscur\",\n    \"observer\",\n    \"obstacle\",\n    \"obtenir\",\n    \"obturer\",\n    \"occasion\",\n    \"occuper\",\n    \"océan\",\n    \"octobre\",\n    \"octroyer\",\n    \"octupler\",\n    \"oculaire\",\n    \"odeur\",\n    \"odorant\",\n    \"offenser\",\n    \"officier\",\n    \"offrir\",\n    \"ogive\",\n    \"oiseau\",\n    \"oisillon\",\n    \"olfactif\",\n    \"olivier\",\n    \"ombrage\",\n    \"omettre\",\n    \"onctueux\",\n    \"onduler\",\n    \"onéreux\",\n    \"onirique\",\n    \"opale\",\n    \"opaque\",\n    \"opérer\",\n    \"opinion\",\n    \"opportun\",\n    \"opprimer\",\n    \"opter\",\n    \"optique\",\n    \"orageux\",\n    \"orange\",\n    \"orbite\",\n    \"ordonner\",\n    \"oreille\",\n    \"organe\",\n    \"orgueil\",\n    \"orifice\",\n    \"ornement\",\n    \"orque\",\n    \"ortie\",\n    \"osciller\",\n    \"osmose\",\n    \"ossature\",\n    \"otarie\",\n    \"ouragan\",\n    \"ourson\",\n    \"outil\",\n    \"outrager\",\n    \"ouvrage\",\n    \"ovation\",\n    \"oxyde\",\n    \"oxygène\",\n    \"ozone\",\n    \"paisible\",\n    \"palace\",\n    \"palmarès\",\n    \"palourde\",\n    \"palper\",\n    \"panache\",\n    \"panda\",\n    \"pangolin\",\n    \"paniquer\",\n    \"panneau\",\n    \"panorama\",\n    \"pantalon\",\n    \"papaye\",\n    \"papier\",\n    \"papoter\",\n    \"papyrus\",\n    \"paradoxe\",\n    \"parcelle\",\n    \"paresse\",\n    \"parfumer\",\n    \"parler\",\n    \"parole\",\n    \"parrain\",\n    \"parsemer\",\n    \"partager\",\n    \"parure\",\n    \"parvenir\",\n    \"passion\",\n    \"pastèque\",\n    \"paternel\",\n    \"patience\",\n    \"patron\",\n    \"pavillon\",\n    \"pavoiser\",\n    \"payer\",\n    \"paysage\",\n    \"peigne\",\n    \"peintre\",\n    \"pelage\",\n    \"pélican\",\n    \"pelle\",\n    \"pelouse\",\n    \"peluche\",\n    \"pendule\",\n    \"pénétrer\",\n    \"pénible\",\n    \"pensif\",\n    \"pénurie\",\n    \"pépite\",\n    \"péplum\",\n    \"perdrix\",\n    \"perforer\",\n    \"période\",\n    \"permuter\",\n    \"perplexe\",\n    \"persil\",\n    \"perte\",\n    \"peser\",\n    \"pétale\",\n    \"petit\",\n    \"pétrir\",\n    \"peuple\",\n    \"pharaon\",\n    \"phobie\",\n    \"phoque\",\n    \"photon\",\n    \"phrase\",\n    \"physique\",\n    \"piano\",\n    \"pictural\",\n    \"pièce\",\n    \"pierre\",\n    \"pieuvre\",\n    \"pilote\",\n    \"pinceau\",\n    \"pipette\",\n    \"piquer\",\n    \"pirogue\",\n    \"piscine\",\n    \"piston\",\n    \"pivoter\",\n    \"pixel\",\n    \"pizza\",\n    \"placard\",\n    \"plafond\",\n    \"plaisir\",\n    \"planer\",\n    \"plaque\",\n    \"plastron\",\n    \"plateau\",\n    \"pleurer\",\n    \"plexus\",\n    \"pliage\",\n    \"plomb\",\n    \"plonger\",\n    \"pluie\",\n    \"plumage\",\n    \"pochette\",\n    \"poésie\",\n    \"poète\",\n    \"pointe\",\n    \"poirier\",\n    \"poisson\",\n    \"poivre\",\n    \"polaire\",\n    \"policier\",\n    \"pollen\",\n    \"polygone\",\n    \"pommade\",\n    \"pompier\",\n    \"ponctuel\",\n    \"pondérer\",\n    \"poney\",\n    \"portique\",\n    \"position\",\n    \"posséder\",\n    \"posture\",\n    \"potager\",\n    \"poteau\",\n    \"potion\",\n    \"pouce\",\n    \"poulain\",\n    \"poumon\",\n    \"pourpre\",\n    \"poussin\",\n    \"pouvoir\",\n    \"prairie\",\n    \"pratique\",\n    \"précieux\",\n    \"prédire\",\n    \"préfixe\",\n    \"prélude\",\n    \"prénom\",\n    \"présence\",\n    \"prétexte\",\n    \"prévoir\",\n    \"primitif\",\n    \"prince\",\n    \"prison\",\n    \"priver\",\n    \"problème\",\n    \"procéder\",\n    \"prodige\",\n    \"profond\",\n    \"progrès\",\n    \"proie\",\n    \"projeter\",\n    \"prologue\",\n    \"promener\",\n    \"propre\",\n    \"prospère\",\n    \"protéger\",\n    \"prouesse\",\n    \"proverbe\",\n    \"prudence\",\n    \"pruneau\",\n    \"psychose\",\n    \"public\",\n    \"puceron\",\n    \"puiser\",\n    \"pulpe\",\n    \"pulsar\",\n    \"punaise\",\n    \"punitif\",\n    \"pupitre\",\n    \"purifier\",\n    \"puzzle\",\n    \"pyramide\",\n    \"quasar\",\n    \"querelle\",\n    \"question\",\n    \"quiétude\",\n    \"quitter\",\n    \"quotient\",\n    \"racine\",\n    \"raconter\",\n    \"radieux\",\n    \"ragondin\",\n    \"raideur\",\n    \"raisin\",\n    \"ralentir\",\n    \"rallonge\",\n    \"ramasser\",\n    \"rapide\",\n    \"rasage\",\n    \"ratisser\",\n    \"ravager\",\n    \"ravin\",\n    \"rayonner\",\n    \"réactif\",\n    \"réagir\",\n    \"réaliser\",\n    \"réanimer\",\n    \"recevoir\",\n    \"réciter\",\n    \"réclamer\",\n    \"récolter\",\n    \"recruter\",\n    \"reculer\",\n    \"recycler\",\n    \"rédiger\",\n    \"redouter\",\n    \"refaire\",\n    \"réflexe\",\n    \"réformer\",\n    \"refrain\",\n    \"refuge\",\n    \"régalien\",\n    \"région\",\n    \"réglage\",\n    \"régulier\",\n    \"réitérer\",\n    \"rejeter\",\n    \"rejouer\",\n    \"relatif\",\n    \"relever\",\n    \"relief\",\n    \"remarque\",\n    \"remède\",\n    \"remise\",\n    \"remonter\",\n    \"remplir\",\n    \"remuer\",\n    \"renard\",\n    \"renfort\",\n    \"renifler\",\n    \"renoncer\",\n    \"rentrer\",\n    \"renvoi\",\n    \"replier\",\n    \"reporter\",\n    \"reprise\",\n    \"reptile\",\n    \"requin\",\n    \"réserve\",\n    \"résineux\",\n    \"résoudre\",\n    \"respect\",\n    \"rester\",\n    \"résultat\",\n    \"rétablir\",\n    \"retenir\",\n    \"réticule\",\n    \"retomber\",\n    \"retracer\",\n    \"réunion\",\n    \"réussir\",\n    \"revanche\",\n    \"revivre\",\n    \"révolte\",\n    \"révulsif\",\n    \"richesse\",\n    \"rideau\",\n    \"rieur\",\n    \"rigide\",\n    \"rigoler\",\n    \"rincer\",\n    \"riposter\",\n    \"risible\",\n    \"risque\",\n    \"rituel\",\n    \"rival\",\n    \"rivière\",\n    \"rocheux\",\n    \"romance\",\n    \"rompre\",\n    \"ronce\",\n    \"rondin\",\n    \"roseau\",\n    \"rosier\",\n    \"rotatif\",\n    \"rotor\",\n    \"rotule\",\n    \"rouge\",\n    \"rouille\",\n    \"rouleau\",\n    \"routine\",\n    \"royaume\",\n    \"ruban\",\n    \"rubis\",\n    \"ruche\",\n    \"ruelle\",\n    \"rugueux\",\n    \"ruiner\",\n    \"ruisseau\",\n    \"ruser\",\n    \"rustique\",\n    \"rythme\",\n    \"sabler\",\n    \"saboter\",\n    \"sabre\",\n    \"sacoche\",\n    \"safari\",\n    \"sagesse\",\n    \"saisir\",\n    \"salade\",\n    \"salive\",\n    \"salon\",\n    \"saluer\",\n    \"samedi\",\n    \"sanction\",\n    \"sanglier\",\n    \"sarcasme\",\n    \"sardine\",\n    \"saturer\",\n    \"saugrenu\",\n    \"saumon\",\n    \"sauter\",\n    \"sauvage\",\n    \"savant\",\n    \"savonner\",\n    \"scalpel\",\n    \"scandale\",\n    \"scélérat\",\n    \"scénario\",\n    \"sceptre\",\n    \"schéma\",\n    \"science\",\n    \"scinder\",\n    \"score\",\n    \"scrutin\",\n    \"sculpter\",\n    \"séance\",\n    \"sécable\",\n    \"sécher\",\n    \"secouer\",\n    \"sécréter\",\n    \"sédatif\",\n    \"séduire\",\n    \"seigneur\",\n    \"séjour\",\n    \"sélectif\",\n    \"semaine\",\n    \"sembler\",\n    \"semence\",\n    \"séminal\",\n    \"sénateur\",\n    \"sensible\",\n    \"sentence\",\n    \"séparer\",\n    \"séquence\",\n    \"serein\",\n    \"sergent\",\n    \"sérieux\",\n    \"serrure\",\n    \"sérum\",\n    \"service\",\n    \"sésame\",\n    \"sévir\",\n    \"sevrage\",\n    \"sextuple\",\n    \"sidéral\",\n    \"siècle\",\n    \"siéger\",\n    \"siffler\",\n    \"sigle\",\n    \"signal\",\n    \"silence\",\n    \"silicium\",\n    \"simple\",\n    \"sincère\",\n    \"sinistre\",\n    \"siphon\",\n    \"sirop\",\n    \"sismique\",\n    \"situer\",\n    \"skier\",\n    \"social\",\n    \"socle\",\n    \"sodium\",\n    \"soigneux\",\n    \"soldat\",\n    \"soleil\",\n    \"solitude\",\n    \"soluble\",\n    \"sombre\",\n    \"sommeil\",\n    \"somnoler\",\n    \"sonde\",\n    \"songeur\",\n    \"sonnette\",\n    \"sonore\",\n    \"sorcier\",\n    \"sortir\",\n    \"sosie\",\n    \"sottise\",\n    \"soucieux\",\n    \"soudure\",\n    \"souffle\",\n    \"soulever\",\n    \"soupape\",\n    \"source\",\n    \"soutirer\",\n    \"souvenir\",\n    \"spacieux\",\n    \"spatial\",\n    \"spécial\",\n    \"sphère\",\n    \"spiral\",\n    \"stable\",\n    \"station\",\n    \"sternum\",\n    \"stimulus\",\n    \"stipuler\",\n    \"strict\",\n    \"studieux\",\n    \"stupeur\",\n    \"styliste\",\n    \"sublime\",\n    \"substrat\",\n    \"subtil\",\n    \"subvenir\",\n    \"succès\",\n    \"sucre\",\n    \"suffixe\",\n    \"suggérer\",\n    \"suiveur\",\n    \"sulfate\",\n    \"superbe\",\n    \"supplier\",\n    \"surface\",\n    \"suricate\",\n    \"surmener\",\n    \"surprise\",\n    \"sursaut\",\n    \"survie\",\n    \"suspect\",\n    \"syllabe\",\n    \"symbole\",\n    \"symétrie\",\n    \"synapse\",\n    \"syntaxe\",\n    \"système\",\n    \"tabac\",\n    \"tablier\",\n    \"tactile\",\n    \"tailler\",\n    \"talent\",\n    \"talisman\",\n    \"talonner\",\n    \"tambour\",\n    \"tamiser\",\n    \"tangible\",\n    \"tapis\",\n    \"taquiner\",\n    \"tarder\",\n    \"tarif\",\n    \"tartine\",\n    \"tasse\",\n    \"tatami\",\n    \"tatouage\",\n    \"taupe\",\n    \"taureau\",\n    \"taxer\",\n    \"témoin\",\n    \"temporel\",\n    \"tenaille\",\n    \"tendre\",\n    \"teneur\",\n    \"tenir\",\n    \"tension\",\n    \"terminer\",\n    \"terne\",\n    \"terrible\",\n    \"tétine\",\n    \"texte\",\n    \"thème\",\n    \"théorie\",\n    \"thérapie\",\n    \"thorax\",\n    \"tibia\",\n    \"tiède\",\n    \"timide\",\n    \"tirelire\",\n    \"tiroir\",\n    \"tissu\",\n    \"titane\",\n    \"titre\",\n    \"tituber\",\n    \"toboggan\",\n    \"tolérant\",\n    \"tomate\",\n    \"tonique\",\n    \"tonneau\",\n    \"toponyme\",\n    \"torche\",\n    \"tordre\",\n    \"tornade\",\n    \"torpille\",\n    \"torrent\",\n    \"torse\",\n    \"tortue\",\n    \"totem\",\n    \"toucher\",\n    \"tournage\",\n    \"tousser\",\n    \"toxine\",\n    \"traction\",\n    \"trafic\",\n    \"tragique\",\n    \"trahir\",\n    \"train\",\n    \"trancher\",\n    \"travail\",\n    \"trèfle\",\n    \"tremper\",\n    \"trésor\",\n    \"treuil\",\n    \"triage\",\n    \"tribunal\",\n    \"tricoter\",\n    \"trilogie\",\n    \"triomphe\",\n    \"tripler\",\n    \"triturer\",\n    \"trivial\",\n    \"trombone\",\n    \"tronc\",\n    \"tropical\",\n    \"troupeau\",\n    \"tuile\",\n    \"tulipe\",\n    \"tumulte\",\n    \"tunnel\",\n    \"turbine\",\n    \"tuteur\",\n    \"tutoyer\",\n    \"tuyau\",\n    \"tympan\",\n    \"typhon\",\n    \"typique\",\n    \"tyran\",\n    \"ubuesque\",\n    \"ultime\",\n    \"ultrason\",\n    \"unanime\",\n    \"unifier\",\n    \"union\",\n    \"unique\",\n    \"unitaire\",\n    \"univers\",\n    \"uranium\",\n    \"urbain\",\n    \"urticant\",\n    \"usage\",\n    \"usine\",\n    \"usuel\",\n    \"usure\",\n    \"utile\",\n    \"utopie\",\n    \"vacarme\",\n    \"vaccin\",\n    \"vagabond\",\n    \"vague\",\n    \"vaillant\",\n    \"vaincre\",\n    \"vaisseau\",\n    \"valable\",\n    \"valise\",\n    \"vallon\",\n    \"valve\",\n    \"vampire\",\n    \"vanille\",\n    \"vapeur\",\n    \"varier\",\n    \"vaseux\",\n    \"vassal\",\n    \"vaste\",\n    \"vecteur\",\n    \"vedette\",\n    \"végétal\",\n    \"véhicule\",\n    \"veinard\",\n    \"véloce\",\n    \"vendredi\",\n    \"vénérer\",\n    \"venger\",\n    \"venimeux\",\n    \"ventouse\",\n    \"verdure\",\n    \"vérin\",\n    \"vernir\",\n    \"verrou\",\n    \"verser\",\n    \"vertu\",\n    \"veston\",\n    \"vétéran\",\n    \"vétuste\",\n    \"vexant\",\n    \"vexer\",\n    \"viaduc\",\n    \"viande\",\n    \"victoire\",\n    \"vidange\",\n    \"vidéo\",\n    \"vignette\",\n    \"vigueur\",\n    \"vilain\",\n    \"village\",\n    \"vinaigre\",\n    \"violon\",\n    \"vipère\",\n    \"virement\",\n    \"virtuose\",\n    \"virus\",\n    \"visage\",\n    \"viseur\",\n    \"vision\",\n    \"visqueux\",\n    \"visuel\",\n    \"vital\",\n    \"vitesse\",\n    \"viticole\",\n    \"vitrine\",\n    \"vivace\",\n    \"vivipare\",\n    \"vocation\",\n    \"voguer\",\n    \"voile\",\n    \"voisin\",\n    \"voiture\",\n    \"volaille\",\n    \"volcan\",\n    \"voltiger\",\n    \"volume\",\n    \"vorace\",\n    \"vortex\",\n    \"voter\",\n    \"vouloir\",\n    \"voyage\",\n    \"voyelle\",\n    \"wagon\",\n    \"xénon\",\n    \"yacht\",\n    \"zèbre\",\n    \"zénith\",\n    \"zeste\",\n    \"zoologie\"\n]\n","module.exports=[\n    \"가격\",\n    \"가끔\",\n    \"가난\",\n    \"가능\",\n    \"가득\",\n    \"가르침\",\n    \"가뭄\",\n    \"가방\",\n    \"가상\",\n    \"가슴\",\n    \"가운데\",\n    \"가을\",\n    \"가이드\",\n    \"가입\",\n    \"가장\",\n    \"가정\",\n    \"가족\",\n    \"가죽\",\n    \"각오\",\n    \"각자\",\n    \"간격\",\n    \"간부\",\n    \"간섭\",\n    \"간장\",\n    \"간접\",\n    \"간판\",\n    \"갈등\",\n    \"갈비\",\n    \"갈색\",\n    \"갈증\",\n    \"감각\",\n    \"감기\",\n    \"감소\",\n    \"감수성\",\n    \"감자\",\n    \"감정\",\n    \"갑자기\",\n    \"강남\",\n    \"강당\",\n    \"강도\",\n    \"강력히\",\n    \"강변\",\n    \"강북\",\n    \"강사\",\n    \"강수량\",\n    \"강아지\",\n    \"강원도\",\n    \"강의\",\n    \"강제\",\n    \"강조\",\n    \"같이\",\n    \"개구리\",\n    \"개나리\",\n    \"개방\",\n    \"개별\",\n    \"개선\",\n    \"개성\",\n    \"개인\",\n    \"객관적\",\n    \"거실\",\n    \"거액\",\n    \"거울\",\n    \"거짓\",\n    \"거품\",\n    \"걱정\",\n    \"건강\",\n    \"건물\",\n    \"건설\",\n    \"건조\",\n    \"건축\",\n    \"걸음\",\n    \"검사\",\n    \"검토\",\n    \"게시판\",\n    \"게임\",\n    \"겨울\",\n    \"견해\",\n    \"결과\",\n    \"결국\",\n    \"결론\",\n    \"결석\",\n    \"결승\",\n    \"결심\",\n    \"결정\",\n    \"결혼\",\n    \"경계\",\n    \"경고\",\n    \"경기\",\n    \"경력\",\n    \"경복궁\",\n    \"경비\",\n    \"경상도\",\n    \"경영\",\n    \"경우\",\n    \"경쟁\",\n    \"경제\",\n    \"경주\",\n    \"경찰\",\n    \"경치\",\n    \"경향\",\n    \"경험\",\n    \"계곡\",\n    \"계단\",\n    \"계란\",\n    \"계산\",\n    \"계속\",\n    \"계약\",\n    \"계절\",\n    \"계층\",\n    \"계획\",\n    \"고객\",\n    \"고구려\",\n    \"고궁\",\n    \"고급\",\n    \"고등학생\",\n    \"고무신\",\n    \"고민\",\n    \"고양이\",\n    \"고장\",\n    \"고전\",\n    \"고집\",\n    \"고춧가루\",\n    \"고통\",\n    \"고향\",\n    \"곡식\",\n    \"골목\",\n    \"골짜기\",\n    \"골프\",\n    \"공간\",\n    \"공개\",\n    \"공격\",\n    \"공군\",\n    \"공급\",\n    \"공기\",\n    \"공동\",\n    \"공무원\",\n    \"공부\",\n    \"공사\",\n    \"공식\",\n    \"공업\",\n    \"공연\",\n    \"공원\",\n    \"공장\",\n    \"공짜\",\n    \"공책\",\n    \"공통\",\n    \"공포\",\n    \"공항\",\n    \"공휴일\",\n    \"과목\",\n    \"과일\",\n    \"과장\",\n    \"과정\",\n    \"과학\",\n    \"관객\",\n    \"관계\",\n    \"관광\",\n    \"관념\",\n    \"관람\",\n    \"관련\",\n    \"관리\",\n    \"관습\",\n    \"관심\",\n    \"관점\",\n    \"관찰\",\n    \"광경\",\n    \"광고\",\n    \"광장\",\n    \"광주\",\n    \"괴로움\",\n    \"굉장히\",\n    \"교과서\",\n    \"교문\",\n    \"교복\",\n    \"교실\",\n    \"교양\",\n    \"교육\",\n    \"교장\",\n    \"교직\",\n    \"교통\",\n    \"교환\",\n    \"교훈\",\n    \"구경\",\n    \"구름\",\n    \"구멍\",\n    \"구별\",\n    \"구분\",\n    \"구석\",\n    \"구성\",\n    \"구속\",\n    \"구역\",\n    \"구입\",\n    \"구청\",\n    \"구체적\",\n    \"국가\",\n    \"국기\",\n    \"국내\",\n    \"국립\",\n    \"국물\",\n    \"국민\",\n    \"국수\",\n    \"국어\",\n    \"국왕\",\n    \"국적\",\n    \"국제\",\n    \"국회\",\n    \"군대\",\n    \"군사\",\n    \"군인\",\n    \"궁극적\",\n    \"권리\",\n    \"권위\",\n    \"권투\",\n    \"귀국\",\n    \"귀신\",\n    \"규정\",\n    \"규칙\",\n    \"균형\",\n    \"그날\",\n    \"그냥\",\n    \"그늘\",\n    \"그러나\",\n    \"그룹\",\n    \"그릇\",\n    \"그림\",\n    \"그제서야\",\n    \"그토록\",\n    \"극복\",\n    \"극히\",\n    \"근거\",\n    \"근교\",\n    \"근래\",\n    \"근로\",\n    \"근무\",\n    \"근본\",\n    \"근원\",\n    \"근육\",\n    \"근처\",\n    \"글씨\",\n    \"글자\",\n    \"금강산\",\n    \"금고\",\n    \"금년\",\n    \"금메달\",\n    \"금액\",\n    \"금연\",\n    \"금요일\",\n    \"금지\",\n    \"긍정적\",\n    \"기간\",\n    \"기관\",\n    \"기념\",\n    \"기능\",\n    \"기독교\",\n    \"기둥\",\n    \"기록\",\n    \"기름\",\n    \"기법\",\n    \"기본\",\n    \"기분\",\n    \"기쁨\",\n    \"기숙사\",\n    \"기술\",\n    \"기억\",\n    \"기업\",\n    \"기온\",\n    \"기운\",\n    \"기원\",\n    \"기적\",\n    \"기준\",\n    \"기침\",\n    \"기혼\",\n    \"기획\",\n    \"긴급\",\n    \"긴장\",\n    \"길이\",\n    \"김밥\",\n    \"김치\",\n    \"김포공항\",\n    \"깍두기\",\n    \"깜빡\",\n    \"깨달음\",\n    \"깨소금\",\n    \"껍질\",\n    \"꼭대기\",\n    \"꽃잎\",\n    \"나들이\",\n    \"나란히\",\n    \"나머지\",\n    \"나물\",\n    \"나침반\",\n    \"나흘\",\n    \"낙엽\",\n    \"난방\",\n    \"날개\",\n    \"날씨\",\n    \"날짜\",\n    \"남녀\",\n    \"남대문\",\n    \"남매\",\n    \"남산\",\n    \"남자\",\n    \"남편\",\n    \"남학생\",\n    \"낭비\",\n    \"낱말\",\n    \"내년\",\n    \"내용\",\n    \"내일\",\n    \"냄비\",\n    \"냄새\",\n    \"냇물\",\n    \"냉동\",\n    \"냉면\",\n    \"냉방\",\n    \"냉장고\",\n    \"넥타이\",\n    \"넷째\",\n    \"노동\",\n    \"노란색\",\n    \"노력\",\n    \"노인\",\n    \"녹음\",\n    \"녹차\",\n    \"녹화\",\n    \"논리\",\n    \"논문\",\n    \"논쟁\",\n    \"놀이\",\n    \"농구\",\n    \"농담\",\n    \"농민\",\n    \"농부\",\n    \"농업\",\n    \"농장\",\n    \"농촌\",\n    \"높이\",\n    \"눈동자\",\n    \"눈물\",\n    \"눈썹\",\n    \"뉴욕\",\n    \"느낌\",\n    \"늑대\",\n    \"능동적\",\n    \"능력\",\n    \"다방\",\n    \"다양성\",\n    \"다음\",\n    \"다이어트\",\n    \"다행\",\n    \"단계\",\n    \"단골\",\n    \"단독\",\n    \"단맛\",\n    \"단순\",\n    \"단어\",\n    \"단위\",\n    \"단점\",\n    \"단체\",\n    \"단추\",\n    \"단편\",\n    \"단풍\",\n    \"달걀\",\n    \"달러\",\n    \"달력\",\n    \"달리\",\n    \"닭고기\",\n    \"담당\",\n    \"담배\",\n    \"담요\",\n    \"담임\",\n    \"답변\",\n    \"답장\",\n    \"당근\",\n    \"당분간\",\n    \"당연히\",\n    \"당장\",\n    \"대규모\",\n    \"대낮\",\n    \"대단히\",\n    \"대답\",\n    \"대도시\",\n    \"대략\",\n    \"대량\",\n    \"대륙\",\n    \"대문\",\n    \"대부분\",\n    \"대신\",\n    \"대응\",\n    \"대장\",\n    \"대전\",\n    \"대접\",\n    \"대중\",\n    \"대책\",\n    \"대출\",\n    \"대충\",\n    \"대통령\",\n    \"대학\",\n    \"대한민국\",\n    \"대합실\",\n    \"대형\",\n    \"덩어리\",\n    \"데이트\",\n    \"도대체\",\n    \"도덕\",\n    \"도둑\",\n    \"도망\",\n    \"도서관\",\n    \"도심\",\n    \"도움\",\n    \"도입\",\n    \"도자기\",\n    \"도저히\",\n    \"도전\",\n    \"도중\",\n    \"도착\",\n    \"독감\",\n    \"독립\",\n    \"독서\",\n    \"독일\",\n    \"독창적\",\n    \"동화책\",\n    \"뒷모습\",\n    \"뒷산\",\n    \"딸아이\",\n    \"마누라\",\n    \"마늘\",\n    \"마당\",\n    \"마라톤\",\n    \"마련\",\n    \"마무리\",\n    \"마사지\",\n    \"마약\",\n    \"마요네즈\",\n    \"마을\",\n    \"마음\",\n    \"마이크\",\n    \"마중\",\n    \"마지막\",\n    \"마찬가지\",\n    \"마찰\",\n    \"마흔\",\n    \"막걸리\",\n    \"막내\",\n    \"막상\",\n    \"만남\",\n    \"만두\",\n    \"만세\",\n    \"만약\",\n    \"만일\",\n    \"만점\",\n    \"만족\",\n    \"만화\",\n    \"많이\",\n    \"말기\",\n    \"말씀\",\n    \"말투\",\n    \"맘대로\",\n    \"망원경\",\n    \"매년\",\n    \"매달\",\n    \"매력\",\n    \"매번\",\n    \"매스컴\",\n    \"매일\",\n    \"매장\",\n    \"맥주\",\n    \"먹이\",\n    \"먼저\",\n    \"먼지\",\n    \"멀리\",\n    \"메일\",\n    \"며느리\",\n    \"며칠\",\n    \"면담\",\n    \"멸치\",\n    \"명단\",\n    \"명령\",\n    \"명예\",\n    \"명의\",\n    \"명절\",\n    \"명칭\",\n    \"명함\",\n    \"모금\",\n    \"모니터\",\n    \"모델\",\n    \"모든\",\n    \"모범\",\n    \"모습\",\n    \"모양\",\n    \"모임\",\n    \"모조리\",\n    \"모집\",\n    \"모퉁이\",\n    \"목걸이\",\n    \"목록\",\n    \"목사\",\n    \"목소리\",\n    \"목숨\",\n    \"목적\",\n    \"목표\",\n    \"몰래\",\n    \"몸매\",\n    \"몸무게\",\n    \"몸살\",\n    \"몸속\",\n    \"몸짓\",\n    \"몸통\",\n    \"몹시\",\n    \"무관심\",\n    \"무궁화\",\n    \"무더위\",\n    \"무덤\",\n    \"무릎\",\n    \"무슨\",\n    \"무엇\",\n    \"무역\",\n    \"무용\",\n    \"무조건\",\n    \"무지개\",\n    \"무척\",\n    \"문구\",\n    \"문득\",\n    \"문법\",\n    \"문서\",\n    \"문제\",\n    \"문학\",\n    \"문화\",\n    \"물가\",\n    \"물건\",\n    \"물결\",\n    \"물고기\",\n    \"물론\",\n    \"물리학\",\n    \"물음\",\n    \"물질\",\n    \"물체\",\n    \"미국\",\n    \"미디어\",\n    \"미사일\",\n    \"미술\",\n    \"미역\",\n    \"미용실\",\n    \"미움\",\n    \"미인\",\n    \"미팅\",\n    \"미혼\",\n    \"민간\",\n    \"민족\",\n    \"민주\",\n    \"믿음\",\n    \"밀가루\",\n    \"밀리미터\",\n    \"밑바닥\",\n    \"바가지\",\n    \"바구니\",\n    \"바나나\",\n    \"바늘\",\n    \"바닥\",\n    \"바닷가\",\n    \"바람\",\n    \"바이러스\",\n    \"바탕\",\n    \"박물관\",\n    \"박사\",\n    \"박수\",\n    \"반대\",\n    \"반드시\",\n    \"반말\",\n    \"반발\",\n    \"반성\",\n    \"반응\",\n    \"반장\",\n    \"반죽\",\n    \"반지\",\n    \"반찬\",\n    \"받침\",\n    \"발가락\",\n    \"발걸음\",\n    \"발견\",\n    \"발달\",\n    \"발레\",\n    \"발목\",\n    \"발바닥\",\n    \"발생\",\n    \"발음\",\n    \"발자국\",\n    \"발전\",\n    \"발톱\",\n    \"발표\",\n    \"밤하늘\",\n    \"밥그릇\",\n    \"밥맛\",\n    \"밥상\",\n    \"밥솥\",\n    \"방금\",\n    \"방면\",\n    \"방문\",\n    \"방바닥\",\n    \"방법\",\n    \"방송\",\n    \"방식\",\n    \"방안\",\n    \"방울\",\n    \"방지\",\n    \"방학\",\n    \"방해\",\n    \"방향\",\n    \"배경\",\n    \"배꼽\",\n    \"배달\",\n    \"배드민턴\",\n    \"백두산\",\n    \"백색\",\n    \"백성\",\n    \"백인\",\n    \"백제\",\n    \"백화점\",\n    \"버릇\",\n    \"버섯\",\n    \"버튼\",\n    \"번개\",\n    \"번역\",\n    \"번지\",\n    \"번호\",\n    \"벌금\",\n    \"벌레\",\n    \"벌써\",\n    \"범위\",\n    \"범인\",\n    \"범죄\",\n    \"법률\",\n    \"법원\",\n    \"법적\",\n    \"법칙\",\n    \"베이징\",\n    \"벨트\",\n    \"변경\",\n    \"변동\",\n    \"변명\",\n    \"변신\",\n    \"변호사\",\n    \"변화\",\n    \"별도\",\n    \"별명\",\n    \"별일\",\n    \"병실\",\n    \"병아리\",\n    \"병원\",\n    \"보관\",\n    \"보너스\",\n    \"보라색\",\n    \"보람\",\n    \"보름\",\n    \"보상\",\n    \"보안\",\n    \"보자기\",\n    \"보장\",\n    \"보전\",\n    \"보존\",\n    \"보통\",\n    \"보편적\",\n    \"보험\",\n    \"복도\",\n    \"복사\",\n    \"복숭아\",\n    \"복습\",\n    \"볶음\",\n    \"본격적\",\n    \"본래\",\n    \"본부\",\n    \"본사\",\n    \"본성\",\n    \"본인\",\n    \"본질\",\n    \"볼펜\",\n    \"봉사\",\n    \"봉지\",\n    \"봉투\",\n    \"부근\",\n    \"부끄러움\",\n    \"부담\",\n    \"부동산\",\n    \"부문\",\n    \"부분\",\n    \"부산\",\n    \"부상\",\n    \"부엌\",\n    \"부인\",\n    \"부작용\",\n    \"부장\",\n    \"부정\",\n    \"부족\",\n    \"부지런히\",\n    \"부친\",\n    \"부탁\",\n    \"부품\",\n    \"부회장\",\n    \"북부\",\n    \"북한\",\n    \"분노\",\n    \"분량\",\n    \"분리\",\n    \"분명\",\n    \"분석\",\n    \"분야\",\n    \"분위기\",\n    \"분필\",\n    \"분홍색\",\n    \"불고기\",\n    \"불과\",\n    \"불교\",\n    \"불꽃\",\n    \"불만\",\n    \"불법\",\n    \"불빛\",\n    \"불안\",\n    \"불이익\",\n    \"불행\",\n    \"브랜드\",\n    \"비극\",\n    \"비난\",\n    \"비닐\",\n    \"비둘기\",\n    \"비디오\",\n    \"비로소\",\n    \"비만\",\n    \"비명\",\n    \"비밀\",\n    \"비바람\",\n    \"비빔밥\",\n    \"비상\",\n    \"비용\",\n    \"비율\",\n    \"비중\",\n    \"비타민\",\n    \"비판\",\n    \"빌딩\",\n    \"빗물\",\n    \"빗방울\",\n    \"빗줄기\",\n    \"빛깔\",\n    \"빨간색\",\n    \"빨래\",\n    \"빨리\",\n    \"사건\",\n    \"사계절\",\n    \"사나이\",\n    \"사냥\",\n    \"사람\",\n    \"사랑\",\n    \"사립\",\n    \"사모님\",\n    \"사물\",\n    \"사방\",\n    \"사상\",\n    \"사생활\",\n    \"사설\",\n    \"사슴\",\n    \"사실\",\n    \"사업\",\n    \"사용\",\n    \"사월\",\n    \"사장\",\n    \"사전\",\n    \"사진\",\n    \"사촌\",\n    \"사춘기\",\n    \"사탕\",\n    \"사투리\",\n    \"사흘\",\n    \"산길\",\n    \"산부인과\",\n    \"산업\",\n    \"산책\",\n    \"살림\",\n    \"살인\",\n    \"살짝\",\n    \"삼계탕\",\n    \"삼국\",\n    \"삼십\",\n    \"삼월\",\n    \"삼촌\",\n    \"상관\",\n    \"상금\",\n    \"상대\",\n    \"상류\",\n    \"상반기\",\n    \"상상\",\n    \"상식\",\n    \"상업\",\n    \"상인\",\n    \"상자\",\n    \"상점\",\n    \"상처\",\n    \"상추\",\n    \"상태\",\n    \"상표\",\n    \"상품\",\n    \"상황\",\n    \"새벽\",\n    \"색깔\",\n    \"색연필\",\n    \"생각\",\n    \"생명\",\n    \"생물\",\n    \"생방송\",\n    \"생산\",\n    \"생선\",\n    \"생신\",\n    \"생일\",\n    \"생활\",\n    \"서랍\",\n    \"서른\",\n    \"서명\",\n    \"서민\",\n    \"서비스\",\n    \"서양\",\n    \"서울\",\n    \"서적\",\n    \"서점\",\n    \"서쪽\",\n    \"서클\",\n    \"석사\",\n    \"석유\",\n    \"선거\",\n    \"선물\",\n    \"선배\",\n    \"선생\",\n    \"선수\",\n    \"선원\",\n    \"선장\",\n    \"선전\",\n    \"선택\",\n    \"선풍기\",\n    \"설거지\",\n    \"설날\",\n    \"설렁탕\",\n    \"설명\",\n    \"설문\",\n    \"설사\",\n    \"설악산\",\n    \"설치\",\n    \"설탕\",\n    \"섭씨\",\n    \"성공\",\n    \"성당\",\n    \"성명\",\n    \"성별\",\n    \"성인\",\n    \"성장\",\n    \"성적\",\n    \"성질\",\n    \"성함\",\n    \"세금\",\n    \"세미나\",\n    \"세상\",\n    \"세월\",\n    \"세종대왕\",\n    \"세탁\",\n    \"센터\",\n    \"센티미터\",\n    \"셋째\",\n    \"소규모\",\n    \"소극적\",\n    \"소금\",\n    \"소나기\",\n    \"소년\",\n    \"소득\",\n    \"소망\",\n    \"소문\",\n    \"소설\",\n    \"소속\",\n    \"소아과\",\n    \"소용\",\n    \"소원\",\n    \"소음\",\n    \"소중히\",\n    \"소지품\",\n    \"소질\",\n    \"소풍\",\n    \"소형\",\n    \"속담\",\n    \"속도\",\n    \"속옷\",\n    \"손가락\",\n    \"손길\",\n    \"손녀\",\n    \"손님\",\n    \"손등\",\n    \"손목\",\n    \"손뼉\",\n    \"손실\",\n    \"손질\",\n    \"손톱\",\n    \"손해\",\n    \"솔직히\",\n    \"솜씨\",\n    \"송아지\",\n    \"송이\",\n    \"송편\",\n    \"쇠고기\",\n    \"쇼핑\",\n    \"수건\",\n    \"수년\",\n    \"수단\",\n    \"수돗물\",\n    \"수동적\",\n    \"수면\",\n    \"수명\",\n    \"수박\",\n    \"수상\",\n    \"수석\",\n    \"수술\",\n    \"수시로\",\n    \"수업\",\n    \"수염\",\n    \"수영\",\n    \"수입\",\n    \"수준\",\n    \"수집\",\n    \"수출\",\n    \"수컷\",\n    \"수필\",\n    \"수학\",\n    \"수험생\",\n    \"수화기\",\n    \"숙녀\",\n    \"숙소\",\n    \"숙제\",\n    \"순간\",\n    \"순서\",\n    \"순수\",\n    \"순식간\",\n    \"순위\",\n    \"숟가락\",\n    \"술병\",\n    \"술집\",\n    \"숫자\",\n    \"스님\",\n    \"스물\",\n    \"스스로\",\n    \"스승\",\n    \"스웨터\",\n    \"스위치\",\n    \"스케이트\",\n    \"스튜디오\",\n    \"스트레스\",\n    \"스포츠\",\n    \"슬쩍\",\n    \"슬픔\",\n    \"습관\",\n    \"습기\",\n    \"승객\",\n    \"승리\",\n    \"승부\",\n    \"승용차\",\n    \"승진\",\n    \"시각\",\n    \"시간\",\n    \"시골\",\n    \"시금치\",\n    \"시나리오\",\n    \"시댁\",\n    \"시리즈\",\n    \"시멘트\",\n    \"시민\",\n    \"시부모\",\n    \"시선\",\n    \"시설\",\n    \"시스템\",\n    \"시아버지\",\n    \"시어머니\",\n    \"시월\",\n    \"시인\",\n    \"시일\",\n    \"시작\",\n    \"시장\",\n    \"시절\",\n    \"시점\",\n    \"시중\",\n    \"시즌\",\n    \"시집\",\n    \"시청\",\n    \"시합\",\n    \"시험\",\n    \"식구\",\n    \"식기\",\n    \"식당\",\n    \"식량\",\n    \"식료품\",\n    \"식물\",\n    \"식빵\",\n    \"식사\",\n    \"식생활\",\n    \"식초\",\n    \"식탁\",\n    \"식품\",\n    \"신고\",\n    \"신규\",\n    \"신념\",\n    \"신문\",\n    \"신발\",\n    \"신비\",\n    \"신사\",\n    \"신세\",\n    \"신용\",\n    \"신제품\",\n    \"신청\",\n    \"신체\",\n    \"신화\",\n    \"실감\",\n    \"실내\",\n    \"실력\",\n    \"실례\",\n    \"실망\",\n    \"실수\",\n    \"실습\",\n    \"실시\",\n    \"실장\",\n    \"실정\",\n    \"실질적\",\n    \"실천\",\n    \"실체\",\n    \"실컷\",\n    \"실태\",\n    \"실패\",\n    \"실험\",\n    \"실현\",\n    \"심리\",\n    \"심부름\",\n    \"심사\",\n    \"심장\",\n    \"심정\",\n    \"심판\",\n    \"쌍둥이\",\n    \"씨름\",\n    \"씨앗\",\n    \"아가씨\",\n    \"아나운서\",\n    \"아드님\",\n    \"아들\",\n    \"아쉬움\",\n    \"아스팔트\",\n    \"아시아\",\n    \"아울러\",\n    \"아저씨\",\n    \"아줌마\",\n    \"아직\",\n    \"아침\",\n    \"아파트\",\n    \"아프리카\",\n    \"아픔\",\n    \"아홉\",\n    \"아흔\",\n    \"악기\",\n    \"악몽\",\n    \"악수\",\n    \"안개\",\n    \"안경\",\n    \"안과\",\n    \"안내\",\n    \"안녕\",\n    \"안동\",\n    \"안방\",\n    \"안부\",\n    \"안주\",\n    \"알루미늄\",\n    \"알코올\",\n    \"암시\",\n    \"암컷\",\n    \"압력\",\n    \"앞날\",\n    \"앞문\",\n    \"애인\",\n    \"애정\",\n    \"액수\",\n    \"앨범\",\n    \"야간\",\n    \"야단\",\n    \"야옹\",\n    \"약간\",\n    \"약국\",\n    \"약속\",\n    \"약수\",\n    \"약점\",\n    \"약품\",\n    \"약혼녀\",\n    \"양념\",\n    \"양력\",\n    \"양말\",\n    \"양배추\",\n    \"양주\",\n    \"양파\",\n    \"어둠\",\n    \"어려움\",\n    \"어른\",\n    \"어젯밤\",\n    \"어쨌든\",\n    \"어쩌다가\",\n    \"어쩐지\",\n    \"언니\",\n    \"언덕\",\n    \"언론\",\n    \"언어\",\n    \"얼굴\",\n    \"얼른\",\n    \"얼음\",\n    \"얼핏\",\n    \"엄마\",\n    \"업무\",\n    \"업종\",\n    \"업체\",\n    \"엉덩이\",\n    \"엉망\",\n    \"엉터리\",\n    \"엊그제\",\n    \"에너지\",\n    \"에어컨\",\n    \"엔진\",\n    \"여건\",\n    \"여고생\",\n    \"여관\",\n    \"여군\",\n    \"여권\",\n    \"여대생\",\n    \"여덟\",\n    \"여동생\",\n    \"여든\",\n    \"여론\",\n    \"여름\",\n    \"여섯\",\n    \"여성\",\n    \"여왕\",\n    \"여인\",\n    \"여전히\",\n    \"여직원\",\n    \"여학생\",\n    \"여행\",\n    \"역사\",\n    \"역시\",\n    \"역할\",\n    \"연결\",\n    \"연구\",\n    \"연극\",\n    \"연기\",\n    \"연락\",\n    \"연설\",\n    \"연세\",\n    \"연속\",\n    \"연습\",\n    \"연애\",\n    \"연예인\",\n    \"연인\",\n    \"연장\",\n    \"연주\",\n    \"연출\",\n    \"연필\",\n    \"연합\",\n    \"연휴\",\n    \"열기\",\n    \"열매\",\n    \"열쇠\",\n    \"열심히\",\n    \"열정\",\n    \"열차\",\n    \"열흘\",\n    \"염려\",\n    \"엽서\",\n    \"영국\",\n    \"영남\",\n    \"영상\",\n    \"영양\",\n    \"영역\",\n    \"영웅\",\n    \"영원히\",\n    \"영하\",\n    \"영향\",\n    \"영혼\",\n    \"영화\",\n    \"옆구리\",\n    \"옆방\",\n    \"옆집\",\n    \"예감\",\n    \"예금\",\n    \"예방\",\n    \"예산\",\n    \"예상\",\n    \"예선\",\n    \"예술\",\n    \"예습\",\n    \"예식장\",\n    \"예약\",\n    \"예전\",\n    \"예절\",\n    \"예정\",\n    \"예컨대\",\n    \"옛날\",\n    \"오늘\",\n    \"오락\",\n    \"오랫동안\",\n    \"오렌지\",\n    \"오로지\",\n    \"오른발\",\n    \"오븐\",\n    \"오십\",\n    \"오염\",\n    \"오월\",\n    \"오전\",\n    \"오직\",\n    \"오징어\",\n    \"오페라\",\n    \"오피스텔\",\n    \"오히려\",\n    \"옥상\",\n    \"옥수수\",\n    \"온갖\",\n    \"온라인\",\n    \"온몸\",\n    \"온종일\",\n    \"온통\",\n    \"올가을\",\n    \"올림픽\",\n    \"올해\",\n    \"옷차림\",\n    \"와이셔츠\",\n    \"와인\",\n    \"완성\",\n    \"완전\",\n    \"왕비\",\n    \"왕자\",\n    \"왜냐하면\",\n    \"왠지\",\n    \"외갓집\",\n    \"외국\",\n    \"외로움\",\n    \"외삼촌\",\n    \"외출\",\n    \"외침\",\n    \"외할머니\",\n    \"왼발\",\n    \"왼손\",\n    \"왼쪽\",\n    \"요금\",\n    \"요일\",\n    \"요즘\",\n    \"요청\",\n    \"용기\",\n    \"용서\",\n    \"용어\",\n    \"우산\",\n    \"우선\",\n    \"우승\",\n    \"우연히\",\n    \"우정\",\n    \"우체국\",\n    \"우편\",\n    \"운동\",\n    \"운명\",\n    \"운반\",\n    \"운전\",\n    \"운행\",\n    \"울산\",\n    \"울음\",\n    \"움직임\",\n    \"웃어른\",\n    \"웃음\",\n    \"워낙\",\n    \"원고\",\n    \"원래\",\n    \"원서\",\n    \"원숭이\",\n    \"원인\",\n    \"원장\",\n    \"원피스\",\n    \"월급\",\n    \"월드컵\",\n    \"월세\",\n    \"월요일\",\n    \"웨이터\",\n    \"위반\",\n    \"위법\",\n    \"위성\",\n    \"위원\",\n    \"위험\",\n    \"위협\",\n    \"윗사람\",\n    \"유난히\",\n    \"유럽\",\n    \"유명\",\n    \"유물\",\n    \"유산\",\n    \"유적\",\n    \"유치원\",\n    \"유학\",\n    \"유행\",\n    \"유형\",\n    \"육군\",\n    \"육상\",\n    \"육십\",\n    \"육체\",\n    \"은행\",\n    \"음력\",\n    \"음료\",\n    \"음반\",\n    \"음성\",\n    \"음식\",\n    \"음악\",\n    \"음주\",\n    \"의견\",\n    \"의논\",\n    \"의문\",\n    \"의복\",\n    \"의식\",\n    \"의심\",\n    \"의외로\",\n    \"의욕\",\n    \"의원\",\n    \"의학\",\n    \"이것\",\n    \"이곳\",\n    \"이념\",\n    \"이놈\",\n    \"이달\",\n    \"이대로\",\n    \"이동\",\n    \"이렇게\",\n    \"이력서\",\n    \"이론적\",\n    \"이름\",\n    \"이민\",\n    \"이발소\",\n    \"이별\",\n    \"이불\",\n    \"이빨\",\n    \"이상\",\n    \"이성\",\n    \"이슬\",\n    \"이야기\",\n    \"이용\",\n    \"이웃\",\n    \"이월\",\n    \"이윽고\",\n    \"이익\",\n    \"이전\",\n    \"이중\",\n    \"이튿날\",\n    \"이틀\",\n    \"이혼\",\n    \"인간\",\n    \"인격\",\n    \"인공\",\n    \"인구\",\n    \"인근\",\n    \"인기\",\n    \"인도\",\n    \"인류\",\n    \"인물\",\n    \"인생\",\n    \"인쇄\",\n    \"인연\",\n    \"인원\",\n    \"인재\",\n    \"인종\",\n    \"인천\",\n    \"인체\",\n    \"인터넷\",\n    \"인하\",\n    \"인형\",\n    \"일곱\",\n    \"일기\",\n    \"일단\",\n    \"일대\",\n    \"일등\",\n    \"일반\",\n    \"일본\",\n    \"일부\",\n    \"일상\",\n    \"일생\",\n    \"일손\",\n    \"일요일\",\n    \"일월\",\n    \"일정\",\n    \"일종\",\n    \"일주일\",\n    \"일찍\",\n    \"일체\",\n    \"일치\",\n    \"일행\",\n    \"일회용\",\n    \"임금\",\n    \"임무\",\n    \"입대\",\n    \"입력\",\n    \"입맛\",\n    \"입사\",\n    \"입술\",\n    \"입시\",\n    \"입원\",\n    \"입장\",\n    \"입학\",\n    \"자가용\",\n    \"자격\",\n    \"자극\",\n    \"자동\",\n    \"자랑\",\n    \"자부심\",\n    \"자식\",\n    \"자신\",\n    \"자연\",\n    \"자원\",\n    \"자율\",\n    \"자전거\",\n    \"자정\",\n    \"자존심\",\n    \"자판\",\n    \"작가\",\n    \"작년\",\n    \"작성\",\n    \"작업\",\n    \"작용\",\n    \"작은딸\",\n    \"작품\",\n    \"잔디\",\n    \"잔뜩\",\n    \"잔치\",\n    \"잘못\",\n    \"잠깐\",\n    \"잠수함\",\n    \"잠시\",\n    \"잠옷\",\n    \"잠자리\",\n    \"잡지\",\n    \"장관\",\n    \"장군\",\n    \"장기간\",\n    \"장래\",\n    \"장례\",\n    \"장르\",\n    \"장마\",\n    \"장면\",\n    \"장모\",\n    \"장미\",\n    \"장비\",\n    \"장사\",\n    \"장소\",\n    \"장식\",\n    \"장애인\",\n    \"장인\",\n    \"장점\",\n    \"장차\",\n    \"장학금\",\n    \"재능\",\n    \"재빨리\",\n    \"재산\",\n    \"재생\",\n    \"재작년\",\n    \"재정\",\n    \"재채기\",\n    \"재판\",\n    \"재학\",\n    \"재활용\",\n    \"저것\",\n    \"저고리\",\n    \"저곳\",\n    \"저녁\",\n    \"저런\",\n    \"저렇게\",\n    \"저번\",\n    \"저울\",\n    \"저절로\",\n    \"저축\",\n    \"적극\",\n    \"적당히\",\n    \"적성\",\n    \"적용\",\n    \"적응\",\n    \"전개\",\n    \"전공\",\n    \"전기\",\n    \"전달\",\n    \"전라도\",\n    \"전망\",\n    \"전문\",\n    \"전반\",\n    \"전부\",\n    \"전세\",\n    \"전시\",\n    \"전용\",\n    \"전자\",\n    \"전쟁\",\n    \"전주\",\n    \"전철\",\n    \"전체\",\n    \"전통\",\n    \"전혀\",\n    \"전후\",\n    \"절대\",\n    \"절망\",\n    \"절반\",\n    \"절약\",\n    \"절차\",\n    \"점검\",\n    \"점수\",\n    \"점심\",\n    \"점원\",\n    \"점점\",\n    \"점차\",\n    \"접근\",\n    \"접시\",\n    \"접촉\",\n    \"젓가락\",\n    \"정거장\",\n    \"정도\",\n    \"정류장\",\n    \"정리\",\n    \"정말\",\n    \"정면\",\n    \"정문\",\n    \"정반대\",\n    \"정보\",\n    \"정부\",\n    \"정비\",\n    \"정상\",\n    \"정성\",\n    \"정오\",\n    \"정원\",\n    \"정장\",\n    \"정지\",\n    \"정치\",\n    \"정확히\",\n    \"제공\",\n    \"제과점\",\n    \"제대로\",\n    \"제목\",\n    \"제발\",\n    \"제법\",\n    \"제삿날\",\n    \"제안\",\n    \"제일\",\n    \"제작\",\n    \"제주도\",\n    \"제출\",\n    \"제품\",\n    \"제한\",\n    \"조각\",\n    \"조건\",\n    \"조금\",\n    \"조깅\",\n    \"조명\",\n    \"조미료\",\n    \"조상\",\n    \"조선\",\n    \"조용히\",\n    \"조절\",\n    \"조정\",\n    \"조직\",\n    \"존댓말\",\n    \"존재\",\n    \"졸업\",\n    \"졸음\",\n    \"종교\",\n    \"종로\",\n    \"종류\",\n    \"종소리\",\n    \"종업원\",\n    \"종종\",\n    \"종합\",\n    \"좌석\",\n    \"죄인\",\n    \"주관적\",\n    \"주름\",\n    \"주말\",\n    \"주머니\",\n    \"주먹\",\n    \"주문\",\n    \"주민\",\n    \"주방\",\n    \"주변\",\n    \"주식\",\n    \"주인\",\n    \"주일\",\n    \"주장\",\n    \"주전자\",\n    \"주택\",\n    \"준비\",\n    \"줄거리\",\n    \"줄기\",\n    \"줄무늬\",\n    \"중간\",\n    \"중계방송\",\n    \"중국\",\n    \"중년\",\n    \"중단\",\n    \"중독\",\n    \"중반\",\n    \"중부\",\n    \"중세\",\n    \"중소기업\",\n    \"중순\",\n    \"중앙\",\n    \"중요\",\n    \"중학교\",\n    \"즉석\",\n    \"즉시\",\n    \"즐거움\",\n    \"증가\",\n    \"증거\",\n    \"증권\",\n    \"증상\",\n    \"증세\",\n    \"지각\",\n    \"지갑\",\n    \"지경\",\n    \"지극히\",\n    \"지금\",\n    \"지급\",\n    \"지능\",\n    \"지름길\",\n    \"지리산\",\n    \"지방\",\n    \"지붕\",\n    \"지식\",\n    \"지역\",\n    \"지우개\",\n    \"지원\",\n    \"지적\",\n    \"지점\",\n    \"지진\",\n    \"지출\",\n    \"직선\",\n    \"직업\",\n    \"직원\",\n    \"직장\",\n    \"진급\",\n    \"진동\",\n    \"진로\",\n    \"진료\",\n    \"진리\",\n    \"진짜\",\n    \"진찰\",\n    \"진출\",\n    \"진통\",\n    \"진행\",\n    \"질문\",\n    \"질병\",\n    \"질서\",\n    \"짐작\",\n    \"집단\",\n    \"집안\",\n    \"집중\",\n    \"짜증\",\n    \"찌꺼기\",\n    \"차남\",\n    \"차라리\",\n    \"차량\",\n    \"차림\",\n    \"차별\",\n    \"차선\",\n    \"차츰\",\n    \"착각\",\n    \"찬물\",\n    \"찬성\",\n    \"참가\",\n    \"참기름\",\n    \"참새\",\n    \"참석\",\n    \"참여\",\n    \"참외\",\n    \"참조\",\n    \"찻잔\",\n    \"창가\",\n    \"창고\",\n    \"창구\",\n    \"창문\",\n    \"창밖\",\n    \"창작\",\n    \"창조\",\n    \"채널\",\n    \"채점\",\n    \"책가방\",\n    \"책방\",\n    \"책상\",\n    \"책임\",\n    \"챔피언\",\n    \"처벌\",\n    \"처음\",\n    \"천국\",\n    \"천둥\",\n    \"천장\",\n    \"천재\",\n    \"천천히\",\n    \"철도\",\n    \"철저히\",\n    \"철학\",\n    \"첫날\",\n    \"첫째\",\n    \"청년\",\n    \"청바지\",\n    \"청소\",\n    \"청춘\",\n    \"체계\",\n    \"체력\",\n    \"체온\",\n    \"체육\",\n    \"체중\",\n    \"체험\",\n    \"초등학생\",\n    \"초반\",\n    \"초밥\",\n    \"초상화\",\n    \"초순\",\n    \"초여름\",\n    \"초원\",\n    \"초저녁\",\n    \"초점\",\n    \"초청\",\n    \"초콜릿\",\n    \"촛불\",\n    \"총각\",\n    \"총리\",\n    \"총장\",\n    \"촬영\",\n    \"최근\",\n    \"최상\",\n    \"최선\",\n    \"최신\",\n    \"최악\",\n    \"최종\",\n    \"추석\",\n    \"추억\",\n    \"추진\",\n    \"추천\",\n    \"추측\",\n    \"축구\",\n    \"축소\",\n    \"축제\",\n    \"축하\",\n    \"출근\",\n    \"출발\",\n    \"출산\",\n    \"출신\",\n    \"출연\",\n    \"출입\",\n    \"출장\",\n    \"출판\",\n    \"충격\",\n    \"충고\",\n    \"충돌\",\n    \"충분히\",\n    \"충청도\",\n    \"취업\",\n    \"취직\",\n    \"취향\",\n    \"치약\",\n    \"친구\",\n    \"친척\",\n    \"칠십\",\n    \"칠월\",\n    \"칠판\",\n    \"침대\",\n    \"침묵\",\n    \"침실\",\n    \"칫솔\",\n    \"칭찬\",\n    \"카메라\",\n    \"카운터\",\n    \"칼국수\",\n    \"캐릭터\",\n    \"캠퍼스\",\n    \"캠페인\",\n    \"커튼\",\n    \"컨디션\",\n    \"컬러\",\n    \"컴퓨터\",\n    \"코끼리\",\n    \"코미디\",\n    \"콘서트\",\n    \"콜라\",\n    \"콤플렉스\",\n    \"콩나물\",\n    \"쾌감\",\n    \"쿠데타\",\n    \"크림\",\n    \"큰길\",\n    \"큰딸\",\n    \"큰소리\",\n    \"큰아들\",\n    \"큰어머니\",\n    \"큰일\",\n    \"큰절\",\n    \"클래식\",\n    \"클럽\",\n    \"킬로\",\n    \"타입\",\n    \"타자기\",\n    \"탁구\",\n    \"탁자\",\n    \"탄생\",\n    \"태권도\",\n    \"태양\",\n    \"태풍\",\n    \"택시\",\n    \"탤런트\",\n    \"터널\",\n    \"터미널\",\n    \"테니스\",\n    \"테스트\",\n    \"테이블\",\n    \"텔레비전\",\n    \"토론\",\n    \"토마토\",\n    \"토요일\",\n    \"통계\",\n    \"통과\",\n    \"통로\",\n    \"통신\",\n    \"통역\",\n    \"통일\",\n    \"통장\",\n    \"통제\",\n    \"통증\",\n    \"통합\",\n    \"통화\",\n    \"퇴근\",\n    \"퇴원\",\n    \"퇴직금\",\n    \"튀김\",\n    \"트럭\",\n    \"특급\",\n    \"특별\",\n    \"특성\",\n    \"특수\",\n    \"특징\",\n    \"특히\",\n    \"튼튼히\",\n    \"티셔츠\",\n    \"파란색\",\n    \"파일\",\n    \"파출소\",\n    \"판결\",\n    \"판단\",\n    \"판매\",\n    \"판사\",\n    \"팔십\",\n    \"팔월\",\n    \"팝송\",\n    \"패션\",\n    \"팩스\",\n    \"팩시밀리\",\n    \"팬티\",\n    \"퍼센트\",\n    \"페인트\",\n    \"편견\",\n    \"편의\",\n    \"편지\",\n    \"편히\",\n    \"평가\",\n    \"평균\",\n    \"평생\",\n    \"평소\",\n    \"평양\",\n    \"평일\",\n    \"평화\",\n    \"포스터\",\n    \"포인트\",\n    \"포장\",\n    \"포함\",\n    \"표면\",\n    \"표정\",\n    \"표준\",\n    \"표현\",\n    \"품목\",\n    \"품질\",\n    \"풍경\",\n    \"풍속\",\n    \"풍습\",\n    \"프랑스\",\n    \"프린터\",\n    \"플라스틱\",\n    \"피곤\",\n    \"피망\",\n    \"피아노\",\n    \"필름\",\n    \"필수\",\n    \"필요\",\n    \"필자\",\n    \"필통\",\n    \"핑계\",\n    \"하느님\",\n    \"하늘\",\n    \"하드웨어\",\n    \"하룻밤\",\n    \"하반기\",\n    \"하숙집\",\n    \"하순\",\n    \"하여튼\",\n    \"하지만\",\n    \"하천\",\n    \"하품\",\n    \"하필\",\n    \"학과\",\n    \"학교\",\n    \"학급\",\n    \"학기\",\n    \"학년\",\n    \"학력\",\n    \"학번\",\n    \"학부모\",\n    \"학비\",\n    \"학생\",\n    \"학술\",\n    \"학습\",\n    \"학용품\",\n    \"학원\",\n    \"학위\",\n    \"학자\",\n    \"학점\",\n    \"한계\",\n    \"한글\",\n    \"한꺼번에\",\n    \"한낮\",\n    \"한눈\",\n    \"한동안\",\n    \"한때\",\n    \"한라산\",\n    \"한마디\",\n    \"한문\",\n    \"한번\",\n    \"한복\",\n    \"한식\",\n    \"한여름\",\n    \"한쪽\",\n    \"할머니\",\n    \"할아버지\",\n    \"할인\",\n    \"함께\",\n    \"함부로\",\n    \"합격\",\n    \"합리적\",\n    \"항공\",\n    \"항구\",\n    \"항상\",\n    \"항의\",\n    \"해결\",\n    \"해군\",\n    \"해답\",\n    \"해당\",\n    \"해물\",\n    \"해석\",\n    \"해설\",\n    \"해수욕장\",\n    \"해안\",\n    \"핵심\",\n    \"핸드백\",\n    \"햄버거\",\n    \"햇볕\",\n    \"햇살\",\n    \"행동\",\n    \"행복\",\n    \"행사\",\n    \"행운\",\n    \"행위\",\n    \"향기\",\n    \"향상\",\n    \"향수\",\n    \"허락\",\n    \"허용\",\n    \"헬기\",\n    \"현관\",\n    \"현금\",\n    \"현대\",\n    \"현상\",\n    \"현실\",\n    \"현장\",\n    \"현재\",\n    \"현지\",\n    \"혈액\",\n    \"협력\",\n    \"형부\",\n    \"형사\",\n    \"형수\",\n    \"형식\",\n    \"형제\",\n    \"형태\",\n    \"형편\",\n    \"혜택\",\n    \"호기심\",\n    \"호남\",\n    \"호랑이\",\n    \"호박\",\n    \"호텔\",\n    \"호흡\",\n    \"혹시\",\n    \"홀로\",\n    \"홈페이지\",\n    \"홍보\",\n    \"홍수\",\n    \"홍차\",\n    \"화면\",\n    \"화분\",\n    \"화살\",\n    \"화요일\",\n    \"화장\",\n    \"화학\",\n    \"확보\",\n    \"확인\",\n    \"확장\",\n    \"확정\",\n    \"환갑\",\n    \"환경\",\n    \"환영\",\n    \"환율\",\n    \"환자\",\n    \"활기\",\n    \"활동\",\n    \"활발히\",\n    \"활용\",\n    \"활짝\",\n    \"회견\",\n    \"회관\",\n    \"회복\",\n    \"회색\",\n    \"회원\",\n    \"회장\",\n    \"회전\",\n    \"횟수\",\n    \"횡단보도\",\n    \"효율적\",\n    \"후반\",\n    \"후춧가루\",\n    \"훈련\",\n    \"훨씬\",\n    \"휴식\",\n    \"휴일\",\n    \"흉내\",\n    \"흐름\",\n    \"흑백\",\n    \"흑인\",\n    \"흔적\",\n    \"흔히\",\n    \"흥미\",\n    \"흥분\",\n    \"희곡\",\n    \"희망\",\n    \"희생\",\n    \"흰색\",\n    \"힘껏\"\n]\n","module.exports=[\n    \"的\",\n    \"一\",\n    \"是\",\n    \"在\",\n    \"不\",\n    \"了\",\n    \"有\",\n    \"和\",\n    \"人\",\n    \"这\",\n    \"中\",\n    \"大\",\n    \"为\",\n    \"上\",\n    \"个\",\n    \"国\",\n    \"我\",\n    \"以\",\n    \"要\",\n    \"他\",\n    \"时\",\n    \"来\",\n    \"用\",\n    \"们\",\n    \"生\",\n    \"到\",\n    \"作\",\n    \"地\",\n    \"于\",\n    \"出\",\n    \"就\",\n    \"分\",\n    \"对\",\n    \"成\",\n    \"会\",\n    \"可\",\n    \"主\",\n    \"发\",\n    \"年\",\n    \"动\",\n    \"同\",\n    \"工\",\n    \"也\",\n    \"能\",\n    \"下\",\n    \"过\",\n    \"子\",\n    \"说\",\n    \"产\",\n    \"种\",\n    \"面\",\n    \"而\",\n    \"方\",\n    \"后\",\n    \"多\",\n    \"定\",\n    \"行\",\n    \"学\",\n    \"法\",\n    \"所\",\n    \"民\",\n    \"得\",\n    \"经\",\n    \"十\",\n    \"三\",\n    \"之\",\n    \"进\",\n    \"着\",\n    \"等\",\n    \"部\",\n    \"度\",\n    \"家\",\n    \"电\",\n    \"力\",\n    \"里\",\n    \"如\",\n    \"水\",\n    \"化\",\n    \"高\",\n    \"自\",\n    \"二\",\n    \"理\",\n    \"起\",\n    \"小\",\n    \"物\",\n    \"现\",\n    \"实\",\n    \"加\",\n    \"量\",\n    \"都\",\n    \"两\",\n    \"体\",\n    \"制\",\n    \"机\",\n    \"当\",\n    \"使\",\n    \"点\",\n    \"从\",\n    \"业\",\n    \"本\",\n    \"去\",\n    \"把\",\n    \"性\",\n    \"好\",\n    \"应\",\n    \"开\",\n    \"它\",\n    \"合\",\n    \"还\",\n    \"因\",\n    \"由\",\n    \"其\",\n    \"些\",\n    \"然\",\n    \"前\",\n    \"外\",\n    \"天\",\n    \"政\",\n    \"四\",\n    \"日\",\n    \"那\",\n    \"社\",\n    \"义\",\n    \"事\",\n    \"平\",\n    \"形\",\n    \"相\",\n    \"全\",\n    \"表\",\n    \"间\",\n    \"样\",\n    \"与\",\n    \"关\",\n    \"各\",\n    \"重\",\n    \"新\",\n    \"线\",\n    \"内\",\n    \"数\",\n    \"正\",\n    \"心\",\n    \"反\",\n    \"你\",\n    \"明\",\n    \"看\",\n    \"原\",\n    \"又\",\n    \"么\",\n    \"利\",\n    \"比\",\n    \"或\",\n    \"但\",\n    \"质\",\n    \"气\",\n    \"第\",\n    \"向\",\n    \"道\",\n    \"命\",\n    \"此\",\n    \"变\",\n    \"条\",\n    \"只\",\n    \"没\",\n    \"结\",\n    \"解\",\n    \"问\",\n    \"意\",\n    \"建\",\n    \"月\",\n    \"公\",\n    \"无\",\n    \"系\",\n    \"军\",\n    \"很\",\n    \"情\",\n    \"者\",\n    \"最\",\n    \"立\",\n    \"代\",\n    \"想\",\n    \"已\",\n    \"通\",\n    \"并\",\n    \"提\",\n    \"直\",\n    \"题\",\n    \"党\",\n    \"程\",\n    \"展\",\n    \"五\",\n    \"果\",\n    \"料\",\n    \"象\",\n    \"员\",\n    \"革\",\n    \"位\",\n    \"入\",\n    \"常\",\n    \"文\",\n    \"总\",\n    \"次\",\n    \"品\",\n    \"式\",\n    \"活\",\n    \"设\",\n    \"及\",\n    \"管\",\n    \"特\",\n    \"件\",\n    \"长\",\n    \"求\",\n    \"老\",\n    \"头\",\n    \"基\",\n    \"资\",\n    \"边\",\n    \"流\",\n    \"路\",\n    \"级\",\n    \"少\",\n    \"图\",\n    \"山\",\n    \"统\",\n    \"接\",\n    \"知\",\n    \"较\",\n    \"将\",\n    \"组\",\n    \"见\",\n    \"计\",\n    \"别\",\n    \"她\",\n    \"手\",\n    \"角\",\n    \"期\",\n    \"根\",\n    \"论\",\n    \"运\",\n    \"农\",\n    \"指\",\n    \"几\",\n    \"九\",\n    \"区\",\n    \"强\",\n    \"放\",\n    \"决\",\n    \"西\",\n    \"被\",\n    \"干\",\n    \"做\",\n    \"必\",\n    \"战\",\n    \"先\",\n    \"回\",\n    \"则\",\n    \"任\",\n    \"取\",\n    \"据\",\n    \"处\",\n    \"队\",\n    \"南\",\n    \"给\",\n    \"色\",\n    \"光\",\n    \"门\",\n    \"即\",\n    \"保\",\n    \"治\",\n    \"北\",\n    \"造\",\n    \"百\",\n    \"规\",\n    \"热\",\n    \"领\",\n    \"七\",\n    \"海\",\n    \"口\",\n    \"东\",\n    \"导\",\n    \"器\",\n    \"压\",\n    \"志\",\n    \"世\",\n    \"金\",\n    \"增\",\n    \"争\",\n    \"济\",\n    \"阶\",\n    \"油\",\n    \"思\",\n    \"术\",\n    \"极\",\n    \"交\",\n    \"受\",\n    \"联\",\n    \"什\",\n    \"认\",\n    \"六\",\n    \"共\",\n    \"权\",\n    \"收\",\n    \"证\",\n    \"改\",\n    \"清\",\n    \"美\",\n    \"再\",\n    \"采\",\n    \"转\",\n    \"更\",\n    \"单\",\n    \"风\",\n    \"切\",\n    \"打\",\n    \"白\",\n    \"教\",\n    \"速\",\n    \"花\",\n    \"带\",\n    \"安\",\n    \"场\",\n    \"身\",\n    \"车\",\n    \"例\",\n    \"真\",\n    \"务\",\n    \"具\",\n    \"万\",\n    \"每\",\n    \"目\",\n    \"至\",\n    \"达\",\n    \"走\",\n    \"积\",\n    \"示\",\n    \"议\",\n    \"声\",\n    \"报\",\n    \"斗\",\n    \"完\",\n    \"类\",\n    \"八\",\n    \"离\",\n    \"华\",\n    \"名\",\n    \"确\",\n    \"才\",\n    \"科\",\n    \"张\",\n    \"信\",\n    \"马\",\n    \"节\",\n    \"话\",\n    \"米\",\n    \"整\",\n    \"空\",\n    \"元\",\n    \"况\",\n    \"今\",\n    \"集\",\n    \"温\",\n    \"传\",\n    \"土\",\n    \"许\",\n    \"步\",\n    \"群\",\n    \"广\",\n    \"石\",\n    \"记\",\n    \"需\",\n    \"段\",\n    \"研\",\n    \"界\",\n    \"拉\",\n    \"林\",\n    \"律\",\n    \"叫\",\n    \"且\",\n    \"究\",\n    \"观\",\n    \"越\",\n    \"织\",\n    \"装\",\n    \"影\",\n    \"算\",\n    \"低\",\n    \"持\",\n    \"音\",\n    \"众\",\n    \"书\",\n    \"布\",\n    \"复\",\n    \"容\",\n    \"儿\",\n    \"须\",\n    \"际\",\n    \"商\",\n    \"非\",\n    \"验\",\n    \"连\",\n    \"断\",\n    \"深\",\n    \"难\",\n    \"近\",\n    \"矿\",\n    \"千\",\n    \"周\",\n    \"委\",\n    \"素\",\n    \"技\",\n    \"备\",\n    \"半\",\n    \"办\",\n    \"青\",\n    \"省\",\n    \"列\",\n    \"习\",\n    \"响\",\n    \"约\",\n    \"支\",\n    \"般\",\n    \"史\",\n    \"感\",\n    \"劳\",\n    \"便\",\n    \"团\",\n    \"往\",\n    \"酸\",\n    \"历\",\n    \"市\",\n    \"克\",\n    \"何\",\n    \"除\",\n    \"消\",\n    \"构\",\n    \"府\",\n    \"称\",\n    \"太\",\n    \"准\",\n    \"精\",\n    \"值\",\n    \"号\",\n    \"率\",\n    \"族\",\n    \"维\",\n    \"划\",\n    \"选\",\n    \"标\",\n    \"写\",\n    \"存\",\n    \"候\",\n    \"毛\",\n    \"亲\",\n    \"快\",\n    \"效\",\n    \"斯\",\n    \"院\",\n    \"查\",\n    \"江\",\n    \"型\",\n    \"眼\",\n    \"王\",\n    \"按\",\n    \"格\",\n    \"养\",\n    \"易\",\n    \"置\",\n    \"派\",\n    \"层\",\n    \"片\",\n    \"始\",\n    \"却\",\n    \"专\",\n    \"状\",\n    \"育\",\n    \"厂\",\n    \"京\",\n    \"识\",\n    \"适\",\n    \"属\",\n    \"圆\",\n    \"包\",\n    \"火\",\n    \"住\",\n    \"调\",\n    \"满\",\n    \"县\",\n    \"局\",\n    \"照\",\n    \"参\",\n    \"红\",\n    \"细\",\n    \"引\",\n    \"听\",\n    \"该\",\n    \"铁\",\n    \"价\",\n    \"严\",\n    \"首\",\n    \"底\",\n    \"液\",\n    \"官\",\n    \"德\",\n    \"随\",\n    \"病\",\n    \"苏\",\n    \"失\",\n    \"尔\",\n    \"死\",\n    \"讲\",\n    \"配\",\n    \"女\",\n    \"黄\",\n    \"推\",\n    \"显\",\n    \"谈\",\n    \"罪\",\n    \"神\",\n    \"艺\",\n    \"呢\",\n    \"席\",\n    \"含\",\n    \"企\",\n    \"望\",\n    \"密\",\n    \"批\",\n    \"营\",\n    \"项\",\n    \"防\",\n    \"举\",\n    \"球\",\n    \"英\",\n    \"氧\",\n    \"势\",\n    \"告\",\n    \"李\",\n    \"台\",\n    \"落\",\n    \"木\",\n    \"帮\",\n    \"轮\",\n    \"破\",\n    \"亚\",\n    \"师\",\n    \"围\",\n    \"注\",\n    \"远\",\n    \"字\",\n    \"材\",\n    \"排\",\n    \"供\",\n    \"河\",\n    \"态\",\n    \"封\",\n    \"另\",\n    \"施\",\n    \"减\",\n    \"树\",\n    \"溶\",\n    \"怎\",\n    \"止\",\n    \"案\",\n    \"言\",\n    \"士\",\n    \"均\",\n    \"武\",\n    \"固\",\n    \"叶\",\n    \"鱼\",\n    \"波\",\n    \"视\",\n    \"仅\",\n    \"费\",\n    \"紧\",\n    \"爱\",\n    \"左\",\n    \"章\",\n    \"早\",\n    \"朝\",\n    \"害\",\n    \"续\",\n    \"轻\",\n    \"服\",\n    \"试\",\n    \"食\",\n    \"充\",\n    \"兵\",\n    \"源\",\n    \"判\",\n    \"护\",\n    \"司\",\n    \"足\",\n    \"某\",\n    \"练\",\n    \"差\",\n    \"致\",\n    \"板\",\n    \"田\",\n    \"降\",\n    \"黑\",\n    \"犯\",\n    \"负\",\n    \"击\",\n    \"范\",\n    \"继\",\n    \"兴\",\n    \"似\",\n    \"余\",\n    \"坚\",\n    \"曲\",\n    \"输\",\n    \"修\",\n    \"故\",\n    \"城\",\n    \"夫\",\n    \"够\",\n    \"送\",\n    \"笔\",\n    \"船\",\n    \"占\",\n    \"右\",\n    \"财\",\n    \"吃\",\n    \"富\",\n    \"春\",\n    \"职\",\n    \"觉\",\n    \"汉\",\n    \"画\",\n    \"功\",\n    \"巴\",\n    \"跟\",\n    \"虽\",\n    \"杂\",\n    \"飞\",\n    \"检\",\n    \"吸\",\n    \"助\",\n    \"升\",\n    \"阳\",\n    \"互\",\n    \"初\",\n    \"创\",\n    \"抗\",\n    \"考\",\n    \"投\",\n    \"坏\",\n    \"策\",\n    \"古\",\n    \"径\",\n    \"换\",\n    \"未\",\n    \"跑\",\n    \"留\",\n    \"钢\",\n    \"曾\",\n    \"端\",\n    \"责\",\n    \"站\",\n    \"简\",\n    \"述\",\n    \"钱\",\n    \"副\",\n    \"尽\",\n    \"帝\",\n    \"射\",\n    \"草\",\n    \"冲\",\n    \"承\",\n    \"独\",\n    \"令\",\n    \"限\",\n    \"阿\",\n    \"宣\",\n    \"环\",\n    \"双\",\n    \"请\",\n    \"超\",\n    \"微\",\n    \"让\",\n    \"控\",\n    \"州\",\n    \"良\",\n    \"轴\",\n    \"找\",\n    \"否\",\n    \"纪\",\n    \"益\",\n    \"依\",\n    \"优\",\n    \"顶\",\n    \"础\",\n    \"载\",\n    \"倒\",\n    \"房\",\n    \"突\",\n    \"坐\",\n    \"粉\",\n    \"敌\",\n    \"略\",\n    \"客\",\n    \"袁\",\n    \"冷\",\n    \"胜\",\n    \"绝\",\n    \"析\",\n    \"块\",\n    \"剂\",\n    \"测\",\n    \"丝\",\n    \"协\",\n    \"诉\",\n    \"念\",\n    \"陈\",\n    \"仍\",\n    \"罗\",\n    \"盐\",\n    \"友\",\n    \"洋\",\n    \"错\",\n    \"苦\",\n    \"夜\",\n    \"刑\",\n    \"移\",\n    \"频\",\n    \"逐\",\n    \"靠\",\n    \"混\",\n    \"母\",\n    \"短\",\n    \"皮\",\n    \"终\",\n    \"聚\",\n    \"汽\",\n    \"村\",\n    \"云\",\n    \"哪\",\n    \"既\",\n    \"距\",\n    \"卫\",\n    \"停\",\n    \"烈\",\n    \"央\",\n    \"察\",\n    \"烧\",\n    \"迅\",\n    \"境\",\n    \"若\",\n    \"印\",\n    \"洲\",\n    \"刻\",\n    \"括\",\n    \"激\",\n    \"孔\",\n    \"搞\",\n    \"甚\",\n    \"室\",\n    \"待\",\n    \"核\",\n    \"校\",\n    \"散\",\n    \"侵\",\n    \"吧\",\n    \"甲\",\n    \"游\",\n    \"久\",\n    \"菜\",\n    \"味\",\n    \"旧\",\n    \"模\",\n    \"湖\",\n    \"货\",\n    \"损\",\n    \"预\",\n    \"阻\",\n    \"毫\",\n    \"普\",\n    \"稳\",\n    \"乙\",\n    \"妈\",\n    \"植\",\n    \"息\",\n    \"扩\",\n    \"银\",\n    \"语\",\n    \"挥\",\n    \"酒\",\n    \"守\",\n    \"拿\",\n    \"序\",\n    \"纸\",\n    \"医\",\n    \"缺\",\n    \"雨\",\n    \"吗\",\n    \"针\",\n    \"刘\",\n    \"啊\",\n    \"急\",\n    \"唱\",\n    \"误\",\n    \"训\",\n    \"愿\",\n    \"审\",\n    \"附\",\n    \"获\",\n    \"茶\",\n    \"鲜\",\n    \"粮\",\n    \"斤\",\n    \"孩\",\n    \"脱\",\n    \"硫\",\n    \"肥\",\n    \"善\",\n    \"龙\",\n    \"演\",\n    \"父\",\n    \"渐\",\n    \"血\",\n    \"欢\",\n    \"械\",\n    \"掌\",\n    \"歌\",\n    \"沙\",\n    \"刚\",\n    \"攻\",\n    \"谓\",\n    \"盾\",\n    \"讨\",\n    \"晚\",\n    \"粒\",\n    \"乱\",\n    \"燃\",\n    \"矛\",\n    \"乎\",\n    \"杀\",\n    \"药\",\n    \"宁\",\n    \"鲁\",\n    \"贵\",\n    \"钟\",\n    \"煤\",\n    \"读\",\n    \"班\",\n    \"伯\",\n    \"香\",\n    \"介\",\n    \"迫\",\n    \"句\",\n    \"丰\",\n    \"培\",\n    \"握\",\n    \"兰\",\n    \"担\",\n    \"弦\",\n    \"蛋\",\n    \"沉\",\n    \"假\",\n    \"穿\",\n    \"执\",\n    \"答\",\n    \"乐\",\n    \"谁\",\n    \"顺\",\n    \"烟\",\n    \"缩\",\n    \"征\",\n    \"脸\",\n    \"喜\",\n    \"松\",\n    \"脚\",\n    \"困\",\n    \"异\",\n    \"免\",\n    \"背\",\n    \"星\",\n    \"福\",\n    \"买\",\n    \"染\",\n    \"井\",\n    \"概\",\n    \"慢\",\n    \"怕\",\n    \"磁\",\n    \"倍\",\n    \"祖\",\n    \"皇\",\n    \"促\",\n    \"静\",\n    \"补\",\n    \"评\",\n    \"翻\",\n    \"肉\",\n    \"践\",\n    \"尼\",\n    \"衣\",\n    \"宽\",\n    \"扬\",\n    \"棉\",\n    \"希\",\n    \"伤\",\n    \"操\",\n    \"垂\",\n    \"秋\",\n    \"宜\",\n    \"氢\",\n    \"套\",\n    \"督\",\n    \"振\",\n    \"架\",\n    \"亮\",\n    \"末\",\n    \"宪\",\n    \"庆\",\n    \"编\",\n    \"牛\",\n    \"触\",\n    \"映\",\n    \"雷\",\n    \"销\",\n    \"诗\",\n    \"座\",\n    \"居\",\n    \"抓\",\n    \"裂\",\n    \"胞\",\n    \"呼\",\n    \"娘\",\n    \"景\",\n    \"威\",\n    \"绿\",\n    \"晶\",\n    \"厚\",\n    \"盟\",\n    \"衡\",\n    \"鸡\",\n    \"孙\",\n    \"延\",\n    \"危\",\n    \"胶\",\n    \"屋\",\n    \"乡\",\n    \"临\",\n    \"陆\",\n    \"顾\",\n    \"掉\",\n    \"呀\",\n    \"灯\",\n    \"岁\",\n    \"措\",\n    \"束\",\n    \"耐\",\n    \"剧\",\n    \"玉\",\n    \"赵\",\n    \"跳\",\n    \"哥\",\n    \"季\",\n    \"课\",\n    \"凯\",\n    \"胡\",\n    \"额\",\n    \"款\",\n    \"绍\",\n    \"卷\",\n    \"齐\",\n    \"伟\",\n    \"蒸\",\n    \"殖\",\n    \"永\",\n    \"宗\",\n    \"苗\",\n    \"川\",\n    \"炉\",\n    \"岩\",\n    \"弱\",\n    \"零\",\n    \"杨\",\n    \"奏\",\n    \"沿\",\n    \"露\",\n    \"杆\",\n    \"探\",\n    \"滑\",\n    \"镇\",\n    \"饭\",\n    \"浓\",\n    \"航\",\n    \"怀\",\n    \"赶\",\n    \"库\",\n    \"夺\",\n    \"伊\",\n    \"灵\",\n    \"税\",\n    \"途\",\n    \"灭\",\n    \"赛\",\n    \"归\",\n    \"召\",\n    \"鼓\",\n    \"播\",\n    \"盘\",\n    \"裁\",\n    \"险\",\n    \"康\",\n    \"唯\",\n    \"录\",\n    \"菌\",\n    \"纯\",\n    \"借\",\n    \"糖\",\n    \"盖\",\n    \"横\",\n    \"符\",\n    \"私\",\n    \"努\",\n    \"堂\",\n    \"域\",\n    \"枪\",\n    \"润\",\n    \"幅\",\n    \"哈\",\n    \"竟\",\n    \"熟\",\n    \"虫\",\n    \"泽\",\n    \"脑\",\n    \"壤\",\n    \"碳\",\n    \"欧\",\n    \"遍\",\n    \"侧\",\n    \"寨\",\n    \"敢\",\n    \"彻\",\n    \"虑\",\n    \"斜\",\n    \"薄\",\n    \"庭\",\n    \"纳\",\n    \"弹\",\n    \"饲\",\n    \"伸\",\n    \"折\",\n    \"麦\",\n    \"湿\",\n    \"暗\",\n    \"荷\",\n    \"瓦\",\n    \"塞\",\n    \"床\",\n    \"筑\",\n    \"恶\",\n    \"户\",\n    \"访\",\n    \"塔\",\n    \"奇\",\n    \"透\",\n    \"梁\",\n    \"刀\",\n    \"旋\",\n    \"迹\",\n    \"卡\",\n    \"氯\",\n    \"遇\",\n    \"份\",\n    \"毒\",\n    \"泥\",\n    \"退\",\n    \"洗\",\n    \"摆\",\n    \"灰\",\n    \"彩\",\n    \"卖\",\n    \"耗\",\n    \"夏\",\n    \"择\",\n    \"忙\",\n    \"铜\",\n    \"献\",\n    \"硬\",\n    \"予\",\n    \"繁\",\n    \"圈\",\n    \"雪\",\n    \"函\",\n    \"亦\",\n    \"抽\",\n    \"篇\",\n    \"阵\",\n    \"阴\",\n    \"丁\",\n    \"尺\",\n    \"追\",\n    \"堆\",\n    \"雄\",\n    \"迎\",\n    \"泛\",\n    \"爸\",\n    \"楼\",\n    \"避\",\n    \"谋\",\n    \"吨\",\n    \"野\",\n    \"猪\",\n    \"旗\",\n    \"累\",\n    \"偏\",\n    \"典\",\n    \"馆\",\n    \"索\",\n    \"秦\",\n    \"脂\",\n    \"潮\",\n    \"爷\",\n    \"豆\",\n    \"忽\",\n    \"托\",\n    \"惊\",\n    \"塑\",\n    \"遗\",\n    \"愈\",\n    \"朱\",\n    \"替\",\n    \"纤\",\n    \"粗\",\n    \"倾\",\n    \"尚\",\n    \"痛\",\n    \"楚\",\n    \"谢\",\n    \"奋\",\n    \"购\",\n    \"磨\",\n    \"君\",\n    \"池\",\n    \"旁\",\n    \"碎\",\n    \"骨\",\n    \"监\",\n    \"捕\",\n    \"弟\",\n    \"暴\",\n    \"割\",\n    \"贯\",\n    \"殊\",\n    \"释\",\n    \"词\",\n    \"亡\",\n    \"壁\",\n    \"顿\",\n    \"宝\",\n    \"午\",\n    \"尘\",\n    \"闻\",\n    \"揭\",\n    \"炮\",\n    \"残\",\n    \"冬\",\n    \"桥\",\n    \"妇\",\n    \"警\",\n    \"综\",\n    \"招\",\n    \"吴\",\n    \"付\",\n    \"浮\",\n    \"遭\",\n    \"徐\",\n    \"您\",\n    \"摇\",\n    \"谷\",\n    \"赞\",\n    \"箱\",\n    \"隔\",\n    \"订\",\n    \"男\",\n    \"吹\",\n    \"园\",\n    \"纷\",\n    \"唐\",\n    \"败\",\n    \"宋\",\n    \"玻\",\n    \"巨\",\n    \"耕\",\n    \"坦\",\n    \"荣\",\n    \"闭\",\n    \"湾\",\n    \"键\",\n    \"凡\",\n    \"驻\",\n    \"锅\",\n    \"救\",\n    \"恩\",\n    \"剥\",\n    \"凝\",\n    \"碱\",\n    \"齿\",\n    \"截\",\n    \"炼\",\n    \"麻\",\n    \"纺\",\n    \"禁\",\n    \"废\",\n    \"盛\",\n    \"版\",\n    \"缓\",\n    \"净\",\n    \"睛\",\n    \"昌\",\n    \"婚\",\n    \"涉\",\n    \"筒\",\n    \"嘴\",\n    \"插\",\n    \"岸\",\n    \"朗\",\n    \"庄\",\n    \"街\",\n    \"藏\",\n    \"姑\",\n    \"贸\",\n    \"腐\",\n    \"奴\",\n    \"啦\",\n    \"惯\",\n    \"乘\",\n    \"伙\",\n    \"恢\",\n    \"匀\",\n    \"纱\",\n    \"扎\",\n    \"辩\",\n    \"耳\",\n    \"彪\",\n    \"臣\",\n    \"亿\",\n    \"璃\",\n    \"抵\",\n    \"脉\",\n    \"秀\",\n    \"萨\",\n    \"俄\",\n    \"网\",\n    \"舞\",\n    \"店\",\n    \"喷\",\n    \"纵\",\n    \"寸\",\n    \"汗\",\n    \"挂\",\n    \"洪\",\n    \"贺\",\n    \"闪\",\n    \"柬\",\n    \"爆\",\n    \"烯\",\n    \"津\",\n    \"稻\",\n    \"墙\",\n    \"软\",\n    \"勇\",\n    \"像\",\n    \"滚\",\n    \"厘\",\n    \"蒙\",\n    \"芳\",\n    \"肯\",\n    \"坡\",\n    \"柱\",\n    \"荡\",\n    \"腿\",\n    \"仪\",\n    \"旅\",\n    \"尾\",\n    \"轧\",\n    \"冰\",\n    \"贡\",\n    \"登\",\n    \"黎\",\n    \"削\",\n    \"钻\",\n    \"勒\",\n    \"逃\",\n    \"障\",\n    \"氨\",\n    \"郭\",\n    \"峰\",\n    \"币\",\n    \"港\",\n    \"伏\",\n    \"轨\",\n    \"亩\",\n    \"毕\",\n    \"擦\",\n    \"莫\",\n    \"刺\",\n    \"浪\",\n    \"秘\",\n    \"援\",\n    \"株\",\n    \"健\",\n    \"售\",\n    \"股\",\n    \"岛\",\n    \"甘\",\n    \"泡\",\n    \"睡\",\n    \"童\",\n    \"铸\",\n    \"汤\",\n    \"阀\",\n    \"休\",\n    \"汇\",\n    \"舍\",\n    \"牧\",\n    \"绕\",\n    \"炸\",\n    \"哲\",\n    \"磷\",\n    \"绩\",\n    \"朋\",\n    \"淡\",\n    \"尖\",\n    \"启\",\n    \"陷\",\n    \"柴\",\n    \"呈\",\n    \"徒\",\n    \"颜\",\n    \"泪\",\n    \"稍\",\n    \"忘\",\n    \"泵\",\n    \"蓝\",\n    \"拖\",\n    \"洞\",\n    \"授\",\n    \"镜\",\n    \"辛\",\n    \"壮\",\n    \"锋\",\n    \"贫\",\n    \"虚\",\n    \"弯\",\n    \"摩\",\n    \"泰\",\n    \"幼\",\n    \"廷\",\n    \"尊\",\n    \"窗\",\n    \"纲\",\n    \"弄\",\n    \"隶\",\n    \"疑\",\n    \"氏\",\n    \"宫\",\n    \"姐\",\n    \"震\",\n    \"瑞\",\n    \"怪\",\n    \"尤\",\n    \"琴\",\n    \"循\",\n    \"描\",\n    \"膜\",\n    \"违\",\n    \"夹\",\n    \"腰\",\n    \"缘\",\n    \"珠\",\n    \"穷\",\n    \"森\",\n    \"枝\",\n    \"竹\",\n    \"沟\",\n    \"催\",\n    \"绳\",\n    \"忆\",\n    \"邦\",\n    \"剩\",\n    \"幸\",\n    \"浆\",\n    \"栏\",\n    \"拥\",\n    \"牙\",\n    \"贮\",\n    \"礼\",\n    \"滤\",\n    \"钠\",\n    \"纹\",\n    \"罢\",\n    \"拍\",\n    \"咱\",\n    \"喊\",\n    \"袖\",\n    \"埃\",\n    \"勤\",\n    \"罚\",\n    \"焦\",\n    \"潜\",\n    \"伍\",\n    \"墨\",\n    \"欲\",\n    \"缝\",\n    \"姓\",\n    \"刊\",\n    \"饱\",\n    \"仿\",\n    \"奖\",\n    \"铝\",\n    \"鬼\",\n    \"丽\",\n    \"跨\",\n    \"默\",\n    \"挖\",\n    \"链\",\n    \"扫\",\n    \"喝\",\n    \"袋\",\n    \"炭\",\n    \"污\",\n    \"幕\",\n    \"诸\",\n    \"弧\",\n    \"励\",\n    \"梅\",\n    \"奶\",\n    \"洁\",\n    \"灾\",\n    \"舟\",\n    \"鉴\",\n    \"苯\",\n    \"讼\",\n    \"抱\",\n    \"毁\",\n    \"懂\",\n    \"寒\",\n    \"智\",\n    \"埔\",\n    \"寄\",\n    \"届\",\n    \"跃\",\n    \"渡\",\n    \"挑\",\n    \"丹\",\n    \"艰\",\n    \"贝\",\n    \"碰\",\n    \"拔\",\n    \"爹\",\n    \"戴\",\n    \"码\",\n    \"梦\",\n    \"芽\",\n    \"熔\",\n    \"赤\",\n    \"渔\",\n    \"哭\",\n    \"敬\",\n    \"颗\",\n    \"奔\",\n    \"铅\",\n    \"仲\",\n    \"虎\",\n    \"稀\",\n    \"妹\",\n    \"乏\",\n    \"珍\",\n    \"申\",\n    \"桌\",\n    \"遵\",\n    \"允\",\n    \"隆\",\n    \"螺\",\n    \"仓\",\n    \"魏\",\n    \"锐\",\n    \"晓\",\n    \"氮\",\n    \"兼\",\n    \"隐\",\n    \"碍\",\n    \"赫\",\n    \"拨\",\n    \"忠\",\n    \"肃\",\n    \"缸\",\n    \"牵\",\n    \"抢\",\n    \"博\",\n    \"巧\",\n    \"壳\",\n    \"兄\",\n    \"杜\",\n    \"讯\",\n    \"诚\",\n    \"碧\",\n    \"祥\",\n    \"柯\",\n    \"页\",\n    \"巡\",\n    \"矩\",\n    \"悲\",\n    \"灌\",\n    \"龄\",\n    \"伦\",\n    \"票\",\n    \"寻\",\n    \"桂\",\n    \"铺\",\n    \"圣\",\n    \"恐\",\n    \"恰\",\n    \"郑\",\n    \"趣\",\n    \"抬\",\n    \"荒\",\n    \"腾\",\n    \"贴\",\n    \"柔\",\n    \"滴\",\n    \"猛\",\n    \"阔\",\n    \"辆\",\n    \"妻\",\n    \"填\",\n    \"撤\",\n    \"储\",\n    \"签\",\n    \"闹\",\n    \"扰\",\n    \"紫\",\n    \"砂\",\n    \"递\",\n    \"戏\",\n    \"吊\",\n    \"陶\",\n    \"伐\",\n    \"喂\",\n    \"疗\",\n    \"瓶\",\n    \"婆\",\n    \"抚\",\n    \"臂\",\n    \"摸\",\n    \"忍\",\n    \"虾\",\n    \"蜡\",\n    \"邻\",\n    \"胸\",\n    \"巩\",\n    \"挤\",\n    \"偶\",\n    \"弃\",\n    \"槽\",\n    \"劲\",\n    \"乳\",\n    \"邓\",\n    \"吉\",\n    \"仁\",\n    \"烂\",\n    \"砖\",\n    \"租\",\n    \"乌\",\n    \"舰\",\n    \"伴\",\n    \"瓜\",\n    \"浅\",\n    \"丙\",\n    \"暂\",\n    \"燥\",\n    \"橡\",\n    \"柳\",\n    \"迷\",\n    \"暖\",\n    \"牌\",\n    \"秧\",\n    \"胆\",\n    \"详\",\n    \"簧\",\n    \"踏\",\n    \"瓷\",\n    \"谱\",\n    \"呆\",\n    \"宾\",\n    \"糊\",\n    \"洛\",\n    \"辉\",\n    \"愤\",\n    \"竞\",\n    \"隙\",\n    \"怒\",\n    \"粘\",\n    \"乃\",\n    \"绪\",\n    \"肩\",\n    \"籍\",\n    \"敏\",\n    \"涂\",\n    \"熙\",\n    \"皆\",\n    \"侦\",\n    \"悬\",\n    \"掘\",\n    \"享\",\n    \"纠\",\n    \"醒\",\n    \"狂\",\n    \"锁\",\n    \"淀\",\n    \"恨\",\n    \"牲\",\n    \"霸\",\n    \"爬\",\n    \"赏\",\n    \"逆\",\n    \"玩\",\n    \"陵\",\n    \"祝\",\n    \"秒\",\n    \"浙\",\n    \"貌\",\n    \"役\",\n    \"彼\",\n    \"悉\",\n    \"鸭\",\n    \"趋\",\n    \"凤\",\n    \"晨\",\n    \"畜\",\n    \"辈\",\n    \"秩\",\n    \"卵\",\n    \"署\",\n    \"梯\",\n    \"炎\",\n    \"滩\",\n    \"棋\",\n    \"驱\",\n    \"筛\",\n    \"峡\",\n    \"冒\",\n    \"啥\",\n    \"寿\",\n    \"译\",\n    \"浸\",\n    \"泉\",\n    \"帽\",\n    \"迟\",\n    \"硅\",\n    \"疆\",\n    \"贷\",\n    \"漏\",\n    \"稿\",\n    \"冠\",\n    \"嫩\",\n    \"胁\",\n    \"芯\",\n    \"牢\",\n    \"叛\",\n    \"蚀\",\n    \"奥\",\n    \"鸣\",\n    \"岭\",\n    \"羊\",\n    \"凭\",\n    \"串\",\n    \"塘\",\n    \"绘\",\n    \"酵\",\n    \"融\",\n    \"盆\",\n    \"锡\",\n    \"庙\",\n    \"筹\",\n    \"冻\",\n    \"辅\",\n    \"摄\",\n    \"袭\",\n    \"筋\",\n    \"拒\",\n    \"僚\",\n    \"旱\",\n    \"钾\",\n    \"鸟\",\n    \"漆\",\n    \"沈\",\n    \"眉\",\n    \"疏\",\n    \"添\",\n    \"棒\",\n    \"穗\",\n    \"硝\",\n    \"韩\",\n    \"逼\",\n    \"扭\",\n    \"侨\",\n    \"凉\",\n    \"挺\",\n    \"碗\",\n    \"栽\",\n    \"炒\",\n    \"杯\",\n    \"患\",\n    \"馏\",\n    \"劝\",\n    \"豪\",\n    \"辽\",\n    \"勃\",\n    \"鸿\",\n    \"旦\",\n    \"吏\",\n    \"拜\",\n    \"狗\",\n    \"埋\",\n    \"辊\",\n    \"掩\",\n    \"饮\",\n    \"搬\",\n    \"骂\",\n    \"辞\",\n    \"勾\",\n    \"扣\",\n    \"估\",\n    \"蒋\",\n    \"绒\",\n    \"雾\",\n    \"丈\",\n    \"朵\",\n    \"姆\",\n    \"拟\",\n    \"宇\",\n    \"辑\",\n    \"陕\",\n    \"雕\",\n    \"偿\",\n    \"蓄\",\n    \"崇\",\n    \"剪\",\n    \"倡\",\n    \"厅\",\n    \"咬\",\n    \"驶\",\n    \"薯\",\n    \"刷\",\n    \"斥\",\n    \"番\",\n    \"赋\",\n    \"奉\",\n    \"佛\",\n    \"浇\",\n    \"漫\",\n    \"曼\",\n    \"扇\",\n    \"钙\",\n    \"桃\",\n    \"扶\",\n    \"仔\",\n    \"返\",\n    \"俗\",\n    \"亏\",\n    \"腔\",\n    \"鞋\",\n    \"棱\",\n    \"覆\",\n    \"框\",\n    \"悄\",\n    \"叔\",\n    \"撞\",\n    \"骗\",\n    \"勘\",\n    \"旺\",\n    \"沸\",\n    \"孤\",\n    \"吐\",\n    \"孟\",\n    \"渠\",\n    \"屈\",\n    \"疾\",\n    \"妙\",\n    \"惜\",\n    \"仰\",\n    \"狠\",\n    \"胀\",\n    \"谐\",\n    \"抛\",\n    \"霉\",\n    \"桑\",\n    \"岗\",\n    \"嘛\",\n    \"衰\",\n    \"盗\",\n    \"渗\",\n    \"脏\",\n    \"赖\",\n    \"涌\",\n    \"甜\",\n    \"曹\",\n    \"阅\",\n    \"肌\",\n    \"哩\",\n    \"厉\",\n    \"烃\",\n    \"纬\",\n    \"毅\",\n    \"昨\",\n    \"伪\",\n    \"症\",\n    \"煮\",\n    \"叹\",\n    \"钉\",\n    \"搭\",\n    \"茎\",\n    \"笼\",\n    \"酷\",\n    \"偷\",\n    \"弓\",\n    \"锥\",\n    \"恒\",\n    \"杰\",\n    \"坑\",\n    \"鼻\",\n    \"翼\",\n    \"纶\",\n    \"叙\",\n    \"狱\",\n    \"逮\",\n    \"罐\",\n    \"络\",\n    \"棚\",\n    \"抑\",\n    \"膨\",\n    \"蔬\",\n    \"寺\",\n    \"骤\",\n    \"穆\",\n    \"冶\",\n    \"枯\",\n    \"册\",\n    \"尸\",\n    \"凸\",\n    \"绅\",\n    \"坯\",\n    \"牺\",\n    \"焰\",\n    \"轰\",\n    \"欣\",\n    \"晋\",\n    \"瘦\",\n    \"御\",\n    \"锭\",\n    \"锦\",\n    \"丧\",\n    \"旬\",\n    \"锻\",\n    \"垄\",\n    \"搜\",\n    \"扑\",\n    \"邀\",\n    \"亭\",\n    \"酯\",\n    \"迈\",\n    \"舒\",\n    \"脆\",\n    \"酶\",\n    \"闲\",\n    \"忧\",\n    \"酚\",\n    \"顽\",\n    \"羽\",\n    \"涨\",\n    \"卸\",\n    \"仗\",\n    \"陪\",\n    \"辟\",\n    \"惩\",\n    \"杭\",\n    \"姚\",\n    \"肚\",\n    \"捉\",\n    \"飘\",\n    \"漂\",\n    \"昆\",\n    \"欺\",\n    \"吾\",\n    \"郎\",\n    \"烷\",\n    \"汁\",\n    \"呵\",\n    \"饰\",\n    \"萧\",\n    \"雅\",\n    \"邮\",\n    \"迁\",\n    \"燕\",\n    \"撒\",\n    \"姻\",\n    \"赴\",\n    \"宴\",\n    \"烦\",\n    \"债\",\n    \"帐\",\n    \"斑\",\n    \"铃\",\n    \"旨\",\n    \"醇\",\n    \"董\",\n    \"饼\",\n    \"雏\",\n    \"姿\",\n    \"拌\",\n    \"傅\",\n    \"腹\",\n    \"妥\",\n    \"揉\",\n    \"贤\",\n    \"拆\",\n    \"歪\",\n    \"葡\",\n    \"胺\",\n    \"丢\",\n    \"浩\",\n    \"徽\",\n    \"昂\",\n    \"垫\",\n    \"挡\",\n    \"览\",\n    \"贪\",\n    \"慰\",\n    \"缴\",\n    \"汪\",\n    \"慌\",\n    \"冯\",\n    \"诺\",\n    \"姜\",\n    \"谊\",\n    \"凶\",\n    \"劣\",\n    \"诬\",\n    \"耀\",\n    \"昏\",\n    \"躺\",\n    \"盈\",\n    \"骑\",\n    \"乔\",\n    \"溪\",\n    \"丛\",\n    \"卢\",\n    \"抹\",\n    \"闷\",\n    \"咨\",\n    \"刮\",\n    \"驾\",\n    \"缆\",\n    \"悟\",\n    \"摘\",\n    \"铒\",\n    \"掷\",\n    \"颇\",\n    \"幻\",\n    \"柄\",\n    \"惠\",\n    \"惨\",\n    \"佳\",\n    \"仇\",\n    \"腊\",\n    \"窝\",\n    \"涤\",\n    \"剑\",\n    \"瞧\",\n    \"堡\",\n    \"泼\",\n    \"葱\",\n    \"罩\",\n    \"霍\",\n    \"捞\",\n    \"胎\",\n    \"苍\",\n    \"滨\",\n    \"俩\",\n    \"捅\",\n    \"湘\",\n    \"砍\",\n    \"霞\",\n    \"邵\",\n    \"萄\",\n    \"疯\",\n    \"淮\",\n    \"遂\",\n    \"熊\",\n    \"粪\",\n    \"烘\",\n    \"宿\",\n    \"档\",\n    \"戈\",\n    \"驳\",\n    \"嫂\",\n    \"裕\",\n    \"徙\",\n    \"箭\",\n    \"捐\",\n    \"肠\",\n    \"撑\",\n    \"晒\",\n    \"辨\",\n    \"殿\",\n    \"莲\",\n    \"摊\",\n    \"搅\",\n    \"酱\",\n    \"屏\",\n    \"疫\",\n    \"哀\",\n    \"蔡\",\n    \"堵\",\n    \"沫\",\n    \"皱\",\n    \"畅\",\n    \"叠\",\n    \"阁\",\n    \"莱\",\n    \"敲\",\n    \"辖\",\n    \"钩\",\n    \"痕\",\n    \"坝\",\n    \"巷\",\n    \"饿\",\n    \"祸\",\n    \"丘\",\n    \"玄\",\n    \"溜\",\n    \"曰\",\n    \"逻\",\n    \"彭\",\n    \"尝\",\n    \"卿\",\n    \"妨\",\n    \"艇\",\n    \"吞\",\n    \"韦\",\n    \"怨\",\n    \"矮\",\n    \"歇\"\n]\n","module.exports=[\n    \"abdikace\",\n    \"abeceda\",\n    \"adresa\",\n    \"agrese\",\n    \"akce\",\n    \"aktovka\",\n    \"alej\",\n    \"alkohol\",\n    \"amputace\",\n    \"ananas\",\n    \"andulka\",\n    \"anekdota\",\n    \"anketa\",\n    \"antika\",\n    \"anulovat\",\n    \"archa\",\n    \"arogance\",\n    \"asfalt\",\n    \"asistent\",\n    \"aspirace\",\n    \"astma\",\n    \"astronom\",\n    \"atlas\",\n    \"atletika\",\n    \"atol\",\n    \"autobus\",\n    \"azyl\",\n    \"babka\",\n    \"bachor\",\n    \"bacil\",\n    \"baculka\",\n    \"badatel\",\n    \"bageta\",\n    \"bagr\",\n    \"bahno\",\n    \"bakterie\",\n    \"balada\",\n    \"baletka\",\n    \"balkon\",\n    \"balonek\",\n    \"balvan\",\n    \"balza\",\n    \"bambus\",\n    \"bankomat\",\n    \"barbar\",\n    \"baret\",\n    \"barman\",\n    \"baroko\",\n    \"barva\",\n    \"baterka\",\n    \"batoh\",\n    \"bavlna\",\n    \"bazalka\",\n    \"bazilika\",\n    \"bazuka\",\n    \"bedna\",\n    \"beran\",\n    \"beseda\",\n    \"bestie\",\n    \"beton\",\n    \"bezinka\",\n    \"bezmoc\",\n    \"beztak\",\n    \"bicykl\",\n    \"bidlo\",\n    \"biftek\",\n    \"bikiny\",\n    \"bilance\",\n    \"biograf\",\n    \"biolog\",\n    \"bitva\",\n    \"bizon\",\n    \"blahobyt\",\n    \"blatouch\",\n    \"blecha\",\n    \"bledule\",\n    \"blesk\",\n    \"blikat\",\n    \"blizna\",\n    \"blokovat\",\n    \"bloudit\",\n    \"blud\",\n    \"bobek\",\n    \"bobr\",\n    \"bodlina\",\n    \"bodnout\",\n    \"bohatost\",\n    \"bojkot\",\n    \"bojovat\",\n    \"bokorys\",\n    \"bolest\",\n    \"borec\",\n    \"borovice\",\n    \"bota\",\n    \"boubel\",\n    \"bouchat\",\n    \"bouda\",\n    \"boule\",\n    \"bourat\",\n    \"boxer\",\n    \"bradavka\",\n    \"brambora\",\n    \"branka\",\n    \"bratr\",\n    \"brepta\",\n    \"briketa\",\n    \"brko\",\n    \"brloh\",\n    \"bronz\",\n    \"broskev\",\n    \"brunetka\",\n    \"brusinka\",\n    \"brzda\",\n    \"brzy\",\n    \"bublina\",\n    \"bubnovat\",\n    \"buchta\",\n    \"buditel\",\n    \"budka\",\n    \"budova\",\n    \"bufet\",\n    \"bujarost\",\n    \"bukvice\",\n    \"buldok\",\n    \"bulva\",\n    \"bunda\",\n    \"bunkr\",\n    \"burza\",\n    \"butik\",\n    \"buvol\",\n    \"buzola\",\n    \"bydlet\",\n    \"bylina\",\n    \"bytovka\",\n    \"bzukot\",\n    \"capart\",\n    \"carevna\",\n    \"cedr\",\n    \"cedule\",\n    \"cejch\",\n    \"cejn\",\n    \"cela\",\n    \"celer\",\n    \"celkem\",\n    \"celnice\",\n    \"cenina\",\n    \"cennost\",\n    \"cenovka\",\n    \"centrum\",\n    \"cenzor\",\n    \"cestopis\",\n    \"cetka\",\n    \"chalupa\",\n    \"chapadlo\",\n    \"charita\",\n    \"chata\",\n    \"chechtat\",\n    \"chemie\",\n    \"chichot\",\n    \"chirurg\",\n    \"chlad\",\n    \"chleba\",\n    \"chlubit\",\n    \"chmel\",\n    \"chmura\",\n    \"chobot\",\n    \"chochol\",\n    \"chodba\",\n    \"cholera\",\n    \"chomout\",\n    \"chopit\",\n    \"choroba\",\n    \"chov\",\n    \"chrapot\",\n    \"chrlit\",\n    \"chrt\",\n    \"chrup\",\n    \"chtivost\",\n    \"chudina\",\n    \"chutnat\",\n    \"chvat\",\n    \"chvilka\",\n    \"chvost\",\n    \"chyba\",\n    \"chystat\",\n    \"chytit\",\n    \"cibule\",\n    \"cigareta\",\n    \"cihelna\",\n    \"cihla\",\n    \"cinkot\",\n    \"cirkus\",\n    \"cisterna\",\n    \"citace\",\n    \"citrus\",\n    \"cizinec\",\n    \"cizost\",\n    \"clona\",\n    \"cokoliv\",\n    \"couvat\",\n    \"ctitel\",\n    \"ctnost\",\n    \"cudnost\",\n    \"cuketa\",\n    \"cukr\",\n    \"cupot\",\n    \"cvaknout\",\n    \"cval\",\n    \"cvik\",\n    \"cvrkot\",\n    \"cyklista\",\n    \"daleko\",\n    \"dareba\",\n    \"datel\",\n    \"datum\",\n    \"dcera\",\n    \"debata\",\n    \"dechovka\",\n    \"decibel\",\n    \"deficit\",\n    \"deflace\",\n    \"dekl\",\n    \"dekret\",\n    \"demokrat\",\n    \"deprese\",\n    \"derby\",\n    \"deska\",\n    \"detektiv\",\n    \"dikobraz\",\n    \"diktovat\",\n    \"dioda\",\n    \"diplom\",\n    \"disk\",\n    \"displej\",\n    \"divadlo\",\n    \"divoch\",\n    \"dlaha\",\n    \"dlouho\",\n    \"dluhopis\",\n    \"dnes\",\n    \"dobro\",\n    \"dobytek\",\n    \"docent\",\n    \"dochutit\",\n    \"dodnes\",\n    \"dohled\",\n    \"dohoda\",\n    \"dohra\",\n    \"dojem\",\n    \"dojnice\",\n    \"doklad\",\n    \"dokola\",\n    \"doktor\",\n    \"dokument\",\n    \"dolar\",\n    \"doleva\",\n    \"dolina\",\n    \"doma\",\n    \"dominant\",\n    \"domluvit\",\n    \"domov\",\n    \"donutit\",\n    \"dopad\",\n    \"dopis\",\n    \"doplnit\",\n    \"doposud\",\n    \"doprovod\",\n    \"dopustit\",\n    \"dorazit\",\n    \"dorost\",\n    \"dort\",\n    \"dosah\",\n    \"doslov\",\n    \"dostatek\",\n    \"dosud\",\n    \"dosyta\",\n    \"dotaz\",\n    \"dotek\",\n    \"dotknout\",\n    \"doufat\",\n    \"doutnat\",\n    \"dovozce\",\n    \"dozadu\",\n    \"doznat\",\n    \"dozorce\",\n    \"drahota\",\n    \"drak\",\n    \"dramatik\",\n    \"dravec\",\n    \"draze\",\n    \"drdol\",\n    \"drobnost\",\n    \"drogerie\",\n    \"drozd\",\n    \"drsnost\",\n    \"drtit\",\n    \"drzost\",\n    \"duben\",\n    \"duchovno\",\n    \"dudek\",\n    \"duha\",\n    \"duhovka\",\n    \"dusit\",\n    \"dusno\",\n    \"dutost\",\n    \"dvojice\",\n    \"dvorec\",\n    \"dynamit\",\n    \"ekolog\",\n    \"ekonomie\",\n    \"elektron\",\n    \"elipsa\",\n    \"email\",\n    \"emise\",\n    \"emoce\",\n    \"empatie\",\n    \"epizoda\",\n    \"epocha\",\n    \"epopej\",\n    \"epos\",\n    \"esej\",\n    \"esence\",\n    \"eskorta\",\n    \"eskymo\",\n    \"etiketa\",\n    \"euforie\",\n    \"evoluce\",\n    \"exekuce\",\n    \"exkurze\",\n    \"expedice\",\n    \"exploze\",\n    \"export\",\n    \"extrakt\",\n    \"facka\",\n    \"fajfka\",\n    \"fakulta\",\n    \"fanatik\",\n    \"fantazie\",\n    \"farmacie\",\n    \"favorit\",\n    \"fazole\",\n    \"federace\",\n    \"fejeton\",\n    \"fenka\",\n    \"fialka\",\n    \"figurant\",\n    \"filozof\",\n    \"filtr\",\n    \"finance\",\n    \"finta\",\n    \"fixace\",\n    \"fjord\",\n    \"flanel\",\n    \"flirt\",\n    \"flotila\",\n    \"fond\",\n    \"fosfor\",\n    \"fotbal\",\n    \"fotka\",\n    \"foton\",\n    \"frakce\",\n    \"freska\",\n    \"fronta\",\n    \"fukar\",\n    \"funkce\",\n    \"fyzika\",\n    \"galeje\",\n    \"garant\",\n    \"genetika\",\n    \"geolog\",\n    \"gilotina\",\n    \"glazura\",\n    \"glejt\",\n    \"golem\",\n    \"golfista\",\n    \"gotika\",\n    \"graf\",\n    \"gramofon\",\n    \"granule\",\n    \"grep\",\n    \"gril\",\n    \"grog\",\n    \"groteska\",\n    \"guma\",\n    \"hadice\",\n    \"hadr\",\n    \"hala\",\n    \"halenka\",\n    \"hanba\",\n    \"hanopis\",\n    \"harfa\",\n    \"harpuna\",\n    \"havran\",\n    \"hebkost\",\n    \"hejkal\",\n    \"hejno\",\n    \"hejtman\",\n    \"hektar\",\n    \"helma\",\n    \"hematom\",\n    \"herec\",\n    \"herna\",\n    \"heslo\",\n    \"hezky\",\n    \"historik\",\n    \"hladovka\",\n    \"hlasivky\",\n    \"hlava\",\n    \"hledat\",\n    \"hlen\",\n    \"hlodavec\",\n    \"hloh\",\n    \"hloupost\",\n    \"hltat\",\n    \"hlubina\",\n    \"hluchota\",\n    \"hmat\",\n    \"hmota\",\n    \"hmyz\",\n    \"hnis\",\n    \"hnojivo\",\n    \"hnout\",\n    \"hoblina\",\n    \"hoboj\",\n    \"hoch\",\n    \"hodiny\",\n    \"hodlat\",\n    \"hodnota\",\n    \"hodovat\",\n    \"hojnost\",\n    \"hokej\",\n    \"holinka\",\n    \"holka\",\n    \"holub\",\n    \"homole\",\n    \"honitba\",\n    \"honorace\",\n    \"horal\",\n    \"horda\",\n    \"horizont\",\n    \"horko\",\n    \"horlivec\",\n    \"hormon\",\n    \"hornina\",\n    \"horoskop\",\n    \"horstvo\",\n    \"hospoda\",\n    \"hostina\",\n    \"hotovost\",\n    \"houba\",\n    \"houf\",\n    \"houpat\",\n    \"houska\",\n    \"hovor\",\n    \"hradba\",\n    \"hranice\",\n    \"hravost\",\n    \"hrazda\",\n    \"hrbolek\",\n    \"hrdina\",\n    \"hrdlo\",\n    \"hrdost\",\n    \"hrnek\",\n    \"hrobka\",\n    \"hromada\",\n    \"hrot\",\n    \"hrouda\",\n    \"hrozen\",\n    \"hrstka\",\n    \"hrubost\",\n    \"hryzat\",\n    \"hubenost\",\n    \"hubnout\",\n    \"hudba\",\n    \"hukot\",\n    \"humr\",\n    \"husita\",\n    \"hustota\",\n    \"hvozd\",\n    \"hybnost\",\n    \"hydrant\",\n    \"hygiena\",\n    \"hymna\",\n    \"hysterik\",\n    \"idylka\",\n    \"ihned\",\n    \"ikona\",\n    \"iluze\",\n    \"imunita\",\n    \"infekce\",\n    \"inflace\",\n    \"inkaso\",\n    \"inovace\",\n    \"inspekce\",\n    \"internet\",\n    \"invalida\",\n    \"investor\",\n    \"inzerce\",\n    \"ironie\",\n    \"jablko\",\n    \"jachta\",\n    \"jahoda\",\n    \"jakmile\",\n    \"jakost\",\n    \"jalovec\",\n    \"jantar\",\n    \"jarmark\",\n    \"jaro\",\n    \"jasan\",\n    \"jasno\",\n    \"jatka\",\n    \"javor\",\n    \"jazyk\",\n    \"jedinec\",\n    \"jedle\",\n    \"jednatel\",\n    \"jehlan\",\n    \"jekot\",\n    \"jelen\",\n    \"jelito\",\n    \"jemnost\",\n    \"jenom\",\n    \"jepice\",\n    \"jeseter\",\n    \"jevit\",\n    \"jezdec\",\n    \"jezero\",\n    \"jinak\",\n    \"jindy\",\n    \"jinoch\",\n    \"jiskra\",\n    \"jistota\",\n    \"jitrnice\",\n    \"jizva\",\n    \"jmenovat\",\n    \"jogurt\",\n    \"jurta\",\n    \"kabaret\",\n    \"kabel\",\n    \"kabinet\",\n    \"kachna\",\n    \"kadet\",\n    \"kadidlo\",\n    \"kahan\",\n    \"kajak\",\n    \"kajuta\",\n    \"kakao\",\n    \"kaktus\",\n    \"kalamita\",\n    \"kalhoty\",\n    \"kalibr\",\n    \"kalnost\",\n    \"kamera\",\n    \"kamkoliv\",\n    \"kamna\",\n    \"kanibal\",\n    \"kanoe\",\n    \"kantor\",\n    \"kapalina\",\n    \"kapela\",\n    \"kapitola\",\n    \"kapka\",\n    \"kaple\",\n    \"kapota\",\n    \"kapr\",\n    \"kapusta\",\n    \"kapybara\",\n    \"karamel\",\n    \"karotka\",\n    \"karton\",\n    \"kasa\",\n    \"katalog\",\n    \"katedra\",\n    \"kauce\",\n    \"kauza\",\n    \"kavalec\",\n    \"kazajka\",\n    \"kazeta\",\n    \"kazivost\",\n    \"kdekoliv\",\n    \"kdesi\",\n    \"kedluben\",\n    \"kemp\",\n    \"keramika\",\n    \"kino\",\n    \"klacek\",\n    \"kladivo\",\n    \"klam\",\n    \"klapot\",\n    \"klasika\",\n    \"klaun\",\n    \"klec\",\n    \"klenba\",\n    \"klepat\",\n    \"klesnout\",\n    \"klid\",\n    \"klima\",\n    \"klisna\",\n    \"klobouk\",\n    \"klokan\",\n    \"klopa\",\n    \"kloub\",\n    \"klubovna\",\n    \"klusat\",\n    \"kluzkost\",\n    \"kmen\",\n    \"kmitat\",\n    \"kmotr\",\n    \"kniha\",\n    \"knot\",\n    \"koalice\",\n    \"koberec\",\n    \"kobka\",\n    \"kobliha\",\n    \"kobyla\",\n    \"kocour\",\n    \"kohout\",\n    \"kojenec\",\n    \"kokos\",\n    \"koktejl\",\n    \"kolaps\",\n    \"koleda\",\n    \"kolize\",\n    \"kolo\",\n    \"komando\",\n    \"kometa\",\n    \"komik\",\n    \"komnata\",\n    \"komora\",\n    \"kompas\",\n    \"komunita\",\n    \"konat\",\n    \"koncept\",\n    \"kondice\",\n    \"konec\",\n    \"konfese\",\n    \"kongres\",\n    \"konina\",\n    \"konkurs\",\n    \"kontakt\",\n    \"konzerva\",\n    \"kopanec\",\n    \"kopie\",\n    \"kopnout\",\n    \"koprovka\",\n    \"korbel\",\n    \"korektor\",\n    \"kormidlo\",\n    \"koroptev\",\n    \"korpus\",\n    \"koruna\",\n    \"koryto\",\n    \"korzet\",\n    \"kosatec\",\n    \"kostka\",\n    \"kotel\",\n    \"kotleta\",\n    \"kotoul\",\n    \"koukat\",\n    \"koupelna\",\n    \"kousek\",\n    \"kouzlo\",\n    \"kovboj\",\n    \"koza\",\n    \"kozoroh\",\n    \"krabice\",\n    \"krach\",\n    \"krajina\",\n    \"kralovat\",\n    \"krasopis\",\n    \"kravata\",\n    \"kredit\",\n    \"krejcar\",\n    \"kresba\",\n    \"kreveta\",\n    \"kriket\",\n    \"kritik\",\n    \"krize\",\n    \"krkavec\",\n    \"krmelec\",\n    \"krmivo\",\n    \"krocan\",\n    \"krok\",\n    \"kronika\",\n    \"kropit\",\n    \"kroupa\",\n    \"krovka\",\n    \"krtek\",\n    \"kruhadlo\",\n    \"krupice\",\n    \"krutost\",\n    \"krvinka\",\n    \"krychle\",\n    \"krypta\",\n    \"krystal\",\n    \"kryt\",\n    \"kudlanka\",\n    \"kufr\",\n    \"kujnost\",\n    \"kukla\",\n    \"kulajda\",\n    \"kulich\",\n    \"kulka\",\n    \"kulomet\",\n    \"kultura\",\n    \"kuna\",\n    \"kupodivu\",\n    \"kurt\",\n    \"kurzor\",\n    \"kutil\",\n    \"kvalita\",\n    \"kvasinka\",\n    \"kvestor\",\n    \"kynolog\",\n    \"kyselina\",\n    \"kytara\",\n    \"kytice\",\n    \"kytka\",\n    \"kytovec\",\n    \"kyvadlo\",\n    \"labrador\",\n    \"lachtan\",\n    \"ladnost\",\n    \"laik\",\n    \"lakomec\",\n    \"lamela\",\n    \"lampa\",\n    \"lanovka\",\n    \"lasice\",\n    \"laso\",\n    \"lastura\",\n    \"latinka\",\n    \"lavina\",\n    \"lebka\",\n    \"leckdy\",\n    \"leden\",\n    \"lednice\",\n    \"ledovka\",\n    \"ledvina\",\n    \"legenda\",\n    \"legie\",\n    \"legrace\",\n    \"lehce\",\n    \"lehkost\",\n    \"lehnout\",\n    \"lektvar\",\n    \"lenochod\",\n    \"lentilka\",\n    \"lepenka\",\n    \"lepidlo\",\n    \"letadlo\",\n    \"letec\",\n    \"letmo\",\n    \"letokruh\",\n    \"levhart\",\n    \"levitace\",\n    \"levobok\",\n    \"libra\",\n    \"lichotka\",\n    \"lidojed\",\n    \"lidskost\",\n    \"lihovina\",\n    \"lijavec\",\n    \"lilek\",\n    \"limetka\",\n    \"linie\",\n    \"linka\",\n    \"linoleum\",\n    \"listopad\",\n    \"litina\",\n    \"litovat\",\n    \"lobista\",\n    \"lodivod\",\n    \"logika\",\n    \"logoped\",\n    \"lokalita\",\n    \"loket\",\n    \"lomcovat\",\n    \"lopata\",\n    \"lopuch\",\n    \"lord\",\n    \"losos\",\n    \"lotr\",\n    \"loudal\",\n    \"louh\",\n    \"louka\",\n    \"louskat\",\n    \"lovec\",\n    \"lstivost\",\n    \"lucerna\",\n    \"lucifer\",\n    \"lump\",\n    \"lusk\",\n    \"lustrace\",\n    \"lvice\",\n    \"lyra\",\n    \"lyrika\",\n    \"lysina\",\n    \"madam\",\n    \"madlo\",\n    \"magistr\",\n    \"mahagon\",\n    \"majetek\",\n    \"majitel\",\n    \"majorita\",\n    \"makak\",\n    \"makovice\",\n    \"makrela\",\n    \"malba\",\n    \"malina\",\n    \"malovat\",\n    \"malvice\",\n    \"maminka\",\n    \"mandle\",\n    \"manko\",\n    \"marnost\",\n    \"masakr\",\n    \"maskot\",\n    \"masopust\",\n    \"matice\",\n    \"matrika\",\n    \"maturita\",\n    \"mazanec\",\n    \"mazivo\",\n    \"mazlit\",\n    \"mazurka\",\n    \"mdloba\",\n    \"mechanik\",\n    \"meditace\",\n    \"medovina\",\n    \"melasa\",\n    \"meloun\",\n    \"mentolka\",\n    \"metla\",\n    \"metoda\",\n    \"metr\",\n    \"mezera\",\n    \"migrace\",\n    \"mihnout\",\n    \"mihule\",\n    \"mikina\",\n    \"mikrofon\",\n    \"milenec\",\n    \"milimetr\",\n    \"milost\",\n    \"mimika\",\n    \"mincovna\",\n    \"minibar\",\n    \"minomet\",\n    \"minulost\",\n    \"miska\",\n    \"mistr\",\n    \"mixovat\",\n    \"mladost\",\n    \"mlha\",\n    \"mlhovina\",\n    \"mlok\",\n    \"mlsat\",\n    \"mluvit\",\n    \"mnich\",\n    \"mnohem\",\n    \"mobil\",\n    \"mocnost\",\n    \"modelka\",\n    \"modlitba\",\n    \"mohyla\",\n    \"mokro\",\n    \"molekula\",\n    \"momentka\",\n    \"monarcha\",\n    \"monokl\",\n    \"monstrum\",\n    \"montovat\",\n    \"monzun\",\n    \"mosaz\",\n    \"moskyt\",\n    \"most\",\n    \"motivace\",\n    \"motorka\",\n    \"motyka\",\n    \"moucha\",\n    \"moudrost\",\n    \"mozaika\",\n    \"mozek\",\n    \"mozol\",\n    \"mramor\",\n    \"mravenec\",\n    \"mrkev\",\n    \"mrtvola\",\n    \"mrzet\",\n    \"mrzutost\",\n    \"mstitel\",\n    \"mudrc\",\n    \"muflon\",\n    \"mulat\",\n    \"mumie\",\n    \"munice\",\n    \"muset\",\n    \"mutace\",\n    \"muzeum\",\n    \"muzikant\",\n    \"myslivec\",\n    \"mzda\",\n    \"nabourat\",\n    \"nachytat\",\n    \"nadace\",\n    \"nadbytek\",\n    \"nadhoz\",\n    \"nadobro\",\n    \"nadpis\",\n    \"nahlas\",\n    \"nahnat\",\n    \"nahodile\",\n    \"nahradit\",\n    \"naivita\",\n    \"najednou\",\n    \"najisto\",\n    \"najmout\",\n    \"naklonit\",\n    \"nakonec\",\n    \"nakrmit\",\n    \"nalevo\",\n    \"namazat\",\n    \"namluvit\",\n    \"nanometr\",\n    \"naoko\",\n    \"naopak\",\n    \"naostro\",\n    \"napadat\",\n    \"napevno\",\n    \"naplnit\",\n    \"napnout\",\n    \"naposled\",\n    \"naprosto\",\n    \"narodit\",\n    \"naruby\",\n    \"narychlo\",\n    \"nasadit\",\n    \"nasekat\",\n    \"naslepo\",\n    \"nastat\",\n    \"natolik\",\n    \"navenek\",\n    \"navrch\",\n    \"navzdory\",\n    \"nazvat\",\n    \"nebe\",\n    \"nechat\",\n    \"necky\",\n    \"nedaleko\",\n    \"nedbat\",\n    \"neduh\",\n    \"negace\",\n    \"nehet\",\n    \"nehoda\",\n    \"nejen\",\n    \"nejprve\",\n    \"neklid\",\n    \"nelibost\",\n    \"nemilost\",\n    \"nemoc\",\n    \"neochota\",\n    \"neonka\",\n    \"nepokoj\",\n    \"nerost\",\n    \"nerv\",\n    \"nesmysl\",\n    \"nesoulad\",\n    \"netvor\",\n    \"neuron\",\n    \"nevina\",\n    \"nezvykle\",\n    \"nicota\",\n    \"nijak\",\n    \"nikam\",\n    \"nikdy\",\n    \"nikl\",\n    \"nikterak\",\n    \"nitro\",\n    \"nocleh\",\n    \"nohavice\",\n    \"nominace\",\n    \"nora\",\n    \"norek\",\n    \"nositel\",\n    \"nosnost\",\n    \"nouze\",\n    \"noviny\",\n    \"novota\",\n    \"nozdra\",\n    \"nuda\",\n    \"nudle\",\n    \"nuget\",\n    \"nutit\",\n    \"nutnost\",\n    \"nutrie\",\n    \"nymfa\",\n    \"obal\",\n    \"obarvit\",\n    \"obava\",\n    \"obdiv\",\n    \"obec\",\n    \"obehnat\",\n    \"obejmout\",\n    \"obezita\",\n    \"obhajoba\",\n    \"obilnice\",\n    \"objasnit\",\n    \"objekt\",\n    \"obklopit\",\n    \"oblast\",\n    \"oblek\",\n    \"obliba\",\n    \"obloha\",\n    \"obluda\",\n    \"obnos\",\n    \"obohatit\",\n    \"obojek\",\n    \"obout\",\n    \"obrazec\",\n    \"obrna\",\n    \"obruba\",\n    \"obrys\",\n    \"obsah\",\n    \"obsluha\",\n    \"obstarat\",\n    \"obuv\",\n    \"obvaz\",\n    \"obvinit\",\n    \"obvod\",\n    \"obvykle\",\n    \"obyvatel\",\n    \"obzor\",\n    \"ocas\",\n    \"ocel\",\n    \"ocenit\",\n    \"ochladit\",\n    \"ochota\",\n    \"ochrana\",\n    \"ocitnout\",\n    \"odboj\",\n    \"odbyt\",\n    \"odchod\",\n    \"odcizit\",\n    \"odebrat\",\n    \"odeslat\",\n    \"odevzdat\",\n    \"odezva\",\n    \"odhadce\",\n    \"odhodit\",\n    \"odjet\",\n    \"odjinud\",\n    \"odkaz\",\n    \"odkoupit\",\n    \"odliv\",\n    \"odluka\",\n    \"odmlka\",\n    \"odolnost\",\n    \"odpad\",\n    \"odpis\",\n    \"odplout\",\n    \"odpor\",\n    \"odpustit\",\n    \"odpykat\",\n    \"odrazka\",\n    \"odsoudit\",\n    \"odstup\",\n    \"odsun\",\n    \"odtok\",\n    \"odtud\",\n    \"odvaha\",\n    \"odveta\",\n    \"odvolat\",\n    \"odvracet\",\n    \"odznak\",\n    \"ofina\",\n    \"ofsajd\",\n    \"ohlas\",\n    \"ohnisko\",\n    \"ohrada\",\n    \"ohrozit\",\n    \"ohryzek\",\n    \"okap\",\n    \"okenice\",\n    \"oklika\",\n    \"okno\",\n    \"okouzlit\",\n    \"okovy\",\n    \"okrasa\",\n    \"okres\",\n    \"okrsek\",\n    \"okruh\",\n    \"okupant\",\n    \"okurka\",\n    \"okusit\",\n    \"olejnina\",\n    \"olizovat\",\n    \"omak\",\n    \"omeleta\",\n    \"omezit\",\n    \"omladina\",\n    \"omlouvat\",\n    \"omluva\",\n    \"omyl\",\n    \"onehdy\",\n    \"opakovat\",\n    \"opasek\",\n    \"operace\",\n    \"opice\",\n    \"opilost\",\n    \"opisovat\",\n    \"opora\",\n    \"opozice\",\n    \"opravdu\",\n    \"oproti\",\n    \"orbital\",\n    \"orchestr\",\n    \"orgie\",\n    \"orlice\",\n    \"orloj\",\n    \"ortel\",\n    \"osada\",\n    \"oschnout\",\n    \"osika\",\n    \"osivo\",\n    \"oslava\",\n    \"oslepit\",\n    \"oslnit\",\n    \"oslovit\",\n    \"osnova\",\n    \"osoba\",\n    \"osolit\",\n    \"ospalec\",\n    \"osten\",\n    \"ostraha\",\n    \"ostuda\",\n    \"ostych\",\n    \"osvojit\",\n    \"oteplit\",\n    \"otisk\",\n    \"otop\",\n    \"otrhat\",\n    \"otrlost\",\n    \"otrok\",\n    \"otruby\",\n    \"otvor\",\n    \"ovanout\",\n    \"ovar\",\n    \"oves\",\n    \"ovlivnit\",\n    \"ovoce\",\n    \"oxid\",\n    \"ozdoba\",\n    \"pachatel\",\n    \"pacient\",\n    \"padouch\",\n    \"pahorek\",\n    \"pakt\",\n    \"palanda\",\n    \"palec\",\n    \"palivo\",\n    \"paluba\",\n    \"pamflet\",\n    \"pamlsek\",\n    \"panenka\",\n    \"panika\",\n    \"panna\",\n    \"panovat\",\n    \"panstvo\",\n    \"pantofle\",\n    \"paprika\",\n    \"parketa\",\n    \"parodie\",\n    \"parta\",\n    \"paruka\",\n    \"paryba\",\n    \"paseka\",\n    \"pasivita\",\n    \"pastelka\",\n    \"patent\",\n    \"patrona\",\n    \"pavouk\",\n    \"pazneht\",\n    \"pazourek\",\n    \"pecka\",\n    \"pedagog\",\n    \"pejsek\",\n    \"peklo\",\n    \"peloton\",\n    \"penalta\",\n    \"pendrek\",\n    \"penze\",\n    \"periskop\",\n    \"pero\",\n    \"pestrost\",\n    \"petarda\",\n    \"petice\",\n    \"petrolej\",\n    \"pevnina\",\n    \"pexeso\",\n    \"pianista\",\n    \"piha\",\n    \"pijavice\",\n    \"pikle\",\n    \"piknik\",\n    \"pilina\",\n    \"pilnost\",\n    \"pilulka\",\n    \"pinzeta\",\n    \"pipeta\",\n    \"pisatel\",\n    \"pistole\",\n    \"pitevna\",\n    \"pivnice\",\n    \"pivovar\",\n    \"placenta\",\n    \"plakat\",\n    \"plamen\",\n    \"planeta\",\n    \"plastika\",\n    \"platit\",\n    \"plavidlo\",\n    \"plaz\",\n    \"plech\",\n    \"plemeno\",\n    \"plenta\",\n    \"ples\",\n    \"pletivo\",\n    \"plevel\",\n    \"plivat\",\n    \"plnit\",\n    \"plno\",\n    \"plocha\",\n    \"plodina\",\n    \"plomba\",\n    \"plout\",\n    \"pluk\",\n    \"plyn\",\n    \"pobavit\",\n    \"pobyt\",\n    \"pochod\",\n    \"pocit\",\n    \"poctivec\",\n    \"podat\",\n    \"podcenit\",\n    \"podepsat\",\n    \"podhled\",\n    \"podivit\",\n    \"podklad\",\n    \"podmanit\",\n    \"podnik\",\n    \"podoba\",\n    \"podpora\",\n    \"podraz\",\n    \"podstata\",\n    \"podvod\",\n    \"podzim\",\n    \"poezie\",\n    \"pohanka\",\n    \"pohnutka\",\n    \"pohovor\",\n    \"pohroma\",\n    \"pohyb\",\n    \"pointa\",\n    \"pojistka\",\n    \"pojmout\",\n    \"pokazit\",\n    \"pokles\",\n    \"pokoj\",\n    \"pokrok\",\n    \"pokuta\",\n    \"pokyn\",\n    \"poledne\",\n    \"polibek\",\n    \"polknout\",\n    \"poloha\",\n    \"polynom\",\n    \"pomalu\",\n    \"pominout\",\n    \"pomlka\",\n    \"pomoc\",\n    \"pomsta\",\n    \"pomyslet\",\n    \"ponechat\",\n    \"ponorka\",\n    \"ponurost\",\n    \"popadat\",\n    \"popel\",\n    \"popisek\",\n    \"poplach\",\n    \"poprosit\",\n    \"popsat\",\n    \"popud\",\n    \"poradce\",\n    \"porce\",\n    \"porod\",\n    \"porucha\",\n    \"poryv\",\n    \"posadit\",\n    \"posed\",\n    \"posila\",\n    \"poskok\",\n    \"poslanec\",\n    \"posoudit\",\n    \"pospolu\",\n    \"postava\",\n    \"posudek\",\n    \"posyp\",\n    \"potah\",\n    \"potkan\",\n    \"potlesk\",\n    \"potomek\",\n    \"potrava\",\n    \"potupa\",\n    \"potvora\",\n    \"poukaz\",\n    \"pouto\",\n    \"pouzdro\",\n    \"povaha\",\n    \"povidla\",\n    \"povlak\",\n    \"povoz\",\n    \"povrch\",\n    \"povstat\",\n    \"povyk\",\n    \"povzdech\",\n    \"pozdrav\",\n    \"pozemek\",\n    \"poznatek\",\n    \"pozor\",\n    \"pozvat\",\n    \"pracovat\",\n    \"prahory\",\n    \"praktika\",\n    \"prales\",\n    \"praotec\",\n    \"praporek\",\n    \"prase\",\n    \"pravda\",\n    \"princip\",\n    \"prkno\",\n    \"probudit\",\n    \"procento\",\n    \"prodej\",\n    \"profese\",\n    \"prohra\",\n    \"projekt\",\n    \"prolomit\",\n    \"promile\",\n    \"pronikat\",\n    \"propad\",\n    \"prorok\",\n    \"prosba\",\n    \"proton\",\n    \"proutek\",\n    \"provaz\",\n    \"prskavka\",\n    \"prsten\",\n    \"prudkost\",\n    \"prut\",\n    \"prvek\",\n    \"prvohory\",\n    \"psanec\",\n    \"psovod\",\n    \"pstruh\",\n    \"ptactvo\",\n    \"puberta\",\n    \"puch\",\n    \"pudl\",\n    \"pukavec\",\n    \"puklina\",\n    \"pukrle\",\n    \"pult\",\n    \"pumpa\",\n    \"punc\",\n    \"pupen\",\n    \"pusa\",\n    \"pusinka\",\n    \"pustina\",\n    \"putovat\",\n    \"putyka\",\n    \"pyramida\",\n    \"pysk\",\n    \"pytel\",\n    \"racek\",\n    \"rachot\",\n    \"radiace\",\n    \"radnice\",\n    \"radon\",\n    \"raft\",\n    \"ragby\",\n    \"raketa\",\n    \"rakovina\",\n    \"rameno\",\n    \"rampouch\",\n    \"rande\",\n    \"rarach\",\n    \"rarita\",\n    \"rasovna\",\n    \"rastr\",\n    \"ratolest\",\n    \"razance\",\n    \"razidlo\",\n    \"reagovat\",\n    \"reakce\",\n    \"recept\",\n    \"redaktor\",\n    \"referent\",\n    \"reflex\",\n    \"rejnok\",\n    \"reklama\",\n    \"rekord\",\n    \"rekrut\",\n    \"rektor\",\n    \"reputace\",\n    \"revize\",\n    \"revma\",\n    \"revolver\",\n    \"rezerva\",\n    \"riskovat\",\n    \"riziko\",\n    \"robotika\",\n    \"rodokmen\",\n    \"rohovka\",\n    \"rokle\",\n    \"rokoko\",\n    \"romaneto\",\n    \"ropovod\",\n    \"ropucha\",\n    \"rorejs\",\n    \"rosol\",\n    \"rostlina\",\n    \"rotmistr\",\n    \"rotoped\",\n    \"rotunda\",\n    \"roubenka\",\n    \"roucho\",\n    \"roup\",\n    \"roura\",\n    \"rovina\",\n    \"rovnice\",\n    \"rozbor\",\n    \"rozchod\",\n    \"rozdat\",\n    \"rozeznat\",\n    \"rozhodce\",\n    \"rozinka\",\n    \"rozjezd\",\n    \"rozkaz\",\n    \"rozloha\",\n    \"rozmar\",\n    \"rozpad\",\n    \"rozruch\",\n    \"rozsah\",\n    \"roztok\",\n    \"rozum\",\n    \"rozvod\",\n    \"rubrika\",\n    \"ruchadlo\",\n    \"rukavice\",\n    \"rukopis\",\n    \"ryba\",\n    \"rybolov\",\n    \"rychlost\",\n    \"rydlo\",\n    \"rypadlo\",\n    \"rytina\",\n    \"ryzost\",\n    \"sadista\",\n    \"sahat\",\n    \"sako\",\n    \"samec\",\n    \"samizdat\",\n    \"samota\",\n    \"sanitka\",\n    \"sardinka\",\n    \"sasanka\",\n    \"satelit\",\n    \"sazba\",\n    \"sazenice\",\n    \"sbor\",\n    \"schovat\",\n    \"sebranka\",\n    \"secese\",\n    \"sedadlo\",\n    \"sediment\",\n    \"sedlo\",\n    \"sehnat\",\n    \"sejmout\",\n    \"sekera\",\n    \"sekta\",\n    \"sekunda\",\n    \"sekvoje\",\n    \"semeno\",\n    \"seno\",\n    \"servis\",\n    \"sesadit\",\n    \"seshora\",\n    \"seskok\",\n    \"seslat\",\n    \"sestra\",\n    \"sesuv\",\n    \"sesypat\",\n    \"setba\",\n    \"setina\",\n    \"setkat\",\n    \"setnout\",\n    \"setrvat\",\n    \"sever\",\n    \"seznam\",\n    \"shoda\",\n    \"shrnout\",\n    \"sifon\",\n    \"silnice\",\n    \"sirka\",\n    \"sirotek\",\n    \"sirup\",\n    \"situace\",\n    \"skafandr\",\n    \"skalisko\",\n    \"skanzen\",\n    \"skaut\",\n    \"skeptik\",\n    \"skica\",\n    \"skladba\",\n    \"sklenice\",\n    \"sklo\",\n    \"skluz\",\n    \"skoba\",\n    \"skokan\",\n    \"skoro\",\n    \"skripta\",\n    \"skrz\",\n    \"skupina\",\n    \"skvost\",\n    \"skvrna\",\n    \"slabika\",\n    \"sladidlo\",\n    \"slanina\",\n    \"slast\",\n    \"slavnost\",\n    \"sledovat\",\n    \"slepec\",\n    \"sleva\",\n    \"slezina\",\n    \"slib\",\n    \"slina\",\n    \"sliznice\",\n    \"slon\",\n    \"sloupek\",\n    \"slovo\",\n    \"sluch\",\n    \"sluha\",\n    \"slunce\",\n    \"slupka\",\n    \"slza\",\n    \"smaragd\",\n    \"smetana\",\n    \"smilstvo\",\n    \"smlouva\",\n    \"smog\",\n    \"smrad\",\n    \"smrk\",\n    \"smrtka\",\n    \"smutek\",\n    \"smysl\",\n    \"snad\",\n    \"snaha\",\n    \"snob\",\n    \"sobota\",\n    \"socha\",\n    \"sodovka\",\n    \"sokol\",\n    \"sopka\",\n    \"sotva\",\n    \"souboj\",\n    \"soucit\",\n    \"soudce\",\n    \"souhlas\",\n    \"soulad\",\n    \"soumrak\",\n    \"souprava\",\n    \"soused\",\n    \"soutok\",\n    \"souviset\",\n    \"spalovna\",\n    \"spasitel\",\n    \"spis\",\n    \"splav\",\n    \"spodek\",\n    \"spojenec\",\n    \"spolu\",\n    \"sponzor\",\n    \"spornost\",\n    \"spousta\",\n    \"sprcha\",\n    \"spustit\",\n    \"sranda\",\n    \"sraz\",\n    \"srdce\",\n    \"srna\",\n    \"srnec\",\n    \"srovnat\",\n    \"srpen\",\n    \"srst\",\n    \"srub\",\n    \"stanice\",\n    \"starosta\",\n    \"statika\",\n    \"stavba\",\n    \"stehno\",\n    \"stezka\",\n    \"stodola\",\n    \"stolek\",\n    \"stopa\",\n    \"storno\",\n    \"stoupat\",\n    \"strach\",\n    \"stres\",\n    \"strhnout\",\n    \"strom\",\n    \"struna\",\n    \"studna\",\n    \"stupnice\",\n    \"stvol\",\n    \"styk\",\n    \"subjekt\",\n    \"subtropy\",\n    \"suchar\",\n    \"sudost\",\n    \"sukno\",\n    \"sundat\",\n    \"sunout\",\n    \"surikata\",\n    \"surovina\",\n    \"svah\",\n    \"svalstvo\",\n    \"svetr\",\n    \"svatba\",\n    \"svazek\",\n    \"svisle\",\n    \"svitek\",\n    \"svoboda\",\n    \"svodidlo\",\n    \"svorka\",\n    \"svrab\",\n    \"sykavka\",\n    \"sykot\",\n    \"synek\",\n    \"synovec\",\n    \"sypat\",\n    \"sypkost\",\n    \"syrovost\",\n    \"sysel\",\n    \"sytost\",\n    \"tabletka\",\n    \"tabule\",\n    \"tahoun\",\n    \"tajemno\",\n    \"tajfun\",\n    \"tajga\",\n    \"tajit\",\n    \"tajnost\",\n    \"taktika\",\n    \"tamhle\",\n    \"tampon\",\n    \"tancovat\",\n    \"tanec\",\n    \"tanker\",\n    \"tapeta\",\n    \"tavenina\",\n    \"tazatel\",\n    \"technika\",\n    \"tehdy\",\n    \"tekutina\",\n    \"telefon\",\n    \"temnota\",\n    \"tendence\",\n    \"tenista\",\n    \"tenor\",\n    \"teplota\",\n    \"tepna\",\n    \"teprve\",\n    \"terapie\",\n    \"termoska\",\n    \"textil\",\n    \"ticho\",\n    \"tiskopis\",\n    \"titulek\",\n    \"tkadlec\",\n    \"tkanina\",\n    \"tlapka\",\n    \"tleskat\",\n    \"tlukot\",\n    \"tlupa\",\n    \"tmel\",\n    \"toaleta\",\n    \"topinka\",\n    \"topol\",\n    \"torzo\",\n    \"touha\",\n    \"toulec\",\n    \"tradice\",\n    \"traktor\",\n    \"tramp\",\n    \"trasa\",\n    \"traverza\",\n    \"trefit\",\n    \"trest\",\n    \"trezor\",\n    \"trhavina\",\n    \"trhlina\",\n    \"trochu\",\n    \"trojice\",\n    \"troska\",\n    \"trouba\",\n    \"trpce\",\n    \"trpitel\",\n    \"trpkost\",\n    \"trubec\",\n    \"truchlit\",\n    \"truhlice\",\n    \"trus\",\n    \"trvat\",\n    \"tudy\",\n    \"tuhnout\",\n    \"tuhost\",\n    \"tundra\",\n    \"turista\",\n    \"turnaj\",\n    \"tuzemsko\",\n    \"tvaroh\",\n    \"tvorba\",\n    \"tvrdost\",\n    \"tvrz\",\n    \"tygr\",\n    \"tykev\",\n    \"ubohost\",\n    \"uboze\",\n    \"ubrat\",\n    \"ubrousek\",\n    \"ubrus\",\n    \"ubytovna\",\n    \"ucho\",\n    \"uctivost\",\n    \"udivit\",\n    \"uhradit\",\n    \"ujednat\",\n    \"ujistit\",\n    \"ujmout\",\n    \"ukazatel\",\n    \"uklidnit\",\n    \"uklonit\",\n    \"ukotvit\",\n    \"ukrojit\",\n    \"ulice\",\n    \"ulita\",\n    \"ulovit\",\n    \"umyvadlo\",\n    \"unavit\",\n    \"uniforma\",\n    \"uniknout\",\n    \"upadnout\",\n    \"uplatnit\",\n    \"uplynout\",\n    \"upoutat\",\n    \"upravit\",\n    \"uran\",\n    \"urazit\",\n    \"usednout\",\n    \"usilovat\",\n    \"usmrtit\",\n    \"usnadnit\",\n    \"usnout\",\n    \"usoudit\",\n    \"ustlat\",\n    \"ustrnout\",\n    \"utahovat\",\n    \"utkat\",\n    \"utlumit\",\n    \"utonout\",\n    \"utopenec\",\n    \"utrousit\",\n    \"uvalit\",\n    \"uvolnit\",\n    \"uvozovka\",\n    \"uzdravit\",\n    \"uzel\",\n    \"uzenina\",\n    \"uzlina\",\n    \"uznat\",\n    \"vagon\",\n    \"valcha\",\n    \"valoun\",\n    \"vana\",\n    \"vandal\",\n    \"vanilka\",\n    \"varan\",\n    \"varhany\",\n    \"varovat\",\n    \"vcelku\",\n    \"vchod\",\n    \"vdova\",\n    \"vedro\",\n    \"vegetace\",\n    \"vejce\",\n    \"velbloud\",\n    \"veletrh\",\n    \"velitel\",\n    \"velmoc\",\n    \"velryba\",\n    \"venkov\",\n    \"veranda\",\n    \"verze\",\n    \"veselka\",\n    \"veskrze\",\n    \"vesnice\",\n    \"vespodu\",\n    \"vesta\",\n    \"veterina\",\n    \"veverka\",\n    \"vibrace\",\n    \"vichr\",\n    \"videohra\",\n    \"vidina\",\n    \"vidle\",\n    \"vila\",\n    \"vinice\",\n    \"viset\",\n    \"vitalita\",\n    \"vize\",\n    \"vizitka\",\n    \"vjezd\",\n    \"vklad\",\n    \"vkus\",\n    \"vlajka\",\n    \"vlak\",\n    \"vlasec\",\n    \"vlevo\",\n    \"vlhkost\",\n    \"vliv\",\n    \"vlnovka\",\n    \"vloupat\",\n    \"vnucovat\",\n    \"vnuk\",\n    \"voda\",\n    \"vodivost\",\n    \"vodoznak\",\n    \"vodstvo\",\n    \"vojensky\",\n    \"vojna\",\n    \"vojsko\",\n    \"volant\",\n    \"volba\",\n    \"volit\",\n    \"volno\",\n    \"voskovka\",\n    \"vozidlo\",\n    \"vozovna\",\n    \"vpravo\",\n    \"vrabec\",\n    \"vracet\",\n    \"vrah\",\n    \"vrata\",\n    \"vrba\",\n    \"vrcholek\",\n    \"vrhat\",\n    \"vrstva\",\n    \"vrtule\",\n    \"vsadit\",\n    \"vstoupit\",\n    \"vstup\",\n    \"vtip\",\n    \"vybavit\",\n    \"vybrat\",\n    \"vychovat\",\n    \"vydat\",\n    \"vydra\",\n    \"vyfotit\",\n    \"vyhledat\",\n    \"vyhnout\",\n    \"vyhodit\",\n    \"vyhradit\",\n    \"vyhubit\",\n    \"vyjasnit\",\n    \"vyjet\",\n    \"vyjmout\",\n    \"vyklopit\",\n    \"vykonat\",\n    \"vylekat\",\n    \"vymazat\",\n    \"vymezit\",\n    \"vymizet\",\n    \"vymyslet\",\n    \"vynechat\",\n    \"vynikat\",\n    \"vynutit\",\n    \"vypadat\",\n    \"vyplatit\",\n    \"vypravit\",\n    \"vypustit\",\n    \"vyrazit\",\n    \"vyrovnat\",\n    \"vyrvat\",\n    \"vyslovit\",\n    \"vysoko\",\n    \"vystavit\",\n    \"vysunout\",\n    \"vysypat\",\n    \"vytasit\",\n    \"vytesat\",\n    \"vytratit\",\n    \"vyvinout\",\n    \"vyvolat\",\n    \"vyvrhel\",\n    \"vyzdobit\",\n    \"vyznat\",\n    \"vzadu\",\n    \"vzbudit\",\n    \"vzchopit\",\n    \"vzdor\",\n    \"vzduch\",\n    \"vzdychat\",\n    \"vzestup\",\n    \"vzhledem\",\n    \"vzkaz\",\n    \"vzlykat\",\n    \"vznik\",\n    \"vzorek\",\n    \"vzpoura\",\n    \"vztah\",\n    \"vztek\",\n    \"xylofon\",\n    \"zabrat\",\n    \"zabydlet\",\n    \"zachovat\",\n    \"zadarmo\",\n    \"zadusit\",\n    \"zafoukat\",\n    \"zahltit\",\n    \"zahodit\",\n    \"zahrada\",\n    \"zahynout\",\n    \"zajatec\",\n    \"zajet\",\n    \"zajistit\",\n    \"zaklepat\",\n    \"zakoupit\",\n    \"zalepit\",\n    \"zamezit\",\n    \"zamotat\",\n    \"zamyslet\",\n    \"zanechat\",\n    \"zanikat\",\n    \"zaplatit\",\n    \"zapojit\",\n    \"zapsat\",\n    \"zarazit\",\n    \"zastavit\",\n    \"zasunout\",\n    \"zatajit\",\n    \"zatemnit\",\n    \"zatknout\",\n    \"zaujmout\",\n    \"zavalit\",\n    \"zavelet\",\n    \"zavinit\",\n    \"zavolat\",\n    \"zavrtat\",\n    \"zazvonit\",\n    \"zbavit\",\n    \"zbrusu\",\n    \"zbudovat\",\n    \"zbytek\",\n    \"zdaleka\",\n    \"zdarma\",\n    \"zdatnost\",\n    \"zdivo\",\n    \"zdobit\",\n    \"zdroj\",\n    \"zdvih\",\n    \"zdymadlo\",\n    \"zelenina\",\n    \"zeman\",\n    \"zemina\",\n    \"zeptat\",\n    \"zezadu\",\n    \"zezdola\",\n    \"zhatit\",\n    \"zhltnout\",\n    \"zhluboka\",\n    \"zhotovit\",\n    \"zhruba\",\n    \"zima\",\n    \"zimnice\",\n    \"zjemnit\",\n    \"zklamat\",\n    \"zkoumat\",\n    \"zkratka\",\n    \"zkumavka\",\n    \"zlato\",\n    \"zlehka\",\n    \"zloba\",\n    \"zlom\",\n    \"zlost\",\n    \"zlozvyk\",\n    \"zmapovat\",\n    \"zmar\",\n    \"zmatek\",\n    \"zmije\",\n    \"zmizet\",\n    \"zmocnit\",\n    \"zmodrat\",\n    \"zmrzlina\",\n    \"zmutovat\",\n    \"znak\",\n    \"znalost\",\n    \"znamenat\",\n    \"znovu\",\n    \"zobrazit\",\n    \"zotavit\",\n    \"zoubek\",\n    \"zoufale\",\n    \"zplodit\",\n    \"zpomalit\",\n    \"zprava\",\n    \"zprostit\",\n    \"zprudka\",\n    \"zprvu\",\n    \"zrada\",\n    \"zranit\",\n    \"zrcadlo\",\n    \"zrnitost\",\n    \"zrno\",\n    \"zrovna\",\n    \"zrychlit\",\n    \"zrzavost\",\n    \"zticha\",\n    \"ztratit\",\n    \"zubovina\",\n    \"zubr\",\n    \"zvednout\",\n    \"zvenku\",\n    \"zvesela\",\n    \"zvon\",\n    \"zvrat\",\n    \"zvukovod\",\n    \"zvyk\"\n]\n","module.exports=[\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\"\n]\n","module.exports=[\n    \"abacate\",\n    \"abaixo\",\n    \"abalar\",\n    \"abater\",\n    \"abduzir\",\n    \"abelha\",\n    \"aberto\",\n    \"abismo\",\n    \"abotoar\",\n    \"abranger\",\n    \"abreviar\",\n    \"abrigar\",\n    \"abrupto\",\n    \"absinto\",\n    \"absoluto\",\n    \"absurdo\",\n    \"abutre\",\n    \"acabado\",\n    \"acalmar\",\n    \"acampar\",\n    \"acanhar\",\n    \"acaso\",\n    \"aceitar\",\n    \"acelerar\",\n    \"acenar\",\n    \"acervo\",\n    \"acessar\",\n    \"acetona\",\n    \"achatar\",\n    \"acidez\",\n    \"acima\",\n    \"acionado\",\n    \"acirrar\",\n    \"aclamar\",\n    \"aclive\",\n    \"acolhida\",\n    \"acomodar\",\n    \"acoplar\",\n    \"acordar\",\n    \"acumular\",\n    \"acusador\",\n    \"adaptar\",\n    \"adega\",\n    \"adentro\",\n    \"adepto\",\n    \"adequar\",\n    \"aderente\",\n    \"adesivo\",\n    \"adeus\",\n    \"adiante\",\n    \"aditivo\",\n    \"adjetivo\",\n    \"adjunto\",\n    \"admirar\",\n    \"adorar\",\n    \"adquirir\",\n    \"adubo\",\n    \"adverso\",\n    \"advogado\",\n    \"aeronave\",\n    \"afastar\",\n    \"aferir\",\n    \"afetivo\",\n    \"afinador\",\n    \"afivelar\",\n    \"aflito\",\n    \"afluente\",\n    \"afrontar\",\n    \"agachar\",\n    \"agarrar\",\n    \"agasalho\",\n    \"agenciar\",\n    \"agilizar\",\n    \"agiota\",\n    \"agitado\",\n    \"agora\",\n    \"agradar\",\n    \"agreste\",\n    \"agrupar\",\n    \"aguardar\",\n    \"agulha\",\n    \"ajoelhar\",\n    \"ajudar\",\n    \"ajustar\",\n    \"alameda\",\n    \"alarme\",\n    \"alastrar\",\n    \"alavanca\",\n    \"albergue\",\n    \"albino\",\n    \"alcatra\",\n    \"aldeia\",\n    \"alecrim\",\n    \"alegria\",\n    \"alertar\",\n    \"alface\",\n    \"alfinete\",\n    \"algum\",\n    \"alheio\",\n    \"aliar\",\n    \"alicate\",\n    \"alienar\",\n    \"alinhar\",\n    \"aliviar\",\n    \"almofada\",\n    \"alocar\",\n    \"alpiste\",\n    \"alterar\",\n    \"altitude\",\n    \"alucinar\",\n    \"alugar\",\n    \"aluno\",\n    \"alusivo\",\n    \"alvo\",\n    \"amaciar\",\n    \"amador\",\n    \"amarelo\",\n    \"amassar\",\n    \"ambas\",\n    \"ambiente\",\n    \"ameixa\",\n    \"amenizar\",\n    \"amido\",\n    \"amistoso\",\n    \"amizade\",\n    \"amolador\",\n    \"amontoar\",\n    \"amoroso\",\n    \"amostra\",\n    \"amparar\",\n    \"ampliar\",\n    \"ampola\",\n    \"anagrama\",\n    \"analisar\",\n    \"anarquia\",\n    \"anatomia\",\n    \"andaime\",\n    \"anel\",\n    \"anexo\",\n    \"angular\",\n    \"animar\",\n    \"anjo\",\n    \"anomalia\",\n    \"anotado\",\n    \"ansioso\",\n    \"anterior\",\n    \"anuidade\",\n    \"anunciar\",\n    \"anzol\",\n    \"apagador\",\n    \"apalpar\",\n    \"apanhado\",\n    \"apego\",\n    \"apelido\",\n    \"apertada\",\n    \"apesar\",\n    \"apetite\",\n    \"apito\",\n    \"aplauso\",\n    \"aplicada\",\n    \"apoio\",\n    \"apontar\",\n    \"aposta\",\n    \"aprendiz\",\n    \"aprovar\",\n    \"aquecer\",\n    \"arame\",\n    \"aranha\",\n    \"arara\",\n    \"arcada\",\n    \"ardente\",\n    \"areia\",\n    \"arejar\",\n    \"arenito\",\n    \"aresta\",\n    \"argiloso\",\n    \"argola\",\n    \"arma\",\n    \"arquivo\",\n    \"arraial\",\n    \"arrebate\",\n    \"arriscar\",\n    \"arroba\",\n    \"arrumar\",\n    \"arsenal\",\n    \"arterial\",\n    \"artigo\",\n    \"arvoredo\",\n    \"asfaltar\",\n    \"asilado\",\n    \"aspirar\",\n    \"assador\",\n    \"assinar\",\n    \"assoalho\",\n    \"assunto\",\n    \"astral\",\n    \"atacado\",\n    \"atadura\",\n    \"atalho\",\n    \"atarefar\",\n    \"atear\",\n    \"atender\",\n    \"aterro\",\n    \"ateu\",\n    \"atingir\",\n    \"atirador\",\n    \"ativo\",\n    \"atoleiro\",\n    \"atracar\",\n    \"atrevido\",\n    \"atriz\",\n    \"atual\",\n    \"atum\",\n    \"auditor\",\n    \"aumentar\",\n    \"aura\",\n    \"aurora\",\n    \"autismo\",\n    \"autoria\",\n    \"autuar\",\n    \"avaliar\",\n    \"avante\",\n    \"avaria\",\n    \"avental\",\n    \"avesso\",\n    \"aviador\",\n    \"avisar\",\n    \"avulso\",\n    \"axila\",\n    \"azarar\",\n    \"azedo\",\n    \"azeite\",\n    \"azulejo\",\n    \"babar\",\n    \"babosa\",\n    \"bacalhau\",\n    \"bacharel\",\n    \"bacia\",\n    \"bagagem\",\n    \"baiano\",\n    \"bailar\",\n    \"baioneta\",\n    \"bairro\",\n    \"baixista\",\n    \"bajular\",\n    \"baleia\",\n    \"baliza\",\n    \"balsa\",\n    \"banal\",\n    \"bandeira\",\n    \"banho\",\n    \"banir\",\n    \"banquete\",\n    \"barato\",\n    \"barbado\",\n    \"baronesa\",\n    \"barraca\",\n    \"barulho\",\n    \"baseado\",\n    \"bastante\",\n    \"batata\",\n    \"batedor\",\n    \"batida\",\n    \"batom\",\n    \"batucar\",\n    \"baunilha\",\n    \"beber\",\n    \"beijo\",\n    \"beirada\",\n    \"beisebol\",\n    \"beldade\",\n    \"beleza\",\n    \"belga\",\n    \"beliscar\",\n    \"bendito\",\n    \"bengala\",\n    \"benzer\",\n    \"berimbau\",\n    \"berlinda\",\n    \"berro\",\n    \"besouro\",\n    \"bexiga\",\n    \"bezerro\",\n    \"bico\",\n    \"bicudo\",\n    \"bienal\",\n    \"bifocal\",\n    \"bifurcar\",\n    \"bigorna\",\n    \"bilhete\",\n    \"bimestre\",\n    \"bimotor\",\n    \"biologia\",\n    \"biombo\",\n    \"biosfera\",\n    \"bipolar\",\n    \"birrento\",\n    \"biscoito\",\n    \"bisneto\",\n    \"bispo\",\n    \"bissexto\",\n    \"bitola\",\n    \"bizarro\",\n    \"blindado\",\n    \"bloco\",\n    \"bloquear\",\n    \"boato\",\n    \"bobagem\",\n    \"bocado\",\n    \"bocejo\",\n    \"bochecha\",\n    \"boicotar\",\n    \"bolada\",\n    \"boletim\",\n    \"bolha\",\n    \"bolo\",\n    \"bombeiro\",\n    \"bonde\",\n    \"boneco\",\n    \"bonita\",\n    \"borbulha\",\n    \"borda\",\n    \"boreal\",\n    \"borracha\",\n    \"bovino\",\n    \"boxeador\",\n    \"branco\",\n    \"brasa\",\n    \"braveza\",\n    \"breu\",\n    \"briga\",\n    \"brilho\",\n    \"brincar\",\n    \"broa\",\n    \"brochura\",\n    \"bronzear\",\n    \"broto\",\n    \"bruxo\",\n    \"bucha\",\n    \"budismo\",\n    \"bufar\",\n    \"bule\",\n    \"buraco\",\n    \"busca\",\n    \"busto\",\n    \"buzina\",\n    \"cabana\",\n    \"cabelo\",\n    \"cabide\",\n    \"cabo\",\n    \"cabrito\",\n    \"cacau\",\n    \"cacetada\",\n    \"cachorro\",\n    \"cacique\",\n    \"cadastro\",\n    \"cadeado\",\n    \"cafezal\",\n    \"caiaque\",\n    \"caipira\",\n    \"caixote\",\n    \"cajado\",\n    \"caju\",\n    \"calafrio\",\n    \"calcular\",\n    \"caldeira\",\n    \"calibrar\",\n    \"calmante\",\n    \"calota\",\n    \"camada\",\n    \"cambista\",\n    \"camisa\",\n    \"camomila\",\n    \"campanha\",\n    \"camuflar\",\n    \"canavial\",\n    \"cancelar\",\n    \"caneta\",\n    \"canguru\",\n    \"canhoto\",\n    \"canivete\",\n    \"canoa\",\n    \"cansado\",\n    \"cantar\",\n    \"canudo\",\n    \"capacho\",\n    \"capela\",\n    \"capinar\",\n    \"capotar\",\n    \"capricho\",\n    \"captador\",\n    \"capuz\",\n    \"caracol\",\n    \"carbono\",\n    \"cardeal\",\n    \"careca\",\n    \"carimbar\",\n    \"carneiro\",\n    \"carpete\",\n    \"carreira\",\n    \"cartaz\",\n    \"carvalho\",\n    \"casaco\",\n    \"casca\",\n    \"casebre\",\n    \"castelo\",\n    \"casulo\",\n    \"catarata\",\n    \"cativar\",\n    \"caule\",\n    \"causador\",\n    \"cautelar\",\n    \"cavalo\",\n    \"caverna\",\n    \"cebola\",\n    \"cedilha\",\n    \"cegonha\",\n    \"celebrar\",\n    \"celular\",\n    \"cenoura\",\n    \"censo\",\n    \"centeio\",\n    \"cercar\",\n    \"cerrado\",\n    \"certeiro\",\n    \"cerveja\",\n    \"cetim\",\n    \"cevada\",\n    \"chacota\",\n    \"chaleira\",\n    \"chamado\",\n    \"chapada\",\n    \"charme\",\n    \"chatice\",\n    \"chave\",\n    \"chefe\",\n    \"chegada\",\n    \"cheiro\",\n    \"cheque\",\n    \"chicote\",\n    \"chifre\",\n    \"chinelo\",\n    \"chocalho\",\n    \"chover\",\n    \"chumbo\",\n    \"chutar\",\n    \"chuva\",\n    \"cicatriz\",\n    \"ciclone\",\n    \"cidade\",\n    \"cidreira\",\n    \"ciente\",\n    \"cigana\",\n    \"cimento\",\n    \"cinto\",\n    \"cinza\",\n    \"ciranda\",\n    \"circuito\",\n    \"cirurgia\",\n    \"citar\",\n    \"clareza\",\n    \"clero\",\n    \"clicar\",\n    \"clone\",\n    \"clube\",\n    \"coado\",\n    \"coagir\",\n    \"cobaia\",\n    \"cobertor\",\n    \"cobrar\",\n    \"cocada\",\n    \"coelho\",\n    \"coentro\",\n    \"coeso\",\n    \"cogumelo\",\n    \"coibir\",\n    \"coifa\",\n    \"coiote\",\n    \"colar\",\n    \"coleira\",\n    \"colher\",\n    \"colidir\",\n    \"colmeia\",\n    \"colono\",\n    \"coluna\",\n    \"comando\",\n    \"combinar\",\n    \"comentar\",\n    \"comitiva\",\n    \"comover\",\n    \"complexo\",\n    \"comum\",\n    \"concha\",\n    \"condor\",\n    \"conectar\",\n    \"confuso\",\n    \"congelar\",\n    \"conhecer\",\n    \"conjugar\",\n    \"consumir\",\n    \"contrato\",\n    \"convite\",\n    \"cooperar\",\n    \"copeiro\",\n    \"copiador\",\n    \"copo\",\n    \"coquetel\",\n    \"coragem\",\n    \"cordial\",\n    \"corneta\",\n    \"coronha\",\n    \"corporal\",\n    \"correio\",\n    \"cortejo\",\n    \"coruja\",\n    \"corvo\",\n    \"cosseno\",\n    \"costela\",\n    \"cotonete\",\n    \"couro\",\n    \"couve\",\n    \"covil\",\n    \"cozinha\",\n    \"cratera\",\n    \"cravo\",\n    \"creche\",\n    \"credor\",\n    \"creme\",\n    \"crer\",\n    \"crespo\",\n    \"criada\",\n    \"criminal\",\n    \"crioulo\",\n    \"crise\",\n    \"criticar\",\n    \"crosta\",\n    \"crua\",\n    \"cruzeiro\",\n    \"cubano\",\n    \"cueca\",\n    \"cuidado\",\n    \"cujo\",\n    \"culatra\",\n    \"culminar\",\n    \"culpar\",\n    \"cultura\",\n    \"cumprir\",\n    \"cunhado\",\n    \"cupido\",\n    \"curativo\",\n    \"curral\",\n    \"cursar\",\n    \"curto\",\n    \"cuspir\",\n    \"custear\",\n    \"cutelo\",\n    \"damasco\",\n    \"datar\",\n    \"debater\",\n    \"debitar\",\n    \"deboche\",\n    \"debulhar\",\n    \"decalque\",\n    \"decimal\",\n    \"declive\",\n    \"decote\",\n    \"decretar\",\n    \"dedal\",\n    \"dedicado\",\n    \"deduzir\",\n    \"defesa\",\n    \"defumar\",\n    \"degelo\",\n    \"degrau\",\n    \"degustar\",\n    \"deitado\",\n    \"deixar\",\n    \"delator\",\n    \"delegado\",\n    \"delinear\",\n    \"delonga\",\n    \"demanda\",\n    \"demitir\",\n    \"demolido\",\n    \"dentista\",\n    \"depenado\",\n    \"depilar\",\n    \"depois\",\n    \"depressa\",\n    \"depurar\",\n    \"deriva\",\n    \"derramar\",\n    \"desafio\",\n    \"desbotar\",\n    \"descanso\",\n    \"desenho\",\n    \"desfiado\",\n    \"desgaste\",\n    \"desigual\",\n    \"deslize\",\n    \"desmamar\",\n    \"desova\",\n    \"despesa\",\n    \"destaque\",\n    \"desviar\",\n    \"detalhar\",\n    \"detentor\",\n    \"detonar\",\n    \"detrito\",\n    \"deusa\",\n    \"dever\",\n    \"devido\",\n    \"devotado\",\n    \"dezena\",\n    \"diagrama\",\n    \"dialeto\",\n    \"didata\",\n    \"difuso\",\n    \"digitar\",\n    \"dilatado\",\n    \"diluente\",\n    \"diminuir\",\n    \"dinastia\",\n    \"dinheiro\",\n    \"diocese\",\n    \"direto\",\n    \"discreta\",\n    \"disfarce\",\n    \"disparo\",\n    \"disquete\",\n    \"dissipar\",\n    \"distante\",\n    \"ditador\",\n    \"diurno\",\n    \"diverso\",\n    \"divisor\",\n    \"divulgar\",\n    \"dizer\",\n    \"dobrador\",\n    \"dolorido\",\n    \"domador\",\n    \"dominado\",\n    \"donativo\",\n    \"donzela\",\n    \"dormente\",\n    \"dorsal\",\n    \"dosagem\",\n    \"dourado\",\n    \"doutor\",\n    \"drenagem\",\n    \"drible\",\n    \"drogaria\",\n    \"duelar\",\n    \"duende\",\n    \"dueto\",\n    \"duplo\",\n    \"duquesa\",\n    \"durante\",\n    \"duvidoso\",\n    \"eclodir\",\n    \"ecoar\",\n    \"ecologia\",\n    \"edificar\",\n    \"edital\",\n    \"educado\",\n    \"efeito\",\n    \"efetivar\",\n    \"ejetar\",\n    \"elaborar\",\n    \"eleger\",\n    \"eleitor\",\n    \"elenco\",\n    \"elevador\",\n    \"eliminar\",\n    \"elogiar\",\n    \"embargo\",\n    \"embolado\",\n    \"embrulho\",\n    \"embutido\",\n    \"emenda\",\n    \"emergir\",\n    \"emissor\",\n    \"empatia\",\n    \"empenho\",\n    \"empinado\",\n    \"empolgar\",\n    \"emprego\",\n    \"empurrar\",\n    \"emulador\",\n    \"encaixe\",\n    \"encenado\",\n    \"enchente\",\n    \"encontro\",\n    \"endeusar\",\n    \"endossar\",\n    \"enfaixar\",\n    \"enfeite\",\n    \"enfim\",\n    \"engajado\",\n    \"engenho\",\n    \"englobar\",\n    \"engomado\",\n    \"engraxar\",\n    \"enguia\",\n    \"enjoar\",\n    \"enlatar\",\n    \"enquanto\",\n    \"enraizar\",\n    \"enrolado\",\n    \"enrugar\",\n    \"ensaio\",\n    \"enseada\",\n    \"ensino\",\n    \"ensopado\",\n    \"entanto\",\n    \"enteado\",\n    \"entidade\",\n    \"entortar\",\n    \"entrada\",\n    \"entulho\",\n    \"envergar\",\n    \"enviado\",\n    \"envolver\",\n    \"enxame\",\n    \"enxerto\",\n    \"enxofre\",\n    \"enxuto\",\n    \"epiderme\",\n    \"equipar\",\n    \"ereto\",\n    \"erguido\",\n    \"errata\",\n    \"erva\",\n    \"ervilha\",\n    \"esbanjar\",\n    \"esbelto\",\n    \"escama\",\n    \"escola\",\n    \"escrita\",\n    \"escuta\",\n    \"esfinge\",\n    \"esfolar\",\n    \"esfregar\",\n    \"esfumado\",\n    \"esgrima\",\n    \"esmalte\",\n    \"espanto\",\n    \"espelho\",\n    \"espiga\",\n    \"esponja\",\n    \"espreita\",\n    \"espumar\",\n    \"esquerda\",\n    \"estaca\",\n    \"esteira\",\n    \"esticar\",\n    \"estofado\",\n    \"estrela\",\n    \"estudo\",\n    \"esvaziar\",\n    \"etanol\",\n    \"etiqueta\",\n    \"euforia\",\n    \"europeu\",\n    \"evacuar\",\n    \"evaporar\",\n    \"evasivo\",\n    \"eventual\",\n    \"evidente\",\n    \"evoluir\",\n    \"exagero\",\n    \"exalar\",\n    \"examinar\",\n    \"exato\",\n    \"exausto\",\n    \"excesso\",\n    \"excitar\",\n    \"exclamar\",\n    \"executar\",\n    \"exemplo\",\n    \"exibir\",\n    \"exigente\",\n    \"exonerar\",\n    \"expandir\",\n    \"expelir\",\n    \"expirar\",\n    \"explanar\",\n    \"exposto\",\n    \"expresso\",\n    \"expulsar\",\n    \"externo\",\n    \"extinto\",\n    \"extrato\",\n    \"fabricar\",\n    \"fabuloso\",\n    \"faceta\",\n    \"facial\",\n    \"fada\",\n    \"fadiga\",\n    \"faixa\",\n    \"falar\",\n    \"falta\",\n    \"familiar\",\n    \"fandango\",\n    \"fanfarra\",\n    \"fantoche\",\n    \"fardado\",\n    \"farelo\",\n    \"farinha\",\n    \"farofa\",\n    \"farpa\",\n    \"fartura\",\n    \"fatia\",\n    \"fator\",\n    \"favorita\",\n    \"faxina\",\n    \"fazenda\",\n    \"fechado\",\n    \"feijoada\",\n    \"feirante\",\n    \"felino\",\n    \"feminino\",\n    \"fenda\",\n    \"feno\",\n    \"fera\",\n    \"feriado\",\n    \"ferrugem\",\n    \"ferver\",\n    \"festejar\",\n    \"fetal\",\n    \"feudal\",\n    \"fiapo\",\n    \"fibrose\",\n    \"ficar\",\n    \"ficheiro\",\n    \"figurado\",\n    \"fileira\",\n    \"filho\",\n    \"filme\",\n    \"filtrar\",\n    \"firmeza\",\n    \"fisgada\",\n    \"fissura\",\n    \"fita\",\n    \"fivela\",\n    \"fixador\",\n    \"fixo\",\n    \"flacidez\",\n    \"flamingo\",\n    \"flanela\",\n    \"flechada\",\n    \"flora\",\n    \"flutuar\",\n    \"fluxo\",\n    \"focal\",\n    \"focinho\",\n    \"fofocar\",\n    \"fogo\",\n    \"foguete\",\n    \"foice\",\n    \"folgado\",\n    \"folheto\",\n    \"forjar\",\n    \"formiga\",\n    \"forno\",\n    \"forte\",\n    \"fosco\",\n    \"fossa\",\n    \"fragata\",\n    \"fralda\",\n    \"frango\",\n    \"frasco\",\n    \"fraterno\",\n    \"freira\",\n    \"frente\",\n    \"fretar\",\n    \"frieza\",\n    \"friso\",\n    \"fritura\",\n    \"fronha\",\n    \"frustrar\",\n    \"fruteira\",\n    \"fugir\",\n    \"fulano\",\n    \"fuligem\",\n    \"fundar\",\n    \"fungo\",\n    \"funil\",\n    \"furador\",\n    \"furioso\",\n    \"futebol\",\n    \"gabarito\",\n    \"gabinete\",\n    \"gado\",\n    \"gaiato\",\n    \"gaiola\",\n    \"gaivota\",\n    \"galega\",\n    \"galho\",\n    \"galinha\",\n    \"galocha\",\n    \"ganhar\",\n    \"garagem\",\n    \"garfo\",\n    \"gargalo\",\n    \"garimpo\",\n    \"garoupa\",\n    \"garrafa\",\n    \"gasoduto\",\n    \"gasto\",\n    \"gata\",\n    \"gatilho\",\n    \"gaveta\",\n    \"gazela\",\n    \"gelado\",\n    \"geleia\",\n    \"gelo\",\n    \"gemada\",\n    \"gemer\",\n    \"gemido\",\n    \"generoso\",\n    \"gengiva\",\n    \"genial\",\n    \"genoma\",\n    \"genro\",\n    \"geologia\",\n    \"gerador\",\n    \"germinar\",\n    \"gesso\",\n    \"gestor\",\n    \"ginasta\",\n    \"gincana\",\n    \"gingado\",\n    \"girafa\",\n    \"girino\",\n    \"glacial\",\n    \"glicose\",\n    \"global\",\n    \"glorioso\",\n    \"goela\",\n    \"goiaba\",\n    \"golfe\",\n    \"golpear\",\n    \"gordura\",\n    \"gorjeta\",\n    \"gorro\",\n    \"gostoso\",\n    \"goteira\",\n    \"governar\",\n    \"gracejo\",\n    \"gradual\",\n    \"grafite\",\n    \"gralha\",\n    \"grampo\",\n    \"granada\",\n    \"gratuito\",\n    \"graveto\",\n    \"graxa\",\n    \"grego\",\n    \"grelhar\",\n    \"greve\",\n    \"grilo\",\n    \"grisalho\",\n    \"gritaria\",\n    \"grosso\",\n    \"grotesco\",\n    \"grudado\",\n    \"grunhido\",\n    \"gruta\",\n    \"guache\",\n    \"guarani\",\n    \"guaxinim\",\n    \"guerrear\",\n    \"guiar\",\n    \"guincho\",\n    \"guisado\",\n    \"gula\",\n    \"guloso\",\n    \"guru\",\n    \"habitar\",\n    \"harmonia\",\n    \"haste\",\n    \"haver\",\n    \"hectare\",\n    \"herdar\",\n    \"heresia\",\n    \"hesitar\",\n    \"hiato\",\n    \"hibernar\",\n    \"hidratar\",\n    \"hiena\",\n    \"hino\",\n    \"hipismo\",\n    \"hipnose\",\n    \"hipoteca\",\n    \"hoje\",\n    \"holofote\",\n    \"homem\",\n    \"honesto\",\n    \"honrado\",\n    \"hormonal\",\n    \"hospedar\",\n    \"humorado\",\n    \"iate\",\n    \"ideia\",\n    \"idoso\",\n    \"ignorado\",\n    \"igreja\",\n    \"iguana\",\n    \"ileso\",\n    \"ilha\",\n    \"iludido\",\n    \"iluminar\",\n    \"ilustrar\",\n    \"imagem\",\n    \"imediato\",\n    \"imenso\",\n    \"imersivo\",\n    \"iminente\",\n    \"imitador\",\n    \"imortal\",\n    \"impacto\",\n    \"impedir\",\n    \"implante\",\n    \"impor\",\n    \"imprensa\",\n    \"impune\",\n    \"imunizar\",\n    \"inalador\",\n    \"inapto\",\n    \"inativo\",\n    \"incenso\",\n    \"inchar\",\n    \"incidir\",\n    \"incluir\",\n    \"incolor\",\n    \"indeciso\",\n    \"indireto\",\n    \"indutor\",\n    \"ineficaz\",\n    \"inerente\",\n    \"infantil\",\n    \"infestar\",\n    \"infinito\",\n    \"inflamar\",\n    \"informal\",\n    \"infrator\",\n    \"ingerir\",\n    \"inibido\",\n    \"inicial\",\n    \"inimigo\",\n    \"injetar\",\n    \"inocente\",\n    \"inodoro\",\n    \"inovador\",\n    \"inox\",\n    \"inquieto\",\n    \"inscrito\",\n    \"inseto\",\n    \"insistir\",\n    \"inspetor\",\n    \"instalar\",\n    \"insulto\",\n    \"intacto\",\n    \"integral\",\n    \"intimar\",\n    \"intocado\",\n    \"intriga\",\n    \"invasor\",\n    \"inverno\",\n    \"invicto\",\n    \"invocar\",\n    \"iogurte\",\n    \"iraniano\",\n    \"ironizar\",\n    \"irreal\",\n    \"irritado\",\n    \"isca\",\n    \"isento\",\n    \"isolado\",\n    \"isqueiro\",\n    \"italiano\",\n    \"janeiro\",\n    \"jangada\",\n    \"janta\",\n    \"jararaca\",\n    \"jardim\",\n    \"jarro\",\n    \"jasmim\",\n    \"jato\",\n    \"javali\",\n    \"jazida\",\n    \"jejum\",\n    \"joaninha\",\n    \"joelhada\",\n    \"jogador\",\n    \"joia\",\n    \"jornal\",\n    \"jorrar\",\n    \"jovem\",\n    \"juba\",\n    \"judeu\",\n    \"judoca\",\n    \"juiz\",\n    \"julgador\",\n    \"julho\",\n    \"jurado\",\n    \"jurista\",\n    \"juro\",\n    \"justa\",\n    \"labareda\",\n    \"laboral\",\n    \"lacre\",\n    \"lactante\",\n    \"ladrilho\",\n    \"lagarta\",\n    \"lagoa\",\n    \"laje\",\n    \"lamber\",\n    \"lamentar\",\n    \"laminar\",\n    \"lampejo\",\n    \"lanche\",\n    \"lapidar\",\n    \"lapso\",\n    \"laranja\",\n    \"lareira\",\n    \"largura\",\n    \"lasanha\",\n    \"lastro\",\n    \"lateral\",\n    \"latido\",\n    \"lavanda\",\n    \"lavoura\",\n    \"lavrador\",\n    \"laxante\",\n    \"lazer\",\n    \"lealdade\",\n    \"lebre\",\n    \"legado\",\n    \"legendar\",\n    \"legista\",\n    \"leigo\",\n    \"leiloar\",\n    \"leitura\",\n    \"lembrete\",\n    \"leme\",\n    \"lenhador\",\n    \"lentilha\",\n    \"leoa\",\n    \"lesma\",\n    \"leste\",\n    \"letivo\",\n    \"letreiro\",\n    \"levar\",\n    \"leveza\",\n    \"levitar\",\n    \"liberal\",\n    \"libido\",\n    \"liderar\",\n    \"ligar\",\n    \"ligeiro\",\n    \"limitar\",\n    \"limoeiro\",\n    \"limpador\",\n    \"linda\",\n    \"linear\",\n    \"linhagem\",\n    \"liquidez\",\n    \"listagem\",\n    \"lisura\",\n    \"litoral\",\n    \"livro\",\n    \"lixa\",\n    \"lixeira\",\n    \"locador\",\n    \"locutor\",\n    \"lojista\",\n    \"lombo\",\n    \"lona\",\n    \"longe\",\n    \"lontra\",\n    \"lorde\",\n    \"lotado\",\n    \"loteria\",\n    \"loucura\",\n    \"lousa\",\n    \"louvar\",\n    \"luar\",\n    \"lucidez\",\n    \"lucro\",\n    \"luneta\",\n    \"lustre\",\n    \"lutador\",\n    \"luva\",\n    \"macaco\",\n    \"macete\",\n    \"machado\",\n    \"macio\",\n    \"madeira\",\n    \"madrinha\",\n    \"magnata\",\n    \"magreza\",\n    \"maior\",\n    \"mais\",\n    \"malandro\",\n    \"malha\",\n    \"malote\",\n    \"maluco\",\n    \"mamilo\",\n    \"mamoeiro\",\n    \"mamute\",\n    \"manada\",\n    \"mancha\",\n    \"mandato\",\n    \"manequim\",\n    \"manhoso\",\n    \"manivela\",\n    \"manobrar\",\n    \"mansa\",\n    \"manter\",\n    \"manusear\",\n    \"mapeado\",\n    \"maquinar\",\n    \"marcador\",\n    \"maresia\",\n    \"marfim\",\n    \"margem\",\n    \"marinho\",\n    \"marmita\",\n    \"maroto\",\n    \"marquise\",\n    \"marreco\",\n    \"martelo\",\n    \"marujo\",\n    \"mascote\",\n    \"masmorra\",\n    \"massagem\",\n    \"mastigar\",\n    \"matagal\",\n    \"materno\",\n    \"matinal\",\n    \"matutar\",\n    \"maxilar\",\n    \"medalha\",\n    \"medida\",\n    \"medusa\",\n    \"megafone\",\n    \"meiga\",\n    \"melancia\",\n    \"melhor\",\n    \"membro\",\n    \"memorial\",\n    \"menino\",\n    \"menos\",\n    \"mensagem\",\n    \"mental\",\n    \"merecer\",\n    \"mergulho\",\n    \"mesada\",\n    \"mesclar\",\n    \"mesmo\",\n    \"mesquita\",\n    \"mestre\",\n    \"metade\",\n    \"meteoro\",\n    \"metragem\",\n    \"mexer\",\n    \"mexicano\",\n    \"micro\",\n    \"migalha\",\n    \"migrar\",\n    \"milagre\",\n    \"milenar\",\n    \"milhar\",\n    \"mimado\",\n    \"minerar\",\n    \"minhoca\",\n    \"ministro\",\n    \"minoria\",\n    \"miolo\",\n    \"mirante\",\n    \"mirtilo\",\n    \"misturar\",\n    \"mocidade\",\n    \"moderno\",\n    \"modular\",\n    \"moeda\",\n    \"moer\",\n    \"moinho\",\n    \"moita\",\n    \"moldura\",\n    \"moleza\",\n    \"molho\",\n    \"molinete\",\n    \"molusco\",\n    \"montanha\",\n    \"moqueca\",\n    \"morango\",\n    \"morcego\",\n    \"mordomo\",\n    \"morena\",\n    \"mosaico\",\n    \"mosquete\",\n    \"mostarda\",\n    \"motel\",\n    \"motim\",\n    \"moto\",\n    \"motriz\",\n    \"muda\",\n    \"muito\",\n    \"mulata\",\n    \"mulher\",\n    \"multar\",\n    \"mundial\",\n    \"munido\",\n    \"muralha\",\n    \"murcho\",\n    \"muscular\",\n    \"museu\",\n    \"musical\",\n    \"nacional\",\n    \"nadador\",\n    \"naja\",\n    \"namoro\",\n    \"narina\",\n    \"narrado\",\n    \"nascer\",\n    \"nativa\",\n    \"natureza\",\n    \"navalha\",\n    \"navegar\",\n    \"navio\",\n    \"neblina\",\n    \"nebuloso\",\n    \"negativa\",\n    \"negociar\",\n    \"negrito\",\n    \"nervoso\",\n    \"neta\",\n    \"neural\",\n    \"nevasca\",\n    \"nevoeiro\",\n    \"ninar\",\n    \"ninho\",\n    \"nitidez\",\n    \"nivelar\",\n    \"nobreza\",\n    \"noite\",\n    \"noiva\",\n    \"nomear\",\n    \"nominal\",\n    \"nordeste\",\n    \"nortear\",\n    \"notar\",\n    \"noticiar\",\n    \"noturno\",\n    \"novelo\",\n    \"novilho\",\n    \"novo\",\n    \"nublado\",\n    \"nudez\",\n    \"numeral\",\n    \"nupcial\",\n    \"nutrir\",\n    \"nuvem\",\n    \"obcecado\",\n    \"obedecer\",\n    \"objetivo\",\n    \"obrigado\",\n    \"obscuro\",\n    \"obstetra\",\n    \"obter\",\n    \"obturar\",\n    \"ocidente\",\n    \"ocioso\",\n    \"ocorrer\",\n    \"oculista\",\n    \"ocupado\",\n    \"ofegante\",\n    \"ofensiva\",\n    \"oferenda\",\n    \"oficina\",\n    \"ofuscado\",\n    \"ogiva\",\n    \"olaria\",\n    \"oleoso\",\n    \"olhar\",\n    \"oliveira\",\n    \"ombro\",\n    \"omelete\",\n    \"omisso\",\n    \"omitir\",\n    \"ondulado\",\n    \"oneroso\",\n    \"ontem\",\n    \"opcional\",\n    \"operador\",\n    \"oponente\",\n    \"oportuno\",\n    \"oposto\",\n    \"orar\",\n    \"orbitar\",\n    \"ordem\",\n    \"ordinal\",\n    \"orfanato\",\n    \"orgasmo\",\n    \"orgulho\",\n    \"oriental\",\n    \"origem\",\n    \"oriundo\",\n    \"orla\",\n    \"ortodoxo\",\n    \"orvalho\",\n    \"oscilar\",\n    \"ossada\",\n    \"osso\",\n    \"ostentar\",\n    \"otimismo\",\n    \"ousadia\",\n    \"outono\",\n    \"outubro\",\n    \"ouvido\",\n    \"ovelha\",\n    \"ovular\",\n    \"oxidar\",\n    \"oxigenar\",\n    \"pacato\",\n    \"paciente\",\n    \"pacote\",\n    \"pactuar\",\n    \"padaria\",\n    \"padrinho\",\n    \"pagar\",\n    \"pagode\",\n    \"painel\",\n    \"pairar\",\n    \"paisagem\",\n    \"palavra\",\n    \"palestra\",\n    \"palheta\",\n    \"palito\",\n    \"palmada\",\n    \"palpitar\",\n    \"pancada\",\n    \"panela\",\n    \"panfleto\",\n    \"panqueca\",\n    \"pantanal\",\n    \"papagaio\",\n    \"papelada\",\n    \"papiro\",\n    \"parafina\",\n    \"parcial\",\n    \"pardal\",\n    \"parede\",\n    \"partida\",\n    \"pasmo\",\n    \"passado\",\n    \"pastel\",\n    \"patamar\",\n    \"patente\",\n    \"patinar\",\n    \"patrono\",\n    \"paulada\",\n    \"pausar\",\n    \"peculiar\",\n    \"pedalar\",\n    \"pedestre\",\n    \"pediatra\",\n    \"pedra\",\n    \"pegada\",\n    \"peitoral\",\n    \"peixe\",\n    \"pele\",\n    \"pelicano\",\n    \"penca\",\n    \"pendurar\",\n    \"peneira\",\n    \"penhasco\",\n    \"pensador\",\n    \"pente\",\n    \"perceber\",\n    \"perfeito\",\n    \"pergunta\",\n    \"perito\",\n    \"permitir\",\n    \"perna\",\n    \"perplexo\",\n    \"persiana\",\n    \"pertence\",\n    \"peruca\",\n    \"pescado\",\n    \"pesquisa\",\n    \"pessoa\",\n    \"petiscar\",\n    \"piada\",\n    \"picado\",\n    \"piedade\",\n    \"pigmento\",\n    \"pilastra\",\n    \"pilhado\",\n    \"pilotar\",\n    \"pimenta\",\n    \"pincel\",\n    \"pinguim\",\n    \"pinha\",\n    \"pinote\",\n    \"pintar\",\n    \"pioneiro\",\n    \"pipoca\",\n    \"piquete\",\n    \"piranha\",\n    \"pires\",\n    \"pirueta\",\n    \"piscar\",\n    \"pistola\",\n    \"pitanga\",\n    \"pivete\",\n    \"planta\",\n    \"plaqueta\",\n    \"platina\",\n    \"plebeu\",\n    \"plumagem\",\n    \"pluvial\",\n    \"pneu\",\n    \"poda\",\n    \"poeira\",\n    \"poetisa\",\n    \"polegada\",\n    \"policiar\",\n    \"poluente\",\n    \"polvilho\",\n    \"pomar\",\n    \"pomba\",\n    \"ponderar\",\n    \"pontaria\",\n    \"populoso\",\n    \"porta\",\n    \"possuir\",\n    \"postal\",\n    \"pote\",\n    \"poupar\",\n    \"pouso\",\n    \"povoar\",\n    \"praia\",\n    \"prancha\",\n    \"prato\",\n    \"praxe\",\n    \"prece\",\n    \"predador\",\n    \"prefeito\",\n    \"premiar\",\n    \"prensar\",\n    \"preparar\",\n    \"presilha\",\n    \"pretexto\",\n    \"prevenir\",\n    \"prezar\",\n    \"primata\",\n    \"princesa\",\n    \"prisma\",\n    \"privado\",\n    \"processo\",\n    \"produto\",\n    \"profeta\",\n    \"proibido\",\n    \"projeto\",\n    \"prometer\",\n    \"propagar\",\n    \"prosa\",\n    \"protetor\",\n    \"provador\",\n    \"publicar\",\n    \"pudim\",\n    \"pular\",\n    \"pulmonar\",\n    \"pulseira\",\n    \"punhal\",\n    \"punir\",\n    \"pupilo\",\n    \"pureza\",\n    \"puxador\",\n    \"quadra\",\n    \"quantia\",\n    \"quarto\",\n    \"quase\",\n    \"quebrar\",\n    \"queda\",\n    \"queijo\",\n    \"quente\",\n    \"querido\",\n    \"quimono\",\n    \"quina\",\n    \"quiosque\",\n    \"rabanada\",\n    \"rabisco\",\n    \"rachar\",\n    \"racionar\",\n    \"radial\",\n    \"raiar\",\n    \"rainha\",\n    \"raio\",\n    \"raiva\",\n    \"rajada\",\n    \"ralado\",\n    \"ramal\",\n    \"ranger\",\n    \"ranhura\",\n    \"rapadura\",\n    \"rapel\",\n    \"rapidez\",\n    \"raposa\",\n    \"raquete\",\n    \"raridade\",\n    \"rasante\",\n    \"rascunho\",\n    \"rasgar\",\n    \"raspador\",\n    \"rasteira\",\n    \"rasurar\",\n    \"ratazana\",\n    \"ratoeira\",\n    \"realeza\",\n    \"reanimar\",\n    \"reaver\",\n    \"rebaixar\",\n    \"rebelde\",\n    \"rebolar\",\n    \"recado\",\n    \"recente\",\n    \"recheio\",\n    \"recibo\",\n    \"recordar\",\n    \"recrutar\",\n    \"recuar\",\n    \"rede\",\n    \"redimir\",\n    \"redonda\",\n    \"reduzida\",\n    \"reenvio\",\n    \"refinar\",\n    \"refletir\",\n    \"refogar\",\n    \"refresco\",\n    \"refugiar\",\n    \"regalia\",\n    \"regime\",\n    \"regra\",\n    \"reinado\",\n    \"reitor\",\n    \"rejeitar\",\n    \"relativo\",\n    \"remador\",\n    \"remendo\",\n    \"remorso\",\n    \"renovado\",\n    \"reparo\",\n    \"repelir\",\n    \"repleto\",\n    \"repolho\",\n    \"represa\",\n    \"repudiar\",\n    \"requerer\",\n    \"resenha\",\n    \"resfriar\",\n    \"resgatar\",\n    \"residir\",\n    \"resolver\",\n    \"respeito\",\n    \"ressaca\",\n    \"restante\",\n    \"resumir\",\n    \"retalho\",\n    \"reter\",\n    \"retirar\",\n    \"retomada\",\n    \"retratar\",\n    \"revelar\",\n    \"revisor\",\n    \"revolta\",\n    \"riacho\",\n    \"rica\",\n    \"rigidez\",\n    \"rigoroso\",\n    \"rimar\",\n    \"ringue\",\n    \"risada\",\n    \"risco\",\n    \"risonho\",\n    \"robalo\",\n    \"rochedo\",\n    \"rodada\",\n    \"rodeio\",\n    \"rodovia\",\n    \"roedor\",\n    \"roleta\",\n    \"romano\",\n    \"roncar\",\n    \"rosado\",\n    \"roseira\",\n    \"rosto\",\n    \"rota\",\n    \"roteiro\",\n    \"rotina\",\n    \"rotular\",\n    \"rouco\",\n    \"roupa\",\n    \"roxo\",\n    \"rubro\",\n    \"rugido\",\n    \"rugoso\",\n    \"ruivo\",\n    \"rumo\",\n    \"rupestre\",\n    \"russo\",\n    \"sabor\",\n    \"saciar\",\n    \"sacola\",\n    \"sacudir\",\n    \"sadio\",\n    \"safira\",\n    \"saga\",\n    \"sagrada\",\n    \"saibro\",\n    \"salada\",\n    \"saleiro\",\n    \"salgado\",\n    \"saliva\",\n    \"salpicar\",\n    \"salsicha\",\n    \"saltar\",\n    \"salvador\",\n    \"sambar\",\n    \"samurai\",\n    \"sanar\",\n    \"sanfona\",\n    \"sangue\",\n    \"sanidade\",\n    \"sapato\",\n    \"sarda\",\n    \"sargento\",\n    \"sarjeta\",\n    \"saturar\",\n    \"saudade\",\n    \"saxofone\",\n    \"sazonal\",\n    \"secar\",\n    \"secular\",\n    \"seda\",\n    \"sedento\",\n    \"sediado\",\n    \"sedoso\",\n    \"sedutor\",\n    \"segmento\",\n    \"segredo\",\n    \"segundo\",\n    \"seiva\",\n    \"seleto\",\n    \"selvagem\",\n    \"semanal\",\n    \"semente\",\n    \"senador\",\n    \"senhor\",\n    \"sensual\",\n    \"sentado\",\n    \"separado\",\n    \"sereia\",\n    \"seringa\",\n    \"serra\",\n    \"servo\",\n    \"setembro\",\n    \"setor\",\n    \"sigilo\",\n    \"silhueta\",\n    \"silicone\",\n    \"simetria\",\n    \"simpatia\",\n    \"simular\",\n    \"sinal\",\n    \"sincero\",\n    \"singular\",\n    \"sinopse\",\n    \"sintonia\",\n    \"sirene\",\n    \"siri\",\n    \"situado\",\n    \"soberano\",\n    \"sobra\",\n    \"socorro\",\n    \"sogro\",\n    \"soja\",\n    \"solda\",\n    \"soletrar\",\n    \"solteiro\",\n    \"sombrio\",\n    \"sonata\",\n    \"sondar\",\n    \"sonegar\",\n    \"sonhador\",\n    \"sono\",\n    \"soprano\",\n    \"soquete\",\n    \"sorrir\",\n    \"sorteio\",\n    \"sossego\",\n    \"sotaque\",\n    \"soterrar\",\n    \"sovado\",\n    \"sozinho\",\n    \"suavizar\",\n    \"subida\",\n    \"submerso\",\n    \"subsolo\",\n    \"subtrair\",\n    \"sucata\",\n    \"sucesso\",\n    \"suco\",\n    \"sudeste\",\n    \"sufixo\",\n    \"sugador\",\n    \"sugerir\",\n    \"sujeito\",\n    \"sulfato\",\n    \"sumir\",\n    \"suor\",\n    \"superior\",\n    \"suplicar\",\n    \"suposto\",\n    \"suprimir\",\n    \"surdina\",\n    \"surfista\",\n    \"surpresa\",\n    \"surreal\",\n    \"surtir\",\n    \"suspiro\",\n    \"sustento\",\n    \"tabela\",\n    \"tablete\",\n    \"tabuada\",\n    \"tacho\",\n    \"tagarela\",\n    \"talher\",\n    \"talo\",\n    \"talvez\",\n    \"tamanho\",\n    \"tamborim\",\n    \"tampa\",\n    \"tangente\",\n    \"tanto\",\n    \"tapar\",\n    \"tapioca\",\n    \"tardio\",\n    \"tarefa\",\n    \"tarja\",\n    \"tarraxa\",\n    \"tatuagem\",\n    \"taurino\",\n    \"taxativo\",\n    \"taxista\",\n    \"teatral\",\n    \"tecer\",\n    \"tecido\",\n    \"teclado\",\n    \"tedioso\",\n    \"teia\",\n    \"teimar\",\n    \"telefone\",\n    \"telhado\",\n    \"tempero\",\n    \"tenente\",\n    \"tensor\",\n    \"tentar\",\n    \"termal\",\n    \"terno\",\n    \"terreno\",\n    \"tese\",\n    \"tesoura\",\n    \"testado\",\n    \"teto\",\n    \"textura\",\n    \"texugo\",\n    \"tiara\",\n    \"tigela\",\n    \"tijolo\",\n    \"timbrar\",\n    \"timidez\",\n    \"tingido\",\n    \"tinteiro\",\n    \"tiragem\",\n    \"titular\",\n    \"toalha\",\n    \"tocha\",\n    \"tolerar\",\n    \"tolice\",\n    \"tomada\",\n    \"tomilho\",\n    \"tonel\",\n    \"tontura\",\n    \"topete\",\n    \"tora\",\n    \"torcido\",\n    \"torneio\",\n    \"torque\",\n    \"torrada\",\n    \"torto\",\n    \"tostar\",\n    \"touca\",\n    \"toupeira\",\n    \"toxina\",\n    \"trabalho\",\n    \"tracejar\",\n    \"tradutor\",\n    \"trafegar\",\n    \"trajeto\",\n    \"trama\",\n    \"trancar\",\n    \"trapo\",\n    \"traseiro\",\n    \"tratador\",\n    \"travar\",\n    \"treino\",\n    \"tremer\",\n    \"trepidar\",\n    \"trevo\",\n    \"triagem\",\n    \"tribo\",\n    \"triciclo\",\n    \"tridente\",\n    \"trilogia\",\n    \"trindade\",\n    \"triplo\",\n    \"triturar\",\n    \"triunfal\",\n    \"trocar\",\n    \"trombeta\",\n    \"trova\",\n    \"trunfo\",\n    \"truque\",\n    \"tubular\",\n    \"tucano\",\n    \"tudo\",\n    \"tulipa\",\n    \"tupi\",\n    \"turbo\",\n    \"turma\",\n    \"turquesa\",\n    \"tutelar\",\n    \"tutorial\",\n    \"uivar\",\n    \"umbigo\",\n    \"unha\",\n    \"unidade\",\n    \"uniforme\",\n    \"urologia\",\n    \"urso\",\n    \"urtiga\",\n    \"urubu\",\n    \"usado\",\n    \"usina\",\n    \"usufruir\",\n    \"vacina\",\n    \"vadiar\",\n    \"vagaroso\",\n    \"vaidoso\",\n    \"vala\",\n    \"valente\",\n    \"validade\",\n    \"valores\",\n    \"vantagem\",\n    \"vaqueiro\",\n    \"varanda\",\n    \"vareta\",\n    \"varrer\",\n    \"vascular\",\n    \"vasilha\",\n    \"vassoura\",\n    \"vazar\",\n    \"vazio\",\n    \"veado\",\n    \"vedar\",\n    \"vegetar\",\n    \"veicular\",\n    \"veleiro\",\n    \"velhice\",\n    \"veludo\",\n    \"vencedor\",\n    \"vendaval\",\n    \"venerar\",\n    \"ventre\",\n    \"verbal\",\n    \"verdade\",\n    \"vereador\",\n    \"vergonha\",\n    \"vermelho\",\n    \"verniz\",\n    \"versar\",\n    \"vertente\",\n    \"vespa\",\n    \"vestido\",\n    \"vetorial\",\n    \"viaduto\",\n    \"viagem\",\n    \"viajar\",\n    \"viatura\",\n    \"vibrador\",\n    \"videira\",\n    \"vidraria\",\n    \"viela\",\n    \"viga\",\n    \"vigente\",\n    \"vigiar\",\n    \"vigorar\",\n    \"vilarejo\",\n    \"vinco\",\n    \"vinheta\",\n    \"vinil\",\n    \"violeta\",\n    \"virada\",\n    \"virtude\",\n    \"visitar\",\n    \"visto\",\n    \"vitral\",\n    \"viveiro\",\n    \"vizinho\",\n    \"voador\",\n    \"voar\",\n    \"vogal\",\n    \"volante\",\n    \"voleibol\",\n    \"voltagem\",\n    \"volumoso\",\n    \"vontade\",\n    \"vulto\",\n    \"vuvuzela\",\n    \"xadrez\",\n    \"xarope\",\n    \"xeque\",\n    \"xeretar\",\n    \"xerife\",\n    \"xingar\",\n    \"zangado\",\n    \"zarpar\",\n    \"zebu\",\n    \"zelador\",\n    \"zombar\",\n    \"zoologia\",\n    \"zumbido\"\n]\n","module.exports=[\n    \"ábaco\",\n    \"abdomen\",\n    \"abeja\",\n    \"abierto\",\n    \"abogado\",\n    \"abono\",\n    \"aborto\",\n    \"abrazo\",\n    \"abrir\",\n    \"abuelo\",\n    \"abuso\",\n    \"acabar\",\n    \"academia\",\n    \"acceso\",\n    \"acción\",\n    \"aceite\",\n    \"acelga\",\n    \"acento\",\n    \"aceptar\",\n    \"ácido\",\n    \"aclarar\",\n    \"acné\",\n    \"acoger\",\n    \"acoso\",\n    \"activo\",\n    \"acto\",\n    \"actriz\",\n    \"actuar\",\n    \"acudir\",\n    \"acuerdo\",\n    \"acusar\",\n    \"adicto\",\n    \"admitir\",\n    \"adoptar\",\n    \"adorno\",\n    \"aduana\",\n    \"adulto\",\n    \"aéreo\",\n    \"afectar\",\n    \"afición\",\n    \"afinar\",\n    \"afirmar\",\n    \"ágil\",\n    \"agitar\",\n    \"agonía\",\n    \"agosto\",\n    \"agotar\",\n    \"agregar\",\n    \"agrio\",\n    \"agua\",\n    \"agudo\",\n    \"águila\",\n    \"aguja\",\n    \"ahogo\",\n    \"ahorro\",\n    \"aire\",\n    \"aislar\",\n    \"ajedrez\",\n    \"ajeno\",\n    \"ajuste\",\n    \"alacrán\",\n    \"alambre\",\n    \"alarma\",\n    \"alba\",\n    \"álbum\",\n    \"alcalde\",\n    \"aldea\",\n    \"alegre\",\n    \"alejar\",\n    \"alerta\",\n    \"aleta\",\n    \"alfiler\",\n    \"alga\",\n    \"algodón\",\n    \"aliado\",\n    \"aliento\",\n    \"alivio\",\n    \"alma\",\n    \"almeja\",\n    \"almíbar\",\n    \"altar\",\n    \"alteza\",\n    \"altivo\",\n    \"alto\",\n    \"altura\",\n    \"alumno\",\n    \"alzar\",\n    \"amable\",\n    \"amante\",\n    \"amapola\",\n    \"amargo\",\n    \"amasar\",\n    \"ámbar\",\n    \"ámbito\",\n    \"ameno\",\n    \"amigo\",\n    \"amistad\",\n    \"amor\",\n    \"amparo\",\n    \"amplio\",\n    \"ancho\",\n    \"anciano\",\n    \"ancla\",\n    \"andar\",\n    \"andén\",\n    \"anemia\",\n    \"ángulo\",\n    \"anillo\",\n    \"ánimo\",\n    \"anís\",\n    \"anotar\",\n    \"antena\",\n    \"antiguo\",\n    \"antojo\",\n    \"anual\",\n    \"anular\",\n    \"anuncio\",\n    \"añadir\",\n    \"añejo\",\n    \"año\",\n    \"apagar\",\n    \"aparato\",\n    \"apetito\",\n    \"apio\",\n    \"aplicar\",\n    \"apodo\",\n    \"aporte\",\n    \"apoyo\",\n    \"aprender\",\n    \"aprobar\",\n    \"apuesta\",\n    \"apuro\",\n    \"arado\",\n    \"araña\",\n    \"arar\",\n    \"árbitro\",\n    \"árbol\",\n    \"arbusto\",\n    \"archivo\",\n    \"arco\",\n    \"arder\",\n    \"ardilla\",\n    \"arduo\",\n    \"área\",\n    \"árido\",\n    \"aries\",\n    \"armonía\",\n    \"arnés\",\n    \"aroma\",\n    \"arpa\",\n    \"arpón\",\n    \"arreglo\",\n    \"arroz\",\n    \"arruga\",\n    \"arte\",\n    \"artista\",\n    \"asa\",\n    \"asado\",\n    \"asalto\",\n    \"ascenso\",\n    \"asegurar\",\n    \"aseo\",\n    \"asesor\",\n    \"asiento\",\n    \"asilo\",\n    \"asistir\",\n    \"asno\",\n    \"asombro\",\n    \"áspero\",\n    \"astilla\",\n    \"astro\",\n    \"astuto\",\n    \"asumir\",\n    \"asunto\",\n    \"atajo\",\n    \"ataque\",\n    \"atar\",\n    \"atento\",\n    \"ateo\",\n    \"ático\",\n    \"atleta\",\n    \"átomo\",\n    \"atraer\",\n    \"atroz\",\n    \"atún\",\n    \"audaz\",\n    \"audio\",\n    \"auge\",\n    \"aula\",\n    \"aumento\",\n    \"ausente\",\n    \"autor\",\n    \"aval\",\n    \"avance\",\n    \"avaro\",\n    \"ave\",\n    \"avellana\",\n    \"avena\",\n    \"avestruz\",\n    \"avión\",\n    \"aviso\",\n    \"ayer\",\n    \"ayuda\",\n    \"ayuno\",\n    \"azafrán\",\n    \"azar\",\n    \"azote\",\n    \"azúcar\",\n    \"azufre\",\n    \"azul\",\n    \"baba\",\n    \"babor\",\n    \"bache\",\n    \"bahía\",\n    \"baile\",\n    \"bajar\",\n    \"balanza\",\n    \"balcón\",\n    \"balde\",\n    \"bambú\",\n    \"banco\",\n    \"banda\",\n    \"baño\",\n    \"barba\",\n    \"barco\",\n    \"barniz\",\n    \"barro\",\n    \"báscula\",\n    \"bastón\",\n    \"basura\",\n    \"batalla\",\n    \"batería\",\n    \"batir\",\n    \"batuta\",\n    \"baúl\",\n    \"bazar\",\n    \"bebé\",\n    \"bebida\",\n    \"bello\",\n    \"besar\",\n    \"beso\",\n    \"bestia\",\n    \"bicho\",\n    \"bien\",\n    \"bingo\",\n    \"blanco\",\n    \"bloque\",\n    \"blusa\",\n    \"boa\",\n    \"bobina\",\n    \"bobo\",\n    \"boca\",\n    \"bocina\",\n    \"boda\",\n    \"bodega\",\n    \"boina\",\n    \"bola\",\n    \"bolero\",\n    \"bolsa\",\n    \"bomba\",\n    \"bondad\",\n    \"bonito\",\n    \"bono\",\n    \"bonsái\",\n    \"borde\",\n    \"borrar\",\n    \"bosque\",\n    \"bote\",\n    \"botín\",\n    \"bóveda\",\n    \"bozal\",\n    \"bravo\",\n    \"brazo\",\n    \"brecha\",\n    \"breve\",\n    \"brillo\",\n    \"brinco\",\n    \"brisa\",\n    \"broca\",\n    \"broma\",\n    \"bronce\",\n    \"brote\",\n    \"bruja\",\n    \"brusco\",\n    \"bruto\",\n    \"buceo\",\n    \"bucle\",\n    \"bueno\",\n    \"buey\",\n    \"bufanda\",\n    \"bufón\",\n    \"búho\",\n    \"buitre\",\n    \"bulto\",\n    \"burbuja\",\n    \"burla\",\n    \"burro\",\n    \"buscar\",\n    \"butaca\",\n    \"buzón\",\n    \"caballo\",\n    \"cabeza\",\n    \"cabina\",\n    \"cabra\",\n    \"cacao\",\n    \"cadáver\",\n    \"cadena\",\n    \"caer\",\n    \"café\",\n    \"caída\",\n    \"caimán\",\n    \"caja\",\n    \"cajón\",\n    \"cal\",\n    \"calamar\",\n    \"calcio\",\n    \"caldo\",\n    \"calidad\",\n    \"calle\",\n    \"calma\",\n    \"calor\",\n    \"calvo\",\n    \"cama\",\n    \"cambio\",\n    \"camello\",\n    \"camino\",\n    \"campo\",\n    \"cáncer\",\n    \"candil\",\n    \"canela\",\n    \"canguro\",\n    \"canica\",\n    \"canto\",\n    \"caña\",\n    \"cañón\",\n    \"caoba\",\n    \"caos\",\n    \"capaz\",\n    \"capitán\",\n    \"capote\",\n    \"captar\",\n    \"capucha\",\n    \"cara\",\n    \"carbón\",\n    \"cárcel\",\n    \"careta\",\n    \"carga\",\n    \"cariño\",\n    \"carne\",\n    \"carpeta\",\n    \"carro\",\n    \"carta\",\n    \"casa\",\n    \"casco\",\n    \"casero\",\n    \"caspa\",\n    \"castor\",\n    \"catorce\",\n    \"catre\",\n    \"caudal\",\n    \"causa\",\n    \"cazo\",\n    \"cebolla\",\n    \"ceder\",\n    \"cedro\",\n    \"celda\",\n    \"célebre\",\n    \"celoso\",\n    \"célula\",\n    \"cemento\",\n    \"ceniza\",\n    \"centro\",\n    \"cerca\",\n    \"cerdo\",\n    \"cereza\",\n    \"cero\",\n    \"cerrar\",\n    \"certeza\",\n    \"césped\",\n    \"cetro\",\n    \"chacal\",\n    \"chaleco\",\n    \"champú\",\n    \"chancla\",\n    \"chapa\",\n    \"charla\",\n    \"chico\",\n    \"chiste\",\n    \"chivo\",\n    \"choque\",\n    \"choza\",\n    \"chuleta\",\n    \"chupar\",\n    \"ciclón\",\n    \"ciego\",\n    \"cielo\",\n    \"cien\",\n    \"cierto\",\n    \"cifra\",\n    \"cigarro\",\n    \"cima\",\n    \"cinco\",\n    \"cine\",\n    \"cinta\",\n    \"ciprés\",\n    \"circo\",\n    \"ciruela\",\n    \"cisne\",\n    \"cita\",\n    \"ciudad\",\n    \"clamor\",\n    \"clan\",\n    \"claro\",\n    \"clase\",\n    \"clave\",\n    \"cliente\",\n    \"clima\",\n    \"clínica\",\n    \"cobre\",\n    \"cocción\",\n    \"cochino\",\n    \"cocina\",\n    \"coco\",\n    \"código\",\n    \"codo\",\n    \"cofre\",\n    \"coger\",\n    \"cohete\",\n    \"cojín\",\n    \"cojo\",\n    \"cola\",\n    \"colcha\",\n    \"colegio\",\n    \"colgar\",\n    \"colina\",\n    \"collar\",\n    \"colmo\",\n    \"columna\",\n    \"combate\",\n    \"comer\",\n    \"comida\",\n    \"cómodo\",\n    \"compra\",\n    \"conde\",\n    \"conejo\",\n    \"conga\",\n    \"conocer\",\n    \"consejo\",\n    \"contar\",\n    \"copa\",\n    \"copia\",\n    \"corazón\",\n    \"corbata\",\n    \"corcho\",\n    \"cordón\",\n    \"corona\",\n    \"correr\",\n    \"coser\",\n    \"cosmos\",\n    \"costa\",\n    \"cráneo\",\n    \"cráter\",\n    \"crear\",\n    \"crecer\",\n    \"creído\",\n    \"crema\",\n    \"cría\",\n    \"crimen\",\n    \"cripta\",\n    \"crisis\",\n    \"cromo\",\n    \"crónica\",\n    \"croqueta\",\n    \"crudo\",\n    \"cruz\",\n    \"cuadro\",\n    \"cuarto\",\n    \"cuatro\",\n    \"cubo\",\n    \"cubrir\",\n    \"cuchara\",\n    \"cuello\",\n    \"cuento\",\n    \"cuerda\",\n    \"cuesta\",\n    \"cueva\",\n    \"cuidar\",\n    \"culebra\",\n    \"culpa\",\n    \"culto\",\n    \"cumbre\",\n    \"cumplir\",\n    \"cuna\",\n    \"cuneta\",\n    \"cuota\",\n    \"cupón\",\n    \"cúpula\",\n    \"curar\",\n    \"curioso\",\n    \"curso\",\n    \"curva\",\n    \"cutis\",\n    \"dama\",\n    \"danza\",\n    \"dar\",\n    \"dardo\",\n    \"dátil\",\n    \"deber\",\n    \"débil\",\n    \"década\",\n    \"decir\",\n    \"dedo\",\n    \"defensa\",\n    \"definir\",\n    \"dejar\",\n    \"delfín\",\n    \"delgado\",\n    \"delito\",\n    \"demora\",\n    \"denso\",\n    \"dental\",\n    \"deporte\",\n    \"derecho\",\n    \"derrota\",\n    \"desayuno\",\n    \"deseo\",\n    \"desfile\",\n    \"desnudo\",\n    \"destino\",\n    \"desvío\",\n    \"detalle\",\n    \"detener\",\n    \"deuda\",\n    \"día\",\n    \"diablo\",\n    \"diadema\",\n    \"diamante\",\n    \"diana\",\n    \"diario\",\n    \"dibujo\",\n    \"dictar\",\n    \"diente\",\n    \"dieta\",\n    \"diez\",\n    \"difícil\",\n    \"digno\",\n    \"dilema\",\n    \"diluir\",\n    \"dinero\",\n    \"directo\",\n    \"dirigir\",\n    \"disco\",\n    \"diseño\",\n    \"disfraz\",\n    \"diva\",\n    \"divino\",\n    \"doble\",\n    \"doce\",\n    \"dolor\",\n    \"domingo\",\n    \"don\",\n    \"donar\",\n    \"dorado\",\n    \"dormir\",\n    \"dorso\",\n    \"dos\",\n    \"dosis\",\n    \"dragón\",\n    \"droga\",\n    \"ducha\",\n    \"duda\",\n    \"duelo\",\n    \"dueño\",\n    \"dulce\",\n    \"dúo\",\n    \"duque\",\n    \"durar\",\n    \"dureza\",\n    \"duro\",\n    \"ébano\",\n    \"ebrio\",\n    \"echar\",\n    \"eco\",\n    \"ecuador\",\n    \"edad\",\n    \"edición\",\n    \"edificio\",\n    \"editor\",\n    \"educar\",\n    \"efecto\",\n    \"eficaz\",\n    \"eje\",\n    \"ejemplo\",\n    \"elefante\",\n    \"elegir\",\n    \"elemento\",\n    \"elevar\",\n    \"elipse\",\n    \"élite\",\n    \"elixir\",\n    \"elogio\",\n    \"eludir\",\n    \"embudo\",\n    \"emitir\",\n    \"emoción\",\n    \"empate\",\n    \"empeño\",\n    \"empleo\",\n    \"empresa\",\n    \"enano\",\n    \"encargo\",\n    \"enchufe\",\n    \"encía\",\n    \"enemigo\",\n    \"enero\",\n    \"enfado\",\n    \"enfermo\",\n    \"engaño\",\n    \"enigma\",\n    \"enlace\",\n    \"enorme\",\n    \"enredo\",\n    \"ensayo\",\n    \"enseñar\",\n    \"entero\",\n    \"entrar\",\n    \"envase\",\n    \"envío\",\n    \"época\",\n    \"equipo\",\n    \"erizo\",\n    \"escala\",\n    \"escena\",\n    \"escolar\",\n    \"escribir\",\n    \"escudo\",\n    \"esencia\",\n    \"esfera\",\n    \"esfuerzo\",\n    \"espada\",\n    \"espejo\",\n    \"espía\",\n    \"esposa\",\n    \"espuma\",\n    \"esquí\",\n    \"estar\",\n    \"este\",\n    \"estilo\",\n    \"estufa\",\n    \"etapa\",\n    \"eterno\",\n    \"ética\",\n    \"etnia\",\n    \"evadir\",\n    \"evaluar\",\n    \"evento\",\n    \"evitar\",\n    \"exacto\",\n    \"examen\",\n    \"exceso\",\n    \"excusa\",\n    \"exento\",\n    \"exigir\",\n    \"exilio\",\n    \"existir\",\n    \"éxito\",\n    \"experto\",\n    \"explicar\",\n    \"exponer\",\n    \"extremo\",\n    \"fábrica\",\n    \"fábula\",\n    \"fachada\",\n    \"fácil\",\n    \"factor\",\n    \"faena\",\n    \"faja\",\n    \"falda\",\n    \"fallo\",\n    \"falso\",\n    \"faltar\",\n    \"fama\",\n    \"familia\",\n    \"famoso\",\n    \"faraón\",\n    \"farmacia\",\n    \"farol\",\n    \"farsa\",\n    \"fase\",\n    \"fatiga\",\n    \"fauna\",\n    \"favor\",\n    \"fax\",\n    \"febrero\",\n    \"fecha\",\n    \"feliz\",\n    \"feo\",\n    \"feria\",\n    \"feroz\",\n    \"fértil\",\n    \"fervor\",\n    \"festín\",\n    \"fiable\",\n    \"fianza\",\n    \"fiar\",\n    \"fibra\",\n    \"ficción\",\n    \"ficha\",\n    \"fideo\",\n    \"fiebre\",\n    \"fiel\",\n    \"fiera\",\n    \"fiesta\",\n    \"figura\",\n    \"fijar\",\n    \"fijo\",\n    \"fila\",\n    \"filete\",\n    \"filial\",\n    \"filtro\",\n    \"fin\",\n    \"finca\",\n    \"fingir\",\n    \"finito\",\n    \"firma\",\n    \"flaco\",\n    \"flauta\",\n    \"flecha\",\n    \"flor\",\n    \"flota\",\n    \"fluir\",\n    \"flujo\",\n    \"flúor\",\n    \"fobia\",\n    \"foca\",\n    \"fogata\",\n    \"fogón\",\n    \"folio\",\n    \"folleto\",\n    \"fondo\",\n    \"forma\",\n    \"forro\",\n    \"fortuna\",\n    \"forzar\",\n    \"fosa\",\n    \"foto\",\n    \"fracaso\",\n    \"frágil\",\n    \"franja\",\n    \"frase\",\n    \"fraude\",\n    \"freír\",\n    \"freno\",\n    \"fresa\",\n    \"frío\",\n    \"frito\",\n    \"fruta\",\n    \"fuego\",\n    \"fuente\",\n    \"fuerza\",\n    \"fuga\",\n    \"fumar\",\n    \"función\",\n    \"funda\",\n    \"furgón\",\n    \"furia\",\n    \"fusil\",\n    \"fútbol\",\n    \"futuro\",\n    \"gacela\",\n    \"gafas\",\n    \"gaita\",\n    \"gajo\",\n    \"gala\",\n    \"galería\",\n    \"gallo\",\n    \"gamba\",\n    \"ganar\",\n    \"gancho\",\n    \"ganga\",\n    \"ganso\",\n    \"garaje\",\n    \"garza\",\n    \"gasolina\",\n    \"gastar\",\n    \"gato\",\n    \"gavilán\",\n    \"gemelo\",\n    \"gemir\",\n    \"gen\",\n    \"género\",\n    \"genio\",\n    \"gente\",\n    \"geranio\",\n    \"gerente\",\n    \"germen\",\n    \"gesto\",\n    \"gigante\",\n    \"gimnasio\",\n    \"girar\",\n    \"giro\",\n    \"glaciar\",\n    \"globo\",\n    \"gloria\",\n    \"gol\",\n    \"golfo\",\n    \"goloso\",\n    \"golpe\",\n    \"goma\",\n    \"gordo\",\n    \"gorila\",\n    \"gorra\",\n    \"gota\",\n    \"goteo\",\n    \"gozar\",\n    \"grada\",\n    \"gráfico\",\n    \"grano\",\n    \"grasa\",\n    \"gratis\",\n    \"grave\",\n    \"grieta\",\n    \"grillo\",\n    \"gripe\",\n    \"gris\",\n    \"grito\",\n    \"grosor\",\n    \"grúa\",\n    \"grueso\",\n    \"grumo\",\n    \"grupo\",\n    \"guante\",\n    \"guapo\",\n    \"guardia\",\n    \"guerra\",\n    \"guía\",\n    \"guiño\",\n    \"guion\",\n    \"guiso\",\n    \"guitarra\",\n    \"gusano\",\n    \"gustar\",\n    \"haber\",\n    \"hábil\",\n    \"hablar\",\n    \"hacer\",\n    \"hacha\",\n    \"hada\",\n    \"hallar\",\n    \"hamaca\",\n    \"harina\",\n    \"haz\",\n    \"hazaña\",\n    \"hebilla\",\n    \"hebra\",\n    \"hecho\",\n    \"helado\",\n    \"helio\",\n    \"hembra\",\n    \"herir\",\n    \"hermano\",\n    \"héroe\",\n    \"hervir\",\n    \"hielo\",\n    \"hierro\",\n    \"hígado\",\n    \"higiene\",\n    \"hijo\",\n    \"himno\",\n    \"historia\",\n    \"hocico\",\n    \"hogar\",\n    \"hoguera\",\n    \"hoja\",\n    \"hombre\",\n    \"hongo\",\n    \"honor\",\n    \"honra\",\n    \"hora\",\n    \"hormiga\",\n    \"horno\",\n    \"hostil\",\n    \"hoyo\",\n    \"hueco\",\n    \"huelga\",\n    \"huerta\",\n    \"hueso\",\n    \"huevo\",\n    \"huida\",\n    \"huir\",\n    \"humano\",\n    \"húmedo\",\n    \"humilde\",\n    \"humo\",\n    \"hundir\",\n    \"huracán\",\n    \"hurto\",\n    \"icono\",\n    \"ideal\",\n    \"idioma\",\n    \"ídolo\",\n    \"iglesia\",\n    \"iglú\",\n    \"igual\",\n    \"ilegal\",\n    \"ilusión\",\n    \"imagen\",\n    \"imán\",\n    \"imitar\",\n    \"impar\",\n    \"imperio\",\n    \"imponer\",\n    \"impulso\",\n    \"incapaz\",\n    \"índice\",\n    \"inerte\",\n    \"infiel\",\n    \"informe\",\n    \"ingenio\",\n    \"inicio\",\n    \"inmenso\",\n    \"inmune\",\n    \"innato\",\n    \"insecto\",\n    \"instante\",\n    \"interés\",\n    \"íntimo\",\n    \"intuir\",\n    \"inútil\",\n    \"invierno\",\n    \"ira\",\n    \"iris\",\n    \"ironía\",\n    \"isla\",\n    \"islote\",\n    \"jabalí\",\n    \"jabón\",\n    \"jamón\",\n    \"jarabe\",\n    \"jardín\",\n    \"jarra\",\n    \"jaula\",\n    \"jazmín\",\n    \"jefe\",\n    \"jeringa\",\n    \"jinete\",\n    \"jornada\",\n    \"joroba\",\n    \"joven\",\n    \"joya\",\n    \"juerga\",\n    \"jueves\",\n    \"juez\",\n    \"jugador\",\n    \"jugo\",\n    \"juguete\",\n    \"juicio\",\n    \"junco\",\n    \"jungla\",\n    \"junio\",\n    \"juntar\",\n    \"júpiter\",\n    \"jurar\",\n    \"justo\",\n    \"juvenil\",\n    \"juzgar\",\n    \"kilo\",\n    \"koala\",\n    \"labio\",\n    \"lacio\",\n    \"lacra\",\n    \"lado\",\n    \"ladrón\",\n    \"lagarto\",\n    \"lágrima\",\n    \"laguna\",\n    \"laico\",\n    \"lamer\",\n    \"lámina\",\n    \"lámpara\",\n    \"lana\",\n    \"lancha\",\n    \"langosta\",\n    \"lanza\",\n    \"lápiz\",\n    \"largo\",\n    \"larva\",\n    \"lástima\",\n    \"lata\",\n    \"látex\",\n    \"latir\",\n    \"laurel\",\n    \"lavar\",\n    \"lazo\",\n    \"leal\",\n    \"lección\",\n    \"leche\",\n    \"lector\",\n    \"leer\",\n    \"legión\",\n    \"legumbre\",\n    \"lejano\",\n    \"lengua\",\n    \"lento\",\n    \"leña\",\n    \"león\",\n    \"leopardo\",\n    \"lesión\",\n    \"letal\",\n    \"letra\",\n    \"leve\",\n    \"leyenda\",\n    \"libertad\",\n    \"libro\",\n    \"licor\",\n    \"líder\",\n    \"lidiar\",\n    \"lienzo\",\n    \"liga\",\n    \"ligero\",\n    \"lima\",\n    \"límite\",\n    \"limón\",\n    \"limpio\",\n    \"lince\",\n    \"lindo\",\n    \"línea\",\n    \"lingote\",\n    \"lino\",\n    \"linterna\",\n    \"líquido\",\n    \"liso\",\n    \"lista\",\n    \"litera\",\n    \"litio\",\n    \"litro\",\n    \"llaga\",\n    \"llama\",\n    \"llanto\",\n    \"llave\",\n    \"llegar\",\n    \"llenar\",\n    \"llevar\",\n    \"llorar\",\n    \"llover\",\n    \"lluvia\",\n    \"lobo\",\n    \"loción\",\n    \"loco\",\n    \"locura\",\n    \"lógica\",\n    \"logro\",\n    \"lombriz\",\n    \"lomo\",\n    \"lonja\",\n    \"lote\",\n    \"lucha\",\n    \"lucir\",\n    \"lugar\",\n    \"lujo\",\n    \"luna\",\n    \"lunes\",\n    \"lupa\",\n    \"lustro\",\n    \"luto\",\n    \"luz\",\n    \"maceta\",\n    \"macho\",\n    \"madera\",\n    \"madre\",\n    \"maduro\",\n    \"maestro\",\n    \"mafia\",\n    \"magia\",\n    \"mago\",\n    \"maíz\",\n    \"maldad\",\n    \"maleta\",\n    \"malla\",\n    \"malo\",\n    \"mamá\",\n    \"mambo\",\n    \"mamut\",\n    \"manco\",\n    \"mando\",\n    \"manejar\",\n    \"manga\",\n    \"maniquí\",\n    \"manjar\",\n    \"mano\",\n    \"manso\",\n    \"manta\",\n    \"mañana\",\n    \"mapa\",\n    \"máquina\",\n    \"mar\",\n    \"marco\",\n    \"marea\",\n    \"marfil\",\n    \"margen\",\n    \"marido\",\n    \"mármol\",\n    \"marrón\",\n    \"martes\",\n    \"marzo\",\n    \"masa\",\n    \"máscara\",\n    \"masivo\",\n    \"matar\",\n    \"materia\",\n    \"matiz\",\n    \"matriz\",\n    \"máximo\",\n    \"mayor\",\n    \"mazorca\",\n    \"mecha\",\n    \"medalla\",\n    \"medio\",\n    \"médula\",\n    \"mejilla\",\n    \"mejor\",\n    \"melena\",\n    \"melón\",\n    \"memoria\",\n    \"menor\",\n    \"mensaje\",\n    \"mente\",\n    \"menú\",\n    \"mercado\",\n    \"merengue\",\n    \"mérito\",\n    \"mes\",\n    \"mesón\",\n    \"meta\",\n    \"meter\",\n    \"método\",\n    \"metro\",\n    \"mezcla\",\n    \"miedo\",\n    \"miel\",\n    \"miembro\",\n    \"miga\",\n    \"mil\",\n    \"milagro\",\n    \"militar\",\n    \"millón\",\n    \"mimo\",\n    \"mina\",\n    \"minero\",\n    \"mínimo\",\n    \"minuto\",\n    \"miope\",\n    \"mirar\",\n    \"misa\",\n    \"miseria\",\n    \"misil\",\n    \"mismo\",\n    \"mitad\",\n    \"mito\",\n    \"mochila\",\n    \"moción\",\n    \"moda\",\n    \"modelo\",\n    \"moho\",\n    \"mojar\",\n    \"molde\",\n    \"moler\",\n    \"molino\",\n    \"momento\",\n    \"momia\",\n    \"monarca\",\n    \"moneda\",\n    \"monja\",\n    \"monto\",\n    \"moño\",\n    \"morada\",\n    \"morder\",\n    \"moreno\",\n    \"morir\",\n    \"morro\",\n    \"morsa\",\n    \"mortal\",\n    \"mosca\",\n    \"mostrar\",\n    \"motivo\",\n    \"mover\",\n    \"móvil\",\n    \"mozo\",\n    \"mucho\",\n    \"mudar\",\n    \"mueble\",\n    \"muela\",\n    \"muerte\",\n    \"muestra\",\n    \"mugre\",\n    \"mujer\",\n    \"mula\",\n    \"muleta\",\n    \"multa\",\n    \"mundo\",\n    \"muñeca\",\n    \"mural\",\n    \"muro\",\n    \"músculo\",\n    \"museo\",\n    \"musgo\",\n    \"música\",\n    \"muslo\",\n    \"nácar\",\n    \"nación\",\n    \"nadar\",\n    \"naipe\",\n    \"naranja\",\n    \"nariz\",\n    \"narrar\",\n    \"nasal\",\n    \"natal\",\n    \"nativo\",\n    \"natural\",\n    \"náusea\",\n    \"naval\",\n    \"nave\",\n    \"navidad\",\n    \"necio\",\n    \"néctar\",\n    \"negar\",\n    \"negocio\",\n    \"negro\",\n    \"neón\",\n    \"nervio\",\n    \"neto\",\n    \"neutro\",\n    \"nevar\",\n    \"nevera\",\n    \"nicho\",\n    \"nido\",\n    \"niebla\",\n    \"nieto\",\n    \"niñez\",\n    \"niño\",\n    \"nítido\",\n    \"nivel\",\n    \"nobleza\",\n    \"noche\",\n    \"nómina\",\n    \"noria\",\n    \"norma\",\n    \"norte\",\n    \"nota\",\n    \"noticia\",\n    \"novato\",\n    \"novela\",\n    \"novio\",\n    \"nube\",\n    \"nuca\",\n    \"núcleo\",\n    \"nudillo\",\n    \"nudo\",\n    \"nuera\",\n    \"nueve\",\n    \"nuez\",\n    \"nulo\",\n    \"número\",\n    \"nutria\",\n    \"oasis\",\n    \"obeso\",\n    \"obispo\",\n    \"objeto\",\n    \"obra\",\n    \"obrero\",\n    \"observar\",\n    \"obtener\",\n    \"obvio\",\n    \"oca\",\n    \"ocaso\",\n    \"océano\",\n    \"ochenta\",\n    \"ocho\",\n    \"ocio\",\n    \"ocre\",\n    \"octavo\",\n    \"octubre\",\n    \"oculto\",\n    \"ocupar\",\n    \"ocurrir\",\n    \"odiar\",\n    \"odio\",\n    \"odisea\",\n    \"oeste\",\n    \"ofensa\",\n    \"oferta\",\n    \"oficio\",\n    \"ofrecer\",\n    \"ogro\",\n    \"oído\",\n    \"oír\",\n    \"ojo\",\n    \"ola\",\n    \"oleada\",\n    \"olfato\",\n    \"olivo\",\n    \"olla\",\n    \"olmo\",\n    \"olor\",\n    \"olvido\",\n    \"ombligo\",\n    \"onda\",\n    \"onza\",\n    \"opaco\",\n    \"opción\",\n    \"ópera\",\n    \"opinar\",\n    \"oponer\",\n    \"optar\",\n    \"óptica\",\n    \"opuesto\",\n    \"oración\",\n    \"orador\",\n    \"oral\",\n    \"órbita\",\n    \"orca\",\n    \"orden\",\n    \"oreja\",\n    \"órgano\",\n    \"orgía\",\n    \"orgullo\",\n    \"oriente\",\n    \"origen\",\n    \"orilla\",\n    \"oro\",\n    \"orquesta\",\n    \"oruga\",\n    \"osadía\",\n    \"oscuro\",\n    \"osezno\",\n    \"oso\",\n    \"ostra\",\n    \"otoño\",\n    \"otro\",\n    \"oveja\",\n    \"óvulo\",\n    \"óxido\",\n    \"oxígeno\",\n    \"oyente\",\n    \"ozono\",\n    \"pacto\",\n    \"padre\",\n    \"paella\",\n    \"página\",\n    \"pago\",\n    \"país\",\n    \"pájaro\",\n    \"palabra\",\n    \"palco\",\n    \"paleta\",\n    \"pálido\",\n    \"palma\",\n    \"paloma\",\n    \"palpar\",\n    \"pan\",\n    \"panal\",\n    \"pánico\",\n    \"pantera\",\n    \"pañuelo\",\n    \"papá\",\n    \"papel\",\n    \"papilla\",\n    \"paquete\",\n    \"parar\",\n    \"parcela\",\n    \"pared\",\n    \"parir\",\n    \"paro\",\n    \"párpado\",\n    \"parque\",\n    \"párrafo\",\n    \"parte\",\n    \"pasar\",\n    \"paseo\",\n    \"pasión\",\n    \"paso\",\n    \"pasta\",\n    \"pata\",\n    \"patio\",\n    \"patria\",\n    \"pausa\",\n    \"pauta\",\n    \"pavo\",\n    \"payaso\",\n    \"peatón\",\n    \"pecado\",\n    \"pecera\",\n    \"pecho\",\n    \"pedal\",\n    \"pedir\",\n    \"pegar\",\n    \"peine\",\n    \"pelar\",\n    \"peldaño\",\n    \"pelea\",\n    \"peligro\",\n    \"pellejo\",\n    \"pelo\",\n    \"peluca\",\n    \"pena\",\n    \"pensar\",\n    \"peñón\",\n    \"peón\",\n    \"peor\",\n    \"pepino\",\n    \"pequeño\",\n    \"pera\",\n    \"percha\",\n    \"perder\",\n    \"pereza\",\n    \"perfil\",\n    \"perico\",\n    \"perla\",\n    \"permiso\",\n    \"perro\",\n    \"persona\",\n    \"pesa\",\n    \"pesca\",\n    \"pésimo\",\n    \"pestaña\",\n    \"pétalo\",\n    \"petróleo\",\n    \"pez\",\n    \"pezuña\",\n    \"picar\",\n    \"pichón\",\n    \"pie\",\n    \"piedra\",\n    \"pierna\",\n    \"pieza\",\n    \"pijama\",\n    \"pilar\",\n    \"piloto\",\n    \"pimienta\",\n    \"pino\",\n    \"pintor\",\n    \"pinza\",\n    \"piña\",\n    \"piojo\",\n    \"pipa\",\n    \"pirata\",\n    \"pisar\",\n    \"piscina\",\n    \"piso\",\n    \"pista\",\n    \"pitón\",\n    \"pizca\",\n    \"placa\",\n    \"plan\",\n    \"plata\",\n    \"playa\",\n    \"plaza\",\n    \"pleito\",\n    \"pleno\",\n    \"plomo\",\n    \"pluma\",\n    \"plural\",\n    \"pobre\",\n    \"poco\",\n    \"poder\",\n    \"podio\",\n    \"poema\",\n    \"poesía\",\n    \"poeta\",\n    \"polen\",\n    \"policía\",\n    \"pollo\",\n    \"polvo\",\n    \"pomada\",\n    \"pomelo\",\n    \"pomo\",\n    \"pompa\",\n    \"poner\",\n    \"porción\",\n    \"portal\",\n    \"posada\",\n    \"poseer\",\n    \"posible\",\n    \"poste\",\n    \"potencia\",\n    \"potro\",\n    \"pozo\",\n    \"prado\",\n    \"precoz\",\n    \"pregunta\",\n    \"premio\",\n    \"prensa\",\n    \"preso\",\n    \"previo\",\n    \"primo\",\n    \"príncipe\",\n    \"prisión\",\n    \"privar\",\n    \"proa\",\n    \"probar\",\n    \"proceso\",\n    \"producto\",\n    \"proeza\",\n    \"profesor\",\n    \"programa\",\n    \"prole\",\n    \"promesa\",\n    \"pronto\",\n    \"propio\",\n    \"próximo\",\n    \"prueba\",\n    \"público\",\n    \"puchero\",\n    \"pudor\",\n    \"pueblo\",\n    \"puerta\",\n    \"puesto\",\n    \"pulga\",\n    \"pulir\",\n    \"pulmón\",\n    \"pulpo\",\n    \"pulso\",\n    \"puma\",\n    \"punto\",\n    \"puñal\",\n    \"puño\",\n    \"pupa\",\n    \"pupila\",\n    \"puré\",\n    \"quedar\",\n    \"queja\",\n    \"quemar\",\n    \"querer\",\n    \"queso\",\n    \"quieto\",\n    \"química\",\n    \"quince\",\n    \"quitar\",\n    \"rábano\",\n    \"rabia\",\n    \"rabo\",\n    \"ración\",\n    \"radical\",\n    \"raíz\",\n    \"rama\",\n    \"rampa\",\n    \"rancho\",\n    \"rango\",\n    \"rapaz\",\n    \"rápido\",\n    \"rapto\",\n    \"rasgo\",\n    \"raspa\",\n    \"rato\",\n    \"rayo\",\n    \"raza\",\n    \"razón\",\n    \"reacción\",\n    \"realidad\",\n    \"rebaño\",\n    \"rebote\",\n    \"recaer\",\n    \"receta\",\n    \"rechazo\",\n    \"recoger\",\n    \"recreo\",\n    \"recto\",\n    \"recurso\",\n    \"red\",\n    \"redondo\",\n    \"reducir\",\n    \"reflejo\",\n    \"reforma\",\n    \"refrán\",\n    \"refugio\",\n    \"regalo\",\n    \"regir\",\n    \"regla\",\n    \"regreso\",\n    \"rehén\",\n    \"reino\",\n    \"reír\",\n    \"reja\",\n    \"relato\",\n    \"relevo\",\n    \"relieve\",\n    \"relleno\",\n    \"reloj\",\n    \"remar\",\n    \"remedio\",\n    \"remo\",\n    \"rencor\",\n    \"rendir\",\n    \"renta\",\n    \"reparto\",\n    \"repetir\",\n    \"reposo\",\n    \"reptil\",\n    \"res\",\n    \"rescate\",\n    \"resina\",\n    \"respeto\",\n    \"resto\",\n    \"resumen\",\n    \"retiro\",\n    \"retorno\",\n    \"retrato\",\n    \"reunir\",\n    \"revés\",\n    \"revista\",\n    \"rey\",\n    \"rezar\",\n    \"rico\",\n    \"riego\",\n    \"rienda\",\n    \"riesgo\",\n    \"rifa\",\n    \"rígido\",\n    \"rigor\",\n    \"rincón\",\n    \"riñón\",\n    \"río\",\n    \"riqueza\",\n    \"risa\",\n    \"ritmo\",\n    \"rito\",\n    \"rizo\",\n    \"roble\",\n    \"roce\",\n    \"rociar\",\n    \"rodar\",\n    \"rodeo\",\n    \"rodilla\",\n    \"roer\",\n    \"rojizo\",\n    \"rojo\",\n    \"romero\",\n    \"romper\",\n    \"ron\",\n    \"ronco\",\n    \"ronda\",\n    \"ropa\",\n    \"ropero\",\n    \"rosa\",\n    \"rosca\",\n    \"rostro\",\n    \"rotar\",\n    \"rubí\",\n    \"rubor\",\n    \"rudo\",\n    \"rueda\",\n    \"rugir\",\n    \"ruido\",\n    \"ruina\",\n    \"ruleta\",\n    \"rulo\",\n    \"rumbo\",\n    \"rumor\",\n    \"ruptura\",\n    \"ruta\",\n    \"rutina\",\n    \"sábado\",\n    \"saber\",\n    \"sabio\",\n    \"sable\",\n    \"sacar\",\n    \"sagaz\",\n    \"sagrado\",\n    \"sala\",\n    \"saldo\",\n    \"salero\",\n    \"salir\",\n    \"salmón\",\n    \"salón\",\n    \"salsa\",\n    \"salto\",\n    \"salud\",\n    \"salvar\",\n    \"samba\",\n    \"sanción\",\n    \"sandía\",\n    \"sanear\",\n    \"sangre\",\n    \"sanidad\",\n    \"sano\",\n    \"santo\",\n    \"sapo\",\n    \"saque\",\n    \"sardina\",\n    \"sartén\",\n    \"sastre\",\n    \"satán\",\n    \"sauna\",\n    \"saxofón\",\n    \"sección\",\n    \"seco\",\n    \"secreto\",\n    \"secta\",\n    \"sed\",\n    \"seguir\",\n    \"seis\",\n    \"sello\",\n    \"selva\",\n    \"semana\",\n    \"semilla\",\n    \"senda\",\n    \"sensor\",\n    \"señal\",\n    \"señor\",\n    \"separar\",\n    \"sepia\",\n    \"sequía\",\n    \"ser\",\n    \"serie\",\n    \"sermón\",\n    \"servir\",\n    \"sesenta\",\n    \"sesión\",\n    \"seta\",\n    \"setenta\",\n    \"severo\",\n    \"sexo\",\n    \"sexto\",\n    \"sidra\",\n    \"siesta\",\n    \"siete\",\n    \"siglo\",\n    \"signo\",\n    \"sílaba\",\n    \"silbar\",\n    \"silencio\",\n    \"silla\",\n    \"símbolo\",\n    \"simio\",\n    \"sirena\",\n    \"sistema\",\n    \"sitio\",\n    \"situar\",\n    \"sobre\",\n    \"socio\",\n    \"sodio\",\n    \"sol\",\n    \"solapa\",\n    \"soldado\",\n    \"soledad\",\n    \"sólido\",\n    \"soltar\",\n    \"solución\",\n    \"sombra\",\n    \"sondeo\",\n    \"sonido\",\n    \"sonoro\",\n    \"sonrisa\",\n    \"sopa\",\n    \"soplar\",\n    \"soporte\",\n    \"sordo\",\n    \"sorpresa\",\n    \"sorteo\",\n    \"sostén\",\n    \"sótano\",\n    \"suave\",\n    \"subir\",\n    \"suceso\",\n    \"sudor\",\n    \"suegra\",\n    \"suelo\",\n    \"sueño\",\n    \"suerte\",\n    \"sufrir\",\n    \"sujeto\",\n    \"sultán\",\n    \"sumar\",\n    \"superar\",\n    \"suplir\",\n    \"suponer\",\n    \"supremo\",\n    \"sur\",\n    \"surco\",\n    \"sureño\",\n    \"surgir\",\n    \"susto\",\n    \"sutil\",\n    \"tabaco\",\n    \"tabique\",\n    \"tabla\",\n    \"tabú\",\n    \"taco\",\n    \"tacto\",\n    \"tajo\",\n    \"talar\",\n    \"talco\",\n    \"talento\",\n    \"talla\",\n    \"talón\",\n    \"tamaño\",\n    \"tambor\",\n    \"tango\",\n    \"tanque\",\n    \"tapa\",\n    \"tapete\",\n    \"tapia\",\n    \"tapón\",\n    \"taquilla\",\n    \"tarde\",\n    \"tarea\",\n    \"tarifa\",\n    \"tarjeta\",\n    \"tarot\",\n    \"tarro\",\n    \"tarta\",\n    \"tatuaje\",\n    \"tauro\",\n    \"taza\",\n    \"tazón\",\n    \"teatro\",\n    \"techo\",\n    \"tecla\",\n    \"técnica\",\n    \"tejado\",\n    \"tejer\",\n    \"tejido\",\n    \"tela\",\n    \"teléfono\",\n    \"tema\",\n    \"temor\",\n    \"templo\",\n    \"tenaz\",\n    \"tender\",\n    \"tener\",\n    \"tenis\",\n    \"tenso\",\n    \"teoría\",\n    \"terapia\",\n    \"terco\",\n    \"término\",\n    \"ternura\",\n    \"terror\",\n    \"tesis\",\n    \"tesoro\",\n    \"testigo\",\n    \"tetera\",\n    \"texto\",\n    \"tez\",\n    \"tibio\",\n    \"tiburón\",\n    \"tiempo\",\n    \"tienda\",\n    \"tierra\",\n    \"tieso\",\n    \"tigre\",\n    \"tijera\",\n    \"tilde\",\n    \"timbre\",\n    \"tímido\",\n    \"timo\",\n    \"tinta\",\n    \"tío\",\n    \"típico\",\n    \"tipo\",\n    \"tira\",\n    \"tirón\",\n    \"titán\",\n    \"títere\",\n    \"título\",\n    \"tiza\",\n    \"toalla\",\n    \"tobillo\",\n    \"tocar\",\n    \"tocino\",\n    \"todo\",\n    \"toga\",\n    \"toldo\",\n    \"tomar\",\n    \"tono\",\n    \"tonto\",\n    \"topar\",\n    \"tope\",\n    \"toque\",\n    \"tórax\",\n    \"torero\",\n    \"tormenta\",\n    \"torneo\",\n    \"toro\",\n    \"torpedo\",\n    \"torre\",\n    \"torso\",\n    \"tortuga\",\n    \"tos\",\n    \"tosco\",\n    \"toser\",\n    \"tóxico\",\n    \"trabajo\",\n    \"tractor\",\n    \"traer\",\n    \"tráfico\",\n    \"trago\",\n    \"traje\",\n    \"tramo\",\n    \"trance\",\n    \"trato\",\n    \"trauma\",\n    \"trazar\",\n    \"trébol\",\n    \"tregua\",\n    \"treinta\",\n    \"tren\",\n    \"trepar\",\n    \"tres\",\n    \"tribu\",\n    \"trigo\",\n    \"tripa\",\n    \"triste\",\n    \"triunfo\",\n    \"trofeo\",\n    \"trompa\",\n    \"tronco\",\n    \"tropa\",\n    \"trote\",\n    \"trozo\",\n    \"truco\",\n    \"trueno\",\n    \"trufa\",\n    \"tubería\",\n    \"tubo\",\n    \"tuerto\",\n    \"tumba\",\n    \"tumor\",\n    \"túnel\",\n    \"túnica\",\n    \"turbina\",\n    \"turismo\",\n    \"turno\",\n    \"tutor\",\n    \"ubicar\",\n    \"úlcera\",\n    \"umbral\",\n    \"unidad\",\n    \"unir\",\n    \"universo\",\n    \"uno\",\n    \"untar\",\n    \"uña\",\n    \"urbano\",\n    \"urbe\",\n    \"urgente\",\n    \"urna\",\n    \"usar\",\n    \"usuario\",\n    \"útil\",\n    \"utopía\",\n    \"uva\",\n    \"vaca\",\n    \"vacío\",\n    \"vacuna\",\n    \"vagar\",\n    \"vago\",\n    \"vaina\",\n    \"vajilla\",\n    \"vale\",\n    \"válido\",\n    \"valle\",\n    \"valor\",\n    \"válvula\",\n    \"vampiro\",\n    \"vara\",\n    \"variar\",\n    \"varón\",\n    \"vaso\",\n    \"vecino\",\n    \"vector\",\n    \"vehículo\",\n    \"veinte\",\n    \"vejez\",\n    \"vela\",\n    \"velero\",\n    \"veloz\",\n    \"vena\",\n    \"vencer\",\n    \"venda\",\n    \"veneno\",\n    \"vengar\",\n    \"venir\",\n    \"venta\",\n    \"venus\",\n    \"ver\",\n    \"verano\",\n    \"verbo\",\n    \"verde\",\n    \"vereda\",\n    \"verja\",\n    \"verso\",\n    \"verter\",\n    \"vía\",\n    \"viaje\",\n    \"vibrar\",\n    \"vicio\",\n    \"víctima\",\n    \"vida\",\n    \"vídeo\",\n    \"vidrio\",\n    \"viejo\",\n    \"viernes\",\n    \"vigor\",\n    \"vil\",\n    \"villa\",\n    \"vinagre\",\n    \"vino\",\n    \"viñedo\",\n    \"violín\",\n    \"viral\",\n    \"virgo\",\n    \"virtud\",\n    \"visor\",\n    \"víspera\",\n    \"vista\",\n    \"vitamina\",\n    \"viudo\",\n    \"vivaz\",\n    \"vivero\",\n    \"vivir\",\n    \"vivo\",\n    \"volcán\",\n    \"volumen\",\n    \"volver\",\n    \"voraz\",\n    \"votar\",\n    \"voto\",\n    \"voz\",\n    \"vuelo\",\n    \"vulgar\",\n    \"yacer\",\n    \"yate\",\n    \"yegua\",\n    \"yema\",\n    \"yerno\",\n    \"yeso\",\n    \"yodo\",\n    \"yoga\",\n    \"yogur\",\n    \"zafiro\",\n    \"zanja\",\n    \"zapato\",\n    \"zarza\",\n    \"zona\",\n    \"zorro\",\n    \"zumo\",\n    \"zurdo\"\n]\n","module.exports=[\n    \"あいこくしん\",\n    \"あいさつ\",\n    \"あいだ\",\n    \"あおぞら\",\n    \"あかちゃん\",\n    \"あきる\",\n    \"あけがた\",\n    \"あける\",\n    \"あこがれる\",\n    \"あさい\",\n    \"あさひ\",\n    \"あしあと\",\n    \"あじわう\",\n    \"あずかる\",\n    \"あずき\",\n    \"あそぶ\",\n    \"あたえる\",\n    \"あたためる\",\n    \"あたりまえ\",\n    \"あたる\",\n    \"あつい\",\n    \"あつかう\",\n    \"あっしゅく\",\n    \"あつまり\",\n    \"あつめる\",\n    \"あてな\",\n    \"あてはまる\",\n    \"あひる\",\n    \"あぶら\",\n    \"あぶる\",\n    \"あふれる\",\n    \"あまい\",\n    \"あまど\",\n    \"あまやかす\",\n    \"あまり\",\n    \"あみもの\",\n    \"あめりか\",\n    \"あやまる\",\n    \"あゆむ\",\n    \"あらいぐま\",\n    \"あらし\",\n    \"あらすじ\",\n    \"あらためる\",\n    \"あらゆる\",\n    \"あらわす\",\n    \"ありがとう\",\n    \"あわせる\",\n    \"あわてる\",\n    \"あんい\",\n    \"あんがい\",\n    \"あんこ\",\n    \"あんぜん\",\n    \"あんてい\",\n    \"あんない\",\n    \"あんまり\",\n    \"いいだす\",\n    \"いおん\",\n    \"いがい\",\n    \"いがく\",\n    \"いきおい\",\n    \"いきなり\",\n    \"いきもの\",\n    \"いきる\",\n    \"いくじ\",\n    \"いくぶん\",\n    \"いけばな\",\n    \"いけん\",\n    \"いこう\",\n    \"いこく\",\n    \"いこつ\",\n    \"いさましい\",\n    \"いさん\",\n    \"いしき\",\n    \"いじゅう\",\n    \"いじょう\",\n    \"いじわる\",\n    \"いずみ\",\n    \"いずれ\",\n    \"いせい\",\n    \"いせえび\",\n    \"いせかい\",\n    \"いせき\",\n    \"いぜん\",\n    \"いそうろう\",\n    \"いそがしい\",\n    \"いだい\",\n    \"いだく\",\n    \"いたずら\",\n    \"いたみ\",\n    \"いたりあ\",\n    \"いちおう\",\n    \"いちじ\",\n    \"いちど\",\n    \"いちば\",\n    \"いちぶ\",\n    \"いちりゅう\",\n    \"いつか\",\n    \"いっしゅん\",\n    \"いっせい\",\n    \"いっそう\",\n    \"いったん\",\n    \"いっち\",\n    \"いってい\",\n    \"いっぽう\",\n    \"いてざ\",\n    \"いてん\",\n    \"いどう\",\n    \"いとこ\",\n    \"いない\",\n    \"いなか\",\n    \"いねむり\",\n    \"いのち\",\n    \"いのる\",\n    \"いはつ\",\n    \"いばる\",\n    \"いはん\",\n    \"いびき\",\n    \"いひん\",\n    \"いふく\",\n    \"いへん\",\n    \"いほう\",\n    \"いみん\",\n    \"いもうと\",\n    \"いもたれ\",\n    \"いもり\",\n    \"いやがる\",\n    \"いやす\",\n    \"いよかん\",\n    \"いよく\",\n    \"いらい\",\n    \"いらすと\",\n    \"いりぐち\",\n    \"いりょう\",\n    \"いれい\",\n    \"いれもの\",\n    \"いれる\",\n    \"いろえんぴつ\",\n    \"いわい\",\n    \"いわう\",\n    \"いわかん\",\n    \"いわば\",\n    \"いわゆる\",\n    \"いんげんまめ\",\n    \"いんさつ\",\n    \"いんしょう\",\n    \"いんよう\",\n    \"うえき\",\n    \"うえる\",\n    \"うおざ\",\n    \"うがい\",\n    \"うかぶ\",\n    \"うかべる\",\n    \"うきわ\",\n    \"うくらいな\",\n    \"うくれれ\",\n    \"うけたまわる\",\n    \"うけつけ\",\n    \"うけとる\",\n    \"うけもつ\",\n    \"うける\",\n    \"うごかす\",\n    \"うごく\",\n    \"うこん\",\n    \"うさぎ\",\n    \"うしなう\",\n    \"うしろがみ\",\n    \"うすい\",\n    \"うすぎ\",\n    \"うすぐらい\",\n    \"うすめる\",\n    \"うせつ\",\n    \"うちあわせ\",\n    \"うちがわ\",\n    \"うちき\",\n    \"うちゅう\",\n    \"うっかり\",\n    \"うつくしい\",\n    \"うったえる\",\n    \"うつる\",\n    \"うどん\",\n    \"うなぎ\",\n    \"うなじ\",\n    \"うなずく\",\n    \"うなる\",\n    \"うねる\",\n    \"うのう\",\n    \"うぶげ\",\n    \"うぶごえ\",\n    \"うまれる\",\n    \"うめる\",\n    \"うもう\",\n    \"うやまう\",\n    \"うよく\",\n    \"うらがえす\",\n    \"うらぐち\",\n    \"うらない\",\n    \"うりあげ\",\n    \"うりきれ\",\n    \"うるさい\",\n    \"うれしい\",\n    \"うれゆき\",\n    \"うれる\",\n    \"うろこ\",\n    \"うわき\",\n    \"うわさ\",\n    \"うんこう\",\n    \"うんちん\",\n    \"うんてん\",\n    \"うんどう\",\n    \"えいえん\",\n    \"えいが\",\n    \"えいきょう\",\n    \"えいご\",\n    \"えいせい\",\n    \"えいぶん\",\n    \"えいよう\",\n    \"えいわ\",\n    \"えおり\",\n    \"えがお\",\n    \"えがく\",\n    \"えきたい\",\n    \"えくせる\",\n    \"えしゃく\",\n    \"えすて\",\n    \"えつらん\",\n    \"えのぐ\",\n    \"えほうまき\",\n    \"えほん\",\n    \"えまき\",\n    \"えもじ\",\n    \"えもの\",\n    \"えらい\",\n    \"えらぶ\",\n    \"えりあ\",\n    \"えんえん\",\n    \"えんかい\",\n    \"えんぎ\",\n    \"えんげき\",\n    \"えんしゅう\",\n    \"えんぜつ\",\n    \"えんそく\",\n    \"えんちょう\",\n    \"えんとつ\",\n    \"おいかける\",\n    \"おいこす\",\n    \"おいしい\",\n    \"おいつく\",\n    \"おうえん\",\n    \"おうさま\",\n    \"おうじ\",\n    \"おうせつ\",\n    \"おうたい\",\n    \"おうふく\",\n    \"おうべい\",\n    \"おうよう\",\n    \"おえる\",\n    \"おおい\",\n    \"おおう\",\n    \"おおどおり\",\n    \"おおや\",\n    \"おおよそ\",\n    \"おかえり\",\n    \"おかず\",\n    \"おがむ\",\n    \"おかわり\",\n    \"おぎなう\",\n    \"おきる\",\n    \"おくさま\",\n    \"おくじょう\",\n    \"おくりがな\",\n    \"おくる\",\n    \"おくれる\",\n    \"おこす\",\n    \"おこなう\",\n    \"おこる\",\n    \"おさえる\",\n    \"おさない\",\n    \"おさめる\",\n    \"おしいれ\",\n    \"おしえる\",\n    \"おじぎ\",\n    \"おじさん\",\n    \"おしゃれ\",\n    \"おそらく\",\n    \"おそわる\",\n    \"おたがい\",\n    \"おたく\",\n    \"おだやか\",\n    \"おちつく\",\n    \"おっと\",\n    \"おつり\",\n    \"おでかけ\",\n    \"おとしもの\",\n    \"おとなしい\",\n    \"おどり\",\n    \"おどろかす\",\n    \"おばさん\",\n    \"おまいり\",\n    \"おめでとう\",\n    \"おもいで\",\n    \"おもう\",\n    \"おもたい\",\n    \"おもちゃ\",\n    \"おやつ\",\n    \"おやゆび\",\n    \"およぼす\",\n    \"おらんだ\",\n    \"おろす\",\n    \"おんがく\",\n    \"おんけい\",\n    \"おんしゃ\",\n    \"おんせん\",\n    \"おんだん\",\n    \"おんちゅう\",\n    \"おんどけい\",\n    \"かあつ\",\n    \"かいが\",\n    \"がいき\",\n    \"がいけん\",\n    \"がいこう\",\n    \"かいさつ\",\n    \"かいしゃ\",\n    \"かいすいよく\",\n    \"かいぜん\",\n    \"かいぞうど\",\n    \"かいつう\",\n    \"かいてん\",\n    \"かいとう\",\n    \"かいふく\",\n    \"がいへき\",\n    \"かいほう\",\n    \"かいよう\",\n    \"がいらい\",\n    \"かいわ\",\n    \"かえる\",\n    \"かおり\",\n    \"かかえる\",\n    \"かがく\",\n    \"かがし\",\n    \"かがみ\",\n    \"かくご\",\n    \"かくとく\",\n    \"かざる\",\n    \"がぞう\",\n    \"かたい\",\n    \"かたち\",\n    \"がちょう\",\n    \"がっきゅう\",\n    \"がっこう\",\n    \"がっさん\",\n    \"がっしょう\",\n    \"かなざわし\",\n    \"かのう\",\n    \"がはく\",\n    \"かぶか\",\n    \"かほう\",\n    \"かほご\",\n    \"かまう\",\n    \"かまぼこ\",\n    \"かめれおん\",\n    \"かゆい\",\n    \"かようび\",\n    \"からい\",\n    \"かるい\",\n    \"かろう\",\n    \"かわく\",\n    \"かわら\",\n    \"がんか\",\n    \"かんけい\",\n    \"かんこう\",\n    \"かんしゃ\",\n    \"かんそう\",\n    \"かんたん\",\n    \"かんち\",\n    \"がんばる\",\n    \"きあい\",\n    \"きあつ\",\n    \"きいろ\",\n    \"ぎいん\",\n    \"きうい\",\n    \"きうん\",\n    \"きえる\",\n    \"きおう\",\n    \"きおく\",\n    \"きおち\",\n    \"きおん\",\n    \"きかい\",\n    \"きかく\",\n    \"きかんしゃ\",\n    \"ききて\",\n    \"きくばり\",\n    \"きくらげ\",\n    \"きけんせい\",\n    \"きこう\",\n    \"きこえる\",\n    \"きこく\",\n    \"きさい\",\n    \"きさく\",\n    \"きさま\",\n    \"きさらぎ\",\n    \"ぎじかがく\",\n    \"ぎしき\",\n    \"ぎじたいけん\",\n    \"ぎじにってい\",\n    \"ぎじゅつしゃ\",\n    \"きすう\",\n    \"きせい\",\n    \"きせき\",\n    \"きせつ\",\n    \"きそう\",\n    \"きぞく\",\n    \"きぞん\",\n    \"きたえる\",\n    \"きちょう\",\n    \"きつえん\",\n    \"ぎっちり\",\n    \"きつつき\",\n    \"きつね\",\n    \"きてい\",\n    \"きどう\",\n    \"きどく\",\n    \"きない\",\n    \"きなが\",\n    \"きなこ\",\n    \"きぬごし\",\n    \"きねん\",\n    \"きのう\",\n    \"きのした\",\n    \"きはく\",\n    \"きびしい\",\n    \"きひん\",\n    \"きふく\",\n    \"きぶん\",\n    \"きぼう\",\n    \"きほん\",\n    \"きまる\",\n    \"きみつ\",\n    \"きむずかしい\",\n    \"きめる\",\n    \"きもだめし\",\n    \"きもち\",\n    \"きもの\",\n    \"きゃく\",\n    \"きやく\",\n    \"ぎゅうにく\",\n    \"きよう\",\n    \"きょうりゅう\",\n    \"きらい\",\n    \"きらく\",\n    \"きりん\",\n    \"きれい\",\n    \"きれつ\",\n    \"きろく\",\n    \"ぎろん\",\n    \"きわめる\",\n    \"ぎんいろ\",\n    \"きんかくじ\",\n    \"きんじょ\",\n    \"きんようび\",\n    \"ぐあい\",\n    \"くいず\",\n    \"くうかん\",\n    \"くうき\",\n    \"くうぐん\",\n    \"くうこう\",\n    \"ぐうせい\",\n    \"くうそう\",\n    \"ぐうたら\",\n    \"くうふく\",\n    \"くうぼ\",\n    \"くかん\",\n    \"くきょう\",\n    \"くげん\",\n    \"ぐこう\",\n    \"くさい\",\n    \"くさき\",\n    \"くさばな\",\n    \"くさる\",\n    \"くしゃみ\",\n    \"くしょう\",\n    \"くすのき\",\n    \"くすりゆび\",\n    \"くせげ\",\n    \"くせん\",\n    \"ぐたいてき\",\n    \"くださる\",\n    \"くたびれる\",\n    \"くちこみ\",\n    \"くちさき\",\n    \"くつした\",\n    \"ぐっすり\",\n    \"くつろぐ\",\n    \"くとうてん\",\n    \"くどく\",\n    \"くなん\",\n    \"くねくね\",\n    \"くのう\",\n    \"くふう\",\n    \"くみあわせ\",\n    \"くみたてる\",\n    \"くめる\",\n    \"くやくしょ\",\n    \"くらす\",\n    \"くらべる\",\n    \"くるま\",\n    \"くれる\",\n    \"くろう\",\n    \"くわしい\",\n    \"ぐんかん\",\n    \"ぐんしょく\",\n    \"ぐんたい\",\n    \"ぐんて\",\n    \"けあな\",\n    \"けいかく\",\n    \"けいけん\",\n    \"けいこ\",\n    \"けいさつ\",\n    \"げいじゅつ\",\n    \"けいたい\",\n    \"げいのうじん\",\n    \"けいれき\",\n    \"けいろ\",\n    \"けおとす\",\n    \"けおりもの\",\n    \"げきか\",\n    \"げきげん\",\n    \"げきだん\",\n    \"げきちん\",\n    \"げきとつ\",\n    \"げきは\",\n    \"げきやく\",\n    \"げこう\",\n    \"げこくじょう\",\n    \"げざい\",\n    \"けさき\",\n    \"げざん\",\n    \"けしき\",\n    \"けしごむ\",\n    \"けしょう\",\n    \"げすと\",\n    \"けたば\",\n    \"けちゃっぷ\",\n    \"けちらす\",\n    \"けつあつ\",\n    \"けつい\",\n    \"けつえき\",\n    \"けっこん\",\n    \"けつじょ\",\n    \"けっせき\",\n    \"けってい\",\n    \"けつまつ\",\n    \"げつようび\",\n    \"げつれい\",\n    \"けつろん\",\n    \"げどく\",\n    \"けとばす\",\n    \"けとる\",\n    \"けなげ\",\n    \"けなす\",\n    \"けなみ\",\n    \"けぬき\",\n    \"げねつ\",\n    \"けねん\",\n    \"けはい\",\n    \"げひん\",\n    \"けぶかい\",\n    \"げぼく\",\n    \"けまり\",\n    \"けみかる\",\n    \"けむし\",\n    \"けむり\",\n    \"けもの\",\n    \"けらい\",\n    \"けろけろ\",\n    \"けわしい\",\n    \"けんい\",\n    \"けんえつ\",\n    \"けんお\",\n    \"けんか\",\n    \"げんき\",\n    \"けんげん\",\n    \"けんこう\",\n    \"けんさく\",\n    \"けんしゅう\",\n    \"けんすう\",\n    \"げんそう\",\n    \"けんちく\",\n    \"けんてい\",\n    \"けんとう\",\n    \"けんない\",\n    \"けんにん\",\n    \"げんぶつ\",\n    \"けんま\",\n    \"けんみん\",\n    \"けんめい\",\n    \"けんらん\",\n    \"けんり\",\n    \"こあくま\",\n    \"こいぬ\",\n    \"こいびと\",\n    \"ごうい\",\n    \"こうえん\",\n    \"こうおん\",\n    \"こうかん\",\n    \"ごうきゅう\",\n    \"ごうけい\",\n    \"こうこう\",\n    \"こうさい\",\n    \"こうじ\",\n    \"こうすい\",\n    \"ごうせい\",\n    \"こうそく\",\n    \"こうたい\",\n    \"こうちゃ\",\n    \"こうつう\",\n    \"こうてい\",\n    \"こうどう\",\n    \"こうない\",\n    \"こうはい\",\n    \"ごうほう\",\n    \"ごうまん\",\n    \"こうもく\",\n    \"こうりつ\",\n    \"こえる\",\n    \"こおり\",\n    \"ごかい\",\n    \"ごがつ\",\n    \"ごかん\",\n    \"こくご\",\n    \"こくさい\",\n    \"こくとう\",\n    \"こくない\",\n    \"こくはく\",\n    \"こぐま\",\n    \"こけい\",\n    \"こける\",\n    \"ここのか\",\n    \"こころ\",\n    \"こさめ\",\n    \"こしつ\",\n    \"こすう\",\n    \"こせい\",\n    \"こせき\",\n    \"こぜん\",\n    \"こそだて\",\n    \"こたい\",\n    \"こたえる\",\n    \"こたつ\",\n    \"こちょう\",\n    \"こっか\",\n    \"こつこつ\",\n    \"こつばん\",\n    \"こつぶ\",\n    \"こてい\",\n    \"こてん\",\n    \"ことがら\",\n    \"ことし\",\n    \"ことば\",\n    \"ことり\",\n    \"こなごな\",\n    \"こねこね\",\n    \"このまま\",\n    \"このみ\",\n    \"このよ\",\n    \"ごはん\",\n    \"こひつじ\",\n    \"こふう\",\n    \"こふん\",\n    \"こぼれる\",\n    \"ごまあぶら\",\n    \"こまかい\",\n    \"ごますり\",\n    \"こまつな\",\n    \"こまる\",\n    \"こむぎこ\",\n    \"こもじ\",\n    \"こもち\",\n    \"こもの\",\n    \"こもん\",\n    \"こやく\",\n    \"こやま\",\n    \"こゆう\",\n    \"こゆび\",\n    \"こよい\",\n    \"こよう\",\n    \"こりる\",\n    \"これくしょん\",\n    \"ころっけ\",\n    \"こわもて\",\n    \"こわれる\",\n    \"こんいん\",\n    \"こんかい\",\n    \"こんき\",\n    \"こんしゅう\",\n    \"こんすい\",\n    \"こんだて\",\n    \"こんとん\",\n    \"こんなん\",\n    \"こんびに\",\n    \"こんぽん\",\n    \"こんまけ\",\n    \"こんや\",\n    \"こんれい\",\n    \"こんわく\",\n    \"ざいえき\",\n    \"さいかい\",\n    \"さいきん\",\n    \"ざいげん\",\n    \"ざいこ\",\n    \"さいしょ\",\n    \"さいせい\",\n    \"ざいたく\",\n    \"ざいちゅう\",\n    \"さいてき\",\n    \"ざいりょう\",\n    \"さうな\",\n    \"さかいし\",\n    \"さがす\",\n    \"さかな\",\n    \"さかみち\",\n    \"さがる\",\n    \"さぎょう\",\n    \"さくし\",\n    \"さくひん\",\n    \"さくら\",\n    \"さこく\",\n    \"さこつ\",\n    \"さずかる\",\n    \"ざせき\",\n    \"さたん\",\n    \"さつえい\",\n    \"ざつおん\",\n    \"ざっか\",\n    \"ざつがく\",\n    \"さっきょく\",\n    \"ざっし\",\n    \"さつじん\",\n    \"ざっそう\",\n    \"さつたば\",\n    \"さつまいも\",\n    \"さてい\",\n    \"さといも\",\n    \"さとう\",\n    \"さとおや\",\n    \"さとし\",\n    \"さとる\",\n    \"さのう\",\n    \"さばく\",\n    \"さびしい\",\n    \"さべつ\",\n    \"さほう\",\n    \"さほど\",\n    \"さます\",\n    \"さみしい\",\n    \"さみだれ\",\n    \"さむけ\",\n    \"さめる\",\n    \"さやえんどう\",\n    \"さゆう\",\n    \"さよう\",\n    \"さよく\",\n    \"さらだ\",\n    \"ざるそば\",\n    \"さわやか\",\n    \"さわる\",\n    \"さんいん\",\n    \"さんか\",\n    \"さんきゃく\",\n    \"さんこう\",\n    \"さんさい\",\n    \"ざんしょ\",\n    \"さんすう\",\n    \"さんせい\",\n    \"さんそ\",\n    \"さんち\",\n    \"さんま\",\n    \"さんみ\",\n    \"さんらん\",\n    \"しあい\",\n    \"しあげ\",\n    \"しあさって\",\n    \"しあわせ\",\n    \"しいく\",\n    \"しいん\",\n    \"しうち\",\n    \"しえい\",\n    \"しおけ\",\n    \"しかい\",\n    \"しかく\",\n    \"じかん\",\n    \"しごと\",\n    \"しすう\",\n    \"じだい\",\n    \"したうけ\",\n    \"したぎ\",\n    \"したて\",\n    \"したみ\",\n    \"しちょう\",\n    \"しちりん\",\n    \"しっかり\",\n    \"しつじ\",\n    \"しつもん\",\n    \"してい\",\n    \"してき\",\n    \"してつ\",\n    \"じてん\",\n    \"じどう\",\n    \"しなぎれ\",\n    \"しなもの\",\n    \"しなん\",\n    \"しねま\",\n    \"しねん\",\n    \"しのぐ\",\n    \"しのぶ\",\n    \"しはい\",\n    \"しばかり\",\n    \"しはつ\",\n    \"しはらい\",\n    \"しはん\",\n    \"しひょう\",\n    \"しふく\",\n    \"じぶん\",\n    \"しへい\",\n    \"しほう\",\n    \"しほん\",\n    \"しまう\",\n    \"しまる\",\n    \"しみん\",\n    \"しむける\",\n    \"じむしょ\",\n    \"しめい\",\n    \"しめる\",\n    \"しもん\",\n    \"しゃいん\",\n    \"しゃうん\",\n    \"しゃおん\",\n    \"じゃがいも\",\n    \"しやくしょ\",\n    \"しゃくほう\",\n    \"しゃけん\",\n    \"しゃこ\",\n    \"しゃざい\",\n    \"しゃしん\",\n    \"しゃせん\",\n    \"しゃそう\",\n    \"しゃたい\",\n    \"しゃちょう\",\n    \"しゃっきん\",\n    \"じゃま\",\n    \"しゃりん\",\n    \"しゃれい\",\n    \"じゆう\",\n    \"じゅうしょ\",\n    \"しゅくはく\",\n    \"じゅしん\",\n    \"しゅっせき\",\n    \"しゅみ\",\n    \"しゅらば\",\n    \"じゅんばん\",\n    \"しょうかい\",\n    \"しょくたく\",\n    \"しょっけん\",\n    \"しょどう\",\n    \"しょもつ\",\n    \"しらせる\",\n    \"しらべる\",\n    \"しんか\",\n    \"しんこう\",\n    \"じんじゃ\",\n    \"しんせいじ\",\n    \"しんちく\",\n    \"しんりん\",\n    \"すあげ\",\n    \"すあし\",\n    \"すあな\",\n    \"ずあん\",\n    \"すいえい\",\n    \"すいか\",\n    \"すいとう\",\n    \"ずいぶん\",\n    \"すいようび\",\n    \"すうがく\",\n    \"すうじつ\",\n    \"すうせん\",\n    \"すおどり\",\n    \"すきま\",\n    \"すくう\",\n    \"すくない\",\n    \"すける\",\n    \"すごい\",\n    \"すこし\",\n    \"ずさん\",\n    \"すずしい\",\n    \"すすむ\",\n    \"すすめる\",\n    \"すっかり\",\n    \"ずっしり\",\n    \"ずっと\",\n    \"すてき\",\n    \"すてる\",\n    \"すねる\",\n    \"すのこ\",\n    \"すはだ\",\n    \"すばらしい\",\n    \"ずひょう\",\n    \"ずぶぬれ\",\n    \"すぶり\",\n    \"すふれ\",\n    \"すべて\",\n    \"すべる\",\n    \"ずほう\",\n    \"すぼん\",\n    \"すまい\",\n    \"すめし\",\n    \"すもう\",\n    \"すやき\",\n    \"すらすら\",\n    \"するめ\",\n    \"すれちがう\",\n    \"すろっと\",\n    \"すわる\",\n    \"すんぜん\",\n    \"すんぽう\",\n    \"せあぶら\",\n    \"せいかつ\",\n    \"せいげん\",\n    \"せいじ\",\n    \"せいよう\",\n    \"せおう\",\n    \"せかいかん\",\n    \"せきにん\",\n    \"せきむ\",\n    \"せきゆ\",\n    \"せきらんうん\",\n    \"せけん\",\n    \"せこう\",\n    \"せすじ\",\n    \"せたい\",\n    \"せたけ\",\n    \"せっかく\",\n    \"せっきゃく\",\n    \"ぜっく\",\n    \"せっけん\",\n    \"せっこつ\",\n    \"せっさたくま\",\n    \"せつぞく\",\n    \"せつだん\",\n    \"せつでん\",\n    \"せっぱん\",\n    \"せつび\",\n    \"せつぶん\",\n    \"せつめい\",\n    \"せつりつ\",\n    \"せなか\",\n    \"せのび\",\n    \"せはば\",\n    \"せびろ\",\n    \"せぼね\",\n    \"せまい\",\n    \"せまる\",\n    \"せめる\",\n    \"せもたれ\",\n    \"せりふ\",\n    \"ぜんあく\",\n    \"せんい\",\n    \"せんえい\",\n    \"せんか\",\n    \"せんきょ\",\n    \"せんく\",\n    \"せんげん\",\n    \"ぜんご\",\n    \"せんさい\",\n    \"せんしゅ\",\n    \"せんすい\",\n    \"せんせい\",\n    \"せんぞ\",\n    \"せんたく\",\n    \"せんちょう\",\n    \"せんてい\",\n    \"せんとう\",\n    \"せんぬき\",\n    \"せんねん\",\n    \"せんぱい\",\n    \"ぜんぶ\",\n    \"ぜんぽう\",\n    \"せんむ\",\n    \"せんめんじょ\",\n    \"せんもん\",\n    \"せんやく\",\n    \"せんゆう\",\n    \"せんよう\",\n    \"ぜんら\",\n    \"ぜんりゃく\",\n    \"せんれい\",\n    \"せんろ\",\n    \"そあく\",\n    \"そいとげる\",\n    \"そいね\",\n    \"そうがんきょう\",\n    \"そうき\",\n    \"そうご\",\n    \"そうしん\",\n    \"そうだん\",\n    \"そうなん\",\n    \"そうび\",\n    \"そうめん\",\n    \"そうり\",\n    \"そえもの\",\n    \"そえん\",\n    \"そがい\",\n    \"そげき\",\n    \"そこう\",\n    \"そこそこ\",\n    \"そざい\",\n    \"そしな\",\n    \"そせい\",\n    \"そせん\",\n    \"そそぐ\",\n    \"そだてる\",\n    \"そつう\",\n    \"そつえん\",\n    \"そっかん\",\n    \"そつぎょう\",\n    \"そっけつ\",\n    \"そっこう\",\n    \"そっせん\",\n    \"そっと\",\n    \"そとがわ\",\n    \"そとづら\",\n    \"そなえる\",\n    \"そなた\",\n    \"そふぼ\",\n    \"そぼく\",\n    \"そぼろ\",\n    \"そまつ\",\n    \"そまる\",\n    \"そむく\",\n    \"そむりえ\",\n    \"そめる\",\n    \"そもそも\",\n    \"そよかぜ\",\n    \"そらまめ\",\n    \"そろう\",\n    \"そんかい\",\n    \"そんけい\",\n    \"そんざい\",\n    \"そんしつ\",\n    \"そんぞく\",\n    \"そんちょう\",\n    \"ぞんび\",\n    \"ぞんぶん\",\n    \"そんみん\",\n    \"たあい\",\n    \"たいいん\",\n    \"たいうん\",\n    \"たいえき\",\n    \"たいおう\",\n    \"だいがく\",\n    \"たいき\",\n    \"たいぐう\",\n    \"たいけん\",\n    \"たいこ\",\n    \"たいざい\",\n    \"だいじょうぶ\",\n    \"だいすき\",\n    \"たいせつ\",\n    \"たいそう\",\n    \"だいたい\",\n    \"たいちょう\",\n    \"たいてい\",\n    \"だいどころ\",\n    \"たいない\",\n    \"たいねつ\",\n    \"たいのう\",\n    \"たいはん\",\n    \"だいひょう\",\n    \"たいふう\",\n    \"たいへん\",\n    \"たいほ\",\n    \"たいまつばな\",\n    \"たいみんぐ\",\n    \"たいむ\",\n    \"たいめん\",\n    \"たいやき\",\n    \"たいよう\",\n    \"たいら\",\n    \"たいりょく\",\n    \"たいる\",\n    \"たいわん\",\n    \"たうえ\",\n    \"たえる\",\n    \"たおす\",\n    \"たおる\",\n    \"たおれる\",\n    \"たかい\",\n    \"たかね\",\n    \"たきび\",\n    \"たくさん\",\n    \"たこく\",\n    \"たこやき\",\n    \"たさい\",\n    \"たしざん\",\n    \"だじゃれ\",\n    \"たすける\",\n    \"たずさわる\",\n    \"たそがれ\",\n    \"たたかう\",\n    \"たたく\",\n    \"ただしい\",\n    \"たたみ\",\n    \"たちばな\",\n    \"だっかい\",\n    \"だっきゃく\",\n    \"だっこ\",\n    \"だっしゅつ\",\n    \"だったい\",\n    \"たてる\",\n    \"たとえる\",\n    \"たなばた\",\n    \"たにん\",\n    \"たぬき\",\n    \"たのしみ\",\n    \"たはつ\",\n    \"たぶん\",\n    \"たべる\",\n    \"たぼう\",\n    \"たまご\",\n    \"たまる\",\n    \"だむる\",\n    \"ためいき\",\n    \"ためす\",\n    \"ためる\",\n    \"たもつ\",\n    \"たやすい\",\n    \"たよる\",\n    \"たらす\",\n    \"たりきほんがん\",\n    \"たりょう\",\n    \"たりる\",\n    \"たると\",\n    \"たれる\",\n    \"たれんと\",\n    \"たろっと\",\n    \"たわむれる\",\n    \"だんあつ\",\n    \"たんい\",\n    \"たんおん\",\n    \"たんか\",\n    \"たんき\",\n    \"たんけん\",\n    \"たんご\",\n    \"たんさん\",\n    \"たんじょうび\",\n    \"だんせい\",\n    \"たんそく\",\n    \"たんたい\",\n    \"だんち\",\n    \"たんてい\",\n    \"たんとう\",\n    \"だんな\",\n    \"たんにん\",\n    \"だんねつ\",\n    \"たんのう\",\n    \"たんぴん\",\n    \"だんぼう\",\n    \"たんまつ\",\n    \"たんめい\",\n    \"だんれつ\",\n    \"だんろ\",\n    \"だんわ\",\n    \"ちあい\",\n    \"ちあん\",\n    \"ちいき\",\n    \"ちいさい\",\n    \"ちえん\",\n    \"ちかい\",\n    \"ちから\",\n    \"ちきゅう\",\n    \"ちきん\",\n    \"ちけいず\",\n    \"ちけん\",\n    \"ちこく\",\n    \"ちさい\",\n    \"ちしき\",\n    \"ちしりょう\",\n    \"ちせい\",\n    \"ちそう\",\n    \"ちたい\",\n    \"ちたん\",\n    \"ちちおや\",\n    \"ちつじょ\",\n    \"ちてき\",\n    \"ちてん\",\n    \"ちぬき\",\n    \"ちぬり\",\n    \"ちのう\",\n    \"ちひょう\",\n    \"ちへいせん\",\n    \"ちほう\",\n    \"ちまた\",\n    \"ちみつ\",\n    \"ちみどろ\",\n    \"ちめいど\",\n    \"ちゃんこなべ\",\n    \"ちゅうい\",\n    \"ちゆりょく\",\n    \"ちょうし\",\n    \"ちょさくけん\",\n    \"ちらし\",\n    \"ちらみ\",\n    \"ちりがみ\",\n    \"ちりょう\",\n    \"ちるど\",\n    \"ちわわ\",\n    \"ちんたい\",\n    \"ちんもく\",\n    \"ついか\",\n    \"ついたち\",\n    \"つうか\",\n    \"つうじょう\",\n    \"つうはん\",\n    \"つうわ\",\n    \"つかう\",\n    \"つかれる\",\n    \"つくね\",\n    \"つくる\",\n    \"つけね\",\n    \"つける\",\n    \"つごう\",\n    \"つたえる\",\n    \"つづく\",\n    \"つつじ\",\n    \"つつむ\",\n    \"つとめる\",\n    \"つながる\",\n    \"つなみ\",\n    \"つねづね\",\n    \"つのる\",\n    \"つぶす\",\n    \"つまらない\",\n    \"つまる\",\n    \"つみき\",\n    \"つめたい\",\n    \"つもり\",\n    \"つもる\",\n    \"つよい\",\n    \"つるぼ\",\n    \"つるみく\",\n    \"つわもの\",\n    \"つわり\",\n    \"てあし\",\n    \"てあて\",\n    \"てあみ\",\n    \"ていおん\",\n    \"ていか\",\n    \"ていき\",\n    \"ていけい\",\n    \"ていこく\",\n    \"ていさつ\",\n    \"ていし\",\n    \"ていせい\",\n    \"ていたい\",\n    \"ていど\",\n    \"ていねい\",\n    \"ていひょう\",\n    \"ていへん\",\n    \"ていぼう\",\n    \"てうち\",\n    \"ておくれ\",\n    \"てきとう\",\n    \"てくび\",\n    \"でこぼこ\",\n    \"てさぎょう\",\n    \"てさげ\",\n    \"てすり\",\n    \"てそう\",\n    \"てちがい\",\n    \"てちょう\",\n    \"てつがく\",\n    \"てつづき\",\n    \"でっぱ\",\n    \"てつぼう\",\n    \"てつや\",\n    \"でぬかえ\",\n    \"てぬき\",\n    \"てぬぐい\",\n    \"てのひら\",\n    \"てはい\",\n    \"てぶくろ\",\n    \"てふだ\",\n    \"てほどき\",\n    \"てほん\",\n    \"てまえ\",\n    \"てまきずし\",\n    \"てみじか\",\n    \"てみやげ\",\n    \"てらす\",\n    \"てれび\",\n    \"てわけ\",\n    \"てわたし\",\n    \"でんあつ\",\n    \"てんいん\",\n    \"てんかい\",\n    \"てんき\",\n    \"てんぐ\",\n    \"てんけん\",\n    \"てんごく\",\n    \"てんさい\",\n    \"てんし\",\n    \"てんすう\",\n    \"でんち\",\n    \"てんてき\",\n    \"てんとう\",\n    \"てんない\",\n    \"てんぷら\",\n    \"てんぼうだい\",\n    \"てんめつ\",\n    \"てんらんかい\",\n    \"でんりょく\",\n    \"でんわ\",\n    \"どあい\",\n    \"といれ\",\n    \"どうかん\",\n    \"とうきゅう\",\n    \"どうぐ\",\n    \"とうし\",\n    \"とうむぎ\",\n    \"とおい\",\n    \"とおか\",\n    \"とおく\",\n    \"とおす\",\n    \"とおる\",\n    \"とかい\",\n    \"とかす\",\n    \"ときおり\",\n    \"ときどき\",\n    \"とくい\",\n    \"とくしゅう\",\n    \"とくてん\",\n    \"とくに\",\n    \"とくべつ\",\n    \"とけい\",\n    \"とける\",\n    \"とこや\",\n    \"とさか\",\n    \"としょかん\",\n    \"とそう\",\n    \"とたん\",\n    \"とちゅう\",\n    \"とっきゅう\",\n    \"とっくん\",\n    \"とつぜん\",\n    \"とつにゅう\",\n    \"とどける\",\n    \"ととのえる\",\n    \"とない\",\n    \"となえる\",\n    \"となり\",\n    \"とのさま\",\n    \"とばす\",\n    \"どぶがわ\",\n    \"とほう\",\n    \"とまる\",\n    \"とめる\",\n    \"ともだち\",\n    \"ともる\",\n    \"どようび\",\n    \"とらえる\",\n    \"とんかつ\",\n    \"どんぶり\",\n    \"ないかく\",\n    \"ないこう\",\n    \"ないしょ\",\n    \"ないす\",\n    \"ないせん\",\n    \"ないそう\",\n    \"なおす\",\n    \"ながい\",\n    \"なくす\",\n    \"なげる\",\n    \"なこうど\",\n    \"なさけ\",\n    \"なたでここ\",\n    \"なっとう\",\n    \"なつやすみ\",\n    \"ななおし\",\n    \"なにごと\",\n    \"なにもの\",\n    \"なにわ\",\n    \"なのか\",\n    \"なふだ\",\n    \"なまいき\",\n    \"なまえ\",\n    \"なまみ\",\n    \"なみだ\",\n    \"なめらか\",\n    \"なめる\",\n    \"なやむ\",\n    \"ならう\",\n    \"ならび\",\n    \"ならぶ\",\n    \"なれる\",\n    \"なわとび\",\n    \"なわばり\",\n    \"にあう\",\n    \"にいがた\",\n    \"にうけ\",\n    \"におい\",\n    \"にかい\",\n    \"にがて\",\n    \"にきび\",\n    \"にくしみ\",\n    \"にくまん\",\n    \"にげる\",\n    \"にさんかたんそ\",\n    \"にしき\",\n    \"にせもの\",\n    \"にちじょう\",\n    \"にちようび\",\n    \"にっか\",\n    \"にっき\",\n    \"にっけい\",\n    \"にっこう\",\n    \"にっさん\",\n    \"にっしょく\",\n    \"にっすう\",\n    \"にっせき\",\n    \"にってい\",\n    \"になう\",\n    \"にほん\",\n    \"にまめ\",\n    \"にもつ\",\n    \"にやり\",\n    \"にゅういん\",\n    \"にりんしゃ\",\n    \"にわとり\",\n    \"にんい\",\n    \"にんか\",\n    \"にんき\",\n    \"にんげん\",\n    \"にんしき\",\n    \"にんずう\",\n    \"にんそう\",\n    \"にんたい\",\n    \"にんち\",\n    \"にんてい\",\n    \"にんにく\",\n    \"にんぷ\",\n    \"にんまり\",\n    \"にんむ\",\n    \"にんめい\",\n    \"にんよう\",\n    \"ぬいくぎ\",\n    \"ぬかす\",\n    \"ぬぐいとる\",\n    \"ぬぐう\",\n    \"ぬくもり\",\n    \"ぬすむ\",\n    \"ぬまえび\",\n    \"ぬめり\",\n    \"ぬらす\",\n    \"ぬんちゃく\",\n    \"ねあげ\",\n    \"ねいき\",\n    \"ねいる\",\n    \"ねいろ\",\n    \"ねぐせ\",\n    \"ねくたい\",\n    \"ねくら\",\n    \"ねこぜ\",\n    \"ねこむ\",\n    \"ねさげ\",\n    \"ねすごす\",\n    \"ねそべる\",\n    \"ねだん\",\n    \"ねつい\",\n    \"ねっしん\",\n    \"ねつぞう\",\n    \"ねったいぎょ\",\n    \"ねぶそく\",\n    \"ねふだ\",\n    \"ねぼう\",\n    \"ねほりはほり\",\n    \"ねまき\",\n    \"ねまわし\",\n    \"ねみみ\",\n    \"ねむい\",\n    \"ねむたい\",\n    \"ねもと\",\n    \"ねらう\",\n    \"ねわざ\",\n    \"ねんいり\",\n    \"ねんおし\",\n    \"ねんかん\",\n    \"ねんきん\",\n    \"ねんぐ\",\n    \"ねんざ\",\n    \"ねんし\",\n    \"ねんちゃく\",\n    \"ねんど\",\n    \"ねんぴ\",\n    \"ねんぶつ\",\n    \"ねんまつ\",\n    \"ねんりょう\",\n    \"ねんれい\",\n    \"のいず\",\n    \"のおづま\",\n    \"のがす\",\n    \"のきなみ\",\n    \"のこぎり\",\n    \"のこす\",\n    \"のこる\",\n    \"のせる\",\n    \"のぞく\",\n    \"のぞむ\",\n    \"のたまう\",\n    \"のちほど\",\n    \"のっく\",\n    \"のばす\",\n    \"のはら\",\n    \"のべる\",\n    \"のぼる\",\n    \"のみもの\",\n    \"のやま\",\n    \"のらいぬ\",\n    \"のらねこ\",\n    \"のりもの\",\n    \"のりゆき\",\n    \"のれん\",\n    \"のんき\",\n    \"ばあい\",\n    \"はあく\",\n    \"ばあさん\",\n    \"ばいか\",\n    \"ばいく\",\n    \"はいけん\",\n    \"はいご\",\n    \"はいしん\",\n    \"はいすい\",\n    \"はいせん\",\n    \"はいそう\",\n    \"はいち\",\n    \"ばいばい\",\n    \"はいれつ\",\n    \"はえる\",\n    \"はおる\",\n    \"はかい\",\n    \"ばかり\",\n    \"はかる\",\n    \"はくしゅ\",\n    \"はけん\",\n    \"はこぶ\",\n    \"はさみ\",\n    \"はさん\",\n    \"はしご\",\n    \"ばしょ\",\n    \"はしる\",\n    \"はせる\",\n    \"ぱそこん\",\n    \"はそん\",\n    \"はたん\",\n    \"はちみつ\",\n    \"はつおん\",\n    \"はっかく\",\n    \"はづき\",\n    \"はっきり\",\n    \"はっくつ\",\n    \"はっけん\",\n    \"はっこう\",\n    \"はっさん\",\n    \"はっしん\",\n    \"はったつ\",\n    \"はっちゅう\",\n    \"はってん\",\n    \"はっぴょう\",\n    \"はっぽう\",\n    \"はなす\",\n    \"はなび\",\n    \"はにかむ\",\n    \"はぶらし\",\n    \"はみがき\",\n    \"はむかう\",\n    \"はめつ\",\n    \"はやい\",\n    \"はやし\",\n    \"はらう\",\n    \"はろうぃん\",\n    \"はわい\",\n    \"はんい\",\n    \"はんえい\",\n    \"はんおん\",\n    \"はんかく\",\n    \"はんきょう\",\n    \"ばんぐみ\",\n    \"はんこ\",\n    \"はんしゃ\",\n    \"はんすう\",\n    \"はんだん\",\n    \"ぱんち\",\n    \"ぱんつ\",\n    \"はんてい\",\n    \"はんとし\",\n    \"はんのう\",\n    \"はんぱ\",\n    \"はんぶん\",\n    \"はんぺん\",\n    \"はんぼうき\",\n    \"はんめい\",\n    \"はんらん\",\n    \"はんろん\",\n    \"ひいき\",\n    \"ひうん\",\n    \"ひえる\",\n    \"ひかく\",\n    \"ひかり\",\n    \"ひかる\",\n    \"ひかん\",\n    \"ひくい\",\n    \"ひけつ\",\n    \"ひこうき\",\n    \"ひこく\",\n    \"ひさい\",\n    \"ひさしぶり\",\n    \"ひさん\",\n    \"びじゅつかん\",\n    \"ひしょ\",\n    \"ひそか\",\n    \"ひそむ\",\n    \"ひたむき\",\n    \"ひだり\",\n    \"ひたる\",\n    \"ひつぎ\",\n    \"ひっこし\",\n    \"ひっし\",\n    \"ひつじゅひん\",\n    \"ひっす\",\n    \"ひつぜん\",\n    \"ぴったり\",\n    \"ぴっちり\",\n    \"ひつよう\",\n    \"ひてい\",\n    \"ひとごみ\",\n    \"ひなまつり\",\n    \"ひなん\",\n    \"ひねる\",\n    \"ひはん\",\n    \"ひびく\",\n    \"ひひょう\",\n    \"ひほう\",\n    \"ひまわり\",\n    \"ひまん\",\n    \"ひみつ\",\n    \"ひめい\",\n    \"ひめじし\",\n    \"ひやけ\",\n    \"ひやす\",\n    \"ひよう\",\n    \"びょうき\",\n    \"ひらがな\",\n    \"ひらく\",\n    \"ひりつ\",\n    \"ひりょう\",\n    \"ひるま\",\n    \"ひるやすみ\",\n    \"ひれい\",\n    \"ひろい\",\n    \"ひろう\",\n    \"ひろき\",\n    \"ひろゆき\",\n    \"ひんかく\",\n    \"ひんけつ\",\n    \"ひんこん\",\n    \"ひんしゅ\",\n    \"ひんそう\",\n    \"ぴんち\",\n    \"ひんぱん\",\n    \"びんぼう\",\n    \"ふあん\",\n    \"ふいうち\",\n    \"ふうけい\",\n    \"ふうせん\",\n    \"ぷうたろう\",\n    \"ふうとう\",\n    \"ふうふ\",\n    \"ふえる\",\n    \"ふおん\",\n    \"ふかい\",\n    \"ふきん\",\n    \"ふくざつ\",\n    \"ふくぶくろ\",\n    \"ふこう\",\n    \"ふさい\",\n    \"ふしぎ\",\n    \"ふじみ\",\n    \"ふすま\",\n    \"ふせい\",\n    \"ふせぐ\",\n    \"ふそく\",\n    \"ぶたにく\",\n    \"ふたん\",\n    \"ふちょう\",\n    \"ふつう\",\n    \"ふつか\",\n    \"ふっかつ\",\n    \"ふっき\",\n    \"ふっこく\",\n    \"ぶどう\",\n    \"ふとる\",\n    \"ふとん\",\n    \"ふのう\",\n    \"ふはい\",\n    \"ふひょう\",\n    \"ふへん\",\n    \"ふまん\",\n    \"ふみん\",\n    \"ふめつ\",\n    \"ふめん\",\n    \"ふよう\",\n    \"ふりこ\",\n    \"ふりる\",\n    \"ふるい\",\n    \"ふんいき\",\n    \"ぶんがく\",\n    \"ぶんぐ\",\n    \"ふんしつ\",\n    \"ぶんせき\",\n    \"ふんそう\",\n    \"ぶんぽう\",\n    \"へいあん\",\n    \"へいおん\",\n    \"へいがい\",\n    \"へいき\",\n    \"へいげん\",\n    \"へいこう\",\n    \"へいさ\",\n    \"へいしゃ\",\n    \"へいせつ\",\n    \"へいそ\",\n    \"へいたく\",\n    \"へいてん\",\n    \"へいねつ\",\n    \"へいわ\",\n    \"へきが\",\n    \"へこむ\",\n    \"べにいろ\",\n    \"べにしょうが\",\n    \"へらす\",\n    \"へんかん\",\n    \"べんきょう\",\n    \"べんごし\",\n    \"へんさい\",\n    \"へんたい\",\n    \"べんり\",\n    \"ほあん\",\n    \"ほいく\",\n    \"ぼうぎょ\",\n    \"ほうこく\",\n    \"ほうそう\",\n    \"ほうほう\",\n    \"ほうもん\",\n    \"ほうりつ\",\n    \"ほえる\",\n    \"ほおん\",\n    \"ほかん\",\n    \"ほきょう\",\n    \"ぼきん\",\n    \"ほくろ\",\n    \"ほけつ\",\n    \"ほけん\",\n    \"ほこう\",\n    \"ほこる\",\n    \"ほしい\",\n    \"ほしつ\",\n    \"ほしゅ\",\n    \"ほしょう\",\n    \"ほせい\",\n    \"ほそい\",\n    \"ほそく\",\n    \"ほたて\",\n    \"ほたる\",\n    \"ぽちぶくろ\",\n    \"ほっきょく\",\n    \"ほっさ\",\n    \"ほったん\",\n    \"ほとんど\",\n    \"ほめる\",\n    \"ほんい\",\n    \"ほんき\",\n    \"ほんけ\",\n    \"ほんしつ\",\n    \"ほんやく\",\n    \"まいにち\",\n    \"まかい\",\n    \"まかせる\",\n    \"まがる\",\n    \"まける\",\n    \"まこと\",\n    \"まさつ\",\n    \"まじめ\",\n    \"ますく\",\n    \"まぜる\",\n    \"まつり\",\n    \"まとめ\",\n    \"まなぶ\",\n    \"まぬけ\",\n    \"まねく\",\n    \"まほう\",\n    \"まもる\",\n    \"まゆげ\",\n    \"まよう\",\n    \"まろやか\",\n    \"まわす\",\n    \"まわり\",\n    \"まわる\",\n    \"まんが\",\n    \"まんきつ\",\n    \"まんぞく\",\n    \"まんなか\",\n    \"みいら\",\n    \"みうち\",\n    \"みえる\",\n    \"みがく\",\n    \"みかた\",\n    \"みかん\",\n    \"みけん\",\n    \"みこん\",\n    \"みじかい\",\n    \"みすい\",\n    \"みすえる\",\n    \"みせる\",\n    \"みっか\",\n    \"みつかる\",\n    \"みつける\",\n    \"みてい\",\n    \"みとめる\",\n    \"みなと\",\n    \"みなみかさい\",\n    \"みねらる\",\n    \"みのう\",\n    \"みのがす\",\n    \"みほん\",\n    \"みもと\",\n    \"みやげ\",\n    \"みらい\",\n    \"みりょく\",\n    \"みわく\",\n    \"みんか\",\n    \"みんぞく\",\n    \"むいか\",\n    \"むえき\",\n    \"むえん\",\n    \"むかい\",\n    \"むかう\",\n    \"むかえ\",\n    \"むかし\",\n    \"むぎちゃ\",\n    \"むける\",\n    \"むげん\",\n    \"むさぼる\",\n    \"むしあつい\",\n    \"むしば\",\n    \"むじゅん\",\n    \"むしろ\",\n    \"むすう\",\n    \"むすこ\",\n    \"むすぶ\",\n    \"むすめ\",\n    \"むせる\",\n    \"むせん\",\n    \"むちゅう\",\n    \"むなしい\",\n    \"むのう\",\n    \"むやみ\",\n    \"むよう\",\n    \"むらさき\",\n    \"むりょう\",\n    \"むろん\",\n    \"めいあん\",\n    \"めいうん\",\n    \"めいえん\",\n    \"めいかく\",\n    \"めいきょく\",\n    \"めいさい\",\n    \"めいし\",\n    \"めいそう\",\n    \"めいぶつ\",\n    \"めいれい\",\n    \"めいわく\",\n    \"めぐまれる\",\n    \"めざす\",\n    \"めした\",\n    \"めずらしい\",\n    \"めだつ\",\n    \"めまい\",\n    \"めやす\",\n    \"めんきょ\",\n    \"めんせき\",\n    \"めんどう\",\n    \"もうしあげる\",\n    \"もうどうけん\",\n    \"もえる\",\n    \"もくし\",\n    \"もくてき\",\n    \"もくようび\",\n    \"もちろん\",\n    \"もどる\",\n    \"もらう\",\n    \"もんく\",\n    \"もんだい\",\n    \"やおや\",\n    \"やける\",\n    \"やさい\",\n    \"やさしい\",\n    \"やすい\",\n    \"やすたろう\",\n    \"やすみ\",\n    \"やせる\",\n    \"やそう\",\n    \"やたい\",\n    \"やちん\",\n    \"やっと\",\n    \"やっぱり\",\n    \"やぶる\",\n    \"やめる\",\n    \"ややこしい\",\n    \"やよい\",\n    \"やわらかい\",\n    \"ゆうき\",\n    \"ゆうびんきょく\",\n    \"ゆうべ\",\n    \"ゆうめい\",\n    \"ゆけつ\",\n    \"ゆしゅつ\",\n    \"ゆせん\",\n    \"ゆそう\",\n    \"ゆたか\",\n    \"ゆちゃく\",\n    \"ゆでる\",\n    \"ゆにゅう\",\n    \"ゆびわ\",\n    \"ゆらい\",\n    \"ゆれる\",\n    \"ようい\",\n    \"ようか\",\n    \"ようきゅう\",\n    \"ようじ\",\n    \"ようす\",\n    \"ようちえん\",\n    \"よかぜ\",\n    \"よかん\",\n    \"よきん\",\n    \"よくせい\",\n    \"よくぼう\",\n    \"よけい\",\n    \"よごれる\",\n    \"よさん\",\n    \"よしゅう\",\n    \"よそう\",\n    \"よそく\",\n    \"よっか\",\n    \"よてい\",\n    \"よどがわく\",\n    \"よねつ\",\n    \"よやく\",\n    \"よゆう\",\n    \"よろこぶ\",\n    \"よろしい\",\n    \"らいう\",\n    \"らくがき\",\n    \"らくご\",\n    \"らくさつ\",\n    \"らくだ\",\n    \"らしんばん\",\n    \"らせん\",\n    \"らぞく\",\n    \"らたい\",\n    \"らっか\",\n    \"られつ\",\n    \"りえき\",\n    \"りかい\",\n    \"りきさく\",\n    \"りきせつ\",\n    \"りくぐん\",\n    \"りくつ\",\n    \"りけん\",\n    \"りこう\",\n    \"りせい\",\n    \"りそう\",\n    \"りそく\",\n    \"りてん\",\n    \"りねん\",\n    \"りゆう\",\n    \"りゅうがく\",\n    \"りよう\",\n    \"りょうり\",\n    \"りょかん\",\n    \"りょくちゃ\",\n    \"りょこう\",\n    \"りりく\",\n    \"りれき\",\n    \"りろん\",\n    \"りんご\",\n    \"るいけい\",\n    \"るいさい\",\n    \"るいじ\",\n    \"るいせき\",\n    \"るすばん\",\n    \"るりがわら\",\n    \"れいかん\",\n    \"れいぎ\",\n    \"れいせい\",\n    \"れいぞうこ\",\n    \"れいとう\",\n    \"れいぼう\",\n    \"れきし\",\n    \"れきだい\",\n    \"れんあい\",\n    \"れんけい\",\n    \"れんこん\",\n    \"れんさい\",\n    \"れんしゅう\",\n    \"れんぞく\",\n    \"れんらく\",\n    \"ろうか\",\n    \"ろうご\",\n    \"ろうじん\",\n    \"ろうそく\",\n    \"ろくが\",\n    \"ろこつ\",\n    \"ろじうら\",\n    \"ろしゅつ\",\n    \"ろせん\",\n    \"ろてん\",\n    \"ろめん\",\n    \"ろれつ\",\n    \"ろんぎ\",\n    \"ろんぱ\",\n    \"ろんぶん\",\n    \"ろんり\",\n    \"わかす\",\n    \"わかめ\",\n    \"わかやま\",\n    \"わかれる\",\n    \"わしつ\",\n    \"わじまし\",\n    \"わすれもの\",\n    \"わらう\",\n    \"われる\"\n]\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\nvar globalThis = require('./globalThis');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate;\n\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createTester = require('./internal/createTester');\n\nvar _createTester2 = _interopRequireDefault(_createTester);\n\nvar _doParallel = require('./internal/doParallel');\n\nvar _doParallel2 = _interopRequireDefault(_doParallel);\n\nvar _identity = require('lodash/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nexports.default = (0, _doParallel2.default)((0, _createTester2.default)(Boolean, _identity2.default));\nmodule.exports = exports['default'];","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","\"use strict\";\n\nconst hasBigInt64 = typeof BigUint64Array !== \"undefined\";\nconst thisPtr = Symbol();\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(U32, U16, ptr) {\n  var dataLength = U32[ptr >>> 2];\n  var dataOffset = (ptr + 4) >>> 1;\n  var dataRemain = dataLength;\n  var parts = [];\n  const chunkSize = 1024;\n  while (dataRemain > chunkSize) {\n    let last = U16[dataOffset + chunkSize - 1];\n    let size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\n    let part = U16.subarray(dataOffset, dataOffset += size);\n    parts.push(String.fromCharCode.apply(String, part));\n    dataRemain -= size;\n  }\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  var baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    var buffer = memory.buffer;\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  var env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    var memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  var rawExports = instance.exports;\n  var memory = rawExports.memory;\n  var memory_allocate = rawExports[\"memory.allocate\"];\n  var memory_fill = rawExports[\"memory.fill\"];\n  var memory_free = rawExports[\"memory.free\"];\n  var table = rawExports.table;\n  var setargc = rawExports._setargc || function() {};\n\n  // Provide views for all sorts of basic values\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\n\n  /** Updates memory views if memory has grown meanwhile. */\n  function checkMem() {\n    // see: https://github.com/WebAssembly/design/issues/1210\n    if (buffer !== memory.buffer) {\n      buffer = memory.buffer;\n      I8  = new Int8Array(buffer);\n      U8  = new Uint8Array(buffer);\n      I16 = new Int16Array(buffer);\n      U16 = new Uint16Array(buffer);\n      I32 = new Int32Array(buffer);\n      U32 = new Uint32Array(buffer);\n      if (hasBigInt64) {\n        I64 = new BigInt64Array(buffer);\n        U64 = new BigUint64Array(buffer);\n      }\n      F32 = new Float32Array(buffer);\n      F64 = new Float64Array(buffer);\n    }\n  }\n  checkMem();\n\n  /** Allocates a new string in the module's memory and returns its pointer. */\n  function newString(str) {\n    var dataLength = str.length;\n    var ptr = memory_allocate(4 + (dataLength << 1));\n    var dataOffset = (4 + ptr) >>> 1;\n    checkMem();\n    U32[ptr >>> 2] = dataLength;\n    for (let i = 0; i < dataLength; ++i) U16[dataOffset + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.newString = newString;\n\n  /** Gets a string from the module's memory by its pointer. */\n  function getString(ptr) {\n    checkMem();\n    return getStringImpl(U32, U16, ptr);\n  }\n\n  baseModule.getString = getString;\n\n  function computeBufferSize(byteLength) {\n    const HEADER_SIZE = 8;\n    return 1 << (32 - Math.clz32(byteLength + HEADER_SIZE - 1));\n  }\n\n  /** Creates a new typed array in the module's memory and returns its pointer. */\n  function newArray(view, length, unsafe) {\n    var ctor = view.constructor;\n    if (ctor === Function) { // TypedArray constructor created in memory\n      ctor = view;\n      view = null;\n    } else { // TypedArray instance copied into memory\n      if (length === undefined) length = view.length;\n    }\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    var byteLength = elementSize * length;\n    var ptr = memory_allocate(12); // TypedArray header\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\n    checkMem();\n    U32[ ptr      >>> 2] = buf;        // .buffer\n    U32[(ptr + 4) >>> 2] = 0;          // .byteOffset\n    U32[(ptr + 8) >>> 2] = byteLength; // .byteLength\n    U32[ buf      >>> 2] = byteLength; // .byteLength\n    U32[(buf + 4) >>> 2] = 0;          // 0\n    if (view) {\n      new ctor(buffer, buf + 8, length).set(view);\n      if (view.length < length && !unsafe) {\n        let setLength = elementSize * view.length;\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\n      }\n    } else if (!unsafe) {\n      memory_fill(buf + 8, 0, byteLength);\n    }\n    return ptr;\n  }\n\n  baseModule.newArray = newArray;\n\n  /** Gets a view on a typed array in the module's memory by its pointer. */\n  function getArray(ctor, ptr) {\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    checkMem();\n    var buf        = U32[ ptr      >>> 2];\n    var byteOffset = U32[(ptr + 4) >>> 2];\n    var byteLength = U32[(ptr + 8) >>> 2];\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\n  }\n\n  baseModule.getArray = getArray;\n\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\n  function freeArray(ptr) {\n    checkMem();\n    var buf = U32[ptr >>> 2];\n    memory_free(buf);\n    memory_free(ptr);\n  }\n\n  baseModule.freeArray = freeArray;\n\n  /**\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\n   * WebAssembly functions, i.e. as exported by the module, are supported.\n   */\n  function newFunction(fn) {\n    if (typeof fn.original === \"function\") fn = fn.original;\n    var index = table.length;\n    table.grow(1);\n    table.set(index, fn);\n    return index;\n  }\n\n  baseModule.newFunction = newFunction;\n\n  /** Gets a function by its pointer. */\n  function getFunction(ptr) {\n    return wrapFunction(table.get(ptr), setargc);\n  }\n\n  baseModule.getFunction = getFunction;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, Object.defineProperties(baseModule, {\n    I8: { get: function() { checkMem(); return I8; } },\n    U8: { get: function() { checkMem(); return U8; } },\n    I16: { get: function() { checkMem(); return I16; } },\n    U16: { get: function() { checkMem(); return U16; } },\n    I32: { get: function() { checkMem(); return I32; } },\n    U32: { get: function() { checkMem(); return U32; } },\n    I64: { get: function() { checkMem(); return I64; } },\n    U64: { get: function() { checkMem(); return U64; } },\n    F32: { get: function() { checkMem(); return F32; } },\n    F64: { get: function() { checkMem(); return F64; } }\n  }));\n}\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\n  // hence we can't use the wrapper and instead need to provide a reference to the original\n  wrap.original = fn;\n  return wrap;\n}\n\n/** Instantiates an AssemblyScript module using the specified imports. */\nfunction instantiate(module, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(module, imports)\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\nfunction instantiateBuffer(buffer, imports) {\n  return instantiate(new WebAssembly.Module(buffer), imports);\n}\n\nexports.instantiateBuffer = instantiateBuffer;\n\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\nasync function instantiateStreaming(response, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports._setargc || function() {};\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {};\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [thisPtr]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[thisPtr]); },\n            set: function(value) { setter(this[thisPtr], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[thisPtr], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","module.exports = (function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')(); // eslint-disable-line no-new-func\n  }\n})();\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState && packet.type === 'open') {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = require('events').EventEmitter;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","/**\n * @file The entry point for the web extension singleton process.\n */\n\nimport endOfStream from 'end-of-stream';\nimport pump from 'pump';\nimport debounce from 'debounce-stream';\nimport log from 'loglevel';\nimport extension from 'extensionizer';\nimport { storeAsStream, storeTransformStream } from '@metamask/obs-store';\nimport PortStream from 'extension-port-stream';\nimport { captureException } from '@sentry/browser';\n\nimport { ethErrors } from 'eth-rpc-errors';\nimport {\n  ENVIRONMENT_TYPE_POPUP,\n  ENVIRONMENT_TYPE_NOTIFICATION,\n  ENVIRONMENT_TYPE_FULLSCREEN,\n} from '../../shared/constants/app';\nimport { SECOND } from '../../shared/constants/time';\nimport {\n  REJECT_NOTFICIATION_CLOSE,\n  REJECT_NOTFICIATION_CLOSE_SIG,\n} from '../../shared/constants/metametrics';\nimport migrations from './migrations';\nimport Migrator from './lib/migrator';\nimport ExtensionPlatform from './platforms/extension';\nimport LocalStore from './lib/local-store';\nimport ReadOnlyNetworkStore from './lib/network-store';\nimport createStreamSink from './lib/createStreamSink';\nimport NotificationManager, {\n  NOTIFICATION_MANAGER_EVENTS,\n} from './lib/notification-manager';\nimport MetamaskController, {\n  METAMASK_CONTROLLER_EVENTS,\n} from './metamask-controller';\nimport rawFirstTimeState from './first-time-state';\nimport getFirstPreferredLangCode from './lib/get-first-preferred-lang-code';\nimport getObjStructure from './lib/getObjStructure';\nimport setupEnsIpfsResolver from './lib/ens-ipfs/setup';\n/* eslint-enable import/first */\n\nconst { sentry } = global;\nconst firstTimeState = { ...rawFirstTimeState };\n\nlog.setDefaultLevel(process.env.METAMASK_DEBUG ? 'debug' : 'info');\n\nconst platform = new ExtensionPlatform();\n\nconst notificationManager = new NotificationManager();\nglobal.METAMASK_NOTIFIER = notificationManager;\n\nlet popupIsOpen = false;\nlet notificationIsOpen = false;\nlet uiIsTriggering = false;\nconst openMetamaskTabsIDs = {};\nconst requestAccountTabIds = {};\n\n// state persistence\nconst inTest = process.env.IN_TEST;\nconst localStore = inTest ? new ReadOnlyNetworkStore() : new LocalStore();\nlet versionedData;\n\nif (inTest || process.env.METAMASK_DEBUG) {\n  global.metamaskGetState = localStore.get.bind(localStore);\n}\n\n// initialization flow\ninitialize().catch(log.error);\n\n/**\n * @typedef {import('../../shared/constants/transaction').TransactionMeta} TransactionMeta\n */\n\n/**\n * The data emitted from the MetaMaskController.store EventEmitter, also used to initialize the MetaMaskController. Available in UI on React state as state.metamask.\n *\n * @typedef MetaMaskState\n * @property {boolean} isInitialized - Whether the first vault has been created.\n * @property {boolean} isUnlocked - Whether the vault is currently decrypted and accounts are available for selection.\n * @property {boolean} isAccountMenuOpen - Represents whether the main account selection UI is currently displayed.\n * @property {Object} identities - An object matching lower-case hex addresses to Identity objects with \"address\" and \"name\" (nickname) keys.\n * @property {Object} unapprovedTxs - An object mapping transaction hashes to unapproved transactions.\n * @property {Array} frequentRpcList - A list of frequently used RPCs, including custom user-provided ones.\n * @property {Array} addressBook - A list of previously sent to addresses.\n * @property {Object} contractExchangeRates - Info about current token prices.\n * @property {Array} tokens - Tokens held by the current user, including their balances.\n * @property {Object} send - TODO: Document\n * @property {boolean} useBlockie - Indicates preferred user identicon format. True for blockie, false for Jazzicon.\n * @property {Object} featureFlags - An object for optional feature flags.\n * @property {boolean} welcomeScreen - True if welcome screen should be shown.\n * @property {string} currentLocale - A locale string matching the user's preferred display language.\n * @property {Object} provider - The current selected network provider.\n * @property {string} provider.rpcUrl - The address for the RPC API, if using an RPC API.\n * @property {string} provider.type - An identifier for the type of network selected, allows MetaMask to use custom provider strategies for known networks.\n * @property {string} network - A stringified number of the current network ID.\n * @property {Object} accounts - An object mapping lower-case hex addresses to objects with \"balance\" and \"address\" keys, both storing hex string values.\n * @property {hex} currentBlockGasLimit - The most recently seen block gas limit, in a lower case hex prefixed string.\n * @property {TransactionMeta[]} currentNetworkTxList - An array of transactions associated with the currently selected network.\n * @property {Object} unapprovedMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedMsgCount - The number of messages in unapprovedMsgs.\n * @property {Object} unapprovedPersonalMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedPersonalMsgCount - The number of messages in unapprovedPersonalMsgs.\n * @property {Object} unapprovedEncryptionPublicKeyMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedEncryptionPublicKeyMsgCount - The number of messages in EncryptionPublicKeyMsgs.\n * @property {Object} unapprovedDecryptMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedDecryptMsgCount - The number of messages in unapprovedDecryptMsgs.\n * @property {Object} unapprovedTypedMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedTypedMsgCount - The number of messages in unapprovedTypedMsgs.\n * @property {number} pendingApprovalCount - The number of pending request in the approval controller.\n * @property {string[]} keyringTypes - An array of unique keyring identifying strings, representing available strategies for creating accounts.\n * @property {Keyring[]} keyrings - An array of keyring descriptions, summarizing the accounts that are available for use, and what keyrings they belong to.\n * @property {string} selectedAddress - A lower case hex string of the currently selected address.\n * @property {string} currentCurrency - A string identifying the user's preferred display currency, for use in showing conversion rates.\n * @property {number} conversionRate - A number representing the current exchange rate from the user's preferred currency to Ether.\n * @property {number} conversionDate - A unix epoch date (ms) for the time the current conversion rate was last retrieved.\n * @property {boolean} forgottenPassword - Returns true if the user has initiated the password recovery screen, is recovering from seed phrase.\n */\n\n/**\n * @typedef VersionedData\n * @property {MetaMaskState} data - The data emitted from MetaMask controller, or used to initialize it.\n * @property {number} version - The latest migration version that has been run.\n */\n\n/**\n * Initializes the MetaMask controller, and sets up all platform configuration.\n *\n * @returns {Promise} Setup complete.\n */\nasync function initialize() {\n  const initState = await loadStateFromPersistence();\n  const initLangCode = await getFirstPreferredLangCode();\n  await setupController(initState, initLangCode);\n  log.info('MetaMask initialization complete.');\n}\n\n//\n// State and Persistence\n//\n\n/**\n * Loads any stored data, prioritizing the latest storage strategy.\n * Migrates that data schema in case it was last loaded on an older version.\n *\n * @returns {Promise<MetaMaskState>} Last data emitted from previous instance of MetaMask.\n */\nasync function loadStateFromPersistence() {\n  // migrations\n  const migrator = new Migrator({ migrations });\n  migrator.on('error', console.warn);\n\n  // read from disk\n  // first from preferred, async API:\n  versionedData =\n    (await localStore.get()) || migrator.generateInitialState(firstTimeState);\n\n  // check if somehow state is empty\n  // this should never happen but new error reporting suggests that it has\n  // for a small number of users\n  // https://github.com/metamask/metamask-extension/issues/3919\n  if (versionedData && !versionedData.data) {\n    // unable to recover, clear state\n    versionedData = migrator.generateInitialState(firstTimeState);\n    sentry.captureMessage('MetaMask - Empty vault found - unable to recover');\n  }\n\n  // report migration errors to sentry\n  migrator.on('error', (err) => {\n    // get vault structure without secrets\n    const vaultStructure = getObjStructure(versionedData);\n    sentry.captureException(err, {\n      // \"extra\" key is required by Sentry\n      extra: { vaultStructure },\n    });\n  });\n\n  // migrate data\n  versionedData = await migrator.migrateData(versionedData);\n  if (!versionedData) {\n    throw new Error('MetaMask - migrator returned undefined');\n  }\n\n  // write to disk\n  if (localStore.isSupported) {\n    localStore.set(versionedData);\n  } else {\n    // throw in setTimeout so as to not block boot\n    setTimeout(() => {\n      throw new Error('MetaMask - Localstore not supported');\n    });\n  }\n\n  // return just the data\n  return versionedData.data;\n}\n\n/**\n * Initializes the MetaMask Controller with any initial state and default language.\n * Configures platform-specific error reporting strategy.\n * Streams emitted state updates to platform-specific storage strategy.\n * Creates platform listeners for new Dapps/Contexts, and sets up their data connections to the controller.\n *\n * @param {Object} initState - The initial state to start the controller with, matches the state that is emitted from the controller.\n * @param {string} initLangCode - The region code for the language preferred by the current user.\n * @returns {Promise} After setup is complete.\n */\nfunction setupController(initState, initLangCode) {\n  //\n  // MetaMask Controller\n  //\n\n  const controller = new MetamaskController({\n    infuraProjectId: process.env.INFURA_PROJECT_ID,\n    // User confirmation callbacks:\n    showUserConfirmation: triggerUi,\n    openPopup,\n    // initial state\n    initState,\n    // initial locale code\n    initLangCode,\n    // platform specific api\n    platform,\n    notificationManager,\n    extension,\n    getRequestAccountTabIds: () => {\n      return requestAccountTabIds;\n    },\n    getOpenMetamaskTabsIds: () => {\n      return openMetamaskTabsIDs;\n    },\n  });\n\n  setupEnsIpfsResolver({\n    getCurrentChainId: controller.networkController.getCurrentChainId.bind(\n      controller.networkController,\n    ),\n    getIpfsGateway: controller.preferencesController.getIpfsGateway.bind(\n      controller.preferencesController,\n    ),\n    provider: controller.provider,\n  });\n\n  // setup state persistence\n  pump(\n    storeAsStream(controller.store),\n    debounce(1000),\n    storeTransformStream(versionifyData),\n    createStreamSink(persistData),\n    (error) => {\n      log.error('MetaMask - Persistence pipeline failed', error);\n    },\n  );\n\n  /**\n   * Assigns the given state to the versioned object (with metadata), and returns that.\n   *\n   * @param {Object} state - The state object as emitted by the MetaMaskController.\n   * @returns {VersionedData} The state object wrapped in an object that includes a metadata key.\n   */\n  function versionifyData(state) {\n    versionedData.data = state;\n    return versionedData;\n  }\n\n  let dataPersistenceFailing = false;\n\n  async function persistData(state) {\n    if (!state) {\n      throw new Error('MetaMask - updated state is missing');\n    }\n    if (!state.data) {\n      throw new Error('MetaMask - updated state does not have data');\n    }\n    if (localStore.isSupported) {\n      try {\n        await localStore.set(state);\n        if (dataPersistenceFailing) {\n          dataPersistenceFailing = false;\n        }\n      } catch (err) {\n        // log error so we dont break the pipeline\n        if (!dataPersistenceFailing) {\n          dataPersistenceFailing = true;\n          captureException(err);\n        }\n        log.error('error setting state in local store:', err);\n      }\n    }\n  }\n\n  //\n  // connect to other contexts\n  //\n  extension.runtime.onConnect.addListener(connectRemote);\n  extension.runtime.onConnectExternal.addListener(connectExternal);\n\n  const metamaskInternalProcessHash = {\n    [ENVIRONMENT_TYPE_POPUP]: true,\n    [ENVIRONMENT_TYPE_NOTIFICATION]: true,\n    [ENVIRONMENT_TYPE_FULLSCREEN]: true,\n  };\n\n  const metamaskBlockedPorts = ['trezor-connect'];\n\n  const isClientOpenStatus = () => {\n    return (\n      popupIsOpen ||\n      Boolean(Object.keys(openMetamaskTabsIDs).length) ||\n      notificationIsOpen\n    );\n  };\n\n  const onCloseEnvironmentInstances = (isClientOpen, environmentType) => {\n    // if all instances of metamask are closed we call a method on the controller to stop gasFeeController polling\n    if (isClientOpen === false) {\n      controller.onClientClosed();\n      // otherwise we want to only remove the polling tokens for the environment type that has closed\n    } else {\n      // in the case of fullscreen environment a user might have multiple tabs open so we don't want to disconnect all of\n      // its corresponding polling tokens unless all tabs are closed.\n      if (\n        environmentType === ENVIRONMENT_TYPE_FULLSCREEN &&\n        Boolean(Object.keys(openMetamaskTabsIDs).length)\n      ) {\n        return;\n      }\n      controller.onEnvironmentTypeClosed(environmentType);\n    }\n  };\n\n  /**\n   * A runtime.Port object, as provided by the browser:\n   *\n   * @see https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/runtime/Port\n   * @typedef Port\n   * @type Object\n   */\n\n  /**\n   * Connects a Port to the MetaMask controller via a multiplexed duplex stream.\n   * This method identifies trusted (MetaMask) interfaces, and connects them differently from untrusted (web pages).\n   *\n   * @param {Port} remotePort - The port provided by a new context.\n   */\n  function connectRemote(remotePort) {\n    const processName = remotePort.name;\n    const isMetaMaskInternalProcess = metamaskInternalProcessHash[processName];\n\n    if (metamaskBlockedPorts.includes(remotePort.name)) {\n      return;\n    }\n\n    if (isMetaMaskInternalProcess) {\n      const portStream = new PortStream(remotePort);\n      // communication with popup\n      controller.isClientOpen = true;\n      controller.setupTrustedCommunication(portStream, remotePort.sender);\n\n      if (processName === ENVIRONMENT_TYPE_POPUP) {\n        popupIsOpen = true;\n        endOfStream(portStream, () => {\n          popupIsOpen = false;\n          const isClientOpen = isClientOpenStatus();\n          controller.isClientOpen = isClientOpen;\n          onCloseEnvironmentInstances(isClientOpen, ENVIRONMENT_TYPE_POPUP);\n        });\n      }\n\n      if (processName === ENVIRONMENT_TYPE_NOTIFICATION) {\n        notificationIsOpen = true;\n\n        endOfStream(portStream, () => {\n          notificationIsOpen = false;\n          const isClientOpen = isClientOpenStatus();\n          controller.isClientOpen = isClientOpen;\n          onCloseEnvironmentInstances(\n            isClientOpen,\n            ENVIRONMENT_TYPE_NOTIFICATION,\n          );\n        });\n      }\n\n      if (processName === ENVIRONMENT_TYPE_FULLSCREEN) {\n        const tabId = remotePort.sender.tab.id;\n        openMetamaskTabsIDs[tabId] = true;\n\n        endOfStream(portStream, () => {\n          delete openMetamaskTabsIDs[tabId];\n          const isClientOpen = isClientOpenStatus();\n          controller.isClientOpen = isClientOpen;\n          onCloseEnvironmentInstances(\n            isClientOpen,\n            ENVIRONMENT_TYPE_FULLSCREEN,\n          );\n        });\n      }\n    } else {\n      if (remotePort.sender && remotePort.sender.tab && remotePort.sender.url) {\n        const tabId = remotePort.sender.tab.id;\n        const url = new URL(remotePort.sender.url);\n        const { origin } = url;\n\n        remotePort.onMessage.addListener((msg) => {\n          if (msg.data && msg.data.method === 'eth_requestAccounts') {\n            requestAccountTabIds[origin] = tabId;\n          }\n        });\n      }\n      connectExternal(remotePort);\n    }\n  }\n\n  // communication with page or other extension\n  function connectExternal(remotePort) {\n    const portStream = new PortStream(remotePort);\n    controller.setupUntrustedCommunication({\n      connectionStream: portStream,\n      sender: remotePort.sender,\n    });\n  }\n\n  //\n  // User Interface setup\n  //\n\n  updateBadge();\n  controller.txController.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.messageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.personalMessageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.decryptMessageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.encryptionPublicKeyManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.typedMessageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.appStateController.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n\n  controller.controllerMessenger.subscribe(\n    METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,\n    updateBadge,\n  );\n\n  /**\n   * Updates the Web Extension's \"badge\" number, on the little fox in the toolbar.\n   * The number reflects the current number of pending transactions or message signatures needing user approval.\n   */\n  function updateBadge() {\n    let label = '';\n    const count = getUnapprovedTransactionCount();\n    if (count) {\n      label = String(count);\n    }\n    extension.browserAction.setBadgeText({ text: label });\n    extension.browserAction.setBadgeBackgroundColor({ color: '#037DD6' });\n  }\n\n  function getUnapprovedTransactionCount() {\n    const unapprovedTxCount = controller.txController.getUnapprovedTxCount();\n    const { unapprovedMsgCount } = controller.messageManager;\n    const { unapprovedPersonalMsgCount } = controller.personalMessageManager;\n    const { unapprovedDecryptMsgCount } = controller.decryptMessageManager;\n    const {\n      unapprovedEncryptionPublicKeyMsgCount,\n    } = controller.encryptionPublicKeyManager;\n    const { unapprovedTypedMessagesCount } = controller.typedMessageManager;\n    const pendingApprovalCount = controller.approvalController.getTotalApprovalCount();\n    const waitingForUnlockCount =\n      controller.appStateController.waitingForUnlock.length;\n    return (\n      unapprovedTxCount +\n      unapprovedMsgCount +\n      unapprovedPersonalMsgCount +\n      unapprovedDecryptMsgCount +\n      unapprovedEncryptionPublicKeyMsgCount +\n      unapprovedTypedMessagesCount +\n      pendingApprovalCount +\n      waitingForUnlockCount\n    );\n  }\n\n  notificationManager.on(\n    NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,\n    ({ automaticallyClosed }) => {\n      if (!automaticallyClosed) {\n        rejectUnapprovedNotifications();\n      } else if (getUnapprovedTransactionCount() > 0) {\n        triggerUi();\n      }\n    },\n  );\n\n  function rejectUnapprovedNotifications() {\n    Object.keys(\n      controller.txController.txStateManager.getUnapprovedTxList(),\n    ).forEach((txId) =>\n      controller.txController.txStateManager.setTxStatusRejected(txId),\n    );\n    controller.messageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.messageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE_SIG,\n        ),\n      );\n    controller.personalMessageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.personalMessageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE_SIG,\n        ),\n      );\n    controller.typedMessageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.typedMessageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE_SIG,\n        ),\n      );\n    controller.decryptMessageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.decryptMessageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE,\n        ),\n      );\n    controller.encryptionPublicKeyManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.encryptionPublicKeyManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE,\n        ),\n      );\n\n    // Finally, reject all approvals managed by the ApprovalController\n    controller.approvalController.clear(\n      ethErrors.provider.userRejectedRequest(),\n    );\n\n    updateBadge();\n  }\n\n  return Promise.resolve();\n}\n\n//\n// Etc...\n//\n\n/**\n * Opens the browser popup for user confirmation\n */\nasync function triggerUi() {\n  const tabs = await platform.getActiveTabs();\n  const currentlyActiveMetamaskTab = Boolean(\n    tabs.find((tab) => openMetamaskTabsIDs[tab.id]),\n  );\n  // Vivaldi is not closing port connection on popup close, so popupIsOpen does not work correctly\n  // To be reviewed in the future if this behaviour is fixed - also the way we determine isVivaldi variable might change at some point\n  const isVivaldi =\n    tabs.length > 0 &&\n    tabs[0].extData &&\n    tabs[0].extData.indexOf('vivaldi_tab') > -1;\n  if (\n    !uiIsTriggering &&\n    (isVivaldi || !popupIsOpen) &&\n    !currentlyActiveMetamaskTab\n  ) {\n    uiIsTriggering = true;\n    try {\n      await notificationManager.showPopup();\n    } finally {\n      uiIsTriggering = false;\n    }\n  }\n}\n\n/**\n * Opens the browser popup for user confirmation of watchAsset\n * then it waits until user interact with the UI\n */\nasync function openPopup() {\n  await triggerUi();\n  await new Promise((resolve) => {\n    const interval = setInterval(() => {\n      if (!notificationIsOpen) {\n        clearInterval(interval);\n        resolve();\n      }\n    }, SECOND);\n  });\n}\n\n// On first install, open a new tab with MetaMask\nextension.runtime.onInstalled.addListener(({ reason }) => {\n  if (\n    reason === 'install' &&\n    !(process.env.METAMASK_DEBUG || process.env.IN_TEST)\n  ) {\n    platform.openExtensionInBrowser();\n  }\n});\n"]}