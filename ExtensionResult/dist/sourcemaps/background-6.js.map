{"version":3,"sources":["node_modules/pull-ws/sink.js","node_modules/pull-ws/source.js","node_modules/libp2p-kad-dht/src/peer-list.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/crypto.js","node_modules/eventemitter3/index.js","node_modules/libp2p-kad-dht/src/peer-distance-list.js","node_modules/libp2p-kad-dht/src/query/workerQueue.js","node_modules/libp2p-kad-dht/src/query/path.js","node_modules/libp2p-kad-dht/src/rpc/handlers/index.js","node_modules/pull-pair/index.js","node_modules/libp2p-secio/src/handshake/crypto.js","node_modules/libp2p-secio/src/etm.js","node_modules/libp2p-secio/src/support.js","node_modules/libp2p-websocket-star/src/errors/index.js","node_modules/socket.io-pull-stream/src/index.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_transform.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_writable.js","node_modules/simple-peer/node_modules/readable-stream/lib/_stream_readable.js","node_modules/parseuri/index.js","node_modules/socket.io-client/lib/on.js","node_modules/component-bind/index.js","node_modules/parseqs/index.js","node_modules/to-array/index.js","node_modules/has-binary2/index.js","node_modules/socket.io-client/node_modules/debug/src/debug.js","node_modules/socket.io-parser/node_modules/isarray/index.js","node_modules/socket.io-parser/is-buffer.js","node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/node_modules/debug/src/browser.js","node_modules/indexof/index.js","node_modules/backo2/index.js","node_modules/engine.io-client/lib/index.js","node_modules/libp2p-ping/src/constants.js","node_modules/libp2p-ping/src/util.js","node_modules/libp2p-floodsub/src/config.js","node_modules/libp2p-pubsub/src/index.js","node_modules/latency-monitor/dist/LatencyMonitor.js","node_modules/libp2p-switch/src/stats/old-peers.js","node_modules/libp2p-switch/src/stats/stat.js","node_modules/libp2p-switch/src/observe-connection.js","node_modules/libp2p-switch/src/connection/incoming.js","node_modules/libp2p-switch/src/constants.js","node_modules/libp2p-switch/src/dialer/queueManager.js","node_modules/libp2p-switch/src/utils.js","node_modules/multistream-select/src/index.js","node_modules/libp2p-switch/src/connection/index.js","node_modules/libp2p-identify/src/index.js","node_modules/libp2p-switch/src/limit-dialer/index.js","node_modules/libp2p-circuit/src/circuit.js","node_modules/ipfs-unixfs-exporter/src/utils/extract-data-from-block.js","node_modules/ipfs-unixfs-exporter/src/utils/validate-offset-and-length.js","node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js","node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/file.js","node_modules/ipfs-unixfs-exporter/src/utils/find-cid-in-shard.js","node_modules/ipfs-utils/node_modules/readable-stream/errors-browser.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/ipfs-utils/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/ipfs-unixfs-importer/src/utils/persist.js","node_modules/ipfs-unixfs-importer/src/dir-sharded.js","node_modules/ipfs-unixfs-importer/src/dag-builder/file/flat.js","node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js","node_modules/ipfs-unixfs-importer/src/dag-builder/file/trickle.js","node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.js","node_modules/ipfs-unixfs-importer/src/chunker/rabin.js","node_modules/ipfs-mfs/src/core/utils/hamt-utils.js","node_modules/promise-timeout/index.js","node_modules/observable-webworkers/lib/index.js","node_modules/mortice/lib/node.js","node_modules/mortice/lib/browser.js","node_modules/@metamask/key-tree/node_modules/bip39/src/index.js","node_modules/encoding-down/node_modules/abstract-leveldown/next-tick-browser.js","node_modules/encoding-down/node_modules/level-supports/index.js","node_modules/libp2p-crypto/node_modules/secp256k1/lib/js/ecjpoint.js","node_modules/libp2p-crypto/node_modules/secp256k1/lib/js/bn/optimized.js","node_modules/drbg.js/lib/hash-info.json","node_modules/node-forge/lib/pss.js","node_modules/node-forge/lib/mgf.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/utils.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/blake.js","node_modules/ipfs-bitswap/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/pull-reader/state.js","node_modules/libp2p-record/node_modules/multihashing-async/src/index.js","node_modules/pull-ws/ready.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/utils.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/blake.js","node_modules/libp2p-kad-dht/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/libp2p-kad-dht/src/peer-queue.js","node_modules/libp2p-kad-dht/src/rpc/handlers/ping.js","node_modules/libp2p-kad-dht/src/rpc/handlers/put-value.js","node_modules/libp2p-kad-dht/src/rpc/handlers/add-provider.js","node_modules/libp2p-kad-dht/src/rpc/handlers/find-node.js","node_modules/libp2p-kad-dht/src/rpc/handlers/get-value.js","node_modules/libp2p-kad-dht/src/rpc/handlers/get-providers.js","node_modules/libp2p-secio/src/handshake/secio.proto.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/index.js","node_modules/data-queue/index.js","node_modules/socket.io-pull-stream/node_modules/uuid/index.js","node_modules/socket.io-pull-stream/node_modules/debug/src/browser.js","node_modules/simple-peer/node_modules/readable-stream/errors-browser.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/simple-peer/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/has-binary2/node_modules/isarray/index.js","node_modules/socket.io-client/node_modules/ms/index.js","node_modules/socket.io-parser/node_modules/debug/src/debug.js","node_modules/engine.io-parser/lib/browser.js","node_modules/engine.io-client/lib/socket.js","node_modules/libp2p-pubsub/src/message/sign.js","node_modules/libp2p-pubsub/src/utils.js","node_modules/libp2p-pubsub/src/peer.js","node_modules/libp2p-pubsub/src/message/index.js","node_modules/time-cache/src/index.js","node_modules/latency-monitor/dist/VisibilityChangeEmitter.js","node_modules/latency-monitor/node_modules/debug/src/browser.js","node_modules/libp2p-switch/node_modules/bignumber.js/bignumber.js","node_modules/retimer/retimer.js","node_modules/libp2p-switch/src/connection/base.js","node_modules/libp2p-switch/src/dialer/queue.js","node_modules/multistream-select/src/constants.js","node_modules/multistream-select/src/listener/match-exact.js","node_modules/multistream-select/src/listener/match-semver.js","node_modules/multistream-select/src/dialer/index.js","node_modules/multistream-select/src/listener/index.js","node_modules/libp2p-identify/src/message.js","node_modules/libp2p-identify/src/listener.js","node_modules/libp2p-identify/src/dialer.js","node_modules/libp2p-switch/src/limit-dialer/queue.js","node_modules/libp2p-circuit/src/circuit/utils.js","node_modules/libp2p-circuit/src/circuit/dialer.js","node_modules/libp2p-circuit/src/listener.js","node_modules/hamt-sharding/src/bucket.js","node_modules/deep-extend/lib/deep-extend.js","node_modules/hamt-sharding/src/index.js","node_modules/async-iterator-batch/index.js","node_modules/bl/bl.js","node_modules/rabin-wasm/src/index.js","node_modules/mortice/lib/constants.js","node_modules/shortid/index.js","node_modules/@metamask/key-tree/node_modules/bip39/src/_wordlists.js","node_modules/xtend/mutable.js","node_modules/node-forge/lib/mgf1.js","node_modules/libp2p-record/node_modules/multihashing-async/src/crypto.js","node_modules/heap/index.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/crypto.js","node_modules/socket.io-pull-stream/node_modules/uuid/v1.js","node_modules/socket.io-pull-stream/node_modules/uuid/v4.js","node_modules/socket.io-pull-stream/node_modules/debug/src/common.js","node_modules/socket.io-parser/node_modules/ms/index.js","node_modules/engine.io-parser/lib/keys.js","node_modules/engine.io-parser/lib/utf8.js","node_modules/arraybuffer.slice/index.js","node_modules/after/index.js","node_modules/blob/index.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/engine.io-client/lib/transport.js","node_modules/engine.io-client/node_modules/debug/src/browser.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/libp2p-pubsub/src/message/rpc.proto.js","node_modules/libp2p-pubsub/src/message/topic-descriptor.proto.js","node_modules/lodash.throttle/index.js","node_modules/latency-monitor/node_modules/debug/src/debug.js","node_modules/retimer/time-browser.js","node_modules/multistream-select/node_modules/semver/semver.js","node_modules/multistream-select/src/util.js","node_modules/multistream-select/src/select.js","node_modules/multistream-select/src/listener/ls-handler.js","node_modules/multistream-select/src/listener/select-handler.js","node_modules/libp2p-circuit/src/protocol/index.js","node_modules/libp2p-circuit/src/multicodec.js","node_modules/libp2p-circuit/src/circuit/stream-handler.js","node_modules/libp2p-circuit/src/circuit/stop.js","node_modules/libp2p-circuit/src/circuit/hop.js","node_modules/sparse-array/index.js","node_modules/hamt-sharding/src/consumable-hash.js","node_modules/bl/node_modules/readable-stream/readable-browser.js","node_modules/rabin-wasm/src/rabin.js","node_modules/rabin-wasm/dist/rabin-wasm.js","node_modules/shortid/lib/index.js","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/italian.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/french.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/english.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/korean.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/chinese_simplified.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/czech.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/spanish.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/chinese_traditional.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/japanese.json","node_modules/@metamask/key-tree/node_modules/bip39/src/wordlists/portuguese.json","node_modules/libp2p-record/node_modules/multihashing-async/src/utils.js","node_modules/libp2p-record/node_modules/multihashing-async/src/blake.js","node_modules/libp2p-record/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/heap/lib/heap.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/utils.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/crypto-sha1-2-browser.js","node_modules/libp2p-secio/node_modules/multihashing-async/src/blake.js","node_modules/socket.io-pull-stream/node_modules/uuid/lib/rng-browser.js","node_modules/socket.io-pull-stream/node_modules/uuid/lib/bytesToUuid.js","node_modules/engine.io-client/node_modules/debug/src/debug.js","node_modules/engine.io-client/lib/xmlhttprequest.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/latency-monitor/node_modules/ms/index.js","node_modules/async/some.js","node_modules/hamt-sharding/src/consumable-buffer.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/pipeline.js","node_modules/bl/node_modules/readable-stream/lib/_stream_transform.js","node_modules/bl/node_modules/readable-stream/lib/_stream_duplex.js","node_modules/bl/node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/bl/node_modules/readable-stream/lib/_stream_writable.js","node_modules/bl/node_modules/readable-stream/lib/_stream_readable.js","node_modules/assemblyscript/lib/loader/index.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/build.js","node_modules/engine.io-client/node_modules/ms/index.js","node_modules/engine.io-client/lib/globalThis.browser.js","node_modules/has-cors/index.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/component-inherit/index.js","node_modules/yeast/index.js","node_modules/bl/node_modules/readable-stream/errors-browser.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/state.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/from-browser.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/buffer_list.js","node_modules/bl/node_modules/readable-stream/lib/internal/streams/async_iterator.js","node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/generate.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/nanoid/format.browser.js","app/scripts/background.js"],"names":["ready","require","nextTick","setImmediate","process","module","exports","socket","opts","read","closeOnEnd","onClose","next","end","data","readyState","addEventListener","ev","wasClean","code","err","Error","event","close","send","Buffer","cb","receiver","ended","buffer","started","evt","obj","ArrayBuffer","constructor","name","byteLength","from","push","abort","length","shift","this","list","info","has","match","find","i","id","isEqual","Boolean","toArray","slice","pop","sha3","murmur3","utils","sha","toCallback","toBuf","fromString","fromNumberTo32BitBuf","sha1","sha2256","sha2512","sha3512","sha3_512","sha3384","sha3_384","sha3256","sha3_256","sha3224","sha3_224","shake128","shake_128","shake256","shake_256","keccak224","keccak_224","keccak256","keccak_256","keccak384","keccak_384","keccak512","keccak_512","murmur3128","x64","hash128","murmur332","x86","hash32","addBlake","dblSha2256","buf","firstHash","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","TypeError","listener","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","call","getOwnPropertySymbols","concat","listeners","handlers","l","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","distance","map","originDhtKey","capacity","peerDistances","peers","pd","peerId","add","callback","equals","convertPeerId","dhtKey","el","sort","a","b","compare","anyCloser","peerIds","dhtKeys","furthestDistance","keyDistance","queue","promisify","promiseToCallback","dht","run","path","log","concurrency","setupQueue","execution","q","peer","processNext","error","stop","drain","unsaturated","running","fill","kill","workers","filter","w","reject","resolve","async","execPromise","Promise","assign","peersToQuery","dequeue","peersSeen","continueQuerying","continueQueryingError","state","execError","execQuery","queryComplete","pathComplete","res","queryError","queryFunc","errors","peersQueried","closerPeers","all","closer","_isSelf","peerBook","put","_peerDiscovered","addPeerToQuery","PeerQueue","withTimeout","initialPeers","addInitialPeer","fromKey","query","key","workerQueue","enqueue","T","TYPES","GET_VALUE","PUT_VALUE","FIND_NODE","ADD_PROVIDER","GET_PROVIDERS","PING","type","_read","waiting","source","sink","_waiting","protons","PeerId","crypto","parallel","waterfall","debug","pbm","support","createProposal","proposal","out","rand","randomBytes","pubkey","local","public","bytes","exchanges","join","ciphers","hashes","proposalEncoded","Propose","encode","createExchange","keys","generateEphemeralKeyPair","protocols","curveT","ephemeralKey","shared","generate","genSharedKey","selectionOut","in","sign","sig","exchange","epubkey","signature","Exchange","identify","msg","decode","remote","unmarshalPublicKey","createFromPubKey","toString","remoteId","toB58String","selectProtocols","pubKeyBytes","nonce","split","selectBest","selected","order","cipherT","hashT","verify","selectionIn","sigOk","generateKeys","secret","keyStretcher","k1","k2","_cb","makeMacAndCipher","verifyNonce","n2","n1","pull","asyncMap","lp","lpOpts","fixed","ensureBuffer","c","createBoxStream","cipher","mac","chunk","encrypt","digest","createUnboxStream","decipher","macSize","mark","macd","expected","decrypt","decrypted","mh","values","collect","theBest","p1","p2","first","second","firstCandidate","secondCandidate","target","hash","hmac","makeMac","macKey","cipherType","iv","aes","makeCipher","cipherKey","macAndCipher","oh1","oh2","write","shake","reader","decodeFromReader","ERR_WS_STAR_WEBSOCKET_CONNECTION","Queue","uuid","sioname","_log","doCodec","codec","e","console","codecs","hex","v","plain","getCodec","co","sio","opt","createSink","sioplog","bind","_","doErr","append","loop","get","val","SIOSink","createSource","unlisten","SIOSource","createProxy","tsio","ERR_STREAM_PREMATURE_CLOSE","codes","noop","eos","stream","called","_len","_key","readable","writable","onlegacyfinish","onfinish","writableEnded","_writableState","finished","readableEnded","_readableState","endEmitted","onend","onerror","onclose","onrequest","req","setHeader","isRequest","_require$codes","ERR_MISSING_ARGS","ERR_STREAM_DESTROYED","destroyer","reading","writing","closed","destroyed","destroy","pipe","to","popCallback","streams","isArray","destroys","forEach","reduce","PassThrough","Transform","options","_transform","encoding","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","Duplex","afterTransform","er","ts","_transformState","transforming","writecb","writechunk","rs","needReadable","highWaterMark","needTransform","writeencoding","sync","transform","flush","_flush","prefinish","_this","done","_write","n","_destroy","err2","objectKeys","Readable","Writable","method","allowHalfOpen","onEndNT","self","defineProperty","enumerable","getBuffer","set","value","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","Stream","OurUint8Array","global","Uint8Array","realHasInstance","destroyImpl","getHighWaterMark","ERR_INVALID_ARG_TYPE","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","errorOrDestroy","nop","isDuplex","objectMode","writableObjectMode","finalCalled","needDrain","ending","noDecode","decodeStrings","defaultEncoding","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","emitClose","autoDestroy","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","rState","current","Symbol","hasInstance","Function","object","ret","isBuffer","_uint8ArrayToBuffer","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","toLowerCase","indexOf","endWritable","_undestroy","undestroy","ReadableState","EElistenerCount","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","readableObjectMode","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","unshift","isPaused","setEncoding","enc","p","head","content","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","resume","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","xs","x","parseInt","nOrig","doRead","dest","pipeOpts","src","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","pipeOnDrain","pause","prependListener","dests","index","splice","wrap","asyncIterator","_fromList","iterable","re","parts","str","substring","replace","m","exec","uri","host","authority","ipv6uri","pathNames","regx","substr","queryKey","$0","$1","$2","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","array","withNativeBlob","Blob","withNativeFile","File","hasBinary","toJSON","createDebug","namespace","prevTime","enabled","curr","Date","ms","diff","prev","coerce","format","formatter","formatters","formatArgs","logFn","useColors","color","charCodeAt","colors","Math","abs","selectColor","init","instances","stack","message","disable","enable","namespaces","save","skips","RegExp","instance","test","humanize","arr","withNativeBuffer","withNativeArrayBuffer","isView","_deconstructPacket","buffers","placeholder","_placeholder","num","newData","_reconstructPacket","deconstructPacket","packet","packetData","pack","attachments","reconstructPacket","removeBlobs","pendingBlobs","bloblessData","_removeBlobs","curKey","containingObject","fileReader","FileReader","onload","result","readAsArrayBuffer","load","r","storage","env","DEBUG","lastC","removeItem","window","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","chrome","localStorage","localstorage","JSON","stringify","Backoff","min","max","factor","jitter","attempts","duration","pow","random","deviation","floor","reset","setMin","setMax","setJitter","parser","PROTOCOL","PING_LENGTH","constants","rnd","multicodec","empty","asyncEach","TimeCache","errcode","Peer","signMessage","debugName","libp2p","super","signMessages","peerInfo","topics","Map","seenCache","_dials","Set","_onConnection","_dialPeer","_addPeer","existing","_removePeer","_references","delete","idB58Str","isConnected","dialProtocol","conn","pubsubStopped","_onDial","attachConnection","protocol","getPeerInfo","_processConnection","_onConnectionEnd","_buildMessage","normalizeOutRpcMessage","publish","messages","subscribe","unsubscribe","start","handle","peerInfos","getAll","unhandle","_createClass","defineProperties","props","descriptor","configurable","Constructor","protoProps","staticProps","_events2","_interopRequireDefault","_get2","_isFunction2","_VisibilityChangeEmitter2","__esModule","default","_classCallCheck","_possibleConstructorReturn","ReferenceError","LatencyMonitor","_EventEmitter","_ref","latencyCheckIntervalMs","dataEmitIntervalMs","asyncTestFn","latencyRandomPercentage","that","_latecyCheckMultiply","_latecyCheckSubtract","hrtime","now","getDeltaMS","startTime","performance","round","_latencyData","_initLatencyData","isBrowser","_visibilityChangeEmitter","pageInFocus","_startTimers","_emitSummary","_stopTimers","isVisible","subClass","superClass","setPrototypeOf","_inherits","_this2","_checkLatencyID","_checkLatency","_emitIntervalID","setInterval","unref","clearTimeout","clearInterval","summary","getSummary","latency","minMs","maxMs","avgMs","totalMs","Number","POSITIVE_INFINITY","lengthMs","_this3","randomness","localData","deltaOffset","ceil","deltaMS","setTimeout","NEGATIVE_INFINITY","LRU","maxSize","patched","remove","Big","MovingAverage","retimer","initialCounters","_options","_queue","_stats","_frequencyLastTime","_frequencyAccumulators","_movingAverages","_update","intervals","movingAverageIntervals","k","interval","_resetComputeTimeout","_timeout","snapshot","movingAverages","counter","inc","reschedule","_nextTimeout","urgency","computeThrottleMaxQueueSize","computeThrottleTimeout","op","_applyOp","_updateFrequency","latestTime","timeDiff","_updateFrequencyFor","timeDiffMS","hz","movingAverageInterval","movingAverage","plus","Connection","transport","connection","observer","setPeerInfo","pi","incoming","outgoing","FSM","multistream","withIs","BaseConnection","_switch","transportKey","_peerInfo","theirPeerInfo","theirB58Id","ourPeerInfo","switch","protocolMuxer","msListener","Listener","_state","DISCONNECTED","disconnect","DIALED","privatize","PRIVATIZING","PRIVATIZED","ENCRYPTING","ENCRYPTED","upgrade","UPGRADING","MUXED","DISCONNECTING","_onDisconnected","_onPrivatizing","_onPrivatized","_onEncrypting","_onUpgrading","tag","addHandler","_conn","className","symbolName","BLACK_LIST_TTL","BLACK_LIST_ATTEMPTS","DIAL_TIMEOUT","MAX_COLD_CALLS","MAX_PARALLEL_DIALS","QUARTER_HOUR","PRIORITY_HIGH","PRIORITY_LOW","DIAL_ABORTED","_coldCallQueue","_dialingQueues","_queues","_cleanInterval","_clean","dialQueue","blackListed","Infinity","isRunning","_peerBook","targetQueue","getQueue","priority","size","dialer","useFSM","isDialAllowed","nextQueue","clearBlacklist","blackListCount","_onQueueStopped","Identify","msHandle","msSelect","select","identifyDialer","cryptoPeerInfo","observedAddrs","uniqueBy","getValue","Dialer","matchSemver","matchExact","Circuit","errCode","observeConnection","CONNECTION_FAILED","DIAL_SELF","INVALID_STATE_TRANSITION","NO_TRANSPORTS_REGISTERED","maybeUnexpectedEnd","muxer","startState","dial","DIALING","CONNECTED","ABORTED","ERRORED","_onDialing","_onDialed","conns","_onDisconnecting","_onAborted","_onErrored","_onStateError","getState","newStream","_protocolHandshake","hasTransports","tKeys","availableTransports","circuitEnabled","transports","includes","nextTransport","multiaddrs","tasks","msDialer","observedConn","encryptedConn","muxers","_didUpgrade","nextMuxer","_identify","results","msConn","tryEach","DialQueue","perPeerLimit","dialTimeout","queues","dialMany","addrs","token","cancel","dialSingle","addr","ps","mafmt","multiaddr","CircuitDialer","utilsFactory","createListener","swarm","relays","canHop","relayPeers","_dialSwarmRelays","relay","segment","relaySegment","ma","peerInfoFromMa","_dialRelay","handler","matches","block","blockStart","requestedStart","requestedEnd","blockEnd","alloc","offset","cid","node","unixfs","depth","ipld","Links","links","link","Hash","Name","listDirectory","file","extractDataFromBlock","validateOffsetAndLength","UnixFS","emitBytes","streamPosition","unmarshal","Data","childStart","childLink","childEnd","blockSizes","child","fileSize","Bucket","DirSharded","toPrefix","position","toUpperCase","padStart","findShardCid","bucket","rootBucket","hashFn","hamtDepth","lastBucket","pos","_putObjectAt","_findNewBucketAndPos","bucketPath","_parent","reverse","toBucketPath","_posAtParent","entryPrefix","entryName","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","String","actual","determiner","search","this_len","endsWith","arg","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","isFinite","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_defineProperty","_defineProperties","inspect","custom","tail","s","allocUnsafe","copy","hasStrings","_getString","_getBuffer","nb","getOwnPropertyDescriptors","_objectSpread","customInspect","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","then","wrapForNext","_Object$create","iterator","mc","cidVersion","isNaN","hashAlg","DAGLink","DAGNode","multihashing","Dir","persist","extend","justHash","defaultOptions","children","_children","labelPrefix","isBucket","shard","subShard","dir","flushedDir","label","Size","bitField","fanout","tableSize","hashType","marshal","_bucket","childCount","leafCount","directChildrenCount","childrenCount","onlyChild","eachLeafSeries","batch","roots","reduceToParents","chunked","maxChildrenPerNode","root","iteration","maxDepth","subTree","Root","layerRepeat","layer","isFull","addChild","SubTree","trickleStream","currentDepth","parent","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","bl","currentLength","emitted","maxChunkSize","newBl","shallowSlice","rabin","jsRabin","avg","minChunkSize","avgChunkSize","sizepow","log2","bits","polynomial","pending","sizes","fingerprint","recreateHamtLevel","parentBucket","positionAtParent","addLinksToHamtBucket","TSize","generatePath","fileName","rootNode","currentBucket","nextSegment","updateHamtDirectory","hashOnly","createShard","contents","parentKey","dirty","flat","TimeoutError","timeout","timeoutMillis","race","observable","worker","dispatchEvent","port","removeEventListener","shortid","WORKER_REQUEST_READ_LOCK","WORKER_RELEASE_READ_LOCK","MASTER_GRANT_READ_LOCK","WORKER_REQUEST_WRITE_LOCK","WORKER_RELEASE_WRITE_LOCK","MASTER_GRANT_WRITE_LOCK","cluster","handleWorkerLockRequest","masterEvent","requestType","releaseType","grantType","requestEvent","identifier","releaseEventListener","releaseEvent","makeWorkerLockRequest","catch","isMaster","singleProcess","isWorker","readLock","writeLock","postMessage","responseEvent","createHash","pbkdf2_1","_wordlists_1","DEFAULT_WORDLIST","_default","INVALID_MNEMONIC","INVALID_ENTROPY","WORDLIST_REQUIRED","normalize","lpad","padString","binaryToByte","bin","bytesToBinary","deriveChecksumBits","entropyBuffer","CS","update","salt","password","mnemonicToEntropy","mnemonic","wordlist","words","word","dividerIndex","entropyBits","checksumBits","entropyBytes","entropy","entropyToMnemonic","binary","mnemonicToSeedSync","mnemonicBuffer","saltBuffer","pbkdf2Sync","mnemonicToSeed","saltMixin","iterations","keylen","pbkdf2","derivedKey","pbkdf2Promise","generateMnemonic","strength","rng","validateMnemonic","setDefaultWordlist","language","wordlists","getDefaultWordlist","lang","every","_wordlists_2","xtend","manifest","bufferKeys","snapshots","permanence","seek","status","createIfMissing","errorIfExists","deferredOpen","openCallback","promises","encodings","additionalMethods","BN","ECJPoint","y","z","one","zero","zOne","fromNumber","neg","inf","redNeg","pz2","redSqr","z2","u1","redMul","u2","s1","s2","h","redSub","isZero","dbl","h2","h3","nx","redIAdd","redISub","mixedAdd","toECJPoint","ny","nz","xx","yy","yyyy","redAdd","t","yyyy8","d","f","c8","dblp","point","umulTo10x10","num1","num2","lo","mid","hi","o","a0","al0","ah0","al1","ah1","al2","ah2","al3","ah3","al4","ah4","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","securityStrength","outlen","seedlen","sha224","sha256","sha384","sha512","forge","pss","md","mgf","saltLength","sLen","hLen","digestLength","salt_","util","createBuffer","prng","pssobj","modBits","emBits","emLen","mHash","getBytes","getBytesSync","m_","ByteBuffer","fillWithByte","putBytes","putByte","db","maskLen","dbMask","maskedDB","fromCharCode","mask","em","checkLen","mgf1","doWork","input","other","_input","number","blake","blake2b","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sInit","blake2sUpdate","blake2sFinal","makeB2Hash","hf","ctx","nodeify","webCrypto","subtle","webkitSubtle","msCrypto","getWebCrypto","webCryptoHash","oncomplete","raw","_length","_buffers","multihash","Multihashing","func","coerceCode","functions","validate","newHash","cleanup","handleOpen","handleErr","Heap","static","keyBuffer","convertBuffer","heap","xorCompare","logger","record","errMsg","_verifyRecordLocally","timeReceived","bufferToKey","datastore","serialize","CID","foundProvider","providerPeers","toBaseEncodedString","providers","addProvider","Message","_betterPeersToQuery","response","clusterLevel","Record","isPublicKeyKey","fromPublicKeyKey","pubKey","_checkLocalDatastore","PeerInfo","dsKey","exists","getProviders","ed","unleak","prepend","height","v1","v4","_typeof","_console","setItem","getItem","__nwjs","plural","parseFloat","parse","long","fmtShort","base64encoder","sliceBuffer","after","utf8","isAndroid","isPhantomJS","dontSendBlobs","packets","open","ping","pong","packetslist","ary","each","eachWithIndex","encodePacket","supportsBinary","utf8encode","encodeBase64Packet","contentArray","resultBuffer","encodeArrayBuffer","fr","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","strict","b64data","b64","readAsDataURL","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","tryDecode","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","acc","resultArray","bufferIndex","isString","ab","view","lenStr","binaryIdentifier","lengthAry","bufferTail","tailArray","msgLength","total","Emitter","parseuri","parseqs","Socket","hostname","secure","location","agent","forceJSONP","jsonp","forceBase64","enablesXDR","withCredentials","timestampParam","timestampRequests","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","rejectUnauthorized","forceNode","isReactNative","product","extraHeaders","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","Transport","createTransport","clone","EIO","sid","requestTimeout","setTransport","onDrain","onPacket","onError","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","freezeTransport","onTransportClose","onupgrade","onOpen","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","compress","waitForUpgrade","cleanupAndClose","reason","desc","filteredUpgrades","SignPrefix","privKey","bs58","randomSeqno","msgId","seqno","anyMatch","bHas","ensureArray","maybeArray","normalizeInRpcMessages","normalizeOutRpcMessages","Pushable","RPC","isWritable","onEnd","_sendRawSubscriptions","subs","topic","topicID","subscriptions","sendSubscriptions","sendUnsubscriptions","sendMessages","msgs","updateSubscriptions","changes","subopt","rpcProto","topicDescriptorProto","rpc","td","SubOpts","throttle","validity","entries","sweep","getTime","getTimeElapsed","timestamp","VisibilityChangeEmitter","_initializeVisibilityVarNames","_addVisibilityChangeListener","hidden","visibilityChange","mozHidden","msHidden","webkitHidden","_hidden","_visibilityChange","_handleVisibilityChange","visible","globalObject","BigNumber","isNumeric","hasSymbol","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","xc","yc","intCheck","isOdd","toExponential","toFixedPoint","zs","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabet","caseChanged","isNum","_isBigNumber","rm","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","getRandomValues","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","dp","Uint32Array","sum","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","d0","d1","d2","exp","n0","toNumber","toPrecision","toStringTag","for","define","amd","Retimer","_started","_rescheduled","_scheduled","_args","_timer","timerWrapper","eventName","protect","protector","ConnectionFSM","ERR_BLACKLISTED","createConnectionWithProtocol","onStopped","_run","blacklist","ttl","minTTL","maxTTL","_getOrCreateConnection","connectionFSM","getOne","didCreate","queuedDial","PROTOCOL_ID","MULTICODEC_NOT_SUPPORTED","myProtocol","senderProtocol","semver","mps","sps","myName","myVersion","senderName","senderVersion","satisfies","varint","take","pullLP","rawConn","ls","lsStream","collectLs","assert","selectHandler","lsHandler","handlerFunc","matchFunc","selectStream","shConn","sh","pInfoSelf","getObservedAddrs","publicKey","msgSend","protocolVersion","agentVersion","listenAddrs","observedAddr","expectedPeerInfo","warn","hasObservedAddr","oa","limit","task","_doWork","_dialWithTimeout","setInnerConn","proto","writeResponse","streamHandler","CircuitRelay","Type","STATUS","getB58String","b58Id","isMultiaddr","getPeerId","isPeerInfo","peerIdB58Str","createFromB58String","isPeerId","isPeerConnected","muxedConns","validateAddrs","dstPeer","HOP","Status","HOP_DST_MULTIADDR_INVALID","STOP_DST_MULTIADDR_INVALID","srcPeer","HOP_SRC_MULTIADDR_INVALID","STOP_SRC_MULTIADDR_INVALID","peerIdFromId","createFromBytes","StreamHandler","relayConns","_dialRelayHelper","strMa","dstConn","CAN_HOP","SUCCESS","dstMa","_negotiateRelay","nextRelay","srcMas","dstPeerId","Stop","Hop","connHandler","stopHandler","hopHandler","hop","listen","request","MALFORMED_MESSAGE","STOP","INVALID_MSG_TYPE","getAddrs","p2pAddrs","peerMa","encapsulate","SparseArray","wrapHash","posAtParent","_popCount","place","_putAt","_findChild","_findPlace","_at","_delAt","compactArray","c2","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","hashValue","newPlace","unset","_level","untake","nodes","output","mappedChildren","isSpecificValue","cloneSpecificValue","deepCloneArray","item","deepExtend","safeGetProperty","property","things","DuplexStream","_bufs","_callback","piper","inherits","_offset","_t","tot","_reverseOffset","blOffset","bufferId","_appendBuffer","dst","dstStart","srcStart","srcEnd","bufoff","startOffset","endOffset","trunc","duplicate","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","methods","readDoubleBE","readDoubleLE","readFloatBE","readFloatLE","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","Rabin","getRabin","windowSize","compiled","czech","chinese_simplified","chinese_traditional","korean","french","italian","spanish","japanese","JA","portuguese","english","EN","seed","putInt32","putBuffer","truncate","_nodeId","_clockseq","bytesToUuid","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","nsecs","dt","tl","tmh","rnds","ii","delimiter","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","ucs2encode","arraybuffer","abv","err_cb","bail","proxy","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","getBlob","mapArrayBufferViews","byteOffset","BlobBuilderConstructor","bb","part","BlobConstructor","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","description","doOpen","doClose","onData","XMLHttpRequest","XHR","JSONP","websocket","polling","xd","isSSL","xdomain","xscheme","FUNC_ERROR_TEXT","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","freeSelf","objectToString","nativeMax","nativeMin","debounce","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","isObject","isObjectLike","isSymbol","SemVer","NODE_DEBUG","SEMVER_SPEC_VERSION","tokens","R","tok","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULLPLAIN","FULL","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","COERCERTL","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","includePrerelease","trim","major","minor","patch","prerelease","build","valid","clean","compareMain","comparePre","compareIdentifiers","compareBuild","release","version1","version2","v2","defaultResult","numeric","anum","bnum","neq","Comparator","comp","ANY","operator","rcompareIdentifiers","compareLoose","versionA","versionB","rcompare","rsort","Range","range","parseRange","isSatisfiable","comparators","remainingComparators","testComparator","otherComparator","intersects","isX","hyphenReplace","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","testSet","allowed","outside","hilo","gtfn","ltefn","ltfn","ecomp","high","low","comparator","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","M","pr","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","some","thisComparators","rangeComparators","thisComparator","rangeComparator","toComparators","maxSatisfying","versions","maxSV","rangeObj","minSatisfying","minSV","minVersion","minver","compver","validRange","ltr","gtr","parsed","r1","r2","rtl","lastIndex","createLogger","rId","printer","writeEncoded","writer","handshake","protos","nProtos","encodingLength","encodedProtos","handlersMap","supportedProtocols","supportedProtocol","sp","matcher","protobuf","maxLength","isValid","getRawConn","series","Success","newConn","active","HOP_CANT_SPEAK_RELAY","srcPeerId","HOP_CANT_RELAY_TO_SELF","noPeer","HOP_NO_CONN_TO_DST","_circuit","_connectToStop","srcSh","HOP_CANT_DIAL_DST","_negotiateStop","dstSh","stopMsg","HOP_CANT_OPEN_DST_STREAM","_dstConn","srcIdStr","dstIdStr","popCountReduce","byte","popCount","_v","sortInternal","valueOnly","elem","_bitArrays","_data","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","_sortData","mapped","reducer","initialValue","finder","found","noCreate","bytePos","_bytePosFor","bitPos","targetLength","randomIndex","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","ConsumableBuffer","InfiniteHash","_value","_hashFn","_depth","_availableBits","_currentBufferIndex","pendingBits","_produceMoreBits","available","availableBits","availableForUntake","totalBits","pipeline","asModule","lengths","Int32Array","lengthsPtr","newArray","pointer","processed","getArray","freeArray","cleanArr","instantiateStreaming","loadWebAssembly","imp","supported","wasm","Response","WebAssembly","clusterWorkerId","seedValue","workerId","characters","newCharacters","shuffled","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","updateItem","_siftdown","_siftup","factory","lastelt","returnitem","_i","_ref1","_results","_results1","_j","los","startpos","newitem","parentpos","childpos","endpos","rightpos","pushpop","peek","contains","insert","top","front","rnds8","byteToHex","bth","hasCORS","globalThis","XDomainRequest","Polling","inherit","JSONPPolling","callbacks","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","doPoll","createElement","insertAt","getElementsByTagName","insertBefore","body","appendChild","area","iframeId","left","setAttribute","complete","initIframe","html","action","submit","attachEvent","onreadystatechange","BrowserWebSocket","NodeWebSocket","yeast","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onopen","onmessage","schema","Request","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onLoad","responseText","contentType","getResponseHeader","responseType","requestsCount","requests","onSuccess","fromError","unloadHandler","_createTester2","_doParallel2","_identity2","START_MASKS","STOP_MASKS","byteBitsToInt","maskFor","_currentBytePos","_currentBitPos","_haveBits","taking","hasBigInt64","BigUint64Array","thisPtr","getStringImpl","U32","U16","ptr","dataOffset","dataRemain","chunkSize","subarray","preInstantiate","imports","baseModule","getString","memory","Uint16Array","mesg","line","colm","trace","postInstantiate","I8","U8","I16","I32","F32","F64","I64","U64","rawExports","memory_allocate","memory_fill","memory_free","setargc","_setargc","checkMem","Int8Array","Int16Array","BigInt64Array","Float32Array","Float64Array","newString","dataLength","unsafe","ctor","elementSize","BYTES_PER_ELEMENT","clz32","computeBufferSize","setLength","newFunction","original","grow","getFunction","wrapFunction","demangle","instantiate","Instance","prop","internalName","classElem","thisValue","getOwnPropertyNames","getter","setter","instantiateBuffer","Module","previousSeed","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","unique","ind","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","nextValue","shuffle","lookup","previousSeconds","seconds","hasXHR2","poll","onPause","callbackfn","decoded","_seed_","loopCounter","randomByte","LN2","step","_endOfStream","_pump","_debounceStream","_loglevel","_extensionizer","_obsStore","_extensionPortStream","_browser","_ethRpcErrors","_app","_time","_metametrics","_migrations","_migrator","_extension","_localStore","_networkStore","_createStreamSink","_notificationManager","_interopRequireWildcard","_metamaskController","_firstTimeState","_getFirstPreferredLangCode","_getObjStructure","_setup","sentry","firstTimeState","setDefaultLevel","METAMASK_DEBUG","platform","notificationManager","METAMASK_NOTIFIER","popupIsOpen","notificationIsOpen","uiIsTriggering","openMetamaskTabsIDs","requestAccountTabIds","inTest","IN_TEST","localStore","versionedData","triggerUi","tabs","getActiveTabs","currentlyActiveMetamaskTab","tab","isVivaldi","extData","showPopup","openPopup","SECOND","metamaskGetState","initState","migrator","migrations","generateInitialState","captureMessage","vaultStructure","captureException","migrateData","isSupported","loadStateFromPersistence","initLangCode","controller","infuraProjectId","showUserConfirmation","extension","getRequestAccountTabIds","getOpenMetamaskTabsIds","versionifyData","getCurrentChainId","networkController","getIpfsGateway","preferencesController","provider","storeAsStream","store","storeTransformStream","persistData","dataPersistenceFailing","runtime","onConnect","connectRemote","onConnectExternal","connectExternal","metamaskInternalProcessHash","ENVIRONMENT_TYPE_POPUP","ENVIRONMENT_TYPE_NOTIFICATION","ENVIRONMENT_TYPE_FULLSCREEN","metamaskBlockedPorts","isClientOpenStatus","onCloseEnvironmentInstances","isClientOpen","environmentType","onClientClosed","onEnvironmentTypeClosed","remotePort","processName","isMetaMaskInternalProcess","portStream","setupTrustedCommunication","sender","tabId","url","URL","origin","onMessage","setupUntrustedCommunication","connectionStream","updateBadge","getUnapprovedTransactionCount","browserAction","setBadgeText","text","setBadgeBackgroundColor","unapprovedTxCount","txController","getUnapprovedTxCount","unapprovedMsgCount","messageManager","unapprovedPersonalMsgCount","personalMessageManager","unapprovedDecryptMsgCount","decryptMessageManager","unapprovedEncryptionPublicKeyMsgCount","encryptionPublicKeyManager","unapprovedTypedMessagesCount","typedMessageManager","approvalController","getTotalApprovalCount","appStateController","waitingForUnlock","rejectUnapprovedNotifications","txStateManager","getUnapprovedTxList","txId","setTxStatusRejected","tx","rejectMsg","REJECT_NOTFICIATION_CLOSE_SIG","REJECT_NOTFICIATION_CLOSE","ethErrors","userRejectedRequest","METAMASK_CONTROLLER_EVENTS","UPDATE_BADGE","controllerMessenger","APPROVAL_STATE_CHANGE","NOTIFICATION_MANAGER_EVENTS","POPUP_CLOSED","automaticallyClosed","setupController","initialize","onInstalled","openExtensionInBrowser"],"mappings":"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CA,WACA,WACA,OACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,WACA,WACA,SACA,UACA,SACA,WACA,WACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,UACA,WACA,WACA,QACA,QACA,WACA,UACA,WACA,WACA,WACA,WACA,SACA,OACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,WACA,OACA,UACA,WACA,QACA,WACA,WACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,OACA,UACA,SACA,WACA,UACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,QACA,WACA,OACA,WACA,UACA,OACA,WACA,SACA,WACA,UACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,QACA,WACA,SACA,YACA,SACA,QACA,SACA,UACA,SACA,UACA,SACA,OACA,UACA,WACA,UACA,QACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,QACA,WACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,OACA,SACA,SACA,OACA,WACA,QACA,WACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,QACA,SACA,UACA,WACA,WACA,SACA,UACA,YACA,WACA,WACA,QACA,WACA,SACA,QACA,UACA,OACA,SACA,UACA,OACA,QACA,QACA,UACA,WACA,UACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,OACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,UACA,QACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,OACA,UACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,UACA,SACA,UACA,YACA,OACA,SACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,QACA,OACA,QACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,QACA,WACA,WACA,QACA,UACA,UACA,YACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,YACA,QACA,OACA,SACA,WACA,SACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,SACA,YACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,UACA,UACA,OACA,QACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,WACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,WACA,SACA,WACA,WACA,WACA,SACA,YACA,UACA,YACA,WACA,YACA,SACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,OACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,OACA,SACA,UACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,UACA,OACA,UACA,OACA,UACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,OACA,QACA,UACA,WACA,QACA,UACA,OACA,UACA,WACA,QACA,UACA,QACA,WACA,UACA,WACA,OACA,UACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,OACA,OACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,WACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,OACA,SACA,QACA,UACA,UACA,WACA,OACA,UACA,UACA,UACA,QACA,UACA,WACA,OACA,UACA,WACA,UACA,WACA,WACA,QACA,UACA,WACA,QACA,UACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,OACA,WACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,QACA,WACA,OACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,OACA,WACA,SACA,SACA,OACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,QACA,UACA,UACA,UACA,QACA,QACA,QACA,UACA,OACA,WACA,OACA,UACA,WACA,SACA,QACA,UACA,SACA,QACA,UACA,WACA,QACA,SACA,UACA,UACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,WACA,WACA,QACA,UACA,UACA,YACA,UACA,UACA,UACA,OACA,WACA,UACA,UACA,QACA,WACA,QACA,WACA,WACA,YACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,QACA,QACA,UACA,SACA,OACA,SACA,WACA,QACA,UACA,UACA,UACA,UACA,QACA,WACA,QACA,WACA,UACA,WACA,UACA,WACA,QACA,SACA,SACA,WACA,OACA,WACA,QACA,UACA,UACA,OACA,WACA,UACA,WACA,QACA,WACA,WACA,QACA,SACA,QACA,UACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,UACA,SACA,SACA,WACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,SACA,WACA,OACA,UACA,WACA,QACA,WACA,UACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,SACA,WACA,QACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,WACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,UACA,SACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,YACA,QACA,WACA,UACA,SACA,UACA,OACA,QACA,WACA,WACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,YACA,OACA,WACA,SACA,OACA,UACA,QACA,WACA,WACA,UACA,UACA,SACA,UACA,OACA,SACA,QACA,OACA,UACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,OACA,WACA,OACA,WACA,SACA,WACA,QACA,OACA,UACA,UACA,QACA,QACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,WACA,WACA,YACA,UACA,QACA,WACA,OACA,SACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,WACA,QACA,WACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,WACA,WACA,WACA,OACA,UACA,QACA,UACA,UACA,OACA,UACA,WACA,UACA,QACA,WACA,OACA,UACA,UACA,UACA,SACA,UACA,YACA,OACA,UACA,UACA,UACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,WACA,UACA,WACA,QACA,WACA,YACA,UACA,WACA,SACA,SACA,QACA,OACA,UACA,YACA,QACA,UACA,YACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,YACA,SACA,WACA,WACA,QACA,UACA,YACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,QACA,UACA,SACA,OACA,UACA,SACA,WACA,OACA,UACA,QACA,YACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,OACA,OACA,SACA,UACA,UACA,YACA,WACA,SACA,UACA,WACA,UACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,OACA,WACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,YACA,YACA,YACA,OACA,UACA,UACA,UACA,UACA,UACA,YACA,UACA,OACA,SACA,WACA,UACA,SACA,QACA,YACA,QACA,UACA,WACA,QACA,QACA,YACA,SACA,QACA,QACA,WACA,YACA,OACA,UACA,WACA,UACA,UACA,QACA,SACA,YACA,UACA,SACA,WACA,UACA,YACA,OACA,WACA,WACA,WACA,UACA,WACA,WACA,SACA,SACA,OACA,QACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,OACA,QACA,OACA,WACA,SACA,UACA,QACA,QACA,QACA,UACA,UACA,UACA,UACA,OACA,YACA,OACA,WACA,UACA,UACA,QACA,OACA,SACA,YACA,WACA,UACA,OACA,SACA,UACA,WACA,QACA,WACA,UACA,WACA,WACA,SACA,UACA,OACA,UACA,SACA,UACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,OACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,UACA,OACA,YACA,SACA,UACA,YACA,QACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,OACA,WACA,UACA,SACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,WACA,SACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,UACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,QACA,UACA,OACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,QACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,OACA,SACA,WACA,QACA,UACA,QACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,QACA,UACA,UACA,OACA,WACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,WACA,YACA,OACA,YACA,QACA,WACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,YACA,SACA,SACA,QACA,UACA,YACA,WACA,OACA,YACA,WACA,WACA,OACA,SACA,WACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,UACA,YACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,UACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,SACA,UACA,UACA,WACA,OACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,YACA,UACA,SACA,OACA,WACA,UACA,SACA,OACA,WACA,SACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,OACA,UACA,UACA,SACA,WACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,QACA,UACA,YACA,SACA,UACA,UACA,SACA,QACA,UACA,YACA,SACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,UACA,SACA,YACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,SACA,WACA,WACA,SACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,YACA,YACA,YACA,UACA,SACA,WACA,YACA,YACA,UACA,WACA,YACA,QACA,YACA,WACA,WACA,OACA,WACA,SACA,QACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,WACA,YACA,UACA,UACA,SACA,YACA,UACA,WACA,UACA,WACA,YACA,QACA,QACA,UACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,YACA,WACA,UACA,QACA,WACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,SACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,WACA,UACA,WACA,OACA,UACA,YACA,UACA,QACA,UACA,UACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,WACA,SACA,WACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,OACA,WACA,WACA,WACA,QACA,QACA,UACA,YACA,SACA,UACA,QACA,UACA,WACA,UACA,QACA,YACA,YACA,UACA,QACA,UACA,QACA,SACA,WACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,OACA,YACA,WACA,UACA,UACA,YACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,SACA,SACA,WACA,QACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,WACA,QACA,WACA,WACA,UACA,SACA,YACA,OACA,UACA,UACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,UACA,WACA,WACA,YACA,OACA,YACA,UACA,UACA,OACA,UACA,UACA,UACA,UACA,YACA,QACA,UACA,UACA,WACA,QACA,OACA,UACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,YACA,UACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,QACA,SACA,YACA,WACA,OACA,UACA,SACA,YACA,QACA,UACA,UACA,YACA,QACA,UACA,OACA,QACA,WACA,UACA,YACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,YACA,SACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,YACA,SACA,UACA,OACA,YACA,YACA,WACA,SACA,QACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,OACA,SACA,UACA,UACA,WACA,QACA,UACA,OACA,UACA,SACA,SACA,WACA,QACA,QACA,WACA,YACA,SACA,YACA,WACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,UACA,OACA,SACA,QACA,SACA,WACA,UACA,WACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,QACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,OACA,YACA,UACA,SACA,SACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,UACA,SACA,SACA,UACA,SACA,SACA,YACA,QACA,SACA,UACA,WACA,WACA,OACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,SACA,OACA,UACA,SACA,YACA,QACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,SACA,OACA,UACA,UACA,UACA,SACA,UACA,OACA,OACA,WACA,SACA,QACA,WACA,UACA,WACA,QACA,UACA,UACA,UACA,SACA,UACA,OACA,UACA,UACA,UACA,QACA,UACA,QACA,QACA,SACA,WACA,SACA,OACA,oPChgEAD,EAAAC,QAAA,CACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,YACA,SACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,QACA,UACA,WACA,QACA,UACA,YACA,WACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,YACA,SACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,WACA,QACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,WACA,UACA,SACA,QACA,YACA,WACA,SACA,SACA,UACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,SACA,YACA,QACA,WACA,WACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,YACA,UACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,UACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,WACA,UACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,UACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,SACA,aaACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,WACA,YACA,WACA,SACA,QACA,UACA,UACA,WACA,QACA,WACA,WACA,UACA,QACA,WACA,SACA,QACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,WACA,SACA,SACA,YACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,WACA,UACA,QACA,UACA,WACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,YACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,SACA,SACA,UACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,YACA,UACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,aACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,YACA,WACA,UACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,UACA,QACA,QACA,UACA,WACA,UACA,WACA,SACA,SACA,WACA,UACA,SACA,SACA,SACA,UACA,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,SACA,YACA,UACA,WACA,WACA,YACA,YACA,SACA,SACA,YACA,WACA,WACA,UACA,WACA,UACA,SACA,WACA,WACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,aACA,UACA,YACA,YACA,SACA,YACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,QACA,WACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,WACA,WACA,aACA,UACA,WACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,aACA,SACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,SACA,YACA,WACA,UACA,UACA,YACA,SACA,SACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,UACA,YACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,YACA,UACA,UACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,QACA,WACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,SACA,SACA,WACA,YACA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,QACA,UACA,WACA,QACA,QACA,QACA,UACA,QACA,UACA,SACA,UACA,WACA,SACA,UACA,QACA,UACA,SACA,QACA,WACA,SACA,UACA,QACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,aACA,SACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,UACA,QACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,SACA,QACA,SACA,YACA,aaACA,WACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,WACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,WACA,SACA,WACA,UACA,UACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,YACA,YACA,UACA,UACA,WACA,QACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,WACA,SACA,WACA,SACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,YACA,UACA,SACA,YACA,UACA,WACA,YACA,aACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,SACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,WACA,YACA,YACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,YACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,QACA,WACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,UACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,aACA,YACA,UACA,UACA,UACA,UACA,QACA,UACA,WACA,UACA,WACA,UACA,UACA,aACA,WACA,WACA,WACA,UACA,YACA,UACA,UACA,UACA,WACA,YACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,QACA,SACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,WACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,WACA,UACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,UACA,UACA,YACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,QACA,WACA,SACA,QACA,UACA,QACA,SACA,WACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,QACA,UACA,WACA,QACA,WACA,UACA,QACA,SACA,WACA,YACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,QACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,UACA,QACA,SACA,QACA,UACA,WACA,UACA,SACA,WACA,SACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,QACA,WACA,WACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,QACA,WACA,SACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,WACA,QACA,WACA,UACA,WACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,SACA,WACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,YACA,WACA,SACA,QACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,WACA,WACA,QACA,SACA,SACA,SACA,WACA,SACA,QACA,UACA,WACA,UACA,SACA,WACA,WACA,SACA,QACA,SACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,sPChgEAD,EAAAC,QAAA,CACA,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,kPChgEAD,EAAAC,QAAA,CACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,WACA,QACA,SACA,UACA,SACA,SACA,QACA,WACA,SACA,SACA,QACA,WACA,UACA,WACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,QACA,WACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,cACA,UACA,QACA,UACA,QACA,QACA,QACA,YACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,WACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,YACA,QACA,SACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,ccACA,WACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,UACA,YACA,QACA,QACA,WACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,WACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,YACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,SACA,SACA,QACA,WACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,aACA,WACA,SACA,SACA,SACA,QACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,WACA,SACA,SACA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,YACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,YACA,UACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,WACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,YACA,WACA,SACA,YACA,QACA,QACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,WACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,YACA,SACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,SACA,YACA,SACA,SACA,QACA,YACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,aACA,QACA,QACA,YACA,QACA,SACA,WACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,QACA,QACA,QACA,UACA,WACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,WACA,SACA,SACA,QACA,YACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,SACA,YACA,UACA,QACA,UACA,YACA,SACA,UACA,SACA,UACA,QACA,QACA,SACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,acACA,UACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,YACA,SACA,SACA,UACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,QACA,WACA,WACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,QACA,UACA,WACA,QACA,QACA,YACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,WACA,SACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,UACA,SACA,WACA,QACA,WACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,UACA,WACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,SACA,SACA,WACA,QACA,SACA,UACA,QACA,SACA,SACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,YACA,QACA,UACA,QACA,QACA,WACA,QACA,SACA,QACA,QACA,WACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,SACA,WACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,WACA,QACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,QACA,UACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,YACA,QACA,SACA,SACA,QACA,QACA,QACA,UACA,YACA,SACA,SACA,QACA,QACA,WACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,SACA,cACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,acACA,QACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,WACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,SACA,UACA,QACA,cACA,WACA,QACA,SACA,QACA,SACA,SACA,UACA,WACA,YACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,WACA,QACA,UACA,SACA,SACA,UACA,aACA,QACA,SACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,SACA,WACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,aACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,aACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,YACA,QACA,WACA,UACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,QACA,UACA,SACA,WACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,QACA,SACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,WACA,QACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,oPChghgEAD,EAAAC,QAAA,CACA,WACA,UACA,SACA,SACA,OACA,UACA,OACA,UACA,WACA,SACA,UACA,WACA,SACA,SACA,WACA,QACA,WACA,SACA,WACA,WACA,QACA,WACA,QACA,WACA,OACA,UACA,OACA,QACA,SACA,QACA,UACA,UACA,SACA,OACA,QACA,WACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,WACA,SACA,QACA,SACA,SACA,QACA,UACA,QACA,SACA,UACA,WACA,SACA,QACA,QACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,UACA,SACA,QACA,QACA,WACA,WACA,SACA,UACA,QACA,SACA,SACA,WACA,UACA,OACA,QACA,OACA,UACA,UACA,WACA,SACA,UACA,UACA,SACA,QACA,WACA,OACA,SACA,UACA,QACA,QACA,SACA,QACA,WACA,WACA,SACA,QACA,SACA,UACA,OACA,QACA,QACA,UACA,WACA,WACA,QACA,OACA,UACA,WACA,SACA,UACA,QACA,SACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,SACA,QACA,OACA,OACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,QACA,UACA,WACA,UACA,QACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,OACA,UACA,SACA,OACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,SACA,OACA,QACA,WACA,OACA,OACA,SACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,OACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,WACA,QACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,WACA,OACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,QACA,QACA,UACA,SACA,SACA,SACA,WACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,UACA,QACA,QACA,UACA,UACA,WACA,WACA,UACA,SACA,OACA,QACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,OACA,WACA,SACA,QACA,QACA,WACA,WACA,QACA,UACA,QACA,SACA,QACA,WACA,QACA,OACA,UACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,SACA,QACA,QACA,QACA,UACA,UACA,SACA,SACA,OACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,WACA,UACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,UACA,OACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,UACA,OACA,OACA,OACA,WACA,OACA,SACA,OACA,OACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,SACA,QACA,UACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,WACA,WACA,QACA,SACA,OACA,WACA,OACA,WACA,QACA,UACA,WACA,OACA,QACA,OACA,OACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,UACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,QACA,QACA,WACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,QACA,OACA,SACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,SACA,QACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,OACA,SACA,UACA,QACA,UACA,UACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,WACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,SACA,QACA,QACA,SACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,UACA,WACA,QACA,WACA,SACA,QACA,UACA,QACA,UACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,SACA,WACA,QACA,UACA,QACA,SACA,WACA,SACA,WACA,QACA,QACA,SACA,OACA,UACA,WACA,UACA,UACA,SACA,OACA,UACA,UACA,QACA,QACA,UACA,UACA,SACA,WACA,WACA,QACA,WACA,OACA,WACA,OACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,UACA,SACA,QACA,QACA,WACA,SACA,WACA,OACA,SACA,QACA,QACA,OACA,UACA,UACA,QACA,UACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,SACA,SACA,OACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,QACA,UACA,UACA,QACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,QACA,UACA,WACA,SACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,SACA,SACA,SACA,OACA,UACA,UACA,QACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,OACA,UACA,SACA,SACA,SACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,OACA,WACA,OACA,UACA,QACA,UACA,SACA,QACA,UACA,UACA,OACA,WACA,OACA,SACA,QACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,QACA,UACA,UACA,WACA,UACA,UACA,OACA,UACA,SACA,QACA,UACA,SACA,OACA,UACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,QACA,UACA,QACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,UACA,WACA,UACA,QACA,WACA,UACA,WACA,WACA,UACA,QACA,UACA,QACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,QACA,WACA,SACA,SACA,OACA,QACA,OACA,SACA,OACA,QACA,UACA,QACA,WACA,UACA,UACA,OACA,OACA,WACA,QACA,OACA,SACA,SACA,QACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,WACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,SACA,SACA,WACA,SACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,SACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,WACA,QACA,QACA,UACA,UACA,OACA,WACA,OACA,QACA,SACA,QACA,SACA,QACA,UACA,UACA,WACA,SACA,QACA,WACA,WACA,WACA,SACA,WACA,WACA,SACA,QACA,SACA,OACA,WACA,UACA,SACA,SACA,WACA,UACA,QACA,QACA,SACA,WACA,QACA,UACA,QACA,WACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,WACA,OACA,WACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,SACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,QACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,SACA,WACA,SACA,OACA,SACA,QACA,WACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,WACA,WACA,QACA,WACA,SACA,UACA,SACA,OACA,UACA,WACA,SACA,SACA,SACA,WACA,SACA,QACA,QACA,QACA,OACA,WACA,QACA,SACA,WACA,WACA,OACA,QACA,UACA,UACA,QACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,SACA,QACA,OACA,UACA,QACA,QACA,OACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,QACA,WACA,SACA,QACA,UACA,QACA,SACA,QACA,QACA,UACA,WACA,OACA,QACA,UACA,QACA,UACA,WACA,QACA,OACA,OACA,SACA,WACA,SACA,UACA,WACA,QACA,QACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,QACA,UACA,QACA,WACA,QACA,SACA,SACA,WACA,QACA,QACA,UACA,QACA,WACA,UACA,UACA,WACA,SACA,QACA,QACA,QACA,SACA,SACA,UACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,UACA,SACA,OACA,WACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,OACA,UACA,SACA,WACA,WACA,SACA,OACA,SACA,WACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,UACA,SACA,UACA,WACA,QACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,UACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,SACA,UACA,QACA,SACA,QACA,UACA,OACA,OACA,WACA,QACA,OACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,QACA,UACA,SACA,QACA,UACA,UACA,UACA,QACA,WACA,OACA,WACA,UACA,SACA,WACA,UACA,SACA,WACA,OACA,WACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,SACA,WACA,OACA,QACA,UACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,QACA,OACA,OACA,UACA,QACA,SACA,QACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,QACA,SACA,SACA,QACA,UACA,UACA,WACA,SACA,UACA,SACA,WACA,SACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,SACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,WACA,WACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,UACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,WACA,UACA,UACA,WACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,SACA,UACA,QACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,WACA,SACA,WACA,OACA,QACA,WACA,SACA,SACA,SACA,UACA,UACA,OACA,OACA,UACA,UACA,SACA,OACA,QACA,OACA,QACA,OACA,UACA,UACA,UACA,SACA,WACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,OACA,QACA,SACA,WACA,SACA,WACA,QACA,SACA,SACA,UACA,QACA,WACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,SACA,SACA,WACA,SACA,QACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,QACA,WACA,WACA,UACA,UACA,WACA,SACA,OACA,QACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,WACA,WACA,UACA,OACA,UACA,WACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,QACA,WACA,OACA,UACA,WACA,SACA,UACA,WACA,QACA,SACA,UACA,SACA,QACA,UACA,UACA,SACA,OACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,UACA,WACA,WACA,UACA,QACA,UACA,QACA,UACA,WACA,OACA,QACA,QACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,UACA,WACA,UACA,QACA,WACA,WACA,SACA,QACA,UACA,OACA,QACA,WACA,OACA,UACA,QACA,QACA,QACA,SACA,SACA,OACA,UACA,UACA,WACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,OACA,QACA,OACA,SACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,WACA,WACA,WACA,OACA,QACA,SACA,WACA,QACA,UACA,WACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,OACA,OACA,UACA,WACA,UACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,WACA,QACA,SACA,SACA,WACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,WACA,OACA,WACA,QACA,SACA,SACA,SACA,SACA,UACA,WACA,SACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,SACA,UACA,SACA,QACA,QACA,UACA,UACA,SACA,SACA,WACA,QACA,SACA,SACA,WACA,UACA,WACA,QACA,WACA,UACA,UACA,WACA,UACA,QACA,UACA,QACA,SACA,UACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,QACA,OACA,UACA,UACA,QACA,QACA,QACA,SACA,UACA,UACA,QACA,QACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,WACA,OACA,QACA,OACA,UACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,WACA,QACA,WACA,OACA,WACA,SACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,QACA,QACA,SACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,OACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,WACA,WACA,QACA,UACA,UACA,WACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,UACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,WACA,QACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,WACA,SACA,QACA,OACA,SACA,QACA,WACA,OACA,UACA,QACA,QACA,OACA,SACA,OACA,SACA,QACA,UACA,OACA,UACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,QACA,QACA,QACA,WACA,UACA,UACA,SACA,SACA,SACA,OACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,OACA,UACA,SACA,WACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,QACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,SACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,SACA,WACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,QACA,QACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,UACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,SACA,UACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,WACA,QACA,SACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,SACA,OACA,UACA,UACA,UACA,UACA,UACA,WACA,QACA,SACA,QACA,OACA,QACA,UACA,WACA,OACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,OACA,UACA,WACA,QACA,WACA,UACA,SACA,UACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,WACA,OACA,SACA,WACA,WACA,SACA,UACA,WACA,OACA,WACA,SACA,UACA,OACA,QACA,WACA,iPChgEAD,EAAAC,QAAA,CACA,SACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,OACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,UACA,OACA,WACA,SACA,UACA,SACA,OACA,SACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,SACA,OACA,SACA,UACA,UACA,OACA,UACA,QACA,SACA,QACA,WACA,UACA,UACA,QACA,QACA,SACA,OACA,WACA,SACA,UACA,UACA,OACA,QACA,UACA,QACA,QACA,SACA,QACA,WACA,SACA,QACA,OACA,SACA,UACA,QACA,SACA,OACA,UACA,MACA,QACA,SACA,UACA,WACA,OACA,SACA,UACA,QACA,UACA,OACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,UACA,UACA,QACA,OACA,SACA,QACA,MACA,WACA,QACA,WACA,SACA,QACA,OACA,QACA,QACA,WACA,OACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,UACA,SACA,UACA,WACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,UACA,QACA,SACA,SACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,WACA,SACA,OACA,QACA,SACA,UACA,OACA,SACA,MACA,UACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,OACA,QACA,WACA,SACA,SACA,UACA,OACA,UACA,UACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,QACA,QACA,OACA,SACA,QACA,UACA,OACA,QACA,OACA,QACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,WACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,SACA,OACA,QACA,WACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,SACA,SACA,SACA,OACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,MACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,UACA,UACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,QACA,UACA,MACA,QACA,SACA,SACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,MACA,UACA,OACA,WACA,WACA,SACA,SACA,SACA,SACA,MACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,WACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,UACA,SACA,UACA,WACA,QACA,QACA,OACA,SACA,QACA,QACA,MACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,OACA,QACA,WACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,UACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,WACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,OACA,OACA,WACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,WACA,SACA,OACA,WACA,SACA,QACA,MACA,UACA,QACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,QACA,OACA,UACA,QACA,SACA,MACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,MACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,QACA,WACA,SACA,QACA,UACA,OACA,SACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,SACA,UACA,UACA,OACA,SACA,WACA,QACA,QACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,MACA,OACA,UACA,OACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,OACA,UACA,SACA,UACA,SACA,QACA,OACA,SACA,SACA,OACA,UACA,OACA,UACA,SACA,QACA,SACA,QACA,SACA,WACA,QACA,QACA,UACA,SACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,UACA,WACA,SACA,QACA,QACA,UACA,WACA,OACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,OACA,SACA,QACA,SACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,UACA,WACA,SACA,SACA,QACA,QACA,QACA,WACA,UACA,QACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,QACA,SACA,UACA,OACA,WACA,WACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,OACA,SACA,UACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,SACA,OACA,QACA,QACA,UACA,OACA,WACA,MACA,QACA,QACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,QACA,SACA,UACA,QACA,UACA,QACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,UACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,MACA,SACA,OACA,QACA,UACA,QACA,SACA,QACA,OACA,UACA,OACA,MACA,UACA,UACA,UACA,OACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,QACA,QACA,QACA,OACA,UACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,OACA,WACA,QACA,QACA,UACA,QACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,UACA,SACA,SACA,QACA,OACA,OACA,UACA,UACA,OACA,QACA,QACA,OACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,WACA,UACA,QACA,MACA,QACA,UACA,UACA,OACA,OACA,OACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,OACA,MACA,MACA,SACA,SACA,QACA,OACA,OACA,OACA,SACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,WACA,SACA,OACA,UACA,OACA,QACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,MACA,WACA,QACA,UACA,SACA,SACA,MACA,QACA,SACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,QACA,QACA,SACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,MACA,QACA,UACA,UACA,WACA,QACA,QACA,UACA,UACA,QACA,UACA,QACA,QACA,OACA,WACA,SACA,WACA,QACA,QACA,QACA,UACA,OACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,UACA,UACA,OACA,SACA,OACA,SACA,UACA,QACA,OACA,SACA,WACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,UACA,OACA,QACA,UACA,WACA,UACA,YACA,MACA,UACA,QACA,UACA,MACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,UACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,YACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,UACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,OACA,SACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,UACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,SACA,UACA,UACA,QACA,QACA,UACA,OACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,MACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,MACA,QACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,UACA,OACA,UACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,SACA,SACA,MACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,OACA,SACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,WACA,UACA,SACA,SACA,UACA,OACA,QACA,OACA,QACA,UACA,UACA,SACA,SACA,QACA,WACA,WACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,SACA,UACA,UACA,OACA,UACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,WACA,QACA,WACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,UACA,UACA,UACA,SACA,YACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,WACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,SACA,WACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,YACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,WACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,MACA,QACA,WACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,OACA,QACA,OACA,UACA,OACA,OACA,SACA,SACA,UACA,UACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,WACA,SACA,OACA,UACA,QACA,QACA,UACA,MACA,QACA,QACA,UACA,UACA,UACA,QACA,WACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,OACA,SACA,QACA,QACA,SACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,SACA,OACA,WACA,MACA,QACA,OACA,SACA,OACA,UACA,OACA,OACA,UACA,QACA,UACA,MACA,OACA,SACA,SACA,QACA,OACA,QACA,UACA,OACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,SACA,OACA,SACA,SACA,YACA,SACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,MACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,WACA,OACA,SACA,SACA,QACA,UACA,QACA,MACA,QACA,UACA,OACA,UACA,UACA,QACA,QACA,SACA,QACA,WACA,QACA,WACA,QACA,QACA,SACA,QACA,OACA,UACA,UACA,SACA,QACA,QACA,OACA,MACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,oPChghgEAD,EAAAC,QAAA,CACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,MACA,SACA,MACA,MACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,SACA,MACA,QACA,QACA,OACA,OACA,SACA,OACA,OACA,MACA,QACA,MACA,QACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,QACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,QACA,SACA,OACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,UACA,MACA,MACA,OACA,OACA,OACA,UACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,MACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,QACA,MACA,MACA,MACA,QACA,SACA,OACA,MACA,MACA,OACA,MACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,SACA,SACA,MACA,OACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,MACA,MACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,MACA,OACA,OACA,MACA,QACA,QACA,QACA,MACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,MACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,UACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,QACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,WACA,OACA,WACA,WACA,WACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,UACA,MACA,SACA,MACA,MACA,MACA,MACA,SACA,MACA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,MACA,QACA,MACA,OACA,OACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,MACA,OACA,MACA,MACA,QACA,QACA,MACA,QACA,MACA,QACA,MACA,MACA,MACA,OACA,QACA,SACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,WACA,QACA,MACA,QACA,MACA,QACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,UACA,QACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,SACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,SACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,MACA,QACA,MACA,OACA,MACA,QACA,OACA,OACA,MACA,MACA,OACA,QACA,MACA,MACA,QACA,UACA,OACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,QACA,SACA,OACA,SACA,MACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,QACA,OACA,MACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,MACA,UACA,MACA,MACA,MACA,OACA,SACA,OACA,MACA,OACA,MACA,QACA,OACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,UACA,QACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,SACA,OACA,MACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,MACA,SACA,MACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,MACA,SACA,MACA,WACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,QACA,OACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,UACA,SACA,MACA,OACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,SACA,OACA,SACA,QACA,OACA,MACA,QACA,MACA,QACA,QACA,SACA,OACA,SACA,QACA,MACA,OACA,QACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,WACA,OACA,MACA,MACA,MACA,OACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,WACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,QACA,QACA,UACA,OACA,QACA,OACA,SACA,MACA,MACA,QACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,QACA,MACA,OACA,QACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,SACA,SACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,OACA,MACA,QACA,OACA,QACA,MACA,MACA,SACA,QACA,QACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,WACA,OACA,SACA,SACA,OACA,OACA,MACA,QACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,QACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,UACA,MACA,MACA,MACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,MACA,OACA,SACA,SACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,QACA,QACA,OACA,MACA,MACA,MACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,SACA,OACA,OACA,MACA,QACA,MACA,MACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,UACA,QACA,OACA,OACA,SACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,MACA,OACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,SACA,MACA,WACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,UACA,MACA,QACA,QACA,QACA,OACA,MACA,QACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,QACA,QACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,OACA,OACA,SACA,OACA,MACA,MACA,MACA,MACA,MACA,QACA,SACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,OACA,QACA,OACA,SACA,OACA,OACA,QACA,MACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,WACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,MACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,UACA,QACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,OACA,MACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,QACA,QACA,OACA,QACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,SACA,OACA,MACA,SACA,OACA,MACA,MACA,OACA,OACA,QACA,UACA,UACA,MACA,MACA,OACA,SACA,OACA,OACA,MACA,MACA,QACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,MACA,QACA,MACA,WACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,QACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,UACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,SACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,QACA,MACA,mPChgEAD,EAAAC,QAAA,CACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,QACA,UACA,SACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,SACA,WACA,QACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,WACA,SACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,WACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,WACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,WACA,WACA,SACA,QACA,UACA,OACA,UACA,SACA,UACA,UACA,QACA,WACA,SACA,WACA,QACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,OACA,QACA,UACA,SACA,OACA,WACA,UACA,UACA,WACA,WACA,WACA,QACA,WACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,UACA,UACA,WACA,WACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,WACA,QACA,UACA,SACA,OACA,UACA,WACA,QACA,WACA,UACA,WACA,QACA,QACA,OACA,UACA,WACA,OACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,WACA,UACA,SACA,SACA,QACA,QACA,WACA,QACA,QACA,WACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,WACA,QACA,QACA,UACA,WACA,UACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,QACA,UACA,SACA,UACA,OACA,SACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,SACA,WACA,UACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,WACA,QACA,SACA,SACA,WACA,QACA,SACA,WACA,SACA,WACA,SACA,QACA,UACA,OACA,QACA,SACA,UACA,OACA,WACA,WACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,OACA,UACA,QACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,OACA,WACA,WACA,WACA,WACA,WACA,SACA,SACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,UACA,UACA,WACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,QACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,WACA,SACA,WACA,SACA,QACA,UACA,UACA,SACA,WACA,UACA,QACA,WACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,WACA,UACA,QACA,SACA,UACA,WACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,SACA,QACA,WACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,QACA,UACA,WACA,WACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,OACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,UACA,SACA,QACA,UACA,UACA,WACA,QACA,QACA,QACA,UACA,UACA,QACA,SACA,SACA,QACA,OACA,SACA,SACA,WACA,UACA,QACA,WACA,SACA,OACA,WACA,SACA,QACA,UACA,OACA,UACA,WACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,SACA,QACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,SACA,SACA,WACA,UACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,QACA,QACA,SACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,QACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,SACA,QACA,QACA,UACA,UACA,WACA,UACA,QACA,WACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,QACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,SACA,UACA,UACA,SACA,WACA,UACA,QACA,UACA,SACA,OACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,QACA,UACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,SACA,OACA,SACA,QACA,QACA,QACA,WACA,WACA,WACA,WACA,UACA,SACA,UACA,SACA,QACA,UACA,QACA,QACA,WACA,SACA,UACA,UACA,WACA,WACA,SACA,WACA,QACA,OACA,OACA,UACA,WACA,SACA,WACA,QACA,SACA,QACA,UACA,QACA,WACA,WACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,OACA,SACA,UACA,OACA,WACA,WACA,UACA,WACA,QACA,UACA,QACA,QACA,UACA,UACA,OACA,UACA,QACA,UACA,UACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,WACA,QACA,SACA,UACA,SACA,QACA,QACA,UACA,UACA,UACA,WACA,WACA,OACA,SACA,SACA,UACA,SACA,QACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,UACA,SACA,SACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,UACA,SACA,SACA,QACA,WACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,UACA,QACA,QACA,UACA,QACA,QACA,WACA,WACA,SACA,WACA,UACA,WACA,QACA,SACA,UACA,WACA,WACA,QACA,UACA,UACA,OACA,SACA,OACA,UACA,WACA,QACA,QACA,UACA,SACA,UACA,UACA,QACA,WACA,WACA,QACA,OACA,UACA,UACA,WACA,OACA,WACA,QACA,UACA,UACA,WACA,WACA,WACA,OACA,QACA,QACA,WACA,SACA,SACA,QACA,OACA,UACA,WACA,WACA,SACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,QACA,WACA,SACA,WACA,WACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,OACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,SACA,UACA,WACA,WACA,UACA,UACA,QACA,WACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,OACA,SACA,SACA,QACA,OACA,QACA,SACA,OACA,WACA,QACA,SACA,UACA,OACA,QACA,WACA,UACA,QACA,WACA,WACA,UACA,QACA,OACA,SACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,QACA,WACA,QACA,SACA,WACA,UACA,QACA,UACA,UACA,WACA,OACA,WACA,WACA,OACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,UACA,QACA,OACA,UACA,UACA,UACA,UACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,OACA,UACA,QACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,UACA,WACA,UACA,UACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,QACA,SACA,WACA,UACA,WACA,WACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,QACA,WACA,SACA,SACA,WACA,SACA,QACA,WACA,SACA,UACA,WACA,SACA,UACA,QACA,WACA,SACA,SACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,UACA,WACA,UACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,QACA,OACA,SACA,QACA,UACA,SACA,QACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,QACA,UACA,WACA,UACA,OACA,SACA,SACA,UACA,SACA,SACA,WACA,UACA,UACA,QACA,UACA,WACA,WACA,WACA,UACA,UACA,OACA,SACA,UACA,WACA,QACA,QACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,WACA,UACA,QACA,WACA,UACA,SACA,UACA,OACA,UACA,QACA,UACA,UACA,SACA,QACA,WACA,WACA,WACA,WACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,WACA,WACA,SACA,OACA,UACA,QACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,OACA,WACA,UACA,UACA,SACA,OACA,WACA,WACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,UACA,WACA,QACA,SACA,SACA,SACA,WACA,UACA,WACA,UACA,SACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,QACA,SACA,WACA,QACA,OACA,WACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,WACA,WACA,SACA,WACA,QACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,UACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,OACA,OACA,SACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,OACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,QACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,WACA,WACA,QACA,QACA,WACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,UACA,QACA,SACA,SACA,UACA,UACA,QACA,WACA,WACA,UACA,SACA,WACA,SACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,SACA,UACA,WACA,QACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,WACA,WACA,SACA,OACA,UACA,UACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,QACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,OACA,UACA,WACA,QACA,SACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,OACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,WACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,OACA,UACA,SACA,SACA,UACA,UACA,SACA,WACA,WACA,SACA,WACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,WACA,UACA,QACA,UACA,OACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,QACA,QACA,WACA,QACA,SACA,WACA,WACA,WACA,WACA,UACA,QACA,UACA,WACA,UACA,WACA,SACA,OACA,UACA,WACA,QACA,UACA,QACA,OACA,QACA,WACA,WACA,UACA,SACA,SACA,UACA,WACA,OACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,WACA,UACA,WACA,SACA,UACA,OACA,UACA,SACA,UACA,UACA,UACA,UACA,QACA,OACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,QACA,WACA,SACA,OACA,SACA,UACA,WACA,QACA,WACA,QACA,QACA,UACA,SACA,SACA,QACA,UACA,WACA,UACA,WACA,UACA,UACA,QACA,SACA,UACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,UACA,OACA,UACA,UACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,QACA,UACA,SACA,OACA,UACA,UACA,SACA,UACA,QACA,SACA,QACA,WACA,SACA,WACA,WACA,WACA,WACA,UACA,QACA,UACA,QACA,WACA,WACA,SACA,SACA,SACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,QACA,SACA,SACA,UACA,SACA,OACA,SACA,OACA,QACA,QACA,WACA,UACA,WACA,QACA,SACA,OACA,UACA,WACA,WACA,OACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,SACA,WACA,UACA,WACA,QACA,QACA,QACA,QACA,UACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,WACA,SACA,SACA,WACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,WACA,UACA,WACA,QACA,OACA,UACA,SACA,UACA,WACA,QACA,UACA,QACA,UACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,SACA,OACA,QACA,UACA,WACA,WACA,WACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,UACA,SACA,WACA,6SC9/DAA,EAAAqD,WAAAs/C,GACA,SAAAC,EAAAz5C,GACA,IAAAqD,EACA,IACAA,EAAAm2C,EAAAC,GACA,MAAA9hD,GAEA,YADAhB,EAAAF,SAAAuJ,EAAArI,GAIAhB,EAAAF,SAAAuJ,EAAA,KAAAqD,IAIAxM,EAAAsD,MAAA,CAAAq/C,EAAAE,IAAAD,IACA,IAAA/0B,EAAA80B,EAAAC,EAAAC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","file":"../PintNFTWalletExtension/background-6.js","sourcesContent":["var ready = require('./ready');\n\n/**\n  ### `sink(socket, opts?)`\n\n  Create a pull-stream `Sink` that will write data to the `socket`.\n\n  <<< examples/write.js\n\n**/\n\nvar nextTick = typeof setImmediate !== 'undefined' ? setImmediate : process.nextTick\n\nmodule.exports = function(socket, opts) {\n  return function (read) {\n    opts = opts || {}\n    var closeOnEnd = opts.closeOnEnd !== false;\n    var onClose = 'function' === typeof opts ? opts : opts.onClose;\n\n    function next(end, data) {\n      // if the stream has ended, simply return\n      if (end) {\n        if (closeOnEnd && socket.readyState <= 1) {\n          if(onClose)\n            socket.addEventListener('close', function (ev) {\n              if(ev.wasClean || ev.code === 1006) onClose()\n              else {\n                var err = new Error('ws error')\n                err.event = ev\n                onClose(err)\n              }\n            });\n\n          socket.close()\n        }\n\n        return;\n      }\n\n      // socket ready?\n      ready(socket, function(end) {\n        if (end) {\n          return read(end, function () {});\n        }\n        socket.send(data);\n        nextTick(function() {\n          read(null, next);\n        });\n      });\n    }\n\n    read(null, next);\n  }\n}\n","/**\n  ### `source(socket)`\n\n  Create a pull-stream `Source` that will read data from the `socket`.\n\n  <<< examples/read.js\n\n**/\nvar Buffer = require('safe-buffer').Buffer;\n\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nmodule.exports = function(socket, cb) {\n  var buffer = [];\n  var receiver;\n  var ended;\n  var started = false;\n  socket.addEventListener('message', function(evt) {\n    var data = evt.data;\n    if (isArrayBuffer(data)) {\n      data = Buffer.from(data);\n    }\n\n    if (receiver) {\n      return receiver(null, data);\n    }\n\n    buffer.push(data);\n  });\n\n  socket.addEventListener('close', function(evt) {\n    if (ended) return\n    if (receiver) {\n      receiver(ended = true)\n    }\n  });\n\n  socket.addEventListener('error', function (evt) {\n    if (ended) return;\n    ended = evt;\n    if(!started) {\n      started = true\n      cb && cb(evt)\n    }\n    if (receiver) {\n      receiver(ended)\n    }\n  });\n\n  socket.addEventListener('open', function (evt) {\n    if(started || ended) return\n    started = true\n  })\n\n  function read(abort, cb) {\n    receiver = null;\n\n    //if stream has already ended.\n    if (ended)\n      return cb(ended);\n\n    // if ended, abort\n    else if (abort) {\n      //this will callback when socket closes\n      receiver = cb\n      socket.close()\n    }\n\n    // return data, if any\n    else if(buffer.length > 0)\n      cb(null, buffer.shift());\n\n    // wait for more data (or end)\n    else\n      receiver = cb;\n\n  };\n\n  return read;\n};\n","'use strict'\n\n/**\n * A list of unique peer infos.\n */\nclass PeerList {\n  constructor () {\n    this.list = []\n  }\n\n  /**\n   * Add a new info. Returns `true` if it was a new one\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n  push (info) {\n    if (!this.has(info)) {\n      this.list.push(info)\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Check if this PeerInfo is already in here.\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n  has (info) {\n    const match = this.list.find((i) => i.id.isEqual(info.id))\n    return Boolean(match)\n  }\n\n  /**\n   * Get the list as an array.\n   *\n   * @returns {Array<PeerInfo>}\n   */\n  toArray () {\n    return this.list.slice()\n  }\n\n  /**\n   * Remove the last element\n   *\n   * @returns {PeerInfo}\n   */\n  pop () {\n    return this.list.pop()\n  }\n\n  /**\n   * The length of the list\n   *\n   * @type {number}\n   */\n  get length () {\n    return this.list.length\n  }\n}\n\nmodule.exports = PeerList\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict'\n\nconst distance = require('xor-distance')\nconst utils = require('./utils')\nconst map = require('async/map')\n\n/**\n * Maintains a list of peerIds sorted by distance from a DHT key.\n */\nclass PeerDistanceList {\n  /**\n   * Creates a new PeerDistanceList.\n   *\n   * @param {Buffer} originDhtKey - the DHT key from which distance is calculated\n   * @param {number} capacity - the maximum size of the list\n   */\n  constructor (originDhtKey, capacity) {\n    this.originDhtKey = originDhtKey\n    this.capacity = capacity\n    this.peerDistances = []\n  }\n\n  /**\n   * The length of the list\n   */\n  get length () {\n    return this.peerDistances.length\n  }\n\n  /**\n   * The peerIds in the list, in order of distance from the origin key\n   */\n  get peers () {\n    return this.peerDistances.map(pd => pd.peerId)\n  }\n\n  /**\n   * Add a peerId to the list.\n   *\n   * @param {PeerId} peerId\n   * @param {function(Error)} callback\n   * @returns {void}\n   */\n  add (peerId, callback) {\n    if (this.peerDistances.find(pd => pd.peerId.id.equals(peerId.id))) {\n      return callback()\n    }\n\n    utils.convertPeerId(peerId, (err, dhtKey) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const el = {\n        peerId,\n        distance: distance(this.originDhtKey, dhtKey)\n      }\n\n      this.peerDistances.push(el)\n      this.peerDistances.sort((a, b) => distance.compare(a.distance, b.distance))\n      this.peerDistances = this.peerDistances.slice(0, this.capacity)\n\n      callback()\n    })\n  }\n\n  /**\n   * Indicates whether any of the peerIds passed as a parameter are closer\n   * to the origin key than the furthest peerId in the PeerDistanceList.\n   *\n   * @param {Array<PeerId>} peerIds\n   * @param {function(Error, Boolean)} callback\n   * @returns {void}\n   */\n  anyCloser (peerIds, callback) {\n    if (!peerIds.length) {\n      return callback(null, false)\n    }\n\n    if (!this.length) {\n      return callback(null, true)\n    }\n\n    map(peerIds, (peerId, cb) => utils.convertPeerId(peerId, cb), (err, dhtKeys) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const furthestDistance = this.peerDistances[this.peerDistances.length - 1].distance\n      for (const dhtKey of dhtKeys) {\n        const keyDistance = distance(this.originDhtKey, dhtKey)\n        if (distance.compare(keyDistance, furthestDistance) < 0) {\n          return callback(null, true)\n        }\n      }\n      return callback(null, false)\n    })\n  }\n}\n\nmodule.exports = PeerDistanceList\n","'use strict'\n\nconst queue = require('async/queue')\nconst promisify = require('promisify-es6')\nconst promiseToCallback = require('promise-to-callback')\n\nclass WorkerQueue {\n  /**\n   * Creates a new WorkerQueue.\n   *\n   * @param {DHT} dht\n   * @param {Run} run\n   * @param {Object} path\n   * @param {function} log\n   */\n  constructor (dht, run, path, log) {\n    this.dht = dht\n    this.run = run\n    this.path = path\n    this.log = log\n\n    this.concurrency = this.dht.concurrency\n    this.queue = this.setupQueue()\n    // a container for resolve/reject functions that will be populated\n    // when execute() is called\n    this.execution = null\n  }\n\n  /**\n   * Create the underlying async queue.\n   *\n   * @returns {Object}\n   */\n  setupQueue () {\n    const q = queue((peer, cb) => {\n      promiseToCallback(this.processNext(peer))(cb)\n    }, this.concurrency)\n\n    // If there's an error, stop the worker\n    q.error = (err) => {\n      this.log.error('queue', err)\n      this.stop(err)\n    }\n\n    // When all peers in the queue have been processed, stop the worker\n    q.drain = () => {\n      this.log('queue:drain')\n      this.stop()\n    }\n\n    // When a space opens up in the queue, add some more peers\n    q.unsaturated = () => {\n      if (this.running) {\n        this.fill()\n      }\n    }\n\n    q.buffer = 0\n\n    return q\n  }\n\n  /**\n   * Stop the worker, optionally providing an error to pass to the worker's\n   * callback.\n   *\n   * @param {Error} err\n   */\n  stop (err) {\n    if (!this.running) {\n      return\n    }\n\n    this.running = false\n    this.queue.kill()\n    this.log('worker:stop, %d workers still running', this.run.workers.filter(w => w.running).length)\n    if (err) {\n      this.execution.reject(err)\n    } else {\n      this.execution.resolve()\n    }\n  }\n\n  /**\n   * Use the queue from async to keep `concurrency` amount items running\n   * per path.\n   *\n   * @return {Promise<void>}\n   */\n  async execute () {\n    this.running = true\n    // store the promise resolution functions to be resolved at end of queue\n    this.execution = {}\n    const execPromise = new Promise((resolve, reject) => Object.assign(this.execution, { resolve, reject }))\n    // start queue\n    this.fill()\n    // await completion\n    await execPromise\n  }\n\n  /**\n   * Add peers to the worker queue until there are enough to satisfy the\n   * worker queue concurrency.\n   * Note that we don't want to take any more than those required to satisfy\n   * concurrency from the peers-to-query queue, because we always want to\n   * query the closest peers to the key first, and new peers are continously\n   * being added to the peers-to-query queue.\n   */\n  fill () {\n    // Note:\n    // - queue.running(): number of items that are currently running\n    // - queue.length(): the number of items that are waiting to be run\n    while (this.queue.running() + this.queue.length() < this.concurrency &&\n           this.path.peersToQuery.length > 0) {\n      this.queue.push(this.path.peersToQuery.dequeue())\n    }\n  }\n\n  /**\n   * Process the next peer in the queue\n   *\n   * @param {PeerId} peer\n   * @returns {Promise<void>}\n   */\n  async processNext (peer) {\n    if (!this.running) {\n      return\n    }\n\n    // The paths must be disjoint, meaning that no two paths in the Query may\n    // traverse the same peer\n    if (this.run.peersSeen.has(peer)) {\n      return\n    }\n\n    // Check if we've queried enough peers already\n    let continueQuerying, continueQueryingError\n    try {\n      continueQuerying = await this.run.continueQuerying(this)\n    } catch (err) {\n      continueQueryingError = err\n    }\n\n    // Abort and ignore any error if we're no longer running\n    if (!this.running) {\n      return\n    }\n\n    if (continueQueryingError) {\n      throw continueQueryingError\n    }\n\n    // No peer we're querying is closer, stop the queue\n    // This will cause queries that may potentially result in\n    // closer nodes to be ended, but it reduces overall query time\n    if (!continueQuerying) {\n      this.stop()\n      return\n    }\n\n    // Check if another path has queried this peer in the mean time\n    if (this.run.peersSeen.has(peer)) {\n      return\n    }\n    this.run.peersSeen.add(peer)\n\n    // Execute the query on the next peer\n    this.log('queue:work')\n    let state, execError\n    try {\n      state = await this.execQuery(peer)\n    } catch (err) {\n      execError = err\n    }\n\n    // Abort and ignore any error if we're no longer running\n    if (!this.running) {\n      return\n    }\n\n    this.log('queue:work:done', execError, state)\n\n    if (execError) {\n      throw execError\n    }\n\n    // If query is complete, stop all workers.\n    // Note: run.stop() calls stop() on all the workers, which kills the\n    // queue and resolves execution\n    if (state && state.queryComplete) {\n      this.log('query:complete')\n      this.run.stop()\n      return\n    }\n\n    // If path is complete, just stop this worker.\n    // Note: this.stop() kills the queue and resolves execution\n    if (state && state.pathComplete) {\n      this.stop()\n    }\n  }\n\n  /**\n   * Execute a query on the next peer.\n   *\n   * @param {PeerId} peer\n   * @returns {Promise<void>}\n   * @private\n   */\n  async execQuery (peer) {\n    let res, queryError\n    try {\n      res = await this.path.queryFunc(peer)\n    } catch (err) {\n      queryError = err\n    }\n\n    // Abort and ignore any error if we're no longer running\n    if (!this.running) {\n      return\n    }\n\n    if (queryError) {\n      this.run.errors.push(queryError)\n      return\n    }\n\n    // Add the peer to the closest peers we have successfully queried\n    await promisify(cb => this.run.peersQueried.add(peer, cb))()\n\n    // If the query indicates that this path or the whole query is complete\n    // set the path result and bail out\n    if (res.pathComplete || res.queryComplete) {\n      this.path.res = res\n      return {\n        pathComplete: res.pathComplete,\n        queryComplete: res.queryComplete\n      }\n    }\n\n    // If there are closer peers to query, add them to the queue\n    if (res.closerPeers && res.closerPeers.length > 0) {\n      await Promise.all(res.closerPeers.map(async (closer) => {\n        // don't add ourselves\n        if (this.dht._isSelf(closer.id)) {\n          return\n        }\n        closer = this.dht.peerBook.put(closer)\n        this.dht._peerDiscovered(closer)\n        await this.path.addPeerToQuery(closer.id)\n      }))\n    }\n  }\n}\n\nmodule.exports = WorkerQueue\n","'use strict'\n\nconst PeerQueue = require('../peer-queue')\nconst utils = require('../utils')\n\n// TODO: Temporary until parallel dial in Switch have a proper\n// timeout. Requires async/await refactor of transports and\n// dial abort logic. This gives us 30s to complete the `queryFunc`.\n// This should help reduce the high end call times of queries\nconst QUERY_FUNC_TIMEOUT = 30e3\n\n/**\n * Manages a single Path through the DHT.\n */\nclass Path {\n  /**\n   * Creates a Path.\n   *\n   * @param {Run} run\n   * @param {queryFunc} queryFunc\n   */\n  constructor (run, queryFunc) {\n    this.run = run\n    this.queryFunc = utils.withTimeout(queryFunc, QUERY_FUNC_TIMEOUT)\n    if (!this.queryFunc) throw new Error('Path requires a `queryFn` to be specified')\n    if (typeof this.queryFunc !== 'function') throw new Error('Path expected `queryFn` to be a function. Got ' + typeof this.queryFunc)\n\n    /**\n     * @type {Array<PeerId>}\n     */\n    this.initialPeers = []\n\n    /**\n     * @type {PeerQueue}\n     */\n    this.peersToQuery = null\n  }\n\n  /**\n   * Add a peer to the set of peers that are used to intialize the path.\n   *\n   * @param {PeerId} peer\n   */\n  addInitialPeer (peer) {\n    this.initialPeers.push(peer)\n  }\n\n  /**\n   * Execute the path.\n   *\n   * @returns {Promise}\n   *\n   */\n  async execute () {\n    // Create a queue of peers ordered by distance from the key\n    const queue = await PeerQueue.fromKey(this.run.query.key)\n    // Add initial peers to the queue\n    this.peersToQuery = queue\n    await Promise.all(this.initialPeers.map(peer => this.addPeerToQuery(peer)))\n    await this.run.workerQueue(this)\n  }\n\n  /**\n   * Add a peer to the peers to be queried.\n   *\n   * @param {PeerId} peer\n   * @returns {Promise<void>}\n   */\n  async addPeerToQuery (peer) {\n    // Don't add self\n    if (this.run.query.dht._isSelf(peer)) {\n      return\n    }\n\n    // The paths must be disjoint, meaning that no two paths in the Query may\n    // traverse the same peer\n    if (this.run.peersSeen.has(peer)) {\n      return\n    }\n\n    await this.peersToQuery.enqueue(peer)\n  }\n}\n\nmodule.exports = Path\n","'use strict'\n\nconst T = require('../../message').TYPES\n\nmodule.exports = (dht) => {\n  const handlers = {\n    [T.GET_VALUE]: require('./get-value')(dht),\n    [T.PUT_VALUE]: require('./put-value')(dht),\n    [T.FIND_NODE]: require('./find-node')(dht),\n    [T.ADD_PROVIDER]: require('./add-provider')(dht),\n    [T.GET_PROVIDERS]: require('./get-providers')(dht),\n    [T.PING]: require('./ping')(dht)\n  }\n\n  /**\n   * Get the message handler matching the passed in type.\n   *\n   * @param {number} type\n   *\n   * @returns {function(PeerInfo, Message, function(Error, Message))}\n   *\n   * @private\n   */\n  return function getMessageHandler (type) {\n    return handlers[type]\n  }\n}\n","'use strict'\n\n//a pair of pull streams where one drains from the other\nmodule.exports = function () {\n  var _read, waiting\n  function sink (read) {\n    if('function' !== typeof read)\n      throw new Error('read must be function')\n\n    if(_read)\n      throw new Error('already piped')\n    _read = read\n    if(waiting) {\n      var _waiting = waiting\n      waiting = null\n      _read.apply(null, _waiting)\n    }\n  }\n  function source (abort, cb) {\n    if(_read)\n      _read(abort, cb)\n    else\n      waiting = [abort, cb]\n  }\n\n  return {\n    source: source, sink: sink\n  }\n}\n\n","'use strict'\n\nconst protons = require('protons')\nconst PeerId = require('peer-id')\nconst crypto = require('libp2p-crypto')\nconst parallel = require('async/parallel')\nconst waterfall = require('async/waterfall')\nconst debug = require('debug')\nconst log = debug('libp2p:secio')\nlog.error = debug('libp2p:secio:error')\n\nconst pbm = protons(require('./secio.proto'))\n\nconst support = require('../support')\n\n// nonceSize is the size of our nonces (in bytes)\nconst nonceSize = 16\n\nexports.createProposal = (state) => {\n  state.proposal.out = {\n    rand: crypto.randomBytes(nonceSize),\n    pubkey: state.key.local.public.bytes,\n    exchanges: support.exchanges.join(','),\n    ciphers: support.ciphers.join(','),\n    hashes: support.hashes.join(',')\n  }\n\n  state.proposalEncoded.out = pbm.Propose.encode(state.proposal.out)\n  return state.proposalEncoded.out\n}\n\nexports.createExchange = (state, callback) => {\n  crypto.keys.generateEphemeralKeyPair(state.protocols.local.curveT, (err, res) => {\n    if (err) {\n      return callback(err)\n    }\n\n    state.ephemeralKey.local = res.key\n    state.shared.generate = res.genSharedKey\n\n    // Gather corpus to sign.\n    const selectionOut = Buffer.concat([\n      state.proposalEncoded.out,\n      state.proposalEncoded.in,\n      state.ephemeralKey.local\n    ])\n\n    state.key.local.sign(selectionOut, (err, sig) => {\n      if (err) {\n        return callback(err)\n      }\n\n      state.exchange.out = {\n        epubkey: state.ephemeralKey.local,\n        signature: sig\n      }\n\n      callback(null, pbm.Exchange.encode(state.exchange.out))\n    })\n  })\n}\n\nexports.identify = (state, msg, callback) => {\n  log('1.1 identify')\n\n  state.proposalEncoded.in = msg\n  state.proposal.in = pbm.Propose.decode(msg)\n  const pubkey = state.proposal.in.pubkey\n\n  state.key.remote = crypto.keys.unmarshalPublicKey(pubkey)\n\n  PeerId.createFromPubKey(pubkey.toString('base64'), (err, remoteId) => {\n    if (err) {\n      return callback(err)\n    }\n\n    // If we know who we are dialing to, double check\n    if (state.id.remote) {\n      if (state.id.remote.toB58String() !== remoteId.toB58String()) {\n        return callback(new Error('dialed to the wrong peer, Ids do not match'))\n      }\n    } else {\n      state.id.remote = remoteId\n    }\n\n    log('1.1 identify - %s - identified remote peer as %s', state.id.local.toB58String(), state.id.remote.toB58String())\n    callback()\n  })\n}\n\nexports.selectProtocols = (state, callback) => {\n  log('1.2 selection')\n\n  const local = {\n    pubKeyBytes: state.key.local.public.bytes,\n    exchanges: support.exchanges,\n    hashes: support.hashes,\n    ciphers: support.ciphers,\n    nonce: state.proposal.out.rand\n  }\n\n  const remote = {\n    pubKeyBytes: state.proposal.in.pubkey,\n    exchanges: state.proposal.in.exchanges.split(','),\n    hashes: state.proposal.in.hashes.split(','),\n    ciphers: state.proposal.in.ciphers.split(','),\n    nonce: state.proposal.in.rand\n  }\n\n  support.selectBest(local, remote, (err, selected) => {\n    if (err) {\n      return callback(err)\n    }\n    // we use the same params for both directions (must choose same curve)\n    // WARNING: if they dont SelectBest the same way, this won't work...\n    state.protocols.remote = {\n      order: selected.order,\n      curveT: selected.curveT,\n      cipherT: selected.cipherT,\n      hashT: selected.hashT\n    }\n\n    state.protocols.local = {\n      order: selected.order,\n      curveT: selected.curveT,\n      cipherT: selected.cipherT,\n      hashT: selected.hashT\n    }\n    callback()\n  })\n}\n\nexports.verify = (state, msg, callback) => {\n  log('2.1. verify')\n\n  state.exchange.in = pbm.Exchange.decode(msg)\n  state.ephemeralKey.remote = state.exchange.in.epubkey\n\n  const selectionIn = Buffer.concat([\n    state.proposalEncoded.in,\n    state.proposalEncoded.out,\n    state.ephemeralKey.remote\n  ])\n\n  state.key.remote.verify(selectionIn, state.exchange.in.signature, (err, sigOk) => {\n    if (err) {\n      return callback(err)\n    }\n\n    if (!sigOk) {\n      return callback(new Error('Bad signature'))\n    }\n\n    log('2.1. verify - signature verified')\n    callback()\n  })\n}\n\nexports.generateKeys = (state, callback) => {\n  log('2.2. keys')\n\n  waterfall([\n    (cb) => state.shared.generate(state.exchange.in.epubkey, cb),\n    (secret, cb) => {\n      state.shared.secret = secret\n\n      crypto.keys.keyStretcher(\n        state.protocols.local.cipherT,\n        state.protocols.local.hashT,\n        state.shared.secret,\n        cb\n      )\n    },\n    (keys, cb) => {\n      // use random nonces to decide order.\n      if (state.protocols.local.order > 0) {\n        state.protocols.local.keys = keys.k1\n        state.protocols.remote.keys = keys.k2\n      } else if (state.protocols.local.order < 0) {\n        // swap\n        state.protocols.local.keys = keys.k2\n        state.protocols.remote.keys = keys.k1\n      } else {\n        // we should've bailed before state. but if not, bail here.\n        return cb(new Error('you are trying to talk to yourself'))\n      }\n\n      log('2.3. mac + cipher')\n\n      parallel([\n        (_cb) => support.makeMacAndCipher(state.protocols.local, _cb),\n        (_cb) => support.makeMacAndCipher(state.protocols.remote, _cb)\n      ], cb)\n    }\n  ], callback)\n}\n\nexports.verifyNonce = (state, n2) => {\n  const n1 = state.proposal.out.rand\n\n  if (n1.equals(n2)) return\n\n  throw new Error(\n    `Failed to read our encrypted nonce: ${n1.toString('hex')} != ${n2.toString('hex')}`\n  )\n}\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst map = require('pull-stream/throughs/map')\nconst asyncMap = require('pull-stream/throughs/async-map')\nconst lp = require('pull-length-prefixed')\n\nconst lpOpts = {\n  fixed: true,\n  bytes: 4\n}\n\nexports.createBoxStream = (cipher, mac) => {\n  return pull(\n    ensureBuffer(),\n    asyncMap((chunk, cb) => {\n      cipher.encrypt(chunk, (err, data) => {\n        if (err) {\n          return cb(err)\n        }\n\n        mac.digest(data, (err, digest) => {\n          if (err) {\n            return cb(err)\n          }\n\n          cb(null, Buffer.concat([data, digest]))\n        })\n      })\n    }),\n    lp.encode(lpOpts)\n  )\n}\n\nexports.createUnboxStream = (decipher, mac) => {\n  return pull(\n    ensureBuffer(),\n    lp.decode(lpOpts),\n    asyncMap((chunk, cb) => {\n      const l = chunk.length\n      const macSize = mac.length\n\n      if (l < macSize) {\n        return cb(new Error(`buffer (${l}) shorter than MAC size (${macSize})`))\n      }\n\n      const mark = l - macSize\n      const data = chunk.slice(0, mark)\n      const macd = chunk.slice(mark)\n\n      mac.digest(data, (err, expected) => {\n        if (err) {\n          return cb(err)\n        }\n\n        if (!macd.equals(expected)) {\n          return cb(new Error(`MAC Invalid: ${macd.toString('hex')} != ${expected.toString('hex')}`))\n        }\n\n        // all good, decrypt\n        decipher.decrypt(data, (err, decrypted) => {\n          if (err) {\n            return cb(err)\n          }\n\n          cb(null, decrypted)\n        })\n      })\n    })\n  )\n}\n\nfunction ensureBuffer () {\n  return map((c) => {\n    if (typeof c === 'string') {\n      return Buffer.from(c, 'utf-8')\n    }\n\n    return c\n  })\n}\n","'use strict'\n\nconst mh = require('multihashing-async')\nconst lp = require('pull-length-prefixed')\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst collect = require('pull-stream/sinks/collect')\nconst crypto = require('libp2p-crypto')\nconst parallel = require('async/parallel')\n\nexports.exchanges = [\n  'P-256',\n  'P-384',\n  'P-521'\n]\n\nexports.ciphers = [\n  'AES-256',\n  'AES-128'\n]\n\nexports.hashes = [\n  'SHA256',\n  'SHA512'\n]\n\n// Determines which algorithm to use.  Note:  f(a, b) = f(b, a)\nexports.theBest = (order, p1, p2) => {\n  let first\n  let second\n\n  if (order < 0) {\n    first = p2\n    second = p1\n  } else if (order > 0) {\n    first = p1\n    second = p2\n  } else {\n    return p1[0]\n  }\n\n  for (let firstCandidate of first) {\n    for (let secondCandidate of second) {\n      if (firstCandidate === secondCandidate) {\n        return firstCandidate\n      }\n    }\n  }\n\n  throw new Error('No algorithms in common!')\n}\n\nexports.makeMacAndCipher = (target, callback) => {\n  parallel([\n    (cb) => makeMac(target.hashT, target.keys.macKey, cb),\n    (cb) => makeCipher(target.cipherT, target.keys.iv, target.keys.cipherKey, cb)\n  ], (err, macAndCipher) => {\n    if (err) {\n      return callback(err)\n    }\n\n    target.mac = macAndCipher[0]\n    target.cipher = macAndCipher[1]\n    callback()\n  })\n}\n\nfunction makeMac (hash, key, callback) {\n  crypto.hmac.create(hash, key, callback)\n}\n\nfunction makeCipher (cipherType, iv, key, callback) {\n  if (cipherType === 'AES-128' || cipherType === 'AES-256') {\n    return crypto.aes.create(key, iv, callback)\n  }\n\n  // TODO: figure out if Blowfish is needed and if so find a library for it.\n  callback(new Error(`unrecognized cipher type: ${cipherType}`))\n}\n\nexports.selectBest = (local, remote, cb) => {\n  exports.digest(Buffer.concat([\n    remote.pubKeyBytes,\n    local.nonce\n  ]), (err, oh1) => {\n    if (err) {\n      return cb(err)\n    }\n\n    exports.digest(Buffer.concat([\n      local.pubKeyBytes,\n      remote.nonce\n    ]), (err, oh2) => {\n      if (err) {\n        return cb(err)\n      }\n\n      const order = Buffer.compare(oh1, oh2)\n\n      if (order === 0) {\n        return cb(new Error('you are trying to talk to yourself'))\n      }\n\n      cb(null, {\n        curveT: exports.theBest(order, local.exchanges, remote.exchanges),\n        cipherT: exports.theBest(order, local.ciphers, remote.ciphers),\n        hashT: exports.theBest(order, local.hashes, remote.hashes),\n        order\n      })\n    })\n  })\n}\n\nexports.digest = (buf, cb) => {\n  mh.digest(buf, 'sha2-256', buf.length, cb)\n}\n\nexports.write = function write (state, msg, cb) {\n  cb = cb || (() => {})\n  pull(\n    values([msg]),\n    lp.encode({ fixed: true, bytes: 4 }),\n    collect((err, res) => {\n      if (err) {\n        return cb(err)\n      }\n      state.shake.write(res[0])\n      cb()\n    })\n  )\n}\n\nexports.read = function read (reader, cb) {\n  lp.decodeFromReader(reader, { fixed: true, bytes: 4 }, cb)\n}\n","'use strict'\n\nexports.ERR_WS_STAR_WEBSOCKET_CONNECTION = 'ERR_WS_STAR_WEBSOCKET_CONNECTION'\n","'use strict'\n\n// socket.io-pull-stream\nconst Queue = require('data-queue')\nconst uuid = require('uuid')\nconst pull = require('pull-stream')\nconst sioname = (type, name) => 'socket.io-pull-stream.' + type + (name ? '.' + name : '')\nconst debug = require('debug')\nconst _log = debug('socket.io-pull-stream')\n\nfunction doCodec (codec, data) {\n  if (data == null) return data\n  try {\n    return codec(data)\n  } catch (e) {\n    console.error('Codec Error')\n    console.error(e)\n    return false\n  }\n}\n\nconst codecs = {\n  hex: {\n    encode: v => v.toString('hex'),\n    decode: v => Buffer.from(v, 'hex')\n  },\n  plain: {\n    encode: v => v,\n    decode: v => v\n  },\n  buffer: { // always do Buffer.from because browsers\n    encode: v => Buffer.from(v),\n    decode: v => Buffer.from(v)\n  }\n}\n\nfunction getCodec (c) {\n  if (!c) c = 'plain'\n  if (typeof c === 'object') return c\n  const co = codecs[c]\n  if (!co) throw new Error('Invalid codec ' + c)\n  return co\n}\n\nfunction SIOSource (sio, id, opt) {\n  const q = Queue()\n  const log = sio.sioplog.bind(sio.sioplog, 'source(' + id + ')')\n  const codec = getCodec(opt.codec).decode\n  log('create source')\n  sio.emit(sioname('accept', id))\n\n  function unlisten () {\n    sio.removeAllListeners(sioname('error', id))\n    sio.removeAllListeners(sioname('queue', id))\n  }\n\n  sio.on(sioname('error', id), err => {\n    if (err === true) log('finish')\n    else log('error')\n    unlisten()\n    q.append({end: err})\n  })\n  sio.on(sioname('queue', id), data => {\n    log('queue data')\n    q.append({data: doCodec(codec, data)})\n  })\n  sio.once('disconnect', () => {\n    unlisten()\n    q.append({end: true})\n  })\n  return function (end, cb) {\n    log('reading')\n    if (end) return cb(end)\n    q.get((err, data) => {\n      if (err) return cb(err)\n      if (data.end) {\n        q.error(data.end)\n        return cb(data.end)\n      }\n      return cb(null, data.data)\n    })\n  }\n}\n\nfunction SIOSink (sio, id, opt) {\n  const q = Queue()\n  const log = sio.sioplog.bind(sio.sioplog, '  sink(' + id + ')')\n  const codec = getCodec(opt.codec).encode\n  let ended\n  log('create sink')\n  sio.once(sioname('accept', id), () => {\n    log('start transmission')\n\n    function loop () {\n      q.get((_, val) => {\n        let {data, err} = val || {}\n        if (_) err = _\n        log('send', err && err === true ? 'finish' : err ? 'error' : data ? 'data' : '<invalid>')\n        if (err && !_) q.error(err)\n        if (err) return sio.emit(sioname('error', id), err)\n        if (data) sio.emit(sioname('queue', id), doCodec(codec, data))\n        loop()\n      })\n    }\n    loop()\n  })\n\n  function doErr (end) {\n    q.append({err: end})\n    ended = end\n  }\n\n  sio.once('disconnect', () => doErr(true))\n\n  return function (read) {\n    read(null, function next (end, data) {\n      if (end) return doErr(end)\n      if (ended) return read(ended, next)\n      q.append({data})\n      read(null, next)\n    })\n  }\n}\n\nmodule.exports = function SIOPullStream (sio, opt) {\n  if (sio.createSink) return\n  sio.sioplog = sio.id ? _log.bind(_log, '[' + sio.id + ']') : _log\n  sio.createSink = (id, _) => {\n    if (!id) id = uuid()\n    const sink = SIOSink(sio, id, opt || _)\n    sink.id = id\n    return sink\n  }\n  sio.createSource = (id, _) => {\n    const source = SIOSource(sio, id, opt || _)\n    source.id = id\n    return source\n  }\n  sio.createProxy = (id, tsio, _) => {\n    pull(\n      sio.createSource(id, _),\n      tsio.createSink(id, _)\n    )\n  }\n}\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","'use strict'\n\nmodule.exports = {\n  PROTOCOL: '/ipfs/ping/1.0.0',\n  PING_LENGTH: 32\n}\n","'use strict'\n\nconst crypto = require('libp2p-crypto')\nconst constants = require('./constants')\n\nexports = module.exports\n\nexports.rnd = (length) => {\n  if (!length) {\n    length = constants.PING_LENGTH\n  }\n  return crypto.randomBytes(length)\n}\n","'use strict'\n\nconst debug = require('debug')\n\nconst log = debug('libp2p:floodsub')\nlog.err = debug('libp2p:floodsub:error')\n\nmodule.exports = {\n  log: log,\n  multicodec: '/floodsub/1.0.0'\n}\n","'use strict'\n\nconst EventEmitter = require('events')\nconst pull = require('pull-stream/pull')\nconst empty = require('pull-stream/sources/empty')\nconst asyncEach = require('async/each')\nconst TimeCache = require('time-cache')\nconst debug = require('debug')\nconst errcode = require('err-code')\n\nconst Peer = require('./peer')\nconst message = require('./message')\nconst { signMessage } = require('./message/sign')\nconst utils = require('./utils')\n\nconst nextTick = require('async/nextTick')\n\n/**\n * PubsubBaseProtocol handles the peers and connections logic for pubsub routers\n */\nclass PubsubBaseProtocol extends EventEmitter {\n  /**\n   * @param {String} debugName\n   * @param {String} multicodec\n   * @param {Object} libp2p libp2p implementation\n   * @param {Object} options\n   * @param {boolean} options.signMessages if messages should be signed, defaults to true\n   * @constructor\n   */\n  constructor (debugName, multicodec, libp2p, options) {\n    super()\n\n    options = {\n      signMessages: true,\n      ...options\n    }\n\n    this.log = debug(debugName)\n    this.log.err = debug(`${debugName}:error`)\n    this.multicodec = multicodec\n    this.libp2p = libp2p\n    this.started = false\n\n    if (options.signMessages) {\n      this.peerId = this.libp2p.peerInfo.id\n    }\n\n    /**\n     * Map of topics to which peers are subscribed to\n     *\n     * @type {Map<string, Peer>}\n     */\n    this.topics = new Map()\n\n    /**\n     * Cache of seen messages\n     *\n     * @type {TimeCache}\n     */\n    this.seenCache = new TimeCache()\n\n    /**\n     * Map of peers.\n     *\n     * @type {Map<string, Peer>}\n     */\n    this.peers = new Map()\n\n    // Dials that are currently in progress\n    this._dials = new Set()\n\n    this._onConnection = this._onConnection.bind(this)\n    this._dialPeer = this._dialPeer.bind(this)\n  }\n\n  /**\n   * Add a new connected peer to the peers map.\n   * @private\n   * @param {PeerInfo} peer peer info\n   * @returns {PeerInfo}\n   */\n  _addPeer (peer) {\n    const id = peer.info.id.toB58String()\n\n    /*\n      Always use an existing peer.\n\n      What is happening here is: \"If the other peer has already dialed to me, we already have\n      an establish link between the two, what might be missing is a\n      Connection specifically between me and that Peer\"\n     */\n    let existing = this.peers.get(id)\n    if (!existing) {\n      this.log('new peer', id)\n      this.peers.set(id, peer)\n      existing = peer\n\n      peer.once('close', () => this._removePeer(peer))\n    }\n    ++existing._references\n\n    return existing\n  }\n\n  /**\n   * Remove a peer from the peers map if it has no references.\n   * @private\n   * @param {Peer} peer peer state\n   * @returns {PeerInfo}\n   */\n  _removePeer (peer) {\n    const id = peer.info.id.toB58String()\n\n    this.log('remove', id, peer._references)\n    // Only delete when no one else is referencing this peer.\n    if (--peer._references === 0) {\n      this.log('delete peer', id)\n      this.peers.delete(id)\n    }\n\n    return peer\n  }\n\n  /**\n   * Dial a received peer.\n   * @private\n   * @param {PeerInfo} peerInfo peer info\n   * @param {function} callback\n   * @returns {void}\n   */\n  _dialPeer (peerInfo, callback) {\n    callback = callback || function noop () { }\n    const idB58Str = peerInfo.id.toB58String()\n\n    // If already have a PubSub conn, ignore\n    const peer = this.peers.get(idB58Str)\n    if (peer && peer.isConnected) {\n      return nextTick(() => callback())\n    }\n\n    // If already dialing this peer, ignore\n    if (this._dials.has(idB58Str)) {\n      this.log('already dialing %s, ignoring dial attempt', idB58Str)\n      return nextTick(() => callback())\n    }\n    this._dials.add(idB58Str)\n\n    this.log('dialing %s', idB58Str)\n    this.libp2p.dialProtocol(peerInfo, this.multicodec, (err, conn) => {\n      this.log('dial to %s complete', idB58Str)\n\n      // If the dial is not in the set, it means that pubsub has been\n      // stopped\n      const pubsubStopped = !this._dials.has(idB58Str)\n      this._dials.delete(idB58Str)\n\n      if (err) {\n        this.log.err(err)\n        return callback()\n      }\n\n      // pubsub has been stopped, so we should just bail out\n      if (pubsubStopped) {\n        this.log('pubsub was stopped, not processing dial to %s', idB58Str)\n        return callback()\n      }\n\n      this._onDial(peerInfo, conn, callback)\n    })\n  }\n\n  /**\n   * Dial a received peer.\n   * @private\n   * @param {PeerInfo} peerInfo peer info\n   * @param {Connection} conn connection to the peer\n   * @param {function} callback\n   */\n  _onDial (peerInfo, conn, callback) {\n    const idB58Str = peerInfo.id.toB58String()\n    this.log('connected', idB58Str)\n\n    const peer = this._addPeer(new Peer(peerInfo))\n    peer.attachConnection(conn)\n\n    nextTick(() => callback())\n  }\n\n  /**\n   * On successful connection event.\n   * @private\n   * @param {String} protocol connection protocol\n   * @param {Connection} conn connection to the peer\n   */\n  _onConnection (protocol, conn) {\n    conn.getPeerInfo((err, peerInfo) => {\n      if (err) {\n        this.log.err('Failed to identify incomming conn', err)\n        return pull(empty(), conn)\n      }\n\n      const idB58Str = peerInfo.id.toB58String()\n      const peer = this._addPeer(new Peer(peerInfo))\n\n      this._processConnection(idB58Str, conn, peer)\n    })\n  }\n\n  /**\n   * Overriding the implementation of _processConnection should keep the connection and is\n   * responsible for processing each RPC message received by other peers.\n   * @abstract\n   * @param {string} idB58Str peer id string in base58\n   * @param {Connection} conn connection\n   * @param {PeerInfo} peer peer info\n   * @returns {undefined}\n   *\n   */\n  _processConnection (idB58Str, conn, peer) {\n    throw errcode('_processConnection must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * On connection end event.\n   * @private\n   * @param {string} idB58Str peer id string in base58\n   * @param {PeerInfo} peer peer info\n   * @param {Error} err error for connection end\n   */\n  _onConnectionEnd (idB58Str, peer, err) {\n    // socket hang up, means the one side canceled\n    if (err && err.message !== 'socket hang up') {\n      this.log.err(err)\n    }\n\n    this.log('connection ended', idB58Str, err ? err.message : '')\n    this._removePeer(peer)\n  }\n\n  /**\n   * Normalizes the message and signs it, if signing is enabled\n   *\n   * @param {Message} message\n   * @param {function(Error, Message)} callback\n   */\n  _buildMessage (message, callback) {\n    const msg = utils.normalizeOutRpcMessage(message)\n    if (this.peerId) {\n      signMessage(this.peerId, msg, callback)\n    } else {\n      nextTick(callback, null, msg)\n    }\n  }\n\n  /**\n   * Overriding the implementation of publish should handle the appropriate algorithms for the publish/subscriber implementation.\n   * For example, a Floodsub implementation might simply publish each message to each topic for every peer\n   * @abstract\n   * @param {Array<string>|string} topics\n   * @param {Array<any>|any} messages\n   * @param {function(Error)} callback\n   * @returns {undefined}\n   *\n   */\n  publish (topics, messages, callback) {\n    throw errcode('publish must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Overriding the implementation of subscribe should handle the appropriate algorithms for the publish/subscriber implementation.\n   * For example, a Floodsub implementation might simply send a message for every peer showing interest in the topics\n   * @abstract\n   * @param {Array<string>|string} topics\n   * @returns {undefined}\n   */\n  subscribe (topics) {\n    throw errcode('subscribe must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Overriding the implementation of unsubscribe should handle the appropriate algorithms for the publish/subscriber implementation.\n   * For example, a Floodsub implementation might simply send a message for every peer revoking interest in the topics\n   * @abstract\n   * @param {Array<string>|string} topics\n   * @returns {undefined}\n   */\n  unsubscribe (topics) {\n    throw errcode('unsubscribe must be implemented by the subclass', 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Mounts the pubsub protocol onto the libp2p node and sends our\n   * subscriptions to every peer conneceted\n   *\n   * @param {Function} callback\n   * @returns {undefined}\n   *\n   */\n  start (callback) {\n    if (this.started) {\n      return nextTick(() => callback(new Error('already started')))\n    }\n    this.log('starting')\n\n    this.libp2p.handle(this.multicodec, this._onConnection)\n\n    // Speed up any new peer that comes in my way\n    this.libp2p.on('peer:connect', this._dialPeer)\n\n    // Dial already connected peers\n    const peerInfos = Object.values(this.libp2p.peerBook.getAll())\n\n    asyncEach(peerInfos, (peer, cb) => this._dialPeer(peer, cb), (err) => {\n      nextTick(() => {\n        this.log('started')\n        this.started = true\n        callback(err)\n      })\n    })\n  }\n\n  /**\n   * Unmounts the pubsub protocol and shuts down every connection\n   *\n   * @param {Function} callback\n   * @returns {undefined}\n   *\n   */\n  stop (callback) {\n    if (!this.started) {\n      return nextTick(() => callback(new Error('not started yet')))\n    }\n\n    this.libp2p.unhandle(this.multicodec)\n    this.libp2p.removeListener('peer:connect', this._dialPeer)\n\n    // Prevent any dials that are in flight from being processed\n    this._dials = new Set()\n\n    this.log('stopping')\n    asyncEach(this.peers.values(), (peer, cb) => peer.close(cb), (err) => {\n      if (err) {\n        return callback(err)\n      }\n\n      this.log('stopped')\n      this.peers = new Map()\n      this.started = false\n      callback()\n    })\n  }\n}\n\nmodule.exports = PubsubBaseProtocol\nmodule.exports.message = message\nmodule.exports.utils = utils\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _get = require('lodash/get');\n\nvar _get2 = _interopRequireDefault(_get);\n\nvar _isFunction = require('lodash/isFunction');\n\nvar _isFunction2 = _interopRequireDefault(_isFunction);\n\nvar _VisibilityChangeEmitter = require('./VisibilityChangeEmitter');\n\nvar _VisibilityChangeEmitter2 = _interopRequireDefault(_VisibilityChangeEmitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window */\n\n\nvar debug = require('debug')('latency-monitor:LatencyMonitor');\n\n/**\n * @typedef {Object} SummaryObject\n * @property {Number} events How many events were called\n * @property {Number} minMS What was the min time for a cb to be called\n * @property {Number} maxMS What was the max time for a cb to be called\n * @property {Number} avgMs What was the average time for a cb to be called\n * @property {Number} lengthMs How long this interval was in ms\n */\n\n/**\n * A class to monitor latency of any async function which works in a browser or node. This works by periodically calling\n * the asyncTestFn and timing how long it takes the callback to be called. It can also periodically emit stats about this.\n * This can be disabled and stats can be pulled via setting dataEmitIntervalMs = 0.\n *\n * The default implementation is an event loop latency monitor. This works by firing periodic events into the event loop\n * and timing how long it takes to get back.\n *\n * @example\n * const monitor = new LatencyMonitor();\n * monitor.on('data', (summary) => console.log('Event Loop Latency: %O', summary));\n *\n * @example\n * const monitor = new LatencyMonitor({latencyCheckIntervalMs: 1000, dataEmitIntervalMs: 60000, asyncTestFn:ping});\n * monitor.on('data', (summary) => console.log('Ping Pong Latency: %O', summary));\n */\n\nvar LatencyMonitor = function (_EventEmitter) {\n    _inherits(LatencyMonitor, _EventEmitter);\n\n    /**\n     * @param {Number} [latencyCheckIntervalMs=500] How often to add a latency check event (ms)\n     * @param {Number} [dataEmitIntervalMs=5000] How often to summarize latency check events. null or 0 disables event firing\n     * @param {function} [asyncTestFn] What cb-style async function to use\n     * @param {Number} [latencyRandomPercentage=5] What percent (+/-) of latencyCheckIntervalMs should we randomly use? This helps avoid alignment to other events.\n     */\n    function LatencyMonitor() {\n        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            latencyCheckIntervalMs = _ref.latencyCheckIntervalMs,\n            dataEmitIntervalMs = _ref.dataEmitIntervalMs,\n            asyncTestFn = _ref.asyncTestFn,\n            latencyRandomPercentage = _ref.latencyRandomPercentage;\n\n        _classCallCheck(this, LatencyMonitor);\n\n        var _this = _possibleConstructorReturn(this, (LatencyMonitor.__proto__ || Object.getPrototypeOf(LatencyMonitor)).call(this));\n\n        var that = _this;\n\n        // 0 isn't valid here, so its ok to use ||\n        that.latencyCheckIntervalMs = latencyCheckIntervalMs || 500; // 0.5s\n        that.latencyRandomPercentage = latencyRandomPercentage || 10;\n        that._latecyCheckMultiply = 2 * (that.latencyRandomPercentage / 100.0) * that.latencyCheckIntervalMs;\n        that._latecyCheckSubtract = that._latecyCheckMultiply / 2;\n\n        that.dataEmitIntervalMs = dataEmitIntervalMs === null || dataEmitIntervalMs === 0 ? undefined : dataEmitIntervalMs || 5 * 1000; // 5s\n        debug('latencyCheckIntervalMs: %s dataEmitIntervalMs: %s', that.latencyCheckIntervalMs, that.dataEmitIntervalMs);\n        if (that.dataEmitIntervalMs) {\n            debug('Expecting ~%s events per summary', that.latencyCheckIntervalMs / that.dataEmitIntervalMs);\n        } else {\n            debug('Not emitting summaries');\n        }\n\n        that.asyncTestFn = asyncTestFn; // If there is no asyncFn, we measure latency\n\n        // If process: use high resolution timer\n        if (process && process.hrtime) {\n            debug('Using process.hrtime for timing');\n            that.now = process.hrtime;\n            that.getDeltaMS = function (startTime) {\n                var hrtime = that.now(startTime);\n                return hrtime[0] * 1000 + hrtime[1] / 1000000;\n            };\n            // Let's try for a timer that only monotonically increases\n        } else if (typeof window !== 'undefined' && (0, _get2.default)(window, 'performance.now')) {\n            debug('Using performance.now for timing');\n            that.now = window.performance.now.bind(window.performance);\n            that.getDeltaMS = function (startTime) {\n                return Math.round(that.now() - startTime);\n            };\n        } else {\n            debug('Using Date.now for timing');\n            that.now = Date.now;\n            that.getDeltaMS = function (startTime) {\n                return that.now() - startTime;\n            };\n        }\n\n        that._latencyData = that._initLatencyData();\n\n        // We check for isBrowser because of browsers set max rates of timeouts when a page is hidden,\n        // so we fall back to another library\n        // See: http://stackoverflow.com/questions/6032429/chrome-timeouts-interval-suspended-in-background-tabs\n        if (isBrowser()) {\n            that._visibilityChangeEmitter = new _VisibilityChangeEmitter2.default();\n            that._visibilityChangeEmitter.on('visibilityChange', function (pageInFocus) {\n                if (pageInFocus) {\n                    that._startTimers();\n                } else {\n                    that._emitSummary();\n                    that._stopTimers();\n                }\n            });\n        }\n\n        if (!that._visibilityChangeEmitter || that._visibilityChangeEmitter.isVisible()) {\n            that._startTimers();\n        }\n        return _this;\n    }\n\n    /**\n     * Start internal timers\n     * @private\n     */\n\n\n    _createClass(LatencyMonitor, [{\n        key: '_startTimers',\n        value: function _startTimers() {\n            var _this2 = this;\n\n            // Timer already started, ignore this\n            if (this._checkLatencyID) {\n                return;\n            }\n            this._checkLatency();\n            if (this.dataEmitIntervalMs) {\n                this._emitIntervalID = setInterval(function () {\n                    return _this2._emitSummary();\n                }, this.dataEmitIntervalMs);\n                if ((0, _isFunction2.default)(this._emitIntervalID.unref)) {\n                    this._emitIntervalID.unref(); // Doesn't block exit\n                }\n            }\n        }\n\n        /**\n         * Stop internal timers\n         * @private\n         */\n\n    }, {\n        key: '_stopTimers',\n        value: function _stopTimers() {\n            if (this._checkLatencyID) {\n                clearTimeout(this._checkLatencyID);\n                this._checkLatencyID = undefined;\n            }\n            if (this._emitIntervalID) {\n                clearInterval(this._emitIntervalID);\n                this._emitIntervalID = undefined;\n            }\n        }\n\n        /**\n         * Emit summary only if there were events. It might not have any events if it was forced via a page hidden/show\n         * @private\n         */\n\n    }, {\n        key: '_emitSummary',\n        value: function _emitSummary() {\n            var summary = this.getSummary();\n            if (summary.events > 0) {\n                this.emit('data', summary);\n            }\n        }\n\n        /**\n         * Calling this function will end the collection period. If a timing event was already fired and somewhere in the queue,\n         * it will not count for this time period\n         * @returns {SummaryObject}\n         */\n\n    }, {\n        key: 'getSummary',\n        value: function getSummary() {\n            // We might want to adjust for the number of expected events\n            // Example: first 1 event it comes back, then such a long blocker that the next emit check comes\n            // Then this fires - looks like no latency!!\n            var latency = {\n                events: this._latencyData.events,\n                minMs: this._latencyData.minMs,\n                maxMs: this._latencyData.maxMs,\n                avgMs: this._latencyData.events ? this._latencyData.totalMs / this._latencyData.events : Number.POSITIVE_INFINITY,\n                lengthMs: this.getDeltaMS(this._latencyData.startTime)\n            };\n            this._latencyData = this._initLatencyData(); // Clear\n\n            debug('Summary: %O', latency);\n            return latency;\n        }\n\n        /**\n         * Randomly calls an async fn every roughly latencyCheckIntervalMs (plus some randomness). If no async fn is found,\n         * it will simply report on event loop latency.\n         *\n         * @private\n         */\n\n    }, {\n        key: '_checkLatency',\n        value: function _checkLatency() {\n            var _this3 = this;\n\n            var that = this;\n            // Randomness is needed to avoid alignment by accident to regular things in the event loop\n            var randomness = Math.random() * that._latecyCheckMultiply - that._latecyCheckSubtract;\n\n            // We use this to ensure that in case some overlap somehow, we don't take the wrong startTime/offset\n            var localData = {\n                deltaOffset: Math.ceil(that.latencyCheckIntervalMs + randomness),\n                startTime: that.now()\n            };\n\n            var cb = function cb() {\n                // We are already stopped, ignore this datapoint\n                if (!_this3._checkLatencyID) {\n                    return;\n                }\n                var deltaMS = that.getDeltaMS(localData.startTime) - localData.deltaOffset;\n                that._checkLatency(); // Start again ASAP\n\n                // Add the data point. If this gets complex, refactor it\n                that._latencyData.events++;\n                that._latencyData.minMs = Math.min(that._latencyData.minMs, deltaMS);\n                that._latencyData.maxMs = Math.max(that._latencyData.maxMs, deltaMS);\n                that._latencyData.totalMs += deltaMS;\n                debug('MS: %s Data: %O', deltaMS, that._latencyData);\n            };\n            debug('localData: %O', localData);\n\n            this._checkLatencyID = setTimeout(function () {\n                // This gets rid of including event loop\n                if (that.asyncTestFn) {\n                    // Clear timing related things\n                    localData.deltaOffset = 0;\n                    localData.startTime = that.now();\n                    that.asyncTestFn(cb);\n                } else {\n                    // setTimeout is not more accurate than 1ms, so this will ensure positive numbers. Add 1 to emitted data to remove.\n                    // This is not the best, but for now it'll be just fine. This isn't meant to be sub ms accurate.\n                    localData.deltaOffset -= 1;\n                    // If there is no function to test, we mean check latency which is a special case that is really cb => cb()\n                    // We avoid that for the few extra function all overheads. Also, we want to keep the timers different\n                    cb();\n                }\n            }, localData.deltaOffset);\n\n            if ((0, _isFunction2.default)(this._checkLatencyID.unref)) {\n                this._checkLatencyID.unref(); // Doesn't block exit\n            }\n        }\n    }, {\n        key: '_initLatencyData',\n        value: function _initLatencyData() {\n            return {\n                startTime: this.now(),\n                minMs: Number.POSITIVE_INFINITY,\n                maxMs: Number.NEGATIVE_INFINITY,\n                events: 0,\n                totalMs: 0\n            };\n        }\n    }]);\n\n    return LatencyMonitor;\n}(_events2.default);\n\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nexports.default = LatencyMonitor;\n//# sourceMappingURL=LatencyMonitor.js.map\n","'use strict'\n\nconst LRU = require('hashlru')\n\n/**\n * Creates and returns a Least Recently Used Cache\n *\n * @param {Number} maxSize\n * @returns {LRUCache}\n */\nmodule.exports = (maxSize) => {\n  const patched = LRU(maxSize)\n  patched.delete = patched.remove\n  return patched\n}\n","'use strict'\n\nconst EventEmitter = require('events')\nconst Big = require('bignumber.js')\nconst MovingAverage = require('moving-average')\nconst retimer = require('retimer')\n\n/**\n * A queue based manager for stat processing\n *\n * @param {Array<string>} initialCounters\n * @param {any} options\n */\nclass Stats extends EventEmitter {\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    this._queue = []\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    this._frequencyAccumulators = {}\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    const intervals = this._options.movingAverageIntervals\n\n    for (var i = 0; i < initialCounters.length; i++) {\n      var key = initialCounters[i]\n      this._stats[key] = Big(0)\n      this._movingAverages[key] = {}\n      for (var k = 0; k < intervals.length; k++) {\n        var interval = intervals[k]\n        var ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      }\n    }\n  }\n\n  /**\n   * Initializes the internal timer if there are items in the queue. This\n   * should only need to be called if `Stats.stop` was previously called, as\n   * `Stats.push` will also start the processing.\n   *\n   * @returns {void}\n   */\n  start () {\n    if (this._queue.length) {\n      this._resetComputeTimeout()\n    }\n  }\n\n  /**\n   * Stops processing and computing of stats by clearing the internal\n   * timer.\n   *\n   * @returns {void}\n   */\n  stop () {\n    if (this._timeout) {\n      this._timeout.clear()\n      this._timeout = null\n    }\n  }\n\n  /**\n   * Returns a clone of the current stats.\n   *\n   * @returns {Map<string, Stat>}\n   */\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  /**\n   * Returns a clone of the internal movingAverages\n   *\n   * @returns {Array<MovingAverage>}\n   */\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  /**\n   * Pushes the given operation data to the queue, along with the\n   * current Timestamp, then resets the update timer.\n   *\n   * @param {string} counter\n   * @param {number} inc\n   * @returns {void}\n   */\n  push (counter, inc) {\n    this._queue.push([counter, inc, Date.now()])\n    this._resetComputeTimeout()\n  }\n\n  /**\n   * Resets the timeout for triggering updates.\n   *\n   * @private\n   * @returns {void}\n   */\n  _resetComputeTimeout () {\n    if (this._timeout) {\n      this._timeout.reschedule(this._nextTimeout())\n    } else {\n      this._timeout = retimer(this._update, this._nextTimeout())\n    }\n  }\n\n  /**\n   * Calculates and returns the timeout for the next update based on\n   * the urgency of the update.\n   *\n   * @private\n   * @returns {number}\n   */\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    const timeout = Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n    return timeout\n  }\n\n  /**\n   * If there are items in the queue, they will will be processed and\n   * the frequency for all items will be updated based on the Timestamp\n   * of the last item in the queue. The `update` event will also be emitted\n   * with the latest stats.\n   *\n   * If there are no items in the queue, no action is taken.\n   *\n   * @private\n   * @returns {void}\n   */\n  _update () {\n    this._timeout = null\n    if (this._queue.length) {\n      let last\n      while (this._queue.length) {\n        const op = last = this._queue.shift()\n        this._applyOp(op)\n      }\n\n      this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  /**\n   * For each key in the stats, the frequncy and moving averages\n   * will be updated via Stats._updateFrequencyFor based on the time\n   * difference between calls to this method.\n   *\n   * @private\n   * @param {Timestamp} latestTime\n   * @returns {void}\n   */\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    Object.keys(this._stats).forEach((key) => {\n      this._updateFrequencyFor(key, timeDiff, latestTime)\n    })\n\n    this._frequencyLastTime = latestTime\n  }\n\n  /**\n   * Updates the `movingAverages` for the given `key` and also\n   * resets the `frequencyAccumulator` for the `key`.\n   *\n   * @private\n   * @param {string} key\n   * @param {number} timeDiffMS Time in milliseconds\n   * @param {Timestamp} latestTime Time in ticks\n   * @returns {void}\n   */\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    // if `timeDiff` is zero, `hz` becomes Infinity, so we fallback to 1ms\n    const safeTimeDiff = timeDiffMS || 1\n    const hz = (count / safeTimeDiff) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n\n    const intervals = this._options.movingAverageIntervals\n\n    for (var i = 0; i < intervals.length; i++) {\n      var movingAverageInterval = intervals[i]\n      var movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    }\n  }\n\n  /**\n   * For the given operation, `op`, the stats and `frequencyAccumulator`\n   * will be updated or initialized if they don't already exist.\n   *\n   * @private\n   * @param {Array<string, number>} op\n   * @throws {InvalidNumber}\n   * @returns {void}\n   */\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error('invalid increment number:', inc)\n    }\n\n    let n\n\n    if (!this._stats.hasOwnProperty(key)) {\n      n = this._stats[key] = Big(0)\n    } else {\n      n = this._stats[key]\n    }\n    this._stats[key] = n.plus(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n\nmodule.exports = Stats\n","'use strict'\n\nconst Connection = require('interface-connection').Connection\nconst pull = require('pull-stream/pull')\n\n/**\n * Creates a pull stream to run the given Connection stream through\n * the given Observer. This provides a way to more easily monitor connections\n * and their metadata. A new Connection will be returned that contains\n * has the attached Observer.\n *\n * @param {Transport} transport\n * @param {string} protocol\n * @param {Connection} connection\n * @param {Observer} observer\n * @returns {Connection}\n */\nmodule.exports = (transport, protocol, connection, observer) => {\n  const peerInfo = new Promise((resolve, reject) => {\n    connection.getPeerInfo((err, peerInfo) => {\n      if (!err && peerInfo) {\n        resolve(peerInfo)\n        return\n      }\n\n      const setPeerInfo = connection.setPeerInfo\n      connection.setPeerInfo = (pi) => {\n        setPeerInfo.call(connection, pi)\n        resolve(pi)\n      }\n    })\n  })\n\n  const stream = {\n    source: pull(\n      connection,\n      observer.incoming(transport, protocol, peerInfo)),\n    sink: pull(\n      observer.outgoing(transport, protocol, peerInfo),\n      connection)\n  }\n\n  return new Connection(stream, connection)\n}\n","'use strict'\n\nconst FSM = require('fsm-event')\nconst multistream = require('multistream-select')\nconst withIs = require('class-is')\n\nconst BaseConnection = require('./base')\n\nclass IncomingConnectionFSM extends BaseConnection {\n  constructor ({ connection, _switch, transportKey, peerInfo }) {\n    super({\n      _switch,\n      name: `inc:${_switch._peerInfo.id.toB58String().slice(0, 8)}`\n    })\n    this.conn = connection\n    this.theirPeerInfo = peerInfo || null\n    this.theirB58Id = this.theirPeerInfo ? this.theirPeerInfo.id.toB58String() : null\n    this.ourPeerInfo = this.switch._peerInfo\n    this.transportKey = transportKey\n    this.protocolMuxer = this.switch.protocolMuxer(this.transportKey)\n    this.msListener = new multistream.Listener()\n\n    this._state = FSM('DIALED', {\n      DISCONNECTED: {\n        disconnect: 'DISCONNECTED'\n      },\n      DIALED: { // Base connection to peer established\n        privatize: 'PRIVATIZING',\n        encrypt: 'ENCRYPTING'\n      },\n      PRIVATIZING: { // Protecting the base connection\n        done: 'PRIVATIZED',\n        disconnect: 'DISCONNECTING'\n      },\n      PRIVATIZED: { // Base connection is protected\n        encrypt: 'ENCRYPTING'\n      },\n      ENCRYPTING: { // Encrypting the base connection\n        done: 'ENCRYPTED',\n        disconnect: 'DISCONNECTING'\n      },\n      ENCRYPTED: { // Upgrading could not happen, the connection is encrypted and waiting\n        upgrade: 'UPGRADING',\n        disconnect: 'DISCONNECTING'\n      },\n      UPGRADING: { // Attempting to upgrade the connection with muxers\n        done: 'MUXED'\n      },\n      MUXED: {\n        disconnect: 'DISCONNECTING'\n      },\n      DISCONNECTING: { // Shutting down the connection\n        done: 'DISCONNECTED'\n      }\n    })\n\n    this._state.on('DISCONNECTED', () => this._onDisconnected())\n    this._state.on('PRIVATIZING', () => this._onPrivatizing())\n    this._state.on('PRIVATIZED', () => this._onPrivatized())\n    this._state.on('ENCRYPTING', () => this._onEncrypting())\n    this._state.on('ENCRYPTED', () => {\n      this.log('successfully encrypted connection to %s', this.theirB58Id || 'unknown peer')\n      this.emit('encrypted', this.conn)\n    })\n    this._state.on('UPGRADING', () => this._onUpgrading())\n    this._state.on('MUXED', () => {\n      this.log('successfully muxed connection to %s', this.theirB58Id || 'unknown peer')\n      this.emit('muxed', this.conn)\n    })\n    this._state.on('DISCONNECTING', () => {\n      this._state('done')\n    })\n  }\n\n  /**\n   * Attempts to encrypt `this.conn` with the Switch's crypto.\n   *\n   * @private\n   * @fires IncomingConnectionFSM#error\n   * @returns {void}\n   */\n  _onEncrypting () {\n    this.log('encrypting connection via %s', this.switch.crypto.tag)\n\n    this.msListener.addHandler(this.switch.crypto.tag, (protocol, _conn) => {\n      this.conn = this.switch.crypto.encrypt(this.ourPeerInfo.id, _conn, undefined, (err) => {\n        if (err) {\n          return this.close(err)\n        }\n        this.conn.getPeerInfo((_, peerInfo) => {\n          this.theirPeerInfo = peerInfo\n          this._state('done')\n        })\n      })\n    }, null)\n\n    // Start handling the connection\n    this.msListener.handle(this.conn, (err) => {\n      if (err) {\n        this.emit('crypto handshaking failed', err)\n      }\n    })\n  }\n\n  _onUpgrading () {\n    this.log('adding the protocol muxer to the connection')\n    this.protocolMuxer(this.conn, this.msListener)\n    this._state('done')\n  }\n}\n\nmodule.exports = withIs(IncomingConnectionFSM, {\n  className: 'IncomingConnectionFSM',\n  symbolName: 'libp2p-switch/IncomingConnectionFSM'\n})\n","'use strict'\n\nmodule.exports = {\n  BLACK_LIST_TTL: 5 * 60 * 1e3, // How long before an errored peer can be dialed again\n  BLACK_LIST_ATTEMPTS: 5, // Num of unsuccessful dials before a peer is permanently blacklisted\n  DIAL_TIMEOUT: 30e3, // How long in ms a dial attempt is allowed to take\n  MAX_COLD_CALLS: 50, // How many dials w/o protocols that can be queued\n  MAX_PARALLEL_DIALS: 100, // Maximum allowed concurrent dials\n  QUARTER_HOUR: 15 * 60e3,\n  PRIORITY_HIGH: 10,\n  PRIORITY_LOW: 20\n}\n","'use strict'\n\nconst once = require('once')\nconst Queue = require('./queue')\nconst { DIAL_ABORTED } = require('../errors')\nconst nextTick = require('async/nextTick')\nconst retimer = require('retimer')\nconst { QUARTER_HOUR, PRIORITY_HIGH } = require('../constants')\nconst debug = require('debug')\nconst log = debug('libp2p:switch:dial:manager')\nconst noop = () => {}\n\nclass DialQueueManager {\n  /**\n   * @constructor\n   * @param {Switch} _switch\n   */\n  constructor (_switch) {\n    this._queue = new Set()\n    this._coldCallQueue = new Set()\n    this._dialingQueues = new Set()\n    this._queues = {}\n    this.switch = _switch\n    this._cleanInterval = retimer(this._clean.bind(this), QUARTER_HOUR)\n    this.start()\n  }\n\n  /**\n   * Runs through all queues, aborts and removes them if they\n   * are no longer valid. A queue that is blacklisted indefinitely,\n   * is considered no longer valid.\n   * @private\n   */\n  _clean () {\n    const queues = Object.values(this._queues)\n    queues.forEach(dialQueue => {\n      // Clear if the queue has reached max blacklist\n      if (dialQueue.blackListed === Infinity) {\n        dialQueue.abort()\n        delete this._queues[dialQueue.id]\n        return\n      }\n\n      // Keep track of blacklisted queues\n      if (dialQueue.blackListed) return\n\n      // Clear if peer is no longer active\n      // To avoid reallocating memory, dont delete queues of\n      // connected peers, as these are highly likely to leverage the\n      // queues in the immediate term\n      if (!dialQueue.isRunning && dialQueue.length < 1) {\n        let isConnected = false\n        try {\n          const peerInfo = this.switch._peerBook.get(dialQueue.id)\n          isConnected = Boolean(peerInfo.isConnected())\n        } catch (_) {\n          // If we get an error, that means the peerbook doesnt have the peer\n        }\n\n        if (!isConnected) {\n          dialQueue.abort()\n          delete this._queues[dialQueue.id]\n        }\n      }\n    })\n\n    this._cleanInterval.reschedule(QUARTER_HOUR)\n  }\n\n  /**\n   * Allows the `DialQueueManager` to execute dials\n   */\n  start () {\n    this.isRunning = true\n  }\n\n  /**\n   * Iterates over all items in the DialerQueue\n   * and executes there callback with an error.\n   *\n   * This causes the entire DialerQueue to be drained\n   */\n  stop () {\n    this.isRunning = false\n    // Clear the general queue\n    this._queue.clear()\n    // Clear the cold call queue\n    this._coldCallQueue.clear()\n\n    this._cleanInterval.clear()\n\n    // Abort the individual peer queues\n    const queues = Object.values(this._queues)\n    queues.forEach(dialQueue => {\n      dialQueue.abort()\n      delete this._queues[dialQueue.id]\n    })\n  }\n\n  /**\n   * Adds the `dialRequest` to the queue and ensures queue is running\n   *\n   * @param {DialRequest} dialRequest\n   * @returns {void}\n   */\n  add ({ peerInfo, protocol, options, callback }) {\n    callback = callback ? once(callback) : noop\n\n    // Add the dial to its respective queue\n    const targetQueue = this.getQueue(peerInfo)\n\n    // Cold Call\n    if (options.priority > PRIORITY_HIGH) {\n      // If we have too many cold calls, abort the dial immediately\n      if (this._coldCallQueue.size >= this.switch.dialer.MAX_COLD_CALLS) {\n        return nextTick(callback, DIAL_ABORTED())\n      }\n\n      if (this._queue.has(targetQueue.id)) {\n        return nextTick(callback, DIAL_ABORTED())\n      }\n    }\n\n    targetQueue.add(protocol, options.useFSM, callback)\n\n    // If we're already connected to the peer, start the queue now\n    // While it might cause queues to go over the max parallel amount,\n    // it avoids blocking peers we're already connected to\n    if (peerInfo.isConnected()) {\n      targetQueue.start()\n      return\n    }\n\n    // If dialing is not allowed, abort\n    if (!targetQueue.isDialAllowed()) {\n      return\n    }\n\n    // Add the id to its respective queue set if the queue isn't running\n    if (!targetQueue.isRunning) {\n      if (options.priority <= PRIORITY_HIGH) {\n        this._queue.add(targetQueue.id)\n        this._coldCallQueue.delete(targetQueue.id)\n      // Only add it to the cold queue if it's not in the normal queue\n      } else {\n        this._coldCallQueue.add(targetQueue.id)\n      }\n    }\n\n    this.run()\n  }\n\n  /**\n   * Will execute up to `MAX_PARALLEL_DIALS` dials\n   */\n  run () {\n    if (!this.isRunning) return\n\n    if (this._dialingQueues.size < this.switch.dialer.MAX_PARALLEL_DIALS) {\n      let nextQueue = { done: true }\n      // Check the queue first and fall back to the cold call queue\n      if (this._queue.size > 0) {\n        nextQueue = this._queue.values().next()\n        this._queue.delete(nextQueue.value)\n      } else if (this._coldCallQueue.size > 0) {\n        nextQueue = this._coldCallQueue.values().next()\n        this._coldCallQueue.delete(nextQueue.value)\n      }\n\n      if (nextQueue.done) {\n        return\n      }\n\n      let targetQueue = this._queues[nextQueue.value]\n\n      if (!targetQueue) {\n        log('missing queue %s, maybe it was aborted?', nextQueue.value)\n        return\n      }\n\n      this._dialingQueues.add(targetQueue.id)\n      targetQueue.start()\n    }\n  }\n\n  /**\n   * Will remove the `peerInfo` from the dial blacklist\n   * @param {PeerInfo} peerInfo\n   */\n  clearBlacklist (peerInfo) {\n    const queue = this.getQueue(peerInfo)\n    queue.blackListed = null\n    queue.blackListCount = 0\n  }\n\n  /**\n   * A handler for when dialing queues stop. This will trigger\n   * `run()` in order to keep the queue processing.\n   * @private\n   * @param {string} id peer id of the queue that stopped\n   */\n  _onQueueStopped (id) {\n    this._dialingQueues.delete(id)\n    this.run()\n  }\n\n  /**\n   * Returns the `Queue` for the given `peerInfo`\n   * @param {PeerInfo} peerInfo\n   * @returns {Queue}\n   */\n  getQueue (peerInfo) {\n    const id = peerInfo.id.toB58String()\n\n    this._queues[id] = this._queues[id] || new Queue(id, this.switch, this._onQueueStopped.bind(this))\n    return this._queues[id]\n  }\n}\n\nmodule.exports = DialQueueManager\n","'use strict'\n\nconst Identify = require('libp2p-identify')\n\n/**\n * For a given multistream, registers to handle the given connection\n * @param {MultistreamDialer} multistream\n * @param {Connection} connection\n * @returns {Promise}\n */\nmodule.exports.msHandle = (multistream, connection) => {\n  return new Promise((resolve, reject) => {\n    multistream.handle(connection, (err) => {\n      if (err) return reject(err)\n      resolve()\n    })\n  })\n}\n\n/**\n * For a given multistream, selects the given protocol\n * @param {MultistreamDialer} multistream\n * @param {string} protocol\n * @returns {Promise} Resolves the selected Connection\n */\nmodule.exports.msSelect = (multistream, protocol) => {\n  return new Promise((resolve, reject) => {\n    multistream.select(protocol, (err, connection) => {\n      if (err) return reject(err)\n      resolve(connection)\n    })\n  })\n}\n\n/**\n * Runs identify for the given connection and verifies it against the\n * PeerInfo provided\n * @param {Connection} connection\n * @param {PeerInfo} cryptoPeerInfo The PeerInfo determined during crypto exchange\n * @returns {Promise} Resolves {peerInfo, observedAddrs}\n */\nmodule.exports.identifyDialer = (connection, cryptoPeerInfo) => {\n  return new Promise((resolve, reject) => {\n    Identify.dialer(connection, cryptoPeerInfo, (err, peerInfo, observedAddrs) => {\n      if (err) return reject(err)\n      resolve({ peerInfo, observedAddrs })\n    })\n  })\n}\n\n/**\n * Get unique values from `arr` using `getValue` to determine\n * what is used for uniqueness\n * @param {Array} arr The array to get unique values for\n * @param {function(value)} getValue The function to determine what is compared\n * @returns {Array}\n */\nmodule.exports.uniqueBy = (arr, getValue) => {\n  return [...new Map(arr.map((i) => [getValue(i), i])).values()]\n}\n","'use strict'\n\nexports.Listener = exports.listener = require('./listener')\nexports.Dialer = exports.dialer = require('./dialer')\nexports.matchSemver = require('./listener/match-semver')\nexports.matchExact = require('./listener/match-exact')\nexports.constants = require('./constants')\n","'use strict'\n\nconst FSM = require('fsm-event')\nconst Circuit = require('libp2p-circuit')\nconst multistream = require('multistream-select')\nconst withIs = require('class-is')\nconst BaseConnection = require('./base')\nconst parallel = require('async/parallel')\nconst nextTick = require('async/nextTick')\nconst identify = require('libp2p-identify')\nconst errCode = require('err-code')\nconst { msHandle, msSelect, identifyDialer } = require('../utils')\n\nconst observeConnection = require('../observe-connection')\nconst {\n  CONNECTION_FAILED,\n  DIAL_SELF,\n  INVALID_STATE_TRANSITION,\n  NO_TRANSPORTS_REGISTERED,\n  maybeUnexpectedEnd\n} = require('../errors')\n\n/**\n * @typedef {Object} ConnectionOptions\n * @property {Switch} _switch Our switch instance\n * @property {PeerInfo} peerInfo The PeerInfo of the peer to dial\n * @property {Muxer} muxer Optional - A muxed connection\n * @property {Connection} conn Optional - The base connection\n * @property {string} type Optional - identify the connection as incoming or outgoing. Defaults to out.\n */\n\n/**\n * ConnectionFSM handles the complex logic of managing a connection\n * between peers. ConnectionFSM is internally composed of a state machine\n * to help improve the usability and debuggability of connections. The\n * state machine also helps to improve the ability to handle dial backoff,\n * coalescing dials and dial locks.\n */\nclass ConnectionFSM extends BaseConnection {\n  /**\n   * @param {ConnectionOptions} connectionOptions\n   * @constructor\n   */\n  constructor ({ _switch, peerInfo, muxer, conn, type = 'out' }) {\n    super({\n      _switch,\n      name: `${type}:${_switch._peerInfo.id.toB58String().slice(0, 8)}`\n    })\n\n    this.theirPeerInfo = peerInfo\n    this.theirB58Id = this.theirPeerInfo.id.toB58String()\n\n    this.conn = conn // The base connection\n    this.muxer = muxer // The upgraded/muxed connection\n\n    let startState = 'DISCONNECTED'\n    if (this.muxer) {\n      startState = 'MUXED'\n    }\n\n    this._state = FSM(startState, {\n      DISCONNECTED: { // No active connections exist for the peer\n        dial: 'DIALING',\n        disconnect: 'DISCONNECTED',\n        done: 'DISCONNECTED'\n      },\n      DIALING: { // Creating an initial connection\n        abort: 'ABORTED',\n        // emit events for different transport dials?\n        done: 'DIALED',\n        error: 'ERRORED',\n        disconnect: 'DISCONNECTING'\n      },\n      DIALED: { // Base connection to peer established\n        encrypt: 'ENCRYPTING',\n        privatize: 'PRIVATIZING'\n      },\n      PRIVATIZING: { // Protecting the base connection\n        done: 'PRIVATIZED',\n        abort: 'ABORTED',\n        disconnect: 'DISCONNECTING'\n      },\n      PRIVATIZED: { // Base connection is protected\n        encrypt: 'ENCRYPTING'\n      },\n      ENCRYPTING: { // Encrypting the base connection\n        done: 'ENCRYPTED',\n        error: 'ERRORED',\n        disconnect: 'DISCONNECTING'\n      },\n      ENCRYPTED: { // Upgrading could not happen, the connection is encrypted and waiting\n        upgrade: 'UPGRADING',\n        disconnect: 'DISCONNECTING'\n      },\n      UPGRADING: { // Attempting to upgrade the connection with muxers\n        stop: 'CONNECTED', // If we cannot mux, stop upgrading\n        done: 'MUXED',\n        error: 'ERRORED',\n        disconnect: 'DISCONNECTING'\n      },\n      MUXED: {\n        disconnect: 'DISCONNECTING'\n      },\n      CONNECTED: { // A non muxed connection is established\n        disconnect: 'DISCONNECTING'\n      },\n      DISCONNECTING: { // Shutting down the connection\n        done: 'DISCONNECTED',\n        disconnect: 'DISCONNECTING'\n      },\n      ABORTED: { }, // A severe event occurred\n      ERRORED: { // An error occurred, but future dials may be allowed\n        disconnect: 'DISCONNECTING' // There could be multiple options here, but this is a likely action\n      }\n    })\n\n    this._state.on('DISCONNECTED', () => this._onDisconnected())\n    this._state.on('DIALING', () => this._onDialing())\n    this._state.on('DIALED', () => this._onDialed())\n    this._state.on('PRIVATIZING', () => this._onPrivatizing())\n    this._state.on('PRIVATIZED', () => this._onPrivatized())\n    this._state.on('ENCRYPTING', () => this._onEncrypting())\n    this._state.on('ENCRYPTED', () => {\n      this.log('successfully encrypted connection to %s', this.theirB58Id)\n      this.emit('encrypted', this.conn)\n    })\n    this._state.on('UPGRADING', () => this._onUpgrading())\n    this._state.on('MUXED', () => {\n      this.log('successfully muxed connection to %s', this.theirB58Id)\n      delete this.switch.conns[this.theirB58Id]\n      this.emit('muxed', this.muxer)\n    })\n    this._state.on('CONNECTED', () => {\n      this.log('unmuxed connection opened to %s', this.theirB58Id)\n      this.emit('unmuxed', this.conn)\n    })\n    this._state.on('DISCONNECTING', () => this._onDisconnecting())\n    this._state.on('ABORTED', () => this._onAborted())\n    this._state.on('ERRORED', () => this._onErrored())\n    this._state.on('error', (err) => this._onStateError(err))\n  }\n\n  /**\n   * Puts the state into dialing mode\n   *\n   * @fires ConnectionFSM#Error May emit a DIAL_SELF error\n   * @returns {void}\n   */\n  dial () {\n    if (this.theirB58Id === this.ourPeerInfo.id.toB58String()) {\n      return this.emit('error', DIAL_SELF())\n    } else if (this.getState() === 'DIALING') {\n      return this.log('attempted to dial while already dialing, ignoring')\n    }\n\n    this._state('dial')\n  }\n\n  /**\n   * Initiates a handshake for the given protocol\n   *\n   * @param {string} protocol The protocol to negotiate\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  shake (protocol, callback) {\n    // If there is no protocol set yet, don't perform the handshake\n    if (!protocol) {\n      return callback(null, null)\n    }\n\n    if (this.muxer && this.muxer.newStream) {\n      return this.muxer.newStream((err, stream) => {\n        if (err) {\n          return callback(err, null)\n        }\n\n        this.log('created new stream to %s', this.theirB58Id)\n        this._protocolHandshake(protocol, stream, callback)\n      })\n    }\n\n    this._protocolHandshake(protocol, this.conn, callback)\n  }\n\n  /**\n   * Puts the state into muxing mode\n   *\n   * @returns {void}\n   */\n  upgrade () {\n    this._state('upgrade')\n  }\n\n  /**\n   * Event handler for dialing. Transitions state when successful.\n   *\n   * @private\n   * @fires ConnectionFSM#error\n   * @returns {void}\n   */\n  _onDialing () {\n    this.log('dialing %s', this.theirB58Id)\n\n    if (!this.switch.hasTransports()) {\n      return this.close(NO_TRANSPORTS_REGISTERED())\n    }\n\n    const tKeys = this.switch.availableTransports(this.theirPeerInfo)\n\n    const circuitEnabled = Boolean(this.switch.transports[Circuit.tag])\n\n    if (circuitEnabled && !tKeys.includes(Circuit.tag)) {\n      tKeys.push(Circuit.tag)\n    }\n\n    const nextTransport = (key) => {\n      let transport = key\n      if (!transport) {\n        if (!circuitEnabled) {\n          return this.close(\n            CONNECTION_FAILED(`Circuit not enabled and all transports failed to dial peer ${this.theirB58Id}!`)\n          )\n        }\n\n        return this.close(\n          CONNECTION_FAILED(`No available transports to dial peer ${this.theirB58Id}!`)\n        )\n      }\n\n      if (transport === Circuit.tag) {\n        this.theirPeerInfo.multiaddrs.add(`/p2p-circuit/p2p/${this.theirB58Id}`)\n      }\n\n      this.log('dialing transport %s', transport)\n      this.switch.transport.dial(transport, this.theirPeerInfo, (errors, _conn) => {\n        if (errors) {\n          this.emit('error:connection_attempt_failed', errors)\n          this.log(errors)\n          return nextTransport(tKeys.shift())\n        }\n\n        this.conn = observeConnection(transport, null, _conn, this.switch.observer)\n        this._state('done')\n      })\n    }\n\n    nextTransport(tKeys.shift())\n  }\n\n  /**\n   * Once a connection has been successfully dialed, the connection\n   * will be privatized or encrypted depending on the presence of the\n   * Switch.protector.\n   *\n   * @returns {void}\n   */\n  _onDialed () {\n    this.log('successfully dialed %s', this.theirB58Id)\n\n    this.emit('connected', this.conn)\n  }\n\n  /**\n   * Event handler for disconnecting. Handles any needed cleanup\n   *\n   * @returns {void}\n   */\n  _onDisconnecting () {\n    this.log('disconnecting from %s', this.theirB58Id, Boolean(this.muxer))\n\n    delete this.switch.conns[this.theirB58Id]\n\n    let tasks = []\n\n    // Clean up stored connections\n    if (this.muxer) {\n      tasks.push((cb) => {\n        this.muxer.end(() => {\n          delete this.muxer\n          cb()\n        })\n      })\n    }\n\n    // If we have the base connection, abort it\n    // Ignore abort errors, since we're closing\n    if (this.conn) {\n      try {\n        this.conn.source.abort()\n      } catch (_) { }\n      delete this.conn\n    }\n\n    parallel(tasks, () => {\n      this._state('done')\n    })\n  }\n\n  /**\n   * Attempts to encrypt `this.conn` with the Switch's crypto.\n   *\n   * @private\n   * @fires ConnectionFSM#error\n   * @returns {void}\n   */\n  _onEncrypting () {\n    const msDialer = new multistream.Dialer()\n    msDialer.handle(this.conn, (err) => {\n      if (err) {\n        return this.close(maybeUnexpectedEnd(err))\n      }\n\n      this.log('selecting crypto %s to %s', this.switch.crypto.tag, this.theirB58Id)\n\n      msDialer.select(this.switch.crypto.tag, (err, _conn) => {\n        if (err) {\n          return this.close(maybeUnexpectedEnd(err))\n        }\n\n        const observedConn = observeConnection(null, this.switch.crypto.tag, _conn, this.switch.observer)\n        const encryptedConn = this.switch.crypto.encrypt(this.ourPeerInfo.id, observedConn, this.theirPeerInfo.id, (err) => {\n          if (err) {\n            return this.close(err)\n          }\n\n          this.conn = encryptedConn\n          this.conn.setPeerInfo(this.theirPeerInfo)\n          this._state('done')\n        })\n      })\n    })\n  }\n\n  /**\n   * Iterates over each Muxer on the Switch and attempts to upgrade\n   * the given `connection`. Successful muxed connections will be stored\n   * on the Switch.muxedConns with `b58Id` as their key for future reference.\n   *\n   * @private\n   * @returns {void}\n   */\n  _onUpgrading () {\n    const muxers = Object.keys(this.switch.muxers)\n    this.log('upgrading connection to %s', this.theirB58Id)\n\n    if (muxers.length === 0) {\n      return this._state('stop')\n    }\n\n    const msDialer = new multistream.Dialer()\n    msDialer.handle(this.conn, (err) => {\n      if (err) {\n        return this._didUpgrade(err)\n      }\n\n      // 1. try to handshake in one of the muxers available\n      // 2. if succeeds\n      //  - add the muxedConn to the list of muxedConns\n      //  - add incomming new streams to connHandler\n      const nextMuxer = (key) => {\n        this.log('selecting %s', key)\n        msDialer.select(key, (err, _conn) => {\n          if (err) {\n            if (muxers.length === 0) {\n              return this._didUpgrade(err)\n            }\n\n            return nextMuxer(muxers.shift())\n          }\n\n          // observe muxed connections\n          const conn = observeConnection(null, key, _conn, this.switch.observer)\n\n          this.muxer = this.switch.muxers[key].dialer(conn)\n\n          this.muxer.once('close', () => {\n            this.close()\n          })\n\n          // For incoming streams, in case identify is on\n          this.muxer.on('stream', (conn) => {\n            this.log('new stream created via muxer to %s', this.theirB58Id)\n            conn.setPeerInfo(this.theirPeerInfo)\n            this.switch.protocolMuxer(null)(conn)\n          })\n\n          this._didUpgrade(null)\n\n          // Run identify on the connection\n          if (this.switch.identify) {\n            this._identify((err, results) => {\n              if (err) {\n                return this.close(err)\n              }\n              this.theirPeerInfo = this.switch._peerBook.put(results.peerInfo)\n            })\n          }\n        })\n      }\n\n      nextMuxer(muxers.shift())\n    })\n  }\n\n  /**\n   * Runs the identify protocol on the connection\n   * @private\n   * @param {function(error, { PeerInfo })} callback\n   * @returns {void}\n   */\n  _identify (callback) {\n    if (!this.muxer) {\n      return nextTick(callback, errCode('The connection was already closed', 'ERR_CONNECTION_CLOSED'))\n    }\n    this.muxer.newStream(async (err, conn) => {\n      if (err) return callback(err)\n      const ms = new multistream.Dialer()\n      let results\n      try {\n        await msHandle(ms, conn)\n        const msConn = await msSelect(ms, identify.multicodec)\n        results = await identifyDialer(msConn, this.theirPeerInfo)\n      } catch (err) {\n        return callback(err)\n      }\n      callback(null, results)\n    })\n  }\n\n  /**\n   * Analyses the given error, if it exists, to determine where the state machine\n   * needs to go.\n   *\n   * @param {Error} err\n   * @returns {void}\n   */\n  _didUpgrade (err) {\n    if (err) {\n      this.log('Error upgrading connection:', err)\n      this.switch.conns[this.theirB58Id] = this\n      this.emit('error:upgrade_failed', err)\n      // Cant upgrade, hold the encrypted connection\n      return this._state('stop')\n    }\n\n    // move the state machine forward\n    this._state('done')\n  }\n\n  /**\n   * Performs the protocol handshake for the given protocol\n   * over the given connection. The resulting error or connection\n   * will be returned via the callback.\n   *\n   * @private\n   * @param {string} protocol\n   * @param {Connection} connection\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  _protocolHandshake (protocol, connection, callback) {\n    const msDialer = new multistream.Dialer()\n    msDialer.handle(connection, (err) => {\n      if (err) {\n        return callback(err, null)\n      }\n\n      msDialer.select(protocol, (err, _conn) => {\n        if (err) {\n          this.log('could not perform protocol handshake:', err)\n          return callback(err, null)\n        }\n\n        const conn = observeConnection(null, protocol, _conn, this.switch.observer)\n        this.log('successfully performed handshake of %s to %s', protocol, this.theirB58Id)\n        this.emit('connection', conn)\n        callback(null, conn)\n      })\n    })\n  }\n\n  /**\n   * Event handler for state transition errors\n   *\n   * @param {Error} err\n   * @returns {void}\n   */\n  _onStateError (err) {\n    this.emit('error', INVALID_STATE_TRANSITION(err))\n    this.log(err)\n  }\n}\n\nmodule.exports = withIs(ConnectionFSM, {\n  className: 'ConnectionFSM',\n  symbolName: 'libp2p-switch/ConnectionFSM'\n})\n","'use strict'\n\nexports = module.exports\nexports.multicodec = '/ipfs/id/1.0.0'\nexports.listener = require('./listener')\nexports.dialer = require('./dialer')\nexports.message = require('./message')\n","'use strict'\n\nconst tryEach = require('async/tryEach')\nconst debug = require('debug')\n\nconst log = debug('libp2p:switch:dialer')\n\nconst DialQueue = require('./queue')\n\n/**\n * Track dials per peer and limited them.\n */\nclass LimitDialer {\n  /**\n   * Create a new dialer.\n   *\n   * @param {number} perPeerLimit\n   * @param {number} dialTimeout\n   */\n  constructor (perPeerLimit, dialTimeout) {\n    log('create: %s peer limit, %s dial timeout', perPeerLimit, dialTimeout)\n    this.perPeerLimit = perPeerLimit\n    this.dialTimeout = dialTimeout\n    this.queues = new Map()\n  }\n\n  /**\n   * Dial a list of multiaddrs on the given transport.\n   *\n   * @param {PeerId} peer\n   * @param {SwarmTransport} transport\n   * @param {Array<Multiaddr>} addrs\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  dialMany (peer, transport, addrs, callback) {\n    log('dialMany:start')\n    // we use a token to track if we want to cancel following dials\n    const token = { cancel: false }\n\n    let errors = []\n    const tasks = addrs.map((m) => {\n      return (cb) => this.dialSingle(peer, transport, m, token, (err, result) => {\n        if (err) {\n          errors.push(err)\n          return cb(err)\n        }\n        return cb(null, result)\n      })\n    })\n\n    tryEach(tasks, (_, result) => {\n      if (result && result.conn) {\n        log('dialMany:success')\n        return callback(null, result)\n      }\n\n      log('dialMany:error')\n      callback(errors)\n    })\n  }\n\n  /**\n   * Dial a single multiaddr on the given transport.\n   *\n   * @param {PeerId} peer\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {CancelToken} token\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  dialSingle (peer, transport, addr, token, callback) {\n    const ps = peer.toB58String()\n    log('dialSingle: %s:%s', ps, addr.toString())\n    let q\n    if (this.queues.has(ps)) {\n      q = this.queues.get(ps)\n    } else {\n      q = new DialQueue(this.perPeerLimit, this.dialTimeout)\n      this.queues.set(ps, q)\n    }\n\n    q.push(transport, addr, token, callback)\n  }\n}\n\nmodule.exports = LimitDialer\n","'use strict'\n\nconst mafmt = require('mafmt')\nconst multiaddr = require('multiaddr')\n\nconst CircuitDialer = require('./circuit/dialer')\nconst utilsFactory = require('./circuit/utils')\n\nconst debug = require('debug')\nconst log = debug('libp2p:circuit:transportdialer')\nlog.err = debug('libp2p:circuit:error:transportdialer')\n\nconst createListener = require('./listener')\n\nclass Circuit {\n  static get tag () {\n    return 'Circuit'\n  }\n\n  /**\n   * Creates an instance of Dialer.\n   *\n   * @param {Swarm} swarm - the swarm\n   * @param {any} options - config options\n   *\n   * @memberOf Dialer\n   */\n  constructor (swarm, options) {\n    this.options = options || {}\n\n    this.swarm = swarm\n    this.dialer = null\n    this.utils = utilsFactory(swarm)\n    this.peerInfo = this.swarm._peerInfo\n    this.relays = this.filter(this.peerInfo.multiaddrs.toArray())\n\n    // if no explicit relays, add a default relay addr\n    if (this.relays.length === 0) {\n      this.peerInfo\n        .multiaddrs\n        .add(`/p2p-circuit/ipfs/${this.peerInfo.id.toB58String()}`)\n    }\n\n    this.dialer = new CircuitDialer(swarm, options)\n\n    this.swarm.on('peer-mux-established', (peerInfo) => {\n      this.dialer.canHop(peerInfo)\n    })\n    this.swarm.on('peer-mux-closed', (peerInfo) => {\n      this.dialer.relayPeers.delete(peerInfo.id.toB58String())\n    })\n  }\n\n  /**\n   * Dial the relays in the Addresses.Swarm config\n   *\n   * @param {Array} relays\n   * @return {void}\n   */\n  _dialSwarmRelays () {\n    // if we have relay addresses in swarm config, then dial those relays\n    this.relays.forEach((relay) => {\n      let relaySegments = relay\n        .toString()\n        .split('/p2p-circuit')\n        .filter(segment => segment.length)\n\n      relaySegments.forEach((relaySegment) => {\n        const ma = this.utils.peerInfoFromMa(multiaddr(relaySegment))\n        this.dialer._dialRelay(ma)\n      })\n    })\n  }\n\n  /**\n   * Dial a peer over a relay\n   *\n   * @param {multiaddr} ma - the multiaddr of the peer to dial\n   * @param {Object} options - dial options\n   * @param {Function} cb - a callback called once dialed\n   * @returns {Connection} - the connection\n   *\n   * @memberOf Dialer\n   */\n  dial (ma, options, cb) {\n    return this.dialer.dial(ma, options, cb)\n  }\n\n  /**\n   * Create a listener\n   *\n   * @param {any} options\n   * @param {Function} handler\n   * @return {listener}\n   */\n  createListener (options, handler) {\n    if (typeof options === 'function') {\n      handler = options\n      options = this.options || {}\n    }\n\n    const listener = createListener(this.swarm, options, handler)\n    listener.on('listen', this._dialSwarmRelays.bind(this))\n    return listener\n  }\n\n  /**\n   * Filter check for all multiaddresses\n   * that this transport can dial on\n   *\n   * @param {any} multiaddrs\n   * @returns {Array<multiaddr>}\n   *\n   * @memberOf Dialer\n   */\n  filter (multiaddrs) {\n    if (!Array.isArray(multiaddrs)) {\n      multiaddrs = [multiaddrs]\n    }\n    return multiaddrs.filter((ma) => {\n      return mafmt.Circuit.matches(ma)\n    })\n  }\n}\n\nmodule.exports = Circuit\n","'use strict'\n\nmodule.exports = function extractDataFromBlock (block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length\n  const blockEnd = blockStart + blockLength\n\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    // If we are looking for a byte range that is starts after the start of the block,\n    // return an empty block.  This can happen when internal nodes contain data\n    return Buffer.alloc(0)\n  }\n\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    // If the end byte is in the current block, truncate the block to the end byte\n    block = block.slice(0, requestedEnd - blockStart)\n  }\n\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    // If the start byte is in the current block, skip to the start byte\n    block = block.slice(requestedStart - blockStart)\n  }\n\n  return block\n}\n","'use strict'\n\nconst errCode = require('err-code')\n\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (!length && length !== 0) {\n    length = size - offset\n  }\n\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset + length > size) {\n    length = size - offset\n  }\n\n  return {\n    offset,\n    length\n  }\n}\n\nmodule.exports = validateOffsetAndLength\n","'use strict'\n\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return async function * (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name, `${path}/${link.Name}`, [], depth + 1, ipld)\n\n      yield result.entry\n    }\n  }\n}\n\nmodule.exports = directoryContent\n","'use strict'\n\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return (options = {}) => {\n    return listDirectory(node, path, resolve, depth, ipld, options)\n  }\n}\n\nasync function * listDirectory (node, path, resolve, depth, ipld, options) {\n  const links = node.Links\n\n  for (const link of links) {\n    const name = link.Name.substring(2)\n\n    if (name) {\n      const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, ipld)\n\n      yield result.entry\n    } else {\n      // descend into subshard\n      node = await ipld.get(link.Hash)\n\n      for await (const file of listDirectory(node, path, resolve, depth, ipld, options)) {\n        yield file\n      }\n    }\n  }\n}\n\nmodule.exports = hamtShardedDirectoryContent\n","'use strict'\n\nconst extractDataFromBlock = require('../../../utils/extract-data-from-block')\nconst validateOffsetAndLength = require('../../../utils/validate-offset-and-length')\nconst UnixFS = require('ipfs-unixfs')\nconst errCode = require('err-code')\n\nasync function * emitBytes (ipld, node, start, end, streamPosition = 0) {\n  // a `raw` node\n  if (Buffer.isBuffer(node)) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end)\n\n    if (buf.length) {\n      yield buf\n    }\n\n    streamPosition += buf.length\n\n    return streamPosition\n  }\n\n  let file\n\n  try {\n    file = UnixFS.unmarshal(node.Data)\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  // might be a unixfs `raw` node or have data on intermediate nodes\n  const nodeHasData = Boolean(file.data && file.data.length)\n\n  if (nodeHasData) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end)\n\n    if (buf.length) {\n      yield buf\n    }\n\n    streamPosition += file.data.length\n  }\n\n  let childStart = streamPosition\n\n  // work out which child nodes contain the requested data\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i]\n    const childEnd = streamPosition + file.blockSizes[i]\n\n    if ((start >= childStart && start < childEnd) || // child has offset byte\n        (end > childStart && end <= childEnd) || // child has end byte\n        (start < childStart && end > childEnd)) { // child is between offset and end bytes\n      const child = await ipld.get(childLink.Hash)\n\n      for await (const buf of emitBytes(ipld, child, start, end, streamPosition)) {\n        streamPosition += buf.length\n\n        yield buf\n      }\n    }\n\n    streamPosition = childEnd\n    childStart = childEnd + 1\n  }\n}\n\nconst fileContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return (options = {}) => {\n    const fileSize = unixfs.fileSize()\n\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(fileSize, options.offset, options.length)\n\n    const start = offset\n    const end = offset + length\n\n    return emitBytes(ipld, node, start, end)\n  }\n}\n\nmodule.exports = fileContent\n","'use strict'\n\nconst Bucket = require('hamt-sharding/src/bucket')\nconst DirSharded = require('ipfs-unixfs-importer/src/dir-sharded')\n\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(\n    links.map(link => {\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        return bucket._putObjectAt(pos, new Bucket({\n          hashFn: DirSharded.hashFn\n        }, bucket, pos))\n      }\n\n      return rootBucket.put(link.Name.substring(2), true)\n    })\n  )\n}\n\nconst toPrefix = (position) => {\n  return position\n    .toString('16')\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nconst toBucketPath = (position) => {\n  let bucket = position.bucket\n  const path = []\n\n  while (bucket._parent) {\n    path.push(bucket)\n\n    bucket = bucket._parent\n  }\n\n  path.push(bucket)\n\n  return path.reverse()\n}\n\nconst findShardCid = async (node, name, ipld, context) => {\n  if (!context) {\n    context = {\n      rootBucket: new Bucket({\n        hashFn: DirSharded.hashFn\n      }),\n      hamtDepth: 1\n    }\n\n    context.lastBucket = context.rootBucket\n  }\n\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket)\n\n  const position = await context.rootBucket._findNewBucketAndPos(name)\n  let prefix = toPrefix(position.pos)\n  const bucketPath = toBucketPath(position)\n\n  if (bucketPath.length > (context.hamtDepth)) {\n    context.lastBucket = bucketPath[context.hamtDepth]\n\n    prefix = toPrefix(context.lastBucket._posAtParent)\n  }\n\n  const link = node.Links.find(link => {\n    const entryPrefix = link.Name.substring(0, 2)\n    const entryName = link.Name.substring(2)\n\n    if (entryPrefix !== prefix) {\n      // not the entry or subshard we're looking for\n      return\n    }\n\n    if (entryName && entryName !== name) {\n      // not the entry we're looking for\n      return\n    }\n\n    return true\n  })\n\n  if (!link) {\n    return null\n  }\n\n  if (link.Name.substring(2) === name) {\n    return link.Hash\n  }\n\n  context.hamtDepth++\n\n  node = await ipld.get(link.Hash)\n\n  return findShardCid(node, name, ipld, context)\n}\n\nmodule.exports = findShardCid\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict'\n\nconst mh = require('multihashes')\nconst mc = require('multicodec')\n\nconst persist = (node, ipld, options) => {\n  if (!options.codec && node.length) {\n    options.cidVersion = 1\n    options.codec = 'raw'\n  }\n\n  if (isNaN(options.hashAlg)) {\n    options.hashAlg = mh.names[options.hashAlg]\n  }\n\n  if (options.hashAlg !== mh.names['sha2-256']) {\n    options.cidVersion = 1\n  }\n\n  if (options.format) {\n    options.codec = options.format\n  }\n\n  const format = mc[options.codec.toUpperCase().replace(/-/g, '_')]\n\n  return ipld.put(node, format, options)\n}\n\nmodule.exports = persist\n","'use strict'\n\nconst {\n  DAGLink,\n  DAGNode\n} = require('ipld-dag-pb')\nconst UnixFS = require('ipfs-unixfs')\nconst multihashing = require('multihashing-async')\nconst Dir = require('./dir')\nconst persist = require('./utils/persist')\nconst Bucket = require('hamt-sharding')\nconst extend = require('deep-extend')\n\nconst hashFn = async function (value) {\n  const hash = await multihashing(Buffer.from(value, 'utf8'), 'murmur3-128')\n\n  // Multihashing inserts preamble of 2 bytes. Remove it.\n  // Also, murmur3 outputs 128 bit but, accidently, IPFS Go's\n  // implementation only uses the first 64, so we must do the same\n  // for parity..\n  const justHash = hash.slice(2, 10)\n  const length = justHash.length\n  const result = Buffer.alloc(length)\n  // TODO: invert buffer because that's how Go impl does it\n  for (let i = 0; i < length; i++) {\n    result[length - i - 1] = justHash[i]\n  }\n\n  return result\n}\nhashFn.code = 0x22 // TODO: get this from multihashing-async?\n\nconst defaultOptions = {\n  hashFn: hashFn\n}\n\nclass DirSharded extends Dir {\n  constructor (props, options) {\n    options = extend({}, defaultOptions, options)\n\n    super(props, options)\n\n    this._bucket = Bucket(options)\n  }\n\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  async * flush (path, ipld) {\n    for await (const entry of flush(path, this._bucket, ipld, this.options)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = DirSharded\n\nmodule.exports.hashFn = hashFn\n\nasync function * flush (path, bucket, ipld, options) {\n  const children = bucket._children\n  const links = []\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (Bucket.isBucket(child)) {\n      let shard\n\n      for await (const subShard of await flush('', child, ipld, options)) {\n        shard = subShard\n      }\n\n      links.push(await new DAGLink(labelPrefix, shard.node.size, shard.cid))\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(dir.path, ipld)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push(new DAGLink(label, flushedDir.node.size, flushedDir.cid))\n    } else {\n      const value = child.value\n\n      if (!value.node) {\n        if (value.cid) {\n          value.node = await ipld.get(value.cid)\n        } else {\n          continue\n        }\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.node.length || value.node.size || value.node.Size\n\n      links.push(await new DAGLink(label, size, value.cid))\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Buffer.from(children.bitField().reverse())\n  const dir = new UnixFS('hamt-sharded-directory', data)\n  dir.fanout = bucket.tableSize()\n  dir.hashType = options.hashFn.code\n\n  const node = DAGNode.create(dir.marshal(), links)\n  const cid = await persist(node, ipld, options)\n\n  yield {\n    cid,\n    node,\n    unixfs: dir,\n    path\n  }\n}\n","'use strict'\n\nconst batch = require('async-iterator-batch')\n\nmodule.exports = async function * (source, reduce) {\n  const roots = []\n\n  for await (const chunk of batch(source, Infinity)) {\n    roots.push(await reduce(chunk))\n  }\n\n  yield roots[0]\n}\n","'use strict'\n\nconst batch = require('async-iterator-batch')\n\nasync function * balanced (source, reduce, options) {\n  yield await reduceToParents(source, reduce, options)\n}\n\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nmodule.exports = balanced\n","'use strict'\n\nconst batch = require('async-iterator-batch')\n\nmodule.exports = function * trickleReduceToRoot (source, reduce, options) {\n  yield trickleStream(source, reduce, options)\n}\n\nasync function trickleStream (source, reduce, options) {\n  let root\n  let iteration = 0\n  let maxDepth = 1\n  let subTree = root = new Root(options.layerRepeat)\n\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce))\n      }\n\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++\n      }\n\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration)\n\n      iteration++\n    }\n\n    subTree.append(layer)\n  }\n\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce))\n  }\n\n  return root.reduce(reduce)\n}\n\nclass SubTree {\n  constructor (maxDepth, layerRepeat, iteration) {\n    this.maxDepth = maxDepth\n    this.layerRepeat = layerRepeat\n    this.currentDepth = 1\n    this.iteration = iteration\n\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    }\n  }\n\n  isFull () {\n    if (!this.root.data) {\n      return false\n    }\n\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      // can descend\n      this._addNextNodeToParent(this.node)\n\n      return false\n    }\n\n    // try to find new node from node.parent\n    const distantRelative = this._findParent(this.node, this.currentDepth)\n\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative)\n\n      return false\n    }\n\n    return true\n  }\n\n  _addNextNodeToParent (parent) {\n    this.parent = parent\n\n    // find site for new node\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    }\n\n    parent.children.push(nextNode)\n\n    this.currentDepth = nextNode.depth\n    this.node = nextNode\n  }\n\n  append (layer) {\n    this.node.data = layer\n  }\n\n  reduce (reduce) {\n    return this._reduce(this.root, reduce)\n  }\n\n  async _reduce (node, reduce) {\n    let children = []\n\n    if (node.children.length) {\n      children = await Promise.all(\n        node.children\n          .filter(child => child.data)\n          .map(child => this._reduce(child, reduce))\n      )\n    }\n\n    return reduce(node.data.concat(children))\n  }\n\n  _findParent (node, depth) {\n    const parent = node.parent\n\n    if (!parent || parent.depth === 0) {\n      return\n    }\n\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      // this layer is full, may be able to traverse to a different branch\n      return this._findParent(parent, depth)\n    }\n\n    return parent\n  }\n}\n\nclass Root extends SubTree {\n  constructor (layerRepeat) {\n    super(0, layerRepeat)\n\n    this.root.depth = 0\n    this.currentDepth = 1\n  }\n\n  addChild (child) {\n    this.root.children.push(child)\n  }\n\n  reduce (reduce) {\n    return reduce(this.root.data.concat(this.root.children))\n  }\n}\n","'use strict'\n\nconst BufferList = require('bl')\n\nmodule.exports = async function * fixedSizeChunker (source, options) {\n  let bl = new BufferList()\n  let currentLength = 0\n  let emitted = false\n  const maxChunkSize = options.maxChunkSize\n\n  for await (const buffer of source) {\n    bl.append(buffer)\n\n    currentLength += buffer.length\n\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize)\n      emitted = true\n\n      // throw away consumed bytes\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList()\n        currentLength = 0\n      } else {\n        const newBl = new BufferList()\n        newBl.append(bl.shallowSlice(maxChunkSize))\n        bl = newBl\n\n        // update our offset\n        currentLength -= maxChunkSize\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield bl.slice(0, currentLength)\n  }\n}\n","'use strict'\n\nconst BufferList = require('bl')\nconst { create } = require('rabin-wasm')\nconst errcode = require('err-code')\n\nmodule.exports = async function * rabinChunker (source, options) {\n  const rabin = jsRabin()\n\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\nconst jsRabin = () => {\n  return async function * (source, options) {\n    const r = await create(options.bits, options.min, options.max, options.window)\n    const buffers = new BufferList()\n    let pending = []\n\n    for await (const chunk of source) {\n      buffers.append(chunk)\n      pending.push(chunk)\n\n      const sizes = r.fingerprint(Buffer.concat(pending))\n      pending = []\n\n      for (let i = 0; i < sizes.length; i++) {\n        var size = sizes[i]\n        var buf = buffers.slice(0, size)\n        buffers.consume(size)\n\n        yield buf\n      }\n    }\n\n    if (buffers.length) {\n      yield buffers.slice(0)\n    }\n  }\n}\n","'use strict'\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\nconst Bucket = require('hamt-sharding/src/bucket')\nconst DirSharded = require('ipfs-unixfs-importer/src/dir-sharded')\nconst log = require('debug')('ipfs:mfs:core:utils:hamt-utils')\nconst UnixFS = require('ipfs-unixfs')\nconst mc = require('multicodec')\nconst mh = require('multihashes')\nconst last = require('async-iterator-last')\n\nconst updateHamtDirectory = async (context, links, bucket, options) => {\n  // update parent with new bit field\n  const data = Buffer.from(bucket._children.bitField().reverse())\n  const dir = new UnixFS('hamt-sharded-directory', data)\n  dir.fanout = bucket.tableSize()\n  dir.hashType = DirSharded.hashFn.code\n\n  const format = mc[options.format.toUpperCase().replace(/-/g, '_')]\n  const hashAlg = mh.names[options.hashAlg]\n\n  const parent = DAGNode.create(dir.marshal(), links)\n  const cid = await context.ipld.put(parent, format, {\n    cidVersion: options.cidVersion,\n    hashAlg,\n    hashOnly: !options.flush\n  })\n\n  return {\n    node: parent,\n    cid\n  }\n}\n\nconst recreateHamtLevel = async (links, rootBucket, parentBucket, positionAtParent) => {\n  // recreate this level of the HAMT\n  const bucket = new Bucket({\n    hashFn: DirSharded.hashFn,\n    hash: parentBucket ? parentBucket._options.hash : undefined\n  }, parentBucket, positionAtParent)\n\n  if (parentBucket) {\n    parentBucket._putObjectAt(positionAtParent, bucket)\n  }\n\n  await addLinksToHamtBucket(links, bucket, rootBucket)\n\n  return bucket\n}\n\nconst addLinksToHamtBucket = async (links, bucket, rootBucket) => {\n  await Promise.all(\n    links.map(link => {\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        bucket._putObjectAt(pos, new Bucket({\n          hashFn: DirSharded.hashFn\n        }, bucket, pos))\n\n        return Promise.resolve()\n      }\n\n      return (rootBucket || bucket).put(link.Name.substring(2), {\n        size: link.TSize,\n        cid: link.Hash\n      })\n    })\n  )\n}\n\nconst toPrefix = (position) => {\n  return position\n    .toString('16')\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\nconst generatePath = async (context, fileName, rootNode) => {\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateHamtLevel(rootNode.Links, null, null, null)\n  const position = await rootBucket._findNewBucketAndPos(fileName)\n\n  // the path to the root bucket\n  let path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n  let currentBucket = position.bucket\n\n  while (currentBucket !== rootBucket) {\n    path.push({\n      bucket: currentBucket,\n      prefix: toPrefix(currentBucket._posAtParent)\n    })\n\n    currentBucket = currentBucket._parent\n  }\n\n  path.reverse()\n  path[0].node = rootNode\n\n  // load DAGNode for each path segment\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]\n\n    // find prefix in links\n    const link = segment.node.Links\n      .filter(link => link.Name.substring(0, 2) === segment.prefix)\n      .pop()\n\n    // entry was not in shard\n    if (!link) {\n      // reached bottom of tree, file will be added to the current bucket\n      log(`Link ${segment.prefix}${fileName} will be added`)\n      // return path\n      continue\n    }\n\n    // found entry\n    if (link.Name === `${segment.prefix}${fileName}`) {\n      log(`Link ${segment.prefix}${fileName} will be replaced`)\n      // file already existed, file will be added to the current bucket\n      // return path\n      continue\n    }\n\n    // found subshard\n    log(`Found subshard ${segment.prefix}`)\n    const node = await context.ipld.get(link.Hash)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[i + 1]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n\n      await recreateHamtLevel(node.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n      const position = await rootBucket._findNewBucketAndPos(fileName)\n\n      // i--\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: node\n      })\n\n      continue\n    }\n\n    const nextSegment = path[i + 1]\n\n    // add intermediate links to bucket\n    await addLinksToHamtBucket(node.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = node\n  }\n\n  await rootBucket.put(fileName, true)\n\n  path.reverse()\n\n  return {\n    rootBucket,\n    path\n  }\n}\n\nconst createShard = async (context, contents, options) => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: null,\n    parentKey: null,\n    path: '',\n    dirty: true,\n    flat: false\n  }, options)\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  return last(shard.flush('', context.ipld, null))\n}\n\nmodule.exports = {\n  generatePath,\n  updateHamtDirectory,\n  recreateHamtLevel,\n  addLinksToHamtBucket,\n  toPrefix,\n  createShard\n}\n","// Copyright (c) 2015-2017 David M. Lee, II\n'use strict';\n\n/**\n * Local reference to TimeoutError\n * @private\n */\nvar TimeoutError;\n\n/**\n * Rejects a promise with a {@link TimeoutError} if it does not settle within\n * the specified timeout.\n *\n * @param {Promise} promise The promise.\n * @param {number} timeoutMillis Number of milliseconds to wait on settling.\n * @returns {Promise} Either resolves/rejects with `promise`, or rejects with\n *                   `TimeoutError`, whichever settles first.\n */\nvar timeout = module.exports.timeout = function(promise, timeoutMillis) {\n  var error = new TimeoutError(),\n      timeout;\n\n  return Promise.race([\n    promise,\n    new Promise(function(resolve, reject) {\n      timeout = setTimeout(function() {\n        reject(error);\n      }, timeoutMillis);\n    }),\n  ]).then(function(v) {\n    clearTimeout(timeout);\n    return v;\n  }, function(err) {\n    clearTimeout(timeout);\n    throw err;\n  });\n};\n\n/**\n * Exception indicating that the timeout expired.\n */\nTimeoutError = module.exports.TimeoutError = function() {\n  Error.call(this)\n  this.stack = Error().stack\n  this.message = 'Timeout';\n};\n\nTimeoutError.prototype = Object.create(Error.prototype);\nTimeoutError.prototype.name = \"TimeoutError\";\n","const events = {}\n\nconst observable = (worker) => {\n  worker.addEventListener('message', (event) => {\n    observable.dispatchEvent('message', worker, event)\n  })\n\n  if (worker.port) {\n    worker.port.addEventListener('message', (event) => {\n      observable.dispatchEvent('message', worker, event)\n    })\n  }\n}\n\nobservable.addEventListener = (type, fn) => {\n  if (!events[type]) {\n    events[type] = []\n  }\n\n  events[type].push(fn)\n}\n\nobservable.removeEventListener = (type, fn) => {\n  if (!events[type]) {\n    return\n  }\n\n  events[type] = events[type]\n    .filter(listener => listener === fn)\n}\n\nobservable.dispatchEvent = function () {\n  const args = Array.prototype.slice.call(arguments)\n  const type = args.shift()\n\n  if (!events[type]) {\n    return\n  }\n\n  events[type].forEach(fn => fn.apply(null, args))\n}\n\nmodule.exports = observable\n","const EventEmitter = require('events').EventEmitter\nconst shortid = require('shortid')\nconst {\n  WORKER_REQUEST_READ_LOCK,\n  WORKER_RELEASE_READ_LOCK,\n  MASTER_GRANT_READ_LOCK,\n  WORKER_REQUEST_WRITE_LOCK,\n  WORKER_RELEASE_WRITE_LOCK,\n  MASTER_GRANT_WRITE_LOCK\n} = require('./constants')\nlet cluster\n\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n  return (worker, requestEvent) => {\n    if (requestEvent && requestEvent.type === requestType) {\n      emitter.emit(masterEvent, requestEvent.name, () => {\n        // grant lock to worker\n        worker.send({\n          type: grantType,\n          name: requestEvent.name,\n          identifier: requestEvent.identifier\n        })\n\n        // wait for worker to finish\n        return new Promise((resolve) => {\n          const releaseEventListener = (releaseEvent) => {\n            if (releaseEvent && releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n              worker.removeListener('message', releaseEventListener)\n              resolve()\n            }\n          }\n\n          worker.on('message', releaseEventListener)\n        })\n      })\n    }\n  }\n}\n\nconst makeWorkerLockRequest = (name, requestType, grantType, releaseType) => {\n  return (fn) => {\n    const id = shortid.generate()\n\n    process.send({\n      type: requestType,\n      identifier: id,\n      name\n    })\n\n    return new Promise((resolve, reject) => {\n      const listener = (event) => {\n        if (event && event.type === grantType && event.identifier === id) {\n          process.removeListener('message', listener)\n\n          let error = null\n\n          fn()\n            .catch((err) => {\n              error = err\n            })\n            .then((result) => {\n              process.send({\n                type: releaseType,\n                identifier: id,\n                name\n              })\n\n              if (error) {\n                return reject(error)\n              }\n\n              resolve(result)\n            })\n        }\n      }\n\n      process.on('message', listener)\n    })\n  }\n}\n\nmodule.exports = (options) => {\n  try {\n    cluster = require('cluster')\n\n    if (!Object.keys(cluster).length) {\n      return\n    }\n  } catch (_) {\n    return\n  }\n\n  if (cluster.isMaster || options.singleProcess) {\n    const emitter = new EventEmitter()\n\n    cluster.on('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK))\n    cluster.on('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK))\n\n    return emitter\n  }\n\n  return {\n    isWorker: true,\n    readLock: (name, options) => makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n    writeLock: (name, options) => makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n  }\n}\n","const EventEmitter = require('events').EventEmitter\nconst shortid = require('shortid')\nconst {\n  WORKER_REQUEST_READ_LOCK,\n  WORKER_RELEASE_READ_LOCK,\n  MASTER_GRANT_READ_LOCK,\n  WORKER_REQUEST_WRITE_LOCK,\n  WORKER_RELEASE_WRITE_LOCK,\n  MASTER_GRANT_WRITE_LOCK\n} = require('./constants')\nconst observer = require('observable-webworkers')\n\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n  return (worker, event) => {\n    if (!event || !event.data || event.data.type !== requestType) {\n      return\n    }\n\n    const requestEvent = {\n      type: event.data.type,\n      name: event.data.name,\n      identifier: event.data.identifier\n    }\n\n    emitter.emit(masterEvent, requestEvent.name, () => {\n      // grant lock to worker\n      worker.postMessage({\n        type: grantType,\n        name: requestEvent.name,\n        identifier: requestEvent.identifier\n      })\n\n      // wait for worker to finish\n      return new Promise((resolve) => {\n        const releaseEventListener = (event) => {\n          if (!event || !event.data) {\n            return\n          }\n\n          const releaseEvent = {\n            type: event.data.type,\n            name: event.data.name,\n            identifier: event.data.identifier\n          }\n\n          if (releaseEvent && releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n            worker.removeEventListener('message', releaseEventListener)\n            resolve()\n          }\n        }\n\n        worker.addEventListener('message', releaseEventListener)\n      })\n    })\n  }\n}\n\nconst makeWorkerLockRequest = (global, name, requestType, grantType, releaseType) => {\n  return (fn) => {\n    const id = shortid.generate()\n\n    global.postMessage({\n      type: requestType,\n      identifier: id,\n      name\n    })\n\n    return new Promise((resolve, reject) => {\n      const listener = (event) => {\n        if (!event || !event.data) {\n          return\n        }\n\n        const responseEvent = {\n          type: event.data.type,\n          identifier: event.data.identifier\n        }\n\n        if (responseEvent && responseEvent.type === grantType && responseEvent.identifier === id) {\n          global.removeEventListener('message', listener)\n\n          let error\n\n          fn()\n            .catch((err) => {\n              error = err\n            })\n            .then((result) => {\n              global.postMessage({\n                type: releaseType,\n                identifier: id,\n                name\n              })\n\n              if (error) {\n                return reject(error)\n              }\n\n              return resolve(result)\n            })\n        }\n      }\n\n      global.addEventListener('message', listener)\n    })\n  }\n}\n\nconst defaultOptions = {\n  global: global,\n  singleProcess: false\n}\n\nmodule.exports = (options) => {\n  options = Object.assign({}, defaultOptions, options)\n  const isMaster = !!options.global.document || options.singleProcess\n\n  if (isMaster) {\n    const emitter = new EventEmitter()\n\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK))\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK))\n\n    return emitter\n  }\n\n  return {\n    isWorker: true,\n    readLock: (name, options) => makeWorkerLockRequest(options.global, name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n    writeLock: (name, options) => makeWorkerLockRequest(options.global, name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require(\"create-hash\");\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst randomBytes = require(\"randombytes\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please pass a 2048 word array explicitly.';\nfunction pbkdf2Promise(password, saltMixin, iterations, keylen, digest) {\n    return Promise.resolve().then(() => new Promise((resolve, reject) => {\n        const callback = (err, derivedKey) => {\n            if (err) {\n                return reject(err);\n            }\n            else {\n                return resolve(derivedKey);\n            }\n        };\n        pbkdf2_1.pbkdf2(password, saltMixin, iterations, keylen, digest, callback);\n    }));\n}\nfunction normalize(str) {\n    return (str || '').normalize('NFKD');\n}\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map((x) => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary(Array.from(hash)).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n    const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return Promise.resolve().then(() => {\n        const mnemonicBuffer = Buffer.from(normalize(mnemonic), 'utf8');\n        const saltBuffer = Buffer.from(salt(normalize(password)), 'utf8');\n        return pbkdf2Promise(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n    });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = normalize(mnemonic).split(' ');\n    if (words.length % 3 !== 0) {\n        throw new Error(INVALID_MNEMONIC);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(INVALID_MNEMONIC);\n        }\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length > 32) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    if (entropyBytes.length % 4 !== 0) {\n        throw new Error(INVALID_ENTROPY);\n    }\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(INVALID_CHECKSUM);\n    }\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy)) {\n        entropy = Buffer.from(entropy, 'hex');\n    }\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length > 32) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    if (entropy.length % 4 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    const entropyBits = bytesToBinary(Array.from(entropy));\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map((binary) => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0) {\n        throw new TypeError(INVALID_ENTROPY);\n    }\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result) {\n        DEFAULT_WORDLIST = result;\n    }\n    else {\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n    }\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST) {\n        throw new Error('No Default Wordlist set');\n    }\n    return Object.keys(_wordlists_1.wordlists).filter((lang) => {\n        if (lang === 'JA' || lang === 'EN') {\n            return false;\n        }\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","module.exports = require('immediate')\n","'use strict'\n\n// For (old) browser support\nvar xtend = require('xtend')\nvar assign = require('xtend/mutable')\n\nmodule.exports = function supports () {\n  var manifest = xtend.apply(null, arguments)\n\n  return assign(manifest, {\n    // Features of abstract-leveldown\n    bufferKeys: manifest.bufferKeys || false,\n    snapshots: manifest.snapshots || false,\n    permanence: manifest.permanence || false,\n    seek: manifest.seek || false,\n    clear: manifest.clear || false,\n\n    // Features of abstract-leveldown that levelup doesn't have\n    status: manifest.status || false,\n\n    // Features of disk-based implementations\n    createIfMissing: manifest.createIfMissing || false,\n    errorIfExists: manifest.errorIfExists || false,\n\n    // Features of level(up) that abstract-leveldown doesn't have yet\n    deferredOpen: manifest.deferredOpen || false,\n    openCallback: manifest.openCallback || false,\n    promises: manifest.promises || false,\n    streams: manifest.streams || false,\n    encodings: manifest.encodings || false,\n\n    // Methods that are not part of abstract-leveldown or levelup\n    additionalMethods: xtend(manifest.additionalMethods)\n  })\n}\n","'use strict'\nvar BN = require('./bn')\n\nfunction ECJPoint (x, y, z) {\n  if (x === null && y === null && z === null) {\n    this.x = ECJPoint.one\n    this.y = ECJPoint.one\n    this.z = ECJPoint.zero\n  } else {\n    this.x = x\n    this.y = y\n    this.z = z\n  }\n\n  this.zOne = this.z === ECJPoint.one\n}\n\nECJPoint.zero = BN.fromNumber(0)\nECJPoint.one = BN.fromNumber(1)\n\nECJPoint.prototype.neg = function () {\n  if (this.inf) return this\n\n  return new ECJPoint(this.x, this.y.redNeg(), this.z)\n}\n\nECJPoint.prototype.add = function (p) {\n  // O + P = P\n  if (this.inf) return p\n\n  // P + O = P\n  if (p.inf) return this\n\n  // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#addition-add-1998-cmo-2\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr()\n  var z2 = this.z.redSqr()\n  var u1 = this.x.redMul(pz2)\n  var u2 = p.x.redMul(z2)\n  var s1 = this.y.redMul(pz2).redMul(p.z)\n  var s2 = p.y.redMul(z2).redMul(this.z)\n\n  var h = u1.redSub(u2)\n  var r = s1.redSub(s2)\n  if (h.isZero()) {\n    if (r.isZero()) return this.dbl()\n    return new ECJPoint(null, null, null)\n  }\n\n  var h2 = h.redSqr()\n  var v = u1.redMul(h2)\n  var h3 = h2.redMul(h)\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n  var nz = this.z.redMul(p.z).redMul(h)\n\n  return new ECJPoint(nx, ny, nz)\n}\n\nECJPoint.prototype.mixedAdd = function (p) {\n  // O + P = P\n  if (this.inf) return p.toECJPoint()\n\n  // P + O = P\n  if (p.inf) return this\n\n  // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#addition-add-1998-cmo-2\n  //   with p.z = 1\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr()\n  var u1 = this.x\n  var u2 = p.x.redMul(z2)\n  var s1 = this.y\n  var s2 = p.y.redMul(z2).redMul(this.z)\n\n  var h = u1.redSub(u2)\n  var r = s1.redSub(s2)\n  if (h.isZero()) {\n    if (r.isZero()) return this.dbl()\n    return new ECJPoint(null, null, null)\n  }\n\n  var h2 = h.redSqr()\n  var v = u1.redMul(h2)\n  var h3 = h2.redMul(h)\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v)\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3))\n  var nz = this.z.redMul(h)\n\n  return new ECJPoint(nx, ny, nz)\n}\n\nECJPoint.prototype.dbl = function () {\n  if (this.inf) return this\n\n  var nx\n  var ny\n  var nz\n\n  // Z = 1\n  if (this.zOne) {\n    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-mdbl-2007-bl\n    // 1M + 5S + 6A + 3*2 + 1*3 + 1*8\n\n    // XX = X1^2\n    var xx = this.x.redSqr()\n    // YY = Y1^2\n    var yy = this.y.redSqr()\n    // YYYY = YY^2\n    var yyyy = yy.redSqr()\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy)\n    s = s.redIAdd(s)\n    // M = 3 * XX\n    var m = xx.redAdd(xx).redIAdd(xx)\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s)\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy).redIAdd(yyyy).redIAdd(yyyy)\n\n    // X3 = T\n    nx = t\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8)\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y)\n  } else {\n    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-dbl-2009-l\n    // 2M + 5S + 6A + 3*2 + 1*3 + 1*8\n\n    // A = X1^2\n    var a = this.x.redSqr()\n    // B = Y1^2\n    var b = this.y.redSqr()\n    // C = B^2\n    var c = b.redSqr()\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c)\n    d = d.redIAdd(d)\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a)\n    // F = E^2\n    var f = e.redSqr()\n\n    // 8 * C\n    var c8 = c.redIAdd(c).redIAdd(c).redIAdd(c)\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d)\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8)\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z)\n    nz = nz.redIAdd(nz)\n  }\n\n  return new ECJPoint(nx, ny, nz)\n}\n\nECJPoint.prototype.dblp = function (pow) {\n  if (pow === 0 || this.inf) return this\n\n  var point = this\n  for (var i = 0; i < pow; i++) point = point.dbl()\n\n  return point\n}\n\nObject.defineProperty(ECJPoint.prototype, 'inf', {\n  enumerable: true,\n  get: function () {\n    return this.z.isZero()\n  }\n})\n\nmodule.exports = ECJPoint\n","'use strict'\nexports.umulTo10x10 = function (num1, num2, out) {\n  var a = num1.words\n  var b = num2.words\n  var o = out.words\n  var c = 0\n  var lo\n  var mid\n  var hi\n  var a0 = a[0] | 0\n  var al0 = a0 & 0x1fff\n  var ah0 = a0 >>> 13\n  var a1 = a[1] | 0\n  var al1 = a1 & 0x1fff\n  var ah1 = a1 >>> 13\n  var a2 = a[2] | 0\n  var al2 = a2 & 0x1fff\n  var ah2 = a2 >>> 13\n  var a3 = a[3] | 0\n  var al3 = a3 & 0x1fff\n  var ah3 = a3 >>> 13\n  var a4 = a[4] | 0\n  var al4 = a4 & 0x1fff\n  var ah4 = a4 >>> 13\n  var a5 = a[5] | 0\n  var al5 = a5 & 0x1fff\n  var ah5 = a5 >>> 13\n  var a6 = a[6] | 0\n  var al6 = a6 & 0x1fff\n  var ah6 = a6 >>> 13\n  var a7 = a[7] | 0\n  var al7 = a7 & 0x1fff\n  var ah7 = a7 >>> 13\n  var a8 = a[8] | 0\n  var al8 = a8 & 0x1fff\n  var ah8 = a8 >>> 13\n  var a9 = a[9] | 0\n  var al9 = a9 & 0x1fff\n  var ah9 = a9 >>> 13\n  var b0 = b[0] | 0\n  var bl0 = b0 & 0x1fff\n  var bh0 = b0 >>> 13\n  var b1 = b[1] | 0\n  var bl1 = b1 & 0x1fff\n  var bh1 = b1 >>> 13\n  var b2 = b[2] | 0\n  var bl2 = b2 & 0x1fff\n  var bh2 = b2 >>> 13\n  var b3 = b[3] | 0\n  var bl3 = b3 & 0x1fff\n  var bh3 = b3 >>> 13\n  var b4 = b[4] | 0\n  var bl4 = b4 & 0x1fff\n  var bh4 = b4 >>> 13\n  var b5 = b[5] | 0\n  var bl5 = b5 & 0x1fff\n  var bh5 = b5 >>> 13\n  var b6 = b[6] | 0\n  var bl6 = b6 & 0x1fff\n  var bh6 = b6 >>> 13\n  var b7 = b[7] | 0\n  var bl7 = b7 & 0x1fff\n  var bh7 = b7 >>> 13\n  var b8 = b[8] | 0\n  var bl8 = b8 & 0x1fff\n  var bh8 = b8 >>> 13\n  var b9 = b[9] | 0\n  var bl9 = b9 & 0x1fff\n  var bh9 = b9 >>> 13\n\n  out.length = 19\n  /* k = 0 */\n  lo = Math.imul(al0, bl0)\n  mid = Math.imul(al0, bh0)\n  mid += Math.imul(ah0, bl0)\n  hi = Math.imul(ah0, bh0)\n  var w0 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w0 >>> 26)\n  w0 &= 0x3ffffff\n  /* k = 1 */\n  lo = Math.imul(al1, bl0)\n  mid = Math.imul(al1, bh0)\n  mid += Math.imul(ah1, bl0)\n  hi = Math.imul(ah1, bh0)\n  lo += Math.imul(al0, bl1)\n  mid += Math.imul(al0, bh1)\n  mid += Math.imul(ah0, bl1)\n  hi += Math.imul(ah0, bh1)\n  var w1 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w1 >>> 26)\n  w1 &= 0x3ffffff\n  /* k = 2 */\n  lo = Math.imul(al2, bl0)\n  mid = Math.imul(al2, bh0)\n  mid += Math.imul(ah2, bl0)\n  hi = Math.imul(ah2, bh0)\n  lo += Math.imul(al1, bl1)\n  mid += Math.imul(al1, bh1)\n  mid += Math.imul(ah1, bl1)\n  hi += Math.imul(ah1, bh1)\n  lo += Math.imul(al0, bl2)\n  mid += Math.imul(al0, bh2)\n  mid += Math.imul(ah0, bl2)\n  hi += Math.imul(ah0, bh2)\n  var w2 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w2 >>> 26)\n  w2 &= 0x3ffffff\n  /* k = 3 */\n  lo = Math.imul(al3, bl0)\n  mid = Math.imul(al3, bh0)\n  mid += Math.imul(ah3, bl0)\n  hi = Math.imul(ah3, bh0)\n  lo += Math.imul(al2, bl1)\n  mid += Math.imul(al2, bh1)\n  mid += Math.imul(ah2, bl1)\n  hi += Math.imul(ah2, bh1)\n  lo += Math.imul(al1, bl2)\n  mid += Math.imul(al1, bh2)\n  mid += Math.imul(ah1, bl2)\n  hi += Math.imul(ah1, bh2)\n  lo += Math.imul(al0, bl3)\n  mid += Math.imul(al0, bh3)\n  mid += Math.imul(ah0, bl3)\n  hi += Math.imul(ah0, bh3)\n  var w3 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w3 >>> 26)\n  w3 &= 0x3ffffff\n  /* k = 4 */\n  lo = Math.imul(al4, bl0)\n  mid = Math.imul(al4, bh0)\n  mid += Math.imul(ah4, bl0)\n  hi = Math.imul(ah4, bh0)\n  lo += Math.imul(al3, bl1)\n  mid += Math.imul(al3, bh1)\n  mid += Math.imul(ah3, bl1)\n  hi += Math.imul(ah3, bh1)\n  lo += Math.imul(al2, bl2)\n  mid += Math.imul(al2, bh2)\n  mid += Math.imul(ah2, bl2)\n  hi += Math.imul(ah2, bh2)\n  lo += Math.imul(al1, bl3)\n  mid += Math.imul(al1, bh3)\n  mid += Math.imul(ah1, bl3)\n  hi += Math.imul(ah1, bh3)\n  lo += Math.imul(al0, bl4)\n  mid += Math.imul(al0, bh4)\n  mid += Math.imul(ah0, bl4)\n  hi += Math.imul(ah0, bh4)\n  var w4 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w4 >>> 26)\n  w4 &= 0x3ffffff\n  /* k = 5 */\n  lo = Math.imul(al5, bl0)\n  mid = Math.imul(al5, bh0)\n  mid += Math.imul(ah5, bl0)\n  hi = Math.imul(ah5, bh0)\n  lo += Math.imul(al4, bl1)\n  mid += Math.imul(al4, bh1)\n  mid += Math.imul(ah4, bl1)\n  hi += Math.imul(ah4, bh1)\n  lo += Math.imul(al3, bl2)\n  mid += Math.imul(al3, bh2)\n  mid += Math.imul(ah3, bl2)\n  hi += Math.imul(ah3, bh2)\n  lo += Math.imul(al2, bl3)\n  mid += Math.imul(al2, bh3)\n  mid += Math.imul(ah2, bl3)\n  hi += Math.imul(ah2, bh3)\n  lo += Math.imul(al1, bl4)\n  mid += Math.imul(al1, bh4)\n  mid += Math.imul(ah1, bl4)\n  hi += Math.imul(ah1, bh4)\n  lo += Math.imul(al0, bl5)\n  mid += Math.imul(al0, bh5)\n  mid += Math.imul(ah0, bl5)\n  hi += Math.imul(ah0, bh5)\n  var w5 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w5 >>> 26)\n  w5 &= 0x3ffffff\n  /* k = 6 */\n  lo = Math.imul(al6, bl0)\n  mid = Math.imul(al6, bh0)\n  mid += Math.imul(ah6, bl0)\n  hi = Math.imul(ah6, bh0)\n  lo += Math.imul(al5, bl1)\n  mid += Math.imul(al5, bh1)\n  mid += Math.imul(ah5, bl1)\n  hi += Math.imul(ah5, bh1)\n  lo += Math.imul(al4, bl2)\n  mid += Math.imul(al4, bh2)\n  mid += Math.imul(ah4, bl2)\n  hi += Math.imul(ah4, bh2)\n  lo += Math.imul(al3, bl3)\n  mid += Math.imul(al3, bh3)\n  mid += Math.imul(ah3, bl3)\n  hi += Math.imul(ah3, bh3)\n  lo += Math.imul(al2, bl4)\n  mid += Math.imul(al2, bh4)\n  mid += Math.imul(ah2, bl4)\n  hi += Math.imul(ah2, bh4)\n  lo += Math.imul(al1, bl5)\n  mid += Math.imul(al1, bh5)\n  mid += Math.imul(ah1, bl5)\n  hi += Math.imul(ah1, bh5)\n  lo += Math.imul(al0, bl6)\n  mid += Math.imul(al0, bh6)\n  mid += Math.imul(ah0, bl6)\n  hi += Math.imul(ah0, bh6)\n  var w6 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w6 >>> 26)\n  w6 &= 0x3ffffff\n  /* k = 7 */\n  lo = Math.imul(al7, bl0)\n  mid = Math.imul(al7, bh0)\n  mid += Math.imul(ah7, bl0)\n  hi = Math.imul(ah7, bh0)\n  lo += Math.imul(al6, bl1)\n  mid += Math.imul(al6, bh1)\n  mid += Math.imul(ah6, bl1)\n  hi += Math.imul(ah6, bh1)\n  lo += Math.imul(al5, bl2)\n  mid += Math.imul(al5, bh2)\n  mid += Math.imul(ah5, bl2)\n  hi += Math.imul(ah5, bh2)\n  lo += Math.imul(al4, bl3)\n  mid += Math.imul(al4, bh3)\n  mid += Math.imul(ah4, bl3)\n  hi += Math.imul(ah4, bh3)\n  lo += Math.imul(al3, bl4)\n  mid += Math.imul(al3, bh4)\n  mid += Math.imul(ah3, bl4)\n  hi += Math.imul(ah3, bh4)\n  lo += Math.imul(al2, bl5)\n  mid += Math.imul(al2, bh5)\n  mid += Math.imul(ah2, bl5)\n  hi += Math.imul(ah2, bh5)\n  lo += Math.imul(al1, bl6)\n  mid += Math.imul(al1, bh6)\n  mid += Math.imul(ah1, bl6)\n  hi += Math.imul(ah1, bh6)\n  lo += Math.imul(al0, bl7)\n  mid += Math.imul(al0, bh7)\n  mid += Math.imul(ah0, bl7)\n  hi += Math.imul(ah0, bh7)\n  var w7 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w7 >>> 26)\n  w7 &= 0x3ffffff\n  /* k = 8 */\n  lo = Math.imul(al8, bl0)\n  mid = Math.imul(al8, bh0)\n  mid += Math.imul(ah8, bl0)\n  hi = Math.imul(ah8, bh0)\n  lo += Math.imul(al7, bl1)\n  mid += Math.imul(al7, bh1)\n  mid += Math.imul(ah7, bl1)\n  hi += Math.imul(ah7, bh1)\n  lo += Math.imul(al6, bl2)\n  mid += Math.imul(al6, bh2)\n  mid += Math.imul(ah6, bl2)\n  hi += Math.imul(ah6, bh2)\n  lo += Math.imul(al5, bl3)\n  mid += Math.imul(al5, bh3)\n  mid += Math.imul(ah5, bl3)\n  hi += Math.imul(ah5, bh3)\n  lo += Math.imul(al4, bl4)\n  mid += Math.imul(al4, bh4)\n  mid += Math.imul(ah4, bl4)\n  hi += Math.imul(ah4, bh4)\n  lo += Math.imul(al3, bl5)\n  mid += Math.imul(al3, bh5)\n  mid += Math.imul(ah3, bl5)\n  hi += Math.imul(ah3, bh5)\n  lo += Math.imul(al2, bl6)\n  mid += Math.imul(al2, bh6)\n  mid += Math.imul(ah2, bl6)\n  hi += Math.imul(ah2, bh6)\n  lo += Math.imul(al1, bl7)\n  mid += Math.imul(al1, bh7)\n  mid += Math.imul(ah1, bl7)\n  hi += Math.imul(ah1, bh7)\n  lo += Math.imul(al0, bl8)\n  mid += Math.imul(al0, bh8)\n  mid += Math.imul(ah0, bl8)\n  hi += Math.imul(ah0, bh8)\n  var w8 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w8 >>> 26)\n  w8 &= 0x3ffffff\n  /* k = 9 */\n  lo = Math.imul(al9, bl0)\n  mid = Math.imul(al9, bh0)\n  mid += Math.imul(ah9, bl0)\n  hi = Math.imul(ah9, bh0)\n  lo += Math.imul(al8, bl1)\n  mid += Math.imul(al8, bh1)\n  mid += Math.imul(ah8, bl1)\n  hi += Math.imul(ah8, bh1)\n  lo += Math.imul(al7, bl2)\n  mid += Math.imul(al7, bh2)\n  mid += Math.imul(ah7, bl2)\n  hi += Math.imul(ah7, bh2)\n  lo += Math.imul(al6, bl3)\n  mid += Math.imul(al6, bh3)\n  mid += Math.imul(ah6, bl3)\n  hi += Math.imul(ah6, bh3)\n  lo += Math.imul(al5, bl4)\n  mid += Math.imul(al5, bh4)\n  mid += Math.imul(ah5, bl4)\n  hi += Math.imul(ah5, bh4)\n  lo += Math.imul(al4, bl5)\n  mid += Math.imul(al4, bh5)\n  mid += Math.imul(ah4, bl5)\n  hi += Math.imul(ah4, bh5)\n  lo += Math.imul(al3, bl6)\n  mid += Math.imul(al3, bh6)\n  mid += Math.imul(ah3, bl6)\n  hi += Math.imul(ah3, bh6)\n  lo += Math.imul(al2, bl7)\n  mid += Math.imul(al2, bh7)\n  mid += Math.imul(ah2, bl7)\n  hi += Math.imul(ah2, bh7)\n  lo += Math.imul(al1, bl8)\n  mid += Math.imul(al1, bh8)\n  mid += Math.imul(ah1, bl8)\n  hi += Math.imul(ah1, bh8)\n  lo += Math.imul(al0, bl9)\n  mid += Math.imul(al0, bh9)\n  mid += Math.imul(ah0, bl9)\n  hi += Math.imul(ah0, bh9)\n  var w9 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w9 >>> 26)\n  w9 &= 0x3ffffff\n  /* k = 10 */\n  lo = Math.imul(al9, bl1)\n  mid = Math.imul(al9, bh1)\n  mid += Math.imul(ah9, bl1)\n  hi = Math.imul(ah9, bh1)\n  lo += Math.imul(al8, bl2)\n  mid += Math.imul(al8, bh2)\n  mid += Math.imul(ah8, bl2)\n  hi += Math.imul(ah8, bh2)\n  lo += Math.imul(al7, bl3)\n  mid += Math.imul(al7, bh3)\n  mid += Math.imul(ah7, bl3)\n  hi += Math.imul(ah7, bh3)\n  lo += Math.imul(al6, bl4)\n  mid += Math.imul(al6, bh4)\n  mid += Math.imul(ah6, bl4)\n  hi += Math.imul(ah6, bh4)\n  lo += Math.imul(al5, bl5)\n  mid += Math.imul(al5, bh5)\n  mid += Math.imul(ah5, bl5)\n  hi += Math.imul(ah5, bh5)\n  lo += Math.imul(al4, bl6)\n  mid += Math.imul(al4, bh6)\n  mid += Math.imul(ah4, bl6)\n  hi += Math.imul(ah4, bh6)\n  lo += Math.imul(al3, bl7)\n  mid += Math.imul(al3, bh7)\n  mid += Math.imul(ah3, bl7)\n  hi += Math.imul(ah3, bh7)\n  lo += Math.imul(al2, bl8)\n  mid += Math.imul(al2, bh8)\n  mid += Math.imul(ah2, bl8)\n  hi += Math.imul(ah2, bh8)\n  lo += Math.imul(al1, bl9)\n  mid += Math.imul(al1, bh9)\n  mid += Math.imul(ah1, bl9)\n  hi += Math.imul(ah1, bh9)\n  var w10 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w10 >>> 26)\n  w10 &= 0x3ffffff\n  /* k = 11 */\n  lo = Math.imul(al9, bl2)\n  mid = Math.imul(al9, bh2)\n  mid += Math.imul(ah9, bl2)\n  hi = Math.imul(ah9, bh2)\n  lo += Math.imul(al8, bl3)\n  mid += Math.imul(al8, bh3)\n  mid += Math.imul(ah8, bl3)\n  hi += Math.imul(ah8, bh3)\n  lo += Math.imul(al7, bl4)\n  mid += Math.imul(al7, bh4)\n  mid += Math.imul(ah7, bl4)\n  hi += Math.imul(ah7, bh4)\n  lo += Math.imul(al6, bl5)\n  mid += Math.imul(al6, bh5)\n  mid += Math.imul(ah6, bl5)\n  hi += Math.imul(ah6, bh5)\n  lo += Math.imul(al5, bl6)\n  mid += Math.imul(al5, bh6)\n  mid += Math.imul(ah5, bl6)\n  hi += Math.imul(ah5, bh6)\n  lo += Math.imul(al4, bl7)\n  mid += Math.imul(al4, bh7)\n  mid += Math.imul(ah4, bl7)\n  hi += Math.imul(ah4, bh7)\n  lo += Math.imul(al3, bl8)\n  mid += Math.imul(al3, bh8)\n  mid += Math.imul(ah3, bl8)\n  hi += Math.imul(ah3, bh8)\n  lo += Math.imul(al2, bl9)\n  mid += Math.imul(al2, bh9)\n  mid += Math.imul(ah2, bl9)\n  hi += Math.imul(ah2, bh9)\n  var w11 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w11 >>> 26)\n  w11 &= 0x3ffffff\n  /* k = 12 */\n  lo = Math.imul(al9, bl3)\n  mid = Math.imul(al9, bh3)\n  mid += Math.imul(ah9, bl3)\n  hi = Math.imul(ah9, bh3)\n  lo += Math.imul(al8, bl4)\n  mid += Math.imul(al8, bh4)\n  mid += Math.imul(ah8, bl4)\n  hi += Math.imul(ah8, bh4)\n  lo += Math.imul(al7, bl5)\n  mid += Math.imul(al7, bh5)\n  mid += Math.imul(ah7, bl5)\n  hi += Math.imul(ah7, bh5)\n  lo += Math.imul(al6, bl6)\n  mid += Math.imul(al6, bh6)\n  mid += Math.imul(ah6, bl6)\n  hi += Math.imul(ah6, bh6)\n  lo += Math.imul(al5, bl7)\n  mid += Math.imul(al5, bh7)\n  mid += Math.imul(ah5, bl7)\n  hi += Math.imul(ah5, bh7)\n  lo += Math.imul(al4, bl8)\n  mid += Math.imul(al4, bh8)\n  mid += Math.imul(ah4, bl8)\n  hi += Math.imul(ah4, bh8)\n  lo += Math.imul(al3, bl9)\n  mid += Math.imul(al3, bh9)\n  mid += Math.imul(ah3, bl9)\n  hi += Math.imul(ah3, bh9)\n  var w12 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w12 >>> 26)\n  w12 &= 0x3ffffff\n  /* k = 13 */\n  lo = Math.imul(al9, bl4)\n  mid = Math.imul(al9, bh4)\n  mid += Math.imul(ah9, bl4)\n  hi = Math.imul(ah9, bh4)\n  lo += Math.imul(al8, bl5)\n  mid += Math.imul(al8, bh5)\n  mid += Math.imul(ah8, bl5)\n  hi += Math.imul(ah8, bh5)\n  lo += Math.imul(al7, bl6)\n  mid += Math.imul(al7, bh6)\n  mid += Math.imul(ah7, bl6)\n  hi += Math.imul(ah7, bh6)\n  lo += Math.imul(al6, bl7)\n  mid += Math.imul(al6, bh7)\n  mid += Math.imul(ah6, bl7)\n  hi += Math.imul(ah6, bh7)\n  lo += Math.imul(al5, bl8)\n  mid += Math.imul(al5, bh8)\n  mid += Math.imul(ah5, bl8)\n  hi += Math.imul(ah5, bh8)\n  lo += Math.imul(al4, bl9)\n  mid += Math.imul(al4, bh9)\n  mid += Math.imul(ah4, bl9)\n  hi += Math.imul(ah4, bh9)\n  var w13 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w13 >>> 26)\n  w13 &= 0x3ffffff\n  /* k = 14 */\n  lo = Math.imul(al9, bl5)\n  mid = Math.imul(al9, bh5)\n  mid += Math.imul(ah9, bl5)\n  hi = Math.imul(ah9, bh5)\n  lo += Math.imul(al8, bl6)\n  mid += Math.imul(al8, bh6)\n  mid += Math.imul(ah8, bl6)\n  hi += Math.imul(ah8, bh6)\n  lo += Math.imul(al7, bl7)\n  mid += Math.imul(al7, bh7)\n  mid += Math.imul(ah7, bl7)\n  hi += Math.imul(ah7, bh7)\n  lo += Math.imul(al6, bl8)\n  mid += Math.imul(al6, bh8)\n  mid += Math.imul(ah6, bl8)\n  hi += Math.imul(ah6, bh8)\n  lo += Math.imul(al5, bl9)\n  mid += Math.imul(al5, bh9)\n  mid += Math.imul(ah5, bl9)\n  hi += Math.imul(ah5, bh9)\n  var w14 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w14 >>> 26)\n  w14 &= 0x3ffffff\n  /* k = 15 */\n  lo = Math.imul(al9, bl6)\n  mid = Math.imul(al9, bh6)\n  mid += Math.imul(ah9, bl6)\n  hi = Math.imul(ah9, bh6)\n  lo += Math.imul(al8, bl7)\n  mid += Math.imul(al8, bh7)\n  mid += Math.imul(ah8, bl7)\n  hi += Math.imul(ah8, bh7)\n  lo += Math.imul(al7, bl8)\n  mid += Math.imul(al7, bh8)\n  mid += Math.imul(ah7, bl8)\n  hi += Math.imul(ah7, bh8)\n  lo += Math.imul(al6, bl9)\n  mid += Math.imul(al6, bh9)\n  mid += Math.imul(ah6, bl9)\n  hi += Math.imul(ah6, bh9)\n  var w15 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w15 >>> 26)\n  w15 &= 0x3ffffff\n  /* k = 16 */\n  lo = Math.imul(al9, bl7)\n  mid = Math.imul(al9, bh7)\n  mid += Math.imul(ah9, bl7)\n  hi = Math.imul(ah9, bh7)\n  lo += Math.imul(al8, bl8)\n  mid += Math.imul(al8, bh8)\n  mid += Math.imul(ah8, bl8)\n  hi += Math.imul(ah8, bh8)\n  lo += Math.imul(al7, bl9)\n  mid += Math.imul(al7, bh9)\n  mid += Math.imul(ah7, bl9)\n  hi += Math.imul(ah7, bh9)\n  var w16 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w16 >>> 26)\n  w16 &= 0x3ffffff\n  /* k = 17 */\n  lo = Math.imul(al9, bl8)\n  mid = Math.imul(al9, bh8)\n  mid += Math.imul(ah9, bl8)\n  hi = Math.imul(ah9, bh8)\n  lo += Math.imul(al8, bl9)\n  mid += Math.imul(al8, bh9)\n  mid += Math.imul(ah8, bl9)\n  hi += Math.imul(ah8, bh9)\n  var w17 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w17 >>> 26)\n  w17 &= 0x3ffffff\n  /* k = 18 */\n  lo = Math.imul(al9, bl9)\n  mid = Math.imul(al9, bh9)\n  mid += Math.imul(ah9, bl9)\n  hi = Math.imul(ah9, bh9)\n  var w18 = c + lo + ((mid & 0x1fff) << 13)\n  c = hi + (mid >>> 13) + (w18 >>> 26)\n  w18 &= 0x3ffffff\n  o[0] = w0\n  o[1] = w1\n  o[2] = w2\n  o[3] = w3\n  o[4] = w4\n  o[5] = w5\n  o[6] = w6\n  o[7] = w7\n  o[8] = w8\n  o[9] = w9\n  o[10] = w10\n  o[11] = w11\n  o[12] = w12\n  o[13] = w13\n  o[14] = w14\n  o[15] = w15\n  o[16] = w16\n  o[17] = w17\n  o[18] = w18\n  if (c !== 0) {\n    o[19] = c\n    out.length++\n  }\n  return out\n}\n","module.exports={\n  \"sha1\": {\n    \"securityStrength\": 128,\n    \"outlen\": 160,\n    \"seedlen\": 440\n  },\n  \"sha224\": {\n    \"securityStrength\": 192,\n    \"outlen\": 224,\n    \"seedlen\": 440\n  },\n  \"sha256\": {\n    \"securityStrength\": 256,\n    \"outlen\": 256,\n    \"seedlen\": 440\n  },\n  \"sha384\": {\n    \"securityStrength\": 256,\n    \"outlen\": 384,\n    \"seedlen\": 888\n  },\n  \"sha512\": {\n    \"securityStrength\": 256,\n    \"outlen\": 512,\n    \"seedlen\": 888\n  }\n}\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","\nmodule.exports = function () {\n\n  var buffers = [], length = 0\n\n  //just used for debugging...\n  function calcLength () {\n    return buffers.reduce(function (a, b) {\n      return a + b.length\n    }, 0)\n  }\n\n  return {\n    length: length,\n    data: this,\n    add: function (data) {\n      if(!Buffer.isBuffer(data))\n        throw new Error('data must be a buffer, was: ' + JSON.stringify(data))\n      this.length = length = length + data.length\n      buffers.push(data)\n      return this\n    },\n    has: function (n) {\n      if(null == n) return length > 0\n      return length >= n\n    },\n    get: function (n) {\n      var _length\n      if(n == null || n === length) {\n        length = 0\n        var _buffers = buffers\n        buffers = []\n        if(_buffers.length == 1)\n          return _buffers[0]\n        else\n          return Buffer.concat(_buffers)\n      } else if (buffers.length > 1 && n <= (_length = buffers[0].length)) {\n        var buf = buffers[0].slice(0, n)\n        if(n === _length) {\n          buffers.shift()\n        }\n        else {\n          buffers[0] = buffers[0].slice(n, _length)\n        }\n        length -= n\n        return buf\n      }  else if(n < length) {\n        var out = [], len = 0\n\n        while((len + buffers[0].length) < n) {\n          var b = buffers.shift()\n          len += b.length\n          out.push(b)\n        }\n\n        if(len < n) {\n          out.push(buffers[0].slice(0, n - len))\n          buffers[0] = buffers[0].slice(n - len, buffers[0].length)\n          this.length = length = length - n\n        }\n        return Buffer.concat(out)\n      }\n      else\n        throw new Error('could not get ' + n + ' bytes')\n    }\n  }\n\n}\n\n\n\n\n\n","'use strict'\n\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\n\nmodule.exports = Multihashing\n\n/**\n * Hash the given `buf` using the algorithm specified\n * by `func`.\n *\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nfunction Multihashing (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  Multihashing.digest(buf, func, length, (err, digest) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, multihash.encode(digest, func, length))\n  })\n}\n\n/**\n * The `buffer` module for easy use in the browser.\n *\n * @type {Buffer}\n */\nMultihashing.Buffer = Buffer // for browser things\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nMultihashing.digest = function (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  let cb = callback\n  if (length) {\n    cb = (err, digest) => {\n      if (err) {\n        return callback(err)\n      }\n\n      callback(null, digest.slice(0, length))\n    }\n  }\n\n  let hash\n  try {\n    hash = Multihashing.createHash(func)\n  } catch (err) {\n    return cb(err)\n  }\n\n  hash(buf, cb)\n}\n\n/**\n * @param {string|number} func\n *\n * @returns {function} - The to `func` corresponding hash function.\n */\nMultihashing.createHash = function (func) {\n  func = multihash.coerceCode(func)\n  if (!Multihashing.functions[func]) {\n    throw new Error('multihash function ' + func + ' not yet supported')\n  }\n\n  return Multihashing.functions[func]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n * @type {Object}\n */\nMultihashing.functions = {\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n\nMultihashing.validate = (data, hash, callback) => {\n  let algo = multihash.decode(hash).name\n  Multihashing(data, algo, (err, newHash) => {\n    if (err) return callback(err)\n    callback(err, Buffer.compare(hash, newHash) === 0)\n  })\n}\n","module.exports = function(socket, callback) {\n  var remove = socket && (socket.removeEventListener || socket.removeListener);\n\n  function cleanup () {\n    if (typeof remove == 'function') {\n      remove.call(socket, 'open', handleOpen);\n      remove.call(socket, 'error', handleErr);\n    }\n  }\n\n  function handleOpen(evt) {\n    cleanup(); callback();\n  }\n\n  function handleErr (evt) {\n    cleanup(); callback(evt);\n  }\n\n  // if the socket is closing or closed, return end\n  if (socket.readyState >= 2) {\n    return callback(true);\n  }\n\n  // if open, trigger the callback\n  if (socket.readyState === 1) {\n    return callback();\n  }\n\n  socket.addEventListener('open', handleOpen);\n  socket.addEventListener('error', handleErr);\n};\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","'use strict'\n\nconst Heap = require('heap')\nconst distance = require('xor-distance')\nconst debug = require('debug')\nconst promisify = require('promisify-es6')\n\nconst utils = require('./utils')\n\nconst log = debug('libp2p:dht:peer-queue')\n\n/**\n * PeerQueue is a heap that sorts its entries (PeerIds) by their\n * xor distance to the inital provided key.\n */\nclass PeerQueue {\n  /**\n   * Create from a given peer id.\n   *\n   * @param {PeerId} id\n   * @returns {Promise<PeerQueue>}\n   */\n  static async fromPeerId (id) {\n    const key = await promisify(cb => utils.convertPeerId(id, cb))()\n    return new PeerQueue(key)\n  }\n\n  /**\n   * Create from a given buffer.\n   *\n   * @param {Buffer} keyBuffer\n   * @returns {Promise<PeerQueue>}\n   */\n  static async fromKey (keyBuffer) {\n    const key = await promisify(cb => utils.convertBuffer(keyBuffer, cb))()\n    return new PeerQueue(key)\n  }\n\n  /**\n   * Create a new PeerQueue.\n   *\n   * @param {Buffer} from - The sha2-256 encoded peer id\n   */\n  constructor (from) {\n    log('create: %b', from)\n    this.from = from\n    this.heap = new Heap(utils.xorCompare)\n  }\n\n  /**\n   * Add a new PeerId to the queue.\n   *\n   * @param {PeerId} id\n   * @returns {Promise}\n   */\n  async enqueue (id) {\n    log('enqueue %s', id.toB58String())\n    const key = await promisify(cb => utils.convertPeerId(id, cb))()\n\n    const el = {\n      id: id,\n      distance: distance(this.from, key)\n    }\n\n    this.heap.push(el)\n  }\n\n  /**\n   * Returns the closest peer to the `from` peer.\n   *\n   * @returns {PeerId}\n   */\n  dequeue () {\n    const el = this.heap.pop()\n    log('dequeue %s', el.id.toB58String())\n    return el.id\n  }\n\n  get length () {\n    return this.heap.size()\n  }\n}\n\nmodule.exports = PeerQueue\n","'use strict'\n\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:ping')\n\n  /**\n   * Process `Ping` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function ping (peer, msg, callback) {\n    log('from %s', peer.id.toB58String())\n    callback(null, msg)\n  }\n}\n","'use strict'\n\nconst utils = require('../../utils')\nconst errcode = require('err-code')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:put-value')\n\n  /**\n   * Process `PutValue` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function putValue (peer, msg, callback) {\n    const key = msg.key\n    log('key: %b', key)\n\n    const record = msg.record\n\n    if (!record) {\n      const errMsg = `Empty record from: ${peer.id.toB58String()}`\n\n      log.error(errMsg)\n      return callback(errcode(new Error(errMsg), 'ERR_EMPTY_RECORD'))\n    }\n\n    dht._verifyRecordLocally(record, (err) => {\n      if (err) {\n        log.error(err.message)\n        return callback(err)\n      }\n\n      record.timeReceived = new Date()\n\n      const key = utils.bufferToKey(record.key)\n\n      dht.datastore.put(key, record.serialize(), (err) => {\n        if (err) {\n          return callback(err)\n        }\n\n        callback(null, msg)\n      })\n    })\n  }\n}\n","'use strict'\n\nconst CID = require('cids')\nconst errcode = require('err-code')\nconst promiseToCallback = require('promise-to-callback')\n\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:add-provider')\n  /**\n   * Process `AddProvider` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error)} callback\n   * @returns {undefined}\n   */\n  return function addProvider (peer, msg, callback) {\n    log('start')\n\n    if (!msg.key || msg.key.length === 0) {\n      return callback(errcode(new Error('Missing key'), 'ERR_MISSING_KEY'))\n    }\n\n    let cid\n    try {\n      cid = new CID(msg.key)\n    } catch (err) {\n      const errMsg = `Invalid CID: ${err.message}`\n\n      return callback(errcode(new Error(errMsg), 'ERR_INVALID_CID'))\n    }\n\n    let foundProvider = false\n    msg.providerPeers.forEach((pi) => {\n      // Ignore providers not from the originator\n      if (!pi.id.isEqual(peer.id)) {\n        log('invalid provider peer %s from %s', pi.id.toB58String(), peer.id.toB58String())\n        return\n      }\n\n      if (pi.multiaddrs.size < 1) {\n        log('no valid addresses for provider %s. Ignore', peer.id.toB58String())\n        return\n      }\n\n      log('received provider %s for %s (addrs %s)', peer.id.toB58String(), cid.toBaseEncodedString(), pi.multiaddrs.toArray().map((m) => m.toString()))\n\n      if (!dht._isSelf(pi.id)) {\n        foundProvider = true\n        dht.peerBook.put(pi)\n        promiseToCallback(dht.providers.addProvider(cid, pi.id))(err => callback(err))\n      }\n    })\n\n    // Previous versions of the JS DHT sent erroneous providers in the\n    // `providerPeers` field. In order to accommodate older clients that have\n    // this bug, we fall back to assuming the originator is the provider if\n    // we can't find any valid providers in the payload.\n    // https://github.com/libp2p/js-libp2p-kad-dht/pull/127\n    // https://github.com/libp2p/js-libp2p-kad-dht/issues/128\n    if (!foundProvider) {\n      promiseToCallback(dht.providers.addProvider(cid, peer.id))(err => callback(err))\n    }\n  }\n}\n","'use strict'\n\nconst waterfall = require('async/waterfall')\n\nconst Message = require('../../message')\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:find-node')\n\n  /**\n   * Process `FindNode` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function findNode (peer, msg, callback) {\n    log('start')\n\n    waterfall([\n      (cb) => {\n        if (msg.key.equals(dht.peerInfo.id.id)) {\n          return cb(null, [dht.peerInfo])\n        }\n\n        dht._betterPeersToQuery(msg, peer, cb)\n      },\n      (closer, cb) => {\n        const response = new Message(msg.type, Buffer.alloc(0), msg.clusterLevel)\n\n        if (closer.length > 0) {\n          response.closerPeers = closer\n        } else {\n          log('handle FindNode %s: could not find anything', peer.id.toB58String())\n        }\n\n        cb(null, response)\n      }\n    ], callback)\n  }\n}\n","'use strict'\n\nconst parallel = require('async/parallel')\nconst Record = require('libp2p-record').Record\n\nconst errcode = require('err-code')\n\nconst Message = require('../../message')\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:get-value')\n\n  /**\n   * Process `GetValue` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function getValue (peer, msg, callback) {\n    const key = msg.key\n\n    log('key: %b', key)\n\n    if (!key || key.length === 0) {\n      return callback(errcode(new Error('Invalid key'), 'ERR_INVALID_KEY'))\n    }\n\n    const response = new Message(Message.TYPES.GET_VALUE, key, msg.clusterLevel)\n\n    if (utils.isPublicKeyKey(key)) {\n      log('is public key')\n      const id = utils.fromPublicKeyKey(key)\n      let info\n\n      if (dht._isSelf(id)) {\n        info = dht.peerInfo\n      } else if (dht.peerBook.has(id)) {\n        info = dht.peerBook.get(id)\n      }\n\n      if (info && info.id.pubKey) {\n        log('returning found public key')\n        response.record = new Record(key, info.id.pubKey.bytes)\n        return callback(null, response)\n      }\n    }\n\n    parallel([\n      (cb) => dht._checkLocalDatastore(key, cb),\n      (cb) => dht._betterPeersToQuery(msg, peer, cb)\n    ], (err, res) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const record = res[0]\n      const closer = res[1]\n\n      if (record) {\n        log('got record')\n        response.record = record\n      }\n\n      if (closer.length > 0) {\n        log('got closer %s', closer.length)\n        response.closerPeers = closer\n      }\n\n      callback(null, response)\n    })\n  }\n}\n","'use strict'\n\nconst CID = require('cids')\nconst parallel = require('async/parallel')\nconst PeerInfo = require('peer-info')\nconst promiseToCallback = require('promise-to-callback')\nconst errcode = require('err-code')\n\nconst Message = require('../../message')\nconst utils = require('../../utils')\n\nmodule.exports = (dht) => {\n  const log = utils.logger(dht.peerInfo.id, 'rpc:get-providers')\n\n  /**\n   * Process `GetProviders` DHT messages.\n   *\n   * @param {PeerInfo} peer\n   * @param {Message} msg\n   * @param {function(Error, Message)} callback\n   * @returns {undefined}\n   */\n  return function getProviders (peer, msg, callback) {\n    let cid\n    try {\n      cid = new CID(msg.key)\n    } catch (err) {\n      return callback(errcode(new Error(`Invalid CID: ${err.message}`), 'ERR_INVALID_CID'))\n    }\n\n    log('%s', cid.toBaseEncodedString())\n\n    const dsKey = utils.bufferToKey(cid.buffer)\n\n    parallel([\n      (cb) => dht.datastore.has(dsKey, (err, exists) => {\n        if (err) {\n          log.error('Failed to check datastore existence', err)\n          return cb(null, false)\n        }\n\n        cb(null, exists)\n      }),\n      (cb) => promiseToCallback(dht.providers.getProviders(cid))(cb),\n      (cb) => dht._betterPeersToQuery(msg, peer, cb)\n    ], (err, res) => {\n      if (err) {\n        return callback(err)\n      }\n      const has = res[0]\n      const closer = res[2]\n      const providers = res[1].map((p) => {\n        if (dht.peerBook.has(p)) {\n          return dht.peerBook.get(p)\n        }\n\n        return dht.peerBook.put(new PeerInfo(p))\n      })\n\n      if (has) {\n        providers.push(dht.peerInfo)\n      }\n\n      const response = new Message(msg.type, msg.key, msg.clusterLevel)\n\n      if (providers.length > 0) {\n        response.providerPeers = providers\n      }\n\n      if (closer.length > 0) {\n        response.closerPeers = closer\n      }\n\n      log('got %s providers %s closerPeers', providers.length, closer.length)\n\n      callback(null, response)\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = `message Propose {\n  optional bytes rand = 1;\n  optional bytes pubkey = 2;\n  optional string exchanges = 3;\n  optional string ciphers = 4;\n  optional string hashes = 5;\n}\n\nmessage Exchange {\n  optional bytes epubkey = 1;\n  optional bytes signature = 2;\n}`\n","'use strict'\n\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\n\nmodule.exports = Multihashing\n\n/**\n * Hash the given `buf` using the algorithm specified\n * by `func`.\n *\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nfunction Multihashing (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  Multihashing.digest(buf, func, length, (err, digest) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, multihash.encode(digest, func, length))\n  })\n}\n\n/**\n * The `buffer` module for easy use in the browser.\n *\n * @type {Buffer}\n */\nMultihashing.Buffer = Buffer // for browser things\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nMultihashing.digest = function (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  let cb = callback\n  if (length) {\n    cb = (err, digest) => {\n      if (err) {\n        return callback(err)\n      }\n\n      callback(null, digest.slice(0, length))\n    }\n  }\n\n  let hash\n  try {\n    hash = Multihashing.createHash(func)\n  } catch (err) {\n    return cb(err)\n  }\n\n  hash(buf, cb)\n}\n\n/**\n * @param {string|number} func\n *\n * @returns {function} - The to `func` corresponding hash function.\n */\nMultihashing.createHash = function (func) {\n  func = multihash.coerceCode(func)\n  if (!Multihashing.functions[func]) {\n    throw new Error('multihash function ' + func + ' not yet supported')\n  }\n\n  return Multihashing.functions[func]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n * @type {Object}\n */\nMultihashing.functions = {\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n","\"use strict\"\n\nconst EE = require(\"events\").EventEmitter\n\nfunction DataQueue() {\n  const ee = new EE()\n  let q = []\n  let ed\n\n  function unleak() {\n    ee.removeAllListeners(\"err\")\n    ee.removeAllListeners(\"data\")\n  }\n\n  return {\n    append: data => {\n      if (ed) return ed\n      q.push(data)\n      ee.emit(\"data\")\n    },\n    prepend: data => { //better only call this before the get queue starts\n      if (ed) return ed\n      q.unshift(data)\n    },\n    error: e => {\n      ed = e\n      ee.emit(\"err\", e)\n    },\n    get: cb => {\n      unleak()\n      if (ed) return cb(ed)\n      if (q.length) return cb(null, q.shift())\n      ee.once(\"err\", e => {\n        unleak()\n        cb(e)\n      })\n      ee.once(\"data\", () => {\n        unleak()\n        return cb(null, q.shift())\n      })\n    },\n    height: () => q.length\n  }\n}\nmodule.exports = DataQueue\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = require('events').EventEmitter;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","'use strict'\n\nconst { Message } = require('./index')\nconst SignPrefix = Buffer.from('libp2p-pubsub:')\n\nmodule.exports.SignPrefix = SignPrefix\n\n/**\n * Signs the provided message with the given `peerId`\n *\n * @param {PeerId} peerId\n * @param {Message} message\n * @param {function(Error, Message)} callback\n * @returns {void}\n */\nmodule.exports.signMessage = function (peerId, message, callback) {\n  // Get the message in bytes, and prepend with the pubsub prefix\n  const bytes = Buffer.concat([\n    SignPrefix,\n    Message.encode(message)\n  ])\n\n  // Sign the bytes with the private key\n  peerId.privKey.sign(bytes, (err, signature) => {\n    if (err) return callback(err)\n\n    callback(null, {\n      ...message,\n      signature: signature,\n      key: peerId.pubKey.bytes\n    })\n  })\n}\n","'use strict'\n\nconst crypto = require('libp2p-crypto')\nconst bs58 = require('bs58')\n\nexports = module.exports\n\n/**\n * Generatea random sequence number.\n *\n * @returns {Buffer}\n * @private\n */\nexports.randomSeqno = () => {\n  return crypto.randomBytes(20)\n}\n\n/**\n * Generate a message id, based on the `from` and `seqno`.\n *\n * @param {string} from\n * @param {Buffer} seqno\n * @returns {string}\n * @private\n */\nexports.msgId = (from, seqno) => {\n  return from + seqno.toString('hex')\n}\n\n/**\n * Check if any member of the first set is also a member\n * of the second set.\n *\n * @param {Set|Array} a\n * @param {Set|Array} b\n * @returns {boolean}\n * @private\n */\nexports.anyMatch = (a, b) => {\n  let bHas\n  if (Array.isArray(b)) {\n    bHas = (val) => b.indexOf(val) > -1\n  } else {\n    bHas = (val) => b.has(val)\n  }\n\n  for (let val of a) {\n    if (bHas(val)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Make everything an array.\n *\n * @param {any} maybeArray\n * @returns {Array}\n * @private\n */\nexports.ensureArray = (maybeArray) => {\n  if (!Array.isArray(maybeArray)) {\n    return [maybeArray]\n  }\n\n  return maybeArray\n}\n\nexports.normalizeInRpcMessages = (messages) => {\n  if (!messages) {\n    return messages\n  }\n  return messages.map((msg) => {\n    const m = Object.assign({}, msg)\n    if (Buffer.isBuffer(msg.from)) {\n      m.from = bs58.encode(msg.from)\n    }\n    return m\n  })\n}\n\nexports.normalizeOutRpcMessage = (message) => {\n  const m = Object.assign({}, message)\n  if (typeof message.from === 'string' || message.from instanceof String) {\n    m.from = bs58.decode(message.from)\n  }\n  return m\n}\n\nexports.normalizeOutRpcMessages = (messages) => {\n  if (!messages) {\n    return messages\n  }\n  return messages.map(exports.normalizeOutRpcMessage)\n}\n","'use strict'\n\nconst lp = require('pull-length-prefixed')\nconst Pushable = require('pull-pushable')\nconst pull = require('pull-stream')\nconst setImmediate = require('async/setImmediate')\nconst EventEmitter = require('events')\n\nconst { RPC } = require('./message')\n\n/**\n * The known state of a connected peer.\n */\nclass Peer extends EventEmitter {\n  /**\n   * @param {PeerInfo} info\n   */\n  constructor (info) {\n    super()\n\n    /**\n     * @type {PeerInfo}\n     */\n    this.info = info\n    /**\n     * @type {Connection}\n     */\n    this.conn = null\n    /**\n     * @type {Set}\n     */\n    this.topics = new Set()\n    /**\n     * @type {Pushable}\n     */\n    this.stream = null\n\n    this._references = 0\n  }\n\n  /**\n   * Is the peer connected currently?\n   *\n   * @type {boolean}\n   */\n  get isConnected () {\n    return Boolean(this.conn)\n  }\n\n  /**\n   * Do we have a connection to write on?\n   *\n   * @type {boolean}\n   */\n  get isWritable () {\n    return Boolean(this.stream)\n  }\n\n  /**\n   * Send a message to this peer.\n   * Throws if there is no `stream` to write to available.\n   *\n   * @param {Buffer} msg\n   * @returns {undefined}\n   */\n  write (msg) {\n    if (!this.isWritable) {\n      const id = this.info.id.toB58String()\n      throw new Error('No writable connection to ' + id)\n    }\n\n    this.stream.push(msg)\n  }\n\n  /**\n   * Attach the peer to a connection and setup a write stream\n   *\n   * @param {Connection} conn\n   * @returns {undefined}\n   */\n  attachConnection (conn) {\n    this.conn = conn\n    this.stream = new Pushable()\n\n    pull(\n      this.stream,\n      lp.encode(),\n      conn,\n      pull.onEnd(() => {\n        this.conn = null\n        this.stream = null\n        this.emit('close')\n      })\n    )\n\n    this.emit('connection')\n  }\n\n  _sendRawSubscriptions (topics, subscribe) {\n    if (topics.size === 0) {\n      return\n    }\n\n    const subs = []\n    topics.forEach((topic) => {\n      subs.push({\n        subscribe: subscribe,\n        topicID: topic\n      })\n    })\n\n    this.write(RPC.encode({\n      subscriptions: subs\n    }))\n  }\n\n  /**\n   * Send the given subscriptions to this peer.\n   * @param {Set|Array} topics\n   * @returns {undefined}\n   */\n  sendSubscriptions (topics) {\n    this._sendRawSubscriptions(topics, true)\n  }\n\n  /**\n   * Send the given unsubscriptions to this peer.\n   * @param {Set|Array} topics\n   * @returns {undefined}\n   */\n  sendUnsubscriptions (topics) {\n    this._sendRawSubscriptions(topics, false)\n  }\n\n  /**\n   * Send messages to this peer.\n   *\n   * @param {Array<any>} msgs\n   * @returns {undefined}\n   */\n  sendMessages (msgs) {\n    this.write(RPC.encode({\n      msgs: msgs\n    }))\n  }\n\n  /**\n   * Bulk process subscription updates.\n   *\n   * @param {Array} changes\n   * @returns {undefined}\n   */\n  updateSubscriptions (changes) {\n    changes.forEach((subopt) => {\n      if (subopt.subscribe) {\n        this.topics.add(subopt.topicID)\n      } else {\n        this.topics.delete(subopt.topicID)\n      }\n    })\n  }\n\n  /**\n   * Closes the open connection to peer\n   *\n   * @param {Function} callback\n   * @returns {undefined}\n   */\n  close (callback) {\n    // Force removal of peer\n    this._references = 1\n\n    // End the pushable\n    if (this.stream) {\n      this.stream.end()\n    }\n\n    setImmediate(() => {\n      this.conn = null\n      this.stream = null\n      this.emit('close')\n      callback()\n    })\n  }\n}\n\nmodule.exports = Peer\n","'use strict'\n\nconst protons = require('protons')\n\nconst rpcProto = protons(require('./rpc.proto.js'))\nconst RPC = rpcProto.RPC\nconst topicDescriptorProto = protons(require('./topic-descriptor.proto.js'))\n\nexports = module.exports\nexports.rpc = rpcProto\nexports.td = topicDescriptorProto\nexports.RPC = RPC\nexports.Message = RPC.Message\nexports.SubOpts = RPC.SubOpts\n","'use strict'\n\nconst throttle = require('lodash.throttle')\nexports = module.exports = TimeCache\n\nfunction TimeCache (options) {\n  if (!(this instanceof TimeCache)) {\n    return new TimeCache(options)\n  }\n\n  options = options || {}\n\n  const validity = options.validity || 30 // seconds\n\n  const entries = new Map()\n\n  const sweep = throttle(() => {\n    entries.forEach((entry, key) => {\n      const v = entry.validity || validity\n      const delta = getTimeElapsed(entry.timestamp)\n      if (delta > v) {\n        entries.delete(key)\n      }\n    })\n  }, 200)\n\n  this.put = (key, value, validity) => {\n    if (!this.has(key)) {\n      entries.set(key, {\n        value: value,\n        timestamp: new Date(),\n        validity: validity\n      })\n    }\n\n    sweep()\n  }\n\n  this.get = (key) => {\n    if (entries.has(key)) {\n      return entries.get(key).value\n    } else {\n      throw new Error('key does not exist')\n    }\n  }\n\n  this.has = (key) => {\n    return entries.has(key)\n  }\n}\n\nfunction getTimeElapsed (prevTime) {\n  const currentTime = new Date()\n  const a = currentTime.getTime() - prevTime.getTime()\n\n  return Math.floor(a / 1000)\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document */\n\nvar debug = require('debug')('latency-monitor:VisibilityChangeEmitter');\n\n/**\n * Listen to page visibility change events (i.e. when the page is focused / blurred) by an event emitter.\n *\n * Warning: This does not work on all browsers, but should work on all modern browsers\n *\n * @example\n *\n *     const myVisibilityEmitter = new VisibilityChangeEmitter();\n *\n *     myVisibilityEmitter.on('visibilityChange', (pageInFocus) => {\n *        if ( pageInFocus ){\n *            // Page is in focus\n *            console.log('In focus');\n *        }\n *        else {\n *            // Page is blurred\n *            console.log('Out of focus');\n *        }\n *     });\n *     // To access the visibility state directly, call:\n *     console.log('Am I focused now? ' + myVisibilityEmitter.isVisible());\n *\n * @class VisibilityChangeEmitter\n */\n\nvar VisibilityChangeEmitter = function (_EventEmitter) {\n    _inherits(VisibilityChangeEmitter, _EventEmitter);\n\n    /**\n     * Creates a VisibilityChangeEmitter\n     */\n    function VisibilityChangeEmitter() {\n        _classCallCheck(this, VisibilityChangeEmitter);\n\n        var _this = _possibleConstructorReturn(this, (VisibilityChangeEmitter.__proto__ || Object.getPrototypeOf(VisibilityChangeEmitter)).call(this));\n\n        if (typeof document === 'undefined') {\n            debug('This is not a browser, no \"document\" found. Stopping.');\n            return _possibleConstructorReturn(_this);\n        }\n        _this._initializeVisibilityVarNames();\n        _this._addVisibilityChangeListener();\n        return _this;\n    }\n\n    /**\n     * document.hidden and document.visibilityChange are the two variables we need to check for;\n     * Since these variables are named differently in different browsers, this function sets\n     * the appropriate name based on the browser being used. Once executed, tha actual names of\n     * document.hidden and document.visibilityChange are found in this._hidden and this._visibilityChange\n     * respectively\n     * @private\n     */\n\n\n    _createClass(VisibilityChangeEmitter, [{\n        key: '_initializeVisibilityVarNames',\n        value: function _initializeVisibilityVarNames() {\n            var hidden = void 0;\n            var visibilityChange = void 0;\n            if (typeof document.hidden !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                hidden = 'hidden';\n                visibilityChange = 'visibilitychange';\n            } else if (typeof document.mozHidden !== 'undefined') {\n                hidden = 'mozHidden';\n                visibilityChange = 'mozvisibilitychange';\n            } else if (typeof document.msHidden !== 'undefined') {\n                hidden = 'msHidden';\n                visibilityChange = 'msvisibilitychange';\n            } else if (typeof document.webkitHidden !== 'undefined') {\n                hidden = 'webkitHidden';\n                visibilityChange = 'webkitvisibilitychange';\n            }\n            this._hidden = hidden;\n            this._visibilityChange = visibilityChange;\n        }\n\n        /**\n         * Adds an event listener on the document that listens to changes in document.visibilityChange\n         * (or whatever name by which the visibilityChange variable is known in the browser)\n         * @private\n         */\n\n    }, {\n        key: '_addVisibilityChangeListener',\n        value: function _addVisibilityChangeListener() {\n            if (typeof document.addEventListener === 'undefined' || typeof document[this._hidden] === 'undefined') {\n                debug('Checking page visibility requires a browser that supports the Page Visibility API.');\n            } else {\n                // Handle page visibility change\n                document.addEventListener(this._visibilityChange, this._handleVisibilityChange.bind(this), false);\n            }\n        }\n\n        /**\n         * The function returns ```true``` if the page is visible or ```false``` if the page is not visible and\n         * ```undefined``` if the page visibility API is not supported by the browser.\n         * @returns {Boolean|void} whether the page is now visible or not (undefined is unknown)\n         */\n\n    }, {\n        key: 'isVisible',\n        value: function isVisible() {\n            if (this._hidden === undefined || document[this._hidden] === undefined) {\n                return undefined;\n            }\n\n            return !document[this._hidden];\n        }\n\n        /**\n         * The function that is called when document.visibilityChange has changed\n         * It emits an event called visibilityChange and sends the value of document.hidden as a\n         * parameter\n         *\n         * @private\n         */\n\n    }, {\n        key: '_handleVisibilityChange',\n        value: function _handleVisibilityChange() {\n            var visible = !document[this._hidden];\n            debug(visible ? 'Page Visible' : 'Page Hidden');\n            // Emit the event\n            this.emit('visibilityChange', visible);\n        }\n    }]);\n\n    return VisibilityChangeEmitter;\n}(_events2.default);\n\nexports.default = VisibilityChangeEmitter;\n//# sourceMappingURL=VisibilityChangeEmitter.js.map\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) -- > 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict'\n\nvar getTime = require('./time')\n\nfunction Retimer (callback, timeout, args) {\n  var that = this\n\n  this._started = getTime()\n  this._rescheduled = 0\n  this._scheduled = timeout\n  this._args = args\n\n  this._timer = setTimeout(timerWrapper, timeout)\n\n  function timerWrapper () {\n    if (that._rescheduled > 0) {\n      that._scheduled = that._rescheduled - (getTime() - that._started)\n      that._timer = setTimeout(timerWrapper, that._scheduled)\n      that._rescheduled = 0\n    } else {\n      callback.apply(null, that._args)\n    }\n  }\n}\n\nRetimer.prototype.reschedule = function (timeout) {\n  var now = getTime()\n  if ((now + timeout) - (this._started + this._scheduled) < 0) {\n    return false\n  } else {\n    this._started = now\n    this._rescheduled = timeout\n    return true\n  }\n}\n\nRetimer.prototype.clear = function () {\n  clearTimeout(this._timer)\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  var args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n","'use strict'\n\nconst EventEmitter = require('events').EventEmitter\nconst debug = require('debug')\nconst withIs = require('class-is')\n\nclass BaseConnection extends EventEmitter {\n  constructor ({ _switch, name }) {\n    super()\n\n    this.switch = _switch\n    this.ourPeerInfo = this.switch._peerInfo\n    this.log = debug(`libp2p:conn:${name}`)\n    this.log.error = debug(`libp2p:conn:${name}:error`)\n  }\n\n  /**\n   * Puts the state into its disconnecting flow\n   *\n   * @param {Error} err Will be emitted if provided\n   * @returns {void}\n   */\n  close (err) {\n    if (this._state._state === 'DISCONNECTING') return\n    this.log('closing connection to %s', this.theirB58Id)\n    if (err && this._events.error) {\n      this.emit('error', err)\n    }\n    this._state('disconnect')\n  }\n\n  emit (eventName, ...args) {\n    if (eventName === 'error' && !this._events.error) {\n      this.log.error(...args)\n    } else {\n      super.emit(eventName, ...args)\n    }\n  }\n\n  /**\n   * Gets the current state of the connection\n   *\n   * @returns {string} The current state of the connection\n   */\n  getState () {\n    return this._state._state\n  }\n\n  /**\n   * Puts the state into encrypting mode\n   *\n   * @returns {void}\n   */\n  encrypt () {\n    this._state('encrypt')\n  }\n\n  /**\n   * Puts the state into privatizing mode\n   *\n   * @returns {void}\n   */\n  protect () {\n    this._state('privatize')\n  }\n\n  /**\n   * Puts the state into muxing mode\n   *\n   * @returns {void}\n   */\n  upgrade () {\n    this._state('upgrade')\n  }\n\n  /**\n   * Event handler for disconnected.\n   *\n   * @fires BaseConnection#close\n   * @returns {void}\n   */\n  _onDisconnected () {\n    this.switch.connection.remove(this)\n    this.log('disconnected from %s', this.theirB58Id)\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  /**\n   * Event handler for privatized\n   *\n   * @fires BaseConnection#private\n   * @returns {void}\n   */\n  _onPrivatized () {\n    this.emit('private', this.conn)\n  }\n\n  /**\n   * Wraps this.conn with the Switch.protector for private connections\n   *\n   * @private\n   * @fires ConnectionFSM#error\n   * @returns {void}\n   */\n  _onPrivatizing () {\n    if (!this.switch.protector) {\n      return this._state('done')\n    }\n\n    this.conn = this.switch.protector.protect(this.conn, (err) => {\n      if (err) {\n        return this.close(err)\n      }\n\n      this.log('successfully privatized conn to %s', this.theirB58Id)\n      this.conn.setPeerInfo(this.theirPeerInfo)\n      this._state('done')\n    })\n  }\n}\n\nmodule.exports = withIs(BaseConnection, {\n  className: 'BaseConnection',\n  symbolName: 'libp2p-switch/BaseConnection'\n})\n","'use strict'\n\nconst ConnectionFSM = require('../connection')\nconst { DIAL_ABORTED, ERR_BLACKLISTED } = require('../errors')\nconst nextTick = require('async/nextTick')\nconst once = require('once')\nconst debug = require('debug')\nconst log = debug('libp2p:switch:dial')\nlog.error = debug('libp2p:switch:dial:error')\n\n/**\n * Components required to execute a dial\n * @typedef {Object} DialRequest\n * @property {PeerInfo} peerInfo - The peer to dial to\n * @property {string} [protocol] - The protocol to create a stream for\n * @property {object} options\n * @property {boolean} options.useFSM - If `callback` should return a ConnectionFSM\n * @property {number} options.priority - The priority of the dial\n * @property {function(Error, Connection|ConnectionFSM)} callback\n */\n\n/**\n * @typedef {Object} NewConnection\n * @property {ConnectionFSM} connectionFSM\n * @property {boolean} didCreate\n */\n\n/**\n * Attempts to create a new connection or stream (when muxed),\n * via negotiation of the given `protocol`. If no `protocol` is\n * provided, no action will be taken and `callback` will be called\n * immediately with no error or values.\n *\n * @param {object} options\n * @param {string} options.protocol\n * @param {ConnectionFSM} options.connection\n * @param {function(Error, Connection)} options.callback\n * @returns {void}\n */\nfunction createConnectionWithProtocol ({ protocol, connection, callback }) {\n  if (!protocol) {\n    return callback()\n  }\n  connection.shake(protocol, (err, conn) => {\n    if (!conn) {\n      return callback(err)\n    }\n\n    conn.setPeerInfo(connection.theirPeerInfo)\n    callback(null, conn)\n  })\n}\n\n/**\n * A convenience array wrapper for controlling\n * a per peer queue\n *\n * @returns {Queue}\n */\nclass Queue {\n  /**\n   * @constructor\n   * @param {string} peerId\n   * @param {Switch} _switch\n   * @param {function(string)} onStopped Called when the queue stops\n   */\n  constructor (peerId, _switch, onStopped) {\n    this.id = peerId\n    this.switch = _switch\n    this._queue = []\n    this.blackListed = null\n    this.blackListCount = 0\n    this.isRunning = false\n    this.onStopped = onStopped\n  }\n  get length () {\n    return this._queue.length\n  }\n\n  /**\n   * Adds the dial request to the queue. The queue is not automatically started\n   * @param {string} protocol\n   * @param {boolean} useFSM If callback should use a ConnectionFSM instead\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  add (protocol, useFSM, callback) {\n    if (!this.isDialAllowed()) {\n      return nextTick(callback, ERR_BLACKLISTED())\n    }\n    this._queue.push({ protocol, useFSM, callback })\n  }\n\n  /**\n   * Determines whether or not dialing is currently allowed\n   * @returns {boolean}\n   */\n  isDialAllowed () {\n    if (this.blackListed) {\n      // If the blacklist ttl has passed, reset it\n      if (Date.now() > this.blackListed) {\n        this.blackListed = null\n        return true\n      }\n      // Dial is not allowed\n      return false\n    }\n    return true\n  }\n\n  /**\n   * Starts the queue. If the queue was started `true` will be returned.\n   * If the queue was already running `false` is returned.\n   * @returns {boolean}\n   */\n  start () {\n    if (!this.isRunning) {\n      log('starting dial queue to %s', this.id)\n      this.isRunning = true\n      this._run()\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Stops the queue\n   */\n  stop () {\n    if (this.isRunning) {\n      log('stopping dial queue to %s', this.id)\n      this.isRunning = false\n      this.onStopped(this.id)\n    }\n  }\n\n  /**\n   * Stops the queue and errors the callback for each dial request\n   */\n  abort () {\n    while (this.length > 0) {\n      let dial = this._queue.shift()\n      dial.callback(DIAL_ABORTED())\n    }\n    this.stop()\n  }\n\n  /**\n   * Marks the queue as blacklisted. The queue will be immediately aborted.\n   * @returns {void}\n   */\n  blacklist () {\n    this.blackListCount++\n\n    if (this.blackListCount >= this.switch.dialer.BLACK_LIST_ATTEMPTS) {\n      this.blackListed = Infinity\n      return\n    }\n\n    let ttl = this.switch.dialer.BLACK_LIST_TTL * Math.pow(this.blackListCount, 3)\n    const minTTL = ttl * 0.9\n    const maxTTL = ttl * 1.1\n\n    // Add a random jitter of 20% to the ttl\n    ttl = Math.floor(Math.random() * (maxTTL - minTTL) + minTTL)\n\n    this.blackListed = Date.now() + ttl\n    this.abort()\n  }\n\n  /**\n   * Attempts to find a muxed connection for the given peer. If one\n   * isn't found, a new one will be created.\n   *\n   * Returns an array containing two items. The ConnectionFSM and wether\n   * or not the ConnectionFSM was just created. The latter can be used\n   * to determine dialing needs.\n   *\n   * @private\n   * @param {PeerInfo} peerInfo\n   * @returns {NewConnection}\n   */\n  _getOrCreateConnection (peerInfo) {\n    let connectionFSM = this.switch.connection.getOne(this.id)\n    let didCreate = false\n\n    if (!connectionFSM) {\n      connectionFSM = new ConnectionFSM({\n        _switch: this.switch,\n        peerInfo,\n        muxer: null,\n        conn: null\n      })\n\n      this.switch.connection.add(connectionFSM)\n\n      // Add control events and start the dialer\n      connectionFSM.once('connected', () => connectionFSM.protect())\n      connectionFSM.once('private', () => connectionFSM.encrypt())\n      connectionFSM.once('encrypted', () => connectionFSM.upgrade())\n\n      didCreate = true\n    }\n\n    return { connectionFSM, didCreate }\n  }\n\n  /**\n   * Executes the next dial in the queue for the given peer\n   * @private\n   * @returns {void}\n   */\n  _run () {\n    // If we have no items in the queue or we're stopped, exit\n    if (this.length < 1 || !this.isRunning) {\n      log('stopping the queue for %s', this.id)\n      return this.stop()\n    }\n\n    const next = once(() => {\n      log('starting next dial to %s', this.id)\n      this._run()\n    })\n\n    const peerInfo = this.switch._peerBook.get(this.id)\n    let queuedDial = this._queue.shift()\n    let { connectionFSM, didCreate } = this._getOrCreateConnection(peerInfo)\n\n    // If the dial expects a ConnectionFSM, we can provide that back now\n    if (queuedDial.useFSM) {\n      nextTick(queuedDial.callback, null, connectionFSM)\n    }\n\n    // If we can handshake protocols, get a new stream and call run again\n    if (['MUXED', 'CONNECTED'].includes(connectionFSM.getState())) {\n      queuedDial.connection = connectionFSM\n      createConnectionWithProtocol(queuedDial)\n      next()\n      return\n    }\n\n    // If we error, error the queued dial\n    // In the future, it may be desired to error the other queued dials,\n    // depending on the error.\n    connectionFSM.once('error', (err) => {\n      queuedDial.callback(err)\n      // Dont blacklist peers we have identified and that we are connected to\n      if (peerInfo.protocols.size > 0 && peerInfo.isConnected()) {\n        return\n      }\n      this.blacklist()\n    })\n\n    connectionFSM.once('close', () => {\n      next()\n    })\n\n    // If we're not muxed yet, add listeners\n    connectionFSM.once('muxed', () => {\n      this.blackListCount = 0 // reset blacklisting on good connections\n      queuedDial.connection = connectionFSM\n      createConnectionWithProtocol(queuedDial)\n      next()\n    })\n\n    connectionFSM.once('unmuxed', () => {\n      this.blackListCount = 0\n      queuedDial.connection = connectionFSM\n      createConnectionWithProtocol(queuedDial)\n      next()\n    })\n\n    // If we have a new connection, start dialing\n    if (didCreate) {\n      connectionFSM.dial()\n    }\n  }\n}\n\nmodule.exports = Queue\n","'use strict'\n\nexports = module.exports\n\nexports.PROTOCOL_ID = '/multistream/1.0.0'\n\nexports.errors = {\n  MULTICODEC_NOT_SUPPORTED: 'ERR_MULTICODEC_NOT_SUPPORTED'\n}\n","'use strict'\n\n/**\n * Match protocols exactly.\n *\n * @param {string} myProtocol\n * @param {string} senderProtocol\n * @param {function(Error, boolean)} callback\n * @returns {undefined}\n * @type {matchHandler}\n */\nfunction matchExact (myProtocol, senderProtocol, callback) {\n  const result = myProtocol === senderProtocol\n  callback(null, result)\n}\n\nmodule.exports = matchExact\n","'use strict'\n\nconst semver = require('semver')\n\n/**\n * Match protocols using semver `~` matching.\n *\n * @param {string} myProtocol\n * @param {string} senderProtocol\n * @param {function(Error, boolean)} callback\n * @returns {undefined}\n * @type {matchHandler}\n */\nfunction matchSemver (myProtocol, senderProtocol, callback) {\n  const mps = myProtocol.split('/')\n  const sps = senderProtocol.split('/')\n  const myName = mps[1]\n  const myVersion = mps[2]\n\n  const senderName = sps[1]\n  const senderVersion = sps[2]\n\n  if (myName !== senderName) {\n    return callback(null, false)\n  }\n  // does my protocol satisfy the sender?\n  const valid = semver.satisfies(myVersion, '~' + senderVersion)\n\n  callback(null, valid)\n}\n\nmodule.exports = matchSemver\n","'use strict'\n\nconst varint = require('varint')\nconst pull = require('pull-stream/pull')\nconst map = require('pull-stream/throughs/map')\nconst collect = require('pull-stream/sinks/collect')\nconst take = require('pull-stream/throughs/take')\nconst pullLP = require('pull-length-prefixed')\nconst Connection = require('interface-connection').Connection\nconst util = require('../util')\nconst select = require('../select')\nconst once = require('once')\n\nconst PROTOCOL_ID = require('./../constants').PROTOCOL_ID\n\n/**\n *\n */\nclass Dialer {\n  /**\n   * Create a new Dialer.\n   */\n  constructor () {\n    this.conn = null\n    this.log = util.log.dialer()\n  }\n\n  /**\n   * Perform the multistream handshake.\n   *\n   * @param {Connection} rawConn - The connection on which\n   * to perform the handshake.\n   * @param {function(Error)} callback - Called when the handshake completed.\n   * @returns {undefined}\n   */\n  handle (rawConn, callback) {\n    this.log('dialer handle conn')\n    callback = once(callback)\n    const s = select(PROTOCOL_ID, (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n      this.log('handshake success')\n\n      this.conn = new Connection(conn, rawConn)\n\n      callback()\n    }, this.log)\n\n    // Handle unexpected errors from pull, like 'already piped'\n    try {\n      pull(\n        rawConn,\n        s,\n        rawConn\n      )\n    } catch (err) {\n      this.log.error(err)\n      callback(err)\n    }\n  }\n\n  /**\n   * Select a protocol\n   *\n   * @param {string} protocol - A string of the protocol that we want to handshake.\n   * @param {function(Error, Connection)} callback - `err` is\n   * an error object that gets passed if something wrong happ\n   * end (e.g: if the protocol selected is not supported by\n   * the other end) and conn is the connection handshaked\n   * with the other end.\n   *\n   * @returns {undefined}\n   */\n  select (protocol, callback) {\n    this.log('dialer select ' + protocol)\n    callback = once(callback)\n    if (!this.conn) {\n      return callback(new Error('multistream handshake has not finalized yet'))\n    }\n\n    const s = select(protocol, (err, conn) => {\n      if (err) {\n        this.conn = new Connection(conn, this.conn)\n        return callback(err)\n      }\n      callback(null, new Connection(conn, this.conn))\n    }, this.log)\n\n    pull(\n      this.conn,\n      s,\n      this.conn\n    )\n  }\n\n  /**\n   * List all available protocols.\n   *\n   * @param {function(Error, Array<string>)} callback - If\n   * something wrong happend `Error` exists, otherwise\n   * `protocols` is a list of the supported\n   * protocols on the other end.\n   *\n   * @returns {undefined}\n   */\n  ls (callback) {\n    callback = once(callback)\n\n    const lsStream = select('ls', (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n\n      pull(\n        conn,\n        pullLP.decode(),\n        collectLs(conn),\n        map(stringify),\n        collect((err, list) => {\n          if (err) {\n            return callback(err)\n          }\n          callback(null, list.slice(1))\n        })\n      )\n    }, this.log)\n\n    pull(\n      this.conn,\n      lsStream,\n      this.conn\n    )\n  }\n}\n\nfunction stringify (buf) {\n  return buf.toString().slice(0, -1)\n}\n\nfunction collectLs (conn) {\n  let first = true\n  let counter = 0\n\n  return take((msg) => {\n    if (first) {\n      varint.decode(msg)\n      counter = varint.decode(msg, varint.decode.bytes)\n      return true\n    }\n\n    return counter-- > 0\n  })\n}\n\nmodule.exports = Dialer\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst assert = require('assert')\nconst select = require('../select')\nconst selectHandler = require('./select-handler')\nconst lsHandler = require('./ls-handler')\nconst matchExact = require('./match-exact')\n\nconst util = require('./../util')\nconst Connection = require('interface-connection').Connection\n\nconst PROTOCOL_ID = require('./../constants').PROTOCOL_ID\n\n/**\n * Listener\n */\nclass Listener {\n  /**\n   * Create a new Listener.\n   */\n  constructor () {\n    this.handlers = {\n      ls: {\n        handlerFunc: (protocol, conn) => lsHandler(this, conn),\n        matchFunc: matchExact\n\n      }\n    }\n    this.log = util.log.listener()\n  }\n\n  /**\n   * Perform the multistream handshake.\n   *\n   * @param {Connection} rawConn - The connection on which\n   * to perform the handshake.\n   * @param {function(Error)} callback - Called when the handshake completed.\n   * @returns {undefined}\n   */\n  handle (rawConn, callback) {\n    this.log('listener handle conn')\n\n    const selectStream = select(PROTOCOL_ID, (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const shConn = new Connection(conn, rawConn)\n\n      const sh = selectHandler(shConn, this.handlers, this.log)\n\n      pull(\n        shConn,\n        sh,\n        shConn\n      )\n\n      callback()\n    }, this.log)\n\n    pull(\n      rawConn,\n      selectStream,\n      rawConn\n    )\n  }\n\n  /**\n   * Handle a given `protocol`.\n   *\n   * @param {string} protocol - A string identifying the protocol.\n   * @param {function(string, Connection)} handlerFunc - Will be called if there is a handshake performed on `protocol`.\n   * @param {matchHandler} [matchFunc=matchExact]\n   * @returns {undefined}\n   */\n  addHandler (protocol, handlerFunc, matchFunc) {\n    this.log('adding handler: ' + protocol)\n    assert(typeof handlerFunc === 'function', 'handler must be a function')\n\n    if (this.handlers[protocol]) {\n      this.log('overwriting handler for ' + protocol)\n    }\n\n    if (!matchFunc) {\n      matchFunc = matchExact\n    }\n\n    this.handlers[protocol] = {\n      handlerFunc: handlerFunc,\n      matchFunc: matchFunc\n    }\n  }\n\n  /**\n   * Receives a protocol and a callback and should\n   * call `callback(err, result)` where `err` is if\n   * there was a error on the matching function, and\n   * `result` is a boolean that represents if a\n   * match happened.\n   *\n   * @callback matchHandler\n   * @param {string} myProtocol\n   * @param {string} senderProtocol\n   * @param {function(Error, boolean)} callback\n   * @returns {undefined}\n   */\n}\n\nmodule.exports = Listener\n","'use strict'\n\nconst protons = require('protons')\nconst schema = `\nmessage Identify {\n  // protocolVersion determines compatibility between peers\n  optional string protocolVersion = 5; // e.g. ipfs/1.0.0\n\n  // agentVersion is like a UserAgent string in browsers, or client version in bittorrent\n  // includes the client name and client.\n  optional string agentVersion = 6; // e.g. go-ipfs/0.1.0\n\n  // publicKey is this node's public key (which also gives its node.ID)\n  // - may not need to be sent, as secure channel implies it has been sent.\n  // - then again, if we change / disable secure channel, may still want it.\n  optional bytes publicKey = 1;\n\n  // listenAddrs are the multiaddrs the sender node listens for open connections on\n  repeated bytes listenAddrs = 2;\n\n  // oservedAddr is the multiaddr of the remote endpoint that the sender node perceives\n  // this is useful information to convey to the other side, as it helps the remote endpoint\n  // determine whether its connection to the local peer goes through NAT.\n  optional bytes observedAddr = 4;\n\n  repeated string protocols = 3;\n}\n`\n\nmodule.exports = protons(schema).Identify\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst lp = require('pull-length-prefixed')\n\nconst msg = require('./message')\n\nmodule.exports = (conn, pInfoSelf) => {\n  // send what I see from the other + my Info\n  conn.getObservedAddrs((err, observedAddrs) => {\n    if (err) { return }\n    observedAddrs = observedAddrs[0]\n\n    let publicKey = Buffer.alloc(0)\n    if (pInfoSelf.id.pubKey) {\n      publicKey = pInfoSelf.id.pubKey.bytes\n    }\n\n    const msgSend = msg.encode({\n      protocolVersion: 'ipfs/0.1.0',\n      agentVersion: 'na',\n      publicKey: publicKey,\n      listenAddrs: pInfoSelf.multiaddrs.toArray().map((ma) => ma.buffer),\n      observedAddr: observedAddrs ? observedAddrs.buffer : Buffer.from(''),\n      protocols: Array.from(pInfoSelf.protocols)\n    })\n\n    pull(\n      values([msgSend]),\n      lp.encode(),\n      conn\n    )\n  })\n}\n","'use strict'\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst multiaddr = require('multiaddr')\nconst pull = require('pull-stream/pull')\nconst take = require('pull-stream/throughs/take')\nconst collect = require('pull-stream/sinks/collect')\nconst lp = require('pull-length-prefixed')\n\nconst msg = require('./message')\n\nmodule.exports = (conn, expectedPeerInfo, callback) => {\n  if (typeof expectedPeerInfo === 'function') {\n    callback = expectedPeerInfo\n    expectedPeerInfo = null\n    console.warn('WARNING: no expected peer info was given, identify will not be able to verify peer integrity')\n  }\n\n  pull(\n    conn,\n    lp.decode(),\n    take(1),\n    collect((err, data) => {\n      if (err) {\n        return callback(err)\n      }\n\n      // connection got closed graciously\n      if (data.length === 0) {\n        return callback(new Error('conn was closed, did not receive data'))\n      }\n\n      const input = msg.decode(data[0])\n\n      PeerId.createFromPubKey(input.publicKey, (err, id) => {\n        if (err) {\n          return callback(err)\n        }\n\n        const peerInfo = new PeerInfo(id)\n        if (expectedPeerInfo && expectedPeerInfo.id.toB58String() !== id.toB58String()) {\n          return callback(new Error('invalid peer'))\n        }\n\n        try {\n          input.listenAddrs\n            .map(multiaddr)\n            .forEach((ma) => peerInfo.multiaddrs.add(ma))\n        } catch (err) {\n          return callback(err)\n        }\n\n        let observedAddr\n\n        try {\n          observedAddr = getObservedAddrs(input)\n        } catch (err) {\n          return callback(err)\n        }\n\n        // Copy the protocols\n        peerInfo.protocols = new Set(input.protocols)\n\n        callback(null, peerInfo, observedAddr)\n      })\n    })\n  )\n}\n\nfunction getObservedAddrs (input) {\n  if (!hasObservedAddr(input)) {\n    return []\n  }\n\n  let addrs = input.observedAddr\n\n  if (!Array.isArray(addrs)) {\n    addrs = [addrs]\n  }\n\n  return addrs.map((oa) => multiaddr(oa))\n}\n\nfunction hasObservedAddr (input) {\n  return input.observedAddr && input.observedAddr.length > 0\n}\n","'use strict'\n\nconst Connection = require('interface-connection').Connection\nconst pull = require('pull-stream/pull')\nconst empty = require('pull-stream/sources/empty')\nconst timeout = require('async/timeout')\nconst queue = require('async/queue')\nconst debug = require('debug')\nconst once = require('once')\n\nconst log = debug('libp2p:switch:dialer:queue')\nlog.error = debug('libp2p:switch:dialer:queue:error')\n\n/**\n * Queue up the amount of dials to a given peer.\n */\nclass DialQueue {\n  /**\n   * Create a new dial queue.\n   *\n   * @param {number} limit\n   * @param {number} dialTimeout\n   */\n  constructor (limit, dialTimeout) {\n    this.dialTimeout = dialTimeout\n\n    this.queue = queue((task, cb) => {\n      this._doWork(task.transport, task.addr, task.token, cb)\n    }, limit)\n  }\n\n  /**\n   * The actual work done by the queue.\n   *\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {CancelToken} token\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   * @private\n   */\n  _doWork (transport, addr, token, callback) {\n    callback = once(callback)\n    log('work:start')\n    this._dialWithTimeout(transport, addr, (err, conn) => {\n      if (err) {\n        log.error(`${transport.constructor.name}:work`, err)\n        return callback(err)\n      }\n\n      if (token.cancel) {\n        log('work:cancel')\n        // clean up already done dials\n        pull(empty(), conn)\n        // If we can close the connection, do it\n        if (typeof conn.close === 'function') {\n          return conn.close((_) => callback(null))\n        }\n        return callback(null)\n      }\n\n      // one is enough\n      token.cancel = true\n\n      log('work:success')\n\n      const proxyConn = new Connection()\n      proxyConn.setInnerConn(conn)\n      callback(null, { multiaddr: addr, conn: conn })\n    })\n  }\n\n  /**\n   * Dial the given transport, timing out with the set timeout.\n   *\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   *\n   * @private\n   */\n  _dialWithTimeout (transport, addr, callback) {\n    timeout((cb) => {\n      const conn = transport.dial(addr, (err) => {\n        if (err) {\n          return cb(err)\n        }\n\n        cb(null, conn)\n      })\n    }, this.dialTimeout)(callback)\n  }\n\n  /**\n   * Add new work to the queue.\n   *\n   * @param {SwarmTransport} transport\n   * @param {Multiaddr} addr\n   * @param {CancelToken} token\n   * @param {function(Error, Connection)} callback\n   * @returns {void}\n   */\n  push (transport, addr, token, callback) {\n    this.queue.push({ transport, addr, token }, callback)\n  }\n}\n\nmodule.exports = DialQueue\n","'use strict'\n\nconst multiaddr = require('multiaddr')\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst proto = require('../protocol')\n\nmodule.exports = function (swarm) {\n  /**\n   * Get b58 string from multiaddr or peerinfo\n   *\n   * @param {Multiaddr|PeerInfo} peer\n   * @return {*}\n   */\n  function getB58String (peer) {\n    let b58Id = null\n    if (multiaddr.isMultiaddr(peer)) {\n      const relayMa = multiaddr(peer)\n      b58Id = relayMa.getPeerId()\n    } else if (PeerInfo.isPeerInfo(peer)) {\n      b58Id = peer.id.toB58String()\n    }\n\n    return b58Id\n  }\n\n  /**\n   * Helper to make a peer info from a multiaddrs\n   *\n   * @param {Multiaddr|PeerInfo|PeerId} ma\n   * @param {Swarm} swarm\n   * @return {PeerInfo}\n   * @private\n   */\n  // TODO: this is ripped off of libp2p, should probably be a generally available util function\n  function peerInfoFromMa (peer) {\n    let p\n    // PeerInfo\n    if (PeerInfo.isPeerInfo(peer)) {\n      p = peer\n      // Multiaddr instance (not string)\n    } else if (multiaddr.isMultiaddr(peer)) {\n      const peerIdB58Str = peer.getPeerId()\n      try {\n        p = swarm._peerBook.get(peerIdB58Str)\n      } catch (err) {\n        p = new PeerInfo(PeerId.createFromB58String(peerIdB58Str))\n      }\n      p.multiaddrs.add(peer)\n      // PeerId\n    } else if (PeerId.isPeerId(peer)) {\n      const peerIdB58Str = peer.toB58String()\n      p = swarm._peerBook.has(peerIdB58Str) ? swarm._peerBook.get(peerIdB58Str) : peer\n    }\n\n    return p\n  }\n\n  /**\n   * Checks if peer has an existing connection\n   *\n   * @param {String} peerId\n   * @param {Swarm} swarm\n   * @return {Boolean}\n   */\n  function isPeerConnected (peerId) {\n    return swarm.muxedConns[peerId] || swarm.conns[peerId]\n  }\n\n  /**\n   * Write a response\n   *\n   * @param {StreamHandler} streamHandler\n   * @param {CircuitRelay.Status} status\n   * @param {Function} cb\n   * @returns {*}\n   */\n  function writeResponse (streamHandler, status, cb) {\n    cb = cb || (() => {})\n    streamHandler.write(proto.CircuitRelay.encode({\n      type: proto.CircuitRelay.Type.STATUS,\n      code: status\n    }))\n    return cb()\n  }\n\n  /**\n   * Validate incomming HOP/STOP message\n   *\n   * @param {CircuitRelay} msg\n   * @param {StreamHandler} streamHandler\n   * @param {CircuitRelay.Type} type\n   * @returns {*}\n   * @param {Function} cb\n   */\n  function validateAddrs (msg, streamHandler, type, cb) {\n    try {\n      msg.dstPeer.addrs.forEach((addr) => {\n        return multiaddr(addr)\n      })\n    } catch (err) {\n      writeResponse(streamHandler, type === proto.CircuitRelay.Type.HOP\n        ? proto.CircuitRelay.Status.HOP_DST_MULTIADDR_INVALID\n        : proto.CircuitRelay.Status.STOP_DST_MULTIADDR_INVALID)\n      return cb(err)\n    }\n\n    try {\n      msg.srcPeer.addrs.forEach((addr) => {\n        return multiaddr(addr)\n      })\n    } catch (err) {\n      writeResponse(streamHandler, type === proto.CircuitRelay.Type.HOP\n        ? proto.CircuitRelay.Status.HOP_SRC_MULTIADDR_INVALID\n        : proto.CircuitRelay.Status.STOP_SRC_MULTIADDR_INVALID)\n      return cb(err)\n    }\n\n    return cb(null)\n  }\n\n  function peerIdFromId (id) {\n    if (typeof id === 'string') {\n      return PeerId.createFromB58String(id)\n    }\n\n    return PeerId.createFromBytes(id)\n  }\n\n  return {\n    getB58String,\n    peerInfoFromMa,\n    isPeerConnected,\n    validateAddrs,\n    writeResponse,\n    peerIdFromId\n  }\n}\n","'use strict'\n\nconst once = require('once')\nconst PeerId = require('peer-id')\nconst waterfall = require('async/waterfall')\nconst setImmediate = require('async/setImmediate')\nconst multiaddr = require('multiaddr')\n\nconst Connection = require('interface-connection').Connection\n\nconst utilsFactory = require('./utils')\nconst StreamHandler = require('./stream-handler')\n\nconst debug = require('debug')\nconst log = debug('libp2p:circuit:dialer')\nlog.err = debug('libp2p:circuit:error:dialer')\n\nconst multicodec = require('../multicodec')\nconst proto = require('../protocol')\n\nclass Dialer {\n  /**\n   * Creates an instance of Dialer.\n   * @param {Swarm} swarm - the swarm\n   * @param {any} options - config options\n   *\n   * @memberOf Dialer\n   */\n  constructor (swarm, options) {\n    this.swarm = swarm\n    this.relayPeers = new Map()\n    this.relayConns = new Map()\n    this.options = options\n    this.utils = utilsFactory(swarm)\n  }\n\n  /**\n   * Helper that returns a relay connection\n   *\n   * @param {*} relay\n   * @param {*} callback\n   * @returns {Function} - callback\n   */\n  _dialRelayHelper (relay, callback) {\n    if (this.relayConns.has(relay.id.toB58String())) {\n      return callback(null, this.relayConns.get(relay.id.toB58String()))\n    }\n\n    return this._dialRelay(relay, callback)\n  }\n\n  /**\n   * Dial a peer over a relay\n   *\n   * @param {multiaddr} ma - the multiaddr of the peer to dial\n   * @param {Function} cb - a callback called once dialed\n   * @returns {Connection} - the connection\n   *\n   */\n  dial (ma, cb) {\n    cb = cb || (() => { })\n    const strMa = ma.toString()\n    if (!strMa.includes('/p2p-circuit')) {\n      log.err('invalid circuit address')\n      return cb(new Error('invalid circuit address'))\n    }\n\n    const addr = strMa.split('p2p-circuit') // extract relay address if any\n    const relay = addr[0] === '/' ? null : multiaddr(addr[0])\n    const peer = multiaddr(addr[1] || addr[0])\n\n    const dstConn = new Connection()\n    setImmediate(\n      this._dialPeer.bind(this),\n      peer,\n      relay,\n      (err, conn) => {\n        if (err) {\n          log.err(err)\n          return cb(err)\n        }\n\n        dstConn.setInnerConn(conn)\n        cb(null, dstConn)\n      })\n\n    return dstConn\n  }\n\n  /**\n   * Does the peer support the HOP protocol\n   *\n   * @param {PeerInfo} peer\n   * @param {Function} callback\n   * @returns {void}\n   */\n  canHop (peer, callback) {\n    callback = once(callback || (() => { }))\n\n    this._dialRelayHelper(peer, (err, conn) => {\n      if (err) {\n        return callback(err)\n      }\n\n      const sh = new StreamHandler(conn)\n      waterfall([\n        (cb) => sh.write(proto.CircuitRelay.encode({\n          type: proto.CircuitRelay.Type.CAN_HOP\n        }), cb),\n        (cb) => sh.read(cb)\n      ], (err, msg) => {\n        if (err) {\n          return callback(err)\n        }\n        const response = proto.CircuitRelay.decode(msg)\n\n        if (response.code !== proto.CircuitRelay.Status.SUCCESS) {\n          const err = new Error(`HOP not supported, skipping - ${this.utils.getB58String(peer)}`)\n          log(err)\n          return callback(err)\n        }\n\n        log('HOP supported adding as relay - %s', this.utils.getB58String(peer))\n        this.relayPeers.set(this.utils.getB58String(peer), peer)\n        sh.close()\n        callback()\n      })\n    })\n  }\n\n  /**\n   * Dial the destination peer over a relay\n   *\n   * @param {multiaddr} dstMa\n   * @param {Connection|PeerInfo} relay\n   * @param {Function} cb\n   * @return {Function|void}\n   * @private\n   */\n  _dialPeer (dstMa, relay, cb) {\n    if (typeof relay === 'function') {\n      cb = relay\n      relay = null\n    }\n\n    if (!cb) {\n      cb = () => {}\n    }\n\n    dstMa = multiaddr(dstMa)\n    // if no relay provided, dial on all available relays until one succeeds\n    if (!relay) {\n      const relays = Array.from(this.relayPeers.values())\n      let next = (nextRelay) => {\n        if (!nextRelay) {\n          let err = `no relay peers were found or all relays failed to dial`\n          log.err(err)\n          return cb(err)\n        }\n\n        return this._negotiateRelay(\n          nextRelay,\n          dstMa,\n          (err, conn) => {\n            if (err) {\n              log.err(err)\n              return next(relays.shift())\n            }\n            cb(null, conn)\n          })\n      }\n      next(relays.shift())\n    } else {\n      return this._negotiateRelay(\n        relay,\n        dstMa,\n        (err, conn) => {\n          if (err) {\n            log.err('An error has occurred negotiating the relay connection', err)\n            return cb(err)\n          }\n\n          return cb(null, conn)\n        })\n    }\n  }\n\n  /**\n   * Negotiate the relay connection\n   *\n   * @param {Multiaddr|PeerInfo|Connection} relay - the Connection or PeerInfo of the relay\n   * @param {multiaddr} dstMa - the multiaddr of the peer to relay the connection for\n   * @param {Function} callback - a callback which gets the negotiated relay connection\n   * @returns {void}\n   * @private\n   *\n   * @memberOf Dialer\n   */\n  _negotiateRelay (relay, dstMa, callback) {\n    dstMa = multiaddr(dstMa)\n    relay = this.utils.peerInfoFromMa(relay)\n    const srcMas = this.swarm._peerInfo.multiaddrs.toArray()\n    this._dialRelayHelper(relay, (err, conn) => {\n      if (err) {\n        log.err(err)\n        return callback(err)\n      }\n      let sh = new StreamHandler(conn)\n      waterfall([\n        (cb) => {\n          log('negotiating relay for peer %s', dstMa.getPeerId())\n          let dstPeerId\n          try {\n            dstPeerId = PeerId.createFromB58String(dstMa.getPeerId()).id\n          } catch (err) {\n            return cb(err)\n          }\n          sh.write(\n            proto.CircuitRelay.encode({\n              type: proto.CircuitRelay.Type.HOP,\n              srcPeer: {\n                id: this.swarm._peerInfo.id.id,\n                addrs: srcMas.map((addr) => addr.buffer)\n              },\n              dstPeer: {\n                id: dstPeerId,\n                addrs: [dstMa.buffer]\n              }\n            }), cb)\n        },\n        (cb) => sh.read(cb)\n      ], (err, msg) => {\n        if (err) {\n          return callback(err)\n        }\n        const message = proto.CircuitRelay.decode(msg)\n        if (message.type !== proto.CircuitRelay.Type.STATUS) {\n          return callback(new Error(`Got invalid message type - ` +\n            `expected ${proto.CircuitRelay.Type.STATUS} got ${message.type}`))\n        }\n\n        if (message.code !== proto.CircuitRelay.Status.SUCCESS) {\n          return callback(new Error(`Got ${message.code} error code trying to dial over relay`))\n        }\n\n        callback(null, new Connection(sh.rest()))\n      })\n    })\n  }\n\n  /**\n   * Dial a relay peer by its PeerInfo\n   *\n   * @param {PeerInfo} peer - the PeerInfo of the relay peer\n   * @param {Function} cb - a callback with the connection to the relay peer\n   * @returns {void}\n   * @private\n   */\n  _dialRelay (peer, cb) {\n    cb = once(cb || (() => { }))\n\n    this.swarm.dial(\n      peer,\n      multicodec.relay,\n      once((err, conn) => {\n        if (err) {\n          log.err(err)\n          return cb(err)\n        }\n        cb(null, conn)\n      }))\n  }\n}\n\nmodule.exports = Dialer\n","'use strict'\n\nconst setImmediate = require('async/setImmediate')\n\nconst multicodec = require('./multicodec')\nconst EE = require('events').EventEmitter\nconst multiaddr = require('multiaddr')\nconst mafmt = require('mafmt')\nconst Stop = require('./circuit/stop')\nconst Hop = require('./circuit/hop')\nconst proto = require('./protocol')\nconst utilsFactory = require('./circuit/utils')\n\nconst StreamHandler = require('./circuit/stream-handler')\n\nconst debug = require('debug')\n\nconst log = debug('libp2p:circuit:listener')\nlog.err = debug('libp2p:circuit:error:listener')\n\nmodule.exports = (swarm, options, connHandler) => {\n  const listener = new EE()\n  const utils = utilsFactory(swarm)\n\n  listener.stopHandler = new Stop(swarm)\n  listener.stopHandler.on('connection', (conn) => listener.emit('connection', conn))\n  listener.hopHandler = new Hop(swarm, options.hop)\n\n  /**\n   * Add swarm handler and listen for incoming connections\n   *\n   * @param {Multiaddr} ma\n   * @param {Function} callback\n   * @return {void}\n   */\n  listener.listen = (ma, callback) => {\n    callback = callback || (() => {})\n\n    swarm.handle(multicodec.relay, (_, conn) => {\n      const sh = new StreamHandler(conn)\n\n      sh.read((err, msg) => {\n        if (err) {\n          log.err(err)\n          return\n        }\n\n        let request = null\n        try {\n          request = proto.CircuitRelay.decode(msg)\n        } catch (err) {\n          return utils.writeResponse(\n            sh,\n            proto.CircuitRelay.Status.MALFORMED_MESSAGE)\n        }\n\n        switch (request.type) {\n          case proto.CircuitRelay.Type.CAN_HOP:\n          case proto.CircuitRelay.Type.HOP: {\n            return listener.hopHandler.handle(request, sh)\n          }\n\n          case proto.CircuitRelay.Type.STOP: {\n            return listener.stopHandler.handle(request, sh, connHandler)\n          }\n\n          default: {\n            utils.writeResponse(\n              sh,\n              proto.CircuitRelay.Status.INVALID_MSG_TYPE)\n            return sh.close()\n          }\n        }\n      })\n    })\n\n    setImmediate(() => listener.emit('listen'))\n    callback()\n  }\n\n  /**\n   * Remove swarm listener\n   *\n   * @param {Function} cb\n   * @return {void}\n   */\n  listener.close = (cb) => {\n    swarm.unhandle(multicodec.relay)\n    setImmediate(() => listener.emit('close'))\n    cb()\n  }\n\n  /**\n   * Get fixed up multiaddrs\n   *\n   * NOTE: This method will grab the peers multiaddrs and expand them such that:\n   *\n   * a) If it's an existing /p2p-circuit address for a specific relay i.e.\n   *    `/ip4/0.0.0.0/tcp/0/ipfs/QmRelay/p2p-circuit` this method will expand the\n   *    address to `/ip4/0.0.0.0/tcp/0/ipfs/QmRelay/p2p-circuit/ipfs/QmPeer` where\n   *    `QmPeer` is this peers id\n   * b) If it's not a /p2p-circuit address, it will encapsulate the address as a /p2p-circuit\n   *    addr, such when dialing over a relay with this address, it will create the circuit using\n   *    the encapsulated transport address. This is useful when for example, a peer should only\n   *    be dialed over TCP rather than any other transport\n   *\n   * @param {Function} callback\n   * @return {void}\n   */\n  listener.getAddrs = (callback) => {\n    let addrs = swarm._peerInfo.multiaddrs.toArray()\n\n    // get all the explicit relay addrs excluding self\n    let p2pAddrs = addrs.filter((addr) => {\n      return mafmt.Circuit.matches(addr) &&\n        !addr.toString().includes(swarm._peerInfo.id.toB58String())\n    })\n\n    // use the explicit relays instead of any relay\n    if (p2pAddrs.length) {\n      addrs = p2pAddrs\n    }\n\n    let listenAddrs = []\n    addrs.forEach((addr) => {\n      const peerMa = `/p2p-circuit/ipfs/${swarm._peerInfo.id.toB58String()}`\n      if (addr.toString() === peerMa) {\n        listenAddrs.push(multiaddr(peerMa))\n        return\n      }\n\n      if (!mafmt.Circuit.matches(addr)) {\n        if (addr.getPeerId()) {\n          // by default we're reachable over any relay\n          listenAddrs.push(multiaddr(`/p2p-circuit`).encapsulate(addr))\n        } else {\n          const ma = `${addr}/ipfs/${swarm._peerInfo.id.toB58String()}`\n          listenAddrs.push(multiaddr(`/p2p-circuit`).encapsulate(ma))\n        }\n      } else {\n        listenAddrs.push(addr.encapsulate(`/ipfs/${swarm._peerInfo.id.toB58String()}`))\n      }\n    })\n\n    callback(null, listenAddrs)\n  }\n\n  return listener\n}\n","'use strict'\n\nconst SparseArray = require('sparse-array')\nconst wrapHash = require('./consumable-hash')\n\nconst defaultOptions = {\n  bits: 8\n}\n\nclass Bucket {\n  constructor (options, parent, posAtParent) {\n    this._options = Object.assign({}, defaultOptions, options)\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    if (!this._options.hashFn) {\n      throw new Error('please define an options.hashFn')\n    }\n\n    // make sure we only wrap options.hashFn once in the whole tree\n    if (!this._options.hash) {\n      this._options.hash = wrapHash(this._options.hashFn)\n    }\n    this._children = new SparseArray()\n  }\n\n  static isBucket (o) {\n    return o instanceof Bucket\n  }\n\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  leafCount () {\n    return this._children.compactArray().reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        for (const c2 of child.eachLeafSeries()) {\n          yield c2\n        }\n      } else {\n        yield child\n      }\n    }\n  }\n\n  serialize (map, reduce) {\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, []))\n  }\n\n  async asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  async _findPlace (key) {\n    const hashValue = this._options.hash(key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue\n    }\n  }\n\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key !== key) {\n      // conflict\n\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(child.hash)\n      newPlace.bucket._putAt(newPlace, child.key, child.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  _delAt (pos) {\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (!(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\nfunction exists (o) {\n  return Boolean(o)\n}\n\nfunction mapNode (node, index) {\n  return node.key\n}\n\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n\n    return asyncReduce(output)\n  }\n}\n\nmodule.exports = Bucket\n","/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2018 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nfunction isSpecificValue(val) {\n\treturn (\n\t\tval instanceof Buffer\n\t\t|| val instanceof Date\n\t\t|| val instanceof RegExp\n\t) ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n\tif (val instanceof Buffer) {\n\t\tvar x = Buffer.alloc\n\t\t\t? Buffer.alloc(val.length)\n\t\t\t: new Buffer(val.length);\n\t\tval.copy(x);\n\t\treturn x;\n\t} else if (val instanceof Date) {\n\t\treturn new Date(val.getTime());\n\t} else if (val instanceof RegExp) {\n\t\treturn new RegExp(val);\n\t} else {\n\t\tthrow new Error('Unexpected situation');\n\t}\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n\tvar clone = [];\n\tarr.forEach(function (item, index) {\n\t\tif (typeof item === 'object' && item !== null) {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tclone[index] = deepCloneArray(item);\n\t\t\t} else if (isSpecificValue(item)) {\n\t\t\t\tclone[index] = cloneSpecificValue(item);\n\t\t\t} else {\n\t\t\t\tclone[index] = deepExtend({}, item);\n\t\t\t}\n\t\t} else {\n\t\t\tclone[index] = item;\n\t\t}\n\t});\n\treturn clone;\n}\n\nfunction safeGetProperty(object, property) {\n\treturn property === '__proto__' ? undefined : object[property];\n}\n\n/**\n * Extening object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nvar deepExtend = module.exports = function (/*obj_1, [obj_2], [obj_N]*/) {\n\tif (arguments.length < 1 || typeof arguments[0] !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (arguments.length < 2) {\n\t\treturn arguments[0];\n\t}\n\n\tvar target = arguments[0];\n\n\t// convert arguments to array and cut off target object\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\tvar val, src, clone;\n\n\targs.forEach(function (obj) {\n\t\t// skip argument if isn't an object, is null, or is an array\n\t\tif (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n\t\t\treturn;\n\t\t}\n\n\t\tObject.keys(obj).forEach(function (key) {\n\t\t\tsrc = safeGetProperty(target, key); // source value\n\t\t\tval = safeGetProperty(obj, key); // new value\n\n\t\t\t// recursion prevention\n\t\t\tif (val === target) {\n\t\t\t\treturn;\n\n\t\t\t/**\n\t\t\t * if new value isn't object then just overwrite by new value\n\t\t\t * instead of extending.\n\t\t\t */\n\t\t\t} else if (typeof val !== 'object' || val === null) {\n\t\t\t\ttarget[key] = val;\n\t\t\t\treturn;\n\n\t\t\t// just clone arrays (and recursive clone objects inside)\n\t\t\t} else if (Array.isArray(val)) {\n\t\t\t\ttarget[key] = deepCloneArray(val);\n\t\t\t\treturn;\n\n\t\t\t// custom cloning and overwrite for specific objects\n\t\t\t} else if (isSpecificValue(val)) {\n\t\t\t\ttarget[key] = cloneSpecificValue(val);\n\t\t\t\treturn;\n\n\t\t\t// overwrite by new value if source isn't object or array\n\t\t\t} else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n\t\t\t\ttarget[key] = deepExtend({}, val);\n\t\t\t\treturn;\n\n\t\t\t// source value and new value is objects both, extending...\n\t\t\t} else {\n\t\t\t\ttarget[key] = deepExtend(src, val);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t});\n\n\treturn target;\n};\n","'use strict'\n\nconst Bucket = require('./bucket')\n\nmodule.exports = function createHAMT (options) {\n  return new Bucket(options)\n}\n\nmodule.exports.isBucket = Bucket.isBucket\n","'use strict'\n\nasync function * batch (source, size) {\n  let things = []\n\n  for await (const set of source) {\n    things = things.concat(set)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\nvar DuplexStream = require('readable-stream').Duplex\n  , util         = require('util')\n\nfunction BufferList (callback) {\n  if (!(this instanceof BufferList))\n    return new BufferList(callback)\n\n  this._bufs  = []\n  this.length = 0\n\n  if (typeof callback == 'function') {\n    this._callback = callback\n\n    var piper = function piper (err) {\n      if (this._callback) {\n        this._callback(err)\n        this._callback = null\n      }\n    }.bind(this)\n\n    this.on('pipe', function onPipe (src) {\n      src.on('error', piper)\n    })\n    this.on('unpipe', function onUnpipe (src) {\n      src.removeListener('error', piper)\n    })\n  } else {\n    this.append(callback)\n  }\n\n  DuplexStream.call(this)\n}\n\n\nutil.inherits(BufferList, DuplexStream)\n\n\nBufferList.prototype._offset = function _offset (offset) {\n  var tot = 0, i = 0, _t\n  if (offset === 0) return [ 0, 0 ]\n  for (; i < this._bufs.length; i++) {\n    _t = tot + this._bufs[i].length\n    if (offset < _t || i == this._bufs.length - 1) {\n      return [ i, offset - tot ]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  var bufferId = blOffset[0]\n  var offset = blOffset[1]\n  for (var i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n  return offset\n}\n\nBufferList.prototype.append = function append (buf) {\n  var i = 0\n\n  if (Buffer.isBuffer(buf)) {\n    this._appendBuffer(buf)\n  } else if (Array.isArray(buf)) {\n    for (; i < buf.length; i++)\n      this.append(buf[i])\n  } else if (buf instanceof BufferList) {\n    // unwrap argument into individual BufferLists\n    for (; i < buf._bufs.length; i++)\n      this.append(buf._bufs[i])\n  } else if (buf != null) {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf == 'number')\n      buf = buf.toString()\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\n\nBufferList.prototype._write = function _write (buf, encoding, callback) {\n  this._appendBuffer(buf)\n\n  if (typeof callback == 'function')\n    callback()\n}\n\n\nBufferList.prototype._read = function _read (size) {\n  if (!this.length)\n    return this.push(null)\n\n  size = Math.min(size, this.length)\n  this.push(this.slice(0, size))\n  this.consume(size)\n}\n\n\nBufferList.prototype.end = function end (chunk) {\n  DuplexStream.prototype.end.call(this, chunk)\n\n  if (this._callback) {\n    this._callback(null, this.slice())\n    this._callback = null\n  }\n}\n\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n  var offset = this._offset(index)\n  return this._bufs[offset[0]][offset[1]]\n}\n\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start == 'number' && start < 0)\n    start += this.length\n  if (typeof end == 'number' && end < 0)\n    end += this.length\n  return this.copy(null, 0, start, end)\n}\n\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart != 'number' || srcStart < 0)\n    srcStart = 0\n  if (typeof srcEnd != 'number' || srcEnd > this.length)\n    srcEnd = this.length\n  if (srcStart >= this.length)\n    return dst || Buffer.alloc(0)\n  if (srcEnd <= 0)\n    return dst || Buffer.alloc(0)\n\n  var copy   = !!dst\n    , off    = this._offset(srcStart)\n    , len    = srcEnd - srcStart\n    , bytes  = len\n    , bufoff = (copy && dstStart) || 0\n    , start  = off[1]\n    , l\n    , i\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd == this.length) {\n    if (!copy) { // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n\n  for (i = off[0]; i < this._bufs.length; i++) {\n    l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start)\n      start = 0\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0)\n    start += this.length\n  if (end < 0)\n    end += this.length\n\n  if (start === end) {\n    return new BufferList()\n  }\n  var startOffset = this._offset(start)\n    , endOffset = this._offset(end)\n    , buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] == 0)\n    buffers.pop()\n  else\n    buffers[buffers.length-1] = buffers[buffers.length-1].slice(0, endOffset[1])\n\n  if (startOffset[1] != 0)\n    buffers[0] = buffers[0].slice(startOffset[1])\n\n  return new BufferList(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n  return this\n}\n\n\nBufferList.prototype.duplicate = function duplicate () {\n  var i = 0\n    , copy = new BufferList()\n\n  for (; i < this._bufs.length; i++)\n    copy.append(this._bufs[i])\n\n  return copy\n}\n\n\nBufferList.prototype._destroy = function _destroy (err, cb) {\n  this._bufs.length = 0\n  this.length = 0\n  cb(err)\n}\n\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n      search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (search instanceof BufferList) {\n    search = search.slice()\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  var blOffset = this._offset(offset)\n  var blIndex = blOffset[0] // index of which internal buffer we're working on\n  var buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (blIndex; blIndex < this._bufs.length; blIndex++) {\n    var buff = this._bufs[blIndex]\n    while(buffOffset < buff.length) {\n      var availableWindow = buff.length - buffOffset\n      if (availableWindow >= search.length) {\n        var nativeSearchResult = buff.indexOf(search, buffOffset)\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        var revOffset = this._reverseOffset([blIndex, buffOffset])\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n        buffOffset++\n      }\n    }\n    buffOffset = 0\n  }\n  return -1\n}\n\nBufferList.prototype._match = function(offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n  for (var searchOffset = 0; searchOffset < search.length ; searchOffset++) {\n    if(this.get(offset + searchOffset) !== search[searchOffset]){\n      return false\n    }\n  }\n  return true\n}\n\n\n;(function () {\n  var methods = {\n      'readDoubleBE' : 8\n    , 'readDoubleLE' : 8\n    , 'readFloatBE'  : 4\n    , 'readFloatLE'  : 4\n    , 'readInt32BE'  : 4\n    , 'readInt32LE'  : 4\n    , 'readUInt32BE' : 4\n    , 'readUInt32LE' : 4\n    , 'readInt16BE'  : 2\n    , 'readInt16LE'  : 2\n    , 'readUInt16BE' : 2\n    , 'readUInt16LE' : 2\n    , 'readInt8'     : 1\n    , 'readUInt8'    : 1\n    , 'readIntBE'    : null\n    , 'readIntLE'    : null\n    , 'readUIntBE'   : null\n    , 'readUIntLE'   : null\n  }\n\n  for (var m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      }\n      else {\n        BufferList.prototype[m] = function (offset) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n\nmodule.exports = BufferList\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (bits, min, max, windowSize) => {\n    const compiled = await getRabin()\n\n    return new Rabin(bits, min, max, windowSize, compiled)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","\nmodule.exports = {\n  WORKER_REQUEST_READ_LOCK: 'lock:worker:request-read',\n  WORKER_RELEASE_READ_LOCK: 'lock:worker:release-read',\n  MASTER_GRANT_READ_LOCK: 'lock:master:grant-read',\n\n  WORKER_REQUEST_WRITE_LOCK: 'lock:worker:request-write',\n  WORKER_RELEASE_WRITE_LOCK: 'lock:worker:release-write',\n  MASTER_GRANT_WRITE_LOCK: 'lock:master:grant-write'\n}\n","'use strict';\nmodule.exports = require('./lib/index');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/czech.json');\n    wordlists.czech = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/portuguese.json');\n    wordlists.portuguese = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","module.exports = require('./lib/heap');\n","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","'use strict'\nmodule.exports = `\nmessage RPC {\n  repeated SubOpts subscriptions = 1;\n  repeated Message msgs = 2;\n\n  message SubOpts {\n    optional bool subscribe = 1; // subscribe or unsubcribe\n    optional string topicID = 2;\n  }\n\n  message Message {\n    optional bytes from = 1;\n    optional bytes data = 2;\n    optional bytes seqno = 3;\n    repeated string topicIDs = 4;\n    optional bytes signature = 5;\n    optional bytes key = 6;\n  }\n}`\n","'use strict'\nmodule.exports = `\n// topicCID = cid(merkledag_protobuf(topicDescriptor)); (not the topic.name)\nmessage TopicDescriptor {\n  optional string name = 1;\n  optional AuthOpts auth = 2;\n  optional EncOpts enc = 2;\n\n  message AuthOpts {\n    optional AuthMode mode = 1;\n    repeated bytes keys = 2; // root keys to trust\n\n    enum AuthMode {\n      NONE = 0; // no authentication, anyone can publish\n      KEY = 1; // only messages signed by keys in the topic descriptor are accepted\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n\n  message EncOpts {\n    optional EncMode mode = 1;\n    repeated bytes keyHashes = 2; // the hashes of the shared keys used (salted)\n\n    enum EncMode {\n      NONE = 0; // no encryption, anyone can read\n      SHAREDKEY = 1; // messages are encrypted with shared key\n      WOT = 2; // web of trust, certificates can allow publisher set to grow\n    }\n  }\n}`\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","'use strict'\n\nmodule.exports = function getTime () {\n  return Date.now()\n}\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> -- > * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x -- > >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x -- > >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x -- > >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 -- > >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 -- > >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ -- > * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x -- > >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x -- > >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x -- > >=1.2.0 <2.0.0\n// ^1.2.3 -- > >=1.2.3 <2.0.0\n// ^1.2.0 -- > >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst collect = require('pull-stream/sinks/collect')\nconst pullLP = require('pull-length-prefixed')\nconst debug = require('debug')\n\nexports = module.exports\n\nfunction randomId () {\n  return ((~~(Math.random() * 1e9)).toString(36))\n}\n\n// prefixes a message with a varint\n// TODO this is a pull-stream 'creep' (pull stream to add a byte?')\nfunction encode (msg, callback) {\n  pull(\n    values(Buffer.isBuffer(msg) ? [msg] : [Buffer.from(msg)]),\n    pullLP.encode(),\n    collect((err, encoded) => {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, encoded[0])\n    })\n  )\n}\n\nexports.writeEncoded = (writer, msg, callback) => {\n  encode(msg, (err, msg) => {\n    if (err) {\n      return callback(err)\n    }\n    writer.write(msg)\n  })\n}\n\nfunction createLogger (type) {\n  const rId = randomId()\n\n  function printer (logger) {\n    return (msg) => {\n      if (Array.isArray(msg)) {\n        msg = msg.join(' ')\n      }\n      logger('(%s) %s', rId, msg)\n    }\n  }\n\n  const log = printer(debug('mss:' + type))\n  log.error = printer(debug('mss:' + type + ':error'))\n\n  return log\n}\n\nexports.log = {}\n\nexports.log.dialer = () => {\n  return createLogger('dialer\\t')\n}\nexports.log.listener = () => {\n  return createLogger('listener\\t')\n}\n","'use strict'\n\nconst handshake = require('pull-handshake')\nconst pullLP = require('pull-length-prefixed')\nconst util = require('./util')\nconst writeEncoded = util.writeEncoded\n\nconst errCode = require('err-code')\nconst { errors } = require('./constants')\n\nfunction select (multicodec, callback, log) {\n  const stream = handshake({\n    timeout: 60 * 1000\n  }, callback)\n\n  const shake = stream.handshake\n\n  log('writing multicodec: ' + multicodec)\n  writeEncoded(shake, Buffer.from(multicodec + '\\n'), callback)\n\n  pullLP.decodeFromReader(shake, (err, data) => {\n    if (err) {\n      return callback(err)\n    }\n    const protocol = data.toString().slice(0, -1)\n\n    if (protocol !== multicodec) {\n      const err = errCode(new Error(`\"${multicodec}\" not supported`), errors.MULTICODEC_NOT_SUPPORTED)\n\n      return callback(err, shake.rest())\n    }\n\n    log('received ack: ' + protocol)\n    callback(null, shake.rest())\n  })\n\n  return stream\n}\n\nmodule.exports = select\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst values = require('pull-stream/sources/values')\nconst pullLP = require('pull-length-prefixed')\nconst varint = require('varint')\n\nfunction lsHandler (self, conn) {\n  const protos = Object.keys(self.handlers).filter((key) => key !== 'ls')\n\n  const nProtos = protos.length\n  // total size of the list of protocols, including varint and newline\n  const size = protos.reduce((size, proto) => {\n    const p = Buffer.from(proto + '\\n')\n    const el = varint.encodingLength(p.length)\n    return size + el\n  }, 0)\n\n  const buf = Buffer.concat([\n    Buffer.from(varint.encode(nProtos)),\n    Buffer.from(varint.encode(size)),\n    Buffer.from('\\n')\n  ])\n\n  const encodedProtos = protos.map((proto) => {\n    return Buffer.from(proto + '\\n')\n  })\n\n  pull(\n    values([buf].concat(encodedProtos)),\n    pullLP.encode(),\n    conn\n  )\n}\n\nmodule.exports = lsHandler\n","'use strict'\n\nconst handshake = require('pull-handshake')\nconst lp = require('pull-length-prefixed')\nconst Connection = require('interface-connection').Connection\nconst writeEncoded = require('../util.js').writeEncoded\nconst some = require('async/some')\n\nfunction selectHandler (rawConn, handlersMap, log) {\n  const cb = (err) => {\n    // incoming errors are irrelevant for the app\n    log.error(err)\n  }\n\n  const stream = handshake({ timeout: 60 * 1000 }, cb)\n  const shake = stream.handshake\n\n  next()\n  return stream\n\n  function next () {\n    lp.decodeFromReader(shake, (err, data) => {\n      if (err) {\n        return cb(err)\n      }\n      log('received:', data.toString())\n      const protocol = data.toString().slice(0, -1)\n\n      matcher(protocol, handlersMap, (err, result) => {\n        if (err) {\n          return cb(err)\n        }\n        const key = result\n\n        if (key) {\n          log('send ack back of: ' + protocol)\n          writeEncoded(shake, data, cb)\n\n          const conn = new Connection(shake.rest(), rawConn)\n          handlersMap[key].handlerFunc(protocol, conn)\n        } else {\n          log('not supported protocol: ' + protocol)\n          writeEncoded(shake, Buffer.from('na\\n'))\n          next()\n        }\n      })\n    })\n  }\n}\n\nfunction matcher (protocol, handlers, callback) {\n  const supportedProtocols = Object.keys(handlers)\n  let supportedProtocol = false\n\n  some(supportedProtocols,\n    (sp, cb) => {\n      handlers[sp].matchFunc(sp, protocol, (err, result) => {\n        if (err) {\n          return cb(err)\n        }\n        if (result) {\n          supportedProtocol = sp\n        }\n        cb()\n      })\n    },\n    (err) => {\n      if (err) {\n        return callback(err)\n      }\n      callback(null, supportedProtocol)\n    }\n  )\n}\n\nmodule.exports = selectHandler\n","'use strict'\nconst protobuf = require('protons')\nmodule.exports = protobuf(`\nmessage CircuitRelay {\n\n  enum Status {\n    SUCCESS                    = 100;\n    HOP_SRC_ADDR_TOO_LONG      = 220;\n    HOP_DST_ADDR_TOO_LONG      = 221;\n    HOP_SRC_MULTIADDR_INVALID  = 250;\n    HOP_DST_MULTIADDR_INVALID  = 251;\n    HOP_NO_CONN_TO_DST         = 260;\n    HOP_CANT_DIAL_DST          = 261;\n    HOP_CANT_OPEN_DST_STREAM   = 262;\n    HOP_CANT_SPEAK_RELAY       = 270;\n    HOP_CANT_RELAY_TO_SELF     = 280;\n    STOP_SRC_ADDR_TOO_LONG     = 320;\n    STOP_DST_ADDR_TOO_LONG     = 321;\n    STOP_SRC_MULTIADDR_INVALID = 350;\n    STOP_DST_MULTIADDR_INVALID = 351;\n    STOP_RELAY_REFUSED         = 390;\n    MALFORMED_MESSAGE          = 400;\n  }\n\n  enum Type { // RPC identifier, either HOP, STOP or STATUS\n    HOP = 1;\n    STOP = 2;\n    STATUS = 3;\n    CAN_HOP = 4;\n  }\n\n  message Peer {\n    required bytes id = 1;    // peer id\n    repeated bytes addrs = 2; // peer's known addresses\n  }\n\n  optional Type type = 1;     // Type of the message\n\n  optional Peer srcPeer = 2;  // srcPeer and dstPeer are used when Type is HOP or STATUS\n  optional Peer dstPeer = 3;\n\n  optional Status code = 4;   // Status code, used when Type is STATUS\n}\n`)\n","'use strict'\n\nmodule.exports = {\n  relay: '/libp2p/circuit/relay/0.1.0'\n}\n","'use strict'\n\nconst values = require('pull-stream/sources/values')\nconst collect = require('pull-stream/sinks/collect')\nconst empty = require('pull-stream/sources/empty')\nconst pull = require('pull-stream/pull')\nconst lp = require('pull-length-prefixed')\nconst handshake = require('pull-handshake')\n\nconst debug = require('debug')\nconst log = debug('libp2p:circuit:stream-handler')\nlog.err = debug('libp2p:circuit:error:stream-handler')\n\nclass StreamHandler {\n  /**\n   * Create a stream handler for connection\n   *\n   * @param {Connection} conn - connection to read/write\n   * @param {Function|undefined} cb - handshake callback called on error\n   * @param {Number} timeout - handshake timeout\n   * @param {Number} maxLength - max bytes length of message\n   */\n  constructor (conn, cb, timeout, maxLength) {\n    this.conn = conn\n    this.stream = null\n    this.shake = null\n    this.timeout = cb || 1000 * 60\n    this.maxLength = maxLength || 4096\n\n    if (typeof cb === 'function') {\n      this.timeout = timeout || 1000 * 60\n    }\n\n    this.stream = handshake({ timeout: this.timeout }, cb)\n    this.shake = this.stream.handshake\n\n    pull(this.stream, conn, this.stream)\n  }\n\n  isValid () {\n    return this.conn && this.shake && this.stream\n  }\n\n  /**\n   * Read and decode message\n   *\n   * @param {Function} cb\n   * @returns {void|Function}\n   */\n  read (cb) {\n    if (!this.isValid()) {\n      return cb(new Error(`handler is not in a valid state`))\n    }\n\n    lp.decodeFromReader(\n      this.shake,\n      { maxLength: this.maxLength },\n      (err, msg) => {\n        if (err) {\n          log.err(err)\n          // this.shake.abort(err)\n          return cb(err)\n        }\n\n        return cb(null, msg)\n      })\n  }\n\n  /**\n   * Encode and write array of buffers\n   *\n   * @param {Buffer[]} msg\n   * @param {Function} [cb]\n   * @returns {Function}\n   */\n  write (msg, cb) {\n    cb = cb || (() => {})\n\n    if (!this.isValid()) {\n      return cb(new Error(`handler is not in a valid state`))\n    }\n\n    pull(\n      values([msg]),\n      lp.encode(),\n      collect((err, encoded) => {\n        if (err) {\n          log.err(err)\n          this.shake.abort(err)\n          return cb(err)\n        }\n\n        encoded.forEach((e) => this.shake.write(e))\n        cb()\n      })\n    )\n  }\n\n  /**\n   * Get the raw Connection\n   *\n   * @returns {null|Connection|*}\n   */\n  getRawConn () {\n    return this.conn\n  }\n\n  /**\n   * Return the handshake rest stream and invalidate handler\n   *\n   * @return {*|{source, sink}}\n   */\n  rest () {\n    const rest = this.shake.rest()\n\n    this.conn = null\n    this.stream = null\n    this.shake = null\n    return rest\n  }\n\n  /**\n   * Close the stream\n   *\n   * @returns {undefined}\n   */\n  close () {\n    if (!this.isValid()) {\n      return\n    }\n\n    // close stream\n    pull(\n      empty(),\n      this.rest()\n    )\n  }\n}\n\nmodule.exports = StreamHandler\n","'use strict'\n\nconst setImmediate = require('async/setImmediate')\n\nconst EE = require('events').EventEmitter\nconst Connection = require('interface-connection').Connection\nconst utilsFactory = require('./utils')\nconst PeerInfo = require('peer-info')\nconst proto = require('../protocol').CircuitRelay\nconst series = require('async/series')\n\nconst debug = require('debug')\n\nconst log = debug('libp2p:circuit:stop')\nlog.err = debug('libp2p:circuit:error:stop')\n\nclass Stop extends EE {\n  constructor (swarm) {\n    super()\n    this.swarm = swarm\n    this.utils = utilsFactory(swarm)\n  }\n\n  /**\n   * Handle the incoming STOP message\n   *\n   * @param {{}} msg  - the parsed protobuf message\n   * @param {StreamHandler} sh  - the stream handler wrapped connection\n   * @param {Function} callback  - callback\n   * @returns {undefined}\n   */\n  handle (msg, sh, callback) {\n    callback = callback || (() => {})\n\n    series([\n      (cb) => this.utils.validateAddrs(msg, sh, proto.Type.STOP, cb),\n      (cb) => this.utils.writeResponse(sh, proto.Status.Success, cb)\n    ], (err) => {\n      if (err) {\n        // we don't return the error here,\n        // since multistream select don't expect one\n        callback()\n        return log(err)\n      }\n\n      const peerInfo = new PeerInfo(this.utils.peerIdFromId(msg.srcPeer.id))\n      msg.srcPeer.addrs.forEach((addr) => peerInfo.multiaddrs.add(addr))\n      const newConn = new Connection(sh.rest())\n      newConn.setPeerInfo(peerInfo)\n      setImmediate(() => this.emit('connection', newConn))\n      callback(newConn)\n    })\n  }\n}\n\nmodule.exports = Stop\n","'use strict'\n\nconst pull = require('pull-stream/pull')\nconst debug = require('debug')\nconst PeerInfo = require('peer-info')\nconst PeerId = require('peer-id')\nconst EE = require('events').EventEmitter\nconst once = require('once')\nconst utilsFactory = require('./utils')\nconst StreamHandler = require('./stream-handler')\nconst proto = require('../protocol').CircuitRelay\nconst multiaddr = require('multiaddr')\nconst series = require('async/series')\nconst waterfall = require('async/waterfall')\nconst setImmediate = require('async/setImmediate')\n\nconst multicodec = require('./../multicodec')\n\nconst log = debug('libp2p:circuit:relay')\nlog.err = debug('libp2p:circuit:error:relay')\n\nclass Hop extends EE {\n  /**\n   * Construct a Circuit object\n   *\n   * This class will handle incoming circuit connections and\n   * either start a relay or hand the relayed connection to\n   * the swarm\n   *\n   * @param {Swarm} swarm\n   * @param {Object} options\n   */\n  constructor (swarm, options) {\n    super()\n    this.swarm = swarm\n    this.peerInfo = this.swarm._peerInfo\n    this.utils = utilsFactory(swarm)\n    this.config = options || { active: false, enabled: false }\n    this.active = this.config.active\n  }\n\n  /**\n   * Handle the relay message\n   *\n   * @param {CircuitRelay} message\n   * @param {StreamHandler} sh\n   * @returns {*}\n   */\n  handle (message, sh) {\n    if (!this.config.enabled) {\n      this.utils.writeResponse(\n        sh,\n        proto.Status.HOP_CANT_SPEAK_RELAY)\n      return sh.close()\n    }\n\n    // check if message is `CAN_HOP`\n    if (message.type === proto.Type.CAN_HOP) {\n      this.utils.writeResponse(\n        sh,\n        proto.Status.SUCCESS)\n      return sh.close()\n    }\n\n    // This is a relay request - validate and create a circuit\n    let srcPeerId = null\n    let dstPeerId = null\n    try {\n      srcPeerId = PeerId.createFromBytes(message.srcPeer.id).toB58String()\n      dstPeerId = PeerId.createFromBytes(message.dstPeer.id).toB58String()\n    } catch (err) {\n      log.err(err)\n\n      if (!srcPeerId) {\n        this.utils.writeResponse(\n          sh,\n          proto.Status.HOP_SRC_MULTIADDR_INVALID)\n        return sh.close()\n      }\n\n      if (!dstPeerId) {\n        this.utils.writeResponse(\n          sh,\n          proto.Status.HOP_DST_MULTIADDR_INVALID)\n        return sh.close()\n      }\n    }\n\n    if (srcPeerId === dstPeerId) {\n      this.utils.writeResponse(\n        sh,\n        proto.Status.HOP_CANT_RELAY_TO_SELF)\n      return sh.close()\n    }\n\n    if (!message.dstPeer.addrs.length) {\n      // TODO: use encapsulate here\n      const addr = multiaddr(`/p2p-circuit/ipfs/${dstPeerId}`).buffer\n      message.dstPeer.addrs.push(addr)\n    }\n\n    log('trying to establish a circuit: %s <-> %s', srcPeerId, dstPeerId)\n    const noPeer = () => {\n      // log.err(err)\n      this.utils.writeResponse(\n        sh,\n        proto.Status.HOP_NO_CONN_TO_DST)\n      return sh.close()\n    }\n\n    const isConnected = (cb) => {\n      let dstPeer\n      try {\n        dstPeer = this.swarm._peerBook.get(dstPeerId)\n        if (!dstPeer.isConnected() && !this.active) {\n          const err = new Error(`No Connection to peer ${dstPeerId}`)\n          noPeer(err)\n          return cb(err)\n        }\n      } catch (err) {\n        if (!this.active) {\n          noPeer(err)\n          return cb(err)\n        }\n      }\n      cb()\n    }\n\n    series([\n      (cb) => this.utils.validateAddrs(message, sh, proto.Type.HOP, cb),\n      (cb) => isConnected(cb),\n      (cb) => this._circuit(sh, message, cb)\n    ], (err) => {\n      if (err) {\n        log.err(err)\n        sh.close()\n        return setImmediate(() => this.emit('circuit:error', err))\n      }\n      setImmediate(() => this.emit('circuit:success'))\n    })\n  }\n\n  /**\n   * Connect to STOP\n   *\n   * @param {PeerInfo} peer\n   * @param {StreamHandler} srcSh\n   * @param {function} callback\n   * @returns {void}\n   */\n  _connectToStop (peer, srcSh, callback) {\n    this._dialPeer(peer, (err, dstConn) => {\n      if (err) {\n        this.utils.writeResponse(\n          srcSh,\n          proto.Status.HOP_CANT_DIAL_DST)\n        log.err(err)\n        return callback(err)\n      }\n\n      return this.utils.writeResponse(\n        srcSh,\n        proto.Status.SUCCESS,\n        (err) => {\n          if (err) {\n            log.err(err)\n            return callback(err)\n          }\n          return callback(null, dstConn)\n        })\n    })\n  }\n\n  /**\n   * Negotiate STOP\n   *\n   * @param {StreamHandler} dstSh\n   * @param {StreamHandler} srcSh\n   * @param {CircuitRelay} message\n   * @param {function} callback\n   * @returns {void}\n   */\n  _negotiateStop (dstSh, srcSh, message, callback) {\n    const stopMsg = Object.assign({}, message, {\n      type: proto.Type.STOP // change the message type\n    })\n    dstSh.write(proto.encode(stopMsg),\n      (err) => {\n        if (err) {\n          this.utils.writeResponse(\n            srcSh,\n            proto.Status.HOP_CANT_OPEN_DST_STREAM)\n          log.err(err)\n          return callback(err)\n        }\n\n        // read response from STOP\n        dstSh.read((err, msg) => {\n          if (err) {\n            log.err(err)\n            return callback(err)\n          }\n\n          const message = proto.decode(msg)\n          if (message.code !== proto.Status.SUCCESS) {\n            return callback(new Error(`Unable to create circuit!`))\n          }\n\n          return callback(null, msg)\n        })\n      })\n  }\n\n  /**\n   * Attempt to make a circuit from A <-> R <-> B where R is this relay\n   *\n   * @param {StreamHandler} srcSh - the source stream handler\n   * @param {CircuitRelay} message - the message with the src and dst entries\n   * @param {Function} callback - callback to signal success or failure\n   * @returns {void}\n   * @private\n   */\n  _circuit (srcSh, message, callback) {\n    let dstSh = null\n    waterfall([\n      (cb) => this._connectToStop(message.dstPeer, srcSh, cb),\n      (_dstConn, cb) => {\n        dstSh = new StreamHandler(_dstConn)\n        this._negotiateStop(dstSh, srcSh, message, cb)\n      }\n    ], (err) => {\n      if (err) {\n        // close/end the source stream if there was an error\n        if (srcSh) {\n          srcSh.close()\n        }\n\n        if (dstSh) {\n          dstSh.close()\n        }\n        return callback(err)\n      }\n\n      const src = srcSh.rest()\n      const dst = dstSh.rest()\n\n      const srcIdStr = PeerId.createFromBytes(message.srcPeer.id).toB58String()\n      const dstIdStr = PeerId.createFromBytes(message.dstPeer.id).toB58String()\n\n      // circuit the src and dst streams\n      pull(\n        src,\n        dst,\n        src\n      )\n      log('circuit %s <-> %s established', srcIdStr, dstIdStr)\n      callback()\n    })\n  }\n\n  /**\n   * Dial the dest peer and create a circuit\n   *\n   * @param {Multiaddr} dstPeer\n   * @param {Function} callback\n   * @returns {void}\n   * @private\n   */\n  _dialPeer (dstPeer, callback) {\n    const peerInfo = new PeerInfo(PeerId.createFromBytes(dstPeer.id))\n    dstPeer.addrs.forEach((a) => peerInfo.multiaddrs.add(a))\n    this.swarm.dial(peerInfo, multicodec.relay, once((err, conn) => {\n      if (err) {\n        log.err(err)\n        return callback(err)\n      }\n\n      callback(null, conn)\n    }))\n  }\n}\n\nmodule.exports = Hop\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\n\nmodule.exports = function wrapHash (hashFn) {\n  return function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n}\n\nclass InfiniteHash {\n  constructor (value, hashFn) {\n    if ((typeof value) !== 'string' && !Buffer.isBuffer(value)) {\n      throw new Error('can only hash strings or buffers')\n    }\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n    this._buffers = []\n  }\n\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? this._value + this._depth : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param { __import__(\"./../dist/rabin\").default } asModule\n     * @memberof Rabin\n     */\n    constructor(bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, asModule) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize)\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = this.asModule.newArray(lengths)\n        const pointer = this.asModule.newArray(buf)\n\n        // run finderprint\n        this.rabin.fingerprint(pointer, lengthsPtr)\n\n        const processed = this.asModule.getArray(Int32Array, lengthsPtr)\n\n        //free memory\n        this.asModule.freeArray(lengthsPtr)\n        this.asModule.freeArray(pointer)\n\n        // TODO: remove this. @see https://github.com/ipfs/js-ipfs/issues/2118#issuecomment-497722625\n        // clean extra 0s in the array\n        const cleanArr = []\n        for (let i = 0; i < processed.length; i++) {\n            if(processed[i] === 0) break\n            cleanArr[i] = processed[i];\n        }\n\n        return cleanArr\n    }\n}\n\nmodule.exports = Rabin","\nconst { instantiateStreaming } = require(\"assemblyscript/lib/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,90,16,96,0,0,96,2,127,127,1,127,96,4,127,127,127,127,0,96,1,127,1,127,96,3,127,127,127,0,96,1,126,1,127,96,2,126,126,1,126,96,5,127,127,127,127,127,1,127,96,3,127,127,126,0,96,2,127,127,1,126,96,3,127,127,127,1,127,96,1,127,0,96,2,127,127,0,96,1,127,1,126,96,2,127,126,0,96,0,1,127,2,13,1,3,101,110,118,5,97,98,111,114,116,0,2,3,57,56,3,3,12,3,3,15,5,6,1,8,4,1,9,11,7,4,10,10,11,0,0,0,3,12,3,12,3,12,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,4,4,1,112,0,1,5,3,1,0,1,6,26,5,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,7,253,6,44,6,109,101,109,111,114,121,2,0,5,116,97,98,108,101,1,0,6,100,101,103,114,101,101,0,7,3,109,111,100,0,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,23,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,24,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,25,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,26,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,27,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,28,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,29,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,30,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,31,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,32,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,33,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,34,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,35,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,36,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,37,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,38,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,39,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,40,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,41,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,42,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,43,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,44,27,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,95,100,101,103,114,101,101,0,45,27,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,95,100,101,103,114,101,101,0,46,26,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,95,115,104,105,102,116,0,47,26,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,95,115,104,105,102,116,0,48,22,82,97,98,105,110,35,103,101,116,58,97,118,101,114,97,103,101,95,98,105,116,115,0,49,22,82,97,98,105,110,35,115,101,116,58,97,118,101,114,97,103,101,95,98,105,116,115,0,50,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,51,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,52,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,53,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,54,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,55,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,56,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,15,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,16,14,109,101,109,111,114,121,46,99,111,109,112,97,114,101,0,18,15,109,101,109,111,114,121,46,97,108,108,111,99,97,116,101,0,4,11,109,101,109,111,114,121,46,102,114,101,101,0,19,12,109,101,109,111,114,121,46,114,101,115,101,116,0,20,8,1,21,9,7,1,0,65,0,11,1,22,10,188,30,56,104,1,3,127,32,0,65,128,128,128,128,4,75,4,64,0,11,35,1,34,1,32,0,65,1,32,0,65,1,75,27,106,65,7,106,65,120,113,34,0,63,0,34,2,65,16,116,75,4,64,32,2,32,0,32,1,107,65,255,255,3,106,65,128,128,124,113,65,16,118,34,3,32,2,32,3,74,27,64,0,65,0,72,4,64,32,3,64,0,65,0,72,4,64,0,11,11,11,32,0,36,1,32,1,11,51,1,1,127,32,0,65,248,255,255,255,3,75,4,64,65,0,65,200,0,65,26,65,2,16,0,0,11,65,1,65,32,32,0,65,7,106,103,107,116,16,1,34,1,32,0,54,2,0,32,1,11,145,3,1,1,127,32,1,69,4,64,15,11,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,4,64,15,11,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,4,64,15,11,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,4,64,15,11,65,0,32,0,107,65,3,113,34,2,32,0,106,34,0,65,0,54,2,0,32,1,32,2,107,65,124,113,34,1,32,0,106,65,4,107,65,0,54,2,0,32,1,65,8,77,4,64,15,11,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,4,64,15,11,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,65,4,113,65,24,106,34,2,32,0,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,6,0,32,0,16,1,11,76,1,1,127,65,128,16,16,2,34,1,65,8,106,65,128,16,16,3,32,0,69,4,64,65,12,16,1,33,0,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,32,1,54,2,0,32,0,65,0,54,2,4,32,0,65,128,16,54,2,8,32,0,11,8,0,65,12,16,1,16,5,11,70,2,1,127,1,126,66,128,128,128,128,128,128,128,128,128,127,33,2,3,64,2,64,32,1,65,192,0,78,13,0,32,0,32,2,131,66,0,86,4,64,65,63,32,1,107,15,5,32,2,66,1,136,33,2,32,1,65,1,106,33,1,12,2,11,0,11,11,65,127,11,175,2,2,1,127,2,126,3,64,2,127,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,0,32,3,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,2,127,32,1,33,4,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,3,32,4,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,78,4,64,32,1,2,127,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,0,32,3,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,3,65,0,33,2,3,64,2,64,32,2,65,192,0,78,13,0,65,63,32,2,107,32,1,32,3,131,66,0,86,13,2,26,32,3,66,1,136,33,3,32,2,65,1,106,33,2,12,1,11,11,65,127,11,107,172,134,32,0,133,33,0,12,1,11,11,32,0,11,96,1,1,127,32,1,65,248,255,255,255,3,75,4,64,65,0,65,8,65,23,65,34,16,0,0,11,32,1,16,2,34,2,65,8,106,32,1,16,3,32,0,69,4,64,65,12,16,1,33,0,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,32,2,54,2,0,32,0,65,0,54,2,4,32,0,32,1,54,2,8,32,0,11,49,0,32,1,32,0,40,2,8,65,3,118,79,4,64,65,0,65,8,65,50,65,63,16,0,0,11,32,0,40,2,4,32,0,40,2,0,32,1,65,3,116,106,106,32,2,55,3,8,11,43,0,32,1,32,0,40,2,8,79,4,64,65,0,65,8,65,50,65,63,16,0,0,11,32,0,40,2,4,32,1,32,0,40,2,0,106,106,32,2,58,0,8,11,41,0,32,1,32,0,40,2,8,79,4,64,65,0,65,8,65,39,65,63,16,0,0,11,32,0,40,2,4,32,1,32,0,40,2,0,106,106,45,0,8,11,47,0,32,1,32,0,40,2,8,65,3,118,79,4,64,65,0,65,8,65,39,65,63,16,0,0,11,32,0,40,2,4,32,0,40,2,0,32,1,65,3,116,106,106,41,3,8,11,166,10,2,3,127,5,126,35,2,69,4,64,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,4,32,0,41,3,72,33,6,3,64,2,127,32,4,33,5,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,32,6,33,7,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,7,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,78,4,64,32,6,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,6,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,107,172,134,32,5,133,33,4,12,1,11,11,65,0,33,1,3,64,32,1,32,0,40,2,4,65,1,107,72,4,64,32,5,66,8,134,33,4,32,0,41,3,72,33,6,3,64,2,127,32,4,33,5,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,2,127,32,6,33,7,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,7,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,78,4,64,32,6,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,3,3,64,32,3,65,192,0,72,4,64,65,63,32,3,107,32,4,32,6,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,3,65,1,106,33,3,12,1,11,11,65,127,11,107,172,134,32,5,133,33,4,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,35,4,32,2,32,5,16,10,32,2,65,1,106,33,2,12,1,11,11,2,127,32,0,41,3,72,33,4,66,128,128,128,128,128,128,128,128,128,127,33,5,65,0,33,2,3,64,32,2,65,192,0,72,4,64,65,63,32,2,107,32,4,32,5,131,66,0,86,13,2,26,32,5,66,1,136,33,5,32,2,65,1,106,33,2,12,1,11,11,65,127,11,172,33,8,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,3,33,3,32,2,172,32,8,134,33,5,32,0,41,3,72,33,6,3,64,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,32,6,33,7,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,7,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,78,4,64,32,6,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,5,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,2,127,66,128,128,128,128,128,128,128,128,128,127,33,4,65,0,33,1,3,64,32,1,65,192,0,72,4,64,65,63,32,1,107,32,4,32,6,131,66,0,86,13,2,26,32,4,66,1,136,33,4,32,1,65,1,106,33,1,12,1,11,11,65,127,11,107,172,134,32,5,133,33,5,12,1,11,11,32,3,32,2,32,2,172,32,8,134,32,5,132,16,10,32,2,65,1,106,33,2,12,1,11,11,65,1,36,2,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,65,0,16,11,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,12,33,1,32,0,40,2,0,32,0,40,2,8,65,1,16,11,32,0,32,0,41,3,40,35,4,32,1,65,255,1,113,16,13,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,41,3,40,32,0,41,3,88,136,167,33,1,32,0,32,0,41,3,40,66,8,134,55,3,40,32,0,32,0,41,3,40,66,1,132,55,3,40,32,0,32,0,41,3,40,35,3,32,1,65,255,1,113,16,13,133,55,3,40,11,234,1,0,32,0,69,4,64,65,128,1,16,1,33,0,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,66,0,55,3,104,32,0,66,0,55,3,112,32,0,66,0,55,3,120,32,0,32,1,173,55,3,96,32,0,32,2,173,55,3,104,32,0,32,3,173,55,3,112,32,0,65,12,16,1,32,4,16,9,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,0,41,3,96,134,66,1,125,55,3,120,32,0,66,243,130,183,218,216,230,232,30,55,3,72,32,0,66,53,55,3,80,32,0,32,0,41,3,80,66,8,125,55,3,88,32,0,16,14,32,0,11,206,4,1,5,127,32,1,40,2,8,33,4,32,1,40,2,0,65,8,106,33,5,3,64,2,127,65,0,33,3,3,64,32,3,32,4,72,4,64,32,3,32,5,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,12,33,6,32,0,40,2,0,32,0,40,2,8,32,1,16,11,32,0,32,0,41,3,40,35,4,32,6,65,255,1,113,16,13,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,41,3,40,32,0,41,3,88,136,167,33,6,32,0,32,0,41,3,40,66,8,134,55,3,40,32,0,32,0,41,3,40,32,1,173,132,55,3,40,32,0,32,0,41,3,40,35,3,32,6,65,255,1,113,16,13,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,2,127,32,0,41,3,16,32,0,41,3,104,90,34,1,4,64,32,0,41,3,40,32,0,41,3,120,131,66,0,81,33,1,11,32,1,69,11,4,127,32,0,41,3,16,32,0,41,3,112,90,5,32,1,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,65,0,16,11,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,12,33,1,32,0,40,2,0,32,0,40,2,8,65,1,16,11,32,0,32,0,41,3,40,35,4,32,1,65,255,1,113,16,13,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,41,3,40,32,0,41,3,88,136,167,33,1,32,0,32,0,41,3,40,66,8,134,55,3,40,32,0,32,0,41,3,40,66,1,132,55,3,40,32,0,32,0,41,3,40,35,3,32,1,65,255,1,113,16,13,133,55,3,40,32,3,65,1,106,12,3,5,32,3,65,1,106,33,3,12,2,11,0,11,11,65,127,11,34,1,65,0,78,4,64,32,4,32,1,107,33,4,32,1,32,5,106,33,5,32,7,34,1,65,1,106,33,7,32,2,40,2,4,32,2,40,2,0,32,1,65,2,116,106,106,32,0,41,3,56,62,2,8,32,2,40,2,4,32,2,40,2,0,32,1,65,2,116,106,106,40,2,8,26,12,1,11,11,11,88,1,1,127,32,0,32,1,70,4,64,65,0,15,11,3,64,32,2,65,0,71,34,3,4,64,32,0,45,0,0,32,1,45,0,0,70,33,3,11,32,3,4,64,32,2,65,1,107,33,2,32,0,65,1,106,33,0,32,1,65,1,106,33,1,12,1,11,11,32,2,4,127,32,0,45,0,0,32,1,45,0,0,107,5,65,0,11,11,10,0,32,0,32,1,32,2,16,17,11,3,0,1,11,6,0,35,0,36,1,11,19,0,65,136,1,36,0,35,0,36,1,16,6,36,3,16,6,36,4,11,3,0,1,11,7,0,32,0,40,2,0,11,9,0,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,7,0,32,0,41,3,104,11,9,0,32,0,32,1,55,3,104,11,7,0,32,0,41,3,112,11,9,0,32,0,32,1,55,3,112,11,7,0,32,0,41,3,120,11,9,0,32,0,32,1,55,3,120,11,11,128,1,2,0,65,8,11,57,27,0,0,0,126,0,108,0,105,0,98,0,47,0,105,0,110,0,116,0,101,0,114,0,110,0,97,0,108,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,200,0,11,59,28,0,0,0,126,0,108,0,105,0,98,0,47,0,105,0,110,0,116,0,101,0,114,0,110,0,97,0,108,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,32,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,14,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiateStreaming(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","module.exports=[\n    \"abaco\",\n    \"abbaglio\",\n    \"abbinato\",\n    \"abete\",\n    \"abisso\",\n    \"abolire\",\n    \"abrasivo\",\n    \"abrogato\",\n    \"accadere\",\n    \"accenno\",\n    \"accusato\",\n    \"acetone\",\n    \"achille\",\n    \"acido\",\n    \"acqua\",\n    \"acre\",\n    \"acrilico\",\n    \"acrobata\",\n    \"acuto\",\n    \"adagio\",\n    \"addebito\",\n    \"addome\",\n    \"adeguato\",\n    \"aderire\",\n    \"adipe\",\n    \"adottare\",\n    \"adulare\",\n    \"affabile\",\n    \"affetto\",\n    \"affisso\",\n    \"affranto\",\n    \"aforisma\",\n    \"afoso\",\n    \"africano\",\n    \"agave\",\n    \"agente\",\n    \"agevole\",\n    \"aggancio\",\n    \"agire\",\n    \"agitare\",\n    \"agonismo\",\n    \"agricolo\",\n    \"agrumeto\",\n    \"aguzzo\",\n    \"alabarda\",\n    \"alato\",\n    \"albatro\",\n    \"alberato\",\n    \"albo\",\n    \"albume\",\n    \"alce\",\n    \"alcolico\",\n    \"alettone\",\n    \"alfa\",\n    \"algebra\",\n    \"aliante\",\n    \"alibi\",\n    \"alimento\",\n    \"allagato\",\n    \"allegro\",\n    \"allievo\",\n    \"allodola\",\n    \"allusivo\",\n    \"almeno\",\n    \"alogeno\",\n    \"alpaca\",\n    \"alpestre\",\n    \"altalena\",\n    \"alterno\",\n    \"alticcio\",\n    \"altrove\",\n    \"alunno\",\n    \"alveolo\",\n    \"alzare\",\n    \"amalgama\",\n    \"amanita\",\n    \"amarena\",\n    \"ambito\",\n    \"ambrato\",\n    \"ameba\",\n    \"america\",\n    \"ametista\",\n    \"amico\",\n    \"ammasso\",\n    \"ammenda\",\n    \"ammirare\",\n    \"ammonito\",\n    \"amore\",\n    \"ampio\",\n    \"ampliare\",\n    \"amuleto\",\n    \"anacardo\",\n    \"anagrafe\",\n    \"analista\",\n    \"anarchia\",\n    \"anatra\",\n    \"anca\",\n    \"ancella\",\n    \"ancora\",\n    \"andare\",\n    \"andrea\",\n    \"anello\",\n    \"angelo\",\n    \"angolare\",\n    \"angusto\",\n    \"anima\",\n    \"annegare\",\n    \"annidato\",\n    \"anno\",\n    \"annuncio\",\n    \"anonimo\",\n    \"anticipo\",\n    \"anzi\",\n    \"apatico\",\n    \"apertura\",\n    \"apode\",\n    \"apparire\",\n    \"appetito\",\n    \"appoggio\",\n    \"approdo\",\n    \"appunto\",\n    \"aprile\",\n    \"arabica\",\n    \"arachide\",\n    \"aragosta\",\n    \"araldica\",\n    \"arancio\",\n    \"aratura\",\n    \"arazzo\",\n    \"arbitro\",\n    \"archivio\",\n    \"ardito\",\n    \"arenile\",\n    \"argento\",\n    \"argine\",\n    \"arguto\",\n    \"aria\",\n    \"armonia\",\n    \"arnese\",\n    \"arredato\",\n    \"arringa\",\n    \"arrosto\",\n    \"arsenico\",\n    \"arso\",\n    \"artefice\",\n    \"arzillo\",\n    \"asciutto\",\n    \"ascolto\",\n    \"asepsi\",\n    \"asettico\",\n    \"asfalto\",\n    \"asino\",\n    \"asola\",\n    \"aspirato\",\n    \"aspro\",\n    \"assaggio\",\n    \"asse\",\n    \"assoluto\",\n    \"assurdo\",\n    \"asta\",\n    \"astenuto\",\n    \"astice\",\n    \"astratto\",\n    \"atavico\",\n    \"ateismo\",\n    \"atomico\",\n    \"atono\",\n    \"attesa\",\n    \"attivare\",\n    \"attorno\",\n    \"attrito\",\n    \"attuale\",\n    \"ausilio\",\n    \"austria\",\n    \"autista\",\n    \"autonomo\",\n    \"autunno\",\n    \"avanzato\",\n    \"avere\",\n    \"avvenire\",\n    \"avviso\",\n    \"avvolgere\",\n    \"azione\",\n    \"azoto\",\n    \"azzimo\",\n    \"azzurro\",\n    \"babele\",\n    \"baccano\",\n    \"bacino\",\n    \"baco\",\n    \"badessa\",\n    \"badilata\",\n    \"bagnato\",\n    \"baita\",\n    \"balcone\",\n    \"baldo\",\n    \"balena\",\n    \"ballata\",\n    \"balzano\",\n    \"bambino\",\n    \"bandire\",\n    \"baraonda\",\n    \"barbaro\",\n    \"barca\",\n    \"baritono\",\n    \"barlume\",\n    \"barocco\",\n    \"basilico\",\n    \"basso\",\n    \"batosta\",\n    \"battuto\",\n    \"baule\",\n    \"bava\",\n    \"bavosa\",\n    \"becco\",\n    \"beffa\",\n    \"belgio\",\n    \"belva\",\n    \"benda\",\n    \"benevole\",\n    \"benigno\",\n    \"benzina\",\n    \"bere\",\n    \"berlina\",\n    \"beta\",\n    \"bibita\",\n    \"bici\",\n    \"bidone\",\n    \"bifido\",\n    \"biga\",\n    \"bilancia\",\n    \"bimbo\",\n    \"binocolo\",\n    \"biologo\",\n    \"bipede\",\n    \"bipolare\",\n    \"birbante\",\n    \"birra\",\n    \"biscotto\",\n    \"bisesto\",\n    \"bisnonno\",\n    \"bisonte\",\n    \"bisturi\",\n    \"bizzarro\",\n    \"blando\",\n    \"blatta\",\n    \"bollito\",\n    \"bonifico\",\n    \"bordo\",\n    \"bosco\",\n    \"botanico\",\n    \"bottino\",\n    \"bozzolo\",\n    \"braccio\",\n    \"bradipo\",\n    \"brama\",\n    \"branca\",\n    \"bravura\",\n    \"bretella\",\n    \"brevetto\",\n    \"brezza\",\n    \"briglia\",\n    \"brillante\",\n    \"brindare\",\n    \"broccolo\",\n    \"brodo\",\n    \"bronzina\",\n    \"brullo\",\n    \"bruno\",\n    \"bubbone\",\n    \"buca\",\n    \"budino\",\n    \"buffone\",\n    \"buio\",\n    \"bulbo\",\n    \"buono\",\n    \"burlone\",\n    \"burrasca\",\n    \"bussola\",\n    \"busta\",\n    \"cadetto\",\n    \"caduco\",\n    \"calamaro\",\n    \"calcolo\",\n    \"calesse\",\n    \"calibro\",\n    \"calmo\",\n    \"caloria\",\n    \"cambusa\",\n    \"camerata\",\n    \"camicia\",\n    \"cammino\",\n    \"camola\",\n    \"campale\",\n    \"canapa\",\n    \"candela\",\n    \"cane\",\n    \"canino\",\n    \"canotto\",\n    \"cantina\",\n    \"capace\",\n    \"capello\",\n    \"capitolo\",\n    \"capogiro\",\n    \"cappero\",\n    \"capra\",\n    \"capsula\",\n    \"carapace\",\n    \"carcassa\",\n    \"cardo\",\n    \"carisma\",\n    \"carovana\",\n    \"carretto\",\n    \"cartolina\",\n    \"casaccio\",\n    \"cascata\",\n    \"caserma\",\n    \"caso\",\n    \"cassone\",\n    \"castello\",\n    \"casuale\",\n    \"catasta\",\n    \"catena\",\n    \"catrame\",\n    \"cauto\",\n    \"cavillo\",\n    \"cedibile\",\n    \"cedrata\",\n    \"cefalo\",\n    \"celebre\",\n    \"cellulare\",\n    \"cena\",\n    \"cenone\",\n    \"centesimo\",\n    \"ceramica\",\n    \"cercare\",\n    \"certo\",\n    \"cerume\",\n    \"cervello\",\n    \"cesoia\",\n    \"cespo\",\n    \"ceto\",\n    \"chela\",\n    \"chiaro\",\n    \"chicca\",\n    \"chiedere\",\n    \"chimera\",\n    \"china\",\n    \"chirurgo\",\n    \"chitarra\",\n    \"ciao\",\n    \"ciclismo\",\n    \"cifrare\",\n    \"cigno\",\n    \"cilindro\",\n    \"ciottolo\",\n    \"circa\",\n    \"cirrosi\",\n    \"citrico\",\n    \"cittadino\",\n    \"ciuffo\",\n    \"civetta\",\n    \"civile\",\n    \"classico\",\n    \"clinica\",\n    \"cloro\",\n    \"cocco\",\n    \"codardo\",\n    \"codice\",\n    \"coerente\",\n    \"cognome\",\n    \"collare\",\n    \"colmato\",\n    \"colore\",\n    \"colposo\",\n    \"coltivato\",\n    \"colza\",\n    \"coma\",\n    \"cometa\",\n    \"commando\",\n    \"comodo\",\n    \"computer\",\n    \"comune\",\n    \"conciso\",\n    \"condurre\",\n    \"conferma\",\n    \"congelare\",\n    \"coniuge\",\n    \"connesso\",\n    \"conoscere\",\n    \"consumo\",\n    \"continuo\",\n    \"convegno\",\n    \"coperto\",\n    \"copione\",\n    \"coppia\",\n    \"copricapo\",\n    \"corazza\",\n    \"cordata\",\n    \"coricato\",\n    \"cornice\",\n    \"corolla\",\n    \"corpo\",\n    \"corredo\",\n    \"corsia\",\n    \"cortese\",\n    \"cosmico\",\n    \"costante\",\n    \"cottura\",\n    \"covato\",\n    \"cratere\",\n    \"cravatta\",\n    \"creato\",\n    \"credere\",\n    \"cremoso\",\n    \"crescita\",\n    \"creta\",\n    \"criceto\",\n    \"crinale\",\n    \"crisi\",\n    \"critico\",\n    \"croce\",\n    \"cronaca\",\n    \"crostata\",\n    \"cruciale\",\n    \"crusca\",\n    \"cucire\",\n    \"cuculo\",\n    \"cugino\",\n    \"cullato\",\n    \"cupola\",\n    \"curatore\",\n    \"cursore\",\n    \"curvo\",\n    \"cuscino\",\n    \"custode\",\n    \"dado\",\n    \"daino\",\n    \"dalmata\",\n    \"damerino\",\n    \"daniela\",\n    \"dannoso\",\n    \"danzare\",\n    \"datato\",\n    \"davanti\",\n    \"davvero\",\n    \"debutto\",\n    \"decennio\",\n    \"deciso\",\n    \"declino\",\n    \"decollo\",\n    \"decreto\",\n    \"dedicato\",\n    \"definito\",\n    \"deforme\",\n    \"degno\",\n    \"delegare\",\n    \"delfino\",\n    \"delirio\",\n    \"delta\",\n    \"demenza\",\n    \"denotato\",\n    \"dentro\",\n    \"deposito\",\n    \"derapata\",\n    \"derivare\",\n    \"deroga\",\n    \"descritto\",\n    \"deserto\",\n    \"desiderio\",\n    \"desumere\",\n    \"detersivo\",\n    \"devoto\",\n    \"diametro\",\n    \"dicembre\",\n    \"diedro\",\n    \"difeso\",\n    \"diffuso\",\n    \"digerire\",\n    \"digitale\",\n    \"diluvio\",\n    \"dinamico\",\n    \"dinnanzi\",\n    \"dipinto\",\n    \"diploma\",\n    \"dipolo\",\n    \"diradare\",\n    \"dire\",\n    \"dirotto\",\n    \"dirupo\",\n    \"disagio\",\n    \"discreto\",\n    \"disfare\",\n    \"disgelo\",\n    \"disposto\",\n    \"distanza\",\n    \"disumano\",\n    \"dito\",\n    \"divano\",\n    \"divelto\",\n    \"dividere\",\n    \"divorato\",\n    \"doblone\",\n    \"docente\",\n    \"doganale\",\n    \"dogma\",\n    \"dolce\",\n    \"domato\",\n    \"domenica\",\n    \"dominare\",\n    \"dondolo\",\n    \"dono\",\n    \"dormire\",\n    \"dote\",\n    \"dottore\",\n    \"dovuto\",\n    \"dozzina\",\n    \"drago\",\n    \"druido\",\n    \"dubbio\",\n    \"dubitare\",\n    \"ducale\",\n    \"duna\",\n    \"duomo\",\n    \"duplice\",\n    \"duraturo\",\n    \"ebano\",\n    \"eccesso\",\n    \"ecco\",\n    \"eclissi\",\n    \"economia\",\n    \"edera\",\n    \"edicola\",\n    \"edile\",\n    \"editoria\",\n    \"educare\",\n    \"egemonia\",\n    \"egli\",\n    \"egoismo\",\n    \"egregio\",\n    \"elaborato\",\n    \"elargire\",\n    \"elegante\",\n    \"elencato\",\n    \"eletto\",\n    \"elevare\",\n    \"elfico\",\n    \"elica\",\n    \"elmo\",\n    \"elsa\",\n    \"eluso\",\n    \"emanato\",\n    \"emblema\",\n    \"emesso\",\n    \"emiro\",\n    \"emotivo\",\n    \"emozione\",\n    \"empirico\",\n    \"emulo\",\n    \"endemico\",\n    \"enduro\",\n    \"energia\",\n    \"enfasi\",\n    \"enoteca\",\n    \"entrare\",\n    \"enzima\",\n    \"epatite\",\n    \"epilogo\",\n    \"episodio\",\n    \"epocale\",\n    \"eppure\",\n    \"equatore\",\n    \"erario\",\n    \"erba\",\n    \"erboso\",\n    \"erede\",\n    \"eremita\",\n    \"erigere\",\n    \"ermetico\",\n    \"eroe\",\n    \"erosivo\",\n    \"errante\",\n    \"esagono\",\n    \"esame\",\n    \"esanime\",\n    \"esaudire\",\n    \"esca\",\n    \"esempio\",\n    \"esercito\",\n    \"esibito\",\n    \"esigente\",\n    \"esistere\",\n    \"esito\",\n    \"esofago\",\n    \"esortato\",\n    \"esoso\",\n    \"espanso\",\n    \"espresso\",\n    \"essenza\",\n    \"esso\",\n    \"esteso\",\n    \"estimare\",\n    \"estonia\",\n    \"estroso\",\n    \"esultare\",\n    \"etilico\",\n    \"etnico\",\n    \"etrusco\",\n    \"etto\",\n    \"euclideo\",\n    \"europa\",\n    \"evaso\",\n    \"evidenza\",\n    \"evitato\",\n    \"evoluto\",\n    \"evviva\",\n    \"fabbrica\",\n    \"faccenda\",\n    \"fachiro\",\n    \"falco\",\n    \"famiglia\",\n    \"fanale\",\n    \"fanfara\",\n    \"fango\",\n    \"fantasma\",\n    \"fare\",\n    \"farfalla\",\n    \"farinoso\",\n    \"farmaco\",\n    \"fascia\",\n    \"fastoso\",\n    \"fasullo\",\n    \"faticare\",\n    \"fato\",\n    \"favoloso\",\n    \"febbre\",\n    \"fecola\",\n    \"fede\",\n    \"fegato\",\n    \"felpa\",\n    \"feltro\",\n    \"femmina\",\n    \"fendere\",\n    \"fenomeno\",\n    \"fermento\",\n    \"ferro\",\n    \"fertile\",\n    \"fessura\",\n    \"festivo\",\n    \"fetta\",\n    \"feudo\",\n    \"fiaba\",\n    \"fiducia\",\n    \"fifa\",\n    \"figurato\",\n    \"filo\",\n    \"finanza\",\n    \"finestra\",\n    \"finire\",\n    \"fiore\",\n    \"fiscale\",\n    \"fisico\",\n    \"fiume\",\n    \"flacone\",\n    \"flamenco\",\n    \"flebo\",\n    \"flemma\",\n    \"florido\",\n    \"fluente\",\n    \"fluoro\",\n    \"fobico\",\n    \"focaccia\",\n    \"focoso\",\n    \"foderato\",\n    \"foglio\",\n    \"folata\",\n    \"folclore\",\n    \"folgore\",\n    \"fondente\",\n    \"fonetico\",\n    \"fonia\",\n    \"fontana\",\n    \"forbito\",\n    \"forchetta\",\n    \"foresta\",\n    \"formica\",\n    \"fornaio\",\n    \"foro\",\n    \"fortezza\",\n    \"forzare\",\n    \"fosfato\",\n    \"fosso\",\n    \"fracasso\",\n    \"frana\",\n    \"frassino\",\n    \"fratello\",\n    \"freccetta\",\n    \"frenata\",\n    \"fresco\",\n    \"frigo\",\n    \"frollino\",\n    \"fronde\",\n    \"frugale\",\n    \"frutta\",\n    \"fucilata\",\n    \"fucsia\",\n    \"fuggente\",\n    \"fulmine\",\n    \"fulvo\",\n    \"fumante\",\n    \"fumetto\",\n    \"fumoso\",\n    \"fune\",\n    \"funzione\",\n    \"fuoco\",\n    \"furbo\",\n    \"furgone\",\n    \"furore\",\n    \"fuso\",\n    \"futile\",\n    \"gabbiano\",\n    \"gaffe\",\n    \"galateo\",\n    \"gallina\",\n    \"galoppo\",\n    \"gambero\",\n    \"gamma\",\n    \"garanzia\",\n    \"garbo\",\n    \"garofano\",\n    \"garzone\",\n    \"gasdotto\",\n    \"gasolio\",\n    \"gastrico\",\n    \"gatto\",\n    \"gaudio\",\n    \"gazebo\",\n    \"gazzella\",\n    \"geco\",\n    \"gelatina\",\n    \"gelso\",\n    \"gemello\",\n    \"gemmato\",\n    \"gene\",\n    \"genitore\",\n    \"gennaio\",\n    \"genotipo\",\n    \"gergo\",\n    \"ghepardo\",\n    \"ghiaccio\",\n    \"ghisa\",\n    \"giallo\",\n    \"gilda\",\n    \"ginepro\",\n    \"giocare\",\n    \"gioiello\",\n    \"giorno\",\n    \"giove\",\n    \"girato\",\n    \"girone\",\n    \"gittata\",\n    \"giudizio\",\n    \"giurato\",\n    \"giusto\",\n    \"globulo\",\n    \"glutine\",\n    \"gnomo\",\n    \"gobba\",\n    \"golf\",\n    \"gomito\",\n    \"gommone\",\n    \"gonfio\",\n    \"gonna\",\n    \"governo\",\n    \"gracile\",\n    \"grado\",\n    \"grafico\",\n    \"grammo\",\n    \"grande\",\n    \"grattare\",\n    \"gravoso\",\n    \"grazia\",\n    \"greca\",\n    \"gregge\",\n    \"grifone\",\n    \"grigio\",\n    \"grinza\",\n    \"grotta\",\n    \"gruppo\",\n    \"guadagno\",\n    \"guaio\",\n    \"guanto\",\n    \"guardare\",\n    \"gufo\",\n    \"guidare\",\n    \"ibernato\",\n    \"icona\",\n    \"identico\",\n    \"idillio\",\n    \"idolo\",\n    \"idra\",\n    \"idrico\",\n    \"idrogeno\",\n    \"igiene\",\n    \"ignaro\",\n    \"ignorato\",\n    \"ilare\",\n    \"illeso\",\n    \"illogico\",\n    \"illudere\",\n    \"imballo\",\n    \"imbevuto\",\n    \"imbocco\",\n    \"imbuto\",\n    \"immane\",\n    \"immerso\",\n    \"immolato\",\n    \"impacco\",\n    \"impeto\",\n    \"impiego\",\n    \"importo\",\n    \"impronta\",\n    \"inalare\",\n    \"inarcare\",\n    \"inattivo\",\n    \"incanto\",\n    \"incendio\",\n    \"inchino\",\n    \"incisivo\",\n    \"incluso\",\n    \"incontro\",\n    \"incrocio\",\n    \"incubo\",\n    \"indagine\",\n    \"india\",\n    \"indole\",\n    \"inedito\",\n    \"infatti\",\n    \"infilare\",\n    \"inflitto\",\n    \"ingaggio\",\n    \"ingegno\",\n    \"inglese\",\n    \"ingordo\",\n    \"ingrosso\",\n    \"innesco\",\n    \"inodore\",\n    \"inoltrare\",\n    \"inondato\",\n    \"insano\",\n    \"insetto\",\n    \"insieme\",\n    \"insonnia\",\n    \"insulina\",\n    \"intasato\",\n    \"intero\",\n    \"intonaco\",\n    \"intuito\",\n    \"inumidire\",\n    \"invalido\",\n    \"invece\",\n    \"invito\",\n    \"iperbole\",\n    \"ipnotico\",\n    \"ipotesi\",\n    \"ippica\",\n    \"iride\",\n    \"irlanda\",\n    \"ironico\",\n    \"irrigato\",\n    \"irrorare\",\n    \"isolato\",\n    \"isotopo\",\n    \"isterico\",\n    \"istituto\",\n    \"istrice\",\n    \"italia\",\n    \"iterare\",\n    \"labbro\",\n    \"labirinto\",\n    \"lacca\",\n    \"lacerato\",\n    \"lacrima\",\n    \"lacuna\",\n    \"laddove\",\n    \"lago\",\n    \"lampo\",\n    \"lancetta\",\n    \"lanterna\",\n    \"lardoso\",\n    \"larga\",\n    \"laringe\",\n    \"lastra\",\n    \"latenza\",\n    \"latino\",\n    \"lattuga\",\n    \"lavagna\",\n    \"lavoro\",\n    \"legale\",\n    \"leggero\",\n    \"lembo\",\n    \"lentezza\",\n    \"lenza\",\n    \"leone\",\n    \"lepre\",\n    \"lesivo\",\n    \"lessato\",\n    \"lesto\",\n    \"letterale\",\n    \"leva\",\n    \"levigato\",\n    \"libero\",\n    \"lido\",\n    \"lievito\",\n    \"lilla\",\n    \"limatura\",\n    \"limitare\",\n    \"limpido\",\n    \"lineare\",\n    \"lingua\",\n    \"liquido\",\n    \"lira\",\n    \"lirica\",\n    \"lisca\",\n    \"lite\",\n    \"litigio\",\n    \"livrea\",\n    \"locanda\",\n    \"lode\",\n    \"logica\",\n    \"lombare\",\n    \"londra\",\n    \"longevo\",\n    \"loquace\",\n    \"lorenzo\",\n    \"loto\",\n    \"lotteria\",\n    \"luce\",\n    \"lucidato\",\n    \"lumaca\",\n    \"luminoso\",\n    \"lungo\",\n    \"lupo\",\n    \"luppolo\",\n    \"lusinga\",\n    \"lusso\",\n    \"lutto\",\n    \"macabro\",\n    \"macchina\",\n    \"macero\",\n    \"macinato\",\n    \"madama\",\n    \"magico\",\n    \"maglia\",\n    \"magnete\",\n    \"magro\",\n    \"maiolica\",\n    \"malafede\",\n    \"malgrado\",\n    \"malinteso\",\n    \"malsano\",\n    \"malto\",\n    \"malumore\",\n    \"mana\",\n    \"mancia\",\n    \"mandorla\",\n    \"mangiare\",\n    \"manifesto\",\n    \"mannaro\",\n    \"manovra\",\n    \"mansarda\",\n    \"mantide\",\n    \"manubrio\",\n    \"mappa\",\n    \"maratona\",\n    \"marcire\",\n    \"maretta\",\n    \"marmo\",\n    \"marsupio\",\n    \"maschera\",\n    \"massaia\",\n    \"mastino\",\n    \"materasso\",\n    \"matricola\",\n    \"mattone\",\n    \"maturo\",\n    \"mazurca\",\n    \"meandro\",\n    \"meccanico\",\n    \"mecenate\",\n    \"medesimo\",\n    \"meditare\",\n    \"mega\",\n    \"melassa\",\n    \"melis\",\n    \"melodia\",\n    \"meninge\",\n    \"meno\",\n    \"mensola\",\n    \"mercurio\",\n    \"merenda\",\n    \"merlo\",\n    \"meschino\",\n    \"mese\",\n    \"messere\",\n    \"mestolo\",\n    \"metallo\",\n    \"metodo\",\n    \"mettere\",\n    \"miagolare\",\n    \"mica\",\n    \"micelio\",\n    \"michele\",\n    \"microbo\",\n    \"midollo\",\n    \"miele\",\n    \"migliore\",\n    \"milano\",\n    \"milite\",\n    \"mimosa\",\n    \"minerale\",\n    \"mini\",\n    \"minore\",\n    \"mirino\",\n    \"mirtillo\",\n    \"miscela\",\n    \"missiva\",\n    \"misto\",\n    \"misurare\",\n    \"mitezza\",\n    \"mitigare\",\n    \"mitra\",\n    \"mittente\",\n    \"mnemonico\",\n    \"modello\",\n    \"modifica\",\n    \"modulo\",\n    \"mogano\",\n    \"mogio\",\n    \"mole\",\n    \"molosso\",\n    \"monastero\",\n    \"monco\",\n    \"mondina\",\n    \"monetario\",\n    \"monile\",\n    \"monotono\",\n    \"monsone\",\n    \"montato\",\n    \"monviso\",\n    \"mora\",\n    \"mordere\",\n    \"morsicato\",\n    \"mostro\",\n    \"motivato\",\n    \"motosega\",\n    \"motto\",\n    \"movenza\",\n    \"movimento\",\n    \"mozzo\",\n    \"mucca\",\n    \"mucosa\",\n    \"muffa\",\n    \"mughetto\",\n    \"mugnaio\",\n    \"mulatto\",\n    \"mulinello\",\n    \"multiplo\",\n    \"mummia\",\n    \"munto\",\n    \"muovere\",\n    \"murale\",\n    \"musa\",\n    \"muscolo\",\n    \"musica\",\n    \"mutevole\",\n    \"muto\",\n    \"nababbo\",\n    \"nafta\",\n    \"nanometro\",\n    \"narciso\",\n    \"narice\",\n    \"narrato\",\n    \"nascere\",\n    \"nastrare\",\n    \"naturale\",\n    \"nautica\",\n    \"naviglio\",\n    \"nebulosa\",\n    \"necrosi\",\n    \"negativo\",\n    \"negozio\",\n    \"nemmeno\",\n    \"neofita\",\n    \"neretto\",\n    \"nervo\",\n    \"nessuno\",\n    \"nettuno\",\n    \"neutrale\",\n    \"neve\",\n    \"nevrotico\",\n    \"nicchia\",\n    \"ninfa\",\n    \"nitido\",\n    \"nobile\",\n    \"nocivo\",\n    \"nodo\",\n    \"nome\",\n    \"nomina\",\n    \"nordico\",\n    \"normale\",\n    \"norvegese\",\n    \"nostrano\",\n    \"notare\",\n    \"notizia\",\n    \"notturno\",\n    \"novella\",\n    \"nucleo\",\n    \"nulla\",\n    \"numero\",\n    \"nuovo\",\n    \"nutrire\",\n    \"nuvola\",\n    \"nuziale\",\n    \"oasi\",\n    \"obbedire\",\n    \"obbligo\",\n    \"obelisco\",\n    \"oblio\",\n    \"obolo\",\n    \"obsoleto\",\n    \"occasione\",\n    \"occhio\",\n    \"occidente\",\n    \"occorrere\",\n    \"occultare\",\n    \"ocra\",\n    \"oculato\",\n    \"odierno\",\n    \"odorare\",\n    \"offerta\",\n    \"offrire\",\n    \"offuscato\",\n    \"oggetto\",\n    \"oggi\",\n    \"ognuno\",\n    \"olandese\",\n    \"olfatto\",\n    \"oliato\",\n    \"oliva\",\n    \"ologramma\",\n    \"oltre\",\n    \"omaggio\",\n    \"ombelico\",\n    \"ombra\",\n    \"omega\",\n    \"omissione\",\n    \"ondoso\",\n    \"onere\",\n    \"onice\",\n    \"onnivoro\",\n    \"onorevole\",\n    \"onta\",\n    \"operato\",\n    \"opinione\",\n    \"opposto\",\n    \"oracolo\",\n    \"orafo\",\n    \"ordine\",\n    \"orecchino\",\n    \"orefice\",\n    \"orfano\",\n    \"organico\",\n    \"origine\",\n    \"orizzonte\",\n    \"orma\",\n    \"ormeggio\",\n    \"ornativo\",\n    \"orologio\",\n    \"orrendo\",\n    \"orribile\",\n    \"ortensia\",\n    \"ortica\",\n    \"orzata\",\n    \"orzo\",\n    \"osare\",\n    \"oscurare\",\n    \"osmosi\",\n    \"ospedale\",\n    \"ospite\",\n    \"ossa\",\n    \"ossidare\",\n    \"ostacolo\",\n    \"oste\",\n    \"otite\",\n    \"otre\",\n    \"ottagono\",\n    \"ottimo\",\n    \"ottobre\",\n    \"ovale\",\n    \"ovest\",\n    \"ovino\",\n    \"oviparo\",\n    \"ovocito\",\n    \"ovunque\",\n    \"ovviare\",\n    \"ozio\",\n    \"pacchetto\",\n    \"pace\",\n    \"pacifico\",\n    \"padella\",\n    \"padrone\",\n    \"paese\",\n    \"paga\",\n    \"pagina\",\n    \"palazzina\",\n    \"palesare\",\n    \"pallido\",\n    \"palo\",\n    \"palude\",\n    \"pandoro\",\n    \"pannello\",\n    \"paolo\",\n    \"paonazzo\",\n    \"paprica\",\n    \"parabola\",\n    \"parcella\",\n    \"parere\",\n    \"pargolo\",\n    \"pari\",\n    \"parlato\",\n    \"parola\",\n    \"partire\",\n    \"parvenza\",\n    \"parziale\",\n    \"passivo\",\n    \"pasticca\",\n    \"patacca\",\n    \"patologia\",\n    \"pattume\",\n    \"pavone\",\n    \"peccato\",\n    \"pedalare\",\n    \"pedonale\",\n    \"peggio\",\n    \"peloso\",\n    \"penare\",\n    \"pendice\",\n    \"penisola\",\n    \"pennuto\",\n    \"penombra\",\n    \"pensare\",\n    \"pentola\",\n    \"pepe\",\n    \"pepita\",\n    \"perbene\",\n    \"percorso\",\n    \"perdonato\",\n    \"perforare\",\n    \"pergamena\",\n    \"periodo\",\n    \"permesso\",\n    \"perno\",\n    \"perplesso\",\n    \"persuaso\",\n    \"pertugio\",\n    \"pervaso\",\n    \"pesatore\",\n    \"pesista\",\n    \"peso\",\n    \"pestifero\",\n    \"petalo\",\n    \"pettine\",\n    \"petulante\",\n    \"pezzo\",\n    \"piacere\",\n    \"pianta\",\n    \"piattino\",\n    \"piccino\",\n    \"picozza\",\n    \"piega\",\n    \"pietra\",\n    \"piffero\",\n    \"pigiama\",\n    \"pigolio\",\n    \"pigro\",\n    \"pila\",\n    \"pilifero\",\n    \"pillola\",\n    \"pilota\",\n    \"pimpante\",\n    \"pineta\",\n    \"pinna\",\n    \"pinolo\",\n    \"pioggia\",\n    \"piombo\",\n    \"piramide\",\n    \"piretico\",\n    \"pirite\",\n    \"pirolisi\",\n    \"pitone\",\n    \"pizzico\",\n    \"placebo\",\n    \"planare\",\n    \"plasma\",\n    \"platano\",\n    \"plenario\",\n    \"pochezza\",\n    \"poderoso\",\n    \"podismo\",\n    \"poesia\",\n    \"poggiare\",\n    \"polenta\",\n    \"poligono\",\n    \"pollice\",\n    \"polmonite\",\n    \"polpetta\",\n    \"polso\",\n    \"poltrona\",\n    \"polvere\",\n    \"pomice\",\n    \"pomodoro\",\n    \"ponte\",\n    \"popoloso\",\n    \"porfido\",\n    \"poroso\",\n    \"porpora\",\n    \"porre\",\n    \"portata\",\n    \"posa\",\n    \"positivo\",\n    \"possesso\",\n    \"postulato\",\n    \"potassio\",\n    \"potere\",\n    \"pranzo\",\n    \"prassi\",\n    \"pratica\",\n    \"precluso\",\n    \"predica\",\n    \"prefisso\",\n    \"pregiato\",\n    \"prelievo\",\n    \"premere\",\n    \"prenotare\",\n    \"preparato\",\n    \"presenza\",\n    \"pretesto\",\n    \"prevalso\",\n    \"prima\",\n    \"principe\",\n    \"privato\",\n    \"problema\",\n    \"procura\",\n    \"produrre\",\n    \"profumo\",\n    \"progetto\",\n    \"prolunga\",\n    \"promessa\",\n    \"pronome\",\n    \"proposta\",\n    \"proroga\",\n    \"proteso\",\n    \"prova\",\n    \"prudente\",\n    \"prugna\",\n    \"prurito\",\n    \"psiche\",\n    \"pubblico\",\n    \"pudica\",\n    \"pugilato\",\n    \"pugno\",\n    \"pulce\",\n    \"pulito\",\n    \"pulsante\",\n    \"puntare\",\n    \"pupazzo\",\n    \"pupilla\",\n    \"puro\",\n    \"quadro\",\n    \"qualcosa\",\n    \"quasi\",\n    \"querela\",\n    \"quota\",\n    \"raccolto\",\n    \"raddoppio\",\n    \"radicale\",\n    \"radunato\",\n    \"raffica\",\n    \"ragazzo\",\n    \"ragione\",\n    \"ragno\",\n    \"ramarro\",\n    \"ramingo\",\n    \"ramo\",\n    \"randagio\",\n    \"rantolare\",\n    \"rapato\",\n    \"rapina\",\n    \"rappreso\",\n    \"rasatura\",\n    \"raschiato\",\n    \"rasente\",\n    \"rassegna\",\n    \"rastrello\",\n    \"rata\",\n    \"ravveduto\",\n    \"reale\",\n    \"recepire\",\n    \"recinto\",\n    \"recluta\",\n    \"recondito\",\n    \"recupero\",\n    \"reddito\",\n    \"redimere\",\n    \"regalato\",\n    \"registro\",\n    \"regola\",\n    \"regresso\",\n    \"relazione\",\n    \"remare\",\n    \"remoto\",\n    \"renna\",\n    \"replica\",\n    \"reprimere\",\n    \"reputare\",\n    \"resa\",\n    \"residente\",\n    \"responso\",\n    \"restauro\",\n    \"rete\",\n    \"retina\",\n    \"retorica\",\n    \"rettifica\",\n    \"revocato\",\n    \"riassunto\",\n    \"ribadire\",\n    \"ribelle\",\n    \"ribrezzo\",\n    \"ricarica\",\n    \"ricco\",\n    \"ricevere\",\n    \"riciclato\",\n    \"ricordo\",\n    \"ricreduto\",\n    \"ridicolo\",\n    \"ridurre\",\n    \"rifasare\",\n    \"riflesso\",\n    \"riforma\",\n    \"rifugio\",\n    \"rigare\",\n    \"rigettato\",\n    \"righello\",\n    \"rilassato\",\n    \"rilevato\",\n    \"rimanere\",\n    \"rimbalzo\",\n    \"rimedio\",\n    \"rimorchio\",\n    \"rinascita\",\n    \"rincaro\",\n    \"rinforzo\",\n    \"rinnovo\",\n    \"rinomato\",\n    \"rinsavito\",\n    \"rintocco\",\n    \"rinuncia\",\n    \"rinvenire\",\n    \"riparato\",\n    \"ripetuto\",\n    \"ripieno\",\n    \"riportare\",\n    \"ripresa\",\n    \"ripulire\",\n    \"risata\",\n    \"rischio\",\n    \"riserva\",\n    \"risibile\",\n    \"riso\",\n    \"rispetto\",\n    \"ristoro\",\n    \"risultato\",\n    \"risvolto\",\n    \"ritardo\",\n    \"ritegno\",\n    \"ritmico\",\n    \"ritrovo\",\n    \"riunione\",\n    \"riva\",\n    \"riverso\",\n    \"rivincita\",\n    \"rivolto\",\n    \"rizoma\",\n    \"roba\",\n    \"robotico\",\n    \"robusto\",\n    \"roccia\",\n    \"roco\",\n    \"rodaggio\",\n    \"rodere\",\n    \"roditore\",\n    \"rogito\",\n    \"rollio\",\n    \"romantico\",\n    \"rompere\",\n    \"ronzio\",\n    \"rosolare\",\n    \"rospo\",\n    \"rotante\",\n    \"rotondo\",\n    \"rotula\",\n    \"rovescio\",\n    \"rubizzo\",\n    \"rubrica\",\n    \"ruga\",\n    \"rullino\",\n    \"rumine\",\n    \"rumoroso\",\n    \"ruolo\",\n    \"rupe\",\n    \"russare\",\n    \"rustico\",\n    \"sabato\",\n    \"sabbiare\",\n    \"sabotato\",\n    \"sagoma\",\n    \"salasso\",\n    \"saldatura\",\n    \"salgemma\",\n    \"salivare\",\n    \"salmone\",\n    \"salone\",\n    \"saltare\",\n    \"saluto\",\n    \"salvo\",\n    \"sapere\",\n    \"sapido\",\n    \"saporito\",\n    \"saraceno\",\n    \"sarcasmo\",\n    \"sarto\",\n    \"sassoso\",\n    \"satellite\",\n    \"satira\",\n    \"satollo\",\n    \"saturno\",\n    \"savana\",\n    \"savio\",\n    \"saziato\",\n    \"sbadiglio\",\n    \"sbalzo\",\n    \"sbancato\",\n    \"sbarra\",\n    \"sbattere\",\n    \"sbavare\",\n    \"sbendare\",\n    \"sbirciare\",\n    \"sbloccato\",\n    \"sbocciato\",\n    \"sbrinare\",\n    \"sbruffone\",\n    \"sbuffare\",\n    \"scabroso\",\n    \"scadenza\",\n    \"scala\",\n    \"scambiare\",\n    \"scandalo\",\n    \"scapola\",\n    \"scarso\",\n    \"scatenare\",\n    \"scavato\",\n    \"scelto\",\n    \"scenico\",\n    \"scettro\",\n    \"scheda\",\n    \"schiena\",\n    \"sciarpa\",\n    \"scienza\",\n    \"scindere\",\n    \"scippo\",\n    \"sciroppo\",\n    \"scivolo\",\n    \"sclerare\",\n    \"scodella\",\n    \"scolpito\",\n    \"scomparto\",\n    \"sconforto\",\n    \"scoprire\",\n    \"scorta\",\n    \"scossone\",\n    \"scozzese\",\n    \"scriba\",\n    \"scrollare\",\n    \"scrutinio\",\n    \"scuderia\",\n    \"scultore\",\n    \"scuola\",\n    \"scuro\",\n    \"scusare\",\n    \"sdebitare\",\n    \"sdoganare\",\n    \"seccatura\",\n    \"secondo\",\n    \"sedano\",\n    \"seggiola\",\n    \"segnalato\",\n    \"segregato\",\n    \"seguito\",\n    \"selciato\",\n    \"selettivo\",\n    \"sella\",\n    \"selvaggio\",\n    \"semaforo\",\n    \"sembrare\",\n    \"seme\",\n    \"seminato\",\n    \"sempre\",\n    \"senso\",\n    \"sentire\",\n    \"sepolto\",\n    \"sequenza\",\n    \"serata\",\n    \"serbato\",\n    \"sereno\",\n    \"serio\",\n    \"serpente\",\n    \"serraglio\",\n    \"servire\",\n    \"sestina\",\n    \"setola\",\n    \"settimana\",\n    \"sfacelo\",\n    \"sfaldare\",\n    \"sfamato\",\n    \"sfarzoso\",\n    \"sfaticato\",\n    \"sfera\",\n    \"sfida\",\n    \"sfilato\",\n    \"sfinge\",\n    \"sfocato\",\n    \"sfoderare\",\n    \"sfogo\",\n    \"sfoltire\",\n    \"sforzato\",\n    \"sfratto\",\n    \"sfruttato\",\n    \"sfuggito\",\n    \"sfumare\",\n    \"sfuso\",\n    \"sgabello\",\n    \"sgarbato\",\n    \"sgonfiare\",\n    \"sgorbio\",\n    \"sgrassato\",\n    \"sguardo\",\n    \"sibilo\",\n    \"siccome\",\n    \"sierra\",\n    \"sigla\",\n    \"signore\",\n    \"silenzio\",\n    \"sillaba\",\n    \"simbolo\",\n    \"simpatico\",\n    \"simulato\",\n    \"sinfonia\",\n    \"singolo\",\n    \"sinistro\",\n    \"sino\",\n    \"sintesi\",\n    \"sinusoide\",\n    \"sipario\",\n    \"sisma\",\n    \"sistole\",\n    \"situato\",\n    \"slitta\",\n    \"slogatura\",\n    \"sloveno\",\n    \"smarrito\",\n    \"smemorato\",\n    \"smentito\",\n    \"smeraldo\",\n    \"smilzo\",\n    \"smontare\",\n    \"smottato\",\n    \"smussato\",\n    \"snellire\",\n    \"snervato\",\n    \"snodo\",\n    \"sobbalzo\",\n    \"sobrio\",\n    \"soccorso\",\n    \"sociale\",\n    \"sodale\",\n    \"soffitto\",\n    \"sogno\",\n    \"soldato\",\n    \"solenne\",\n    \"solido\",\n    \"sollazzo\",\n    \"solo\",\n    \"solubile\",\n    \"solvente\",\n    \"somatico\",\n    \"somma\",\n    \"sonda\",\n    \"sonetto\",\n    \"sonnifero\",\n    \"sopire\",\n    \"soppeso\",\n    \"sopra\",\n    \"sorgere\",\n    \"sorpasso\",\n    \"sorriso\",\n    \"sorso\",\n    \"sorteggio\",\n    \"sorvolato\",\n    \"sospiro\",\n    \"sosta\",\n    \"sottile\",\n    \"spada\",\n    \"spalla\",\n    \"spargere\",\n    \"spatola\",\n    \"spavento\",\n    \"spazzola\",\n    \"specie\",\n    \"spedire\",\n    \"spegnere\",\n    \"spelatura\",\n    \"speranza\",\n    \"spessore\",\n    \"spettrale\",\n    \"spezzato\",\n    \"spia\",\n    \"spigoloso\",\n    \"spillato\",\n    \"spinoso\",\n    \"spirale\",\n    \"splendido\",\n    \"sportivo\",\n    \"sposo\",\n    \"spranga\",\n    \"sprecare\",\n    \"spronato\",\n    \"spruzzo\",\n    \"spuntino\",\n    \"squillo\",\n    \"sradicare\",\n    \"srotolato\",\n    \"stabile\",\n    \"stacco\",\n    \"staffa\",\n    \"stagnare\",\n    \"stampato\",\n    \"stantio\",\n    \"starnuto\",\n    \"stasera\",\n    \"statuto\",\n    \"stelo\",\n    \"steppa\",\n    \"sterzo\",\n    \"stiletto\",\n    \"stima\",\n    \"stirpe\",\n    \"stivale\",\n    \"stizzoso\",\n    \"stonato\",\n    \"storico\",\n    \"strappo\",\n    \"stregato\",\n    \"stridulo\",\n    \"strozzare\",\n    \"strutto\",\n    \"stuccare\",\n    \"stufo\",\n    \"stupendo\",\n    \"subentro\",\n    \"succoso\",\n    \"sudore\",\n    \"suggerito\",\n    \"sugo\",\n    \"sultano\",\n    \"suonare\",\n    \"superbo\",\n    \"supporto\",\n    \"surgelato\",\n    \"surrogato\",\n    \"sussurro\",\n    \"sutura\",\n    \"svagare\",\n    \"svedese\",\n    \"sveglio\",\n    \"svelare\",\n    \"svenuto\",\n    \"svezia\",\n    \"sviluppo\",\n    \"svista\",\n    \"svizzera\",\n    \"svolta\",\n    \"svuotare\",\n    \"tabacco\",\n    \"tabulato\",\n    \"tacciare\",\n    \"taciturno\",\n    \"tale\",\n    \"talismano\",\n    \"tampone\",\n    \"tannino\",\n    \"tara\",\n    \"tardivo\",\n    \"targato\",\n    \"tariffa\",\n    \"tarpare\",\n    \"tartaruga\",\n    \"tasto\",\n    \"tattico\",\n    \"taverna\",\n    \"tavolata\",\n    \"tazza\",\n    \"teca\",\n    \"tecnico\",\n    \"telefono\",\n    \"temerario\",\n    \"tempo\",\n    \"temuto\",\n    \"tendone\",\n    \"tenero\",\n    \"tensione\",\n    \"tentacolo\",\n    \"teorema\",\n    \"terme\",\n    \"terrazzo\",\n    \"terzetto\",\n    \"tesi\",\n    \"tesserato\",\n    \"testato\",\n    \"tetro\",\n    \"tettoia\",\n    \"tifare\",\n    \"tigella\",\n    \"timbro\",\n    \"tinto\",\n    \"tipico\",\n    \"tipografo\",\n    \"tiraggio\",\n    \"tiro\",\n    \"titanio\",\n    \"titolo\",\n    \"titubante\",\n    \"tizio\",\n    \"tizzone\",\n    \"toccare\",\n    \"tollerare\",\n    \"tolto\",\n    \"tombola\",\n    \"tomo\",\n    \"tonfo\",\n    \"tonsilla\",\n    \"topazio\",\n    \"topologia\",\n    \"toppa\",\n    \"torba\",\n    \"tornare\",\n    \"torrone\",\n    \"tortora\",\n    \"toscano\",\n    \"tossire\",\n    \"tostatura\",\n    \"totano\",\n    \"trabocco\",\n    \"trachea\",\n    \"trafila\",\n    \"tragedia\",\n    \"tralcio\",\n    \"tramonto\",\n    \"transito\",\n    \"trapano\",\n    \"trarre\",\n    \"trasloco\",\n    \"trattato\",\n    \"trave\",\n    \"treccia\",\n    \"tremolio\",\n    \"trespolo\",\n    \"tributo\",\n    \"tricheco\",\n    \"trifoglio\",\n    \"trillo\",\n    \"trincea\",\n    \"trio\",\n    \"tristezza\",\n    \"triturato\",\n    \"trivella\",\n    \"tromba\",\n    \"trono\",\n    \"troppo\",\n    \"trottola\",\n    \"trovare\",\n    \"truccato\",\n    \"tubatura\",\n    \"tuffato\",\n    \"tulipano\",\n    \"tumulto\",\n    \"tunisia\",\n    \"turbare\",\n    \"turchino\",\n    \"tuta\",\n    \"tutela\",\n    \"ubicato\",\n    \"uccello\",\n    \"uccisore\",\n    \"udire\",\n    \"uditivo\",\n    \"uffa\",\n    \"ufficio\",\n    \"uguale\",\n    \"ulisse\",\n    \"ultimato\",\n    \"umano\",\n    \"umile\",\n    \"umorismo\",\n    \"uncinetto\",\n    \"ungere\",\n    \"ungherese\",\n    \"unicorno\",\n    \"unificato\",\n    \"unisono\",\n    \"unitario\",\n    \"unte\",\n    \"uovo\",\n    \"upupa\",\n    \"uragano\",\n    \"urgenza\",\n    \"urlo\",\n    \"usanza\",\n    \"usato\",\n    \"uscito\",\n    \"usignolo\",\n    \"usuraio\",\n    \"utensile\",\n    \"utilizzo\",\n    \"utopia\",\n    \"vacante\",\n    \"vaccinato\",\n    \"vagabondo\",\n    \"vagliato\",\n    \"valanga\",\n    \"valgo\",\n    \"valico\",\n    \"valletta\",\n    \"valoroso\",\n    \"valutare\",\n    \"valvola\",\n    \"vampata\",\n    \"vangare\",\n    \"vanitoso\",\n    \"vano\",\n    \"vantaggio\",\n    \"vanvera\",\n    \"vapore\",\n    \"varano\",\n    \"varcato\",\n    \"variante\",\n    \"vasca\",\n    \"vedetta\",\n    \"vedova\",\n    \"veduto\",\n    \"vegetale\",\n    \"veicolo\",\n    \"velcro\",\n    \"velina\",\n    \"velluto\",\n    \"veloce\",\n    \"venato\",\n    \"vendemmia\",\n    \"vento\",\n    \"verace\",\n    \"verbale\",\n    \"vergogna\",\n    \"verifica\",\n    \"vero\",\n    \"verruca\",\n    \"verticale\",\n    \"vescica\",\n    \"vessillo\",\n    \"vestale\",\n    \"veterano\",\n    \"vetrina\",\n    \"vetusto\",\n    \"viandante\",\n    \"vibrante\",\n    \"vicenda\",\n    \"vichingo\",\n    \"vicinanza\",\n    \"vidimare\",\n    \"vigilia\",\n    \"vigneto\",\n    \"vigore\",\n    \"vile\",\n    \"villano\",\n    \"vimini\",\n    \"vincitore\",\n    \"viola\",\n    \"vipera\",\n    \"virgola\",\n    \"virologo\",\n    \"virulento\",\n    \"viscoso\",\n    \"visione\",\n    \"vispo\",\n    \"vissuto\",\n    \"visura\",\n    \"vita\",\n    \"vitello\",\n    \"vittima\",\n    \"vivanda\",\n    \"vivido\",\n    \"viziare\",\n    \"voce\",\n    \"voga\",\n    \"volatile\",\n    \"volere\",\n    \"volpe\",\n    \"voragine\",\n    \"vulcano\",\n    \"zampogna\",\n    \"zanna\",\n    \"zappato\",\n    \"zattera\",\n    \"zavorra\",\n    \"zefiro\",\n    \"zelante\",\n    \"zelo\",\n    \"zenzero\",\n    \"zerbino\",\n    \"zibetto\",\n    \"zinco\",\n    \"zircone\",\n    \"zitto\",\n    \"zolla\",\n    \"zotico\",\n    \"zucchero\",\n    \"zufolo\",\n    \"zulu\",\n    \"zuppa\"\n]\n","module.exports=[\n    \"abaisser\",\n    \"abandon\",\n    \"abdiquer\",\n    \"abeille\",\n    \"abolir\",\n    \"aborder\",\n    \"aboutir\",\n    \"aboyer\",\n    \"abrasif\",\n    \"abreuver\",\n    \"abriter\",\n    \"abroger\",\n    \"abrupt\",\n    \"absence\",\n    \"absolu\",\n    \"absurde\",\n    \"abusif\",\n    \"abyssal\",\n    \"académie\",\n    \"acajou\",\n    \"acarien\",\n    \"accabler\",\n    \"accepter\",\n    \"acclamer\",\n    \"accolade\",\n    \"accroche\",\n    \"accuser\",\n    \"acerbe\",\n    \"achat\",\n    \"acheter\",\n    \"aciduler\",\n    \"acier\",\n    \"acompte\",\n    \"acquérir\",\n    \"acronyme\",\n    \"acteur\",\n    \"actif\",\n    \"actuel\",\n    \"adepte\",\n    \"adéquat\",\n    \"adhésif\",\n    \"adjectif\",\n    \"adjuger\",\n    \"admettre\",\n    \"admirer\",\n    \"adopter\",\n    \"adorer\",\n    \"adoucir\",\n    \"adresse\",\n    \"adroit\",\n    \"adulte\",\n    \"adverbe\",\n    \"aérer\",\n    \"aéronef\",\n    \"affaire\",\n    \"affecter\",\n    \"affiche\",\n    \"affreux\",\n    \"affubler\",\n    \"agacer\",\n    \"agencer\",\n    \"agile\",\n    \"agiter\",\n    \"agrafer\",\n    \"agréable\",\n    \"agrume\",\n    \"aider\",\n    \"aiguille\",\n    \"ailier\",\n    \"aimable\",\n    \"aisance\",\n    \"ajouter\",\n    \"ajuster\",\n    \"alarmer\",\n    \"alchimie\",\n    \"alerte\",\n    \"algèbre\",\n    \"algue\",\n    \"aliéner\",\n    \"aliment\",\n    \"alléger\",\n    \"alliage\",\n    \"allouer\",\n    \"allumer\",\n    \"alourdir\",\n    \"alpaga\",\n    \"altesse\",\n    \"alvéole\",\n    \"amateur\",\n    \"ambigu\",\n    \"ambre\",\n    \"aménager\",\n    \"amertume\",\n    \"amidon\",\n    \"amiral\",\n    \"amorcer\",\n    \"amour\",\n    \"amovible\",\n    \"amphibie\",\n    \"ampleur\",\n    \"amusant\",\n    \"analyse\",\n    \"anaphore\",\n    \"anarchie\",\n    \"anatomie\",\n    \"ancien\",\n    \"anéantir\",\n    \"angle\",\n    \"angoisse\",\n    \"anguleux\",\n    \"animal\",\n    \"annexer\",\n    \"annonce\",\n    \"annuel\",\n    \"anodin\",\n    \"anomalie\",\n    \"anonyme\",\n    \"anormal\",\n    \"antenne\",\n    \"antidote\",\n    \"anxieux\",\n    \"apaiser\",\n    \"apéritif\",\n    \"aplanir\",\n    \"apologie\",\n    \"appareil\",\n    \"appeler\",\n    \"apporter\",\n    \"appuyer\",\n    \"aquarium\",\n    \"aqueduc\",\n    \"arbitre\",\n    \"arbuste\",\n    \"ardeur\",\n    \"ardoise\",\n    \"argent\",\n    \"arlequin\",\n    \"armature\",\n    \"armement\",\n    \"armoire\",\n    \"armure\",\n    \"arpenter\",\n    \"arracher\",\n    \"arriver\",\n    \"arroser\",\n    \"arsenic\",\n    \"artériel\",\n    \"article\",\n    \"aspect\",\n    \"asphalte\",\n    \"aspirer\",\n    \"assaut\",\n    \"asservir\",\n    \"assiette\",\n    \"associer\",\n    \"assurer\",\n    \"asticot\",\n    \"astre\",\n    \"astuce\",\n    \"atelier\",\n    \"atome\",\n    \"atrium\",\n    \"atroce\",\n    \"attaque\",\n    \"attentif\",\n    \"attirer\",\n    \"attraper\",\n    \"aubaine\",\n    \"auberge\",\n    \"audace\",\n    \"audible\",\n    \"augurer\",\n    \"aurore\",\n    \"automne\",\n    \"autruche\",\n    \"avaler\",\n    \"avancer\",\n    \"avarice\",\n    \"avenir\",\n    \"averse\",\n    \"aveugle\",\n    \"aviateur\",\n    \"avide\",\n    \"avion\",\n    \"aviser\",\n    \"avoine\",\n    \"avouer\",\n    \"avril\",\n    \"axial\",\n    \"axiome\",\n    \"badge\",\n    \"bafouer\",\n    \"bagage\",\n    \"baguette\",\n    \"baignade\",\n    \"balancer\",\n    \"balcon\",\n    \"baleine\",\n    \"balisage\",\n    \"bambin\",\n    \"bancaire\",\n    \"bandage\",\n    \"banlieue\",\n    \"bannière\",\n    \"banquier\",\n    \"barbier\",\n    \"baril\",\n    \"baron\",\n    \"barque\",\n    \"barrage\",\n    \"bassin\",\n    \"bastion\",\n    \"bataille\",\n    \"bateau\",\n    \"batterie\",\n    \"baudrier\",\n    \"bavarder\",\n    \"belette\",\n    \"bélier\",\n    \"belote\",\n    \"bénéfice\",\n    \"berceau\",\n    \"berger\",\n    \"berline\",\n    \"bermuda\",\n    \"besace\",\n    \"besogne\",\n    \"bétail\",\n    \"beurre\",\n    \"biberon\",\n    \"bicycle\",\n    \"bidule\",\n    \"bijou\",\n    \"bilan\",\n    \"bilingue\",\n    \"billard\",\n    \"binaire\",\n    \"biologie\",\n    \"biopsie\",\n    \"biotype\",\n    \"biscuit\",\n    \"bison\",\n    \"bistouri\",\n    \"bitume\",\n    \"bizarre\",\n    \"blafard\",\n    \"blague\",\n    \"blanchir\",\n    \"blessant\",\n    \"blinder\",\n    \"blond\",\n    \"bloquer\",\n    \"blouson\",\n    \"bobard\",\n    \"bobine\",\n    \"boire\",\n    \"boiser\",\n    \"bolide\",\n    \"bonbon\",\n    \"bondir\",\n    \"bonheur\",\n    \"bonifier\",\n    \"bonus\",\n    \"bordure\",\n    \"borne\",\n    \"botte\",\n    \"boucle\",\n    \"boueux\",\n    \"bougie\",\n    \"boulon\",\n    \"bouquin\",\n    \"bourse\",\n    \"boussole\",\n    \"boutique\",\n    \"boxeur\",\n    \"branche\",\n    \"brasier\",\n    \"brave\",\n    \"brebis\",\n    \"brèche\",\n    \"breuvage\",\n    \"bricoler\",\n    \"brigade\",\n    \"brillant\",\n    \"brioche\",\n    \"brique\",\n    \"brochure\",\n    \"broder\",\n    \"bronzer\",\n    \"brousse\",\n    \"broyeur\",\n    \"brume\",\n    \"brusque\",\n    \"brutal\",\n    \"bruyant\",\n    \"buffle\",\n    \"buisson\",\n    \"bulletin\",\n    \"bureau\",\n    \"burin\",\n    \"bustier\",\n    \"butiner\",\n    \"butoir\",\n    \"buvable\",\n    \"buvette\",\n    \"cabanon\",\n    \"cabine\",\n    \"cachette\",\n    \"cadeau\",\n    \"cadre\",\n    \"caféine\",\n    \"caillou\",\n    \"caisson\",\n    \"calculer\",\n    \"calepin\",\n    \"calibre\",\n    \"calmer\",\n    \"calomnie\",\n    \"calvaire\",\n    \"camarade\",\n    \"caméra\",\n    \"camion\",\n    \"campagne\",\n    \"canal\",\n    \"caneton\",\n    \"canon\",\n    \"cantine\",\n    \"canular\",\n    \"capable\",\n    \"caporal\",\n    \"caprice\",\n    \"capsule\",\n    \"capter\",\n    \"capuche\",\n    \"carabine\",\n    \"carbone\",\n    \"caresser\",\n    \"caribou\",\n    \"carnage\",\n    \"carotte\",\n    \"carreau\",\n    \"carton\",\n    \"cascade\",\n    \"casier\",\n    \"casque\",\n    \"cassure\",\n    \"causer\",\n    \"caution\",\n    \"cavalier\",\n    \"caverne\",\n    \"caviar\",\n    \"cédille\",\n    \"ceinture\",\n    \"céleste\",\n    \"cellule\",\n    \"cendrier\",\n    \"censurer\",\n    \"central\",\n    \"cercle\",\n    \"cérébral\",\n    \"cerise\",\n    \"cerner\",\n    \"cerveau\",\n    \"cesser\",\n    \"chagrin\",\n    \"chaise\",\n    \"chaleur\",\n    \"chambre\",\n    \"chance\",\n    \"chapitre\",\n    \"charbon\",\n    \"chasseur\",\n    \"chaton\",\n    \"chausson\",\n    \"chavirer\",\n    \"chemise\",\n    \"chenille\",\n    \"chéquier\",\n    \"chercher\",\n    \"cheval\",\n    \"chien\",\n    \"chiffre\",\n    \"chignon\",\n    \"chimère\",\n    \"chiot\",\n    \"chlorure\",\n    \"chocolat\",\n    \"choisir\",\n    \"chose\",\n    \"chouette\",\n    \"chrome\",\n    \"chute\",\n    \"cigare\",\n    \"cigogne\",\n    \"cimenter\",\n    \"cinéma\",\n    \"cintrer\",\n    \"circuler\",\n    \"cirer\",\n    \"cirque\",\n    \"citerne\",\n    \"citoyen\",\n    \"citron\",\n    \"civil\",\n    \"clairon\",\n    \"clameur\",\n    \"claquer\",\n    \"classe\",\n    \"clavier\",\n    \"client\",\n    \"cligner\",\n    \"climat\",\n    \"clivage\",\n    \"cloche\",\n    \"clonage\",\n    \"cloporte\",\n    \"cobalt\",\n    \"cobra\",\n    \"cocasse\",\n    \"cocotier\",\n    \"coder\",\n    \"codifier\",\n    \"coffre\",\n    \"cogner\",\n    \"cohésion\",\n    \"coiffer\",\n    \"coincer\",\n    \"colère\",\n    \"colibri\",\n    \"colline\",\n    \"colmater\",\n    \"colonel\",\n    \"combat\",\n    \"comédie\",\n    \"commande\",\n    \"compact\",\n    \"concert\",\n    \"conduire\",\n    \"confier\",\n    \"congeler\",\n    \"connoter\",\n    \"consonne\",\n    \"contact\",\n    \"convexe\",\n    \"copain\",\n    \"copie\",\n    \"corail\",\n    \"corbeau\",\n    \"cordage\",\n    \"corniche\",\n    \"corpus\",\n    \"correct\",\n    \"cortège\",\n    \"cosmique\",\n    \"costume\",\n    \"coton\",\n    \"coude\",\n    \"coupure\",\n    \"courage\",\n    \"couteau\",\n    \"couvrir\",\n    \"coyote\",\n    \"crabe\",\n    \"crainte\",\n    \"cravate\",\n    \"crayon\",\n    \"créature\",\n    \"créditer\",\n    \"crémeux\",\n    \"creuser\",\n    \"crevette\",\n    \"cribler\",\n    \"crier\",\n    \"cristal\",\n    \"critère\",\n    \"croire\",\n    \"croquer\",\n    \"crotale\",\n    \"crucial\",\n    \"cruel\",\n    \"crypter\",\n    \"cubique\",\n    \"cueillir\",\n    \"cuillère\",\n    \"cuisine\",\n    \"cuivre\",\n    \"culminer\",\n    \"cultiver\",\n    \"cumuler\",\n    \"cupide\",\n    \"curatif\",\n    \"curseur\",\n    \"cyanure\",\n    \"cycle\",\n    \"cylindre\",\n    \"cynique\",\n    \"daigner\",\n    \"damier\",\n    \"danger\",\n    \"danseur\",\n    \"dauphin\",\n    \"débattre\",\n    \"débiter\",\n    \"déborder\",\n    \"débrider\",\n    \"débutant\",\n    \"décaler\",\n    \"décembre\",\n    \"déchirer\",\n    \"décider\",\n    \"déclarer\",\n    \"décorer\",\n    \"décrire\",\n    \"décupler\",\n    \"dédale\",\n    \"déductif\",\n    \"déesse\",\n    \"défensif\",\n    \"défiler\",\n    \"défrayer\",\n    \"dégager\",\n    \"dégivrer\",\n    \"déglutir\",\n    \"dégrafer\",\n    \"déjeuner\",\n    \"délice\",\n    \"déloger\",\n    \"demander\",\n    \"demeurer\",\n    \"démolir\",\n    \"dénicher\",\n    \"dénouer\",\n    \"dentelle\",\n    \"dénuder\",\n    \"départ\",\n    \"dépenser\",\n    \"déphaser\",\n    \"déplacer\",\n    \"déposer\",\n    \"déranger\",\n    \"dérober\",\n    \"désastre\",\n    \"descente\",\n    \"désert\",\n    \"désigner\",\n    \"désobéir\",\n    \"dessiner\",\n    \"destrier\",\n    \"détacher\",\n    \"détester\",\n    \"détourer\",\n    \"détresse\",\n    \"devancer\",\n    \"devenir\",\n    \"deviner\",\n    \"devoir\",\n    \"diable\",\n    \"dialogue\",\n    \"diamant\",\n    \"dicter\",\n    \"différer\",\n    \"digérer\",\n    \"digital\",\n    \"digne\",\n    \"diluer\",\n    \"dimanche\",\n    \"diminuer\",\n    \"dioxyde\",\n    \"directif\",\n    \"diriger\",\n    \"discuter\",\n    \"disposer\",\n    \"dissiper\",\n    \"distance\",\n    \"divertir\",\n    \"diviser\",\n    \"docile\",\n    \"docteur\",\n    \"dogme\",\n    \"doigt\",\n    \"domaine\",\n    \"domicile\",\n    \"dompter\",\n    \"donateur\",\n    \"donjon\",\n    \"donner\",\n    \"dopamine\",\n    \"dortoir\",\n    \"dorure\",\n    \"dosage\",\n    \"doseur\",\n    \"dossier\",\n    \"dotation\",\n    \"douanier\",\n    \"double\",\n    \"douceur\",\n    \"douter\",\n    \"doyen\",\n    \"dragon\",\n    \"draper\",\n    \"dresser\",\n    \"dribbler\",\n    \"droiture\",\n    \"duperie\",\n    \"duplexe\",\n    \"durable\",\n    \"durcir\",\n    \"dynastie\",\n    \"éblouir\",\n    \"écarter\",\n    \"écharpe\",\n    \"échelle\",\n    \"éclairer\",\n    \"éclipse\",\n    \"éclore\",\n    \"écluse\",\n    \"école\",\n    \"économie\",\n    \"écorce\",\n    \"écouter\",\n    \"écraser\",\n    \"écrémer\",\n    \"écrivain\",\n    \"écrou\",\n    \"écume\",\n    \"écureuil\",\n    \"édifier\",\n    \"éduquer\",\n    \"effacer\",\n    \"effectif\",\n    \"effigie\",\n    \"effort\",\n    \"effrayer\",\n    \"effusion\",\n    \"égaliser\",\n    \"égarer\",\n    \"éjecter\",\n    \"élaborer\",\n    \"élargir\",\n    \"électron\",\n    \"élégant\",\n    \"éléphant\",\n    \"élève\",\n    \"éligible\",\n    \"élitisme\",\n    \"éloge\",\n    \"élucider\",\n    \"éluder\",\n    \"emballer\",\n    \"embellir\",\n    \"embryon\",\n    \"émeraude\",\n    \"émission\",\n    \"emmener\",\n    \"émotion\",\n    \"émouvoir\",\n    \"empereur\",\n    \"employer\",\n    \"emporter\",\n    \"emprise\",\n    \"émulsion\",\n    \"encadrer\",\n    \"enchère\",\n    \"enclave\",\n    \"encoche\",\n    \"endiguer\",\n    \"endosser\",\n    \"endroit\",\n    \"enduire\",\n    \"énergie\",\n    \"enfance\",\n    \"enfermer\",\n    \"enfouir\",\n    \"engager\",\n    \"engin\",\n    \"englober\",\n    \"énigme\",\n    \"enjamber\",\n    \"enjeu\",\n    \"enlever\",\n    \"ennemi\",\n    \"ennuyeux\",\n    \"enrichir\",\n    \"enrobage\",\n    \"enseigne\",\n    \"entasser\",\n    \"entendre\",\n    \"entier\",\n    \"entourer\",\n    \"entraver\",\n    \"énumérer\",\n    \"envahir\",\n    \"enviable\",\n    \"envoyer\",\n    \"enzyme\",\n    \"éolien\",\n    \"épaissir\",\n    \"épargne\",\n    \"épatant\",\n    \"épaule\",\n    \"épicerie\",\n    \"épidémie\",\n    \"épier\",\n    \"épilogue\",\n    \"épine\",\n    \"épisode\",\n    \"épitaphe\",\n    \"époque\",\n    \"épreuve\",\n    \"éprouver\",\n    \"épuisant\",\n    \"équerre\",\n    \"équipe\",\n    \"ériger\",\n    \"érosion\",\n    \"erreur\",\n    \"éruption\",\n    \"escalier\",\n    \"espadon\",\n    \"espèce\",\n    \"espiègle\",\n    \"espoir\",\n    \"esprit\",\n    \"esquiver\",\n    \"essayer\",\n    \"essence\",\n    \"essieu\",\n    \"essorer\",\n    \"estime\",\n    \"estomac\",\n    \"estrade\",\n    \"étagère\",\n    \"étaler\",\n    \"étanche\",\n    \"étatique\",\n    \"éteindre\",\n    \"étendoir\",\n    \"éternel\",\n    \"éthanol\",\n    \"éthique\",\n    \"ethnie\",\n    \"étirer\",\n    \"étoffer\",\n    \"étoile\",\n    \"étonnant\",\n    \"étourdir\",\n    \"étrange\",\n    \"étroit\",\n    \"étude\",\n    \"euphorie\",\n    \"évaluer\",\n    \"évasion\",\n    \"éventail\",\n    \"évidence\",\n    \"éviter\",\n    \"évolutif\",\n    \"évoquer\",\n    \"exact\",\n    \"exagérer\",\n    \"exaucer\",\n    \"exceller\",\n    \"excitant\",\n    \"exclusif\",\n    \"excuse\",\n    \"exécuter\",\n    \"exemple\",\n    \"exercer\",\n    \"exhaler\",\n    \"exhorter\",\n    \"exigence\",\n    \"exiler\",\n    \"exister\",\n    \"exotique\",\n    \"expédier\",\n    \"explorer\",\n    \"exposer\",\n    \"exprimer\",\n    \"exquis\",\n    \"extensif\",\n    \"extraire\",\n    \"exulter\",\n    \"fable\",\n    \"fabuleux\",\n    \"facette\",\n    \"facile\",\n    \"facture\",\n    \"faiblir\",\n    \"falaise\",\n    \"fameux\",\n    \"famille\",\n    \"farceur\",\n    \"farfelu\",\n    \"farine\",\n    \"farouche\",\n    \"fasciner\",\n    \"fatal\",\n    \"fatigue\",\n    \"faucon\",\n    \"fautif\",\n    \"faveur\",\n    \"favori\",\n    \"fébrile\",\n    \"féconder\",\n    \"fédérer\",\n    \"félin\",\n    \"femme\",\n    \"fémur\",\n    \"fendoir\",\n    \"féodal\",\n    \"fermer\",\n    \"féroce\",\n    \"ferveur\",\n    \"festival\",\n    \"feuille\",\n    \"feutre\",\n    \"février\",\n    \"fiasco\",\n    \"ficeler\",\n    \"fictif\",\n    \"fidèle\",\n    \"figure\",\n    \"filature\",\n    \"filetage\",\n    \"filière\",\n    \"filleul\",\n    \"filmer\",\n    \"filou\",\n    \"filtrer\",\n    \"financer\",\n    \"finir\",\n    \"fiole\",\n    \"firme\",\n    \"fissure\",\n    \"fixer\",\n    \"flairer\",\n    \"flamme\",\n    \"flasque\",\n    \"flatteur\",\n    \"fléau\",\n    \"flèche\",\n    \"fleur\",\n    \"flexion\",\n    \"flocon\",\n    \"flore\",\n    \"fluctuer\",\n    \"fluide\",\n    \"fluvial\",\n    \"folie\",\n    \"fonderie\",\n    \"fongible\",\n    \"fontaine\",\n    \"forcer\",\n    \"forgeron\",\n    \"formuler\",\n    \"fortune\",\n    \"fossile\",\n    \"foudre\",\n    \"fougère\",\n    \"fouiller\",\n    \"foulure\",\n    \"fourmi\",\n    \"fragile\",\n    \"fraise\",\n    \"franchir\",\n    \"frapper\",\n    \"frayeur\",\n    \"frégate\",\n    \"freiner\",\n    \"frelon\",\n    \"frémir\",\n    \"frénésie\",\n    \"frère\",\n    \"friable\",\n    \"friction\",\n    \"frisson\",\n    \"frivole\",\n    \"froid\",\n    \"fromage\",\n    \"frontal\",\n    \"frotter\",\n    \"fruit\",\n    \"fugitif\",\n    \"fuite\",\n    \"fureur\",\n    \"furieux\",\n    \"furtif\",\n    \"fusion\",\n    \"futur\",\n    \"gagner\",\n    \"galaxie\",\n    \"galerie\",\n    \"gambader\",\n    \"garantir\",\n    \"gardien\",\n    \"garnir\",\n    \"garrigue\",\n    \"gazelle\",\n    \"gazon\",\n    \"géant\",\n    \"gélatine\",\n    \"gélule\",\n    \"gendarme\",\n    \"général\",\n    \"génie\",\n    \"genou\",\n    \"gentil\",\n    \"géologie\",\n    \"géomètre\",\n    \"géranium\",\n    \"germe\",\n    \"gestuel\",\n    \"geyser\",\n    \"gibier\",\n    \"gicler\",\n    \"girafe\",\n    \"givre\",\n    \"glace\",\n    \"glaive\",\n    \"glisser\",\n    \"globe\",\n    \"gloire\",\n    \"glorieux\",\n    \"golfeur\",\n    \"gomme\",\n    \"gonfler\",\n    \"gorge\",\n    \"gorille\",\n    \"goudron\",\n    \"gouffre\",\n    \"goulot\",\n    \"goupille\",\n    \"gourmand\",\n    \"goutte\",\n    \"graduel\",\n    \"graffiti\",\n    \"graine\",\n    \"grand\",\n    \"grappin\",\n    \"gratuit\",\n    \"gravir\",\n    \"grenat\",\n    \"griffure\",\n    \"griller\",\n    \"grimper\",\n    \"grogner\",\n    \"gronder\",\n    \"grotte\",\n    \"groupe\",\n    \"gruger\",\n    \"grutier\",\n    \"gruyère\",\n    \"guépard\",\n    \"guerrier\",\n    \"guide\",\n    \"guimauve\",\n    \"guitare\",\n    \"gustatif\",\n    \"gymnaste\",\n    \"gyrostat\",\n    \"habitude\",\n    \"hachoir\",\n    \"halte\",\n    \"hameau\",\n    \"hangar\",\n    \"hanneton\",\n    \"haricot\",\n    \"harmonie\",\n    \"harpon\",\n    \"hasard\",\n    \"hélium\",\n    \"hématome\",\n    \"herbe\",\n    \"hérisson\",\n    \"hermine\",\n    \"héron\",\n    \"hésiter\",\n    \"heureux\",\n    \"hiberner\",\n    \"hibou\",\n    \"hilarant\",\n    \"histoire\",\n    \"hiver\",\n    \"homard\",\n    \"hommage\",\n    \"homogène\",\n    \"honneur\",\n    \"honorer\",\n    \"honteux\",\n    \"horde\",\n    \"horizon\",\n    \"horloge\",\n    \"hormone\",\n    \"horrible\",\n    \"houleux\",\n    \"housse\",\n    \"hublot\",\n    \"huileux\",\n    \"humain\",\n    \"humble\",\n    \"humide\",\n    \"humour\",\n    \"hurler\",\n    \"hydromel\",\n    \"hygiène\",\n    \"hymne\",\n    \"hypnose\",\n    \"idylle\",\n    \"ignorer\",\n    \"iguane\",\n    \"illicite\",\n    \"illusion\",\n    \"image\",\n    \"imbiber\",\n    \"imiter\",\n    \"immense\",\n    \"immobile\",\n    \"immuable\",\n    \"impact\",\n    \"impérial\",\n    \"implorer\",\n    \"imposer\",\n    \"imprimer\",\n    \"imputer\",\n    \"incarner\",\n    \"incendie\",\n    \"incident\",\n    \"incliner\",\n    \"incolore\",\n    \"indexer\",\n    \"indice\",\n    \"inductif\",\n    \"inédit\",\n    \"ineptie\",\n    \"inexact\",\n    \"infini\",\n    \"infliger\",\n    \"informer\",\n    \"infusion\",\n    \"ingérer\",\n    \"inhaler\",\n    \"inhiber\",\n    \"injecter\",\n    \"injure\",\n    \"innocent\",\n    \"inoculer\",\n    \"inonder\",\n    \"inscrire\",\n    \"insecte\",\n    \"insigne\",\n    \"insolite\",\n    \"inspirer\",\n    \"instinct\",\n    \"insulter\",\n    \"intact\",\n    \"intense\",\n    \"intime\",\n    \"intrigue\",\n    \"intuitif\",\n    \"inutile\",\n    \"invasion\",\n    \"inventer\",\n    \"inviter\",\n    \"invoquer\",\n    \"ironique\",\n    \"irradier\",\n    \"irréel\",\n    \"irriter\",\n    \"isoler\",\n    \"ivoire\",\n    \"ivresse\",\n    \"jaguar\",\n    \"jaillir\",\n    \"jambe\",\n    \"janvier\",\n    \"jardin\",\n    \"jauger\",\n    \"jaune\",\n    \"javelot\",\n    \"jetable\",\n    \"jeton\",\n    \"jeudi\",\n    \"jeunesse\",\n    \"joindre\",\n    \"joncher\",\n    \"jongler\",\n    \"joueur\",\n    \"jouissif\",\n    \"journal\",\n    \"jovial\",\n    \"joyau\",\n    \"joyeux\",\n    \"jubiler\",\n    \"jugement\",\n    \"junior\",\n    \"jupon\",\n    \"juriste\",\n    \"justice\",\n    \"juteux\",\n    \"juvénile\",\n    \"kayak\",\n    \"kimono\",\n    \"kiosque\",\n    \"label\",\n    \"labial\",\n    \"labourer\",\n    \"lacérer\",\n    \"lactose\",\n    \"lagune\",\n    \"laine\",\n    \"laisser\",\n    \"laitier\",\n    \"lambeau\",\n    \"lamelle\",\n    \"lampe\",\n    \"lanceur\",\n    \"langage\",\n    \"lanterne\",\n    \"lapin\",\n    \"largeur\",\n    \"larme\",\n    \"laurier\",\n    \"lavabo\",\n    \"lavoir\",\n    \"lecture\",\n    \"légal\",\n    \"léger\",\n    \"légume\",\n    \"lessive\",\n    \"lettre\",\n    \"levier\",\n    \"lexique\",\n    \"lézard\",\n    \"liasse\",\n    \"libérer\",\n    \"libre\",\n    \"licence\",\n    \"licorne\",\n    \"liège\",\n    \"lièvre\",\n    \"ligature\",\n    \"ligoter\",\n    \"ligue\",\n    \"limer\",\n    \"limite\",\n    \"limonade\",\n    \"limpide\",\n    \"linéaire\",\n    \"lingot\",\n    \"lionceau\",\n    \"liquide\",\n    \"lisière\",\n    \"lister\",\n    \"lithium\",\n    \"litige\",\n    \"littoral\",\n    \"livreur\",\n    \"logique\",\n    \"lointain\",\n    \"loisir\",\n    \"lombric\",\n    \"loterie\",\n    \"louer\",\n    \"lourd\",\n    \"loutre\",\n    \"louve\",\n    \"loyal\",\n    \"lubie\",\n    \"lucide\",\n    \"lucratif\",\n    \"lueur\",\n    \"lugubre\",\n    \"luisant\",\n    \"lumière\",\n    \"lunaire\",\n    \"lundi\",\n    \"luron\",\n    \"lutter\",\n    \"luxueux\",\n    \"machine\",\n    \"magasin\",\n    \"magenta\",\n    \"magique\",\n    \"maigre\",\n    \"maillon\",\n    \"maintien\",\n    \"mairie\",\n    \"maison\",\n    \"majorer\",\n    \"malaxer\",\n    \"maléfice\",\n    \"malheur\",\n    \"malice\",\n    \"mallette\",\n    \"mammouth\",\n    \"mandater\",\n    \"maniable\",\n    \"manquant\",\n    \"manteau\",\n    \"manuel\",\n    \"marathon\",\n    \"marbre\",\n    \"marchand\",\n    \"mardi\",\n    \"maritime\",\n    \"marqueur\",\n    \"marron\",\n    \"marteler\",\n    \"mascotte\",\n    \"massif\",\n    \"matériel\",\n    \"matière\",\n    \"matraque\",\n    \"maudire\",\n    \"maussade\",\n    \"mauve\",\n    \"maximal\",\n    \"méchant\",\n    \"méconnu\",\n    \"médaille\",\n    \"médecin\",\n    \"méditer\",\n    \"méduse\",\n    \"meilleur\",\n    \"mélange\",\n    \"mélodie\",\n    \"membre\",\n    \"mémoire\",\n    \"menacer\",\n    \"mener\",\n    \"menhir\",\n    \"mensonge\",\n    \"mentor\",\n    \"mercredi\",\n    \"mérite\",\n    \"merle\",\n    \"messager\",\n    \"mesure\",\n    \"métal\",\n    \"météore\",\n    \"méthode\",\n    \"métier\",\n    \"meuble\",\n    \"miauler\",\n    \"microbe\",\n    \"miette\",\n    \"mignon\",\n    \"migrer\",\n    \"milieu\",\n    \"million\",\n    \"mimique\",\n    \"mince\",\n    \"minéral\",\n    \"minimal\",\n    \"minorer\",\n    \"minute\",\n    \"miracle\",\n    \"miroiter\",\n    \"missile\",\n    \"mixte\",\n    \"mobile\",\n    \"moderne\",\n    \"moelleux\",\n    \"mondial\",\n    \"moniteur\",\n    \"monnaie\",\n    \"monotone\",\n    \"monstre\",\n    \"montagne\",\n    \"monument\",\n    \"moqueur\",\n    \"morceau\",\n    \"morsure\",\n    \"mortier\",\n    \"moteur\",\n    \"motif\",\n    \"mouche\",\n    \"moufle\",\n    \"moulin\",\n    \"mousson\",\n    \"mouton\",\n    \"mouvant\",\n    \"multiple\",\n    \"munition\",\n    \"muraille\",\n    \"murène\",\n    \"murmure\",\n    \"muscle\",\n    \"muséum\",\n    \"musicien\",\n    \"mutation\",\n    \"muter\",\n    \"mutuel\",\n    \"myriade\",\n    \"myrtille\",\n    \"mystère\",\n    \"mythique\",\n    \"nageur\",\n    \"nappe\",\n    \"narquois\",\n    \"narrer\",\n    \"natation\",\n    \"nation\",\n    \"nature\",\n    \"naufrage\",\n    \"nautique\",\n    \"navire\",\n    \"nébuleux\",\n    \"nectar\",\n    \"néfaste\",\n    \"négation\",\n    \"négliger\",\n    \"négocier\",\n    \"neige\",\n    \"nerveux\",\n    \"nettoyer\",\n    \"neurone\",\n    \"neutron\",\n    \"neveu\",\n    \"niche\",\n    \"nickel\",\n    \"nitrate\",\n    \"niveau\",\n    \"noble\",\n    \"nocif\",\n    \"nocturne\",\n    \"noirceur\",\n    \"noisette\",\n    \"nomade\",\n    \"nombreux\",\n    \"nommer\",\n    \"normatif\",\n    \"notable\",\n    \"notifier\",\n    \"notoire\",\n    \"nourrir\",\n    \"nouveau\",\n    \"novateur\",\n    \"novembre\",\n    \"novice\",\n    \"nuage\",\n    \"nuancer\",\n    \"nuire\",\n    \"nuisible\",\n    \"numéro\",\n    \"nuptial\",\n    \"nuque\",\n    \"nutritif\",\n    \"obéir\",\n    \"objectif\",\n    \"obliger\",\n    \"obscur\",\n    \"observer\",\n    \"obstacle\",\n    \"obtenir\",\n    \"obturer\",\n    \"occasion\",\n    \"occuper\",\n    \"océan\",\n    \"octobre\",\n    \"octroyer\",\n    \"octupler\",\n    \"oculaire\",\n    \"odeur\",\n    \"odorant\",\n    \"offenser\",\n    \"officier\",\n    \"offrir\",\n    \"ogive\",\n    \"oiseau\",\n    \"oisillon\",\n    \"olfactif\",\n    \"olivier\",\n    \"ombrage\",\n    \"omettre\",\n    \"onctueux\",\n    \"onduler\",\n    \"onéreux\",\n    \"onirique\",\n    \"opale\",\n    \"opaque\",\n    \"opérer\",\n    \"opinion\",\n    \"opportun\",\n    \"opprimer\",\n    \"opter\",\n    \"optique\",\n    \"orageux\",\n    \"orange\",\n    \"orbite\",\n    \"ordonner\",\n    \"oreille\",\n    \"organe\",\n    \"orgueil\",\n    \"orifice\",\n    \"ornement\",\n    \"orque\",\n    \"ortie\",\n    \"osciller\",\n    \"osmose\",\n    \"ossature\",\n    \"otarie\",\n    \"ouragan\",\n    \"ourson\",\n    \"outil\",\n    \"outrager\",\n    \"ouvrage\",\n    \"ovation\",\n    \"oxyde\",\n    \"oxygène\",\n    \"ozone\",\n    \"paisible\",\n    \"palace\",\n    \"palmarès\",\n    \"palourde\",\n    \"palper\",\n    \"panache\",\n    \"panda\",\n    \"pangolin\",\n    \"paniquer\",\n    \"panneau\",\n    \"panorama\",\n    \"pantalon\",\n    \"papaye\",\n    \"papier\",\n    \"papoter\",\n    \"papyrus\",\n    \"paradoxe\",\n    \"parcelle\",\n    \"paresse\",\n    \"parfumer\",\n    \"parler\",\n    \"parole\",\n    \"parrain\",\n    \"parsemer\",\n    \"partager\",\n    \"parure\",\n    \"parvenir\",\n    \"passion\",\n    \"pastèque\",\n    \"paternel\",\n    \"patience\",\n    \"patron\",\n    \"pavillon\",\n    \"pavoiser\",\n    \"payer\",\n    \"paysage\",\n    \"peigne\",\n    \"peintre\",\n    \"pelage\",\n    \"pélican\",\n    \"pelle\",\n    \"pelouse\",\n    \"peluche\",\n    \"pendule\",\n    \"pénétrer\",\n    \"pénible\",\n    \"pensif\",\n    \"pénurie\",\n    \"pépite\",\n    \"péplum\",\n    \"perdrix\",\n    \"perforer\",\n    \"période\",\n    \"permuter\",\n    \"perplexe\",\n    \"persil\",\n    \"perte\",\n    \"peser\",\n    \"pétale\",\n    \"petit\",\n    \"pétrir\",\n    \"peuple\",\n    \"pharaon\",\n    \"phobie\",\n    \"phoque\",\n    \"photon\",\n    \"phrase\",\n    \"physique\",\n    \"piano\",\n    \"pictural\",\n    \"pièce\",\n    \"pierre\",\n    \"pieuvre\",\n    \"pilote\",\n    \"pinceau\",\n    \"pipette\",\n    \"piquer\",\n    \"pirogue\",\n    \"piscine\",\n    \"piston\",\n    \"pivoter\",\n    \"pixel\",\n    \"pizza\",\n    \"placard\",\n    \"plafond\",\n    \"plaisir\",\n    \"planer\",\n    \"plaque\",\n    \"plastron\",\n    \"plateau\",\n    \"pleurer\",\n    \"plexus\",\n    \"pliage\",\n    \"plomb\",\n    \"plonger\",\n    \"pluie\",\n    \"plumage\",\n    \"pochette\",\n    \"poésie\",\n    \"poète\",\n    \"pointe\",\n    \"poirier\",\n    \"poisson\",\n    \"poivre\",\n    \"polaire\",\n    \"policier\",\n    \"pollen\",\n    \"polygone\",\n    \"pommade\",\n    \"pompier\",\n    \"ponctuel\",\n    \"pondérer\",\n    \"poney\",\n    \"portique\",\n    \"position\",\n    \"posséder\",\n    \"posture\",\n    \"potager\",\n    \"poteau\",\n    \"potion\",\n    \"pouce\",\n    \"poulain\",\n    \"poumon\",\n    \"pourpre\",\n    \"poussin\",\n    \"pouvoir\",\n    \"prairie\",\n    \"pratique\",\n    \"précieux\",\n    \"prédire\",\n    \"préfixe\",\n    \"prélude\",\n    \"prénom\",\n    \"présence\",\n    \"prétexte\",\n    \"prévoir\",\n    \"primitif\",\n    \"prince\",\n    \"prison\",\n    \"priver\",\n    \"problème\",\n    \"procéder\",\n    \"prodige\",\n    \"profond\",\n    \"progrès\",\n    \"proie\",\n    \"projeter\",\n    \"prologue\",\n    \"promener\",\n    \"propre\",\n    \"prospère\",\n    \"protéger\",\n    \"prouesse\",\n    \"proverbe\",\n    \"prudence\",\n    \"pruneau\",\n    \"psychose\",\n    \"public\",\n    \"puceron\",\n    \"puiser\",\n    \"pulpe\",\n    \"pulsar\",\n    \"punaise\",\n    \"punitif\",\n    \"pupitre\",\n    \"purifier\",\n    \"puzzle\",\n    \"pyramide\",\n    \"quasar\",\n    \"querelle\",\n    \"question\",\n    \"quiétude\",\n    \"quitter\",\n    \"quotient\",\n    \"racine\",\n    \"raconter\",\n    \"radieux\",\n    \"ragondin\",\n    \"raideur\",\n    \"raisin\",\n    \"ralentir\",\n    \"rallonge\",\n    \"ramasser\",\n    \"rapide\",\n    \"rasage\",\n    \"ratisser\",\n    \"ravager\",\n    \"ravin\",\n    \"rayonner\",\n    \"réactif\",\n    \"réagir\",\n    \"réaliser\",\n    \"réanimer\",\n    \"recevoir\",\n    \"réciter\",\n    \"réclamer\",\n    \"récolter\",\n    \"recruter\",\n    \"reculer\",\n    \"recycler\",\n    \"rédiger\",\n    \"redouter\",\n    \"refaire\",\n    \"réflexe\",\n    \"réformer\",\n    \"refrain\",\n    \"refuge\",\n    \"régalien\",\n    \"région\",\n    \"réglage\",\n    \"régulier\",\n    \"réitérer\",\n    \"rejeter\",\n    \"rejouer\",\n    \"relatif\",\n    \"relever\",\n    \"relief\",\n    \"remarque\",\n    \"remède\",\n    \"remise\",\n    \"remonter\",\n    \"remplir\",\n    \"remuer\",\n    \"renard\",\n    \"renfort\",\n    \"renifler\",\n    \"renoncer\",\n    \"rentrer\",\n    \"renvoi\",\n    \"replier\",\n    \"reporter\",\n    \"reprise\",\n    \"reptile\",\n    \"requin\",\n    \"réserve\",\n    \"résineux\",\n    \"résoudre\",\n    \"respect\",\n    \"rester\",\n    \"résultat\",\n    \"rétablir\",\n    \"retenir\",\n    \"réticule\",\n    \"retomber\",\n    \"retracer\",\n    \"réunion\",\n    \"réussir\",\n    \"revanche\",\n    \"revivre\",\n    \"révolte\",\n    \"révulsif\",\n    \"richesse\",\n    \"rideau\",\n    \"rieur\",\n    \"rigide\",\n    \"rigoler\",\n    \"rincer\",\n    \"riposter\",\n    \"risible\",\n    \"risque\",\n    \"rituel\",\n    \"rival\",\n    \"rivière\",\n    \"rocheux\",\n    \"romance\",\n    \"rompre\",\n    \"ronce\",\n    \"rondin\",\n    \"roseau\",\n    \"rosier\",\n    \"rotatif\",\n    \"rotor\",\n    \"rotule\",\n    \"rouge\",\n    \"rouille\",\n    \"rouleau\",\n    \"routine\",\n    \"royaume\",\n    \"ruban\",\n    \"rubis\",\n    \"ruche\",\n    \"ruelle\",\n    \"rugueux\",\n    \"ruiner\",\n    \"ruisseau\",\n    \"ruser\",\n    \"rustique\",\n    \"rythme\",\n    \"sabler\",\n    \"saboter\",\n    \"sabre\",\n    \"sacoche\",\n    \"safari\",\n    \"sagesse\",\n    \"saisir\",\n    \"salade\",\n    \"salive\",\n    \"salon\",\n    \"saluer\",\n    \"samedi\",\n    \"sanction\",\n    \"sanglier\",\n    \"sarcasme\",\n    \"sardine\",\n    \"saturer\",\n    \"saugrenu\",\n    \"saumon\",\n    \"sauter\",\n    \"sauvage\",\n    \"savant\",\n    \"savonner\",\n    \"scalpel\",\n    \"scandale\",\n    \"scélérat\",\n    \"scénario\",\n    \"sceptre\",\n    \"schéma\",\n    \"science\",\n    \"scinder\",\n    \"score\",\n    \"scrutin\",\n    \"sculpter\",\n    \"séance\",\n    \"sécable\",\n    \"sécher\",\n    \"secouer\",\n    \"sécréter\",\n    \"sédatif\",\n    \"séduire\",\n    \"seigneur\",\n    \"séjour\",\n    \"sélectif\",\n    \"semaine\",\n    \"sembler\",\n    \"semence\",\n    \"séminal\",\n    \"sénateur\",\n    \"sensible\",\n    \"sentence\",\n    \"séparer\",\n    \"séquence\",\n    \"serein\",\n    \"sergent\",\n    \"sérieux\",\n    \"serrure\",\n    \"sérum\",\n    \"service\",\n    \"sésame\",\n    \"sévir\",\n    \"sevrage\",\n    \"sextuple\",\n    \"sidéral\",\n    \"siècle\",\n    \"siéger\",\n    \"siffler\",\n    \"sigle\",\n    \"signal\",\n    \"silence\",\n    \"silicium\",\n    \"simple\",\n    \"sincère\",\n    \"sinistre\",\n    \"siphon\",\n    \"sirop\",\n    \"sismique\",\n    \"situer\",\n    \"skier\",\n    \"social\",\n    \"socle\",\n    \"sodium\",\n    \"soigneux\",\n    \"soldat\",\n    \"soleil\",\n    \"solitude\",\n    \"soluble\",\n    \"sombre\",\n    \"sommeil\",\n    \"somnoler\",\n    \"sonde\",\n    \"songeur\",\n    \"sonnette\",\n    \"sonore\",\n    \"sorcier\",\n    \"sortir\",\n    \"sosie\",\n    \"sottise\",\n    \"soucieux\",\n    \"soudure\",\n    \"souffle\",\n    \"soulever\",\n    \"soupape\",\n    \"source\",\n    \"soutirer\",\n    \"souvenir\",\n    \"spacieux\",\n    \"spatial\",\n    \"spécial\",\n    \"sphère\",\n    \"spiral\",\n    \"stable\",\n    \"station\",\n    \"sternum\",\n    \"stimulus\",\n    \"stipuler\",\n    \"strict\",\n    \"studieux\",\n    \"stupeur\",\n    \"styliste\",\n    \"sublime\",\n    \"substrat\",\n    \"subtil\",\n    \"subvenir\",\n    \"succès\",\n    \"sucre\",\n    \"suffixe\",\n    \"suggérer\",\n    \"suiveur\",\n    \"sulfate\",\n    \"superbe\",\n    \"supplier\",\n    \"surface\",\n    \"suricate\",\n    \"surmener\",\n    \"surprise\",\n    \"sursaut\",\n    \"survie\",\n    \"suspect\",\n    \"syllabe\",\n    \"symbole\",\n    \"symétrie\",\n    \"synapse\",\n    \"syntaxe\",\n    \"système\",\n    \"tabac\",\n    \"tablier\",\n    \"tactile\",\n    \"tailler\",\n    \"talent\",\n    \"talisman\",\n    \"talonner\",\n    \"tambour\",\n    \"tamiser\",\n    \"tangible\",\n    \"tapis\",\n    \"taquiner\",\n    \"tarder\",\n    \"tarif\",\n    \"tartine\",\n    \"tasse\",\n    \"tatami\",\n    \"tatouage\",\n    \"taupe\",\n    \"taureau\",\n    \"taxer\",\n    \"témoin\",\n    \"temporel\",\n    \"tenaille\",\n    \"tendre\",\n    \"teneur\",\n    \"tenir\",\n    \"tension\",\n    \"terminer\",\n    \"terne\",\n    \"terrible\",\n    \"tétine\",\n    \"texte\",\n    \"thème\",\n    \"théorie\",\n    \"thérapie\",\n    \"thorax\",\n    \"tibia\",\n    \"tiède\",\n    \"timide\",\n    \"tirelire\",\n    \"tiroir\",\n    \"tissu\",\n    \"titane\",\n    \"titre\",\n    \"tituber\",\n    \"toboggan\",\n    \"tolérant\",\n    \"tomate\",\n    \"tonique\",\n    \"tonneau\",\n    \"toponyme\",\n    \"torche\",\n    \"tordre\",\n    \"tornade\",\n    \"torpille\",\n    \"torrent\",\n    \"torse\",\n    \"tortue\",\n    \"totem\",\n    \"toucher\",\n    \"tournage\",\n    \"tousser\",\n    \"toxine\",\n    \"traction\",\n    \"trafic\",\n    \"tragique\",\n    \"trahir\",\n    \"train\",\n    \"trancher\",\n    \"travail\",\n    \"trèfle\",\n    \"tremper\",\n    \"trésor\",\n    \"treuil\",\n    \"triage\",\n    \"tribunal\",\n    \"tricoter\",\n    \"trilogie\",\n    \"triomphe\",\n    \"tripler\",\n    \"triturer\",\n    \"trivial\",\n    \"trombone\",\n    \"tronc\",\n    \"tropical\",\n    \"troupeau\",\n    \"tuile\",\n    \"tulipe\",\n    \"tumulte\",\n    \"tunnel\",\n    \"turbine\",\n    \"tuteur\",\n    \"tutoyer\",\n    \"tuyau\",\n    \"tympan\",\n    \"typhon\",\n    \"typique\",\n    \"tyran\",\n    \"ubuesque\",\n    \"ultime\",\n    \"ultrason\",\n    \"unanime\",\n    \"unifier\",\n    \"union\",\n    \"unique\",\n    \"unitaire\",\n    \"univers\",\n    \"uranium\",\n    \"urbain\",\n    \"urticant\",\n    \"usage\",\n    \"usine\",\n    \"usuel\",\n    \"usure\",\n    \"utile\",\n    \"utopie\",\n    \"vacarme\",\n    \"vaccin\",\n    \"vagabond\",\n    \"vague\",\n    \"vaillant\",\n    \"vaincre\",\n    \"vaisseau\",\n    \"valable\",\n    \"valise\",\n    \"vallon\",\n    \"valve\",\n    \"vampire\",\n    \"vanille\",\n    \"vapeur\",\n    \"varier\",\n    \"vaseux\",\n    \"vassal\",\n    \"vaste\",\n    \"vecteur\",\n    \"vedette\",\n    \"végétal\",\n    \"véhicule\",\n    \"veinard\",\n    \"véloce\",\n    \"vendredi\",\n    \"vénérer\",\n    \"venger\",\n    \"venimeux\",\n    \"ventouse\",\n    \"verdure\",\n    \"vérin\",\n    \"vernir\",\n    \"verrou\",\n    \"verser\",\n    \"vertu\",\n    \"veston\",\n    \"vétéran\",\n    \"vétuste\",\n    \"vexant\",\n    \"vexer\",\n    \"viaduc\",\n    \"viande\",\n    \"victoire\",\n    \"vidange\",\n    \"vidéo\",\n    \"vignette\",\n    \"vigueur\",\n    \"vilain\",\n    \"village\",\n    \"vinaigre\",\n    \"violon\",\n    \"vipère\",\n    \"virement\",\n    \"virtuose\",\n    \"virus\",\n    \"visage\",\n    \"viseur\",\n    \"vision\",\n    \"visqueux\",\n    \"visuel\",\n    \"vital\",\n    \"vitesse\",\n    \"viticole\",\n    \"vitrine\",\n    \"vivace\",\n    \"vivipare\",\n    \"vocation\",\n    \"voguer\",\n    \"voile\",\n    \"voisin\",\n    \"voiture\",\n    \"volaille\",\n    \"volcan\",\n    \"voltiger\",\n    \"volume\",\n    \"vorace\",\n    \"vortex\",\n    \"voter\",\n    \"vouloir\",\n    \"voyage\",\n    \"voyelle\",\n    \"wagon\",\n    \"xénon\",\n    \"yacht\",\n    \"zèbre\",\n    \"zénith\",\n    \"zeste\",\n    \"zoologie\"\n]\n","module.exports=[\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\"\n]\n","module.exports=[\n    \"가격\",\n    \"가끔\",\n    \"가난\",\n    \"가능\",\n    \"가득\",\n    \"가르침\",\n    \"가뭄\",\n    \"가방\",\n    \"가상\",\n    \"가슴\",\n    \"가운데\",\n    \"가을\",\n    \"가이드\",\n    \"가입\",\n    \"가장\",\n    \"가정\",\n    \"가족\",\n    \"가죽\",\n    \"각오\",\n    \"각자\",\n    \"간격\",\n    \"간부\",\n    \"간섭\",\n    \"간장\",\n    \"간접\",\n    \"간판\",\n    \"갈등\",\n    \"갈비\",\n    \"갈색\",\n    \"갈증\",\n    \"감각\",\n    \"감기\",\n    \"감소\",\n    \"감수성\",\n    \"감자\",\n    \"감정\",\n    \"갑자기\",\n    \"강남\",\n    \"강당\",\n    \"강도\",\n    \"강력히\",\n    \"강변\",\n    \"강북\",\n    \"강사\",\n    \"강수량\",\n    \"강아지\",\n    \"강원도\",\n    \"강의\",\n    \"강제\",\n    \"강조\",\n    \"같이\",\n    \"개구리\",\n    \"개나리\",\n    \"개방\",\n    \"개별\",\n    \"개선\",\n    \"개성\",\n    \"개인\",\n    \"객관적\",\n    \"거실\",\n    \"거액\",\n    \"거울\",\n    \"거짓\",\n    \"거품\",\n    \"걱정\",\n    \"건강\",\n    \"건물\",\n    \"건설\",\n    \"건조\",\n    \"건축\",\n    \"걸음\",\n    \"검사\",\n    \"검토\",\n    \"게시판\",\n    \"게임\",\n    \"겨울\",\n    \"견해\",\n    \"결과\",\n    \"결국\",\n    \"결론\",\n    \"결석\",\n    \"결승\",\n    \"결심\",\n    \"결정\",\n    \"결혼\",\n    \"경계\",\n    \"경고\",\n    \"경기\",\n    \"경력\",\n    \"경복궁\",\n    \"경비\",\n    \"경상도\",\n    \"경영\",\n    \"경우\",\n    \"경쟁\",\n    \"경제\",\n    \"경주\",\n    \"경찰\",\n    \"경치\",\n    \"경향\",\n    \"경험\",\n    \"계곡\",\n    \"계단\",\n    \"계란\",\n    \"계산\",\n    \"계속\",\n    \"계약\",\n    \"계절\",\n    \"계층\",\n    \"계획\",\n    \"고객\",\n    \"고구려\",\n    \"고궁\",\n    \"고급\",\n    \"고등학생\",\n    \"고무신\",\n    \"고민\",\n    \"고양이\",\n    \"고장\",\n    \"고전\",\n    \"고집\",\n    \"고춧가루\",\n    \"고통\",\n    \"고향\",\n    \"곡식\",\n    \"골목\",\n    \"골짜기\",\n    \"골프\",\n    \"공간\",\n    \"공개\",\n    \"공격\",\n    \"공군\",\n    \"공급\",\n    \"공기\",\n    \"공동\",\n    \"공무원\",\n    \"공부\",\n    \"공사\",\n    \"공식\",\n    \"공업\",\n    \"공연\",\n    \"공원\",\n    \"공장\",\n    \"공짜\",\n    \"공책\",\n    \"공통\",\n    \"공포\",\n    \"공항\",\n    \"공휴일\",\n    \"과목\",\n    \"과일\",\n    \"과장\",\n    \"과정\",\n    \"과학\",\n    \"관객\",\n    \"관계\",\n    \"관광\",\n    \"관념\",\n    \"관람\",\n    \"관련\",\n    \"관리\",\n    \"관습\",\n    \"관심\",\n    \"관점\",\n    \"관찰\",\n    \"광경\",\n    \"광고\",\n    \"광장\",\n    \"광주\",\n    \"괴로움\",\n    \"굉장히\",\n    \"교과서\",\n    \"교문\",\n    \"교복\",\n    \"교실\",\n    \"교양\",\n    \"교육\",\n    \"교장\",\n    \"교직\",\n    \"교통\",\n    \"교환\",\n    \"교훈\",\n    \"구경\",\n    \"구름\",\n    \"구멍\",\n    \"구별\",\n    \"구분\",\n    \"구석\",\n    \"구성\",\n    \"구속\",\n    \"구역\",\n    \"구입\",\n    \"구청\",\n    \"구체적\",\n    \"국가\",\n    \"국기\",\n    \"국내\",\n    \"국립\",\n    \"국물\",\n    \"국민\",\n    \"국수\",\n    \"국어\",\n    \"국왕\",\n    \"국적\",\n    \"국제\",\n    \"국회\",\n    \"군대\",\n    \"군사\",\n    \"군인\",\n    \"궁극적\",\n    \"권리\",\n    \"권위\",\n    \"권투\",\n    \"귀국\",\n    \"귀신\",\n    \"규정\",\n    \"규칙\",\n    \"균형\",\n    \"그날\",\n    \"그냥\",\n    \"그늘\",\n    \"그러나\",\n    \"그룹\",\n    \"그릇\",\n    \"그림\",\n    \"그제서야\",\n    \"그토록\",\n    \"극복\",\n    \"극히\",\n    \"근거\",\n    \"근교\",\n    \"근래\",\n    \"근로\",\n    \"근무\",\n    \"근본\",\n    \"근원\",\n    \"근육\",\n    \"근처\",\n    \"글씨\",\n    \"글자\",\n    \"금강산\",\n    \"금고\",\n    \"금년\",\n    \"금메달\",\n    \"금액\",\n    \"금연\",\n    \"금요일\",\n    \"금지\",\n    \"긍정적\",\n    \"기간\",\n    \"기관\",\n    \"기념\",\n    \"기능\",\n    \"기독교\",\n    \"기둥\",\n    \"기록\",\n    \"기름\",\n    \"기법\",\n    \"기본\",\n    \"기분\",\n    \"기쁨\",\n    \"기숙사\",\n    \"기술\",\n    \"기억\",\n    \"기업\",\n    \"기온\",\n    \"기운\",\n    \"기원\",\n    \"기적\",\n    \"기준\",\n    \"기침\",\n    \"기혼\",\n    \"기획\",\n    \"긴급\",\n    \"긴장\",\n    \"길이\",\n    \"김밥\",\n    \"김치\",\n    \"김포공항\",\n    \"깍두기\",\n    \"깜빡\",\n    \"깨달음\",\n    \"깨소금\",\n    \"껍질\",\n    \"꼭대기\",\n    \"꽃잎\",\n    \"나들이\",\n    \"나란히\",\n    \"나머지\",\n    \"나물\",\n    \"나침반\",\n    \"나흘\",\n    \"낙엽\",\n    \"난방\",\n    \"날개\",\n    \"날씨\",\n    \"날짜\",\n    \"남녀\",\n    \"남대문\",\n    \"남매\",\n    \"남산\",\n    \"남자\",\n    \"남편\",\n    \"남학생\",\n    \"낭비\",\n    \"낱말\",\n    \"내년\",\n    \"내용\",\n    \"내일\",\n    \"냄비\",\n    \"냄새\",\n    \"냇물\",\n    \"냉동\",\n    \"냉면\",\n    \"냉방\",\n    \"냉장고\",\n    \"넥타이\",\n    \"넷째\",\n    \"노동\",\n    \"노란색\",\n    \"노력\",\n    \"노인\",\n    \"녹음\",\n    \"녹차\",\n    \"녹화\",\n    \"논리\",\n    \"논문\",\n    \"논쟁\",\n    \"놀이\",\n    \"농구\",\n    \"농담\",\n    \"농민\",\n    \"농부\",\n    \"농업\",\n    \"농장\",\n    \"농촌\",\n    \"높이\",\n    \"눈동자\",\n    \"눈물\",\n    \"눈썹\",\n    \"뉴욕\",\n    \"느낌\",\n    \"늑대\",\n    \"능동적\",\n    \"능력\",\n    \"다방\",\n    \"다양성\",\n    \"다음\",\n    \"다이어트\",\n    \"다행\",\n    \"단계\",\n    \"단골\",\n    \"단독\",\n    \"단맛\",\n    \"단순\",\n    \"단어\",\n    \"단위\",\n    \"단점\",\n    \"단체\",\n    \"단추\",\n    \"단편\",\n    \"단풍\",\n    \"달걀\",\n    \"달러\",\n    \"달력\",\n    \"달리\",\n    \"닭고기\",\n    \"담당\",\n    \"담배\",\n    \"담요\",\n    \"담임\",\n    \"답변\",\n    \"답장\",\n    \"당근\",\n    \"당분간\",\n    \"당연히\",\n    \"당장\",\n    \"대규모\",\n    \"대낮\",\n    \"대단히\",\n    \"대답\",\n    \"대도시\",\n    \"대략\",\n    \"대량\",\n    \"대륙\",\n    \"대문\",\n    \"대부분\",\n    \"대신\",\n    \"대응\",\n    \"대장\",\n    \"대전\",\n    \"대접\",\n    \"대중\",\n    \"대책\",\n    \"대출\",\n    \"대충\",\n    \"대통령\",\n    \"대학\",\n    \"대한민국\",\n    \"대합실\",\n    \"대형\",\n    \"덩어리\",\n    \"데이트\",\n    \"도대체\",\n    \"도덕\",\n    \"도둑\",\n    \"도망\",\n    \"도서관\",\n    \"도심\",\n    \"도움\",\n    \"도입\",\n    \"도자기\",\n    \"도저히\",\n    \"도전\",\n    \"도중\",\n    \"도착\",\n    \"독감\",\n    \"독립\",\n    \"독서\",\n    \"독일\",\n    \"독창적\",\n    \"동화책\",\n    \"뒷모습\",\n    \"뒷산\",\n    \"딸아이\",\n    \"마누라\",\n    \"마늘\",\n    \"마당\",\n    \"마라톤\",\n    \"마련\",\n    \"마무리\",\n    \"마사지\",\n    \"마약\",\n    \"마요네즈\",\n    \"마을\",\n    \"마음\",\n    \"마이크\",\n    \"마중\",\n    \"마지막\",\n    \"마찬가지\",\n    \"마찰\",\n    \"마흔\",\n    \"막걸리\",\n    \"막내\",\n    \"막상\",\n    \"만남\",\n    \"만두\",\n    \"만세\",\n    \"만약\",\n    \"만일\",\n    \"만점\",\n    \"만족\",\n    \"만화\",\n    \"많이\",\n    \"말기\",\n    \"말씀\",\n    \"말투\",\n    \"맘대로\",\n    \"망원경\",\n    \"매년\",\n    \"매달\",\n    \"매력\",\n    \"매번\",\n    \"매스컴\",\n    \"매일\",\n    \"매장\",\n    \"맥주\",\n    \"먹이\",\n    \"먼저\",\n    \"먼지\",\n    \"멀리\",\n    \"메일\",\n    \"며느리\",\n    \"며칠\",\n    \"면담\",\n    \"멸치\",\n    \"명단\",\n    \"명령\",\n    \"명예\",\n    \"명의\",\n    \"명절\",\n    \"명칭\",\n    \"명함\",\n    \"모금\",\n    \"모니터\",\n    \"모델\",\n    \"모든\",\n    \"모범\",\n    \"모습\",\n    \"모양\",\n    \"모임\",\n    \"모조리\",\n    \"모집\",\n    \"모퉁이\",\n    \"목걸이\",\n    \"목록\",\n    \"목사\",\n    \"목소리\",\n    \"목숨\",\n    \"목적\",\n    \"목표\",\n    \"몰래\",\n    \"몸매\",\n    \"몸무게\",\n    \"몸살\",\n    \"몸속\",\n    \"몸짓\",\n    \"몸통\",\n    \"몹시\",\n    \"무관심\",\n    \"무궁화\",\n    \"무더위\",\n    \"무덤\",\n    \"무릎\",\n    \"무슨\",\n    \"무엇\",\n    \"무역\",\n    \"무용\",\n    \"무조건\",\n    \"무지개\",\n    \"무척\",\n    \"문구\",\n    \"문득\",\n    \"문법\",\n    \"문서\",\n    \"문제\",\n    \"문학\",\n    \"문화\",\n    \"물가\",\n    \"물건\",\n    \"물결\",\n    \"물고기\",\n    \"물론\",\n    \"물리학\",\n    \"물음\",\n    \"물질\",\n    \"물체\",\n    \"미국\",\n    \"미디어\",\n    \"미사일\",\n    \"미술\",\n    \"미역\",\n    \"미용실\",\n    \"미움\",\n    \"미인\",\n    \"미팅\",\n    \"미혼\",\n    \"민간\",\n    \"민족\",\n    \"민주\",\n    \"믿음\",\n    \"밀가루\",\n    \"밀리미터\",\n    \"밑바닥\",\n    \"바가지\",\n    \"바구니\",\n    \"바나나\",\n    \"바늘\",\n    \"바닥\",\n    \"바닷가\",\n    \"바람\",\n    \"바이러스\",\n    \"바탕\",\n    \"박물관\",\n    \"박사\",\n    \"박수\",\n    \"반대\",\n    \"반드시\",\n    \"반말\",\n    \"반발\",\n    \"반성\",\n    \"반응\",\n    \"반장\",\n    \"반죽\",\n    \"반지\",\n    \"반찬\",\n    \"받침\",\n    \"발가락\",\n    \"발걸음\",\n    \"발견\",\n    \"발달\",\n    \"발레\",\n    \"발목\",\n    \"발바닥\",\n    \"발생\",\n    \"발음\",\n    \"발자국\",\n    \"발전\",\n    \"발톱\",\n    \"발표\",\n    \"밤하늘\",\n    \"밥그릇\",\n    \"밥맛\",\n    \"밥상\",\n    \"밥솥\",\n    \"방금\",\n    \"방면\",\n    \"방문\",\n    \"방바닥\",\n    \"방법\",\n    \"방송\",\n    \"방식\",\n    \"방안\",\n    \"방울\",\n    \"방지\",\n    \"방학\",\n    \"방해\",\n    \"방향\",\n    \"배경\",\n    \"배꼽\",\n    \"배달\",\n    \"배드민턴\",\n    \"백두산\",\n    \"백색\",\n    \"백성\",\n    \"백인\",\n    \"백제\",\n    \"백화점\",\n    \"버릇\",\n    \"버섯\",\n    \"버튼\",\n    \"번개\",\n    \"번역\",\n    \"번지\",\n    \"번호\",\n    \"벌금\",\n    \"벌레\",\n    \"벌써\",\n    \"범위\",\n    \"범인\",\n    \"범죄\",\n    \"법률\",\n    \"법원\",\n    \"법적\",\n    \"법칙\",\n    \"베이징\",\n    \"벨트\",\n    \"변경\",\n    \"변동\",\n    \"변명\",\n    \"변신\",\n    \"변호사\",\n    \"변화\",\n    \"별도\",\n    \"별명\",\n    \"별일\",\n    \"병실\",\n    \"병아리\",\n    \"병원\",\n    \"보관\",\n    \"보너스\",\n    \"보라색\",\n    \"보람\",\n    \"보름\",\n    \"보상\",\n    \"보안\",\n    \"보자기\",\n    \"보장\",\n    \"보전\",\n    \"보존\",\n    \"보통\",\n    \"보편적\",\n    \"보험\",\n    \"복도\",\n    \"복사\",\n    \"복숭아\",\n    \"복습\",\n    \"볶음\",\n    \"본격적\",\n    \"본래\",\n    \"본부\",\n    \"본사\",\n    \"본성\",\n    \"본인\",\n    \"본질\",\n    \"볼펜\",\n    \"봉사\",\n    \"봉지\",\n    \"봉투\",\n    \"부근\",\n    \"부끄러움\",\n    \"부담\",\n    \"부동산\",\n    \"부문\",\n    \"부분\",\n    \"부산\",\n    \"부상\",\n    \"부엌\",\n    \"부인\",\n    \"부작용\",\n    \"부장\",\n    \"부정\",\n    \"부족\",\n    \"부지런히\",\n    \"부친\",\n    \"부탁\",\n    \"부품\",\n    \"부회장\",\n    \"북부\",\n    \"북한\",\n    \"분노\",\n    \"분량\",\n    \"분리\",\n    \"분명\",\n    \"분석\",\n    \"분야\",\n    \"분위기\",\n    \"분필\",\n    \"분홍색\",\n    \"불고기\",\n    \"불과\",\n    \"불교\",\n    \"불꽃\",\n    \"불만\",\n    \"불법\",\n    \"불빛\",\n    \"불안\",\n    \"불이익\",\n    \"불행\",\n    \"브랜드\",\n    \"비극\",\n    \"비난\",\n    \"비닐\",\n    \"비둘기\",\n    \"비디오\",\n    \"비로소\",\n    \"비만\",\n    \"비명\",\n    \"비밀\",\n    \"비바람\",\n    \"비빔밥\",\n    \"비상\",\n    \"비용\",\n    \"비율\",\n    \"비중\",\n    \"비타민\",\n    \"비판\",\n    \"빌딩\",\n    \"빗물\",\n    \"빗방울\",\n    \"빗줄기\",\n    \"빛깔\",\n    \"빨간색\",\n    \"빨래\",\n    \"빨리\",\n    \"사건\",\n    \"사계절\",\n    \"사나이\",\n    \"사냥\",\n    \"사람\",\n    \"사랑\",\n    \"사립\",\n    \"사모님\",\n    \"사물\",\n    \"사방\",\n    \"사상\",\n    \"사생활\",\n    \"사설\",\n    \"사슴\",\n    \"사실\",\n    \"사업\",\n    \"사용\",\n    \"사월\",\n    \"사장\",\n    \"사전\",\n    \"사진\",\n    \"사촌\",\n    \"사춘기\",\n    \"사탕\",\n    \"사투리\",\n    \"사흘\",\n    \"산길\",\n    \"산부인과\",\n    \"산업\",\n    \"산책\",\n    \"살림\",\n    \"살인\",\n    \"살짝\",\n    \"삼계탕\",\n    \"삼국\",\n    \"삼십\",\n    \"삼월\",\n    \"삼촌\",\n    \"상관\",\n    \"상금\",\n    \"상대\",\n    \"상류\",\n    \"상반기\",\n    \"상상\",\n    \"상식\",\n    \"상업\",\n    \"상인\",\n    \"상자\",\n    \"상점\",\n    \"상처\",\n    \"상추\",\n    \"상태\",\n    \"상표\",\n    \"상품\",\n    \"상황\",\n    \"새벽\",\n    \"색깔\",\n    \"색연필\",\n    \"생각\",\n    \"생명\",\n    \"생물\",\n    \"생방송\",\n    \"생산\",\n    \"생선\",\n    \"생신\",\n    \"생일\",\n    \"생활\",\n    \"서랍\",\n    \"서른\",\n    \"서명\",\n    \"서민\",\n    \"서비스\",\n    \"서양\",\n    \"서울\",\n    \"서적\",\n    \"서점\",\n    \"서쪽\",\n    \"서클\",\n    \"석사\",\n    \"석유\",\n    \"선거\",\n    \"선물\",\n    \"선배\",\n    \"선생\",\n    \"선수\",\n    \"선원\",\n    \"선장\",\n    \"선전\",\n    \"선택\",\n    \"선풍기\",\n    \"설거지\",\n    \"설날\",\n    \"설렁탕\",\n    \"설명\",\n    \"설문\",\n    \"설사\",\n    \"설악산\",\n    \"설치\",\n    \"설탕\",\n    \"섭씨\",\n    \"성공\",\n    \"성당\",\n    \"성명\",\n    \"성별\",\n    \"성인\",\n    \"성장\",\n    \"성적\",\n    \"성질\",\n    \"성함\",\n    \"세금\",\n    \"세미나\",\n    \"세상\",\n    \"세월\",\n    \"세종대왕\",\n    \"세탁\",\n    \"센터\",\n    \"센티미터\",\n    \"셋째\",\n    \"소규모\",\n    \"소극적\",\n    \"소금\",\n    \"소나기\",\n    \"소년\",\n    \"소득\",\n    \"소망\",\n    \"소문\",\n    \"소설\",\n    \"소속\",\n    \"소아과\",\n    \"소용\",\n    \"소원\",\n    \"소음\",\n    \"소중히\",\n    \"소지품\",\n    \"소질\",\n    \"소풍\",\n    \"소형\",\n    \"속담\",\n    \"속도\",\n    \"속옷\",\n    \"손가락\",\n    \"손길\",\n    \"손녀\",\n    \"손님\",\n    \"손등\",\n    \"손목\",\n    \"손뼉\",\n    \"손실\",\n    \"손질\",\n    \"손톱\",\n    \"손해\",\n    \"솔직히\",\n    \"솜씨\",\n    \"송아지\",\n    \"송이\",\n    \"송편\",\n    \"쇠고기\",\n    \"쇼핑\",\n    \"수건\",\n    \"수년\",\n    \"수단\",\n    \"수돗물\",\n    \"수동적\",\n    \"수면\",\n    \"수명\",\n    \"수박\",\n    \"수상\",\n    \"수석\",\n    \"수술\",\n    \"수시로\",\n    \"수업\",\n    \"수염\",\n    \"수영\",\n    \"수입\",\n    \"수준\",\n    \"수집\",\n    \"수출\",\n    \"수컷\",\n    \"수필\",\n    \"수학\",\n    \"수험생\",\n    \"수화기\",\n    \"숙녀\",\n    \"숙소\",\n    \"숙제\",\n    \"순간\",\n    \"순서\",\n    \"순수\",\n    \"순식간\",\n    \"순위\",\n    \"숟가락\",\n    \"술병\",\n    \"술집\",\n    \"숫자\",\n    \"스님\",\n    \"스물\",\n    \"스스로\",\n    \"스승\",\n    \"스웨터\",\n    \"스위치\",\n    \"스케이트\",\n    \"스튜디오\",\n    \"스트레스\",\n    \"스포츠\",\n    \"슬쩍\",\n    \"슬픔\",\n    \"습관\",\n    \"습기\",\n    \"승객\",\n    \"승리\",\n    \"승부\",\n    \"승용차\",\n    \"승진\",\n    \"시각\",\n    \"시간\",\n    \"시골\",\n    \"시금치\",\n    \"시나리오\",\n    \"시댁\",\n    \"시리즈\",\n    \"시멘트\",\n    \"시민\",\n    \"시부모\",\n    \"시선\",\n    \"시설\",\n    \"시스템\",\n    \"시아버지\",\n    \"시어머니\",\n    \"시월\",\n    \"시인\",\n    \"시일\",\n    \"시작\",\n    \"시장\",\n    \"시절\",\n    \"시점\",\n    \"시중\",\n    \"시즌\",\n    \"시집\",\n    \"시청\",\n    \"시합\",\n    \"시험\",\n    \"식구\",\n    \"식기\",\n    \"식당\",\n    \"식량\",\n    \"식료품\",\n    \"식물\",\n    \"식빵\",\n    \"식사\",\n    \"식생활\",\n    \"식초\",\n    \"식탁\",\n    \"식품\",\n    \"신고\",\n    \"신규\",\n    \"신념\",\n    \"신문\",\n    \"신발\",\n    \"신비\",\n    \"신사\",\n    \"신세\",\n    \"신용\",\n    \"신제품\",\n    \"신청\",\n    \"신체\",\n    \"신화\",\n    \"실감\",\n    \"실내\",\n    \"실력\",\n    \"실례\",\n    \"실망\",\n    \"실수\",\n    \"실습\",\n    \"실시\",\n    \"실장\",\n    \"실정\",\n    \"실질적\",\n    \"실천\",\n    \"실체\",\n    \"실컷\",\n    \"실태\",\n    \"실패\",\n    \"실험\",\n    \"실현\",\n    \"심리\",\n    \"심부름\",\n    \"심사\",\n    \"심장\",\n    \"심정\",\n    \"심판\",\n    \"쌍둥이\",\n    \"씨름\",\n    \"씨앗\",\n    \"아가씨\",\n    \"아나운서\",\n    \"아드님\",\n    \"아들\",\n    \"아쉬움\",\n    \"아스팔트\",\n    \"아시아\",\n    \"아울러\",\n    \"아저씨\",\n    \"아줌마\",\n    \"아직\",\n    \"아침\",\n    \"아파트\",\n    \"아프리카\",\n    \"아픔\",\n    \"아홉\",\n    \"아흔\",\n    \"악기\",\n    \"악몽\",\n    \"악수\",\n    \"안개\",\n    \"안경\",\n    \"안과\",\n    \"안내\",\n    \"안녕\",\n    \"안동\",\n    \"안방\",\n    \"안부\",\n    \"안주\",\n    \"알루미늄\",\n    \"알코올\",\n    \"암시\",\n    \"암컷\",\n    \"압력\",\n    \"앞날\",\n    \"앞문\",\n    \"애인\",\n    \"애정\",\n    \"액수\",\n    \"앨범\",\n    \"야간\",\n    \"야단\",\n    \"야옹\",\n    \"약간\",\n    \"약국\",\n    \"약속\",\n    \"약수\",\n    \"약점\",\n    \"약품\",\n    \"약혼녀\",\n    \"양념\",\n    \"양력\",\n    \"양말\",\n    \"양배추\",\n    \"양주\",\n    \"양파\",\n    \"어둠\",\n    \"어려움\",\n    \"어른\",\n    \"어젯밤\",\n    \"어쨌든\",\n    \"어쩌다가\",\n    \"어쩐지\",\n    \"언니\",\n    \"언덕\",\n    \"언론\",\n    \"언어\",\n    \"얼굴\",\n    \"얼른\",\n    \"얼음\",\n    \"얼핏\",\n    \"엄마\",\n    \"업무\",\n    \"업종\",\n    \"업체\",\n    \"엉덩이\",\n    \"엉망\",\n    \"엉터리\",\n    \"엊그제\",\n    \"에너지\",\n    \"에어컨\",\n    \"엔진\",\n    \"여건\",\n    \"여고생\",\n    \"여관\",\n    \"여군\",\n    \"여권\",\n    \"여대생\",\n    \"여덟\",\n    \"여동생\",\n    \"여든\",\n    \"여론\",\n    \"여름\",\n    \"여섯\",\n    \"여성\",\n    \"여왕\",\n    \"여인\",\n    \"여전히\",\n    \"여직원\",\n    \"여학생\",\n    \"여행\",\n    \"역사\",\n    \"역시\",\n    \"역할\",\n    \"연결\",\n    \"연구\",\n    \"연극\",\n    \"연기\",\n    \"연락\",\n    \"연설\",\n    \"연세\",\n    \"연속\",\n    \"연습\",\n    \"연애\",\n    \"연예인\",\n    \"연인\",\n    \"연장\",\n    \"연주\",\n    \"연출\",\n    \"연필\",\n    \"연합\",\n    \"연휴\",\n    \"열기\",\n    \"열매\",\n    \"열쇠\",\n    \"열심히\",\n    \"열정\",\n    \"열차\",\n    \"열흘\",\n    \"염려\",\n    \"엽서\",\n    \"영국\",\n    \"영남\",\n    \"영상\",\n    \"영양\",\n    \"영역\",\n    \"영웅\",\n    \"영원히\",\n    \"영하\",\n    \"영향\",\n    \"영혼\",\n    \"영화\",\n    \"옆구리\",\n    \"옆방\",\n    \"옆집\",\n    \"예감\",\n    \"예금\",\n    \"예방\",\n    \"예산\",\n    \"예상\",\n    \"예선\",\n    \"예술\",\n    \"예습\",\n    \"예식장\",\n    \"예약\",\n    \"예전\",\n    \"예절\",\n    \"예정\",\n    \"예컨대\",\n    \"옛날\",\n    \"오늘\",\n    \"오락\",\n    \"오랫동안\",\n    \"오렌지\",\n    \"오로지\",\n    \"오른발\",\n    \"오븐\",\n    \"오십\",\n    \"오염\",\n    \"오월\",\n    \"오전\",\n    \"오직\",\n    \"오징어\",\n    \"오페라\",\n    \"오피스텔\",\n    \"오히려\",\n    \"옥상\",\n    \"옥수수\",\n    \"온갖\",\n    \"온라인\",\n    \"온몸\",\n    \"온종일\",\n    \"온통\",\n    \"올가을\",\n    \"올림픽\",\n    \"올해\",\n    \"옷차림\",\n    \"와이셔츠\",\n    \"와인\",\n    \"완성\",\n    \"완전\",\n    \"왕비\",\n    \"왕자\",\n    \"왜냐하면\",\n    \"왠지\",\n    \"외갓집\",\n    \"외국\",\n    \"외로움\",\n    \"외삼촌\",\n    \"외출\",\n    \"외침\",\n    \"외할머니\",\n    \"왼발\",\n    \"왼손\",\n    \"왼쪽\",\n    \"요금\",\n    \"요일\",\n    \"요즘\",\n    \"요청\",\n    \"용기\",\n    \"용서\",\n    \"용어\",\n    \"우산\",\n    \"우선\",\n    \"우승\",\n    \"우연히\",\n    \"우정\",\n    \"우체국\",\n    \"우편\",\n    \"운동\",\n    \"운명\",\n    \"운반\",\n    \"운전\",\n    \"운행\",\n    \"울산\",\n    \"울음\",\n    \"움직임\",\n    \"웃어른\",\n    \"웃음\",\n    \"워낙\",\n    \"원고\",\n    \"원래\",\n    \"원서\",\n    \"원숭이\",\n    \"원인\",\n    \"원장\",\n    \"원피스\",\n    \"월급\",\n    \"월드컵\",\n    \"월세\",\n    \"월요일\",\n    \"웨이터\",\n    \"위반\",\n    \"위법\",\n    \"위성\",\n    \"위원\",\n    \"위험\",\n    \"위협\",\n    \"윗사람\",\n    \"유난히\",\n    \"유럽\",\n    \"유명\",\n    \"유물\",\n    \"유산\",\n    \"유적\",\n    \"유치원\",\n    \"유학\",\n    \"유행\",\n    \"유형\",\n    \"육군\",\n    \"육상\",\n    \"육십\",\n    \"육체\",\n    \"은행\",\n    \"음력\",\n    \"음료\",\n    \"음반\",\n    \"음성\",\n    \"음식\",\n    \"음악\",\n    \"음주\",\n    \"의견\",\n    \"의논\",\n    \"의문\",\n    \"의복\",\n    \"의식\",\n    \"의심\",\n    \"의외로\",\n    \"의욕\",\n    \"의원\",\n    \"의학\",\n    \"이것\",\n    \"이곳\",\n    \"이념\",\n    \"이놈\",\n    \"이달\",\n    \"이대로\",\n    \"이동\",\n    \"이렇게\",\n    \"이력서\",\n    \"이론적\",\n    \"이름\",\n    \"이민\",\n    \"이발소\",\n    \"이별\",\n    \"이불\",\n    \"이빨\",\n    \"이상\",\n    \"이성\",\n    \"이슬\",\n    \"이야기\",\n    \"이용\",\n    \"이웃\",\n    \"이월\",\n    \"이윽고\",\n    \"이익\",\n    \"이전\",\n    \"이중\",\n    \"이튿날\",\n    \"이틀\",\n    \"이혼\",\n    \"인간\",\n    \"인격\",\n    \"인공\",\n    \"인구\",\n    \"인근\",\n    \"인기\",\n    \"인도\",\n    \"인류\",\n    \"인물\",\n    \"인생\",\n    \"인쇄\",\n    \"인연\",\n    \"인원\",\n    \"인재\",\n    \"인종\",\n    \"인천\",\n    \"인체\",\n    \"인터넷\",\n    \"인하\",\n    \"인형\",\n    \"일곱\",\n    \"일기\",\n    \"일단\",\n    \"일대\",\n    \"일등\",\n    \"일반\",\n    \"일본\",\n    \"일부\",\n    \"일상\",\n    \"일생\",\n    \"일손\",\n    \"일요일\",\n    \"일월\",\n    \"일정\",\n    \"일종\",\n    \"일주일\",\n    \"일찍\",\n    \"일체\",\n    \"일치\",\n    \"일행\",\n    \"일회용\",\n    \"임금\",\n    \"임무\",\n    \"입대\",\n    \"입력\",\n    \"입맛\",\n    \"입사\",\n    \"입술\",\n    \"입시\",\n    \"입원\",\n    \"입장\",\n    \"입학\",\n    \"자가용\",\n    \"자격\",\n    \"자극\",\n    \"자동\",\n    \"자랑\",\n    \"자부심\",\n    \"자식\",\n    \"자신\",\n    \"자연\",\n    \"자원\",\n    \"자율\",\n    \"자전거\",\n    \"자정\",\n    \"자존심\",\n    \"자판\",\n    \"작가\",\n    \"작년\",\n    \"작성\",\n    \"작업\",\n    \"작용\",\n    \"작은딸\",\n    \"작품\",\n    \"잔디\",\n    \"잔뜩\",\n    \"잔치\",\n    \"잘못\",\n    \"잠깐\",\n    \"잠수함\",\n    \"잠시\",\n    \"잠옷\",\n    \"잠자리\",\n    \"잡지\",\n    \"장관\",\n    \"장군\",\n    \"장기간\",\n    \"장래\",\n    \"장례\",\n    \"장르\",\n    \"장마\",\n    \"장면\",\n    \"장모\",\n    \"장미\",\n    \"장비\",\n    \"장사\",\n    \"장소\",\n    \"장식\",\n    \"장애인\",\n    \"장인\",\n    \"장점\",\n    \"장차\",\n    \"장학금\",\n    \"재능\",\n    \"재빨리\",\n    \"재산\",\n    \"재생\",\n    \"재작년\",\n    \"재정\",\n    \"재채기\",\n    \"재판\",\n    \"재학\",\n    \"재활용\",\n    \"저것\",\n    \"저고리\",\n    \"저곳\",\n    \"저녁\",\n    \"저런\",\n    \"저렇게\",\n    \"저번\",\n    \"저울\",\n    \"저절로\",\n    \"저축\",\n    \"적극\",\n    \"적당히\",\n    \"적성\",\n    \"적용\",\n    \"적응\",\n    \"전개\",\n    \"전공\",\n    \"전기\",\n    \"전달\",\n    \"전라도\",\n    \"전망\",\n    \"전문\",\n    \"전반\",\n    \"전부\",\n    \"전세\",\n    \"전시\",\n    \"전용\",\n    \"전자\",\n    \"전쟁\",\n    \"전주\",\n    \"전철\",\n    \"전체\",\n    \"전통\",\n    \"전혀\",\n    \"전후\",\n    \"절대\",\n    \"절망\",\n    \"절반\",\n    \"절약\",\n    \"절차\",\n    \"점검\",\n    \"점수\",\n    \"점심\",\n    \"점원\",\n    \"점점\",\n    \"점차\",\n    \"접근\",\n    \"접시\",\n    \"접촉\",\n    \"젓가락\",\n    \"정거장\",\n    \"정도\",\n    \"정류장\",\n    \"정리\",\n    \"정말\",\n    \"정면\",\n    \"정문\",\n    \"정반대\",\n    \"정보\",\n    \"정부\",\n    \"정비\",\n    \"정상\",\n    \"정성\",\n    \"정오\",\n    \"정원\",\n    \"정장\",\n    \"정지\",\n    \"정치\",\n    \"정확히\",\n    \"제공\",\n    \"제과점\",\n    \"제대로\",\n    \"제목\",\n    \"제발\",\n    \"제법\",\n    \"제삿날\",\n    \"제안\",\n    \"제일\",\n    \"제작\",\n    \"제주도\",\n    \"제출\",\n    \"제품\",\n    \"제한\",\n    \"조각\",\n    \"조건\",\n    \"조금\",\n    \"조깅\",\n    \"조명\",\n    \"조미료\",\n    \"조상\",\n    \"조선\",\n    \"조용히\",\n    \"조절\",\n    \"조정\",\n    \"조직\",\n    \"존댓말\",\n    \"존재\",\n    \"졸업\",\n    \"졸음\",\n    \"종교\",\n    \"종로\",\n    \"종류\",\n    \"종소리\",\n    \"종업원\",\n    \"종종\",\n    \"종합\",\n    \"좌석\",\n    \"죄인\",\n    \"주관적\",\n    \"주름\",\n    \"주말\",\n    \"주머니\",\n    \"주먹\",\n    \"주문\",\n    \"주민\",\n    \"주방\",\n    \"주변\",\n    \"주식\",\n    \"주인\",\n    \"주일\",\n    \"주장\",\n    \"주전자\",\n    \"주택\",\n    \"준비\",\n    \"줄거리\",\n    \"줄기\",\n    \"줄무늬\",\n    \"중간\",\n    \"중계방송\",\n    \"중국\",\n    \"중년\",\n    \"중단\",\n    \"중독\",\n    \"중반\",\n    \"중부\",\n    \"중세\",\n    \"중소기업\",\n    \"중순\",\n    \"중앙\",\n    \"중요\",\n    \"중학교\",\n    \"즉석\",\n    \"즉시\",\n    \"즐거움\",\n    \"증가\",\n    \"증거\",\n    \"증권\",\n    \"증상\",\n    \"증세\",\n    \"지각\",\n    \"지갑\",\n    \"지경\",\n    \"지극히\",\n    \"지금\",\n    \"지급\",\n    \"지능\",\n    \"지름길\",\n    \"지리산\",\n    \"지방\",\n    \"지붕\",\n    \"지식\",\n    \"지역\",\n    \"지우개\",\n    \"지원\",\n    \"지적\",\n    \"지점\",\n    \"지진\",\n    \"지출\",\n    \"직선\",\n    \"직업\",\n    \"직원\",\n    \"직장\",\n    \"진급\",\n    \"진동\",\n    \"진로\",\n    \"진료\",\n    \"진리\",\n    \"진짜\",\n    \"진찰\",\n    \"진출\",\n    \"진통\",\n    \"진행\",\n    \"질문\",\n    \"질병\",\n    \"질서\",\n    \"짐작\",\n    \"집단\",\n    \"집안\",\n    \"집중\",\n    \"짜증\",\n    \"찌꺼기\",\n    \"차남\",\n    \"차라리\",\n    \"차량\",\n    \"차림\",\n    \"차별\",\n    \"차선\",\n    \"차츰\",\n    \"착각\",\n    \"찬물\",\n    \"찬성\",\n    \"참가\",\n    \"참기름\",\n    \"참새\",\n    \"참석\",\n    \"참여\",\n    \"참외\",\n    \"참조\",\n    \"찻잔\",\n    \"창가\",\n    \"창고\",\n    \"창구\",\n    \"창문\",\n    \"창밖\",\n    \"창작\",\n    \"창조\",\n    \"채널\",\n    \"채점\",\n    \"책가방\",\n    \"책방\",\n    \"책상\",\n    \"책임\",\n    \"챔피언\",\n    \"처벌\",\n    \"처음\",\n    \"천국\",\n    \"천둥\",\n    \"천장\",\n    \"천재\",\n    \"천천히\",\n    \"철도\",\n    \"철저히\",\n    \"철학\",\n    \"첫날\",\n    \"첫째\",\n    \"청년\",\n    \"청바지\",\n    \"청소\",\n    \"청춘\",\n    \"체계\",\n    \"체력\",\n    \"체온\",\n    \"체육\",\n    \"체중\",\n    \"체험\",\n    \"초등학생\",\n    \"초반\",\n    \"초밥\",\n    \"초상화\",\n    \"초순\",\n    \"초여름\",\n    \"초원\",\n    \"초저녁\",\n    \"초점\",\n    \"초청\",\n    \"초콜릿\",\n    \"촛불\",\n    \"총각\",\n    \"총리\",\n    \"총장\",\n    \"촬영\",\n    \"최근\",\n    \"최상\",\n    \"최선\",\n    \"최신\",\n    \"최악\",\n    \"최종\",\n    \"추석\",\n    \"추억\",\n    \"추진\",\n    \"추천\",\n    \"추측\",\n    \"축구\",\n    \"축소\",\n    \"축제\",\n    \"축하\",\n    \"출근\",\n    \"출발\",\n    \"출산\",\n    \"출신\",\n    \"출연\",\n    \"출입\",\n    \"출장\",\n    \"출판\",\n    \"충격\",\n    \"충고\",\n    \"충돌\",\n    \"충분히\",\n    \"충청도\",\n    \"취업\",\n    \"취직\",\n    \"취향\",\n    \"치약\",\n    \"친구\",\n    \"친척\",\n    \"칠십\",\n    \"칠월\",\n    \"칠판\",\n    \"침대\",\n    \"침묵\",\n    \"침실\",\n    \"칫솔\",\n    \"칭찬\",\n    \"카메라\",\n    \"카운터\",\n    \"칼국수\",\n    \"캐릭터\",\n    \"캠퍼스\",\n    \"캠페인\",\n    \"커튼\",\n    \"컨디션\",\n    \"컬러\",\n    \"컴퓨터\",\n    \"코끼리\",\n    \"코미디\",\n    \"콘서트\",\n    \"콜라\",\n    \"콤플렉스\",\n    \"콩나물\",\n    \"쾌감\",\n    \"쿠데타\",\n    \"크림\",\n    \"큰길\",\n    \"큰딸\",\n    \"큰소리\",\n    \"큰아들\",\n    \"큰어머니\",\n    \"큰일\",\n    \"큰절\",\n    \"클래식\",\n    \"클럽\",\n    \"킬로\",\n    \"타입\",\n    \"타자기\",\n    \"탁구\",\n    \"탁자\",\n    \"탄생\",\n    \"태권도\",\n    \"태양\",\n    \"태풍\",\n    \"택시\",\n    \"탤런트\",\n    \"터널\",\n    \"터미널\",\n    \"테니스\",\n    \"테스트\",\n    \"테이블\",\n    \"텔레비전\",\n    \"토론\",\n    \"토마토\",\n    \"토요일\",\n    \"통계\",\n    \"통과\",\n    \"통로\",\n    \"통신\",\n    \"통역\",\n    \"통일\",\n    \"통장\",\n    \"통제\",\n    \"통증\",\n    \"통합\",\n    \"통화\",\n    \"퇴근\",\n    \"퇴원\",\n    \"퇴직금\",\n    \"튀김\",\n    \"트럭\",\n    \"특급\",\n    \"특별\",\n    \"특성\",\n    \"특수\",\n    \"특징\",\n    \"특히\",\n    \"튼튼히\",\n    \"티셔츠\",\n    \"파란색\",\n    \"파일\",\n    \"파출소\",\n    \"판결\",\n    \"판단\",\n    \"판매\",\n    \"판사\",\n    \"팔십\",\n    \"팔월\",\n    \"팝송\",\n    \"패션\",\n    \"팩스\",\n    \"팩시밀리\",\n    \"팬티\",\n    \"퍼센트\",\n    \"페인트\",\n    \"편견\",\n    \"편의\",\n    \"편지\",\n    \"편히\",\n    \"평가\",\n    \"평균\",\n    \"평생\",\n    \"평소\",\n    \"평양\",\n    \"평일\",\n    \"평화\",\n    \"포스터\",\n    \"포인트\",\n    \"포장\",\n    \"포함\",\n    \"표면\",\n    \"표정\",\n    \"표준\",\n    \"표현\",\n    \"품목\",\n    \"품질\",\n    \"풍경\",\n    \"풍속\",\n    \"풍습\",\n    \"프랑스\",\n    \"프린터\",\n    \"플라스틱\",\n    \"피곤\",\n    \"피망\",\n    \"피아노\",\n    \"필름\",\n    \"필수\",\n    \"필요\",\n    \"필자\",\n    \"필통\",\n    \"핑계\",\n    \"하느님\",\n    \"하늘\",\n    \"하드웨어\",\n    \"하룻밤\",\n    \"하반기\",\n    \"하숙집\",\n    \"하순\",\n    \"하여튼\",\n    \"하지만\",\n    \"하천\",\n    \"하품\",\n    \"하필\",\n    \"학과\",\n    \"학교\",\n    \"학급\",\n    \"학기\",\n    \"학년\",\n    \"학력\",\n    \"학번\",\n    \"학부모\",\n    \"학비\",\n    \"학생\",\n    \"학술\",\n    \"학습\",\n    \"학용품\",\n    \"학원\",\n    \"학위\",\n    \"학자\",\n    \"학점\",\n    \"한계\",\n    \"한글\",\n    \"한꺼번에\",\n    \"한낮\",\n    \"한눈\",\n    \"한동안\",\n    \"한때\",\n    \"한라산\",\n    \"한마디\",\n    \"한문\",\n    \"한번\",\n    \"한복\",\n    \"한식\",\n    \"한여름\",\n    \"한쪽\",\n    \"할머니\",\n    \"할아버지\",\n    \"할인\",\n    \"함께\",\n    \"함부로\",\n    \"합격\",\n    \"합리적\",\n    \"항공\",\n    \"항구\",\n    \"항상\",\n    \"항의\",\n    \"해결\",\n    \"해군\",\n    \"해답\",\n    \"해당\",\n    \"해물\",\n    \"해석\",\n    \"해설\",\n    \"해수욕장\",\n    \"해안\",\n    \"핵심\",\n    \"핸드백\",\n    \"햄버거\",\n    \"햇볕\",\n    \"햇살\",\n    \"행동\",\n    \"행복\",\n    \"행사\",\n    \"행운\",\n    \"행위\",\n    \"향기\",\n    \"향상\",\n    \"향수\",\n    \"허락\",\n    \"허용\",\n    \"헬기\",\n    \"현관\",\n    \"현금\",\n    \"현대\",\n    \"현상\",\n    \"현실\",\n    \"현장\",\n    \"현재\",\n    \"현지\",\n    \"혈액\",\n    \"협력\",\n    \"형부\",\n    \"형사\",\n    \"형수\",\n    \"형식\",\n    \"형제\",\n    \"형태\",\n    \"형편\",\n    \"혜택\",\n    \"호기심\",\n    \"호남\",\n    \"호랑이\",\n    \"호박\",\n    \"호텔\",\n    \"호흡\",\n    \"혹시\",\n    \"홀로\",\n    \"홈페이지\",\n    \"홍보\",\n    \"홍수\",\n    \"홍차\",\n    \"화면\",\n    \"화분\",\n    \"화살\",\n    \"화요일\",\n    \"화장\",\n    \"화학\",\n    \"확보\",\n    \"확인\",\n    \"확장\",\n    \"확정\",\n    \"환갑\",\n    \"환경\",\n    \"환영\",\n    \"환율\",\n    \"환자\",\n    \"활기\",\n    \"활동\",\n    \"활발히\",\n    \"활용\",\n    \"활짝\",\n    \"회견\",\n    \"회관\",\n    \"회복\",\n    \"회색\",\n    \"회원\",\n    \"회장\",\n    \"회전\",\n    \"횟수\",\n    \"횡단보도\",\n    \"효율적\",\n    \"후반\",\n    \"후춧가루\",\n    \"훈련\",\n    \"훨씬\",\n    \"휴식\",\n    \"휴일\",\n    \"흉내\",\n    \"흐름\",\n    \"흑백\",\n    \"흑인\",\n    \"흔적\",\n    \"흔히\",\n    \"흥미\",\n    \"흥분\",\n    \"희곡\",\n    \"희망\",\n    \"희생\",\n    \"흰색\",\n    \"힘껏\"\n]\n","module.exports=[\n    \"的\",\n    \"一\",\n    \"是\",\n    \"在\",\n    \"不\",\n    \"了\",\n    \"有\",\n    \"和\",\n    \"人\",\n    \"这\",\n    \"中\",\n    \"大\",\n    \"为\",\n    \"上\",\n    \"个\",\n    \"国\",\n    \"我\",\n    \"以\",\n    \"要\",\n    \"他\",\n    \"时\",\n    \"来\",\n    \"用\",\n    \"们\",\n    \"生\",\n    \"到\",\n    \"作\",\n    \"地\",\n    \"于\",\n    \"出\",\n    \"就\",\n    \"分\",\n    \"对\",\n    \"成\",\n    \"会\",\n    \"可\",\n    \"主\",\n    \"发\",\n    \"年\",\n    \"动\",\n    \"同\",\n    \"工\",\n    \"也\",\n    \"能\",\n    \"下\",\n    \"过\",\n    \"子\",\n    \"说\",\n    \"产\",\n    \"种\",\n    \"面\",\n    \"而\",\n    \"方\",\n    \"后\",\n    \"多\",\n    \"定\",\n    \"行\",\n    \"学\",\n    \"法\",\n    \"所\",\n    \"民\",\n    \"得\",\n    \"经\",\n    \"十\",\n    \"三\",\n    \"之\",\n    \"进\",\n    \"着\",\n    \"等\",\n    \"部\",\n    \"度\",\n    \"家\",\n    \"电\",\n    \"力\",\n    \"里\",\n    \"如\",\n    \"水\",\n    \"化\",\n    \"高\",\n    \"自\",\n    \"二\",\n    \"理\",\n    \"起\",\n    \"小\",\n    \"物\",\n    \"现\",\n    \"实\",\n    \"加\",\n    \"量\",\n    \"都\",\n    \"两\",\n    \"体\",\n    \"制\",\n    \"机\",\n    \"当\",\n    \"使\",\n    \"点\",\n    \"从\",\n    \"业\",\n    \"本\",\n    \"去\",\n    \"把\",\n    \"性\",\n    \"好\",\n    \"应\",\n    \"开\",\n    \"它\",\n    \"合\",\n    \"还\",\n    \"因\",\n    \"由\",\n    \"其\",\n    \"些\",\n    \"然\",\n    \"前\",\n    \"外\",\n    \"天\",\n    \"政\",\n    \"四\",\n    \"日\",\n    \"那\",\n    \"社\",\n    \"义\",\n    \"事\",\n    \"平\",\n    \"形\",\n    \"相\",\n    \"全\",\n    \"表\",\n    \"间\",\n    \"样\",\n    \"与\",\n    \"关\",\n    \"各\",\n    \"重\",\n    \"新\",\n    \"线\",\n    \"内\",\n    \"数\",\n    \"正\",\n    \"心\",\n    \"反\",\n    \"你\",\n    \"明\",\n    \"看\",\n    \"原\",\n    \"又\",\n    \"么\",\n    \"利\",\n    \"比\",\n    \"或\",\n    \"但\",\n    \"质\",\n    \"气\",\n    \"第\",\n    \"向\",\n    \"道\",\n    \"命\",\n    \"此\",\n    \"变\",\n    \"条\",\n    \"只\",\n    \"没\",\n    \"结\",\n    \"解\",\n    \"问\",\n    \"意\",\n    \"建\",\n    \"月\",\n    \"公\",\n    \"无\",\n    \"系\",\n    \"军\",\n    \"很\",\n    \"情\",\n    \"者\",\n    \"最\",\n    \"立\",\n    \"代\",\n    \"想\",\n    \"已\",\n    \"通\",\n    \"并\",\n    \"提\",\n    \"直\",\n    \"题\",\n    \"党\",\n    \"程\",\n    \"展\",\n    \"五\",\n    \"果\",\n    \"料\",\n    \"象\",\n    \"员\",\n    \"革\",\n    \"位\",\n    \"入\",\n    \"常\",\n    \"文\",\n    \"总\",\n    \"次\",\n    \"品\",\n    \"式\",\n    \"活\",\n    \"设\",\n    \"及\",\n    \"管\",\n    \"特\",\n    \"件\",\n    \"长\",\n    \"求\",\n    \"老\",\n    \"头\",\n    \"基\",\n    \"资\",\n    \"边\",\n    \"流\",\n    \"路\",\n    \"级\",\n    \"少\",\n    \"图\",\n    \"山\",\n    \"统\",\n    \"接\",\n    \"知\",\n    \"较\",\n    \"将\",\n    \"组\",\n    \"见\",\n    \"计\",\n    \"别\",\n    \"她\",\n    \"手\",\n    \"角\",\n    \"期\",\n    \"根\",\n    \"论\",\n    \"运\",\n    \"农\",\n    \"指\",\n    \"几\",\n    \"九\",\n    \"区\",\n    \"强\",\n    \"放\",\n    \"决\",\n    \"西\",\n    \"被\",\n    \"干\",\n    \"做\",\n    \"必\",\n    \"战\",\n    \"先\",\n    \"回\",\n    \"则\",\n    \"任\",\n    \"取\",\n    \"据\",\n    \"处\",\n    \"队\",\n    \"南\",\n    \"给\",\n    \"色\",\n    \"光\",\n    \"门\",\n    \"即\",\n    \"保\",\n    \"治\",\n    \"北\",\n    \"造\",\n    \"百\",\n    \"规\",\n    \"热\",\n    \"领\",\n    \"七\",\n    \"海\",\n    \"口\",\n    \"东\",\n    \"导\",\n    \"器\",\n    \"压\",\n    \"志\",\n    \"世\",\n    \"金\",\n    \"增\",\n    \"争\",\n    \"济\",\n    \"阶\",\n    \"油\",\n    \"思\",\n    \"术\",\n    \"极\",\n    \"交\",\n    \"受\",\n    \"联\",\n    \"什\",\n    \"认\",\n    \"六\",\n    \"共\",\n    \"权\",\n    \"收\",\n    \"证\",\n    \"改\",\n    \"清\",\n    \"美\",\n    \"再\",\n    \"采\",\n    \"转\",\n    \"更\",\n    \"单\",\n    \"风\",\n    \"切\",\n    \"打\",\n    \"白\",\n    \"教\",\n    \"速\",\n    \"花\",\n    \"带\",\n    \"安\",\n    \"场\",\n    \"身\",\n    \"车\",\n    \"例\",\n    \"真\",\n    \"务\",\n    \"具\",\n    \"万\",\n    \"每\",\n    \"目\",\n    \"至\",\n    \"达\",\n    \"走\",\n    \"积\",\n    \"示\",\n    \"议\",\n    \"声\",\n    \"报\",\n    \"斗\",\n    \"完\",\n    \"类\",\n    \"八\",\n    \"离\",\n    \"华\",\n    \"名\",\n    \"确\",\n    \"才\",\n    \"科\",\n    \"张\",\n    \"信\",\n    \"马\",\n    \"节\",\n    \"话\",\n    \"米\",\n    \"整\",\n    \"空\",\n    \"元\",\n    \"况\",\n    \"今\",\n    \"集\",\n    \"温\",\n    \"传\",\n    \"土\",\n    \"许\",\n    \"步\",\n    \"群\",\n    \"广\",\n    \"石\",\n    \"记\",\n    \"需\",\n    \"段\",\n    \"研\",\n    \"界\",\n    \"拉\",\n    \"林\",\n    \"律\",\n    \"叫\",\n    \"且\",\n    \"究\",\n    \"观\",\n    \"越\",\n    \"织\",\n    \"装\",\n    \"影\",\n    \"算\",\n    \"低\",\n    \"持\",\n    \"音\",\n    \"众\",\n    \"书\",\n    \"布\",\n    \"复\",\n    \"容\",\n    \"儿\",\n    \"须\",\n    \"际\",\n    \"商\",\n    \"非\",\n    \"验\",\n    \"连\",\n    \"断\",\n    \"深\",\n    \"难\",\n    \"近\",\n    \"矿\",\n    \"千\",\n    \"周\",\n    \"委\",\n    \"素\",\n    \"技\",\n    \"备\",\n    \"半\",\n    \"办\",\n    \"青\",\n    \"省\",\n    \"列\",\n    \"习\",\n    \"响\",\n    \"约\",\n    \"支\",\n    \"般\",\n    \"史\",\n    \"感\",\n    \"劳\",\n    \"便\",\n    \"团\",\n    \"往\",\n    \"酸\",\n    \"历\",\n    \"市\",\n    \"克\",\n    \"何\",\n    \"除\",\n    \"消\",\n    \"构\",\n    \"府\",\n    \"称\",\n    \"太\",\n    \"准\",\n    \"精\",\n    \"值\",\n    \"号\",\n    \"率\",\n    \"族\",\n    \"维\",\n    \"划\",\n    \"选\",\n    \"标\",\n    \"写\",\n    \"存\",\n    \"候\",\n    \"毛\",\n    \"亲\",\n    \"快\",\n    \"效\",\n    \"斯\",\n    \"院\",\n    \"查\",\n    \"江\",\n    \"型\",\n    \"眼\",\n    \"王\",\n    \"按\",\n    \"格\",\n    \"养\",\n    \"易\",\n    \"置\",\n    \"派\",\n    \"层\",\n    \"片\",\n    \"始\",\n    \"却\",\n    \"专\",\n    \"状\",\n    \"育\",\n    \"厂\",\n    \"京\",\n    \"识\",\n    \"适\",\n    \"属\",\n    \"圆\",\n    \"包\",\n    \"火\",\n    \"住\",\n    \"调\",\n    \"满\",\n    \"县\",\n    \"局\",\n    \"照\",\n    \"参\",\n    \"红\",\n    \"细\",\n    \"引\",\n    \"听\",\n    \"该\",\n    \"铁\",\n    \"价\",\n    \"严\",\n    \"首\",\n    \"底\",\n    \"液\",\n    \"官\",\n    \"德\",\n    \"随\",\n    \"病\",\n    \"苏\",\n    \"失\",\n    \"尔\",\n    \"死\",\n    \"讲\",\n    \"配\",\n    \"女\",\n    \"黄\",\n    \"推\",\n    \"显\",\n    \"谈\",\n    \"罪\",\n    \"神\",\n    \"艺\",\n    \"呢\",\n    \"席\",\n    \"含\",\n    \"企\",\n    \"望\",\n    \"密\",\n    \"批\",\n    \"营\",\n    \"项\",\n    \"防\",\n    \"举\",\n    \"球\",\n    \"英\",\n    \"氧\",\n    \"势\",\n    \"告\",\n    \"李\",\n    \"台\",\n    \"落\",\n    \"木\",\n    \"帮\",\n    \"轮\",\n    \"破\",\n    \"亚\",\n    \"师\",\n    \"围\",\n    \"注\",\n    \"远\",\n    \"字\",\n    \"材\",\n    \"排\",\n    \"供\",\n    \"河\",\n    \"态\",\n    \"封\",\n    \"另\",\n    \"施\",\n    \"减\",\n    \"树\",\n    \"溶\",\n    \"怎\",\n    \"止\",\n    \"案\",\n    \"言\",\n    \"士\",\n    \"均\",\n    \"武\",\n    \"固\",\n    \"叶\",\n    \"鱼\",\n    \"波\",\n    \"视\",\n    \"仅\",\n    \"费\",\n    \"紧\",\n    \"爱\",\n    \"左\",\n    \"章\",\n    \"早\",\n    \"朝\",\n    \"害\",\n    \"续\",\n    \"轻\",\n    \"服\",\n    \"试\",\n    \"食\",\n    \"充\",\n    \"兵\",\n    \"源\",\n    \"判\",\n    \"护\",\n    \"司\",\n    \"足\",\n    \"某\",\n    \"练\",\n    \"差\",\n    \"致\",\n    \"板\",\n    \"田\",\n    \"降\",\n    \"黑\",\n    \"犯\",\n    \"负\",\n    \"击\",\n    \"范\",\n    \"继\",\n    \"兴\",\n    \"似\",\n    \"余\",\n    \"坚\",\n    \"曲\",\n    \"输\",\n    \"修\",\n    \"故\",\n    \"城\",\n    \"夫\",\n    \"够\",\n    \"送\",\n    \"笔\",\n    \"船\",\n    \"占\",\n    \"右\",\n    \"财\",\n    \"吃\",\n    \"富\",\n    \"春\",\n    \"职\",\n    \"觉\",\n    \"汉\",\n    \"画\",\n    \"功\",\n    \"巴\",\n    \"跟\",\n    \"虽\",\n    \"杂\",\n    \"飞\",\n    \"检\",\n    \"吸\",\n    \"助\",\n    \"升\",\n    \"阳\",\n    \"互\",\n    \"初\",\n    \"创\",\n    \"抗\",\n    \"考\",\n    \"投\",\n    \"坏\",\n    \"策\",\n    \"古\",\n    \"径\",\n    \"换\",\n    \"未\",\n    \"跑\",\n    \"留\",\n    \"钢\",\n    \"曾\",\n    \"端\",\n    \"责\",\n    \"站\",\n    \"简\",\n    \"述\",\n    \"钱\",\n    \"副\",\n    \"尽\",\n    \"帝\",\n    \"射\",\n    \"草\",\n    \"冲\",\n    \"承\",\n    \"独\",\n    \"令\",\n    \"限\",\n    \"阿\",\n    \"宣\",\n    \"环\",\n    \"双\",\n    \"请\",\n    \"超\",\n    \"微\",\n    \"让\",\n    \"控\",\n    \"州\",\n    \"良\",\n    \"轴\",\n    \"找\",\n    \"否\",\n    \"纪\",\n    \"益\",\n    \"依\",\n    \"优\",\n    \"顶\",\n    \"础\",\n    \"载\",\n    \"倒\",\n    \"房\",\n    \"突\",\n    \"坐\",\n    \"粉\",\n    \"敌\",\n    \"略\",\n    \"客\",\n    \"袁\",\n    \"冷\",\n    \"胜\",\n    \"绝\",\n    \"析\",\n    \"块\",\n    \"剂\",\n    \"测\",\n    \"丝\",\n    \"协\",\n    \"诉\",\n    \"念\",\n    \"陈\",\n    \"仍\",\n    \"罗\",\n    \"盐\",\n    \"友\",\n    \"洋\",\n    \"错\",\n    \"苦\",\n    \"夜\",\n    \"刑\",\n    \"移\",\n    \"频\",\n    \"逐\",\n    \"靠\",\n    \"混\",\n    \"母\",\n    \"短\",\n    \"皮\",\n    \"终\",\n    \"聚\",\n    \"汽\",\n    \"村\",\n    \"云\",\n    \"哪\",\n    \"既\",\n    \"距\",\n    \"卫\",\n    \"停\",\n    \"烈\",\n    \"央\",\n    \"察\",\n    \"烧\",\n    \"迅\",\n    \"境\",\n    \"若\",\n    \"印\",\n    \"洲\",\n    \"刻\",\n    \"括\",\n    \"激\",\n    \"孔\",\n    \"搞\",\n    \"甚\",\n    \"室\",\n    \"待\",\n    \"核\",\n    \"校\",\n    \"散\",\n    \"侵\",\n    \"吧\",\n    \"甲\",\n    \"游\",\n    \"久\",\n    \"菜\",\n    \"味\",\n    \"旧\",\n    \"模\",\n    \"湖\",\n    \"货\",\n    \"损\",\n    \"预\",\n    \"阻\",\n    \"毫\",\n    \"普\",\n    \"稳\",\n    \"乙\",\n    \"妈\",\n    \"植\",\n    \"息\",\n    \"扩\",\n    \"银\",\n    \"语\",\n    \"挥\",\n    \"酒\",\n    \"守\",\n    \"拿\",\n    \"序\",\n    \"纸\",\n    \"医\",\n    \"缺\",\n    \"雨\",\n    \"吗\",\n    \"针\",\n    \"刘\",\n    \"啊\",\n    \"急\",\n    \"唱\",\n    \"误\",\n    \"训\",\n    \"愿\",\n    \"审\",\n    \"附\",\n    \"获\",\n    \"茶\",\n    \"鲜\",\n    \"粮\",\n    \"斤\",\n    \"孩\",\n    \"脱\",\n    \"硫\",\n    \"肥\",\n    \"善\",\n    \"龙\",\n    \"演\",\n    \"父\",\n    \"渐\",\n    \"血\",\n    \"欢\",\n    \"械\",\n    \"掌\",\n    \"歌\",\n    \"沙\",\n    \"刚\",\n    \"攻\",\n    \"谓\",\n    \"盾\",\n    \"讨\",\n    \"晚\",\n    \"粒\",\n    \"乱\",\n    \"燃\",\n    \"矛\",\n    \"乎\",\n    \"杀\",\n    \"药\",\n    \"宁\",\n    \"鲁\",\n    \"贵\",\n    \"钟\",\n    \"煤\",\n    \"读\",\n    \"班\",\n    \"伯\",\n    \"香\",\n    \"介\",\n    \"迫\",\n    \"句\",\n    \"丰\",\n    \"培\",\n    \"握\",\n    \"兰\",\n    \"担\",\n    \"弦\",\n    \"蛋\",\n    \"沉\",\n    \"假\",\n    \"穿\",\n    \"执\",\n    \"答\",\n    \"乐\",\n    \"谁\",\n    \"顺\",\n    \"烟\",\n    \"缩\",\n    \"征\",\n    \"脸\",\n    \"喜\",\n    \"松\",\n    \"脚\",\n    \"困\",\n    \"异\",\n    \"免\",\n    \"背\",\n    \"星\",\n    \"福\",\n    \"买\",\n    \"染\",\n    \"井\",\n    \"概\",\n    \"慢\",\n    \"怕\",\n    \"磁\",\n    \"倍\",\n    \"祖\",\n    \"皇\",\n    \"促\",\n    \"静\",\n    \"补\",\n    \"评\",\n    \"翻\",\n    \"肉\",\n    \"践\",\n    \"尼\",\n    \"衣\",\n    \"宽\",\n    \"扬\",\n    \"棉\",\n    \"希\",\n    \"伤\",\n    \"操\",\n    \"垂\",\n    \"秋\",\n    \"宜\",\n    \"氢\",\n    \"套\",\n    \"督\",\n    \"振\",\n    \"架\",\n    \"亮\",\n    \"末\",\n    \"宪\",\n    \"庆\",\n    \"编\",\n    \"牛\",\n    \"触\",\n    \"映\",\n    \"雷\",\n    \"销\",\n    \"诗\",\n    \"座\",\n    \"居\",\n    \"抓\",\n    \"裂\",\n    \"胞\",\n    \"呼\",\n    \"娘\",\n    \"景\",\n    \"威\",\n    \"绿\",\n    \"晶\",\n    \"厚\",\n    \"盟\",\n    \"衡\",\n    \"鸡\",\n    \"孙\",\n    \"延\",\n    \"危\",\n    \"胶\",\n    \"屋\",\n    \"乡\",\n    \"临\",\n    \"陆\",\n    \"顾\",\n    \"掉\",\n    \"呀\",\n    \"灯\",\n    \"岁\",\n    \"措\",\n    \"束\",\n    \"耐\",\n    \"剧\",\n    \"玉\",\n    \"赵\",\n    \"跳\",\n    \"哥\",\n    \"季\",\n    \"课\",\n    \"凯\",\n    \"胡\",\n    \"额\",\n    \"款\",\n    \"绍\",\n    \"卷\",\n    \"齐\",\n    \"伟\",\n    \"蒸\",\n    \"殖\",\n    \"永\",\n    \"宗\",\n    \"苗\",\n    \"川\",\n    \"炉\",\n    \"岩\",\n    \"弱\",\n    \"零\",\n    \"杨\",\n    \"奏\",\n    \"沿\",\n    \"露\",\n    \"杆\",\n    \"探\",\n    \"滑\",\n    \"镇\",\n    \"饭\",\n    \"浓\",\n    \"航\",\n    \"怀\",\n    \"赶\",\n    \"库\",\n    \"夺\",\n    \"伊\",\n    \"灵\",\n    \"税\",\n    \"途\",\n    \"灭\",\n    \"赛\",\n    \"归\",\n    \"召\",\n    \"鼓\",\n    \"播\",\n    \"盘\",\n    \"裁\",\n    \"险\",\n    \"康\",\n    \"唯\",\n    \"录\",\n    \"菌\",\n    \"纯\",\n    \"借\",\n    \"糖\",\n    \"盖\",\n    \"横\",\n    \"符\",\n    \"私\",\n    \"努\",\n    \"堂\",\n    \"域\",\n    \"枪\",\n    \"润\",\n    \"幅\",\n    \"哈\",\n    \"竟\",\n    \"熟\",\n    \"虫\",\n    \"泽\",\n    \"脑\",\n    \"壤\",\n    \"碳\",\n    \"欧\",\n    \"遍\",\n    \"侧\",\n    \"寨\",\n    \"敢\",\n    \"彻\",\n    \"虑\",\n    \"斜\",\n    \"薄\",\n    \"庭\",\n    \"纳\",\n    \"弹\",\n    \"饲\",\n    \"伸\",\n    \"折\",\n    \"麦\",\n    \"湿\",\n    \"暗\",\n    \"荷\",\n    \"瓦\",\n    \"塞\",\n    \"床\",\n    \"筑\",\n    \"恶\",\n    \"户\",\n    \"访\",\n    \"塔\",\n    \"奇\",\n    \"透\",\n    \"梁\",\n    \"刀\",\n    \"旋\",\n    \"迹\",\n    \"卡\",\n    \"氯\",\n    \"遇\",\n    \"份\",\n    \"毒\",\n    \"泥\",\n    \"退\",\n    \"洗\",\n    \"摆\",\n    \"灰\",\n    \"彩\",\n    \"卖\",\n    \"耗\",\n    \"夏\",\n    \"择\",\n    \"忙\",\n    \"铜\",\n    \"献\",\n    \"硬\",\n    \"予\",\n    \"繁\",\n    \"圈\",\n    \"雪\",\n    \"函\",\n    \"亦\",\n    \"抽\",\n    \"篇\",\n    \"阵\",\n    \"阴\",\n    \"丁\",\n    \"尺\",\n    \"追\",\n    \"堆\",\n    \"雄\",\n    \"迎\",\n    \"泛\",\n    \"爸\",\n    \"楼\",\n    \"避\",\n    \"谋\",\n    \"吨\",\n    \"野\",\n    \"猪\",\n    \"旗\",\n    \"累\",\n    \"偏\",\n    \"典\",\n    \"馆\",\n    \"索\",\n    \"秦\",\n    \"脂\",\n    \"潮\",\n    \"爷\",\n    \"豆\",\n    \"忽\",\n    \"托\",\n    \"惊\",\n    \"塑\",\n    \"遗\",\n    \"愈\",\n    \"朱\",\n    \"替\",\n    \"纤\",\n    \"粗\",\n    \"倾\",\n    \"尚\",\n    \"痛\",\n    \"楚\",\n    \"谢\",\n    \"奋\",\n    \"购\",\n    \"磨\",\n    \"君\",\n    \"池\",\n    \"旁\",\n    \"碎\",\n    \"骨\",\n    \"监\",\n    \"捕\",\n    \"弟\",\n    \"暴\",\n    \"割\",\n    \"贯\",\n    \"殊\",\n    \"释\",\n    \"词\",\n    \"亡\",\n    \"壁\",\n    \"顿\",\n    \"宝\",\n    \"午\",\n    \"尘\",\n    \"闻\",\n    \"揭\",\n    \"炮\",\n    \"残\",\n    \"冬\",\n    \"桥\",\n    \"妇\",\n    \"警\",\n    \"综\",\n    \"招\",\n    \"吴\",\n    \"付\",\n    \"浮\",\n    \"遭\",\n    \"徐\",\n    \"您\",\n    \"摇\",\n    \"谷\",\n    \"赞\",\n    \"箱\",\n    \"隔\",\n    \"订\",\n    \"男\",\n    \"吹\",\n    \"园\",\n    \"纷\",\n    \"唐\",\n    \"败\",\n    \"宋\",\n    \"玻\",\n    \"巨\",\n    \"耕\",\n    \"坦\",\n    \"荣\",\n    \"闭\",\n    \"湾\",\n    \"键\",\n    \"凡\",\n    \"驻\",\n    \"锅\",\n    \"救\",\n    \"恩\",\n    \"剥\",\n    \"凝\",\n    \"碱\",\n    \"齿\",\n    \"截\",\n    \"炼\",\n    \"麻\",\n    \"纺\",\n    \"禁\",\n    \"废\",\n    \"盛\",\n    \"版\",\n    \"缓\",\n    \"净\",\n    \"睛\",\n    \"昌\",\n    \"婚\",\n    \"涉\",\n    \"筒\",\n    \"嘴\",\n    \"插\",\n    \"岸\",\n    \"朗\",\n    \"庄\",\n    \"街\",\n    \"藏\",\n    \"姑\",\n    \"贸\",\n    \"腐\",\n    \"奴\",\n    \"啦\",\n    \"惯\",\n    \"乘\",\n    \"伙\",\n    \"恢\",\n    \"匀\",\n    \"纱\",\n    \"扎\",\n    \"辩\",\n    \"耳\",\n    \"彪\",\n    \"臣\",\n    \"亿\",\n    \"璃\",\n    \"抵\",\n    \"脉\",\n    \"秀\",\n    \"萨\",\n    \"俄\",\n    \"网\",\n    \"舞\",\n    \"店\",\n    \"喷\",\n    \"纵\",\n    \"寸\",\n    \"汗\",\n    \"挂\",\n    \"洪\",\n    \"贺\",\n    \"闪\",\n    \"柬\",\n    \"爆\",\n    \"烯\",\n    \"津\",\n    \"稻\",\n    \"墙\",\n    \"软\",\n    \"勇\",\n    \"像\",\n    \"滚\",\n    \"厘\",\n    \"蒙\",\n    \"芳\",\n    \"肯\",\n    \"坡\",\n    \"柱\",\n    \"荡\",\n    \"腿\",\n    \"仪\",\n    \"旅\",\n    \"尾\",\n    \"轧\",\n    \"冰\",\n    \"贡\",\n    \"登\",\n    \"黎\",\n    \"削\",\n    \"钻\",\n    \"勒\",\n    \"逃\",\n    \"障\",\n    \"氨\",\n    \"郭\",\n    \"峰\",\n    \"币\",\n    \"港\",\n    \"伏\",\n    \"轨\",\n    \"亩\",\n    \"毕\",\n    \"擦\",\n    \"莫\",\n    \"刺\",\n    \"浪\",\n    \"秘\",\n    \"援\",\n    \"株\",\n    \"健\",\n    \"售\",\n    \"股\",\n    \"岛\",\n    \"甘\",\n    \"泡\",\n    \"睡\",\n    \"童\",\n    \"铸\",\n    \"汤\",\n    \"阀\",\n    \"休\",\n    \"汇\",\n    \"舍\",\n    \"牧\",\n    \"绕\",\n    \"炸\",\n    \"哲\",\n    \"磷\",\n    \"绩\",\n    \"朋\",\n    \"淡\",\n    \"尖\",\n    \"启\",\n    \"陷\",\n    \"柴\",\n    \"呈\",\n    \"徒\",\n    \"颜\",\n    \"泪\",\n    \"稍\",\n    \"忘\",\n    \"泵\",\n    \"蓝\",\n    \"拖\",\n    \"洞\",\n    \"授\",\n    \"镜\",\n    \"辛\",\n    \"壮\",\n    \"锋\",\n    \"贫\",\n    \"虚\",\n    \"弯\",\n    \"摩\",\n    \"泰\",\n    \"幼\",\n    \"廷\",\n    \"尊\",\n    \"窗\",\n    \"纲\",\n    \"弄\",\n    \"隶\",\n    \"疑\",\n    \"氏\",\n    \"宫\",\n    \"姐\",\n    \"震\",\n    \"瑞\",\n    \"怪\",\n    \"尤\",\n    \"琴\",\n    \"循\",\n    \"描\",\n    \"膜\",\n    \"违\",\n    \"夹\",\n    \"腰\",\n    \"缘\",\n    \"珠\",\n    \"穷\",\n    \"森\",\n    \"枝\",\n    \"竹\",\n    \"沟\",\n    \"催\",\n    \"绳\",\n    \"忆\",\n    \"邦\",\n    \"剩\",\n    \"幸\",\n    \"浆\",\n    \"栏\",\n    \"拥\",\n    \"牙\",\n    \"贮\",\n    \"礼\",\n    \"滤\",\n    \"钠\",\n    \"纹\",\n    \"罢\",\n    \"拍\",\n    \"咱\",\n    \"喊\",\n    \"袖\",\n    \"埃\",\n    \"勤\",\n    \"罚\",\n    \"焦\",\n    \"潜\",\n    \"伍\",\n    \"墨\",\n    \"欲\",\n    \"缝\",\n    \"姓\",\n    \"刊\",\n    \"饱\",\n    \"仿\",\n    \"奖\",\n    \"铝\",\n    \"鬼\",\n    \"丽\",\n    \"跨\",\n    \"默\",\n    \"挖\",\n    \"链\",\n    \"扫\",\n    \"喝\",\n    \"袋\",\n    \"炭\",\n    \"污\",\n    \"幕\",\n    \"诸\",\n    \"弧\",\n    \"励\",\n    \"梅\",\n    \"奶\",\n    \"洁\",\n    \"灾\",\n    \"舟\",\n    \"鉴\",\n    \"苯\",\n    \"讼\",\n    \"抱\",\n    \"毁\",\n    \"懂\",\n    \"寒\",\n    \"智\",\n    \"埔\",\n    \"寄\",\n    \"届\",\n    \"跃\",\n    \"渡\",\n    \"挑\",\n    \"丹\",\n    \"艰\",\n    \"贝\",\n    \"碰\",\n    \"拔\",\n    \"爹\",\n    \"戴\",\n    \"码\",\n    \"梦\",\n    \"芽\",\n    \"熔\",\n    \"赤\",\n    \"渔\",\n    \"哭\",\n    \"敬\",\n    \"颗\",\n    \"奔\",\n    \"铅\",\n    \"仲\",\n    \"虎\",\n    \"稀\",\n    \"妹\",\n    \"乏\",\n    \"珍\",\n    \"申\",\n    \"桌\",\n    \"遵\",\n    \"允\",\n    \"隆\",\n    \"螺\",\n    \"仓\",\n    \"魏\",\n    \"锐\",\n    \"晓\",\n    \"氮\",\n    \"兼\",\n    \"隐\",\n    \"碍\",\n    \"赫\",\n    \"拨\",\n    \"忠\",\n    \"肃\",\n    \"缸\",\n    \"牵\",\n    \"抢\",\n    \"博\",\n    \"巧\",\n    \"壳\",\n    \"兄\",\n    \"杜\",\n    \"讯\",\n    \"诚\",\n    \"碧\",\n    \"祥\",\n    \"柯\",\n    \"页\",\n    \"巡\",\n    \"矩\",\n    \"悲\",\n    \"灌\",\n    \"龄\",\n    \"伦\",\n    \"票\",\n    \"寻\",\n    \"桂\",\n    \"铺\",\n    \"圣\",\n    \"恐\",\n    \"恰\",\n    \"郑\",\n    \"趣\",\n    \"抬\",\n    \"荒\",\n    \"腾\",\n    \"贴\",\n    \"柔\",\n    \"滴\",\n    \"猛\",\n    \"阔\",\n    \"辆\",\n    \"妻\",\n    \"填\",\n    \"撤\",\n    \"储\",\n    \"签\",\n    \"闹\",\n    \"扰\",\n    \"紫\",\n    \"砂\",\n    \"递\",\n    \"戏\",\n    \"吊\",\n    \"陶\",\n    \"伐\",\n    \"喂\",\n    \"疗\",\n    \"瓶\",\n    \"婆\",\n    \"抚\",\n    \"臂\",\n    \"摸\",\n    \"忍\",\n    \"虾\",\n    \"蜡\",\n    \"邻\",\n    \"胸\",\n    \"巩\",\n    \"挤\",\n    \"偶\",\n    \"弃\",\n    \"槽\",\n    \"劲\",\n    \"乳\",\n    \"邓\",\n    \"吉\",\n    \"仁\",\n    \"烂\",\n    \"砖\",\n    \"租\",\n    \"乌\",\n    \"舰\",\n    \"伴\",\n    \"瓜\",\n    \"浅\",\n    \"丙\",\n    \"暂\",\n    \"燥\",\n    \"橡\",\n    \"柳\",\n    \"迷\",\n    \"暖\",\n    \"牌\",\n    \"秧\",\n    \"胆\",\n    \"详\",\n    \"簧\",\n    \"踏\",\n    \"瓷\",\n    \"谱\",\n    \"呆\",\n    \"宾\",\n    \"糊\",\n    \"洛\",\n    \"辉\",\n    \"愤\",\n    \"竞\",\n    \"隙\",\n    \"怒\",\n    \"粘\",\n    \"乃\",\n    \"绪\",\n    \"肩\",\n    \"籍\",\n    \"敏\",\n    \"涂\",\n    \"熙\",\n    \"皆\",\n    \"侦\",\n    \"悬\",\n    \"掘\",\n    \"享\",\n    \"纠\",\n    \"醒\",\n    \"狂\",\n    \"锁\",\n    \"淀\",\n    \"恨\",\n    \"牲\",\n    \"霸\",\n    \"爬\",\n    \"赏\",\n    \"逆\",\n    \"玩\",\n    \"陵\",\n    \"祝\",\n    \"秒\",\n    \"浙\",\n    \"貌\",\n    \"役\",\n    \"彼\",\n    \"悉\",\n    \"鸭\",\n    \"趋\",\n    \"凤\",\n    \"晨\",\n    \"畜\",\n    \"辈\",\n    \"秩\",\n    \"卵\",\n    \"署\",\n    \"梯\",\n    \"炎\",\n    \"滩\",\n    \"棋\",\n    \"驱\",\n    \"筛\",\n    \"峡\",\n    \"冒\",\n    \"啥\",\n    \"寿\",\n    \"译\",\n    \"浸\",\n    \"泉\",\n    \"帽\",\n    \"迟\",\n    \"硅\",\n    \"疆\",\n    \"贷\",\n    \"漏\",\n    \"稿\",\n    \"冠\",\n    \"嫩\",\n    \"胁\",\n    \"芯\",\n    \"牢\",\n    \"叛\",\n    \"蚀\",\n    \"奥\",\n    \"鸣\",\n    \"岭\",\n    \"羊\",\n    \"凭\",\n    \"串\",\n    \"塘\",\n    \"绘\",\n    \"酵\",\n    \"融\",\n    \"盆\",\n    \"锡\",\n    \"庙\",\n    \"筹\",\n    \"冻\",\n    \"辅\",\n    \"摄\",\n    \"袭\",\n    \"筋\",\n    \"拒\",\n    \"僚\",\n    \"旱\",\n    \"钾\",\n    \"鸟\",\n    \"漆\",\n    \"沈\",\n    \"眉\",\n    \"疏\",\n    \"添\",\n    \"棒\",\n    \"穗\",\n    \"硝\",\n    \"韩\",\n    \"逼\",\n    \"扭\",\n    \"侨\",\n    \"凉\",\n    \"挺\",\n    \"碗\",\n    \"栽\",\n    \"炒\",\n    \"杯\",\n    \"患\",\n    \"馏\",\n    \"劝\",\n    \"豪\",\n    \"辽\",\n    \"勃\",\n    \"鸿\",\n    \"旦\",\n    \"吏\",\n    \"拜\",\n    \"狗\",\n    \"埋\",\n    \"辊\",\n    \"掩\",\n    \"饮\",\n    \"搬\",\n    \"骂\",\n    \"辞\",\n    \"勾\",\n    \"扣\",\n    \"估\",\n    \"蒋\",\n    \"绒\",\n    \"雾\",\n    \"丈\",\n    \"朵\",\n    \"姆\",\n    \"拟\",\n    \"宇\",\n    \"辑\",\n    \"陕\",\n    \"雕\",\n    \"偿\",\n    \"蓄\",\n    \"崇\",\n    \"剪\",\n    \"倡\",\n    \"厅\",\n    \"咬\",\n    \"驶\",\n    \"薯\",\n    \"刷\",\n    \"斥\",\n    \"番\",\n    \"赋\",\n    \"奉\",\n    \"佛\",\n    \"浇\",\n    \"漫\",\n    \"曼\",\n    \"扇\",\n    \"钙\",\n    \"桃\",\n    \"扶\",\n    \"仔\",\n    \"返\",\n    \"俗\",\n    \"亏\",\n    \"腔\",\n    \"鞋\",\n    \"棱\",\n    \"覆\",\n    \"框\",\n    \"悄\",\n    \"叔\",\n    \"撞\",\n    \"骗\",\n    \"勘\",\n    \"旺\",\n    \"沸\",\n    \"孤\",\n    \"吐\",\n    \"孟\",\n    \"渠\",\n    \"屈\",\n    \"疾\",\n    \"妙\",\n    \"惜\",\n    \"仰\",\n    \"狠\",\n    \"胀\",\n    \"谐\",\n    \"抛\",\n    \"霉\",\n    \"桑\",\n    \"岗\",\n    \"嘛\",\n    \"衰\",\n    \"盗\",\n    \"渗\",\n    \"脏\",\n    \"赖\",\n    \"涌\",\n    \"甜\",\n    \"曹\",\n    \"阅\",\n    \"肌\",\n    \"哩\",\n    \"厉\",\n    \"烃\",\n    \"纬\",\n    \"毅\",\n    \"昨\",\n    \"伪\",\n    \"症\",\n    \"煮\",\n    \"叹\",\n    \"钉\",\n    \"搭\",\n    \"茎\",\n    \"笼\",\n    \"酷\",\n    \"偷\",\n    \"弓\",\n    \"锥\",\n    \"恒\",\n    \"杰\",\n    \"坑\",\n    \"鼻\",\n    \"翼\",\n    \"纶\",\n    \"叙\",\n    \"狱\",\n    \"逮\",\n    \"罐\",\n    \"络\",\n    \"棚\",\n    \"抑\",\n    \"膨\",\n    \"蔬\",\n    \"寺\",\n    \"骤\",\n    \"穆\",\n    \"冶\",\n    \"枯\",\n    \"册\",\n    \"尸\",\n    \"凸\",\n    \"绅\",\n    \"坯\",\n    \"牺\",\n    \"焰\",\n    \"轰\",\n    \"欣\",\n    \"晋\",\n    \"瘦\",\n    \"御\",\n    \"锭\",\n    \"锦\",\n    \"丧\",\n    \"旬\",\n    \"锻\",\n    \"垄\",\n    \"搜\",\n    \"扑\",\n    \"邀\",\n    \"亭\",\n    \"酯\",\n    \"迈\",\n    \"舒\",\n    \"脆\",\n    \"酶\",\n    \"闲\",\n    \"忧\",\n    \"酚\",\n    \"顽\",\n    \"羽\",\n    \"涨\",\n    \"卸\",\n    \"仗\",\n    \"陪\",\n    \"辟\",\n    \"惩\",\n    \"杭\",\n    \"姚\",\n    \"肚\",\n    \"捉\",\n    \"飘\",\n    \"漂\",\n    \"昆\",\n    \"欺\",\n    \"吾\",\n    \"郎\",\n    \"烷\",\n    \"汁\",\n    \"呵\",\n    \"饰\",\n    \"萧\",\n    \"雅\",\n    \"邮\",\n    \"迁\",\n    \"燕\",\n    \"撒\",\n    \"姻\",\n    \"赴\",\n    \"宴\",\n    \"烦\",\n    \"债\",\n    \"帐\",\n    \"斑\",\n    \"铃\",\n    \"旨\",\n    \"醇\",\n    \"董\",\n    \"饼\",\n    \"雏\",\n    \"姿\",\n    \"拌\",\n    \"傅\",\n    \"腹\",\n    \"妥\",\n    \"揉\",\n    \"贤\",\n    \"拆\",\n    \"歪\",\n    \"葡\",\n    \"胺\",\n    \"丢\",\n    \"浩\",\n    \"徽\",\n    \"昂\",\n    \"垫\",\n    \"挡\",\n    \"览\",\n    \"贪\",\n    \"慰\",\n    \"缴\",\n    \"汪\",\n    \"慌\",\n    \"冯\",\n    \"诺\",\n    \"姜\",\n    \"谊\",\n    \"凶\",\n    \"劣\",\n    \"诬\",\n    \"耀\",\n    \"昏\",\n    \"躺\",\n    \"盈\",\n    \"骑\",\n    \"乔\",\n    \"溪\",\n    \"丛\",\n    \"卢\",\n    \"抹\",\n    \"闷\",\n    \"咨\",\n    \"刮\",\n    \"驾\",\n    \"缆\",\n    \"悟\",\n    \"摘\",\n    \"铒\",\n    \"掷\",\n    \"颇\",\n    \"幻\",\n    \"柄\",\n    \"惠\",\n    \"惨\",\n    \"佳\",\n    \"仇\",\n    \"腊\",\n    \"窝\",\n    \"涤\",\n    \"剑\",\n    \"瞧\",\n    \"堡\",\n    \"泼\",\n    \"葱\",\n    \"罩\",\n    \"霍\",\n    \"捞\",\n    \"胎\",\n    \"苍\",\n    \"滨\",\n    \"俩\",\n    \"捅\",\n    \"湘\",\n    \"砍\",\n    \"霞\",\n    \"邵\",\n    \"萄\",\n    \"疯\",\n    \"淮\",\n    \"遂\",\n    \"熊\",\n    \"粪\",\n    \"烘\",\n    \"宿\",\n    \"档\",\n    \"戈\",\n    \"驳\",\n    \"嫂\",\n    \"裕\",\n    \"徙\",\n    \"箭\",\n    \"捐\",\n    \"肠\",\n    \"撑\",\n    \"晒\",\n    \"辨\",\n    \"殿\",\n    \"莲\",\n    \"摊\",\n    \"搅\",\n    \"酱\",\n    \"屏\",\n    \"疫\",\n    \"哀\",\n    \"蔡\",\n    \"堵\",\n    \"沫\",\n    \"皱\",\n    \"畅\",\n    \"叠\",\n    \"阁\",\n    \"莱\",\n    \"敲\",\n    \"辖\",\n    \"钩\",\n    \"痕\",\n    \"坝\",\n    \"巷\",\n    \"饿\",\n    \"祸\",\n    \"丘\",\n    \"玄\",\n    \"溜\",\n    \"曰\",\n    \"逻\",\n    \"彭\",\n    \"尝\",\n    \"卿\",\n    \"妨\",\n    \"艇\",\n    \"吞\",\n    \"韦\",\n    \"怨\",\n    \"矮\",\n    \"歇\"\n]\n","module.exports=[\n    \"abdikace\",\n    \"abeceda\",\n    \"adresa\",\n    \"agrese\",\n    \"akce\",\n    \"aktovka\",\n    \"alej\",\n    \"alkohol\",\n    \"amputace\",\n    \"ananas\",\n    \"andulka\",\n    \"anekdota\",\n    \"anketa\",\n    \"antika\",\n    \"anulovat\",\n    \"archa\",\n    \"arogance\",\n    \"asfalt\",\n    \"asistent\",\n    \"aspirace\",\n    \"astma\",\n    \"astronom\",\n    \"atlas\",\n    \"atletika\",\n    \"atol\",\n    \"autobus\",\n    \"azyl\",\n    \"babka\",\n    \"bachor\",\n    \"bacil\",\n    \"baculka\",\n    \"badatel\",\n    \"bageta\",\n    \"bagr\",\n    \"bahno\",\n    \"bakterie\",\n    \"balada\",\n    \"baletka\",\n    \"balkon\",\n    \"balonek\",\n    \"balvan\",\n    \"balza\",\n    \"bambus\",\n    \"bankomat\",\n    \"barbar\",\n    \"baret\",\n    \"barman\",\n    \"baroko\",\n    \"barva\",\n    \"baterka\",\n    \"batoh\",\n    \"bavlna\",\n    \"bazalka\",\n    \"bazilika\",\n    \"bazuka\",\n    \"bedna\",\n    \"beran\",\n    \"beseda\",\n    \"bestie\",\n    \"beton\",\n    \"bezinka\",\n    \"bezmoc\",\n    \"beztak\",\n    \"bicykl\",\n    \"bidlo\",\n    \"biftek\",\n    \"bikiny\",\n    \"bilance\",\n    \"biograf\",\n    \"biolog\",\n    \"bitva\",\n    \"bizon\",\n    \"blahobyt\",\n    \"blatouch\",\n    \"blecha\",\n    \"bledule\",\n    \"blesk\",\n    \"blikat\",\n    \"blizna\",\n    \"blokovat\",\n    \"bloudit\",\n    \"blud\",\n    \"bobek\",\n    \"bobr\",\n    \"bodlina\",\n    \"bodnout\",\n    \"bohatost\",\n    \"bojkot\",\n    \"bojovat\",\n    \"bokorys\",\n    \"bolest\",\n    \"borec\",\n    \"borovice\",\n    \"bota\",\n    \"boubel\",\n    \"bouchat\",\n    \"bouda\",\n    \"boule\",\n    \"bourat\",\n    \"boxer\",\n    \"bradavka\",\n    \"brambora\",\n    \"branka\",\n    \"bratr\",\n    \"brepta\",\n    \"briketa\",\n    \"brko\",\n    \"brloh\",\n    \"bronz\",\n    \"broskev\",\n    \"brunetka\",\n    \"brusinka\",\n    \"brzda\",\n    \"brzy\",\n    \"bublina\",\n    \"bubnovat\",\n    \"buchta\",\n    \"buditel\",\n    \"budka\",\n    \"budova\",\n    \"bufet\",\n    \"bujarost\",\n    \"bukvice\",\n    \"buldok\",\n    \"bulva\",\n    \"bunda\",\n    \"bunkr\",\n    \"burza\",\n    \"butik\",\n    \"buvol\",\n    \"buzola\",\n    \"bydlet\",\n    \"bylina\",\n    \"bytovka\",\n    \"bzukot\",\n    \"capart\",\n    \"carevna\",\n    \"cedr\",\n    \"cedule\",\n    \"cejch\",\n    \"cejn\",\n    \"cela\",\n    \"celer\",\n    \"celkem\",\n    \"celnice\",\n    \"cenina\",\n    \"cennost\",\n    \"cenovka\",\n    \"centrum\",\n    \"cenzor\",\n    \"cestopis\",\n    \"cetka\",\n    \"chalupa\",\n    \"chapadlo\",\n    \"charita\",\n    \"chata\",\n    \"chechtat\",\n    \"chemie\",\n    \"chichot\",\n    \"chirurg\",\n    \"chlad\",\n    \"chleba\",\n    \"chlubit\",\n    \"chmel\",\n    \"chmura\",\n    \"chobot\",\n    \"chochol\",\n    \"chodba\",\n    \"cholera\",\n    \"chomout\",\n    \"chopit\",\n    \"choroba\",\n    \"chov\",\n    \"chrapot\",\n    \"chrlit\",\n    \"chrt\",\n    \"chrup\",\n    \"chtivost\",\n    \"chudina\",\n    \"chutnat\",\n    \"chvat\",\n    \"chvilka\",\n    \"chvost\",\n    \"chyba\",\n    \"chystat\",\n    \"chytit\",\n    \"cibule\",\n    \"cigareta\",\n    \"cihelna\",\n    \"cihla\",\n    \"cinkot\",\n    \"cirkus\",\n    \"cisterna\",\n    \"citace\",\n    \"citrus\",\n    \"cizinec\",\n    \"cizost\",\n    \"clona\",\n    \"cokoliv\",\n    \"couvat\",\n    \"ctitel\",\n    \"ctnost\",\n    \"cudnost\",\n    \"cuketa\",\n    \"cukr\",\n    \"cupot\",\n    \"cvaknout\",\n    \"cval\",\n    \"cvik\",\n    \"cvrkot\",\n    \"cyklista\",\n    \"daleko\",\n    \"dareba\",\n    \"datel\",\n    \"datum\",\n    \"dcera\",\n    \"debata\",\n    \"dechovka\",\n    \"decibel\",\n    \"deficit\",\n    \"deflace\",\n    \"dekl\",\n    \"dekret\",\n    \"demokrat\",\n    \"deprese\",\n    \"derby\",\n    \"deska\",\n    \"detektiv\",\n    \"dikobraz\",\n    \"diktovat\",\n    \"dioda\",\n    \"diplom\",\n    \"disk\",\n    \"displej\",\n    \"divadlo\",\n    \"divoch\",\n    \"dlaha\",\n    \"dlouho\",\n    \"dluhopis\",\n    \"dnes\",\n    \"dobro\",\n    \"dobytek\",\n    \"docent\",\n    \"dochutit\",\n    \"dodnes\",\n    \"dohled\",\n    \"dohoda\",\n    \"dohra\",\n    \"dojem\",\n    \"dojnice\",\n    \"doklad\",\n    \"dokola\",\n    \"doktor\",\n    \"dokument\",\n    \"dolar\",\n    \"doleva\",\n    \"dolina\",\n    \"doma\",\n    \"dominant\",\n    \"domluvit\",\n    \"domov\",\n    \"donutit\",\n    \"dopad\",\n    \"dopis\",\n    \"doplnit\",\n    \"doposud\",\n    \"doprovod\",\n    \"dopustit\",\n    \"dorazit\",\n    \"dorost\",\n    \"dort\",\n    \"dosah\",\n    \"doslov\",\n    \"dostatek\",\n    \"dosud\",\n    \"dosyta\",\n    \"dotaz\",\n    \"dotek\",\n    \"dotknout\",\n    \"doufat\",\n    \"doutnat\",\n    \"dovozce\",\n    \"dozadu\",\n    \"doznat\",\n    \"dozorce\",\n    \"drahota\",\n    \"drak\",\n    \"dramatik\",\n    \"dravec\",\n    \"draze\",\n    \"drdol\",\n    \"drobnost\",\n    \"drogerie\",\n    \"drozd\",\n    \"drsnost\",\n    \"drtit\",\n    \"drzost\",\n    \"duben\",\n    \"duchovno\",\n    \"dudek\",\n    \"duha\",\n    \"duhovka\",\n    \"dusit\",\n    \"dusno\",\n    \"dutost\",\n    \"dvojice\",\n    \"dvorec\",\n    \"dynamit\",\n    \"ekolog\",\n    \"ekonomie\",\n    \"elektron\",\n    \"elipsa\",\n    \"email\",\n    \"emise\",\n    \"emoce\",\n    \"empatie\",\n    \"epizoda\",\n    \"epocha\",\n    \"epopej\",\n    \"epos\",\n    \"esej\",\n    \"esence\",\n    \"eskorta\",\n    \"eskymo\",\n    \"etiketa\",\n    \"euforie\",\n    \"evoluce\",\n    \"exekuce\",\n    \"exkurze\",\n    \"expedice\",\n    \"exploze\",\n    \"export\",\n    \"extrakt\",\n    \"facka\",\n    \"fajfka\",\n    \"fakulta\",\n    \"fanatik\",\n    \"fantazie\",\n    \"farmacie\",\n    \"favorit\",\n    \"fazole\",\n    \"federace\",\n    \"fejeton\",\n    \"fenka\",\n    \"fialka\",\n    \"figurant\",\n    \"filozof\",\n    \"filtr\",\n    \"finance\",\n    \"finta\",\n    \"fixace\",\n    \"fjord\",\n    \"flanel\",\n    \"flirt\",\n    \"flotila\",\n    \"fond\",\n    \"fosfor\",\n    \"fotbal\",\n    \"fotka\",\n    \"foton\",\n    \"frakce\",\n    \"freska\",\n    \"fronta\",\n    \"fukar\",\n    \"funkce\",\n    \"fyzika\",\n    \"galeje\",\n    \"garant\",\n    \"genetika\",\n    \"geolog\",\n    \"gilotina\",\n    \"glazura\",\n    \"glejt\",\n    \"golem\",\n    \"golfista\",\n    \"gotika\",\n    \"graf\",\n    \"gramofon\",\n    \"granule\",\n    \"grep\",\n    \"gril\",\n    \"grog\",\n    \"groteska\",\n    \"guma\",\n    \"hadice\",\n    \"hadr\",\n    \"hala\",\n    \"halenka\",\n    \"hanba\",\n    \"hanopis\",\n    \"harfa\",\n    \"harpuna\",\n    \"havran\",\n    \"hebkost\",\n    \"hejkal\",\n    \"hejno\",\n    \"hejtman\",\n    \"hektar\",\n    \"helma\",\n    \"hematom\",\n    \"herec\",\n    \"herna\",\n    \"heslo\",\n    \"hezky\",\n    \"historik\",\n    \"hladovka\",\n    \"hlasivky\",\n    \"hlava\",\n    \"hledat\",\n    \"hlen\",\n    \"hlodavec\",\n    \"hloh\",\n    \"hloupost\",\n    \"hltat\",\n    \"hlubina\",\n    \"hluchota\",\n    \"hmat\",\n    \"hmota\",\n    \"hmyz\",\n    \"hnis\",\n    \"hnojivo\",\n    \"hnout\",\n    \"hoblina\",\n    \"hoboj\",\n    \"hoch\",\n    \"hodiny\",\n    \"hodlat\",\n    \"hodnota\",\n    \"hodovat\",\n    \"hojnost\",\n    \"hokej\",\n    \"holinka\",\n    \"holka\",\n    \"holub\",\n    \"homole\",\n    \"honitba\",\n    \"honorace\",\n    \"horal\",\n    \"horda\",\n    \"horizont\",\n    \"horko\",\n    \"horlivec\",\n    \"hormon\",\n    \"hornina\",\n    \"horoskop\",\n    \"horstvo\",\n    \"hospoda\",\n    \"hostina\",\n    \"hotovost\",\n    \"houba\",\n    \"houf\",\n    \"houpat\",\n    \"houska\",\n    \"hovor\",\n    \"hradba\",\n    \"hranice\",\n    \"hravost\",\n    \"hrazda\",\n    \"hrbolek\",\n    \"hrdina\",\n    \"hrdlo\",\n    \"hrdost\",\n    \"hrnek\",\n    \"hrobka\",\n    \"hromada\",\n    \"hrot\",\n    \"hrouda\",\n    \"hrozen\",\n    \"hrstka\",\n    \"hrubost\",\n    \"hryzat\",\n    \"hubenost\",\n    \"hubnout\",\n    \"hudba\",\n    \"hukot\",\n    \"humr\",\n    \"husita\",\n    \"hustota\",\n    \"hvozd\",\n    \"hybnost\",\n    \"hydrant\",\n    \"hygiena\",\n    \"hymna\",\n    \"hysterik\",\n    \"idylka\",\n    \"ihned\",\n    \"ikona\",\n    \"iluze\",\n    \"imunita\",\n    \"infekce\",\n    \"inflace\",\n    \"inkaso\",\n    \"inovace\",\n    \"inspekce\",\n    \"internet\",\n    \"invalida\",\n    \"investor\",\n    \"inzerce\",\n    \"ironie\",\n    \"jablko\",\n    \"jachta\",\n    \"jahoda\",\n    \"jakmile\",\n    \"jakost\",\n    \"jalovec\",\n    \"jantar\",\n    \"jarmark\",\n    \"jaro\",\n    \"jasan\",\n    \"jasno\",\n    \"jatka\",\n    \"javor\",\n    \"jazyk\",\n    \"jedinec\",\n    \"jedle\",\n    \"jednatel\",\n    \"jehlan\",\n    \"jekot\",\n    \"jelen\",\n    \"jelito\",\n    \"jemnost\",\n    \"jenom\",\n    \"jepice\",\n    \"jeseter\",\n    \"jevit\",\n    \"jezdec\",\n    \"jezero\",\n    \"jinak\",\n    \"jindy\",\n    \"jinoch\",\n    \"jiskra\",\n    \"jistota\",\n    \"jitrnice\",\n    \"jizva\",\n    \"jmenovat\",\n    \"jogurt\",\n    \"jurta\",\n    \"kabaret\",\n    \"kabel\",\n    \"kabinet\",\n    \"kachna\",\n    \"kadet\",\n    \"kadidlo\",\n    \"kahan\",\n    \"kajak\",\n    \"kajuta\",\n    \"kakao\",\n    \"kaktus\",\n    \"kalamita\",\n    \"kalhoty\",\n    \"kalibr\",\n    \"kalnost\",\n    \"kamera\",\n    \"kamkoliv\",\n    \"kamna\",\n    \"kanibal\",\n    \"kanoe\",\n    \"kantor\",\n    \"kapalina\",\n    \"kapela\",\n    \"kapitola\",\n    \"kapka\",\n    \"kaple\",\n    \"kapota\",\n    \"kapr\",\n    \"kapusta\",\n    \"kapybara\",\n    \"karamel\",\n    \"karotka\",\n    \"karton\",\n    \"kasa\",\n    \"katalog\",\n    \"katedra\",\n    \"kauce\",\n    \"kauza\",\n    \"kavalec\",\n    \"kazajka\",\n    \"kazeta\",\n    \"kazivost\",\n    \"kdekoliv\",\n    \"kdesi\",\n    \"kedluben\",\n    \"kemp\",\n    \"keramika\",\n    \"kino\",\n    \"klacek\",\n    \"kladivo\",\n    \"klam\",\n    \"klapot\",\n    \"klasika\",\n    \"klaun\",\n    \"klec\",\n    \"klenba\",\n    \"klepat\",\n    \"klesnout\",\n    \"klid\",\n    \"klima\",\n    \"klisna\",\n    \"klobouk\",\n    \"klokan\",\n    \"klopa\",\n    \"kloub\",\n    \"klubovna\",\n    \"klusat\",\n    \"kluzkost\",\n    \"kmen\",\n    \"kmitat\",\n    \"kmotr\",\n    \"kniha\",\n    \"knot\",\n    \"koalice\",\n    \"koberec\",\n    \"kobka\",\n    \"kobliha\",\n    \"kobyla\",\n    \"kocour\",\n    \"kohout\",\n    \"kojenec\",\n    \"kokos\",\n    \"koktejl\",\n    \"kolaps\",\n    \"koleda\",\n    \"kolize\",\n    \"kolo\",\n    \"komando\",\n    \"kometa\",\n    \"komik\",\n    \"komnata\",\n    \"komora\",\n    \"kompas\",\n    \"komunita\",\n    \"konat\",\n    \"koncept\",\n    \"kondice\",\n    \"konec\",\n    \"konfese\",\n    \"kongres\",\n    \"konina\",\n    \"konkurs\",\n    \"kontakt\",\n    \"konzerva\",\n    \"kopanec\",\n    \"kopie\",\n    \"kopnout\",\n    \"koprovka\",\n    \"korbel\",\n    \"korektor\",\n    \"kormidlo\",\n    \"koroptev\",\n    \"korpus\",\n    \"koruna\",\n    \"koryto\",\n    \"korzet\",\n    \"kosatec\",\n    \"kostka\",\n    \"kotel\",\n    \"kotleta\",\n    \"kotoul\",\n    \"koukat\",\n    \"koupelna\",\n    \"kousek\",\n    \"kouzlo\",\n    \"kovboj\",\n    \"koza\",\n    \"kozoroh\",\n    \"krabice\",\n    \"krach\",\n    \"krajina\",\n    \"kralovat\",\n    \"krasopis\",\n    \"kravata\",\n    \"kredit\",\n    \"krejcar\",\n    \"kresba\",\n    \"kreveta\",\n    \"kriket\",\n    \"kritik\",\n    \"krize\",\n    \"krkavec\",\n    \"krmelec\",\n    \"krmivo\",\n    \"krocan\",\n    \"krok\",\n    \"kronika\",\n    \"kropit\",\n    \"kroupa\",\n    \"krovka\",\n    \"krtek\",\n    \"kruhadlo\",\n    \"krupice\",\n    \"krutost\",\n    \"krvinka\",\n    \"krychle\",\n    \"krypta\",\n    \"krystal\",\n    \"kryt\",\n    \"kudlanka\",\n    \"kufr\",\n    \"kujnost\",\n    \"kukla\",\n    \"kulajda\",\n    \"kulich\",\n    \"kulka\",\n    \"kulomet\",\n    \"kultura\",\n    \"kuna\",\n    \"kupodivu\",\n    \"kurt\",\n    \"kurzor\",\n    \"kutil\",\n    \"kvalita\",\n    \"kvasinka\",\n    \"kvestor\",\n    \"kynolog\",\n    \"kyselina\",\n    \"kytara\",\n    \"kytice\",\n    \"kytka\",\n    \"kytovec\",\n    \"kyvadlo\",\n    \"labrador\",\n    \"lachtan\",\n    \"ladnost\",\n    \"laik\",\n    \"lakomec\",\n    \"lamela\",\n    \"lampa\",\n    \"lanovka\",\n    \"lasice\",\n    \"laso\",\n    \"lastura\",\n    \"latinka\",\n    \"lavina\",\n    \"lebka\",\n    \"leckdy\",\n    \"leden\",\n    \"lednice\",\n    \"ledovka\",\n    \"ledvina\",\n    \"legenda\",\n    \"legie\",\n    \"legrace\",\n    \"lehce\",\n    \"lehkost\",\n    \"lehnout\",\n    \"lektvar\",\n    \"lenochod\",\n    \"lentilka\",\n    \"lepenka\",\n    \"lepidlo\",\n    \"letadlo\",\n    \"letec\",\n    \"letmo\",\n    \"letokruh\",\n    \"levhart\",\n    \"levitace\",\n    \"levobok\",\n    \"libra\",\n    \"lichotka\",\n    \"lidojed\",\n    \"lidskost\",\n    \"lihovina\",\n    \"lijavec\",\n    \"lilek\",\n    \"limetka\",\n    \"linie\",\n    \"linka\",\n    \"linoleum\",\n    \"listopad\",\n    \"litina\",\n    \"litovat\",\n    \"lobista\",\n    \"lodivod\",\n    \"logika\",\n    \"logoped\",\n    \"lokalita\",\n    \"loket\",\n    \"lomcovat\",\n    \"lopata\",\n    \"lopuch\",\n    \"lord\",\n    \"losos\",\n    \"lotr\",\n    \"loudal\",\n    \"louh\",\n    \"louka\",\n    \"louskat\",\n    \"lovec\",\n    \"lstivost\",\n    \"lucerna\",\n    \"lucifer\",\n    \"lump\",\n    \"lusk\",\n    \"lustrace\",\n    \"lvice\",\n    \"lyra\",\n    \"lyrika\",\n    \"lysina\",\n    \"madam\",\n    \"madlo\",\n    \"magistr\",\n    \"mahagon\",\n    \"majetek\",\n    \"majitel\",\n    \"majorita\",\n    \"makak\",\n    \"makovice\",\n    \"makrela\",\n    \"malba\",\n    \"malina\",\n    \"malovat\",\n    \"malvice\",\n    \"maminka\",\n    \"mandle\",\n    \"manko\",\n    \"marnost\",\n    \"masakr\",\n    \"maskot\",\n    \"masopust\",\n    \"matice\",\n    \"matrika\",\n    \"maturita\",\n    \"mazanec\",\n    \"mazivo\",\n    \"mazlit\",\n    \"mazurka\",\n    \"mdloba\",\n    \"mechanik\",\n    \"meditace\",\n    \"medovina\",\n    \"melasa\",\n    \"meloun\",\n    \"mentolka\",\n    \"metla\",\n    \"metoda\",\n    \"metr\",\n    \"mezera\",\n    \"migrace\",\n    \"mihnout\",\n    \"mihule\",\n    \"mikina\",\n    \"mikrofon\",\n    \"milenec\",\n    \"milimetr\",\n    \"milost\",\n    \"mimika\",\n    \"mincovna\",\n    \"minibar\",\n    \"minomet\",\n    \"minulost\",\n    \"miska\",\n    \"mistr\",\n    \"mixovat\",\n    \"mladost\",\n    \"mlha\",\n    \"mlhovina\",\n    \"mlok\",\n    \"mlsat\",\n    \"mluvit\",\n    \"mnich\",\n    \"mnohem\",\n    \"mobil\",\n    \"mocnost\",\n    \"modelka\",\n    \"modlitba\",\n    \"mohyla\",\n    \"mokro\",\n    \"molekula\",\n    \"momentka\",\n    \"monarcha\",\n    \"monokl\",\n    \"monstrum\",\n    \"montovat\",\n    \"monzun\",\n    \"mosaz\",\n    \"moskyt\",\n    \"most\",\n    \"motivace\",\n    \"motorka\",\n    \"motyka\",\n    \"moucha\",\n    \"moudrost\",\n    \"mozaika\",\n    \"mozek\",\n    \"mozol\",\n    \"mramor\",\n    \"mravenec\",\n    \"mrkev\",\n    \"mrtvola\",\n    \"mrzet\",\n    \"mrzutost\",\n    \"mstitel\",\n    \"mudrc\",\n    \"muflon\",\n    \"mulat\",\n    \"mumie\",\n    \"munice\",\n    \"muset\",\n    \"mutace\",\n    \"muzeum\",\n    \"muzikant\",\n    \"myslivec\",\n    \"mzda\",\n    \"nabourat\",\n    \"nachytat\",\n    \"nadace\",\n    \"nadbytek\",\n    \"nadhoz\",\n    \"nadobro\",\n    \"nadpis\",\n    \"nahlas\",\n    \"nahnat\",\n    \"nahodile\",\n    \"nahradit\",\n    \"naivita\",\n    \"najednou\",\n    \"najisto\",\n    \"najmout\",\n    \"naklonit\",\n    \"nakonec\",\n    \"nakrmit\",\n    \"nalevo\",\n    \"namazat\",\n    \"namluvit\",\n    \"nanometr\",\n    \"naoko\",\n    \"naopak\",\n    \"naostro\",\n    \"napadat\",\n    \"napevno\",\n    \"naplnit\",\n    \"napnout\",\n    \"naposled\",\n    \"naprosto\",\n    \"narodit\",\n    \"naruby\",\n    \"narychlo\",\n    \"nasadit\",\n    \"nasekat\",\n    \"naslepo\",\n    \"nastat\",\n    \"natolik\",\n    \"navenek\",\n    \"navrch\",\n    \"navzdory\",\n    \"nazvat\",\n    \"nebe\",\n    \"nechat\",\n    \"necky\",\n    \"nedaleko\",\n    \"nedbat\",\n    \"neduh\",\n    \"negace\",\n    \"nehet\",\n    \"nehoda\",\n    \"nejen\",\n    \"nejprve\",\n    \"neklid\",\n    \"nelibost\",\n    \"nemilost\",\n    \"nemoc\",\n    \"neochota\",\n    \"neonka\",\n    \"nepokoj\",\n    \"nerost\",\n    \"nerv\",\n    \"nesmysl\",\n    \"nesoulad\",\n    \"netvor\",\n    \"neuron\",\n    \"nevina\",\n    \"nezvykle\",\n    \"nicota\",\n    \"nijak\",\n    \"nikam\",\n    \"nikdy\",\n    \"nikl\",\n    \"nikterak\",\n    \"nitro\",\n    \"nocleh\",\n    \"nohavice\",\n    \"nominace\",\n    \"nora\",\n    \"norek\",\n    \"nositel\",\n    \"nosnost\",\n    \"nouze\",\n    \"noviny\",\n    \"novota\",\n    \"nozdra\",\n    \"nuda\",\n    \"nudle\",\n    \"nuget\",\n    \"nutit\",\n    \"nutnost\",\n    \"nutrie\",\n    \"nymfa\",\n    \"obal\",\n    \"obarvit\",\n    \"obava\",\n    \"obdiv\",\n    \"obec\",\n    \"obehnat\",\n    \"obejmout\",\n    \"obezita\",\n    \"obhajoba\",\n    \"obilnice\",\n    \"objasnit\",\n    \"objekt\",\n    \"obklopit\",\n    \"oblast\",\n    \"oblek\",\n    \"obliba\",\n    \"obloha\",\n    \"obluda\",\n    \"obnos\",\n    \"obohatit\",\n    \"obojek\",\n    \"obout\",\n    \"obrazec\",\n    \"obrna\",\n    \"obruba\",\n    \"obrys\",\n    \"obsah\",\n    \"obsluha\",\n    \"obstarat\",\n    \"obuv\",\n    \"obvaz\",\n    \"obvinit\",\n    \"obvod\",\n    \"obvykle\",\n    \"obyvatel\",\n    \"obzor\",\n    \"ocas\",\n    \"ocel\",\n    \"ocenit\",\n    \"ochladit\",\n    \"ochota\",\n    \"ochrana\",\n    \"ocitnout\",\n    \"odboj\",\n    \"odbyt\",\n    \"odchod\",\n    \"odcizit\",\n    \"odebrat\",\n    \"odeslat\",\n    \"odevzdat\",\n    \"odezva\",\n    \"odhadce\",\n    \"odhodit\",\n    \"odjet\",\n    \"odjinud\",\n    \"odkaz\",\n    \"odkoupit\",\n    \"odliv\",\n    \"odluka\",\n    \"odmlka\",\n    \"odolnost\",\n    \"odpad\",\n    \"odpis\",\n    \"odplout\",\n    \"odpor\",\n    \"odpustit\",\n    \"odpykat\",\n    \"odrazka\",\n    \"odsoudit\",\n    \"odstup\",\n    \"odsun\",\n    \"odtok\",\n    \"odtud\",\n    \"odvaha\",\n    \"odveta\",\n    \"odvolat\",\n    \"odvracet\",\n    \"odznak\",\n    \"ofina\",\n    \"ofsajd\",\n    \"ohlas\",\n    \"ohnisko\",\n    \"ohrada\",\n    \"ohrozit\",\n    \"ohryzek\",\n    \"okap\",\n    \"okenice\",\n    \"oklika\",\n    \"okno\",\n    \"okouzlit\",\n    \"okovy\",\n    \"okrasa\",\n    \"okres\",\n    \"okrsek\",\n    \"okruh\",\n    \"okupant\",\n    \"okurka\",\n    \"okusit\",\n    \"olejnina\",\n    \"olizovat\",\n    \"omak\",\n    \"omeleta\",\n    \"omezit\",\n    \"omladina\",\n    \"omlouvat\",\n    \"omluva\",\n    \"omyl\",\n    \"onehdy\",\n    \"opakovat\",\n    \"opasek\",\n    \"operace\",\n    \"opice\",\n    \"opilost\",\n    \"opisovat\",\n    \"opora\",\n    \"opozice\",\n    \"opravdu\",\n    \"oproti\",\n    \"orbital\",\n    \"orchestr\",\n    \"orgie\",\n    \"orlice\",\n    \"orloj\",\n    \"ortel\",\n    \"osada\",\n    \"oschnout\",\n    \"osika\",\n    \"osivo\",\n    \"oslava\",\n    \"oslepit\",\n    \"oslnit\",\n    \"oslovit\",\n    \"osnova\",\n    \"osoba\",\n    \"osolit\",\n    \"ospalec\",\n    \"osten\",\n    \"ostraha\",\n    \"ostuda\",\n    \"ostych\",\n    \"osvojit\",\n    \"oteplit\",\n    \"otisk\",\n    \"otop\",\n    \"otrhat\",\n    \"otrlost\",\n    \"otrok\",\n    \"otruby\",\n    \"otvor\",\n    \"ovanout\",\n    \"ovar\",\n    \"oves\",\n    \"ovlivnit\",\n    \"ovoce\",\n    \"oxid\",\n    \"ozdoba\",\n    \"pachatel\",\n    \"pacient\",\n    \"padouch\",\n    \"pahorek\",\n    \"pakt\",\n    \"palanda\",\n    \"palec\",\n    \"palivo\",\n    \"paluba\",\n    \"pamflet\",\n    \"pamlsek\",\n    \"panenka\",\n    \"panika\",\n    \"panna\",\n    \"panovat\",\n    \"panstvo\",\n    \"pantofle\",\n    \"paprika\",\n    \"parketa\",\n    \"parodie\",\n    \"parta\",\n    \"paruka\",\n    \"paryba\",\n    \"paseka\",\n    \"pasivita\",\n    \"pastelka\",\n    \"patent\",\n    \"patrona\",\n    \"pavouk\",\n    \"pazneht\",\n    \"pazourek\",\n    \"pecka\",\n    \"pedagog\",\n    \"pejsek\",\n    \"peklo\",\n    \"peloton\",\n    \"penalta\",\n    \"pendrek\",\n    \"penze\",\n    \"periskop\",\n    \"pero\",\n    \"pestrost\",\n    \"petarda\",\n    \"petice\",\n    \"petrolej\",\n    \"pevnina\",\n    \"pexeso\",\n    \"pianista\",\n    \"piha\",\n    \"pijavice\",\n    \"pikle\",\n    \"piknik\",\n    \"pilina\",\n    \"pilnost\",\n    \"pilulka\",\n    \"pinzeta\",\n    \"pipeta\",\n    \"pisatel\",\n    \"pistole\",\n    \"pitevna\",\n    \"pivnice\",\n    \"pivovar\",\n    \"placenta\",\n    \"plakat\",\n    \"plamen\",\n    \"planeta\",\n    \"plastika\",\n    \"platit\",\n    \"plavidlo\",\n    \"plaz\",\n    \"plech\",\n    \"plemeno\",\n    \"plenta\",\n    \"ples\",\n    \"pletivo\",\n    \"plevel\",\n    \"plivat\",\n    \"plnit\",\n    \"plno\",\n    \"plocha\",\n    \"plodina\",\n    \"plomba\",\n    \"plout\",\n    \"pluk\",\n    \"plyn\",\n    \"pobavit\",\n    \"pobyt\",\n    \"pochod\",\n    \"pocit\",\n    \"poctivec\",\n    \"podat\",\n    \"podcenit\",\n    \"podepsat\",\n    \"podhled\",\n    \"podivit\",\n    \"podklad\",\n    \"podmanit\",\n    \"podnik\",\n    \"podoba\",\n    \"podpora\",\n    \"podraz\",\n    \"podstata\",\n    \"podvod\",\n    \"podzim\",\n    \"poezie\",\n    \"pohanka\",\n    \"pohnutka\",\n    \"pohovor\",\n    \"pohroma\",\n    \"pohyb\",\n    \"pointa\",\n    \"pojistka\",\n    \"pojmout\",\n    \"pokazit\",\n    \"pokles\",\n    \"pokoj\",\n    \"pokrok\",\n    \"pokuta\",\n    \"pokyn\",\n    \"poledne\",\n    \"polibek\",\n    \"polknout\",\n    \"poloha\",\n    \"polynom\",\n    \"pomalu\",\n    \"pominout\",\n    \"pomlka\",\n    \"pomoc\",\n    \"pomsta\",\n    \"pomyslet\",\n    \"ponechat\",\n    \"ponorka\",\n    \"ponurost\",\n    \"popadat\",\n    \"popel\",\n    \"popisek\",\n    \"poplach\",\n    \"poprosit\",\n    \"popsat\",\n    \"popud\",\n    \"poradce\",\n    \"porce\",\n    \"porod\",\n    \"porucha\",\n    \"poryv\",\n    \"posadit\",\n    \"posed\",\n    \"posila\",\n    \"poskok\",\n    \"poslanec\",\n    \"posoudit\",\n    \"pospolu\",\n    \"postava\",\n    \"posudek\",\n    \"posyp\",\n    \"potah\",\n    \"potkan\",\n    \"potlesk\",\n    \"potomek\",\n    \"potrava\",\n    \"potupa\",\n    \"potvora\",\n    \"poukaz\",\n    \"pouto\",\n    \"pouzdro\",\n    \"povaha\",\n    \"povidla\",\n    \"povlak\",\n    \"povoz\",\n    \"povrch\",\n    \"povstat\",\n    \"povyk\",\n    \"povzdech\",\n    \"pozdrav\",\n    \"pozemek\",\n    \"poznatek\",\n    \"pozor\",\n    \"pozvat\",\n    \"pracovat\",\n    \"prahory\",\n    \"praktika\",\n    \"prales\",\n    \"praotec\",\n    \"praporek\",\n    \"prase\",\n    \"pravda\",\n    \"princip\",\n    \"prkno\",\n    \"probudit\",\n    \"procento\",\n    \"prodej\",\n    \"profese\",\n    \"prohra\",\n    \"projekt\",\n    \"prolomit\",\n    \"promile\",\n    \"pronikat\",\n    \"propad\",\n    \"prorok\",\n    \"prosba\",\n    \"proton\",\n    \"proutek\",\n    \"provaz\",\n    \"prskavka\",\n    \"prsten\",\n    \"prudkost\",\n    \"prut\",\n    \"prvek\",\n    \"prvohory\",\n    \"psanec\",\n    \"psovod\",\n    \"pstruh\",\n    \"ptactvo\",\n    \"puberta\",\n    \"puch\",\n    \"pudl\",\n    \"pukavec\",\n    \"puklina\",\n    \"pukrle\",\n    \"pult\",\n    \"pumpa\",\n    \"punc\",\n    \"pupen\",\n    \"pusa\",\n    \"pusinka\",\n    \"pustina\",\n    \"putovat\",\n    \"putyka\",\n    \"pyramida\",\n    \"pysk\",\n    \"pytel\",\n    \"racek\",\n    \"rachot\",\n    \"radiace\",\n    \"radnice\",\n    \"radon\",\n    \"raft\",\n    \"ragby\",\n    \"raketa\",\n    \"rakovina\",\n    \"rameno\",\n    \"rampouch\",\n    \"rande\",\n    \"rarach\",\n    \"rarita\",\n    \"rasovna\",\n    \"rastr\",\n    \"ratolest\",\n    \"razance\",\n    \"razidlo\",\n    \"reagovat\",\n    \"reakce\",\n    \"recept\",\n    \"redaktor\",\n    \"referent\",\n    \"reflex\",\n    \"rejnok\",\n    \"reklama\",\n    \"rekord\",\n    \"rekrut\",\n    \"rektor\",\n    \"reputace\",\n    \"revize\",\n    \"revma\",\n    \"revolver\",\n    \"rezerva\",\n    \"riskovat\",\n    \"riziko\",\n    \"robotika\",\n    \"rodokmen\",\n    \"rohovka\",\n    \"rokle\",\n    \"rokoko\",\n    \"romaneto\",\n    \"ropovod\",\n    \"ropucha\",\n    \"rorejs\",\n    \"rosol\",\n    \"rostlina\",\n    \"rotmistr\",\n    \"rotoped\",\n    \"rotunda\",\n    \"roubenka\",\n    \"roucho\",\n    \"roup\",\n    \"roura\",\n    \"rovina\",\n    \"rovnice\",\n    \"rozbor\",\n    \"rozchod\",\n    \"rozdat\",\n    \"rozeznat\",\n    \"rozhodce\",\n    \"rozinka\",\n    \"rozjezd\",\n    \"rozkaz\",\n    \"rozloha\",\n    \"rozmar\",\n    \"rozpad\",\n    \"rozruch\",\n    \"rozsah\",\n    \"roztok\",\n    \"rozum\",\n    \"rozvod\",\n    \"rubrika\",\n    \"ruchadlo\",\n    \"rukavice\",\n    \"rukopis\",\n    \"ryba\",\n    \"rybolov\",\n    \"rychlost\",\n    \"rydlo\",\n    \"rypadlo\",\n    \"rytina\",\n    \"ryzost\",\n    \"sadista\",\n    \"sahat\",\n    \"sako\",\n    \"samec\",\n    \"samizdat\",\n    \"samota\",\n    \"sanitka\",\n    \"sardinka\",\n    \"sasanka\",\n    \"satelit\",\n    \"sazba\",\n    \"sazenice\",\n    \"sbor\",\n    \"schovat\",\n    \"sebranka\",\n    \"secese\",\n    \"sedadlo\",\n    \"sediment\",\n    \"sedlo\",\n    \"sehnat\",\n    \"sejmout\",\n    \"sekera\",\n    \"sekta\",\n    \"sekunda\",\n    \"sekvoje\",\n    \"semeno\",\n    \"seno\",\n    \"servis\",\n    \"sesadit\",\n    \"seshora\",\n    \"seskok\",\n    \"seslat\",\n    \"sestra\",\n    \"sesuv\",\n    \"sesypat\",\n    \"setba\",\n    \"setina\",\n    \"setkat\",\n    \"setnout\",\n    \"setrvat\",\n    \"sever\",\n    \"seznam\",\n    \"shoda\",\n    \"shrnout\",\n    \"sifon\",\n    \"silnice\",\n    \"sirka\",\n    \"sirotek\",\n    \"sirup\",\n    \"situace\",\n    \"skafandr\",\n    \"skalisko\",\n    \"skanzen\",\n    \"skaut\",\n    \"skeptik\",\n    \"skica\",\n    \"skladba\",\n    \"sklenice\",\n    \"sklo\",\n    \"skluz\",\n    \"skoba\",\n    \"skokan\",\n    \"skoro\",\n    \"skripta\",\n    \"skrz\",\n    \"skupina\",\n    \"skvost\",\n    \"skvrna\",\n    \"slabika\",\n    \"sladidlo\",\n    \"slanina\",\n    \"slast\",\n    \"slavnost\",\n    \"sledovat\",\n    \"slepec\",\n    \"sleva\",\n    \"slezina\",\n    \"slib\",\n    \"slina\",\n    \"sliznice\",\n    \"slon\",\n    \"sloupek\",\n    \"slovo\",\n    \"sluch\",\n    \"sluha\",\n    \"slunce\",\n    \"slupka\",\n    \"slza\",\n    \"smaragd\",\n    \"smetana\",\n    \"smilstvo\",\n    \"smlouva\",\n    \"smog\",\n    \"smrad\",\n    \"smrk\",\n    \"smrtka\",\n    \"smutek\",\n    \"smysl\",\n    \"snad\",\n    \"snaha\",\n    \"snob\",\n    \"sobota\",\n    \"socha\",\n    \"sodovka\",\n    \"sokol\",\n    \"sopka\",\n    \"sotva\",\n    \"souboj\",\n    \"soucit\",\n    \"soudce\",\n    \"souhlas\",\n    \"soulad\",\n    \"soumrak\",\n    \"souprava\",\n    \"soused\",\n    \"soutok\",\n    \"souviset\",\n    \"spalovna\",\n    \"spasitel\",\n    \"spis\",\n    \"splav\",\n    \"spodek\",\n    \"spojenec\",\n    \"spolu\",\n    \"sponzor\",\n    \"spornost\",\n    \"spousta\",\n    \"sprcha\",\n    \"spustit\",\n    \"sranda\",\n    \"sraz\",\n    \"srdce\",\n    \"srna\",\n    \"srnec\",\n    \"srovnat\",\n    \"srpen\",\n    \"srst\",\n    \"srub\",\n    \"stanice\",\n    \"starosta\",\n    \"statika\",\n    \"stavba\",\n    \"stehno\",\n    \"stezka\",\n    \"stodola\",\n    \"stolek\",\n    \"stopa\",\n    \"storno\",\n    \"stoupat\",\n    \"strach\",\n    \"stres\",\n    \"strhnout\",\n    \"strom\",\n    \"struna\",\n    \"studna\",\n    \"stupnice\",\n    \"stvol\",\n    \"styk\",\n    \"subjekt\",\n    \"subtropy\",\n    \"suchar\",\n    \"sudost\",\n    \"sukno\",\n    \"sundat\",\n    \"sunout\",\n    \"surikata\",\n    \"surovina\",\n    \"svah\",\n    \"svalstvo\",\n    \"svetr\",\n    \"svatba\",\n    \"svazek\",\n    \"svisle\",\n    \"svitek\",\n    \"svoboda\",\n    \"svodidlo\",\n    \"svorka\",\n    \"svrab\",\n    \"sykavka\",\n    \"sykot\",\n    \"synek\",\n    \"synovec\",\n    \"sypat\",\n    \"sypkost\",\n    \"syrovost\",\n    \"sysel\",\n    \"sytost\",\n    \"tabletka\",\n    \"tabule\",\n    \"tahoun\",\n    \"tajemno\",\n    \"tajfun\",\n    \"tajga\",\n    \"tajit\",\n    \"tajnost\",\n    \"taktika\",\n    \"tamhle\",\n    \"tampon\",\n    \"tancovat\",\n    \"tanec\",\n    \"tanker\",\n    \"tapeta\",\n    \"tavenina\",\n    \"tazatel\",\n    \"technika\",\n    \"tehdy\",\n    \"tekutina\",\n    \"telefon\",\n    \"temnota\",\n    \"tendence\",\n    \"tenista\",\n    \"tenor\",\n    \"teplota\",\n    \"tepna\",\n    \"teprve\",\n    \"terapie\",\n    \"termoska\",\n    \"textil\",\n    \"ticho\",\n    \"tiskopis\",\n    \"titulek\",\n    \"tkadlec\",\n    \"tkanina\",\n    \"tlapka\",\n    \"tleskat\",\n    \"tlukot\",\n    \"tlupa\",\n    \"tmel\",\n    \"toaleta\",\n    \"topinka\",\n    \"topol\",\n    \"torzo\",\n    \"touha\",\n    \"toulec\",\n    \"tradice\",\n    \"traktor\",\n    \"tramp\",\n    \"trasa\",\n    \"traverza\",\n    \"trefit\",\n    \"trest\",\n    \"trezor\",\n    \"trhavina\",\n    \"trhlina\",\n    \"trochu\",\n    \"trojice\",\n    \"troska\",\n    \"trouba\",\n    \"trpce\",\n    \"trpitel\",\n    \"trpkost\",\n    \"trubec\",\n    \"truchlit\",\n    \"truhlice\",\n    \"trus\",\n    \"trvat\",\n    \"tudy\",\n    \"tuhnout\",\n    \"tuhost\",\n    \"tundra\",\n    \"turista\",\n    \"turnaj\",\n    \"tuzemsko\",\n    \"tvaroh\",\n    \"tvorba\",\n    \"tvrdost\",\n    \"tvrz\",\n    \"tygr\",\n    \"tykev\",\n    \"ubohost\",\n    \"uboze\",\n    \"ubrat\",\n    \"ubrousek\",\n    \"ubrus\",\n    \"ubytovna\",\n    \"ucho\",\n    \"uctivost\",\n    \"udivit\",\n    \"uhradit\",\n    \"ujednat\",\n    \"ujistit\",\n    \"ujmout\",\n    \"ukazatel\",\n    \"uklidnit\",\n    \"uklonit\",\n    \"ukotvit\",\n    \"ukrojit\",\n    \"ulice\",\n    \"ulita\",\n    \"ulovit\",\n    \"umyvadlo\",\n    \"unavit\",\n    \"uniforma\",\n    \"uniknout\",\n    \"upadnout\",\n    \"uplatnit\",\n    \"uplynout\",\n    \"upoutat\",\n    \"upravit\",\n    \"uran\",\n    \"urazit\",\n    \"usednout\",\n    \"usilovat\",\n    \"usmrtit\",\n    \"usnadnit\",\n    \"usnout\",\n    \"usoudit\",\n    \"ustlat\",\n    \"ustrnout\",\n    \"utahovat\",\n    \"utkat\",\n    \"utlumit\",\n    \"utonout\",\n    \"utopenec\",\n    \"utrousit\",\n    \"uvalit\",\n    \"uvolnit\",\n    \"uvozovka\",\n    \"uzdravit\",\n    \"uzel\",\n    \"uzenina\",\n    \"uzlina\",\n    \"uznat\",\n    \"vagon\",\n    \"valcha\",\n    \"valoun\",\n    \"vana\",\n    \"vandal\",\n    \"vanilka\",\n    \"varan\",\n    \"varhany\",\n    \"varovat\",\n    \"vcelku\",\n    \"vchod\",\n    \"vdova\",\n    \"vedro\",\n    \"vegetace\",\n    \"vejce\",\n    \"velbloud\",\n    \"veletrh\",\n    \"velitel\",\n    \"velmoc\",\n    \"velryba\",\n    \"venkov\",\n    \"veranda\",\n    \"verze\",\n    \"veselka\",\n    \"veskrze\",\n    \"vesnice\",\n    \"vespodu\",\n    \"vesta\",\n    \"veterina\",\n    \"veverka\",\n    \"vibrace\",\n    \"vichr\",\n    \"videohra\",\n    \"vidina\",\n    \"vidle\",\n    \"vila\",\n    \"vinice\",\n    \"viset\",\n    \"vitalita\",\n    \"vize\",\n    \"vizitka\",\n    \"vjezd\",\n    \"vklad\",\n    \"vkus\",\n    \"vlajka\",\n    \"vlak\",\n    \"vlasec\",\n    \"vlevo\",\n    \"vlhkost\",\n    \"vliv\",\n    \"vlnovka\",\n    \"vloupat\",\n    \"vnucovat\",\n    \"vnuk\",\n    \"voda\",\n    \"vodivost\",\n    \"vodoznak\",\n    \"vodstvo\",\n    \"vojensky\",\n    \"vojna\",\n    \"vojsko\",\n    \"volant\",\n    \"volba\",\n    \"volit\",\n    \"volno\",\n    \"voskovka\",\n    \"vozidlo\",\n    \"vozovna\",\n    \"vpravo\",\n    \"vrabec\",\n    \"vracet\",\n    \"vrah\",\n    \"vrata\",\n    \"vrba\",\n    \"vrcholek\",\n    \"vrhat\",\n    \"vrstva\",\n    \"vrtule\",\n    \"vsadit\",\n    \"vstoupit\",\n    \"vstup\",\n    \"vtip\",\n    \"vybavit\",\n    \"vybrat\",\n    \"vychovat\",\n    \"vydat\",\n    \"vydra\",\n    \"vyfotit\",\n    \"vyhledat\",\n    \"vyhnout\",\n    \"vyhodit\",\n    \"vyhradit\",\n    \"vyhubit\",\n    \"vyjasnit\",\n    \"vyjet\",\n    \"vyjmout\",\n    \"vyklopit\",\n    \"vykonat\",\n    \"vylekat\",\n    \"vymazat\",\n    \"vymezit\",\n    \"vymizet\",\n    \"vymyslet\",\n    \"vynechat\",\n    \"vynikat\",\n    \"vynutit\",\n    \"vypadat\",\n    \"vyplatit\",\n    \"vypravit\",\n    \"vypustit\",\n    \"vyrazit\",\n    \"vyrovnat\",\n    \"vyrvat\",\n    \"vyslovit\",\n    \"vysoko\",\n    \"vystavit\",\n    \"vysunout\",\n    \"vysypat\",\n    \"vytasit\",\n    \"vytesat\",\n    \"vytratit\",\n    \"vyvinout\",\n    \"vyvolat\",\n    \"vyvrhel\",\n    \"vyzdobit\",\n    \"vyznat\",\n    \"vzadu\",\n    \"vzbudit\",\n    \"vzchopit\",\n    \"vzdor\",\n    \"vzduch\",\n    \"vzdychat\",\n    \"vzestup\",\n    \"vzhledem\",\n    \"vzkaz\",\n    \"vzlykat\",\n    \"vznik\",\n    \"vzorek\",\n    \"vzpoura\",\n    \"vztah\",\n    \"vztek\",\n    \"xylofon\",\n    \"zabrat\",\n    \"zabydlet\",\n    \"zachovat\",\n    \"zadarmo\",\n    \"zadusit\",\n    \"zafoukat\",\n    \"zahltit\",\n    \"zahodit\",\n    \"zahrada\",\n    \"zahynout\",\n    \"zajatec\",\n    \"zajet\",\n    \"zajistit\",\n    \"zaklepat\",\n    \"zakoupit\",\n    \"zalepit\",\n    \"zamezit\",\n    \"zamotat\",\n    \"zamyslet\",\n    \"zanechat\",\n    \"zanikat\",\n    \"zaplatit\",\n    \"zapojit\",\n    \"zapsat\",\n    \"zarazit\",\n    \"zastavit\",\n    \"zasunout\",\n    \"zatajit\",\n    \"zatemnit\",\n    \"zatknout\",\n    \"zaujmout\",\n    \"zavalit\",\n    \"zavelet\",\n    \"zavinit\",\n    \"zavolat\",\n    \"zavrtat\",\n    \"zazvonit\",\n    \"zbavit\",\n    \"zbrusu\",\n    \"zbudovat\",\n    \"zbytek\",\n    \"zdaleka\",\n    \"zdarma\",\n    \"zdatnost\",\n    \"zdivo\",\n    \"zdobit\",\n    \"zdroj\",\n    \"zdvih\",\n    \"zdymadlo\",\n    \"zelenina\",\n    \"zeman\",\n    \"zemina\",\n    \"zeptat\",\n    \"zezadu\",\n    \"zezdola\",\n    \"zhatit\",\n    \"zhltnout\",\n    \"zhluboka\",\n    \"zhotovit\",\n    \"zhruba\",\n    \"zima\",\n    \"zimnice\",\n    \"zjemnit\",\n    \"zklamat\",\n    \"zkoumat\",\n    \"zkratka\",\n    \"zkumavka\",\n    \"zlato\",\n    \"zlehka\",\n    \"zloba\",\n    \"zlom\",\n    \"zlost\",\n    \"zlozvyk\",\n    \"zmapovat\",\n    \"zmar\",\n    \"zmatek\",\n    \"zmije\",\n    \"zmizet\",\n    \"zmocnit\",\n    \"zmodrat\",\n    \"zmrzlina\",\n    \"zmutovat\",\n    \"znak\",\n    \"znalost\",\n    \"znamenat\",\n    \"znovu\",\n    \"zobrazit\",\n    \"zotavit\",\n    \"zoubek\",\n    \"zoufale\",\n    \"zplodit\",\n    \"zpomalit\",\n    \"zprava\",\n    \"zprostit\",\n    \"zprudka\",\n    \"zprvu\",\n    \"zrada\",\n    \"zranit\",\n    \"zrcadlo\",\n    \"zrnitost\",\n    \"zrno\",\n    \"zrovna\",\n    \"zrychlit\",\n    \"zrzavost\",\n    \"zticha\",\n    \"ztratit\",\n    \"zubovina\",\n    \"zubr\",\n    \"zvednout\",\n    \"zvenku\",\n    \"zvesela\",\n    \"zvon\",\n    \"zvrat\",\n    \"zvukovod\",\n    \"zvyk\"\n]\n","module.exports=[\n    \"ábaco\",\n    \"abdomen\",\n    \"abeja\",\n    \"abierto\",\n    \"abogado\",\n    \"abono\",\n    \"aborto\",\n    \"abrazo\",\n    \"abrir\",\n    \"abuelo\",\n    \"abuso\",\n    \"acabar\",\n    \"academia\",\n    \"acceso\",\n    \"acción\",\n    \"aceite\",\n    \"acelga\",\n    \"acento\",\n    \"aceptar\",\n    \"ácido\",\n    \"aclarar\",\n    \"acné\",\n    \"acoger\",\n    \"acoso\",\n    \"activo\",\n    \"acto\",\n    \"actriz\",\n    \"actuar\",\n    \"acudir\",\n    \"acuerdo\",\n    \"acusar\",\n    \"adicto\",\n    \"admitir\",\n    \"adoptar\",\n    \"adorno\",\n    \"aduana\",\n    \"adulto\",\n    \"aéreo\",\n    \"afectar\",\n    \"afición\",\n    \"afinar\",\n    \"afirmar\",\n    \"ágil\",\n    \"agitar\",\n    \"agonía\",\n    \"agosto\",\n    \"agotar\",\n    \"agregar\",\n    \"agrio\",\n    \"agua\",\n    \"agudo\",\n    \"águila\",\n    \"aguja\",\n    \"ahogo\",\n    \"ahorro\",\n    \"aire\",\n    \"aislar\",\n    \"ajedrez\",\n    \"ajeno\",\n    \"ajuste\",\n    \"alacrán\",\n    \"alambre\",\n    \"alarma\",\n    \"alba\",\n    \"álbum\",\n    \"alcalde\",\n    \"aldea\",\n    \"alegre\",\n    \"alejar\",\n    \"alerta\",\n    \"aleta\",\n    \"alfiler\",\n    \"alga\",\n    \"algodón\",\n    \"aliado\",\n    \"aliento\",\n    \"alivio\",\n    \"alma\",\n    \"almeja\",\n    \"almíbar\",\n    \"altar\",\n    \"alteza\",\n    \"altivo\",\n    \"alto\",\n    \"altura\",\n    \"alumno\",\n    \"alzar\",\n    \"amable\",\n    \"amante\",\n    \"amapola\",\n    \"amargo\",\n    \"amasar\",\n    \"ámbar\",\n    \"ámbito\",\n    \"ameno\",\n    \"amigo\",\n    \"amistad\",\n    \"amor\",\n    \"amparo\",\n    \"amplio\",\n    \"ancho\",\n    \"anciano\",\n    \"ancla\",\n    \"andar\",\n    \"andén\",\n    \"anemia\",\n    \"ángulo\",\n    \"anillo\",\n    \"ánimo\",\n    \"anís\",\n    \"anotar\",\n    \"antena\",\n    \"antiguo\",\n    \"antojo\",\n    \"anual\",\n    \"anular\",\n    \"anuncio\",\n    \"añadir\",\n    \"añejo\",\n    \"año\",\n    \"apagar\",\n    \"aparato\",\n    \"apetito\",\n    \"apio\",\n    \"aplicar\",\n    \"apodo\",\n    \"aporte\",\n    \"apoyo\",\n    \"aprender\",\n    \"aprobar\",\n    \"apuesta\",\n    \"apuro\",\n    \"arado\",\n    \"araña\",\n    \"arar\",\n    \"árbitro\",\n    \"árbol\",\n    \"arbusto\",\n    \"archivo\",\n    \"arco\",\n    \"arder\",\n    \"ardilla\",\n    \"arduo\",\n    \"área\",\n    \"árido\",\n    \"aries\",\n    \"armonía\",\n    \"arnés\",\n    \"aroma\",\n    \"arpa\",\n    \"arpón\",\n    \"arreglo\",\n    \"arroz\",\n    \"arruga\",\n    \"arte\",\n    \"artista\",\n    \"asa\",\n    \"asado\",\n    \"asalto\",\n    \"ascenso\",\n    \"asegurar\",\n    \"aseo\",\n    \"asesor\",\n    \"asiento\",\n    \"asilo\",\n    \"asistir\",\n    \"asno\",\n    \"asombro\",\n    \"áspero\",\n    \"astilla\",\n    \"astro\",\n    \"astuto\",\n    \"asumir\",\n    \"asunto\",\n    \"atajo\",\n    \"ataque\",\n    \"atar\",\n    \"atento\",\n    \"ateo\",\n    \"ático\",\n    \"atleta\",\n    \"átomo\",\n    \"atraer\",\n    \"atroz\",\n    \"atún\",\n    \"audaz\",\n    \"audio\",\n    \"auge\",\n    \"aula\",\n    \"aumento\",\n    \"ausente\",\n    \"autor\",\n    \"aval\",\n    \"avance\",\n    \"avaro\",\n    \"ave\",\n    \"avellana\",\n    \"avena\",\n    \"avestruz\",\n    \"avión\",\n    \"aviso\",\n    \"ayer\",\n    \"ayuda\",\n    \"ayuno\",\n    \"azafrán\",\n    \"azar\",\n    \"azote\",\n    \"azúcar\",\n    \"azufre\",\n    \"azul\",\n    \"baba\",\n    \"babor\",\n    \"bache\",\n    \"bahía\",\n    \"baile\",\n    \"bajar\",\n    \"balanza\",\n    \"balcón\",\n    \"balde\",\n    \"bambú\",\n    \"banco\",\n    \"banda\",\n    \"baño\",\n    \"barba\",\n    \"barco\",\n    \"barniz\",\n    \"barro\",\n    \"báscula\",\n    \"bastón\",\n    \"basura\",\n    \"batalla\",\n    \"batería\",\n    \"batir\",\n    \"batuta\",\n    \"baúl\",\n    \"bazar\",\n    \"bebé\",\n    \"bebida\",\n    \"bello\",\n    \"besar\",\n    \"beso\",\n    \"bestia\",\n    \"bicho\",\n    \"bien\",\n    \"bingo\",\n    \"blanco\",\n    \"bloque\",\n    \"blusa\",\n    \"boa\",\n    \"bobina\",\n    \"bobo\",\n    \"boca\",\n    \"bocina\",\n    \"boda\",\n    \"bodega\",\n    \"boina\",\n    \"bola\",\n    \"bolero\",\n    \"bolsa\",\n    \"bomba\",\n    \"bondad\",\n    \"bonito\",\n    \"bono\",\n    \"bonsái\",\n    \"borde\",\n    \"borrar\",\n    \"bosque\",\n    \"bote\",\n    \"botín\",\n    \"bóveda\",\n    \"bozal\",\n    \"bravo\",\n    \"brazo\",\n    \"brecha\",\n    \"breve\",\n    \"brillo\",\n    \"brinco\",\n    \"brisa\",\n    \"broca\",\n    \"broma\",\n    \"bronce\",\n    \"brote\",\n    \"bruja\",\n    \"brusco\",\n    \"bruto\",\n    \"buceo\",\n    \"bucle\",\n    \"bueno\",\n    \"buey\",\n    \"bufanda\",\n    \"bufón\",\n    \"búho\",\n    \"buitre\",\n    \"bulto\",\n    \"burbuja\",\n    \"burla\",\n    \"burro\",\n    \"buscar\",\n    \"butaca\",\n    \"buzón\",\n    \"caballo\",\n    \"cabeza\",\n    \"cabina\",\n    \"cabra\",\n    \"cacao\",\n    \"cadáver\",\n    \"cadena\",\n    \"caer\",\n    \"café\",\n    \"caída\",\n    \"caimán\",\n    \"caja\",\n    \"cajón\",\n    \"cal\",\n    \"calamar\",\n    \"calcio\",\n    \"caldo\",\n    \"calidad\",\n    \"calle\",\n    \"calma\",\n    \"calor\",\n    \"calvo\",\n    \"cama\",\n    \"cambio\",\n    \"camello\",\n    \"camino\",\n    \"campo\",\n    \"cáncer\",\n    \"candil\",\n    \"canela\",\n    \"canguro\",\n    \"canica\",\n    \"canto\",\n    \"caña\",\n    \"cañón\",\n    \"caoba\",\n    \"caos\",\n    \"capaz\",\n    \"capitán\",\n    \"capote\",\n    \"captar\",\n    \"capucha\",\n    \"cara\",\n    \"carbón\",\n    \"cárcel\",\n    \"careta\",\n    \"carga\",\n    \"cariño\",\n    \"carne\",\n    \"carpeta\",\n    \"carro\",\n    \"carta\",\n    \"casa\",\n    \"casco\",\n    \"casero\",\n    \"caspa\",\n    \"castor\",\n    \"catorce\",\n    \"catre\",\n    \"caudal\",\n    \"causa\",\n    \"cazo\",\n    \"cebolla\",\n    \"ceder\",\n    \"cedro\",\n    \"celda\",\n    \"célebre\",\n    \"celoso\",\n    \"célula\",\n    \"cemento\",\n    \"ceniza\",\n    \"centro\",\n    \"cerca\",\n    \"cerdo\",\n    \"cereza\",\n    \"cero\",\n    \"cerrar\",\n    \"certeza\",\n    \"césped\",\n    \"cetro\",\n    \"chacal\",\n    \"chaleco\",\n    \"champú\",\n    \"chancla\",\n    \"chapa\",\n    \"charla\",\n    \"chico\",\n    \"chiste\",\n    \"chivo\",\n    \"choque\",\n    \"choza\",\n    \"chuleta\",\n    \"chupar\",\n    \"ciclón\",\n    \"ciego\",\n    \"cielo\",\n    \"cien\",\n    \"cierto\",\n    \"cifra\",\n    \"cigarro\",\n    \"cima\",\n    \"cinco\",\n    \"cine\",\n    \"cinta\",\n    \"ciprés\",\n    \"circo\",\n    \"ciruela\",\n    \"cisne\",\n    \"cita\",\n    \"ciudad\",\n    \"clamor\",\n    \"clan\",\n    \"claro\",\n    \"clase\",\n    \"clave\",\n    \"cliente\",\n    \"clima\",\n    \"clínica\",\n    \"cobre\",\n    \"cocción\",\n    \"cochino\",\n    \"cocina\",\n    \"coco\",\n    \"código\",\n    \"codo\",\n    \"cofre\",\n    \"coger\",\n    \"cohete\",\n    \"cojín\",\n    \"cojo\",\n    \"cola\",\n    \"colcha\",\n    \"colegio\",\n    \"colgar\",\n    \"colina\",\n    \"collar\",\n    \"colmo\",\n    \"columna\",\n    \"combate\",\n    \"comer\",\n    \"comida\",\n    \"cómodo\",\n    \"compra\",\n    \"conde\",\n    \"conejo\",\n    \"conga\",\n    \"conocer\",\n    \"consejo\",\n    \"contar\",\n    \"copa\",\n    \"copia\",\n    \"corazón\",\n    \"corbata\",\n    \"corcho\",\n    \"cordón\",\n    \"corona\",\n    \"correr\",\n    \"coser\",\n    \"cosmos\",\n    \"costa\",\n    \"cráneo\",\n    \"cráter\",\n    \"crear\",\n    \"crecer\",\n    \"creído\",\n    \"crema\",\n    \"cría\",\n    \"crimen\",\n    \"cripta\",\n    \"crisis\",\n    \"cromo\",\n    \"crónica\",\n    \"croqueta\",\n    \"crudo\",\n    \"cruz\",\n    \"cuadro\",\n    \"cuarto\",\n    \"cuatro\",\n    \"cubo\",\n    \"cubrir\",\n    \"cuchara\",\n    \"cuello\",\n    \"cuento\",\n    \"cuerda\",\n    \"cuesta\",\n    \"cueva\",\n    \"cuidar\",\n    \"culebra\",\n    \"culpa\",\n    \"culto\",\n    \"cumbre\",\n    \"cumplir\",\n    \"cuna\",\n    \"cuneta\",\n    \"cuota\",\n    \"cupón\",\n    \"cúpula\",\n    \"curar\",\n    \"curioso\",\n    \"curso\",\n    \"curva\",\n    \"cutis\",\n    \"dama\",\n    \"danza\",\n    \"dar\",\n    \"dardo\",\n    \"dátil\",\n    \"deber\",\n    \"débil\",\n    \"década\",\n    \"decir\",\n    \"dedo\",\n    \"defensa\",\n    \"definir\",\n    \"dejar\",\n    \"delfín\",\n    \"delgado\",\n    \"delito\",\n    \"demora\",\n    \"denso\",\n    \"dental\",\n    \"deporte\",\n    \"derecho\",\n    \"derrota\",\n    \"desayuno\",\n    \"deseo\",\n    \"desfile\",\n    \"desnudo\",\n    \"destino\",\n    \"desvío\",\n    \"detalle\",\n    \"detener\",\n    \"deuda\",\n    \"día\",\n    \"diablo\",\n    \"diadema\",\n    \"diamante\",\n    \"diana\",\n    \"diario\",\n    \"dibujo\",\n    \"dictar\",\n    \"diente\",\n    \"dieta\",\n    \"diez\",\n    \"difícil\",\n    \"digno\",\n    \"dilema\",\n    \"diluir\",\n    \"dinero\",\n    \"directo\",\n    \"dirigir\",\n    \"disco\",\n    \"diseño\",\n    \"disfraz\",\n    \"diva\",\n    \"divino\",\n    \"doble\",\n    \"doce\",\n    \"dolor\",\n    \"domingo\",\n    \"don\",\n    \"donar\",\n    \"dorado\",\n    \"dormir\",\n    \"dorso\",\n    \"dos\",\n    \"dosis\",\n    \"dragón\",\n    \"droga\",\n    \"ducha\",\n    \"duda\",\n    \"duelo\",\n    \"dueño\",\n    \"dulce\",\n    \"dúo\",\n    \"duque\",\n    \"durar\",\n    \"dureza\",\n    \"duro\",\n    \"ébano\",\n    \"ebrio\",\n    \"echar\",\n    \"eco\",\n    \"ecuador\",\n    \"edad\",\n    \"edición\",\n    \"edificio\",\n    \"editor\",\n    \"educar\",\n    \"efecto\",\n    \"eficaz\",\n    \"eje\",\n    \"ejemplo\",\n    \"elefante\",\n    \"elegir\",\n    \"elemento\",\n    \"elevar\",\n    \"elipse\",\n    \"élite\",\n    \"elixir\",\n    \"elogio\",\n    \"eludir\",\n    \"embudo\",\n    \"emitir\",\n    \"emoción\",\n    \"empate\",\n    \"empeño\",\n    \"empleo\",\n    \"empresa\",\n    \"enano\",\n    \"encargo\",\n    \"enchufe\",\n    \"encía\",\n    \"enemigo\",\n    \"enero\",\n    \"enfado\",\n    \"enfermo\",\n    \"engaño\",\n    \"enigma\",\n    \"enlace\",\n    \"enorme\",\n    \"enredo\",\n    \"ensayo\",\n    \"enseñar\",\n    \"entero\",\n    \"entrar\",\n    \"envase\",\n    \"envío\",\n    \"época\",\n    \"equipo\",\n    \"erizo\",\n    \"escala\",\n    \"escena\",\n    \"escolar\",\n    \"escribir\",\n    \"escudo\",\n    \"esencia\",\n    \"esfera\",\n    \"esfuerzo\",\n    \"espada\",\n    \"espejo\",\n    \"espía\",\n    \"esposa\",\n    \"espuma\",\n    \"esquí\",\n    \"estar\",\n    \"este\",\n    \"estilo\",\n    \"estufa\",\n    \"etapa\",\n    \"eterno\",\n    \"ética\",\n    \"etnia\",\n    \"evadir\",\n    \"evaluar\",\n    \"evento\",\n    \"evitar\",\n    \"exacto\",\n    \"examen\",\n    \"exceso\",\n    \"excusa\",\n    \"exento\",\n    \"exigir\",\n    \"exilio\",\n    \"existir\",\n    \"éxito\",\n    \"experto\",\n    \"explicar\",\n    \"exponer\",\n    \"extremo\",\n    \"fábrica\",\n    \"fábula\",\n    \"fachada\",\n    \"fácil\",\n    \"factor\",\n    \"faena\",\n    \"faja\",\n    \"falda\",\n    \"fallo\",\n    \"falso\",\n    \"faltar\",\n    \"fama\",\n    \"familia\",\n    \"famoso\",\n    \"faraón\",\n    \"farmacia\",\n    \"farol\",\n    \"farsa\",\n    \"fase\",\n    \"fatiga\",\n    \"fauna\",\n    \"favor\",\n    \"fax\",\n    \"febrero\",\n    \"fecha\",\n    \"feliz\",\n    \"feo\",\n    \"feria\",\n    \"feroz\",\n    \"fértil\",\n    \"fervor\",\n    \"festín\",\n    \"fiable\",\n    \"fianza\",\n    \"fiar\",\n    \"fibra\",\n    \"ficción\",\n    \"ficha\",\n    \"fideo\",\n    \"fiebre\",\n    \"fiel\",\n    \"fiera\",\n    \"fiesta\",\n    \"figura\",\n    \"fijar\",\n    \"fijo\",\n    \"fila\",\n    \"filete\",\n    \"filial\",\n    \"filtro\",\n    \"fin\",\n    \"finca\",\n    \"fingir\",\n    \"finito\",\n    \"firma\",\n    \"flaco\",\n    \"flauta\",\n    \"flecha\",\n    \"flor\",\n    \"flota\",\n    \"fluir\",\n    \"flujo\",\n    \"flúor\",\n    \"fobia\",\n    \"foca\",\n    \"fogata\",\n    \"fogón\",\n    \"folio\",\n    \"folleto\",\n    \"fondo\",\n    \"forma\",\n    \"forro\",\n    \"fortuna\",\n    \"forzar\",\n    \"fosa\",\n    \"foto\",\n    \"fracaso\",\n    \"frágil\",\n    \"franja\",\n    \"frase\",\n    \"fraude\",\n    \"freír\",\n    \"freno\",\n    \"fresa\",\n    \"frío\",\n    \"frito\",\n    \"fruta\",\n    \"fuego\",\n    \"fuente\",\n    \"fuerza\",\n    \"fuga\",\n    \"fumar\",\n    \"función\",\n    \"funda\",\n    \"furgón\",\n    \"furia\",\n    \"fusil\",\n    \"fútbol\",\n    \"futuro\",\n    \"gacela\",\n    \"gafas\",\n    \"gaita\",\n    \"gajo\",\n    \"gala\",\n    \"galería\",\n    \"gallo\",\n    \"gamba\",\n    \"ganar\",\n    \"gancho\",\n    \"ganga\",\n    \"ganso\",\n    \"garaje\",\n    \"garza\",\n    \"gasolina\",\n    \"gastar\",\n    \"gato\",\n    \"gavilán\",\n    \"gemelo\",\n    \"gemir\",\n    \"gen\",\n    \"género\",\n    \"genio\",\n    \"gente\",\n    \"geranio\",\n    \"gerente\",\n    \"germen\",\n    \"gesto\",\n    \"gigante\",\n    \"gimnasio\",\n    \"girar\",\n    \"giro\",\n    \"glaciar\",\n    \"globo\",\n    \"gloria\",\n    \"gol\",\n    \"golfo\",\n    \"goloso\",\n    \"golpe\",\n    \"goma\",\n    \"gordo\",\n    \"gorila\",\n    \"gorra\",\n    \"gota\",\n    \"goteo\",\n    \"gozar\",\n    \"grada\",\n    \"gráfico\",\n    \"grano\",\n    \"grasa\",\n    \"gratis\",\n    \"grave\",\n    \"grieta\",\n    \"grillo\",\n    \"gripe\",\n    \"gris\",\n    \"grito\",\n    \"grosor\",\n    \"grúa\",\n    \"grueso\",\n    \"grumo\",\n    \"grupo\",\n    \"guante\",\n    \"guapo\",\n    \"guardia\",\n    \"guerra\",\n    \"guía\",\n    \"guiño\",\n    \"guion\",\n    \"guiso\",\n    \"guitarra\",\n    \"gusano\",\n    \"gustar\",\n    \"haber\",\n    \"hábil\",\n    \"hablar\",\n    \"hacer\",\n    \"hacha\",\n    \"hada\",\n    \"hallar\",\n    \"hamaca\",\n    \"harina\",\n    \"haz\",\n    \"hazaña\",\n    \"hebilla\",\n    \"hebra\",\n    \"hecho\",\n    \"helado\",\n    \"helio\",\n    \"hembra\",\n    \"herir\",\n    \"hermano\",\n    \"héroe\",\n    \"hervir\",\n    \"hielo\",\n    \"hierro\",\n    \"hígado\",\n    \"higiene\",\n    \"hijo\",\n    \"himno\",\n    \"historia\",\n    \"hocico\",\n    \"hogar\",\n    \"hoguera\",\n    \"hoja\",\n    \"hombre\",\n    \"hongo\",\n    \"honor\",\n    \"honra\",\n    \"hora\",\n    \"hormiga\",\n    \"horno\",\n    \"hostil\",\n    \"hoyo\",\n    \"hueco\",\n    \"huelga\",\n    \"huerta\",\n    \"hueso\",\n    \"huevo\",\n    \"huida\",\n    \"huir\",\n    \"humano\",\n    \"húmedo\",\n    \"humilde\",\n    \"humo\",\n    \"hundir\",\n    \"huracán\",\n    \"hurto\",\n    \"icono\",\n    \"ideal\",\n    \"idioma\",\n    \"ídolo\",\n    \"iglesia\",\n    \"iglú\",\n    \"igual\",\n    \"ilegal\",\n    \"ilusión\",\n    \"imagen\",\n    \"imán\",\n    \"imitar\",\n    \"impar\",\n    \"imperio\",\n    \"imponer\",\n    \"impulso\",\n    \"incapaz\",\n    \"índice\",\n    \"inerte\",\n    \"infiel\",\n    \"informe\",\n    \"ingenio\",\n    \"inicio\",\n    \"inmenso\",\n    \"inmune\",\n    \"innato\",\n    \"insecto\",\n    \"instante\",\n    \"interés\",\n    \"íntimo\",\n    \"intuir\",\n    \"inútil\",\n    \"invierno\",\n    \"ira\",\n    \"iris\",\n    \"ironía\",\n    \"isla\",\n    \"islote\",\n    \"jabalí\",\n    \"jabón\",\n    \"jamón\",\n    \"jarabe\",\n    \"jardín\",\n    \"jarra\",\n    \"jaula\",\n    \"jazmín\",\n    \"jefe\",\n    \"jeringa\",\n    \"jinete\",\n    \"jornada\",\n    \"joroba\",\n    \"joven\",\n    \"joya\",\n    \"juerga\",\n    \"jueves\",\n    \"juez\",\n    \"jugador\",\n    \"jugo\",\n    \"juguete\",\n    \"juicio\",\n    \"junco\",\n    \"jungla\",\n    \"junio\",\n    \"juntar\",\n    \"júpiter\",\n    \"jurar\",\n    \"justo\",\n    \"juvenil\",\n    \"juzgar\",\n    \"kilo\",\n    \"koala\",\n    \"labio\",\n    \"lacio\",\n    \"lacra\",\n    \"lado\",\n    \"ladrón\",\n    \"lagarto\",\n    \"lágrima\",\n    \"laguna\",\n    \"laico\",\n    \"lamer\",\n    \"lámina\",\n    \"lámpara\",\n    \"lana\",\n    \"lancha\",\n    \"langosta\",\n    \"lanza\",\n    \"lápiz\",\n    \"largo\",\n    \"larva\",\n    \"lástima\",\n    \"lata\",\n    \"látex\",\n    \"latir\",\n    \"laurel\",\n    \"lavar\",\n    \"lazo\",\n    \"leal\",\n    \"lección\",\n    \"leche\",\n    \"lector\",\n    \"leer\",\n    \"legión\",\n    \"legumbre\",\n    \"lejano\",\n    \"lengua\",\n    \"lento\",\n    \"leña\",\n    \"león\",\n    \"leopardo\",\n    \"lesión\",\n    \"letal\",\n    \"letra\",\n    \"leve\",\n    \"leyenda\",\n    \"libertad\",\n    \"libro\",\n    \"licor\",\n    \"líder\",\n    \"lidiar\",\n    \"lienzo\",\n    \"liga\",\n    \"ligero\",\n    \"lima\",\n    \"límite\",\n    \"limón\",\n    \"limpio\",\n    \"lince\",\n    \"lindo\",\n    \"línea\",\n    \"lingote\",\n    \"lino\",\n    \"linterna\",\n    \"líquido\",\n    \"liso\",\n    \"lista\",\n    \"litera\",\n    \"litio\",\n    \"litro\",\n    \"llaga\",\n    \"llama\",\n    \"llanto\",\n    \"llave\",\n    \"llegar\",\n    \"llenar\",\n    \"llevar\",\n    \"llorar\",\n    \"llover\",\n    \"lluvia\",\n    \"lobo\",\n    \"loción\",\n    \"loco\",\n    \"locura\",\n    \"lógica\",\n    \"logro\",\n    \"lombriz\",\n    \"lomo\",\n    \"lonja\",\n    \"lote\",\n    \"lucha\",\n    \"lucir\",\n    \"lugar\",\n    \"lujo\",\n    \"luna\",\n    \"lunes\",\n    \"lupa\",\n    \"lustro\",\n    \"luto\",\n    \"luz\",\n    \"maceta\",\n    \"macho\",\n    \"madera\",\n    \"madre\",\n    \"maduro\",\n    \"maestro\",\n    \"mafia\",\n    \"magia\",\n    \"mago\",\n    \"maíz\",\n    \"maldad\",\n    \"maleta\",\n    \"malla\",\n    \"malo\",\n    \"mamá\",\n    \"mambo\",\n    \"mamut\",\n    \"manco\",\n    \"mando\",\n    \"manejar\",\n    \"manga\",\n    \"maniquí\",\n    \"manjar\",\n    \"mano\",\n    \"manso\",\n    \"manta\",\n    \"mañana\",\n    \"mapa\",\n    \"máquina\",\n    \"mar\",\n    \"marco\",\n    \"marea\",\n    \"marfil\",\n    \"margen\",\n    \"marido\",\n    \"mármol\",\n    \"marrón\",\n    \"martes\",\n    \"marzo\",\n    \"masa\",\n    \"máscara\",\n    \"masivo\",\n    \"matar\",\n    \"materia\",\n    \"matiz\",\n    \"matriz\",\n    \"máximo\",\n    \"mayor\",\n    \"mazorca\",\n    \"mecha\",\n    \"medalla\",\n    \"medio\",\n    \"médula\",\n    \"mejilla\",\n    \"mejor\",\n    \"melena\",\n    \"melón\",\n    \"memoria\",\n    \"menor\",\n    \"mensaje\",\n    \"mente\",\n    \"menú\",\n    \"mercado\",\n    \"merengue\",\n    \"mérito\",\n    \"mes\",\n    \"mesón\",\n    \"meta\",\n    \"meter\",\n    \"método\",\n    \"metro\",\n    \"mezcla\",\n    \"miedo\",\n    \"miel\",\n    \"miembro\",\n    \"miga\",\n    \"mil\",\n    \"milagro\",\n    \"militar\",\n    \"millón\",\n    \"mimo\",\n    \"mina\",\n    \"minero\",\n    \"mínimo\",\n    \"minuto\",\n    \"miope\",\n    \"mirar\",\n    \"misa\",\n    \"miseria\",\n    \"misil\",\n    \"mismo\",\n    \"mitad\",\n    \"mito\",\n    \"mochila\",\n    \"moción\",\n    \"moda\",\n    \"modelo\",\n    \"moho\",\n    \"mojar\",\n    \"molde\",\n    \"moler\",\n    \"molino\",\n    \"momento\",\n    \"momia\",\n    \"monarca\",\n    \"moneda\",\n    \"monja\",\n    \"monto\",\n    \"moño\",\n    \"morada\",\n    \"morder\",\n    \"moreno\",\n    \"morir\",\n    \"morro\",\n    \"morsa\",\n    \"mortal\",\n    \"mosca\",\n    \"mostrar\",\n    \"motivo\",\n    \"mover\",\n    \"móvil\",\n    \"mozo\",\n    \"mucho\",\n    \"mudar\",\n    \"mueble\",\n    \"muela\",\n    \"muerte\",\n    \"muestra\",\n    \"mugre\",\n    \"mujer\",\n    \"mula\",\n    \"muleta\",\n    \"multa\",\n    \"mundo\",\n    \"muñeca\",\n    \"mural\",\n    \"muro\",\n    \"músculo\",\n    \"museo\",\n    \"musgo\",\n    \"música\",\n    \"muslo\",\n    \"nácar\",\n    \"nación\",\n    \"nadar\",\n    \"naipe\",\n    \"naranja\",\n    \"nariz\",\n    \"narrar\",\n    \"nasal\",\n    \"natal\",\n    \"nativo\",\n    \"natural\",\n    \"náusea\",\n    \"naval\",\n    \"nave\",\n    \"navidad\",\n    \"necio\",\n    \"néctar\",\n    \"negar\",\n    \"negocio\",\n    \"negro\",\n    \"neón\",\n    \"nervio\",\n    \"neto\",\n    \"neutro\",\n    \"nevar\",\n    \"nevera\",\n    \"nicho\",\n    \"nido\",\n    \"niebla\",\n    \"nieto\",\n    \"niñez\",\n    \"niño\",\n    \"nítido\",\n    \"nivel\",\n    \"nobleza\",\n    \"noche\",\n    \"nómina\",\n    \"noria\",\n    \"norma\",\n    \"norte\",\n    \"nota\",\n    \"noticia\",\n    \"novato\",\n    \"novela\",\n    \"novio\",\n    \"nube\",\n    \"nuca\",\n    \"núcleo\",\n    \"nudillo\",\n    \"nudo\",\n    \"nuera\",\n    \"nueve\",\n    \"nuez\",\n    \"nulo\",\n    \"número\",\n    \"nutria\",\n    \"oasis\",\n    \"obeso\",\n    \"obispo\",\n    \"objeto\",\n    \"obra\",\n    \"obrero\",\n    \"observar\",\n    \"obtener\",\n    \"obvio\",\n    \"oca\",\n    \"ocaso\",\n    \"océano\",\n    \"ochenta\",\n    \"ocho\",\n    \"ocio\",\n    \"ocre\",\n    \"octavo\",\n    \"octubre\",\n    \"oculto\",\n    \"ocupar\",\n    \"ocurrir\",\n    \"odiar\",\n    \"odio\",\n    \"odisea\",\n    \"oeste\",\n    \"ofensa\",\n    \"oferta\",\n    \"oficio\",\n    \"ofrecer\",\n    \"ogro\",\n    \"oído\",\n    \"oír\",\n    \"ojo\",\n    \"ola\",\n    \"oleada\",\n    \"olfato\",\n    \"olivo\",\n    \"olla\",\n    \"olmo\",\n    \"olor\",\n    \"olvido\",\n    \"ombligo\",\n    \"onda\",\n    \"onza\",\n    \"opaco\",\n    \"opción\",\n    \"ópera\",\n    \"opinar\",\n    \"oponer\",\n    \"optar\",\n    \"óptica\",\n    \"opuesto\",\n    \"oración\",\n    \"orador\",\n    \"oral\",\n    \"órbita\",\n    \"orca\",\n    \"orden\",\n    \"oreja\",\n    \"órgano\",\n    \"orgía\",\n    \"orgullo\",\n    \"oriente\",\n    \"origen\",\n    \"orilla\",\n    \"oro\",\n    \"orquesta\",\n    \"oruga\",\n    \"osadía\",\n    \"oscuro\",\n    \"osezno\",\n    \"oso\",\n    \"ostra\",\n    \"otoño\",\n    \"otro\",\n    \"oveja\",\n    \"óvulo\",\n    \"óxido\",\n    \"oxígeno\",\n    \"oyente\",\n    \"ozono\",\n    \"pacto\",\n    \"padre\",\n    \"paella\",\n    \"página\",\n    \"pago\",\n    \"país\",\n    \"pájaro\",\n    \"palabra\",\n    \"palco\",\n    \"paleta\",\n    \"pálido\",\n    \"palma\",\n    \"paloma\",\n    \"palpar\",\n    \"pan\",\n    \"panal\",\n    \"pánico\",\n    \"pantera\",\n    \"pañuelo\",\n    \"papá\",\n    \"papel\",\n    \"papilla\",\n    \"paquete\",\n    \"parar\",\n    \"parcela\",\n    \"pared\",\n    \"parir\",\n    \"paro\",\n    \"párpado\",\n    \"parque\",\n    \"párrafo\",\n    \"parte\",\n    \"pasar\",\n    \"paseo\",\n    \"pasión\",\n    \"paso\",\n    \"pasta\",\n    \"pata\",\n    \"patio\",\n    \"patria\",\n    \"pausa\",\n    \"pauta\",\n    \"pavo\",\n    \"payaso\",\n    \"peatón\",\n    \"pecado\",\n    \"pecera\",\n    \"pecho\",\n    \"pedal\",\n    \"pedir\",\n    \"pegar\",\n    \"peine\",\n    \"pelar\",\n    \"peldaño\",\n    \"pelea\",\n    \"peligro\",\n    \"pellejo\",\n    \"pelo\",\n    \"peluca\",\n    \"pena\",\n    \"pensar\",\n    \"peñón\",\n    \"peón\",\n    \"peor\",\n    \"pepino\",\n    \"pequeño\",\n    \"pera\",\n    \"percha\",\n    \"perder\",\n    \"pereza\",\n    \"perfil\",\n    \"perico\",\n    \"perla\",\n    \"permiso\",\n    \"perro\",\n    \"persona\",\n    \"pesa\",\n    \"pesca\",\n    \"pésimo\",\n    \"pestaña\",\n    \"pétalo\",\n    \"petróleo\",\n    \"pez\",\n    \"pezuña\",\n    \"picar\",\n    \"pichón\",\n    \"pie\",\n    \"piedra\",\n    \"pierna\",\n    \"pieza\",\n    \"pijama\",\n    \"pilar\",\n    \"piloto\",\n    \"pimienta\",\n    \"pino\",\n    \"pintor\",\n    \"pinza\",\n    \"piña\",\n    \"piojo\",\n    \"pipa\",\n    \"pirata\",\n    \"pisar\",\n    \"piscina\",\n    \"piso\",\n    \"pista\",\n    \"pitón\",\n    \"pizca\",\n    \"placa\",\n    \"plan\",\n    \"plata\",\n    \"playa\",\n    \"plaza\",\n    \"pleito\",\n    \"pleno\",\n    \"plomo\",\n    \"pluma\",\n    \"plural\",\n    \"pobre\",\n    \"poco\",\n    \"poder\",\n    \"podio\",\n    \"poema\",\n    \"poesía\",\n    \"poeta\",\n    \"polen\",\n    \"policía\",\n    \"pollo\",\n    \"polvo\",\n    \"pomada\",\n    \"pomelo\",\n    \"pomo\",\n    \"pompa\",\n    \"poner\",\n    \"porción\",\n    \"portal\",\n    \"posada\",\n    \"poseer\",\n    \"posible\",\n    \"poste\",\n    \"potencia\",\n    \"potro\",\n    \"pozo\",\n    \"prado\",\n    \"precoz\",\n    \"pregunta\",\n    \"premio\",\n    \"prensa\",\n    \"preso\",\n    \"previo\",\n    \"primo\",\n    \"príncipe\",\n    \"prisión\",\n    \"privar\",\n    \"proa\",\n    \"probar\",\n    \"proceso\",\n    \"producto\",\n    \"proeza\",\n    \"profesor\",\n    \"programa\",\n    \"prole\",\n    \"promesa\",\n    \"pronto\",\n    \"propio\",\n    \"próximo\",\n    \"prueba\",\n    \"público\",\n    \"puchero\",\n    \"pudor\",\n    \"pueblo\",\n    \"puerta\",\n    \"puesto\",\n    \"pulga\",\n    \"pulir\",\n    \"pulmón\",\n    \"pulpo\",\n    \"pulso\",\n    \"puma\",\n    \"punto\",\n    \"puñal\",\n    \"puño\",\n    \"pupa\",\n    \"pupila\",\n    \"puré\",\n    \"quedar\",\n    \"queja\",\n    \"quemar\",\n    \"querer\",\n    \"queso\",\n    \"quieto\",\n    \"química\",\n    \"quince\",\n    \"quitar\",\n    \"rábano\",\n    \"rabia\",\n    \"rabo\",\n    \"ración\",\n    \"radical\",\n    \"raíz\",\n    \"rama\",\n    \"rampa\",\n    \"rancho\",\n    \"rango\",\n    \"rapaz\",\n    \"rápido\",\n    \"rapto\",\n    \"rasgo\",\n    \"raspa\",\n    \"rato\",\n    \"rayo\",\n    \"raza\",\n    \"razón\",\n    \"reacción\",\n    \"realidad\",\n    \"rebaño\",\n    \"rebote\",\n    \"recaer\",\n    \"receta\",\n    \"rechazo\",\n    \"recoger\",\n    \"recreo\",\n    \"recto\",\n    \"recurso\",\n    \"red\",\n    \"redondo\",\n    \"reducir\",\n    \"reflejo\",\n    \"reforma\",\n    \"refrán\",\n    \"refugio\",\n    \"regalo\",\n    \"regir\",\n    \"regla\",\n    \"regreso\",\n    \"rehén\",\n    \"reino\",\n    \"reír\",\n    \"reja\",\n    \"relato\",\n    \"relevo\",\n    \"relieve\",\n    \"relleno\",\n    \"reloj\",\n    \"remar\",\n    \"remedio\",\n    \"remo\",\n    \"rencor\",\n    \"rendir\",\n    \"renta\",\n    \"reparto\",\n    \"repetir\",\n    \"reposo\",\n    \"reptil\",\n    \"res\",\n    \"rescate\",\n    \"resina\",\n    \"respeto\",\n    \"resto\",\n    \"resumen\",\n    \"retiro\",\n    \"retorno\",\n    \"retrato\",\n    \"reunir\",\n    \"revés\",\n    \"revista\",\n    \"rey\",\n    \"rezar\",\n    \"rico\",\n    \"riego\",\n    \"rienda\",\n    \"riesgo\",\n    \"rifa\",\n    \"rígido\",\n    \"rigor\",\n    \"rincón\",\n    \"riñón\",\n    \"río\",\n    \"riqueza\",\n    \"risa\",\n    \"ritmo\",\n    \"rito\",\n    \"rizo\",\n    \"roble\",\n    \"roce\",\n    \"rociar\",\n    \"rodar\",\n    \"rodeo\",\n    \"rodilla\",\n    \"roer\",\n    \"rojizo\",\n    \"rojo\",\n    \"romero\",\n    \"romper\",\n    \"ron\",\n    \"ronco\",\n    \"ronda\",\n    \"ropa\",\n    \"ropero\",\n    \"rosa\",\n    \"rosca\",\n    \"rostro\",\n    \"rotar\",\n    \"rubí\",\n    \"rubor\",\n    \"rudo\",\n    \"rueda\",\n    \"rugir\",\n    \"ruido\",\n    \"ruina\",\n    \"ruleta\",\n    \"rulo\",\n    \"rumbo\",\n    \"rumor\",\n    \"ruptura\",\n    \"ruta\",\n    \"rutina\",\n    \"sábado\",\n    \"saber\",\n    \"sabio\",\n    \"sable\",\n    \"sacar\",\n    \"sagaz\",\n    \"sagrado\",\n    \"sala\",\n    \"saldo\",\n    \"salero\",\n    \"salir\",\n    \"salmón\",\n    \"salón\",\n    \"salsa\",\n    \"salto\",\n    \"salud\",\n    \"salvar\",\n    \"samba\",\n    \"sanción\",\n    \"sandía\",\n    \"sanear\",\n    \"sangre\",\n    \"sanidad\",\n    \"sano\",\n    \"santo\",\n    \"sapo\",\n    \"saque\",\n    \"sardina\",\n    \"sartén\",\n    \"sastre\",\n    \"satán\",\n    \"sauna\",\n    \"saxofón\",\n    \"sección\",\n    \"seco\",\n    \"secreto\",\n    \"secta\",\n    \"sed\",\n    \"seguir\",\n    \"seis\",\n    \"sello\",\n    \"selva\",\n    \"semana\",\n    \"semilla\",\n    \"senda\",\n    \"sensor\",\n    \"señal\",\n    \"señor\",\n    \"separar\",\n    \"sepia\",\n    \"sequía\",\n    \"ser\",\n    \"serie\",\n    \"sermón\",\n    \"servir\",\n    \"sesenta\",\n    \"sesión\",\n    \"seta\",\n    \"setenta\",\n    \"severo\",\n    \"sexo\",\n    \"sexto\",\n    \"sidra\",\n    \"siesta\",\n    \"siete\",\n    \"siglo\",\n    \"signo\",\n    \"sílaba\",\n    \"silbar\",\n    \"silencio\",\n    \"silla\",\n    \"símbolo\",\n    \"simio\",\n    \"sirena\",\n    \"sistema\",\n    \"sitio\",\n    \"situar\",\n    \"sobre\",\n    \"socio\",\n    \"sodio\",\n    \"sol\",\n    \"solapa\",\n    \"soldado\",\n    \"soledad\",\n    \"sólido\",\n    \"soltar\",\n    \"solución\",\n    \"sombra\",\n    \"sondeo\",\n    \"sonido\",\n    \"sonoro\",\n    \"sonrisa\",\n    \"sopa\",\n    \"soplar\",\n    \"soporte\",\n    \"sordo\",\n    \"sorpresa\",\n    \"sorteo\",\n    \"sostén\",\n    \"sótano\",\n    \"suave\",\n    \"subir\",\n    \"suceso\",\n    \"sudor\",\n    \"suegra\",\n    \"suelo\",\n    \"sueño\",\n    \"suerte\",\n    \"sufrir\",\n    \"sujeto\",\n    \"sultán\",\n    \"sumar\",\n    \"superar\",\n    \"suplir\",\n    \"suponer\",\n    \"supremo\",\n    \"sur\",\n    \"surco\",\n    \"sureño\",\n    \"surgir\",\n    \"susto\",\n    \"sutil\",\n    \"tabaco\",\n    \"tabique\",\n    \"tabla\",\n    \"tabú\",\n    \"taco\",\n    \"tacto\",\n    \"tajo\",\n    \"talar\",\n    \"talco\",\n    \"talento\",\n    \"talla\",\n    \"talón\",\n    \"tamaño\",\n    \"tambor\",\n    \"tango\",\n    \"tanque\",\n    \"tapa\",\n    \"tapete\",\n    \"tapia\",\n    \"tapón\",\n    \"taquilla\",\n    \"tarde\",\n    \"tarea\",\n    \"tarifa\",\n    \"tarjeta\",\n    \"tarot\",\n    \"tarro\",\n    \"tarta\",\n    \"tatuaje\",\n    \"tauro\",\n    \"taza\",\n    \"tazón\",\n    \"teatro\",\n    \"techo\",\n    \"tecla\",\n    \"técnica\",\n    \"tejado\",\n    \"tejer\",\n    \"tejido\",\n    \"tela\",\n    \"teléfono\",\n    \"tema\",\n    \"temor\",\n    \"templo\",\n    \"tenaz\",\n    \"tender\",\n    \"tener\",\n    \"tenis\",\n    \"tenso\",\n    \"teoría\",\n    \"terapia\",\n    \"terco\",\n    \"término\",\n    \"ternura\",\n    \"terror\",\n    \"tesis\",\n    \"tesoro\",\n    \"testigo\",\n    \"tetera\",\n    \"texto\",\n    \"tez\",\n    \"tibio\",\n    \"tiburón\",\n    \"tiempo\",\n    \"tienda\",\n    \"tierra\",\n    \"tieso\",\n    \"tigre\",\n    \"tijera\",\n    \"tilde\",\n    \"timbre\",\n    \"tímido\",\n    \"timo\",\n    \"tinta\",\n    \"tío\",\n    \"típico\",\n    \"tipo\",\n    \"tira\",\n    \"tirón\",\n    \"titán\",\n    \"títere\",\n    \"título\",\n    \"tiza\",\n    \"toalla\",\n    \"tobillo\",\n    \"tocar\",\n    \"tocino\",\n    \"todo\",\n    \"toga\",\n    \"toldo\",\n    \"tomar\",\n    \"tono\",\n    \"tonto\",\n    \"topar\",\n    \"tope\",\n    \"toque\",\n    \"tórax\",\n    \"torero\",\n    \"tormenta\",\n    \"torneo\",\n    \"toro\",\n    \"torpedo\",\n    \"torre\",\n    \"torso\",\n    \"tortuga\",\n    \"tos\",\n    \"tosco\",\n    \"toser\",\n    \"tóxico\",\n    \"trabajo\",\n    \"tractor\",\n    \"traer\",\n    \"tráfico\",\n    \"trago\",\n    \"traje\",\n    \"tramo\",\n    \"trance\",\n    \"trato\",\n    \"trauma\",\n    \"trazar\",\n    \"trébol\",\n    \"tregua\",\n    \"treinta\",\n    \"tren\",\n    \"trepar\",\n    \"tres\",\n    \"tribu\",\n    \"trigo\",\n    \"tripa\",\n    \"triste\",\n    \"triunfo\",\n    \"trofeo\",\n    \"trompa\",\n    \"tronco\",\n    \"tropa\",\n    \"trote\",\n    \"trozo\",\n    \"truco\",\n    \"trueno\",\n    \"trufa\",\n    \"tubería\",\n    \"tubo\",\n    \"tuerto\",\n    \"tumba\",\n    \"tumor\",\n    \"túnel\",\n    \"túnica\",\n    \"turbina\",\n    \"turismo\",\n    \"turno\",\n    \"tutor\",\n    \"ubicar\",\n    \"úlcera\",\n    \"umbral\",\n    \"unidad\",\n    \"unir\",\n    \"universo\",\n    \"uno\",\n    \"untar\",\n    \"uña\",\n    \"urbano\",\n    \"urbe\",\n    \"urgente\",\n    \"urna\",\n    \"usar\",\n    \"usuario\",\n    \"útil\",\n    \"utopía\",\n    \"uva\",\n    \"vaca\",\n    \"vacío\",\n    \"vacuna\",\n    \"vagar\",\n    \"vago\",\n    \"vaina\",\n    \"vajilla\",\n    \"vale\",\n    \"válido\",\n    \"valle\",\n    \"valor\",\n    \"válvula\",\n    \"vampiro\",\n    \"vara\",\n    \"variar\",\n    \"varón\",\n    \"vaso\",\n    \"vecino\",\n    \"vector\",\n    \"vehículo\",\n    \"veinte\",\n    \"vejez\",\n    \"vela\",\n    \"velero\",\n    \"veloz\",\n    \"vena\",\n    \"vencer\",\n    \"venda\",\n    \"veneno\",\n    \"vengar\",\n    \"venir\",\n    \"venta\",\n    \"venus\",\n    \"ver\",\n    \"verano\",\n    \"verbo\",\n    \"verde\",\n    \"vereda\",\n    \"verja\",\n    \"verso\",\n    \"verter\",\n    \"vía\",\n    \"viaje\",\n    \"vibrar\",\n    \"vicio\",\n    \"víctima\",\n    \"vida\",\n    \"vídeo\",\n    \"vidrio\",\n    \"viejo\",\n    \"viernes\",\n    \"vigor\",\n    \"vil\",\n    \"villa\",\n    \"vinagre\",\n    \"vino\",\n    \"viñedo\",\n    \"violín\",\n    \"viral\",\n    \"virgo\",\n    \"virtud\",\n    \"visor\",\n    \"víspera\",\n    \"vista\",\n    \"vitamina\",\n    \"viudo\",\n    \"vivaz\",\n    \"vivero\",\n    \"vivir\",\n    \"vivo\",\n    \"volcán\",\n    \"volumen\",\n    \"volver\",\n    \"voraz\",\n    \"votar\",\n    \"voto\",\n    \"voz\",\n    \"vuelo\",\n    \"vulgar\",\n    \"yacer\",\n    \"yate\",\n    \"yegua\",\n    \"yema\",\n    \"yerno\",\n    \"yeso\",\n    \"yodo\",\n    \"yoga\",\n    \"yogur\",\n    \"zafiro\",\n    \"zanja\",\n    \"zapato\",\n    \"zarza\",\n    \"zona\",\n    \"zorro\",\n    \"zumo\",\n    \"zurdo\"\n]\n","module.exports=[\n    \"的\",\n    \"一\",\n    \"是\",\n    \"在\",\n    \"不\",\n    \"了\",\n    \"有\",\n    \"和\",\n    \"人\",\n    \"這\",\n    \"中\",\n    \"大\",\n    \"為\",\n    \"上\",\n    \"個\",\n    \"國\",\n    \"我\",\n    \"以\",\n    \"要\",\n    \"他\",\n    \"時\",\n    \"來\",\n    \"用\",\n    \"們\",\n    \"生\",\n    \"到\",\n    \"作\",\n    \"地\",\n    \"於\",\n    \"出\",\n    \"就\",\n    \"分\",\n    \"對\",\n    \"成\",\n    \"會\",\n    \"可\",\n    \"主\",\n    \"發\",\n    \"年\",\n    \"動\",\n    \"同\",\n    \"工\",\n    \"也\",\n    \"能\",\n    \"下\",\n    \"過\",\n    \"子\",\n    \"說\",\n    \"產\",\n    \"種\",\n    \"面\",\n    \"而\",\n    \"方\",\n    \"後\",\n    \"多\",\n    \"定\",\n    \"行\",\n    \"學\",\n    \"法\",\n    \"所\",\n    \"民\",\n    \"得\",\n    \"經\",\n    \"十\",\n    \"三\",\n    \"之\",\n    \"進\",\n    \"著\",\n    \"等\",\n    \"部\",\n    \"度\",\n    \"家\",\n    \"電\",\n    \"力\",\n    \"裡\",\n    \"如\",\n    \"水\",\n    \"化\",\n    \"高\",\n    \"自\",\n    \"二\",\n    \"理\",\n    \"起\",\n    \"小\",\n    \"物\",\n    \"現\",\n    \"實\",\n    \"加\",\n    \"量\",\n    \"都\",\n    \"兩\",\n    \"體\",\n    \"制\",\n    \"機\",\n    \"當\",\n    \"使\",\n    \"點\",\n    \"從\",\n    \"業\",\n    \"本\",\n    \"去\",\n    \"把\",\n    \"性\",\n    \"好\",\n    \"應\",\n    \"開\",\n    \"它\",\n    \"合\",\n    \"還\",\n    \"因\",\n    \"由\",\n    \"其\",\n    \"些\",\n    \"然\",\n    \"前\",\n    \"外\",\n    \"天\",\n    \"政\",\n    \"四\",\n    \"日\",\n    \"那\",\n    \"社\",\n    \"義\",\n    \"事\",\n    \"平\",\n    \"形\",\n    \"相\",\n    \"全\",\n    \"表\",\n    \"間\",\n    \"樣\",\n    \"與\",\n    \"關\",\n    \"各\",\n    \"重\",\n    \"新\",\n    \"線\",\n    \"內\",\n    \"數\",\n    \"正\",\n    \"心\",\n    \"反\",\n    \"你\",\n    \"明\",\n    \"看\",\n    \"原\",\n    \"又\",\n    \"麼\",\n    \"利\",\n    \"比\",\n    \"或\",\n    \"但\",\n    \"質\",\n    \"氣\",\n    \"第\",\n    \"向\",\n    \"道\",\n    \"命\",\n    \"此\",\n    \"變\",\n    \"條\",\n    \"只\",\n    \"沒\",\n    \"結\",\n    \"解\",\n    \"問\",\n    \"意\",\n    \"建\",\n    \"月\",\n    \"公\",\n    \"無\",\n    \"系\",\n    \"軍\",\n    \"很\",\n    \"情\",\n    \"者\",\n    \"最\",\n    \"立\",\n    \"代\",\n    \"想\",\n    \"已\",\n    \"通\",\n    \"並\",\n    \"提\",\n    \"直\",\n    \"題\",\n    \"黨\",\n    \"程\",\n    \"展\",\n    \"五\",\n    \"果\",\n    \"料\",\n    \"象\",\n    \"員\",\n    \"革\",\n    \"位\",\n    \"入\",\n    \"常\",\n    \"文\",\n    \"總\",\n    \"次\",\n    \"品\",\n    \"式\",\n    \"活\",\n    \"設\",\n    \"及\",\n    \"管\",\n    \"特\",\n    \"件\",\n    \"長\",\n    \"求\",\n    \"老\",\n    \"頭\",\n    \"基\",\n    \"資\",\n    \"邊\",\n    \"流\",\n    \"路\",\n    \"級\",\n    \"少\",\n    \"圖\",\n    \"山\",\n    \"統\",\n    \"接\",\n    \"知\",\n    \"較\",\n    \"將\",\n    \"組\",\n    \"見\",\n    \"計\",\n    \"別\",\n    \"她\",\n    \"手\",\n    \"角\",\n    \"期\",\n    \"根\",\n    \"論\",\n    \"運\",\n    \"農\",\n    \"指\",\n    \"幾\",\n    \"九\",\n    \"區\",\n    \"強\",\n    \"放\",\n    \"決\",\n    \"西\",\n    \"被\",\n    \"幹\",\n    \"做\",\n    \"必\",\n    \"戰\",\n    \"先\",\n    \"回\",\n    \"則\",\n    \"任\",\n    \"取\",\n    \"據\",\n    \"處\",\n    \"隊\",\n    \"南\",\n    \"給\",\n    \"色\",\n    \"光\",\n    \"門\",\n    \"即\",\n    \"保\",\n    \"治\",\n    \"北\",\n    \"造\",\n    \"百\",\n    \"規\",\n    \"熱\",\n    \"領\",\n    \"七\",\n    \"海\",\n    \"口\",\n    \"東\",\n    \"導\",\n    \"器\",\n    \"壓\",\n    \"志\",\n    \"世\",\n    \"金\",\n    \"增\",\n    \"爭\",\n    \"濟\",\n    \"階\",\n    \"油\",\n    \"思\",\n    \"術\",\n    \"極\",\n    \"交\",\n    \"受\",\n    \"聯\",\n    \"什\",\n    \"認\",\n    \"六\",\n    \"共\",\n    \"權\",\n    \"收\",\n    \"證\",\n    \"改\",\n    \"清\",\n    \"美\",\n    \"再\",\n    \"採\",\n    \"轉\",\n    \"更\",\n    \"單\",\n    \"風\",\n    \"切\",\n    \"打\",\n    \"白\",\n    \"教\",\n    \"速\",\n    \"花\",\n    \"帶\",\n    \"安\",\n    \"場\",\n    \"身\",\n    \"車\",\n    \"例\",\n    \"真\",\n    \"務\",\n    \"具\",\n    \"萬\",\n    \"每\",\n    \"目\",\n    \"至\",\n    \"達\",\n    \"走\",\n    \"積\",\n    \"示\",\n    \"議\",\n    \"聲\",\n    \"報\",\n    \"鬥\",\n    \"完\",\n    \"類\",\n    \"八\",\n    \"離\",\n    \"華\",\n    \"名\",\n    \"確\",\n    \"才\",\n    \"科\",\n    \"張\",\n    \"信\",\n    \"馬\",\n    \"節\",\n    \"話\",\n    \"米\",\n    \"整\",\n    \"空\",\n    \"元\",\n    \"況\",\n    \"今\",\n    \"集\",\n    \"溫\",\n    \"傳\",\n    \"土\",\n    \"許\",\n    \"步\",\n    \"群\",\n    \"廣\",\n    \"石\",\n    \"記\",\n    \"需\",\n    \"段\",\n    \"研\",\n    \"界\",\n    \"拉\",\n    \"林\",\n    \"律\",\n    \"叫\",\n    \"且\",\n    \"究\",\n    \"觀\",\n    \"越\",\n    \"織\",\n    \"裝\",\n    \"影\",\n    \"算\",\n    \"低\",\n    \"持\",\n    \"音\",\n    \"眾\",\n    \"書\",\n    \"布\",\n    \"复\",\n    \"容\",\n    \"兒\",\n    \"須\",\n    \"際\",\n    \"商\",\n    \"非\",\n    \"驗\",\n    \"連\",\n    \"斷\",\n    \"深\",\n    \"難\",\n    \"近\",\n    \"礦\",\n    \"千\",\n    \"週\",\n    \"委\",\n    \"素\",\n    \"技\",\n    \"備\",\n    \"半\",\n    \"辦\",\n    \"青\",\n    \"省\",\n    \"列\",\n    \"習\",\n    \"響\",\n    \"約\",\n    \"支\",\n    \"般\",\n    \"史\",\n    \"感\",\n    \"勞\",\n    \"便\",\n    \"團\",\n    \"往\",\n    \"酸\",\n    \"歷\",\n    \"市\",\n    \"克\",\n    \"何\",\n    \"除\",\n    \"消\",\n    \"構\",\n    \"府\",\n    \"稱\",\n    \"太\",\n    \"準\",\n    \"精\",\n    \"值\",\n    \"號\",\n    \"率\",\n    \"族\",\n    \"維\",\n    \"劃\",\n    \"選\",\n    \"標\",\n    \"寫\",\n    \"存\",\n    \"候\",\n    \"毛\",\n    \"親\",\n    \"快\",\n    \"效\",\n    \"斯\",\n    \"院\",\n    \"查\",\n    \"江\",\n    \"型\",\n    \"眼\",\n    \"王\",\n    \"按\",\n    \"格\",\n    \"養\",\n    \"易\",\n    \"置\",\n    \"派\",\n    \"層\",\n    \"片\",\n    \"始\",\n    \"卻\",\n    \"專\",\n    \"狀\",\n    \"育\",\n    \"廠\",\n    \"京\",\n    \"識\",\n    \"適\",\n    \"屬\",\n    \"圓\",\n    \"包\",\n    \"火\",\n    \"住\",\n    \"調\",\n    \"滿\",\n    \"縣\",\n    \"局\",\n    \"照\",\n    \"參\",\n    \"紅\",\n    \"細\",\n    \"引\",\n    \"聽\",\n    \"該\",\n    \"鐵\",\n    \"價\",\n    \"嚴\",\n    \"首\",\n    \"底\",\n    \"液\",\n    \"官\",\n    \"德\",\n    \"隨\",\n    \"病\",\n    \"蘇\",\n    \"失\",\n    \"爾\",\n    \"死\",\n    \"講\",\n    \"配\",\n    \"女\",\n    \"黃\",\n    \"推\",\n    \"顯\",\n    \"談\",\n    \"罪\",\n    \"神\",\n    \"藝\",\n    \"呢\",\n    \"席\",\n    \"含\",\n    \"企\",\n    \"望\",\n    \"密\",\n    \"批\",\n    \"營\",\n    \"項\",\n    \"防\",\n    \"舉\",\n    \"球\",\n    \"英\",\n    \"氧\",\n    \"勢\",\n    \"告\",\n    \"李\",\n    \"台\",\n    \"落\",\n    \"木\",\n    \"幫\",\n    \"輪\",\n    \"破\",\n    \"亞\",\n    \"師\",\n    \"圍\",\n    \"注\",\n    \"遠\",\n    \"字\",\n    \"材\",\n    \"排\",\n    \"供\",\n    \"河\",\n    \"態\",\n    \"封\",\n    \"另\",\n    \"施\",\n    \"減\",\n    \"樹\",\n    \"溶\",\n    \"怎\",\n    \"止\",\n    \"案\",\n    \"言\",\n    \"士\",\n    \"均\",\n    \"武\",\n    \"固\",\n    \"葉\",\n    \"魚\",\n    \"波\",\n    \"視\",\n    \"僅\",\n    \"費\",\n    \"緊\",\n    \"愛\",\n    \"左\",\n    \"章\",\n    \"早\",\n    \"朝\",\n    \"害\",\n    \"續\",\n    \"輕\",\n    \"服\",\n    \"試\",\n    \"食\",\n    \"充\",\n    \"兵\",\n    \"源\",\n    \"判\",\n    \"護\",\n    \"司\",\n    \"足\",\n    \"某\",\n    \"練\",\n    \"差\",\n    \"致\",\n    \"板\",\n    \"田\",\n    \"降\",\n    \"黑\",\n    \"犯\",\n    \"負\",\n    \"擊\",\n    \"范\",\n    \"繼\",\n    \"興\",\n    \"似\",\n    \"餘\",\n    \"堅\",\n    \"曲\",\n    \"輸\",\n    \"修\",\n    \"故\",\n    \"城\",\n    \"夫\",\n    \"夠\",\n    \"送\",\n    \"筆\",\n    \"船\",\n    \"佔\",\n    \"右\",\n    \"財\",\n    \"吃\",\n    \"富\",\n    \"春\",\n    \"職\",\n    \"覺\",\n    \"漢\",\n    \"畫\",\n    \"功\",\n    \"巴\",\n    \"跟\",\n    \"雖\",\n    \"雜\",\n    \"飛\",\n    \"檢\",\n    \"吸\",\n    \"助\",\n    \"昇\",\n    \"陽\",\n    \"互\",\n    \"初\",\n    \"創\",\n    \"抗\",\n    \"考\",\n    \"投\",\n    \"壞\",\n    \"策\",\n    \"古\",\n    \"徑\",\n    \"換\",\n    \"未\",\n    \"跑\",\n    \"留\",\n    \"鋼\",\n    \"曾\",\n    \"端\",\n    \"責\",\n    \"站\",\n    \"簡\",\n    \"述\",\n    \"錢\",\n    \"副\",\n    \"盡\",\n    \"帝\",\n    \"射\",\n    \"草\",\n    \"衝\",\n    \"承\",\n    \"獨\",\n    \"令\",\n    \"限\",\n    \"阿\",\n    \"宣\",\n    \"環\",\n    \"雙\",\n    \"請\",\n    \"超\",\n    \"微\",\n    \"讓\",\n    \"控\",\n    \"州\",\n    \"良\",\n    \"軸\",\n    \"找\",\n    \"否\",\n    \"紀\",\n    \"益\",\n    \"依\",\n    \"優\",\n    \"頂\",\n    \"礎\",\n    \"載\",\n    \"倒\",\n    \"房\",\n    \"突\",\n    \"坐\",\n    \"粉\",\n    \"敵\",\n    \"略\",\n    \"客\",\n    \"袁\",\n    \"冷\",\n    \"勝\",\n    \"絕\",\n    \"析\",\n    \"塊\",\n    \"劑\",\n    \"測\",\n    \"絲\",\n    \"協\",\n    \"訴\",\n    \"念\",\n    \"陳\",\n    \"仍\",\n    \"羅\",\n    \"鹽\",\n    \"友\",\n    \"洋\",\n    \"錯\",\n    \"苦\",\n    \"夜\",\n    \"刑\",\n    \"移\",\n    \"頻\",\n    \"逐\",\n    \"靠\",\n    \"混\",\n    \"母\",\n    \"短\",\n    \"皮\",\n    \"終\",\n    \"聚\",\n    \"汽\",\n    \"村\",\n    \"雲\",\n    \"哪\",\n    \"既\",\n    \"距\",\n    \"衛\",\n    \"停\",\n    \"烈\",\n    \"央\",\n    \"察\",\n    \"燒\",\n    \"迅\",\n    \"境\",\n    \"若\",\n    \"印\",\n    \"洲\",\n    \"刻\",\n    \"括\",\n    \"激\",\n    \"孔\",\n    \"搞\",\n    \"甚\",\n    \"室\",\n    \"待\",\n    \"核\",\n    \"校\",\n    \"散\",\n    \"侵\",\n    \"吧\",\n    \"甲\",\n    \"遊\",\n    \"久\",\n    \"菜\",\n    \"味\",\n    \"舊\",\n    \"模\",\n    \"湖\",\n    \"貨\",\n    \"損\",\n    \"預\",\n    \"阻\",\n    \"毫\",\n    \"普\",\n    \"穩\",\n    \"乙\",\n    \"媽\",\n    \"植\",\n    \"息\",\n    \"擴\",\n    \"銀\",\n    \"語\",\n    \"揮\",\n    \"酒\",\n    \"守\",\n    \"拿\",\n    \"序\",\n    \"紙\",\n    \"醫\",\n    \"缺\",\n    \"雨\",\n    \"嗎\",\n    \"針\",\n    \"劉\",\n    \"啊\",\n    \"急\",\n    \"唱\",\n    \"誤\",\n    \"訓\",\n    \"願\",\n    \"審\",\n    \"附\",\n    \"獲\",\n    \"茶\",\n    \"鮮\",\n    \"糧\",\n    \"斤\",\n    \"孩\",\n    \"脫\",\n    \"硫\",\n    \"肥\",\n    \"善\",\n    \"龍\",\n    \"演\",\n    \"父\",\n    \"漸\",\n    \"血\",\n    \"歡\",\n    \"械\",\n    \"掌\",\n    \"歌\",\n    \"沙\",\n    \"剛\",\n    \"攻\",\n    \"謂\",\n    \"盾\",\n    \"討\",\n    \"晚\",\n    \"粒\",\n    \"亂\",\n    \"燃\",\n    \"矛\",\n    \"乎\",\n    \"殺\",\n    \"藥\",\n    \"寧\",\n    \"魯\",\n    \"貴\",\n    \"鐘\",\n    \"煤\",\n    \"讀\",\n    \"班\",\n    \"伯\",\n    \"香\",\n    \"介\",\n    \"迫\",\n    \"句\",\n    \"豐\",\n    \"培\",\n    \"握\",\n    \"蘭\",\n    \"擔\",\n    \"弦\",\n    \"蛋\",\n    \"沉\",\n    \"假\",\n    \"穿\",\n    \"執\",\n    \"答\",\n    \"樂\",\n    \"誰\",\n    \"順\",\n    \"煙\",\n    \"縮\",\n    \"徵\",\n    \"臉\",\n    \"喜\",\n    \"松\",\n    \"腳\",\n    \"困\",\n    \"異\",\n    \"免\",\n    \"背\",\n    \"星\",\n    \"福\",\n    \"買\",\n    \"染\",\n    \"井\",\n    \"概\",\n    \"慢\",\n    \"怕\",\n    \"磁\",\n    \"倍\",\n    \"祖\",\n    \"皇\",\n    \"促\",\n    \"靜\",\n    \"補\",\n    \"評\",\n    \"翻\",\n    \"肉\",\n    \"踐\",\n    \"尼\",\n    \"衣\",\n    \"寬\",\n    \"揚\",\n    \"棉\",\n    \"希\",\n    \"傷\",\n    \"操\",\n    \"垂\",\n    \"秋\",\n    \"宜\",\n    \"氫\",\n    \"套\",\n    \"督\",\n    \"振\",\n    \"架\",\n    \"亮\",\n    \"末\",\n    \"憲\",\n    \"慶\",\n    \"編\",\n    \"牛\",\n    \"觸\",\n    \"映\",\n    \"雷\",\n    \"銷\",\n    \"詩\",\n    \"座\",\n    \"居\",\n    \"抓\",\n    \"裂\",\n    \"胞\",\n    \"呼\",\n    \"娘\",\n    \"景\",\n    \"威\",\n    \"綠\",\n    \"晶\",\n    \"厚\",\n    \"盟\",\n    \"衡\",\n    \"雞\",\n    \"孫\",\n    \"延\",\n    \"危\",\n    \"膠\",\n    \"屋\",\n    \"鄉\",\n    \"臨\",\n    \"陸\",\n    \"顧\",\n    \"掉\",\n    \"呀\",\n    \"燈\",\n    \"歲\",\n    \"措\",\n    \"束\",\n    \"耐\",\n    \"劇\",\n    \"玉\",\n    \"趙\",\n    \"跳\",\n    \"哥\",\n    \"季\",\n    \"課\",\n    \"凱\",\n    \"胡\",\n    \"額\",\n    \"款\",\n    \"紹\",\n    \"卷\",\n    \"齊\",\n    \"偉\",\n    \"蒸\",\n    \"殖\",\n    \"永\",\n    \"宗\",\n    \"苗\",\n    \"川\",\n    \"爐\",\n    \"岩\",\n    \"弱\",\n    \"零\",\n    \"楊\",\n    \"奏\",\n    \"沿\",\n    \"露\",\n    \"桿\",\n    \"探\",\n    \"滑\",\n    \"鎮\",\n    \"飯\",\n    \"濃\",\n    \"航\",\n    \"懷\",\n    \"趕\",\n    \"庫\",\n    \"奪\",\n    \"伊\",\n    \"靈\",\n    \"稅\",\n    \"途\",\n    \"滅\",\n    \"賽\",\n    \"歸\",\n    \"召\",\n    \"鼓\",\n    \"播\",\n    \"盤\",\n    \"裁\",\n    \"險\",\n    \"康\",\n    \"唯\",\n    \"錄\",\n    \"菌\",\n    \"純\",\n    \"借\",\n    \"糖\",\n    \"蓋\",\n    \"橫\",\n    \"符\",\n    \"私\",\n    \"努\",\n    \"堂\",\n    \"域\",\n    \"槍\",\n    \"潤\",\n    \"幅\",\n    \"哈\",\n    \"竟\",\n    \"熟\",\n    \"蟲\",\n    \"澤\",\n    \"腦\",\n    \"壤\",\n    \"碳\",\n    \"歐\",\n    \"遍\",\n    \"側\",\n    \"寨\",\n    \"敢\",\n    \"徹\",\n    \"慮\",\n    \"斜\",\n    \"薄\",\n    \"庭\",\n    \"納\",\n    \"彈\",\n    \"飼\",\n    \"伸\",\n    \"折\",\n    \"麥\",\n    \"濕\",\n    \"暗\",\n    \"荷\",\n    \"瓦\",\n    \"塞\",\n    \"床\",\n    \"築\",\n    \"惡\",\n    \"戶\",\n    \"訪\",\n    \"塔\",\n    \"奇\",\n    \"透\",\n    \"梁\",\n    \"刀\",\n    \"旋\",\n    \"跡\",\n    \"卡\",\n    \"氯\",\n    \"遇\",\n    \"份\",\n    \"毒\",\n    \"泥\",\n    \"退\",\n    \"洗\",\n    \"擺\",\n    \"灰\",\n    \"彩\",\n    \"賣\",\n    \"耗\",\n    \"夏\",\n    \"擇\",\n    \"忙\",\n    \"銅\",\n    \"獻\",\n    \"硬\",\n    \"予\",\n    \"繁\",\n    \"圈\",\n    \"雪\",\n    \"函\",\n    \"亦\",\n    \"抽\",\n    \"篇\",\n    \"陣\",\n    \"陰\",\n    \"丁\",\n    \"尺\",\n    \"追\",\n    \"堆\",\n    \"雄\",\n    \"迎\",\n    \"泛\",\n    \"爸\",\n    \"樓\",\n    \"避\",\n    \"謀\",\n    \"噸\",\n    \"野\",\n    \"豬\",\n    \"旗\",\n    \"累\",\n    \"偏\",\n    \"典\",\n    \"館\",\n    \"索\",\n    \"秦\",\n    \"脂\",\n    \"潮\",\n    \"爺\",\n    \"豆\",\n    \"忽\",\n    \"托\",\n    \"驚\",\n    \"塑\",\n    \"遺\",\n    \"愈\",\n    \"朱\",\n    \"替\",\n    \"纖\",\n    \"粗\",\n    \"傾\",\n    \"尚\",\n    \"痛\",\n    \"楚\",\n    \"謝\",\n    \"奮\",\n    \"購\",\n    \"磨\",\n    \"君\",\n    \"池\",\n    \"旁\",\n    \"碎\",\n    \"骨\",\n    \"監\",\n    \"捕\",\n    \"弟\",\n    \"暴\",\n    \"割\",\n    \"貫\",\n    \"殊\",\n    \"釋\",\n    \"詞\",\n    \"亡\",\n    \"壁\",\n    \"頓\",\n    \"寶\",\n    \"午\",\n    \"塵\",\n    \"聞\",\n    \"揭\",\n    \"炮\",\n    \"殘\",\n    \"冬\",\n    \"橋\",\n    \"婦\",\n    \"警\",\n    \"綜\",\n    \"招\",\n    \"吳\",\n    \"付\",\n    \"浮\",\n    \"遭\",\n    \"徐\",\n    \"您\",\n    \"搖\",\n    \"谷\",\n    \"贊\",\n    \"箱\",\n    \"隔\",\n    \"訂\",\n    \"男\",\n    \"吹\",\n    \"園\",\n    \"紛\",\n    \"唐\",\n    \"敗\",\n    \"宋\",\n    \"玻\",\n    \"巨\",\n    \"耕\",\n    \"坦\",\n    \"榮\",\n    \"閉\",\n    \"灣\",\n    \"鍵\",\n    \"凡\",\n    \"駐\",\n    \"鍋\",\n    \"救\",\n    \"恩\",\n    \"剝\",\n    \"凝\",\n    \"鹼\",\n    \"齒\",\n    \"截\",\n    \"煉\",\n    \"麻\",\n    \"紡\",\n    \"禁\",\n    \"廢\",\n    \"盛\",\n    \"版\",\n    \"緩\",\n    \"淨\",\n    \"睛\",\n    \"昌\",\n    \"婚\",\n    \"涉\",\n    \"筒\",\n    \"嘴\",\n    \"插\",\n    \"岸\",\n    \"朗\",\n    \"莊\",\n    \"街\",\n    \"藏\",\n    \"姑\",\n    \"貿\",\n    \"腐\",\n    \"奴\",\n    \"啦\",\n    \"慣\",\n    \"乘\",\n    \"夥\",\n    \"恢\",\n    \"勻\",\n    \"紗\",\n    \"扎\",\n    \"辯\",\n    \"耳\",\n    \"彪\",\n    \"臣\",\n    \"億\",\n    \"璃\",\n    \"抵\",\n    \"脈\",\n    \"秀\",\n    \"薩\",\n    \"俄\",\n    \"網\",\n    \"舞\",\n    \"店\",\n    \"噴\",\n    \"縱\",\n    \"寸\",\n    \"汗\",\n    \"掛\",\n    \"洪\",\n    \"賀\",\n    \"閃\",\n    \"柬\",\n    \"爆\",\n    \"烯\",\n    \"津\",\n    \"稻\",\n    \"牆\",\n    \"軟\",\n    \"勇\",\n    \"像\",\n    \"滾\",\n    \"厘\",\n    \"蒙\",\n    \"芳\",\n    \"肯\",\n    \"坡\",\n    \"柱\",\n    \"盪\",\n    \"腿\",\n    \"儀\",\n    \"旅\",\n    \"尾\",\n    \"軋\",\n    \"冰\",\n    \"貢\",\n    \"登\",\n    \"黎\",\n    \"削\",\n    \"鑽\",\n    \"勒\",\n    \"逃\",\n    \"障\",\n    \"氨\",\n    \"郭\",\n    \"峰\",\n    \"幣\",\n    \"港\",\n    \"伏\",\n    \"軌\",\n    \"畝\",\n    \"畢\",\n    \"擦\",\n    \"莫\",\n    \"刺\",\n    \"浪\",\n    \"秘\",\n    \"援\",\n    \"株\",\n    \"健\",\n    \"售\",\n    \"股\",\n    \"島\",\n    \"甘\",\n    \"泡\",\n    \"睡\",\n    \"童\",\n    \"鑄\",\n    \"湯\",\n    \"閥\",\n    \"休\",\n    \"匯\",\n    \"舍\",\n    \"牧\",\n    \"繞\",\n    \"炸\",\n    \"哲\",\n    \"磷\",\n    \"績\",\n    \"朋\",\n    \"淡\",\n    \"尖\",\n    \"啟\",\n    \"陷\",\n    \"柴\",\n    \"呈\",\n    \"徒\",\n    \"顏\",\n    \"淚\",\n    \"稍\",\n    \"忘\",\n    \"泵\",\n    \"藍\",\n    \"拖\",\n    \"洞\",\n    \"授\",\n    \"鏡\",\n    \"辛\",\n    \"壯\",\n    \"鋒\",\n    \"貧\",\n    \"虛\",\n    \"彎\",\n    \"摩\",\n    \"泰\",\n    \"幼\",\n    \"廷\",\n    \"尊\",\n    \"窗\",\n    \"綱\",\n    \"弄\",\n    \"隸\",\n    \"疑\",\n    \"氏\",\n    \"宮\",\n    \"姐\",\n    \"震\",\n    \"瑞\",\n    \"怪\",\n    \"尤\",\n    \"琴\",\n    \"循\",\n    \"描\",\n    \"膜\",\n    \"違\",\n    \"夾\",\n    \"腰\",\n    \"緣\",\n    \"珠\",\n    \"窮\",\n    \"森\",\n    \"枝\",\n    \"竹\",\n    \"溝\",\n    \"催\",\n    \"繩\",\n    \"憶\",\n    \"邦\",\n    \"剩\",\n    \"幸\",\n    \"漿\",\n    \"欄\",\n    \"擁\",\n    \"牙\",\n    \"貯\",\n    \"禮\",\n    \"濾\",\n    \"鈉\",\n    \"紋\",\n    \"罷\",\n    \"拍\",\n    \"咱\",\n    \"喊\",\n    \"袖\",\n    \"埃\",\n    \"勤\",\n    \"罰\",\n    \"焦\",\n    \"潛\",\n    \"伍\",\n    \"墨\",\n    \"欲\",\n    \"縫\",\n    \"姓\",\n    \"刊\",\n    \"飽\",\n    \"仿\",\n    \"獎\",\n    \"鋁\",\n    \"鬼\",\n    \"麗\",\n    \"跨\",\n    \"默\",\n    \"挖\",\n    \"鏈\",\n    \"掃\",\n    \"喝\",\n    \"袋\",\n    \"炭\",\n    \"污\",\n    \"幕\",\n    \"諸\",\n    \"弧\",\n    \"勵\",\n    \"梅\",\n    \"奶\",\n    \"潔\",\n    \"災\",\n    \"舟\",\n    \"鑑\",\n    \"苯\",\n    \"訟\",\n    \"抱\",\n    \"毀\",\n    \"懂\",\n    \"寒\",\n    \"智\",\n    \"埔\",\n    \"寄\",\n    \"屆\",\n    \"躍\",\n    \"渡\",\n    \"挑\",\n    \"丹\",\n    \"艱\",\n    \"貝\",\n    \"碰\",\n    \"拔\",\n    \"爹\",\n    \"戴\",\n    \"碼\",\n    \"夢\",\n    \"芽\",\n    \"熔\",\n    \"赤\",\n    \"漁\",\n    \"哭\",\n    \"敬\",\n    \"顆\",\n    \"奔\",\n    \"鉛\",\n    \"仲\",\n    \"虎\",\n    \"稀\",\n    \"妹\",\n    \"乏\",\n    \"珍\",\n    \"申\",\n    \"桌\",\n    \"遵\",\n    \"允\",\n    \"隆\",\n    \"螺\",\n    \"倉\",\n    \"魏\",\n    \"銳\",\n    \"曉\",\n    \"氮\",\n    \"兼\",\n    \"隱\",\n    \"礙\",\n    \"赫\",\n    \"撥\",\n    \"忠\",\n    \"肅\",\n    \"缸\",\n    \"牽\",\n    \"搶\",\n    \"博\",\n    \"巧\",\n    \"殼\",\n    \"兄\",\n    \"杜\",\n    \"訊\",\n    \"誠\",\n    \"碧\",\n    \"祥\",\n    \"柯\",\n    \"頁\",\n    \"巡\",\n    \"矩\",\n    \"悲\",\n    \"灌\",\n    \"齡\",\n    \"倫\",\n    \"票\",\n    \"尋\",\n    \"桂\",\n    \"鋪\",\n    \"聖\",\n    \"恐\",\n    \"恰\",\n    \"鄭\",\n    \"趣\",\n    \"抬\",\n    \"荒\",\n    \"騰\",\n    \"貼\",\n    \"柔\",\n    \"滴\",\n    \"猛\",\n    \"闊\",\n    \"輛\",\n    \"妻\",\n    \"填\",\n    \"撤\",\n    \"儲\",\n    \"簽\",\n    \"鬧\",\n    \"擾\",\n    \"紫\",\n    \"砂\",\n    \"遞\",\n    \"戲\",\n    \"吊\",\n    \"陶\",\n    \"伐\",\n    \"餵\",\n    \"療\",\n    \"瓶\",\n    \"婆\",\n    \"撫\",\n    \"臂\",\n    \"摸\",\n    \"忍\",\n    \"蝦\",\n    \"蠟\",\n    \"鄰\",\n    \"胸\",\n    \"鞏\",\n    \"擠\",\n    \"偶\",\n    \"棄\",\n    \"槽\",\n    \"勁\",\n    \"乳\",\n    \"鄧\",\n    \"吉\",\n    \"仁\",\n    \"爛\",\n    \"磚\",\n    \"租\",\n    \"烏\",\n    \"艦\",\n    \"伴\",\n    \"瓜\",\n    \"淺\",\n    \"丙\",\n    \"暫\",\n    \"燥\",\n    \"橡\",\n    \"柳\",\n    \"迷\",\n    \"暖\",\n    \"牌\",\n    \"秧\",\n    \"膽\",\n    \"詳\",\n    \"簧\",\n    \"踏\",\n    \"瓷\",\n    \"譜\",\n    \"呆\",\n    \"賓\",\n    \"糊\",\n    \"洛\",\n    \"輝\",\n    \"憤\",\n    \"競\",\n    \"隙\",\n    \"怒\",\n    \"粘\",\n    \"乃\",\n    \"緒\",\n    \"肩\",\n    \"籍\",\n    \"敏\",\n    \"塗\",\n    \"熙\",\n    \"皆\",\n    \"偵\",\n    \"懸\",\n    \"掘\",\n    \"享\",\n    \"糾\",\n    \"醒\",\n    \"狂\",\n    \"鎖\",\n    \"淀\",\n    \"恨\",\n    \"牲\",\n    \"霸\",\n    \"爬\",\n    \"賞\",\n    \"逆\",\n    \"玩\",\n    \"陵\",\n    \"祝\",\n    \"秒\",\n    \"浙\",\n    \"貌\",\n    \"役\",\n    \"彼\",\n    \"悉\",\n    \"鴨\",\n    \"趨\",\n    \"鳳\",\n    \"晨\",\n    \"畜\",\n    \"輩\",\n    \"秩\",\n    \"卵\",\n    \"署\",\n    \"梯\",\n    \"炎\",\n    \"灘\",\n    \"棋\",\n    \"驅\",\n    \"篩\",\n    \"峽\",\n    \"冒\",\n    \"啥\",\n    \"壽\",\n    \"譯\",\n    \"浸\",\n    \"泉\",\n    \"帽\",\n    \"遲\",\n    \"矽\",\n    \"疆\",\n    \"貸\",\n    \"漏\",\n    \"稿\",\n    \"冠\",\n    \"嫩\",\n    \"脅\",\n    \"芯\",\n    \"牢\",\n    \"叛\",\n    \"蝕\",\n    \"奧\",\n    \"鳴\",\n    \"嶺\",\n    \"羊\",\n    \"憑\",\n    \"串\",\n    \"塘\",\n    \"繪\",\n    \"酵\",\n    \"融\",\n    \"盆\",\n    \"錫\",\n    \"廟\",\n    \"籌\",\n    \"凍\",\n    \"輔\",\n    \"攝\",\n    \"襲\",\n    \"筋\",\n    \"拒\",\n    \"僚\",\n    \"旱\",\n    \"鉀\",\n    \"鳥\",\n    \"漆\",\n    \"沈\",\n    \"眉\",\n    \"疏\",\n    \"添\",\n    \"棒\",\n    \"穗\",\n    \"硝\",\n    \"韓\",\n    \"逼\",\n    \"扭\",\n    \"僑\",\n    \"涼\",\n    \"挺\",\n    \"碗\",\n    \"栽\",\n    \"炒\",\n    \"杯\",\n    \"患\",\n    \"餾\",\n    \"勸\",\n    \"豪\",\n    \"遼\",\n    \"勃\",\n    \"鴻\",\n    \"旦\",\n    \"吏\",\n    \"拜\",\n    \"狗\",\n    \"埋\",\n    \"輥\",\n    \"掩\",\n    \"飲\",\n    \"搬\",\n    \"罵\",\n    \"辭\",\n    \"勾\",\n    \"扣\",\n    \"估\",\n    \"蔣\",\n    \"絨\",\n    \"霧\",\n    \"丈\",\n    \"朵\",\n    \"姆\",\n    \"擬\",\n    \"宇\",\n    \"輯\",\n    \"陝\",\n    \"雕\",\n    \"償\",\n    \"蓄\",\n    \"崇\",\n    \"剪\",\n    \"倡\",\n    \"廳\",\n    \"咬\",\n    \"駛\",\n    \"薯\",\n    \"刷\",\n    \"斥\",\n    \"番\",\n    \"賦\",\n    \"奉\",\n    \"佛\",\n    \"澆\",\n    \"漫\",\n    \"曼\",\n    \"扇\",\n    \"鈣\",\n    \"桃\",\n    \"扶\",\n    \"仔\",\n    \"返\",\n    \"俗\",\n    \"虧\",\n    \"腔\",\n    \"鞋\",\n    \"棱\",\n    \"覆\",\n    \"框\",\n    \"悄\",\n    \"叔\",\n    \"撞\",\n    \"騙\",\n    \"勘\",\n    \"旺\",\n    \"沸\",\n    \"孤\",\n    \"吐\",\n    \"孟\",\n    \"渠\",\n    \"屈\",\n    \"疾\",\n    \"妙\",\n    \"惜\",\n    \"仰\",\n    \"狠\",\n    \"脹\",\n    \"諧\",\n    \"拋\",\n    \"黴\",\n    \"桑\",\n    \"崗\",\n    \"嘛\",\n    \"衰\",\n    \"盜\",\n    \"滲\",\n    \"臟\",\n    \"賴\",\n    \"湧\",\n    \"甜\",\n    \"曹\",\n    \"閱\",\n    \"肌\",\n    \"哩\",\n    \"厲\",\n    \"烴\",\n    \"緯\",\n    \"毅\",\n    \"昨\",\n    \"偽\",\n    \"症\",\n    \"煮\",\n    \"嘆\",\n    \"釘\",\n    \"搭\",\n    \"莖\",\n    \"籠\",\n    \"酷\",\n    \"偷\",\n    \"弓\",\n    \"錐\",\n    \"恆\",\n    \"傑\",\n    \"坑\",\n    \"鼻\",\n    \"翼\",\n    \"綸\",\n    \"敘\",\n    \"獄\",\n    \"逮\",\n    \"罐\",\n    \"絡\",\n    \"棚\",\n    \"抑\",\n    \"膨\",\n    \"蔬\",\n    \"寺\",\n    \"驟\",\n    \"穆\",\n    \"冶\",\n    \"枯\",\n    \"冊\",\n    \"屍\",\n    \"凸\",\n    \"紳\",\n    \"坯\",\n    \"犧\",\n    \"焰\",\n    \"轟\",\n    \"欣\",\n    \"晉\",\n    \"瘦\",\n    \"禦\",\n    \"錠\",\n    \"錦\",\n    \"喪\",\n    \"旬\",\n    \"鍛\",\n    \"壟\",\n    \"搜\",\n    \"撲\",\n    \"邀\",\n    \"亭\",\n    \"酯\",\n    \"邁\",\n    \"舒\",\n    \"脆\",\n    \"酶\",\n    \"閒\",\n    \"憂\",\n    \"酚\",\n    \"頑\",\n    \"羽\",\n    \"漲\",\n    \"卸\",\n    \"仗\",\n    \"陪\",\n    \"闢\",\n    \"懲\",\n    \"杭\",\n    \"姚\",\n    \"肚\",\n    \"捉\",\n    \"飄\",\n    \"漂\",\n    \"昆\",\n    \"欺\",\n    \"吾\",\n    \"郎\",\n    \"烷\",\n    \"汁\",\n    \"呵\",\n    \"飾\",\n    \"蕭\",\n    \"雅\",\n    \"郵\",\n    \"遷\",\n    \"燕\",\n    \"撒\",\n    \"姻\",\n    \"赴\",\n    \"宴\",\n    \"煩\",\n    \"債\",\n    \"帳\",\n    \"斑\",\n    \"鈴\",\n    \"旨\",\n    \"醇\",\n    \"董\",\n    \"餅\",\n    \"雛\",\n    \"姿\",\n    \"拌\",\n    \"傅\",\n    \"腹\",\n    \"妥\",\n    \"揉\",\n    \"賢\",\n    \"拆\",\n    \"歪\",\n    \"葡\",\n    \"胺\",\n    \"丟\",\n    \"浩\",\n    \"徽\",\n    \"昂\",\n    \"墊\",\n    \"擋\",\n    \"覽\",\n    \"貪\",\n    \"慰\",\n    \"繳\",\n    \"汪\",\n    \"慌\",\n    \"馮\",\n    \"諾\",\n    \"姜\",\n    \"誼\",\n    \"兇\",\n    \"劣\",\n    \"誣\",\n    \"耀\",\n    \"昏\",\n    \"躺\",\n    \"盈\",\n    \"騎\",\n    \"喬\",\n    \"溪\",\n    \"叢\",\n    \"盧\",\n    \"抹\",\n    \"悶\",\n    \"諮\",\n    \"刮\",\n    \"駕\",\n    \"纜\",\n    \"悟\",\n    \"摘\",\n    \"鉺\",\n    \"擲\",\n    \"頗\",\n    \"幻\",\n    \"柄\",\n    \"惠\",\n    \"慘\",\n    \"佳\",\n    \"仇\",\n    \"臘\",\n    \"窩\",\n    \"滌\",\n    \"劍\",\n    \"瞧\",\n    \"堡\",\n    \"潑\",\n    \"蔥\",\n    \"罩\",\n    \"霍\",\n    \"撈\",\n    \"胎\",\n    \"蒼\",\n    \"濱\",\n    \"倆\",\n    \"捅\",\n    \"湘\",\n    \"砍\",\n    \"霞\",\n    \"邵\",\n    \"萄\",\n    \"瘋\",\n    \"淮\",\n    \"遂\",\n    \"熊\",\n    \"糞\",\n    \"烘\",\n    \"宿\",\n    \"檔\",\n    \"戈\",\n    \"駁\",\n    \"嫂\",\n    \"裕\",\n    \"徙\",\n    \"箭\",\n    \"捐\",\n    \"腸\",\n    \"撐\",\n    \"曬\",\n    \"辨\",\n    \"殿\",\n    \"蓮\",\n    \"攤\",\n    \"攪\",\n    \"醬\",\n    \"屏\",\n    \"疫\",\n    \"哀\",\n    \"蔡\",\n    \"堵\",\n    \"沫\",\n    \"皺\",\n    \"暢\",\n    \"疊\",\n    \"閣\",\n    \"萊\",\n    \"敲\",\n    \"轄\",\n    \"鉤\",\n    \"痕\",\n    \"壩\",\n    \"巷\",\n    \"餓\",\n    \"禍\",\n    \"丘\",\n    \"玄\",\n    \"溜\",\n    \"曰\",\n    \"邏\",\n    \"彭\",\n    \"嘗\",\n    \"卿\",\n    \"妨\",\n    \"艇\",\n    \"吞\",\n    \"韋\",\n    \"怨\",\n    \"矮\",\n    \"歇\"\n]\n","module.exports=[\n    \"あいこくしん\",\n    \"あいさつ\",\n    \"あいだ\",\n    \"あおぞら\",\n    \"あかちゃん\",\n    \"あきる\",\n    \"あけがた\",\n    \"あける\",\n    \"あこがれる\",\n    \"あさい\",\n    \"あさひ\",\n    \"あしあと\",\n    \"あじわう\",\n    \"あずかる\",\n    \"あずき\",\n    \"あそぶ\",\n    \"あたえる\",\n    \"あたためる\",\n    \"あたりまえ\",\n    \"あたる\",\n    \"あつい\",\n    \"あつかう\",\n    \"あっしゅく\",\n    \"あつまり\",\n    \"あつめる\",\n    \"あてな\",\n    \"あてはまる\",\n    \"あひる\",\n    \"あぶら\",\n    \"あぶる\",\n    \"あふれる\",\n    \"あまい\",\n    \"あまど\",\n    \"あまやかす\",\n    \"あまり\",\n    \"あみもの\",\n    \"あめりか\",\n    \"あやまる\",\n    \"あゆむ\",\n    \"あらいぐま\",\n    \"あらし\",\n    \"あらすじ\",\n    \"あらためる\",\n    \"あらゆる\",\n    \"あらわす\",\n    \"ありがとう\",\n    \"あわせる\",\n    \"あわてる\",\n    \"あんい\",\n    \"あんがい\",\n    \"あんこ\",\n    \"あんぜん\",\n    \"あんてい\",\n    \"あんない\",\n    \"あんまり\",\n    \"いいだす\",\n    \"いおん\",\n    \"いがい\",\n    \"いがく\",\n    \"いきおい\",\n    \"いきなり\",\n    \"いきもの\",\n    \"いきる\",\n    \"いくじ\",\n    \"いくぶん\",\n    \"いけばな\",\n    \"いけん\",\n    \"いこう\",\n    \"いこく\",\n    \"いこつ\",\n    \"いさましい\",\n    \"いさん\",\n    \"いしき\",\n    \"いじゅう\",\n    \"いじょう\",\n    \"いじわる\",\n    \"いずみ\",\n    \"いずれ\",\n    \"いせい\",\n    \"いせえび\",\n    \"いせかい\",\n    \"いせき\",\n    \"いぜん\",\n    \"いそうろう\",\n    \"いそがしい\",\n    \"いだい\",\n    \"いだく\",\n    \"いたずら\",\n    \"いたみ\",\n    \"いたりあ\",\n    \"いちおう\",\n    \"いちじ\",\n    \"いちど\",\n    \"いちば\",\n    \"いちぶ\",\n    \"いちりゅう\",\n    \"いつか\",\n    \"いっしゅん\",\n    \"いっせい\",\n    \"いっそう\",\n    \"いったん\",\n    \"いっち\",\n    \"いってい\",\n    \"いっぽう\",\n    \"いてざ\",\n    \"いてん\",\n    \"いどう\",\n    \"いとこ\",\n    \"いない\",\n    \"いなか\",\n    \"いねむり\",\n    \"いのち\",\n    \"いのる\",\n    \"いはつ\",\n    \"いばる\",\n    \"いはん\",\n    \"いびき\",\n    \"いひん\",\n    \"いふく\",\n    \"いへん\",\n    \"いほう\",\n    \"いみん\",\n    \"いもうと\",\n    \"いもたれ\",\n    \"いもり\",\n    \"いやがる\",\n    \"いやす\",\n    \"いよかん\",\n    \"いよく\",\n    \"いらい\",\n    \"いらすと\",\n    \"いりぐち\",\n    \"いりょう\",\n    \"いれい\",\n    \"いれもの\",\n    \"いれる\",\n    \"いろえんぴつ\",\n    \"いわい\",\n    \"いわう\",\n    \"いわかん\",\n    \"いわば\",\n    \"いわゆる\",\n    \"いんげんまめ\",\n    \"いんさつ\",\n    \"いんしょう\",\n    \"いんよう\",\n    \"うえき\",\n    \"うえる\",\n    \"うおざ\",\n    \"うがい\",\n    \"うかぶ\",\n    \"うかべる\",\n    \"うきわ\",\n    \"うくらいな\",\n    \"うくれれ\",\n    \"うけたまわる\",\n    \"うけつけ\",\n    \"うけとる\",\n    \"うけもつ\",\n    \"うける\",\n    \"うごかす\",\n    \"うごく\",\n    \"うこん\",\n    \"うさぎ\",\n    \"うしなう\",\n    \"うしろがみ\",\n    \"うすい\",\n    \"うすぎ\",\n    \"うすぐらい\",\n    \"うすめる\",\n    \"うせつ\",\n    \"うちあわせ\",\n    \"うちがわ\",\n    \"うちき\",\n    \"うちゅう\",\n    \"うっかり\",\n    \"うつくしい\",\n    \"うったえる\",\n    \"うつる\",\n    \"うどん\",\n    \"うなぎ\",\n    \"うなじ\",\n    \"うなずく\",\n    \"うなる\",\n    \"うねる\",\n    \"うのう\",\n    \"うぶげ\",\n    \"うぶごえ\",\n    \"うまれる\",\n    \"うめる\",\n    \"うもう\",\n    \"うやまう\",\n    \"うよく\",\n    \"うらがえす\",\n    \"うらぐち\",\n    \"うらない\",\n    \"うりあげ\",\n    \"うりきれ\",\n    \"うるさい\",\n    \"うれしい\",\n    \"うれゆき\",\n    \"うれる\",\n    \"うろこ\",\n    \"うわき\",\n    \"うわさ\",\n    \"うんこう\",\n    \"うんちん\",\n    \"うんてん\",\n    \"うんどう\",\n    \"えいえん\",\n    \"えいが\",\n    \"えいきょう\",\n    \"えいご\",\n    \"えいせい\",\n    \"えいぶん\",\n    \"えいよう\",\n    \"えいわ\",\n    \"えおり\",\n    \"えがお\",\n    \"えがく\",\n    \"えきたい\",\n    \"えくせる\",\n    \"えしゃく\",\n    \"えすて\",\n    \"えつらん\",\n    \"えのぐ\",\n    \"えほうまき\",\n    \"えほん\",\n    \"えまき\",\n    \"えもじ\",\n    \"えもの\",\n    \"えらい\",\n    \"えらぶ\",\n    \"えりあ\",\n    \"えんえん\",\n    \"えんかい\",\n    \"えんぎ\",\n    \"えんげき\",\n    \"えんしゅう\",\n    \"えんぜつ\",\n    \"えんそく\",\n    \"えんちょう\",\n    \"えんとつ\",\n    \"おいかける\",\n    \"おいこす\",\n    \"おいしい\",\n    \"おいつく\",\n    \"おうえん\",\n    \"おうさま\",\n    \"おうじ\",\n    \"おうせつ\",\n    \"おうたい\",\n    \"おうふく\",\n    \"おうべい\",\n    \"おうよう\",\n    \"おえる\",\n    \"おおい\",\n    \"おおう\",\n    \"おおどおり\",\n    \"おおや\",\n    \"おおよそ\",\n    \"おかえり\",\n    \"おかず\",\n    \"おがむ\",\n    \"おかわり\",\n    \"おぎなう\",\n    \"おきる\",\n    \"おくさま\",\n    \"おくじょう\",\n    \"おくりがな\",\n    \"おくる\",\n    \"おくれる\",\n    \"おこす\",\n    \"おこなう\",\n    \"おこる\",\n    \"おさえる\",\n    \"おさない\",\n    \"おさめる\",\n    \"おしいれ\",\n    \"おしえる\",\n    \"おじぎ\",\n    \"おじさん\",\n    \"おしゃれ\",\n    \"おそらく\",\n    \"おそわる\",\n    \"おたがい\",\n    \"おたく\",\n    \"おだやか\",\n    \"おちつく\",\n    \"おっと\",\n    \"おつり\",\n    \"おでかけ\",\n    \"おとしもの\",\n    \"おとなしい\",\n    \"おどり\",\n    \"おどろかす\",\n    \"おばさん\",\n    \"おまいり\",\n    \"おめでとう\",\n    \"おもいで\",\n    \"おもう\",\n    \"おもたい\",\n    \"おもちゃ\",\n    \"おやつ\",\n    \"おやゆび\",\n    \"およぼす\",\n    \"おらんだ\",\n    \"おろす\",\n    \"おんがく\",\n    \"おんけい\",\n    \"おんしゃ\",\n    \"おんせん\",\n    \"おんだん\",\n    \"おんちゅう\",\n    \"おんどけい\",\n    \"かあつ\",\n    \"かいが\",\n    \"がいき\",\n    \"がいけん\",\n    \"がいこう\",\n    \"かいさつ\",\n    \"かいしゃ\",\n    \"かいすいよく\",\n    \"かいぜん\",\n    \"かいぞうど\",\n    \"かいつう\",\n    \"かいてん\",\n    \"かいとう\",\n    \"かいふく\",\n    \"がいへき\",\n    \"かいほう\",\n    \"かいよう\",\n    \"がいらい\",\n    \"かいわ\",\n    \"かえる\",\n    \"かおり\",\n    \"かかえる\",\n    \"かがく\",\n    \"かがし\",\n    \"かがみ\",\n    \"かくご\",\n    \"かくとく\",\n    \"かざる\",\n    \"がぞう\",\n    \"かたい\",\n    \"かたち\",\n    \"がちょう\",\n    \"がっきゅう\",\n    \"がっこう\",\n    \"がっさん\",\n    \"がっしょう\",\n    \"かなざわし\",\n    \"かのう\",\n    \"がはく\",\n    \"かぶか\",\n    \"かほう\",\n    \"かほご\",\n    \"かまう\",\n    \"かまぼこ\",\n    \"かめれおん\",\n    \"かゆい\",\n    \"かようび\",\n    \"からい\",\n    \"かるい\",\n    \"かろう\",\n    \"かわく\",\n    \"かわら\",\n    \"がんか\",\n    \"かんけい\",\n    \"かんこう\",\n    \"かんしゃ\",\n    \"かんそう\",\n    \"かんたん\",\n    \"かんち\",\n    \"がんばる\",\n    \"きあい\",\n    \"きあつ\",\n    \"きいろ\",\n    \"ぎいん\",\n    \"きうい\",\n    \"きうん\",\n    \"きえる\",\n    \"きおう\",\n    \"きおく\",\n    \"きおち\",\n    \"きおん\",\n    \"きかい\",\n    \"きかく\",\n    \"きかんしゃ\",\n    \"ききて\",\n    \"きくばり\",\n    \"きくらげ\",\n    \"きけんせい\",\n    \"きこう\",\n    \"きこえる\",\n    \"きこく\",\n    \"きさい\",\n    \"きさく\",\n    \"きさま\",\n    \"きさらぎ\",\n    \"ぎじかがく\",\n    \"ぎしき\",\n    \"ぎじたいけん\",\n    \"ぎじにってい\",\n    \"ぎじゅつしゃ\",\n    \"きすう\",\n    \"きせい\",\n    \"きせき\",\n    \"きせつ\",\n    \"きそう\",\n    \"きぞく\",\n    \"きぞん\",\n    \"きたえる\",\n    \"きちょう\",\n    \"きつえん\",\n    \"ぎっちり\",\n    \"きつつき\",\n    \"きつね\",\n    \"きてい\",\n    \"きどう\",\n    \"きどく\",\n    \"きない\",\n    \"きなが\",\n    \"きなこ\",\n    \"きぬごし\",\n    \"きねん\",\n    \"きのう\",\n    \"きのした\",\n    \"きはく\",\n    \"きびしい\",\n    \"きひん\",\n    \"きふく\",\n    \"きぶん\",\n    \"きぼう\",\n    \"きほん\",\n    \"きまる\",\n    \"きみつ\",\n    \"きむずかしい\",\n    \"きめる\",\n    \"きもだめし\",\n    \"きもち\",\n    \"きもの\",\n    \"きゃく\",\n    \"きやく\",\n    \"ぎゅうにく\",\n    \"きよう\",\n    \"きょうりゅう\",\n    \"きらい\",\n    \"きらく\",\n    \"きりん\",\n    \"きれい\",\n    \"きれつ\",\n    \"きろく\",\n    \"ぎろん\",\n    \"きわめる\",\n    \"ぎんいろ\",\n    \"きんかくじ\",\n    \"きんじょ\",\n    \"きんようび\",\n    \"ぐあい\",\n    \"くいず\",\n    \"くうかん\",\n    \"くうき\",\n    \"くうぐん\",\n    \"くうこう\",\n    \"ぐうせい\",\n    \"くうそう\",\n    \"ぐうたら\",\n    \"くうふく\",\n    \"くうぼ\",\n    \"くかん\",\n    \"くきょう\",\n    \"くげん\",\n    \"ぐこう\",\n    \"くさい\",\n    \"くさき\",\n    \"くさばな\",\n    \"くさる\",\n    \"くしゃみ\",\n    \"くしょう\",\n    \"くすのき\",\n    \"くすりゆび\",\n    \"くせげ\",\n    \"くせん\",\n    \"ぐたいてき\",\n    \"くださる\",\n    \"くたびれる\",\n    \"くちこみ\",\n    \"くちさき\",\n    \"くつした\",\n    \"ぐっすり\",\n    \"くつろぐ\",\n    \"くとうてん\",\n    \"くどく\",\n    \"くなん\",\n    \"くねくね\",\n    \"くのう\",\n    \"くふう\",\n    \"くみあわせ\",\n    \"くみたてる\",\n    \"くめる\",\n    \"くやくしょ\",\n    \"くらす\",\n    \"くらべる\",\n    \"くるま\",\n    \"くれる\",\n    \"くろう\",\n    \"くわしい\",\n    \"ぐんかん\",\n    \"ぐんしょく\",\n    \"ぐんたい\",\n    \"ぐんて\",\n    \"けあな\",\n    \"けいかく\",\n    \"けいけん\",\n    \"けいこ\",\n    \"けいさつ\",\n    \"げいじゅつ\",\n    \"けいたい\",\n    \"げいのうじん\",\n    \"けいれき\",\n    \"けいろ\",\n    \"けおとす\",\n    \"けおりもの\",\n    \"げきか\",\n    \"げきげん\",\n    \"げきだん\",\n    \"げきちん\",\n    \"げきとつ\",\n    \"げきは\",\n    \"げきやく\",\n    \"げこう\",\n    \"げこくじょう\",\n    \"げざい\",\n    \"けさき\",\n    \"げざん\",\n    \"けしき\",\n    \"けしごむ\",\n    \"けしょう\",\n    \"げすと\",\n    \"けたば\",\n    \"けちゃっぷ\",\n    \"けちらす\",\n    \"けつあつ\",\n    \"けつい\",\n    \"けつえき\",\n    \"けっこん\",\n    \"けつじょ\",\n    \"けっせき\",\n    \"けってい\",\n    \"けつまつ\",\n    \"げつようび\",\n    \"げつれい\",\n    \"けつろん\",\n    \"げどく\",\n    \"けとばす\",\n    \"けとる\",\n    \"けなげ\",\n    \"けなす\",\n    \"けなみ\",\n    \"けぬき\",\n    \"げねつ\",\n    \"けねん\",\n    \"けはい\",\n    \"げひん\",\n    \"けぶかい\",\n    \"げぼく\",\n    \"けまり\",\n    \"けみかる\",\n    \"けむし\",\n    \"けむり\",\n    \"けもの\",\n    \"けらい\",\n    \"けろけろ\",\n    \"けわしい\",\n    \"けんい\",\n    \"けんえつ\",\n    \"けんお\",\n    \"けんか\",\n    \"げんき\",\n    \"けんげん\",\n    \"けんこう\",\n    \"けんさく\",\n    \"けんしゅう\",\n    \"けんすう\",\n    \"げんそう\",\n    \"けんちく\",\n    \"けんてい\",\n    \"けんとう\",\n    \"けんない\",\n    \"けんにん\",\n    \"げんぶつ\",\n    \"けんま\",\n    \"けんみん\",\n    \"けんめい\",\n    \"けんらん\",\n    \"けんり\",\n    \"こあくま\",\n    \"こいぬ\",\n    \"こいびと\",\n    \"ごうい\",\n    \"こうえん\",\n    \"こうおん\",\n    \"こうかん\",\n    \"ごうきゅう\",\n    \"ごうけい\",\n    \"こうこう\",\n    \"こうさい\",\n    \"こうじ\",\n    \"こうすい\",\n    \"ごうせい\",\n    \"こうそく\",\n    \"こうたい\",\n    \"こうちゃ\",\n    \"こうつう\",\n    \"こうてい\",\n    \"こうどう\",\n    \"こうない\",\n    \"こうはい\",\n    \"ごうほう\",\n    \"ごうまん\",\n    \"こうもく\",\n    \"こうりつ\",\n    \"こえる\",\n    \"こおり\",\n    \"ごかい\",\n    \"ごがつ\",\n    \"ごかん\",\n    \"こくご\",\n    \"こくさい\",\n    \"こくとう\",\n    \"こくない\",\n    \"こくはく\",\n    \"こぐま\",\n    \"こけい\",\n    \"こける\",\n    \"ここのか\",\n    \"こころ\",\n    \"こさめ\",\n    \"こしつ\",\n    \"こすう\",\n    \"こせい\",\n    \"こせき\",\n    \"こぜん\",\n    \"こそだて\",\n    \"こたい\",\n    \"こたえる\",\n    \"こたつ\",\n    \"こちょう\",\n    \"こっか\",\n    \"こつこつ\",\n    \"こつばん\",\n    \"こつぶ\",\n    \"こてい\",\n    \"こてん\",\n    \"ことがら\",\n    \"ことし\",\n    \"ことば\",\n    \"ことり\",\n    \"こなごな\",\n    \"こねこね\",\n    \"このまま\",\n    \"このみ\",\n    \"このよ\",\n    \"ごはん\",\n    \"こひつじ\",\n    \"こふう\",\n    \"こふん\",\n    \"こぼれる\",\n    \"ごまあぶら\",\n    \"こまかい\",\n    \"ごますり\",\n    \"こまつな\",\n    \"こまる\",\n    \"こむぎこ\",\n    \"こもじ\",\n    \"こもち\",\n    \"こもの\",\n    \"こもん\",\n    \"こやく\",\n    \"こやま\",\n    \"こゆう\",\n    \"こゆび\",\n    \"こよい\",\n    \"こよう\",\n    \"こりる\",\n    \"これくしょん\",\n    \"ころっけ\",\n    \"こわもて\",\n    \"こわれる\",\n    \"こんいん\",\n    \"こんかい\",\n    \"こんき\",\n    \"こんしゅう\",\n    \"こんすい\",\n    \"こんだて\",\n    \"こんとん\",\n    \"こんなん\",\n    \"こんびに\",\n    \"こんぽん\",\n    \"こんまけ\",\n    \"こんや\",\n    \"こんれい\",\n    \"こんわく\",\n    \"ざいえき\",\n    \"さいかい\",\n    \"さいきん\",\n    \"ざいげん\",\n    \"ざいこ\",\n    \"さいしょ\",\n    \"さいせい\",\n    \"ざいたく\",\n    \"ざいちゅう\",\n    \"さいてき\",\n    \"ざいりょう\",\n    \"さうな\",\n    \"さかいし\",\n    \"さがす\",\n    \"さかな\",\n    \"さかみち\",\n    \"さがる\",\n    \"さぎょう\",\n    \"さくし\",\n    \"さくひん\",\n    \"さくら\",\n    \"さこく\",\n    \"さこつ\",\n    \"さずかる\",\n    \"ざせき\",\n    \"さたん\",\n    \"さつえい\",\n    \"ざつおん\",\n    \"ざっか\",\n    \"ざつがく\",\n    \"さっきょく\",\n    \"ざっし\",\n    \"さつじん\",\n    \"ざっそう\",\n    \"さつたば\",\n    \"さつまいも\",\n    \"さてい\",\n    \"さといも\",\n    \"さとう\",\n    \"さとおや\",\n    \"さとし\",\n    \"さとる\",\n    \"さのう\",\n    \"さばく\",\n    \"さびしい\",\n    \"さべつ\",\n    \"さほう\",\n    \"さほど\",\n    \"さます\",\n    \"さみしい\",\n    \"さみだれ\",\n    \"さむけ\",\n    \"さめる\",\n    \"さやえんどう\",\n    \"さゆう\",\n    \"さよう\",\n    \"さよく\",\n    \"さらだ\",\n    \"ざるそば\",\n    \"さわやか\",\n    \"さわる\",\n    \"さんいん\",\n    \"さんか\",\n    \"さんきゃく\",\n    \"さんこう\",\n    \"さんさい\",\n    \"ざんしょ\",\n    \"さんすう\",\n    \"さんせい\",\n    \"さんそ\",\n    \"さんち\",\n    \"さんま\",\n    \"さんみ\",\n    \"さんらん\",\n    \"しあい\",\n    \"しあげ\",\n    \"しあさって\",\n    \"しあわせ\",\n    \"しいく\",\n    \"しいん\",\n    \"しうち\",\n    \"しえい\",\n    \"しおけ\",\n    \"しかい\",\n    \"しかく\",\n    \"じかん\",\n    \"しごと\",\n    \"しすう\",\n    \"じだい\",\n    \"したうけ\",\n    \"したぎ\",\n    \"したて\",\n    \"したみ\",\n    \"しちょう\",\n    \"しちりん\",\n    \"しっかり\",\n    \"しつじ\",\n    \"しつもん\",\n    \"してい\",\n    \"してき\",\n    \"してつ\",\n    \"じてん\",\n    \"じどう\",\n    \"しなぎれ\",\n    \"しなもの\",\n    \"しなん\",\n    \"しねま\",\n    \"しねん\",\n    \"しのぐ\",\n    \"しのぶ\",\n    \"しはい\",\n    \"しばかり\",\n    \"しはつ\",\n    \"しはらい\",\n    \"しはん\",\n    \"しひょう\",\n    \"しふく\",\n    \"じぶん\",\n    \"しへい\",\n    \"しほう\",\n    \"しほん\",\n    \"しまう\",\n    \"しまる\",\n    \"しみん\",\n    \"しむける\",\n    \"じむしょ\",\n    \"しめい\",\n    \"しめる\",\n    \"しもん\",\n    \"しゃいん\",\n    \"しゃうん\",\n    \"しゃおん\",\n    \"じゃがいも\",\n    \"しやくしょ\",\n    \"しゃくほう\",\n    \"しゃけん\",\n    \"しゃこ\",\n    \"しゃざい\",\n    \"しゃしん\",\n    \"しゃせん\",\n    \"しゃそう\",\n    \"しゃたい\",\n    \"しゃちょう\",\n    \"しゃっきん\",\n    \"じゃま\",\n    \"しゃりん\",\n    \"しゃれい\",\n    \"じゆう\",\n    \"じゅうしょ\",\n    \"しゅくはく\",\n    \"じゅしん\",\n    \"しゅっせき\",\n    \"しゅみ\",\n    \"しゅらば\",\n    \"じゅんばん\",\n    \"しょうかい\",\n    \"しょくたく\",\n    \"しょっけん\",\n    \"しょどう\",\n    \"しょもつ\",\n    \"しらせる\",\n    \"しらべる\",\n    \"しんか\",\n    \"しんこう\",\n    \"じんじゃ\",\n    \"しんせいじ\",\n    \"しんちく\",\n    \"しんりん\",\n    \"すあげ\",\n    \"すあし\",\n    \"すあな\",\n    \"ずあん\",\n    \"すいえい\",\n    \"すいか\",\n    \"すいとう\",\n    \"ずいぶん\",\n    \"すいようび\",\n    \"すうがく\",\n    \"すうじつ\",\n    \"すうせん\",\n    \"すおどり\",\n    \"すきま\",\n    \"すくう\",\n    \"すくない\",\n    \"すける\",\n    \"すごい\",\n    \"すこし\",\n    \"ずさん\",\n    \"すずしい\",\n    \"すすむ\",\n    \"すすめる\",\n    \"すっかり\",\n    \"ずっしり\",\n    \"ずっと\",\n    \"すてき\",\n    \"すてる\",\n    \"すねる\",\n    \"すのこ\",\n    \"すはだ\",\n    \"すばらしい\",\n    \"ずひょう\",\n    \"ずぶぬれ\",\n    \"すぶり\",\n    \"すふれ\",\n    \"すべて\",\n    \"すべる\",\n    \"ずほう\",\n    \"すぼん\",\n    \"すまい\",\n    \"すめし\",\n    \"すもう\",\n    \"すやき\",\n    \"すらすら\",\n    \"するめ\",\n    \"すれちがう\",\n    \"すろっと\",\n    \"すわる\",\n    \"すんぜん\",\n    \"すんぽう\",\n    \"せあぶら\",\n    \"せいかつ\",\n    \"せいげん\",\n    \"せいじ\",\n    \"せいよう\",\n    \"せおう\",\n    \"せかいかん\",\n    \"せきにん\",\n    \"せきむ\",\n    \"せきゆ\",\n    \"せきらんうん\",\n    \"せけん\",\n    \"せこう\",\n    \"せすじ\",\n    \"せたい\",\n    \"せたけ\",\n    \"せっかく\",\n    \"せっきゃく\",\n    \"ぜっく\",\n    \"せっけん\",\n    \"せっこつ\",\n    \"せっさたくま\",\n    \"せつぞく\",\n    \"せつだん\",\n    \"せつでん\",\n    \"せっぱん\",\n    \"せつび\",\n    \"せつぶん\",\n    \"せつめい\",\n    \"せつりつ\",\n    \"せなか\",\n    \"せのび\",\n    \"せはば\",\n    \"せびろ\",\n    \"せぼね\",\n    \"せまい\",\n    \"せまる\",\n    \"せめる\",\n    \"せもたれ\",\n    \"せりふ\",\n    \"ぜんあく\",\n    \"せんい\",\n    \"せんえい\",\n    \"せんか\",\n    \"せんきょ\",\n    \"せんく\",\n    \"せんげん\",\n    \"ぜんご\",\n    \"せんさい\",\n    \"せんしゅ\",\n    \"せんすい\",\n    \"せんせい\",\n    \"せんぞ\",\n    \"せんたく\",\n    \"せんちょう\",\n    \"せんてい\",\n    \"せんとう\",\n    \"せんぬき\",\n    \"せんねん\",\n    \"せんぱい\",\n    \"ぜんぶ\",\n    \"ぜんぽう\",\n    \"せんむ\",\n    \"せんめんじょ\",\n    \"せんもん\",\n    \"せんやく\",\n    \"せんゆう\",\n    \"せんよう\",\n    \"ぜんら\",\n    \"ぜんりゃく\",\n    \"せんれい\",\n    \"せんろ\",\n    \"そあく\",\n    \"そいとげる\",\n    \"そいね\",\n    \"そうがんきょう\",\n    \"そうき\",\n    \"そうご\",\n    \"そうしん\",\n    \"そうだん\",\n    \"そうなん\",\n    \"そうび\",\n    \"そうめん\",\n    \"そうり\",\n    \"そえもの\",\n    \"そえん\",\n    \"そがい\",\n    \"そげき\",\n    \"そこう\",\n    \"そこそこ\",\n    \"そざい\",\n    \"そしな\",\n    \"そせい\",\n    \"そせん\",\n    \"そそぐ\",\n    \"そだてる\",\n    \"そつう\",\n    \"そつえん\",\n    \"そっかん\",\n    \"そつぎょう\",\n    \"そっけつ\",\n    \"そっこう\",\n    \"そっせん\",\n    \"そっと\",\n    \"そとがわ\",\n    \"そとづら\",\n    \"そなえる\",\n    \"そなた\",\n    \"そふぼ\",\n    \"そぼく\",\n    \"そぼろ\",\n    \"そまつ\",\n    \"そまる\",\n    \"そむく\",\n    \"そむりえ\",\n    \"そめる\",\n    \"そもそも\",\n    \"そよかぜ\",\n    \"そらまめ\",\n    \"そろう\",\n    \"そんかい\",\n    \"そんけい\",\n    \"そんざい\",\n    \"そんしつ\",\n    \"そんぞく\",\n    \"そんちょう\",\n    \"ぞんび\",\n    \"ぞんぶん\",\n    \"そんみん\",\n    \"たあい\",\n    \"たいいん\",\n    \"たいうん\",\n    \"たいえき\",\n    \"たいおう\",\n    \"だいがく\",\n    \"たいき\",\n    \"たいぐう\",\n    \"たいけん\",\n    \"たいこ\",\n    \"たいざい\",\n    \"だいじょうぶ\",\n    \"だいすき\",\n    \"たいせつ\",\n    \"たいそう\",\n    \"だいたい\",\n    \"たいちょう\",\n    \"たいてい\",\n    \"だいどころ\",\n    \"たいない\",\n    \"たいねつ\",\n    \"たいのう\",\n    \"たいはん\",\n    \"だいひょう\",\n    \"たいふう\",\n    \"たいへん\",\n    \"たいほ\",\n    \"たいまつばな\",\n    \"たいみんぐ\",\n    \"たいむ\",\n    \"たいめん\",\n    \"たいやき\",\n    \"たいよう\",\n    \"たいら\",\n    \"たいりょく\",\n    \"たいる\",\n    \"たいわん\",\n    \"たうえ\",\n    \"たえる\",\n    \"たおす\",\n    \"たおる\",\n    \"たおれる\",\n    \"たかい\",\n    \"たかね\",\n    \"たきび\",\n    \"たくさん\",\n    \"たこく\",\n    \"たこやき\",\n    \"たさい\",\n    \"たしざん\",\n    \"だじゃれ\",\n    \"たすける\",\n    \"たずさわる\",\n    \"たそがれ\",\n    \"たたかう\",\n    \"たたく\",\n    \"ただしい\",\n    \"たたみ\",\n    \"たちばな\",\n    \"だっかい\",\n    \"だっきゃく\",\n    \"だっこ\",\n    \"だっしゅつ\",\n    \"だったい\",\n    \"たてる\",\n    \"たとえる\",\n    \"たなばた\",\n    \"たにん\",\n    \"たぬき\",\n    \"たのしみ\",\n    \"たはつ\",\n    \"たぶん\",\n    \"たべる\",\n    \"たぼう\",\n    \"たまご\",\n    \"たまる\",\n    \"だむる\",\n    \"ためいき\",\n    \"ためす\",\n    \"ためる\",\n    \"たもつ\",\n    \"たやすい\",\n    \"たよる\",\n    \"たらす\",\n    \"たりきほんがん\",\n    \"たりょう\",\n    \"たりる\",\n    \"たると\",\n    \"たれる\",\n    \"たれんと\",\n    \"たろっと\",\n    \"たわむれる\",\n    \"だんあつ\",\n    \"たんい\",\n    \"たんおん\",\n    \"たんか\",\n    \"たんき\",\n    \"たんけん\",\n    \"たんご\",\n    \"たんさん\",\n    \"たんじょうび\",\n    \"だんせい\",\n    \"たんそく\",\n    \"たんたい\",\n    \"だんち\",\n    \"たんてい\",\n    \"たんとう\",\n    \"だんな\",\n    \"たんにん\",\n    \"だんねつ\",\n    \"たんのう\",\n    \"たんぴん\",\n    \"だんぼう\",\n    \"たんまつ\",\n    \"たんめい\",\n    \"だんれつ\",\n    \"だんろ\",\n    \"だんわ\",\n    \"ちあい\",\n    \"ちあん\",\n    \"ちいき\",\n    \"ちいさい\",\n    \"ちえん\",\n    \"ちかい\",\n    \"ちから\",\n    \"ちきゅう\",\n    \"ちきん\",\n    \"ちけいず\",\n    \"ちけん\",\n    \"ちこく\",\n    \"ちさい\",\n    \"ちしき\",\n    \"ちしりょう\",\n    \"ちせい\",\n    \"ちそう\",\n    \"ちたい\",\n    \"ちたん\",\n    \"ちちおや\",\n    \"ちつじょ\",\n    \"ちてき\",\n    \"ちてん\",\n    \"ちぬき\",\n    \"ちぬり\",\n    \"ちのう\",\n    \"ちひょう\",\n    \"ちへいせん\",\n    \"ちほう\",\n    \"ちまた\",\n    \"ちみつ\",\n    \"ちみどろ\",\n    \"ちめいど\",\n    \"ちゃんこなべ\",\n    \"ちゅうい\",\n    \"ちゆりょく\",\n    \"ちょうし\",\n    \"ちょさくけん\",\n    \"ちらし\",\n    \"ちらみ\",\n    \"ちりがみ\",\n    \"ちりょう\",\n    \"ちるど\",\n    \"ちわわ\",\n    \"ちんたい\",\n    \"ちんもく\",\n    \"ついか\",\n    \"ついたち\",\n    \"つうか\",\n    \"つうじょう\",\n    \"つうはん\",\n    \"つうわ\",\n    \"つかう\",\n    \"つかれる\",\n    \"つくね\",\n    \"つくる\",\n    \"つけね\",\n    \"つける\",\n    \"つごう\",\n    \"つたえる\",\n    \"つづく\",\n    \"つつじ\",\n    \"つつむ\",\n    \"つとめる\",\n    \"つながる\",\n    \"つなみ\",\n    \"つねづね\",\n    \"つのる\",\n    \"つぶす\",\n    \"つまらない\",\n    \"つまる\",\n    \"つみき\",\n    \"つめたい\",\n    \"つもり\",\n    \"つもる\",\n    \"つよい\",\n    \"つるぼ\",\n    \"つるみく\",\n    \"つわもの\",\n    \"つわり\",\n    \"てあし\",\n    \"てあて\",\n    \"てあみ\",\n    \"ていおん\",\n    \"ていか\",\n    \"ていき\",\n    \"ていけい\",\n    \"ていこく\",\n    \"ていさつ\",\n    \"ていし\",\n    \"ていせい\",\n    \"ていたい\",\n    \"ていど\",\n    \"ていねい\",\n    \"ていひょう\",\n    \"ていへん\",\n    \"ていぼう\",\n    \"てうち\",\n    \"ておくれ\",\n    \"てきとう\",\n    \"てくび\",\n    \"でこぼこ\",\n    \"てさぎょう\",\n    \"てさげ\",\n    \"てすり\",\n    \"てそう\",\n    \"てちがい\",\n    \"てちょう\",\n    \"てつがく\",\n    \"てつづき\",\n    \"でっぱ\",\n    \"てつぼう\",\n    \"てつや\",\n    \"でぬかえ\",\n    \"てぬき\",\n    \"てぬぐい\",\n    \"てのひら\",\n    \"てはい\",\n    \"てぶくろ\",\n    \"てふだ\",\n    \"てほどき\",\n    \"てほん\",\n    \"てまえ\",\n    \"てまきずし\",\n    \"てみじか\",\n    \"てみやげ\",\n    \"てらす\",\n    \"てれび\",\n    \"てわけ\",\n    \"てわたし\",\n    \"でんあつ\",\n    \"てんいん\",\n    \"てんかい\",\n    \"てんき\",\n    \"てんぐ\",\n    \"てんけん\",\n    \"てんごく\",\n    \"てんさい\",\n    \"てんし\",\n    \"てんすう\",\n    \"でんち\",\n    \"てんてき\",\n    \"てんとう\",\n    \"てんない\",\n    \"てんぷら\",\n    \"てんぼうだい\",\n    \"てんめつ\",\n    \"てんらんかい\",\n    \"でんりょく\",\n    \"でんわ\",\n    \"どあい\",\n    \"といれ\",\n    \"どうかん\",\n    \"とうきゅう\",\n    \"どうぐ\",\n    \"とうし\",\n    \"とうむぎ\",\n    \"とおい\",\n    \"とおか\",\n    \"とおく\",\n    \"とおす\",\n    \"とおる\",\n    \"とかい\",\n    \"とかす\",\n    \"ときおり\",\n    \"ときどき\",\n    \"とくい\",\n    \"とくしゅう\",\n    \"とくてん\",\n    \"とくに\",\n    \"とくべつ\",\n    \"とけい\",\n    \"とける\",\n    \"とこや\",\n    \"とさか\",\n    \"としょかん\",\n    \"とそう\",\n    \"とたん\",\n    \"とちゅう\",\n    \"とっきゅう\",\n    \"とっくん\",\n    \"とつぜん\",\n    \"とつにゅう\",\n    \"とどける\",\n    \"ととのえる\",\n    \"とない\",\n    \"となえる\",\n    \"となり\",\n    \"とのさま\",\n    \"とばす\",\n    \"どぶがわ\",\n    \"とほう\",\n    \"とまる\",\n    \"とめる\",\n    \"ともだち\",\n    \"ともる\",\n    \"どようび\",\n    \"とらえる\",\n    \"とんかつ\",\n    \"どんぶり\",\n    \"ないかく\",\n    \"ないこう\",\n    \"ないしょ\",\n    \"ないす\",\n    \"ないせん\",\n    \"ないそう\",\n    \"なおす\",\n    \"ながい\",\n    \"なくす\",\n    \"なげる\",\n    \"なこうど\",\n    \"なさけ\",\n    \"なたでここ\",\n    \"なっとう\",\n    \"なつやすみ\",\n    \"ななおし\",\n    \"なにごと\",\n    \"なにもの\",\n    \"なにわ\",\n    \"なのか\",\n    \"なふだ\",\n    \"なまいき\",\n    \"なまえ\",\n    \"なまみ\",\n    \"なみだ\",\n    \"なめらか\",\n    \"なめる\",\n    \"なやむ\",\n    \"ならう\",\n    \"ならび\",\n    \"ならぶ\",\n    \"なれる\",\n    \"なわとび\",\n    \"なわばり\",\n    \"にあう\",\n    \"にいがた\",\n    \"にうけ\",\n    \"におい\",\n    \"にかい\",\n    \"にがて\",\n    \"にきび\",\n    \"にくしみ\",\n    \"にくまん\",\n    \"にげる\",\n    \"にさんかたんそ\",\n    \"にしき\",\n    \"にせもの\",\n    \"にちじょう\",\n    \"にちようび\",\n    \"にっか\",\n    \"にっき\",\n    \"にっけい\",\n    \"にっこう\",\n    \"にっさん\",\n    \"にっしょく\",\n    \"にっすう\",\n    \"にっせき\",\n    \"にってい\",\n    \"になう\",\n    \"にほん\",\n    \"にまめ\",\n    \"にもつ\",\n    \"にやり\",\n    \"にゅういん\",\n    \"にりんしゃ\",\n    \"にわとり\",\n    \"にんい\",\n    \"にんか\",\n    \"にんき\",\n    \"にんげん\",\n    \"にんしき\",\n    \"にんずう\",\n    \"にんそう\",\n    \"にんたい\",\n    \"にんち\",\n    \"にんてい\",\n    \"にんにく\",\n    \"にんぷ\",\n    \"にんまり\",\n    \"にんむ\",\n    \"にんめい\",\n    \"にんよう\",\n    \"ぬいくぎ\",\n    \"ぬかす\",\n    \"ぬぐいとる\",\n    \"ぬぐう\",\n    \"ぬくもり\",\n    \"ぬすむ\",\n    \"ぬまえび\",\n    \"ぬめり\",\n    \"ぬらす\",\n    \"ぬんちゃく\",\n    \"ねあげ\",\n    \"ねいき\",\n    \"ねいる\",\n    \"ねいろ\",\n    \"ねぐせ\",\n    \"ねくたい\",\n    \"ねくら\",\n    \"ねこぜ\",\n    \"ねこむ\",\n    \"ねさげ\",\n    \"ねすごす\",\n    \"ねそべる\",\n    \"ねだん\",\n    \"ねつい\",\n    \"ねっしん\",\n    \"ねつぞう\",\n    \"ねったいぎょ\",\n    \"ねぶそく\",\n    \"ねふだ\",\n    \"ねぼう\",\n    \"ねほりはほり\",\n    \"ねまき\",\n    \"ねまわし\",\n    \"ねみみ\",\n    \"ねむい\",\n    \"ねむたい\",\n    \"ねもと\",\n    \"ねらう\",\n    \"ねわざ\",\n    \"ねんいり\",\n    \"ねんおし\",\n    \"ねんかん\",\n    \"ねんきん\",\n    \"ねんぐ\",\n    \"ねんざ\",\n    \"ねんし\",\n    \"ねんちゃく\",\n    \"ねんど\",\n    \"ねんぴ\",\n    \"ねんぶつ\",\n    \"ねんまつ\",\n    \"ねんりょう\",\n    \"ねんれい\",\n    \"のいず\",\n    \"のおづま\",\n    \"のがす\",\n    \"のきなみ\",\n    \"のこぎり\",\n    \"のこす\",\n    \"のこる\",\n    \"のせる\",\n    \"のぞく\",\n    \"のぞむ\",\n    \"のたまう\",\n    \"のちほど\",\n    \"のっく\",\n    \"のばす\",\n    \"のはら\",\n    \"のべる\",\n    \"のぼる\",\n    \"のみもの\",\n    \"のやま\",\n    \"のらいぬ\",\n    \"のらねこ\",\n    \"のりもの\",\n    \"のりゆき\",\n    \"のれん\",\n    \"のんき\",\n    \"ばあい\",\n    \"はあく\",\n    \"ばあさん\",\n    \"ばいか\",\n    \"ばいく\",\n    \"はいけん\",\n    \"はいご\",\n    \"はいしん\",\n    \"はいすい\",\n    \"はいせん\",\n    \"はいそう\",\n    \"はいち\",\n    \"ばいばい\",\n    \"はいれつ\",\n    \"はえる\",\n    \"はおる\",\n    \"はかい\",\n    \"ばかり\",\n    \"はかる\",\n    \"はくしゅ\",\n    \"はけん\",\n    \"はこぶ\",\n    \"はさみ\",\n    \"はさん\",\n    \"はしご\",\n    \"ばしょ\",\n    \"はしる\",\n    \"はせる\",\n    \"ぱそこん\",\n    \"はそん\",\n    \"はたん\",\n    \"はちみつ\",\n    \"はつおん\",\n    \"はっかく\",\n    \"はづき\",\n    \"はっきり\",\n    \"はっくつ\",\n    \"はっけん\",\n    \"はっこう\",\n    \"はっさん\",\n    \"はっしん\",\n    \"はったつ\",\n    \"はっちゅう\",\n    \"はってん\",\n    \"はっぴょう\",\n    \"はっぽう\",\n    \"はなす\",\n    \"はなび\",\n    \"はにかむ\",\n    \"はぶらし\",\n    \"はみがき\",\n    \"はむかう\",\n    \"はめつ\",\n    \"はやい\",\n    \"はやし\",\n    \"はらう\",\n    \"はろうぃん\",\n    \"はわい\",\n    \"はんい\",\n    \"はんえい\",\n    \"はんおん\",\n    \"はんかく\",\n    \"はんきょう\",\n    \"ばんぐみ\",\n    \"はんこ\",\n    \"はんしゃ\",\n    \"はんすう\",\n    \"はんだん\",\n    \"ぱんち\",\n    \"ぱんつ\",\n    \"はんてい\",\n    \"はんとし\",\n    \"はんのう\",\n    \"はんぱ\",\n    \"はんぶん\",\n    \"はんぺん\",\n    \"はんぼうき\",\n    \"はんめい\",\n    \"はんらん\",\n    \"はんろん\",\n    \"ひいき\",\n    \"ひうん\",\n    \"ひえる\",\n    \"ひかく\",\n    \"ひかり\",\n    \"ひかる\",\n    \"ひかん\",\n    \"ひくい\",\n    \"ひけつ\",\n    \"ひこうき\",\n    \"ひこく\",\n    \"ひさい\",\n    \"ひさしぶり\",\n    \"ひさん\",\n    \"びじゅつかん\",\n    \"ひしょ\",\n    \"ひそか\",\n    \"ひそむ\",\n    \"ひたむき\",\n    \"ひだり\",\n    \"ひたる\",\n    \"ひつぎ\",\n    \"ひっこし\",\n    \"ひっし\",\n    \"ひつじゅひん\",\n    \"ひっす\",\n    \"ひつぜん\",\n    \"ぴったり\",\n    \"ぴっちり\",\n    \"ひつよう\",\n    \"ひてい\",\n    \"ひとごみ\",\n    \"ひなまつり\",\n    \"ひなん\",\n    \"ひねる\",\n    \"ひはん\",\n    \"ひびく\",\n    \"ひひょう\",\n    \"ひほう\",\n    \"ひまわり\",\n    \"ひまん\",\n    \"ひみつ\",\n    \"ひめい\",\n    \"ひめじし\",\n    \"ひやけ\",\n    \"ひやす\",\n    \"ひよう\",\n    \"びょうき\",\n    \"ひらがな\",\n    \"ひらく\",\n    \"ひりつ\",\n    \"ひりょう\",\n    \"ひるま\",\n    \"ひるやすみ\",\n    \"ひれい\",\n    \"ひろい\",\n    \"ひろう\",\n    \"ひろき\",\n    \"ひろゆき\",\n    \"ひんかく\",\n    \"ひんけつ\",\n    \"ひんこん\",\n    \"ひんしゅ\",\n    \"ひんそう\",\n    \"ぴんち\",\n    \"ひんぱん\",\n    \"びんぼう\",\n    \"ふあん\",\n    \"ふいうち\",\n    \"ふうけい\",\n    \"ふうせん\",\n    \"ぷうたろう\",\n    \"ふうとう\",\n    \"ふうふ\",\n    \"ふえる\",\n    \"ふおん\",\n    \"ふかい\",\n    \"ふきん\",\n    \"ふくざつ\",\n    \"ふくぶくろ\",\n    \"ふこう\",\n    \"ふさい\",\n    \"ふしぎ\",\n    \"ふじみ\",\n    \"ふすま\",\n    \"ふせい\",\n    \"ふせぐ\",\n    \"ふそく\",\n    \"ぶたにく\",\n    \"ふたん\",\n    \"ふちょう\",\n    \"ふつう\",\n    \"ふつか\",\n    \"ふっかつ\",\n    \"ふっき\",\n    \"ふっこく\",\n    \"ぶどう\",\n    \"ふとる\",\n    \"ふとん\",\n    \"ふのう\",\n    \"ふはい\",\n    \"ふひょう\",\n    \"ふへん\",\n    \"ふまん\",\n    \"ふみん\",\n    \"ふめつ\",\n    \"ふめん\",\n    \"ふよう\",\n    \"ふりこ\",\n    \"ふりる\",\n    \"ふるい\",\n    \"ふんいき\",\n    \"ぶんがく\",\n    \"ぶんぐ\",\n    \"ふんしつ\",\n    \"ぶんせき\",\n    \"ふんそう\",\n    \"ぶんぽう\",\n    \"へいあん\",\n    \"へいおん\",\n    \"へいがい\",\n    \"へいき\",\n    \"へいげん\",\n    \"へいこう\",\n    \"へいさ\",\n    \"へいしゃ\",\n    \"へいせつ\",\n    \"へいそ\",\n    \"へいたく\",\n    \"へいてん\",\n    \"へいねつ\",\n    \"へいわ\",\n    \"へきが\",\n    \"へこむ\",\n    \"べにいろ\",\n    \"べにしょうが\",\n    \"へらす\",\n    \"へんかん\",\n    \"べんきょう\",\n    \"べんごし\",\n    \"へんさい\",\n    \"へんたい\",\n    \"べんり\",\n    \"ほあん\",\n    \"ほいく\",\n    \"ぼうぎょ\",\n    \"ほうこく\",\n    \"ほうそう\",\n    \"ほうほう\",\n    \"ほうもん\",\n    \"ほうりつ\",\n    \"ほえる\",\n    \"ほおん\",\n    \"ほかん\",\n    \"ほきょう\",\n    \"ぼきん\",\n    \"ほくろ\",\n    \"ほけつ\",\n    \"ほけん\",\n    \"ほこう\",\n    \"ほこる\",\n    \"ほしい\",\n    \"ほしつ\",\n    \"ほしゅ\",\n    \"ほしょう\",\n    \"ほせい\",\n    \"ほそい\",\n    \"ほそく\",\n    \"ほたて\",\n    \"ほたる\",\n    \"ぽちぶくろ\",\n    \"ほっきょく\",\n    \"ほっさ\",\n    \"ほったん\",\n    \"ほとんど\",\n    \"ほめる\",\n    \"ほんい\",\n    \"ほんき\",\n    \"ほんけ\",\n    \"ほんしつ\",\n    \"ほんやく\",\n    \"まいにち\",\n    \"まかい\",\n    \"まかせる\",\n    \"まがる\",\n    \"まける\",\n    \"まこと\",\n    \"まさつ\",\n    \"まじめ\",\n    \"ますく\",\n    \"まぜる\",\n    \"まつり\",\n    \"まとめ\",\n    \"まなぶ\",\n    \"まぬけ\",\n    \"まねく\",\n    \"まほう\",\n    \"まもる\",\n    \"まゆげ\",\n    \"まよう\",\n    \"まろやか\",\n    \"まわす\",\n    \"まわり\",\n    \"まわる\",\n    \"まんが\",\n    \"まんきつ\",\n    \"まんぞく\",\n    \"まんなか\",\n    \"みいら\",\n    \"みうち\",\n    \"みえる\",\n    \"みがく\",\n    \"みかた\",\n    \"みかん\",\n    \"みけん\",\n    \"みこん\",\n    \"みじかい\",\n    \"みすい\",\n    \"みすえる\",\n    \"みせる\",\n    \"みっか\",\n    \"みつかる\",\n    \"みつける\",\n    \"みてい\",\n    \"みとめる\",\n    \"みなと\",\n    \"みなみかさい\",\n    \"みねらる\",\n    \"みのう\",\n    \"みのがす\",\n    \"みほん\",\n    \"みもと\",\n    \"みやげ\",\n    \"みらい\",\n    \"みりょく\",\n    \"みわく\",\n    \"みんか\",\n    \"みんぞく\",\n    \"むいか\",\n    \"むえき\",\n    \"むえん\",\n    \"むかい\",\n    \"むかう\",\n    \"むかえ\",\n    \"むかし\",\n    \"むぎちゃ\",\n    \"むける\",\n    \"むげん\",\n    \"むさぼる\",\n    \"むしあつい\",\n    \"むしば\",\n    \"むじゅん\",\n    \"むしろ\",\n    \"むすう\",\n    \"むすこ\",\n    \"むすぶ\",\n    \"むすめ\",\n    \"むせる\",\n    \"むせん\",\n    \"むちゅう\",\n    \"むなしい\",\n    \"むのう\",\n    \"むやみ\",\n    \"むよう\",\n    \"むらさき\",\n    \"むりょう\",\n    \"むろん\",\n    \"めいあん\",\n    \"めいうん\",\n    \"めいえん\",\n    \"めいかく\",\n    \"めいきょく\",\n    \"めいさい\",\n    \"めいし\",\n    \"めいそう\",\n    \"めいぶつ\",\n    \"めいれい\",\n    \"めいわく\",\n    \"めぐまれる\",\n    \"めざす\",\n    \"めした\",\n    \"めずらしい\",\n    \"めだつ\",\n    \"めまい\",\n    \"めやす\",\n    \"めんきょ\",\n    \"めんせき\",\n    \"めんどう\",\n    \"もうしあげる\",\n    \"もうどうけん\",\n    \"もえる\",\n    \"もくし\",\n    \"もくてき\",\n    \"もくようび\",\n    \"もちろん\",\n    \"もどる\",\n    \"もらう\",\n    \"もんく\",\n    \"もんだい\",\n    \"やおや\",\n    \"やける\",\n    \"やさい\",\n    \"やさしい\",\n    \"やすい\",\n    \"やすたろう\",\n    \"やすみ\",\n    \"やせる\",\n    \"やそう\",\n    \"やたい\",\n    \"やちん\",\n    \"やっと\",\n    \"やっぱり\",\n    \"やぶる\",\n    \"やめる\",\n    \"ややこしい\",\n    \"やよい\",\n    \"やわらかい\",\n    \"ゆうき\",\n    \"ゆうびんきょく\",\n    \"ゆうべ\",\n    \"ゆうめい\",\n    \"ゆけつ\",\n    \"ゆしゅつ\",\n    \"ゆせん\",\n    \"ゆそう\",\n    \"ゆたか\",\n    \"ゆちゃく\",\n    \"ゆでる\",\n    \"ゆにゅう\",\n    \"ゆびわ\",\n    \"ゆらい\",\n    \"ゆれる\",\n    \"ようい\",\n    \"ようか\",\n    \"ようきゅう\",\n    \"ようじ\",\n    \"ようす\",\n    \"ようちえん\",\n    \"よかぜ\",\n    \"よかん\",\n    \"よきん\",\n    \"よくせい\",\n    \"よくぼう\",\n    \"よけい\",\n    \"よごれる\",\n    \"よさん\",\n    \"よしゅう\",\n    \"よそう\",\n    \"よそく\",\n    \"よっか\",\n    \"よてい\",\n    \"よどがわく\",\n    \"よねつ\",\n    \"よやく\",\n    \"よゆう\",\n    \"よろこぶ\",\n    \"よろしい\",\n    \"らいう\",\n    \"らくがき\",\n    \"らくご\",\n    \"らくさつ\",\n    \"らくだ\",\n    \"らしんばん\",\n    \"らせん\",\n    \"らぞく\",\n    \"らたい\",\n    \"らっか\",\n    \"られつ\",\n    \"りえき\",\n    \"りかい\",\n    \"りきさく\",\n    \"りきせつ\",\n    \"りくぐん\",\n    \"りくつ\",\n    \"りけん\",\n    \"りこう\",\n    \"りせい\",\n    \"りそう\",\n    \"りそく\",\n    \"りてん\",\n    \"りねん\",\n    \"りゆう\",\n    \"りゅうがく\",\n    \"りよう\",\n    \"りょうり\",\n    \"りょかん\",\n    \"りょくちゃ\",\n    \"りょこう\",\n    \"りりく\",\n    \"りれき\",\n    \"りろん\",\n    \"りんご\",\n    \"るいけい\",\n    \"るいさい\",\n    \"るいじ\",\n    \"るいせき\",\n    \"るすばん\",\n    \"るりがわら\",\n    \"れいかん\",\n    \"れいぎ\",\n    \"れいせい\",\n    \"れいぞうこ\",\n    \"れいとう\",\n    \"れいぼう\",\n    \"れきし\",\n    \"れきだい\",\n    \"れんあい\",\n    \"れんけい\",\n    \"れんこん\",\n    \"れんさい\",\n    \"れんしゅう\",\n    \"れんぞく\",\n    \"れんらく\",\n    \"ろうか\",\n    \"ろうご\",\n    \"ろうじん\",\n    \"ろうそく\",\n    \"ろくが\",\n    \"ろこつ\",\n    \"ろじうら\",\n    \"ろしゅつ\",\n    \"ろせん\",\n    \"ろてん\",\n    \"ろめん\",\n    \"ろれつ\",\n    \"ろんぎ\",\n    \"ろんぱ\",\n    \"ろんぶん\",\n    \"ろんり\",\n    \"わかす\",\n    \"わかめ\",\n    \"わかやま\",\n    \"わかれる\",\n    \"わしつ\",\n    \"わじまし\",\n    \"わすれもの\",\n    \"わらう\",\n    \"われる\"\n]\n","module.exports=[\n    \"abacate\",\n    \"abaixo\",\n    \"abalar\",\n    \"abater\",\n    \"abduzir\",\n    \"abelha\",\n    \"aberto\",\n    \"abismo\",\n    \"abotoar\",\n    \"abranger\",\n    \"abreviar\",\n    \"abrigar\",\n    \"abrupto\",\n    \"absinto\",\n    \"absoluto\",\n    \"absurdo\",\n    \"abutre\",\n    \"acabado\",\n    \"acalmar\",\n    \"acampar\",\n    \"acanhar\",\n    \"acaso\",\n    \"aceitar\",\n    \"acelerar\",\n    \"acenar\",\n    \"acervo\",\n    \"acessar\",\n    \"acetona\",\n    \"achatar\",\n    \"acidez\",\n    \"acima\",\n    \"acionado\",\n    \"acirrar\",\n    \"aclamar\",\n    \"aclive\",\n    \"acolhida\",\n    \"acomodar\",\n    \"acoplar\",\n    \"acordar\",\n    \"acumular\",\n    \"acusador\",\n    \"adaptar\",\n    \"adega\",\n    \"adentro\",\n    \"adepto\",\n    \"adequar\",\n    \"aderente\",\n    \"adesivo\",\n    \"adeus\",\n    \"adiante\",\n    \"aditivo\",\n    \"adjetivo\",\n    \"adjunto\",\n    \"admirar\",\n    \"adorar\",\n    \"adquirir\",\n    \"adubo\",\n    \"adverso\",\n    \"advogado\",\n    \"aeronave\",\n    \"afastar\",\n    \"aferir\",\n    \"afetivo\",\n    \"afinador\",\n    \"afivelar\",\n    \"aflito\",\n    \"afluente\",\n    \"afrontar\",\n    \"agachar\",\n    \"agarrar\",\n    \"agasalho\",\n    \"agenciar\",\n    \"agilizar\",\n    \"agiota\",\n    \"agitado\",\n    \"agora\",\n    \"agradar\",\n    \"agreste\",\n    \"agrupar\",\n    \"aguardar\",\n    \"agulha\",\n    \"ajoelhar\",\n    \"ajudar\",\n    \"ajustar\",\n    \"alameda\",\n    \"alarme\",\n    \"alastrar\",\n    \"alavanca\",\n    \"albergue\",\n    \"albino\",\n    \"alcatra\",\n    \"aldeia\",\n    \"alecrim\",\n    \"alegria\",\n    \"alertar\",\n    \"alface\",\n    \"alfinete\",\n    \"algum\",\n    \"alheio\",\n    \"aliar\",\n    \"alicate\",\n    \"alienar\",\n    \"alinhar\",\n    \"aliviar\",\n    \"almofada\",\n    \"alocar\",\n    \"alpiste\",\n    \"alterar\",\n    \"altitude\",\n    \"alucinar\",\n    \"alugar\",\n    \"aluno\",\n    \"alusivo\",\n    \"alvo\",\n    \"amaciar\",\n    \"amador\",\n    \"amarelo\",\n    \"amassar\",\n    \"ambas\",\n    \"ambiente\",\n    \"ameixa\",\n    \"amenizar\",\n    \"amido\",\n    \"amistoso\",\n    \"amizade\",\n    \"amolador\",\n    \"amontoar\",\n    \"amoroso\",\n    \"amostra\",\n    \"amparar\",\n    \"ampliar\",\n    \"ampola\",\n    \"anagrama\",\n    \"analisar\",\n    \"anarquia\",\n    \"anatomia\",\n    \"andaime\",\n    \"anel\",\n    \"anexo\",\n    \"angular\",\n    \"animar\",\n    \"anjo\",\n    \"anomalia\",\n    \"anotado\",\n    \"ansioso\",\n    \"anterior\",\n    \"anuidade\",\n    \"anunciar\",\n    \"anzol\",\n    \"apagador\",\n    \"apalpar\",\n    \"apanhado\",\n    \"apego\",\n    \"apelido\",\n    \"apertada\",\n    \"apesar\",\n    \"apetite\",\n    \"apito\",\n    \"aplauso\",\n    \"aplicada\",\n    \"apoio\",\n    \"apontar\",\n    \"aposta\",\n    \"aprendiz\",\n    \"aprovar\",\n    \"aquecer\",\n    \"arame\",\n    \"aranha\",\n    \"arara\",\n    \"arcada\",\n    \"ardente\",\n    \"areia\",\n    \"arejar\",\n    \"arenito\",\n    \"aresta\",\n    \"argiloso\",\n    \"argola\",\n    \"arma\",\n    \"arquivo\",\n    \"arraial\",\n    \"arrebate\",\n    \"arriscar\",\n    \"arroba\",\n    \"arrumar\",\n    \"arsenal\",\n    \"arterial\",\n    \"artigo\",\n    \"arvoredo\",\n    \"asfaltar\",\n    \"asilado\",\n    \"aspirar\",\n    \"assador\",\n    \"assinar\",\n    \"assoalho\",\n    \"assunto\",\n    \"astral\",\n    \"atacado\",\n    \"atadura\",\n    \"atalho\",\n    \"atarefar\",\n    \"atear\",\n    \"atender\",\n    \"aterro\",\n    \"ateu\",\n    \"atingir\",\n    \"atirador\",\n    \"ativo\",\n    \"atoleiro\",\n    \"atracar\",\n    \"atrevido\",\n    \"atriz\",\n    \"atual\",\n    \"atum\",\n    \"auditor\",\n    \"aumentar\",\n    \"aura\",\n    \"aurora\",\n    \"autismo\",\n    \"autoria\",\n    \"autuar\",\n    \"avaliar\",\n    \"avante\",\n    \"avaria\",\n    \"avental\",\n    \"avesso\",\n    \"aviador\",\n    \"avisar\",\n    \"avulso\",\n    \"axila\",\n    \"azarar\",\n    \"azedo\",\n    \"azeite\",\n    \"azulejo\",\n    \"babar\",\n    \"babosa\",\n    \"bacalhau\",\n    \"bacharel\",\n    \"bacia\",\n    \"bagagem\",\n    \"baiano\",\n    \"bailar\",\n    \"baioneta\",\n    \"bairro\",\n    \"baixista\",\n    \"bajular\",\n    \"baleia\",\n    \"baliza\",\n    \"balsa\",\n    \"banal\",\n    \"bandeira\",\n    \"banho\",\n    \"banir\",\n    \"banquete\",\n    \"barato\",\n    \"barbado\",\n    \"baronesa\",\n    \"barraca\",\n    \"barulho\",\n    \"baseado\",\n    \"bastante\",\n    \"batata\",\n    \"batedor\",\n    \"batida\",\n    \"batom\",\n    \"batucar\",\n    \"baunilha\",\n    \"beber\",\n    \"beijo\",\n    \"beirada\",\n    \"beisebol\",\n    \"beldade\",\n    \"beleza\",\n    \"belga\",\n    \"beliscar\",\n    \"bendito\",\n    \"bengala\",\n    \"benzer\",\n    \"berimbau\",\n    \"berlinda\",\n    \"berro\",\n    \"besouro\",\n    \"bexiga\",\n    \"bezerro\",\n    \"bico\",\n    \"bicudo\",\n    \"bienal\",\n    \"bifocal\",\n    \"bifurcar\",\n    \"bigorna\",\n    \"bilhete\",\n    \"bimestre\",\n    \"bimotor\",\n    \"biologia\",\n    \"biombo\",\n    \"biosfera\",\n    \"bipolar\",\n    \"birrento\",\n    \"biscoito\",\n    \"bisneto\",\n    \"bispo\",\n    \"bissexto\",\n    \"bitola\",\n    \"bizarro\",\n    \"blindado\",\n    \"bloco\",\n    \"bloquear\",\n    \"boato\",\n    \"bobagem\",\n    \"bocado\",\n    \"bocejo\",\n    \"bochecha\",\n    \"boicotar\",\n    \"bolada\",\n    \"boletim\",\n    \"bolha\",\n    \"bolo\",\n    \"bombeiro\",\n    \"bonde\",\n    \"boneco\",\n    \"bonita\",\n    \"borbulha\",\n    \"borda\",\n    \"boreal\",\n    \"borracha\",\n    \"bovino\",\n    \"boxeador\",\n    \"branco\",\n    \"brasa\",\n    \"braveza\",\n    \"breu\",\n    \"briga\",\n    \"brilho\",\n    \"brincar\",\n    \"broa\",\n    \"brochura\",\n    \"bronzear\",\n    \"broto\",\n    \"bruxo\",\n    \"bucha\",\n    \"budismo\",\n    \"bufar\",\n    \"bule\",\n    \"buraco\",\n    \"busca\",\n    \"busto\",\n    \"buzina\",\n    \"cabana\",\n    \"cabelo\",\n    \"cabide\",\n    \"cabo\",\n    \"cabrito\",\n    \"cacau\",\n    \"cacetada\",\n    \"cachorro\",\n    \"cacique\",\n    \"cadastro\",\n    \"cadeado\",\n    \"cafezal\",\n    \"caiaque\",\n    \"caipira\",\n    \"caixote\",\n    \"cajado\",\n    \"caju\",\n    \"calafrio\",\n    \"calcular\",\n    \"caldeira\",\n    \"calibrar\",\n    \"calmante\",\n    \"calota\",\n    \"camada\",\n    \"cambista\",\n    \"camisa\",\n    \"camomila\",\n    \"campanha\",\n    \"camuflar\",\n    \"canavial\",\n    \"cancelar\",\n    \"caneta\",\n    \"canguru\",\n    \"canhoto\",\n    \"canivete\",\n    \"canoa\",\n    \"cansado\",\n    \"cantar\",\n    \"canudo\",\n    \"capacho\",\n    \"capela\",\n    \"capinar\",\n    \"capotar\",\n    \"capricho\",\n    \"captador\",\n    \"capuz\",\n    \"caracol\",\n    \"carbono\",\n    \"cardeal\",\n    \"careca\",\n    \"carimbar\",\n    \"carneiro\",\n    \"carpete\",\n    \"carreira\",\n    \"cartaz\",\n    \"carvalho\",\n    \"casaco\",\n    \"casca\",\n    \"casebre\",\n    \"castelo\",\n    \"casulo\",\n    \"catarata\",\n    \"cativar\",\n    \"caule\",\n    \"causador\",\n    \"cautelar\",\n    \"cavalo\",\n    \"caverna\",\n    \"cebola\",\n    \"cedilha\",\n    \"cegonha\",\n    \"celebrar\",\n    \"celular\",\n    \"cenoura\",\n    \"censo\",\n    \"centeio\",\n    \"cercar\",\n    \"cerrado\",\n    \"certeiro\",\n    \"cerveja\",\n    \"cetim\",\n    \"cevada\",\n    \"chacota\",\n    \"chaleira\",\n    \"chamado\",\n    \"chapada\",\n    \"charme\",\n    \"chatice\",\n    \"chave\",\n    \"chefe\",\n    \"chegada\",\n    \"cheiro\",\n    \"cheque\",\n    \"chicote\",\n    \"chifre\",\n    \"chinelo\",\n    \"chocalho\",\n    \"chover\",\n    \"chumbo\",\n    \"chutar\",\n    \"chuva\",\n    \"cicatriz\",\n    \"ciclone\",\n    \"cidade\",\n    \"cidreira\",\n    \"ciente\",\n    \"cigana\",\n    \"cimento\",\n    \"cinto\",\n    \"cinza\",\n    \"ciranda\",\n    \"circuito\",\n    \"cirurgia\",\n    \"citar\",\n    \"clareza\",\n    \"clero\",\n    \"clicar\",\n    \"clone\",\n    \"clube\",\n    \"coado\",\n    \"coagir\",\n    \"cobaia\",\n    \"cobertor\",\n    \"cobrar\",\n    \"cocada\",\n    \"coelho\",\n    \"coentro\",\n    \"coeso\",\n    \"cogumelo\",\n    \"coibir\",\n    \"coifa\",\n    \"coiote\",\n    \"colar\",\n    \"coleira\",\n    \"colher\",\n    \"colidir\",\n    \"colmeia\",\n    \"colono\",\n    \"coluna\",\n    \"comando\",\n    \"combinar\",\n    \"comentar\",\n    \"comitiva\",\n    \"comover\",\n    \"complexo\",\n    \"comum\",\n    \"concha\",\n    \"condor\",\n    \"conectar\",\n    \"confuso\",\n    \"congelar\",\n    \"conhecer\",\n    \"conjugar\",\n    \"consumir\",\n    \"contrato\",\n    \"convite\",\n    \"cooperar\",\n    \"copeiro\",\n    \"copiador\",\n    \"copo\",\n    \"coquetel\",\n    \"coragem\",\n    \"cordial\",\n    \"corneta\",\n    \"coronha\",\n    \"corporal\",\n    \"correio\",\n    \"cortejo\",\n    \"coruja\",\n    \"corvo\",\n    \"cosseno\",\n    \"costela\",\n    \"cotonete\",\n    \"couro\",\n    \"couve\",\n    \"covil\",\n    \"cozinha\",\n    \"cratera\",\n    \"cravo\",\n    \"creche\",\n    \"credor\",\n    \"creme\",\n    \"crer\",\n    \"crespo\",\n    \"criada\",\n    \"criminal\",\n    \"crioulo\",\n    \"crise\",\n    \"criticar\",\n    \"crosta\",\n    \"crua\",\n    \"cruzeiro\",\n    \"cubano\",\n    \"cueca\",\n    \"cuidado\",\n    \"cujo\",\n    \"culatra\",\n    \"culminar\",\n    \"culpar\",\n    \"cultura\",\n    \"cumprir\",\n    \"cunhado\",\n    \"cupido\",\n    \"curativo\",\n    \"curral\",\n    \"cursar\",\n    \"curto\",\n    \"cuspir\",\n    \"custear\",\n    \"cutelo\",\n    \"damasco\",\n    \"datar\",\n    \"debater\",\n    \"debitar\",\n    \"deboche\",\n    \"debulhar\",\n    \"decalque\",\n    \"decimal\",\n    \"declive\",\n    \"decote\",\n    \"decretar\",\n    \"dedal\",\n    \"dedicado\",\n    \"deduzir\",\n    \"defesa\",\n    \"defumar\",\n    \"degelo\",\n    \"degrau\",\n    \"degustar\",\n    \"deitado\",\n    \"deixar\",\n    \"delator\",\n    \"delegado\",\n    \"delinear\",\n    \"delonga\",\n    \"demanda\",\n    \"demitir\",\n    \"demolido\",\n    \"dentista\",\n    \"depenado\",\n    \"depilar\",\n    \"depois\",\n    \"depressa\",\n    \"depurar\",\n    \"deriva\",\n    \"derramar\",\n    \"desafio\",\n    \"desbotar\",\n    \"descanso\",\n    \"desenho\",\n    \"desfiado\",\n    \"desgaste\",\n    \"desigual\",\n    \"deslize\",\n    \"desmamar\",\n    \"desova\",\n    \"despesa\",\n    \"destaque\",\n    \"desviar\",\n    \"detalhar\",\n    \"detentor\",\n    \"detonar\",\n    \"detrito\",\n    \"deusa\",\n    \"dever\",\n    \"devido\",\n    \"devotado\",\n    \"dezena\",\n    \"diagrama\",\n    \"dialeto\",\n    \"didata\",\n    \"difuso\",\n    \"digitar\",\n    \"dilatado\",\n    \"diluente\",\n    \"diminuir\",\n    \"dinastia\",\n    \"dinheiro\",\n    \"diocese\",\n    \"direto\",\n    \"discreta\",\n    \"disfarce\",\n    \"disparo\",\n    \"disquete\",\n    \"dissipar\",\n    \"distante\",\n    \"ditador\",\n    \"diurno\",\n    \"diverso\",\n    \"divisor\",\n    \"divulgar\",\n    \"dizer\",\n    \"dobrador\",\n    \"dolorido\",\n    \"domador\",\n    \"dominado\",\n    \"donativo\",\n    \"donzela\",\n    \"dormente\",\n    \"dorsal\",\n    \"dosagem\",\n    \"dourado\",\n    \"doutor\",\n    \"drenagem\",\n    \"drible\",\n    \"drogaria\",\n    \"duelar\",\n    \"duende\",\n    \"dueto\",\n    \"duplo\",\n    \"duquesa\",\n    \"durante\",\n    \"duvidoso\",\n    \"eclodir\",\n    \"ecoar\",\n    \"ecologia\",\n    \"edificar\",\n    \"edital\",\n    \"educado\",\n    \"efeito\",\n    \"efetivar\",\n    \"ejetar\",\n    \"elaborar\",\n    \"eleger\",\n    \"eleitor\",\n    \"elenco\",\n    \"elevador\",\n    \"eliminar\",\n    \"elogiar\",\n    \"embargo\",\n    \"embolado\",\n    \"embrulho\",\n    \"embutido\",\n    \"emenda\",\n    \"emergir\",\n    \"emissor\",\n    \"empatia\",\n    \"empenho\",\n    \"empinado\",\n    \"empolgar\",\n    \"emprego\",\n    \"empurrar\",\n    \"emulador\",\n    \"encaixe\",\n    \"encenado\",\n    \"enchente\",\n    \"encontro\",\n    \"endeusar\",\n    \"endossar\",\n    \"enfaixar\",\n    \"enfeite\",\n    \"enfim\",\n    \"engajado\",\n    \"engenho\",\n    \"englobar\",\n    \"engomado\",\n    \"engraxar\",\n    \"enguia\",\n    \"enjoar\",\n    \"enlatar\",\n    \"enquanto\",\n    \"enraizar\",\n    \"enrolado\",\n    \"enrugar\",\n    \"ensaio\",\n    \"enseada\",\n    \"ensino\",\n    \"ensopado\",\n    \"entanto\",\n    \"enteado\",\n    \"entidade\",\n    \"entortar\",\n    \"entrada\",\n    \"entulho\",\n    \"envergar\",\n    \"enviado\",\n    \"envolver\",\n    \"enxame\",\n    \"enxerto\",\n    \"enxofre\",\n    \"enxuto\",\n    \"epiderme\",\n    \"equipar\",\n    \"ereto\",\n    \"erguido\",\n    \"errata\",\n    \"erva\",\n    \"ervilha\",\n    \"esbanjar\",\n    \"esbelto\",\n    \"escama\",\n    \"escola\",\n    \"escrita\",\n    \"escuta\",\n    \"esfinge\",\n    \"esfolar\",\n    \"esfregar\",\n    \"esfumado\",\n    \"esgrima\",\n    \"esmalte\",\n    \"espanto\",\n    \"espelho\",\n    \"espiga\",\n    \"esponja\",\n    \"espreita\",\n    \"espumar\",\n    \"esquerda\",\n    \"estaca\",\n    \"esteira\",\n    \"esticar\",\n    \"estofado\",\n    \"estrela\",\n    \"estudo\",\n    \"esvaziar\",\n    \"etanol\",\n    \"etiqueta\",\n    \"euforia\",\n    \"europeu\",\n    \"evacuar\",\n    \"evaporar\",\n    \"evasivo\",\n    \"eventual\",\n    \"evidente\",\n    \"evoluir\",\n    \"exagero\",\n    \"exalar\",\n    \"examinar\",\n    \"exato\",\n    \"exausto\",\n    \"excesso\",\n    \"excitar\",\n    \"exclamar\",\n    \"executar\",\n    \"exemplo\",\n    \"exibir\",\n    \"exigente\",\n    \"exonerar\",\n    \"expandir\",\n    \"expelir\",\n    \"expirar\",\n    \"explanar\",\n    \"exposto\",\n    \"expresso\",\n    \"expulsar\",\n    \"externo\",\n    \"extinto\",\n    \"extrato\",\n    \"fabricar\",\n    \"fabuloso\",\n    \"faceta\",\n    \"facial\",\n    \"fada\",\n    \"fadiga\",\n    \"faixa\",\n    \"falar\",\n    \"falta\",\n    \"familiar\",\n    \"fandango\",\n    \"fanfarra\",\n    \"fantoche\",\n    \"fardado\",\n    \"farelo\",\n    \"farinha\",\n    \"farofa\",\n    \"farpa\",\n    \"fartura\",\n    \"fatia\",\n    \"fator\",\n    \"favorita\",\n    \"faxina\",\n    \"fazenda\",\n    \"fechado\",\n    \"feijoada\",\n    \"feirante\",\n    \"felino\",\n    \"feminino\",\n    \"fenda\",\n    \"feno\",\n    \"fera\",\n    \"feriado\",\n    \"ferrugem\",\n    \"ferver\",\n    \"festejar\",\n    \"fetal\",\n    \"feudal\",\n    \"fiapo\",\n    \"fibrose\",\n    \"ficar\",\n    \"ficheiro\",\n    \"figurado\",\n    \"fileira\",\n    \"filho\",\n    \"filme\",\n    \"filtrar\",\n    \"firmeza\",\n    \"fisgada\",\n    \"fissura\",\n    \"fita\",\n    \"fivela\",\n    \"fixador\",\n    \"fixo\",\n    \"flacidez\",\n    \"flamingo\",\n    \"flanela\",\n    \"flechada\",\n    \"flora\",\n    \"flutuar\",\n    \"fluxo\",\n    \"focal\",\n    \"focinho\",\n    \"fofocar\",\n    \"fogo\",\n    \"foguete\",\n    \"foice\",\n    \"folgado\",\n    \"folheto\",\n    \"forjar\",\n    \"formiga\",\n    \"forno\",\n    \"forte\",\n    \"fosco\",\n    \"fossa\",\n    \"fragata\",\n    \"fralda\",\n    \"frango\",\n    \"frasco\",\n    \"fraterno\",\n    \"freira\",\n    \"frente\",\n    \"fretar\",\n    \"frieza\",\n    \"friso\",\n    \"fritura\",\n    \"fronha\",\n    \"frustrar\",\n    \"fruteira\",\n    \"fugir\",\n    \"fulano\",\n    \"fuligem\",\n    \"fundar\",\n    \"fungo\",\n    \"funil\",\n    \"furador\",\n    \"furioso\",\n    \"futebol\",\n    \"gabarito\",\n    \"gabinete\",\n    \"gado\",\n    \"gaiato\",\n    \"gaiola\",\n    \"gaivota\",\n    \"galega\",\n    \"galho\",\n    \"galinha\",\n    \"galocha\",\n    \"ganhar\",\n    \"garagem\",\n    \"garfo\",\n    \"gargalo\",\n    \"garimpo\",\n    \"garoupa\",\n    \"garrafa\",\n    \"gasoduto\",\n    \"gasto\",\n    \"gata\",\n    \"gatilho\",\n    \"gaveta\",\n    \"gazela\",\n    \"gelado\",\n    \"geleia\",\n    \"gelo\",\n    \"gemada\",\n    \"gemer\",\n    \"gemido\",\n    \"generoso\",\n    \"gengiva\",\n    \"genial\",\n    \"genoma\",\n    \"genro\",\n    \"geologia\",\n    \"gerador\",\n    \"germinar\",\n    \"gesso\",\n    \"gestor\",\n    \"ginasta\",\n    \"gincana\",\n    \"gingado\",\n    \"girafa\",\n    \"girino\",\n    \"glacial\",\n    \"glicose\",\n    \"global\",\n    \"glorioso\",\n    \"goela\",\n    \"goiaba\",\n    \"golfe\",\n    \"golpear\",\n    \"gordura\",\n    \"gorjeta\",\n    \"gorro\",\n    \"gostoso\",\n    \"goteira\",\n    \"governar\",\n    \"gracejo\",\n    \"gradual\",\n    \"grafite\",\n    \"gralha\",\n    \"grampo\",\n    \"granada\",\n    \"gratuito\",\n    \"graveto\",\n    \"graxa\",\n    \"grego\",\n    \"grelhar\",\n    \"greve\",\n    \"grilo\",\n    \"grisalho\",\n    \"gritaria\",\n    \"grosso\",\n    \"grotesco\",\n    \"grudado\",\n    \"grunhido\",\n    \"gruta\",\n    \"guache\",\n    \"guarani\",\n    \"guaxinim\",\n    \"guerrear\",\n    \"guiar\",\n    \"guincho\",\n    \"guisado\",\n    \"gula\",\n    \"guloso\",\n    \"guru\",\n    \"habitar\",\n    \"harmonia\",\n    \"haste\",\n    \"haver\",\n    \"hectare\",\n    \"herdar\",\n    \"heresia\",\n    \"hesitar\",\n    \"hiato\",\n    \"hibernar\",\n    \"hidratar\",\n    \"hiena\",\n    \"hino\",\n    \"hipismo\",\n    \"hipnose\",\n    \"hipoteca\",\n    \"hoje\",\n    \"holofote\",\n    \"homem\",\n    \"honesto\",\n    \"honrado\",\n    \"hormonal\",\n    \"hospedar\",\n    \"humorado\",\n    \"iate\",\n    \"ideia\",\n    \"idoso\",\n    \"ignorado\",\n    \"igreja\",\n    \"iguana\",\n    \"ileso\",\n    \"ilha\",\n    \"iludido\",\n    \"iluminar\",\n    \"ilustrar\",\n    \"imagem\",\n    \"imediato\",\n    \"imenso\",\n    \"imersivo\",\n    \"iminente\",\n    \"imitador\",\n    \"imortal\",\n    \"impacto\",\n    \"impedir\",\n    \"implante\",\n    \"impor\",\n    \"imprensa\",\n    \"impune\",\n    \"imunizar\",\n    \"inalador\",\n    \"inapto\",\n    \"inativo\",\n    \"incenso\",\n    \"inchar\",\n    \"incidir\",\n    \"incluir\",\n    \"incolor\",\n    \"indeciso\",\n    \"indireto\",\n    \"indutor\",\n    \"ineficaz\",\n    \"inerente\",\n    \"infantil\",\n    \"infestar\",\n    \"infinito\",\n    \"inflamar\",\n    \"informal\",\n    \"infrator\",\n    \"ingerir\",\n    \"inibido\",\n    \"inicial\",\n    \"inimigo\",\n    \"injetar\",\n    \"inocente\",\n    \"inodoro\",\n    \"inovador\",\n    \"inox\",\n    \"inquieto\",\n    \"inscrito\",\n    \"inseto\",\n    \"insistir\",\n    \"inspetor\",\n    \"instalar\",\n    \"insulto\",\n    \"intacto\",\n    \"integral\",\n    \"intimar\",\n    \"intocado\",\n    \"intriga\",\n    \"invasor\",\n    \"inverno\",\n    \"invicto\",\n    \"invocar\",\n    \"iogurte\",\n    \"iraniano\",\n    \"ironizar\",\n    \"irreal\",\n    \"irritado\",\n    \"isca\",\n    \"isento\",\n    \"isolado\",\n    \"isqueiro\",\n    \"italiano\",\n    \"janeiro\",\n    \"jangada\",\n    \"janta\",\n    \"jararaca\",\n    \"jardim\",\n    \"jarro\",\n    \"jasmim\",\n    \"jato\",\n    \"javali\",\n    \"jazida\",\n    \"jejum\",\n    \"joaninha\",\n    \"joelhada\",\n    \"jogador\",\n    \"joia\",\n    \"jornal\",\n    \"jorrar\",\n    \"jovem\",\n    \"juba\",\n    \"judeu\",\n    \"judoca\",\n    \"juiz\",\n    \"julgador\",\n    \"julho\",\n    \"jurado\",\n    \"jurista\",\n    \"juro\",\n    \"justa\",\n    \"labareda\",\n    \"laboral\",\n    \"lacre\",\n    \"lactante\",\n    \"ladrilho\",\n    \"lagarta\",\n    \"lagoa\",\n    \"laje\",\n    \"lamber\",\n    \"lamentar\",\n    \"laminar\",\n    \"lampejo\",\n    \"lanche\",\n    \"lapidar\",\n    \"lapso\",\n    \"laranja\",\n    \"lareira\",\n    \"largura\",\n    \"lasanha\",\n    \"lastro\",\n    \"lateral\",\n    \"latido\",\n    \"lavanda\",\n    \"lavoura\",\n    \"lavrador\",\n    \"laxante\",\n    \"lazer\",\n    \"lealdade\",\n    \"lebre\",\n    \"legado\",\n    \"legendar\",\n    \"legista\",\n    \"leigo\",\n    \"leiloar\",\n    \"leitura\",\n    \"lembrete\",\n    \"leme\",\n    \"lenhador\",\n    \"lentilha\",\n    \"leoa\",\n    \"lesma\",\n    \"leste\",\n    \"letivo\",\n    \"letreiro\",\n    \"levar\",\n    \"leveza\",\n    \"levitar\",\n    \"liberal\",\n    \"libido\",\n    \"liderar\",\n    \"ligar\",\n    \"ligeiro\",\n    \"limitar\",\n    \"limoeiro\",\n    \"limpador\",\n    \"linda\",\n    \"linear\",\n    \"linhagem\",\n    \"liquidez\",\n    \"listagem\",\n    \"lisura\",\n    \"litoral\",\n    \"livro\",\n    \"lixa\",\n    \"lixeira\",\n    \"locador\",\n    \"locutor\",\n    \"lojista\",\n    \"lombo\",\n    \"lona\",\n    \"longe\",\n    \"lontra\",\n    \"lorde\",\n    \"lotado\",\n    \"loteria\",\n    \"loucura\",\n    \"lousa\",\n    \"louvar\",\n    \"luar\",\n    \"lucidez\",\n    \"lucro\",\n    \"luneta\",\n    \"lustre\",\n    \"lutador\",\n    \"luva\",\n    \"macaco\",\n    \"macete\",\n    \"machado\",\n    \"macio\",\n    \"madeira\",\n    \"madrinha\",\n    \"magnata\",\n    \"magreza\",\n    \"maior\",\n    \"mais\",\n    \"malandro\",\n    \"malha\",\n    \"malote\",\n    \"maluco\",\n    \"mamilo\",\n    \"mamoeiro\",\n    \"mamute\",\n    \"manada\",\n    \"mancha\",\n    \"mandato\",\n    \"manequim\",\n    \"manhoso\",\n    \"manivela\",\n    \"manobrar\",\n    \"mansa\",\n    \"manter\",\n    \"manusear\",\n    \"mapeado\",\n    \"maquinar\",\n    \"marcador\",\n    \"maresia\",\n    \"marfim\",\n    \"margem\",\n    \"marinho\",\n    \"marmita\",\n    \"maroto\",\n    \"marquise\",\n    \"marreco\",\n    \"martelo\",\n    \"marujo\",\n    \"mascote\",\n    \"masmorra\",\n    \"massagem\",\n    \"mastigar\",\n    \"matagal\",\n    \"materno\",\n    \"matinal\",\n    \"matutar\",\n    \"maxilar\",\n    \"medalha\",\n    \"medida\",\n    \"medusa\",\n    \"megafone\",\n    \"meiga\",\n    \"melancia\",\n    \"melhor\",\n    \"membro\",\n    \"memorial\",\n    \"menino\",\n    \"menos\",\n    \"mensagem\",\n    \"mental\",\n    \"merecer\",\n    \"mergulho\",\n    \"mesada\",\n    \"mesclar\",\n    \"mesmo\",\n    \"mesquita\",\n    \"mestre\",\n    \"metade\",\n    \"meteoro\",\n    \"metragem\",\n    \"mexer\",\n    \"mexicano\",\n    \"micro\",\n    \"migalha\",\n    \"migrar\",\n    \"milagre\",\n    \"milenar\",\n    \"milhar\",\n    \"mimado\",\n    \"minerar\",\n    \"minhoca\",\n    \"ministro\",\n    \"minoria\",\n    \"miolo\",\n    \"mirante\",\n    \"mirtilo\",\n    \"misturar\",\n    \"mocidade\",\n    \"moderno\",\n    \"modular\",\n    \"moeda\",\n    \"moer\",\n    \"moinho\",\n    \"moita\",\n    \"moldura\",\n    \"moleza\",\n    \"molho\",\n    \"molinete\",\n    \"molusco\",\n    \"montanha\",\n    \"moqueca\",\n    \"morango\",\n    \"morcego\",\n    \"mordomo\",\n    \"morena\",\n    \"mosaico\",\n    \"mosquete\",\n    \"mostarda\",\n    \"motel\",\n    \"motim\",\n    \"moto\",\n    \"motriz\",\n    \"muda\",\n    \"muito\",\n    \"mulata\",\n    \"mulher\",\n    \"multar\",\n    \"mundial\",\n    \"munido\",\n    \"muralha\",\n    \"murcho\",\n    \"muscular\",\n    \"museu\",\n    \"musical\",\n    \"nacional\",\n    \"nadador\",\n    \"naja\",\n    \"namoro\",\n    \"narina\",\n    \"narrado\",\n    \"nascer\",\n    \"nativa\",\n    \"natureza\",\n    \"navalha\",\n    \"navegar\",\n    \"navio\",\n    \"neblina\",\n    \"nebuloso\",\n    \"negativa\",\n    \"negociar\",\n    \"negrito\",\n    \"nervoso\",\n    \"neta\",\n    \"neural\",\n    \"nevasca\",\n    \"nevoeiro\",\n    \"ninar\",\n    \"ninho\",\n    \"nitidez\",\n    \"nivelar\",\n    \"nobreza\",\n    \"noite\",\n    \"noiva\",\n    \"nomear\",\n    \"nominal\",\n    \"nordeste\",\n    \"nortear\",\n    \"notar\",\n    \"noticiar\",\n    \"noturno\",\n    \"novelo\",\n    \"novilho\",\n    \"novo\",\n    \"nublado\",\n    \"nudez\",\n    \"numeral\",\n    \"nupcial\",\n    \"nutrir\",\n    \"nuvem\",\n    \"obcecado\",\n    \"obedecer\",\n    \"objetivo\",\n    \"obrigado\",\n    \"obscuro\",\n    \"obstetra\",\n    \"obter\",\n    \"obturar\",\n    \"ocidente\",\n    \"ocioso\",\n    \"ocorrer\",\n    \"oculista\",\n    \"ocupado\",\n    \"ofegante\",\n    \"ofensiva\",\n    \"oferenda\",\n    \"oficina\",\n    \"ofuscado\",\n    \"ogiva\",\n    \"olaria\",\n    \"oleoso\",\n    \"olhar\",\n    \"oliveira\",\n    \"ombro\",\n    \"omelete\",\n    \"omisso\",\n    \"omitir\",\n    \"ondulado\",\n    \"oneroso\",\n    \"ontem\",\n    \"opcional\",\n    \"operador\",\n    \"oponente\",\n    \"oportuno\",\n    \"oposto\",\n    \"orar\",\n    \"orbitar\",\n    \"ordem\",\n    \"ordinal\",\n    \"orfanato\",\n    \"orgasmo\",\n    \"orgulho\",\n    \"oriental\",\n    \"origem\",\n    \"oriundo\",\n    \"orla\",\n    \"ortodoxo\",\n    \"orvalho\",\n    \"oscilar\",\n    \"ossada\",\n    \"osso\",\n    \"ostentar\",\n    \"otimismo\",\n    \"ousadia\",\n    \"outono\",\n    \"outubro\",\n    \"ouvido\",\n    \"ovelha\",\n    \"ovular\",\n    \"oxidar\",\n    \"oxigenar\",\n    \"pacato\",\n    \"paciente\",\n    \"pacote\",\n    \"pactuar\",\n    \"padaria\",\n    \"padrinho\",\n    \"pagar\",\n    \"pagode\",\n    \"painel\",\n    \"pairar\",\n    \"paisagem\",\n    \"palavra\",\n    \"palestra\",\n    \"palheta\",\n    \"palito\",\n    \"palmada\",\n    \"palpitar\",\n    \"pancada\",\n    \"panela\",\n    \"panfleto\",\n    \"panqueca\",\n    \"pantanal\",\n    \"papagaio\",\n    \"papelada\",\n    \"papiro\",\n    \"parafina\",\n    \"parcial\",\n    \"pardal\",\n    \"parede\",\n    \"partida\",\n    \"pasmo\",\n    \"passado\",\n    \"pastel\",\n    \"patamar\",\n    \"patente\",\n    \"patinar\",\n    \"patrono\",\n    \"paulada\",\n    \"pausar\",\n    \"peculiar\",\n    \"pedalar\",\n    \"pedestre\",\n    \"pediatra\",\n    \"pedra\",\n    \"pegada\",\n    \"peitoral\",\n    \"peixe\",\n    \"pele\",\n    \"pelicano\",\n    \"penca\",\n    \"pendurar\",\n    \"peneira\",\n    \"penhasco\",\n    \"pensador\",\n    \"pente\",\n    \"perceber\",\n    \"perfeito\",\n    \"pergunta\",\n    \"perito\",\n    \"permitir\",\n    \"perna\",\n    \"perplexo\",\n    \"persiana\",\n    \"pertence\",\n    \"peruca\",\n    \"pescado\",\n    \"pesquisa\",\n    \"pessoa\",\n    \"petiscar\",\n    \"piada\",\n    \"picado\",\n    \"piedade\",\n    \"pigmento\",\n    \"pilastra\",\n    \"pilhado\",\n    \"pilotar\",\n    \"pimenta\",\n    \"pincel\",\n    \"pinguim\",\n    \"pinha\",\n    \"pinote\",\n    \"pintar\",\n    \"pioneiro\",\n    \"pipoca\",\n    \"piquete\",\n    \"piranha\",\n    \"pires\",\n    \"pirueta\",\n    \"piscar\",\n    \"pistola\",\n    \"pitanga\",\n    \"pivete\",\n    \"planta\",\n    \"plaqueta\",\n    \"platina\",\n    \"plebeu\",\n    \"plumagem\",\n    \"pluvial\",\n    \"pneu\",\n    \"poda\",\n    \"poeira\",\n    \"poetisa\",\n    \"polegada\",\n    \"policiar\",\n    \"poluente\",\n    \"polvilho\",\n    \"pomar\",\n    \"pomba\",\n    \"ponderar\",\n    \"pontaria\",\n    \"populoso\",\n    \"porta\",\n    \"possuir\",\n    \"postal\",\n    \"pote\",\n    \"poupar\",\n    \"pouso\",\n    \"povoar\",\n    \"praia\",\n    \"prancha\",\n    \"prato\",\n    \"praxe\",\n    \"prece\",\n    \"predador\",\n    \"prefeito\",\n    \"premiar\",\n    \"prensar\",\n    \"preparar\",\n    \"presilha\",\n    \"pretexto\",\n    \"prevenir\",\n    \"prezar\",\n    \"primata\",\n    \"princesa\",\n    \"prisma\",\n    \"privado\",\n    \"processo\",\n    \"produto\",\n    \"profeta\",\n    \"proibido\",\n    \"projeto\",\n    \"prometer\",\n    \"propagar\",\n    \"prosa\",\n    \"protetor\",\n    \"provador\",\n    \"publicar\",\n    \"pudim\",\n    \"pular\",\n    \"pulmonar\",\n    \"pulseira\",\n    \"punhal\",\n    \"punir\",\n    \"pupilo\",\n    \"pureza\",\n    \"puxador\",\n    \"quadra\",\n    \"quantia\",\n    \"quarto\",\n    \"quase\",\n    \"quebrar\",\n    \"queda\",\n    \"queijo\",\n    \"quente\",\n    \"querido\",\n    \"quimono\",\n    \"quina\",\n    \"quiosque\",\n    \"rabanada\",\n    \"rabisco\",\n    \"rachar\",\n    \"racionar\",\n    \"radial\",\n    \"raiar\",\n    \"rainha\",\n    \"raio\",\n    \"raiva\",\n    \"rajada\",\n    \"ralado\",\n    \"ramal\",\n    \"ranger\",\n    \"ranhura\",\n    \"rapadura\",\n    \"rapel\",\n    \"rapidez\",\n    \"raposa\",\n    \"raquete\",\n    \"raridade\",\n    \"rasante\",\n    \"rascunho\",\n    \"rasgar\",\n    \"raspador\",\n    \"rasteira\",\n    \"rasurar\",\n    \"ratazana\",\n    \"ratoeira\",\n    \"realeza\",\n    \"reanimar\",\n    \"reaver\",\n    \"rebaixar\",\n    \"rebelde\",\n    \"rebolar\",\n    \"recado\",\n    \"recente\",\n    \"recheio\",\n    \"recibo\",\n    \"recordar\",\n    \"recrutar\",\n    \"recuar\",\n    \"rede\",\n    \"redimir\",\n    \"redonda\",\n    \"reduzida\",\n    \"reenvio\",\n    \"refinar\",\n    \"refletir\",\n    \"refogar\",\n    \"refresco\",\n    \"refugiar\",\n    \"regalia\",\n    \"regime\",\n    \"regra\",\n    \"reinado\",\n    \"reitor\",\n    \"rejeitar\",\n    \"relativo\",\n    \"remador\",\n    \"remendo\",\n    \"remorso\",\n    \"renovado\",\n    \"reparo\",\n    \"repelir\",\n    \"repleto\",\n    \"repolho\",\n    \"represa\",\n    \"repudiar\",\n    \"requerer\",\n    \"resenha\",\n    \"resfriar\",\n    \"resgatar\",\n    \"residir\",\n    \"resolver\",\n    \"respeito\",\n    \"ressaca\",\n    \"restante\",\n    \"resumir\",\n    \"retalho\",\n    \"reter\",\n    \"retirar\",\n    \"retomada\",\n    \"retratar\",\n    \"revelar\",\n    \"revisor\",\n    \"revolta\",\n    \"riacho\",\n    \"rica\",\n    \"rigidez\",\n    \"rigoroso\",\n    \"rimar\",\n    \"ringue\",\n    \"risada\",\n    \"risco\",\n    \"risonho\",\n    \"robalo\",\n    \"rochedo\",\n    \"rodada\",\n    \"rodeio\",\n    \"rodovia\",\n    \"roedor\",\n    \"roleta\",\n    \"romano\",\n    \"roncar\",\n    \"rosado\",\n    \"roseira\",\n    \"rosto\",\n    \"rota\",\n    \"roteiro\",\n    \"rotina\",\n    \"rotular\",\n    \"rouco\",\n    \"roupa\",\n    \"roxo\",\n    \"rubro\",\n    \"rugido\",\n    \"rugoso\",\n    \"ruivo\",\n    \"rumo\",\n    \"rupestre\",\n    \"russo\",\n    \"sabor\",\n    \"saciar\",\n    \"sacola\",\n    \"sacudir\",\n    \"sadio\",\n    \"safira\",\n    \"saga\",\n    \"sagrada\",\n    \"saibro\",\n    \"salada\",\n    \"saleiro\",\n    \"salgado\",\n    \"saliva\",\n    \"salpicar\",\n    \"salsicha\",\n    \"saltar\",\n    \"salvador\",\n    \"sambar\",\n    \"samurai\",\n    \"sanar\",\n    \"sanfona\",\n    \"sangue\",\n    \"sanidade\",\n    \"sapato\",\n    \"sarda\",\n    \"sargento\",\n    \"sarjeta\",\n    \"saturar\",\n    \"saudade\",\n    \"saxofone\",\n    \"sazonal\",\n    \"secar\",\n    \"secular\",\n    \"seda\",\n    \"sedento\",\n    \"sediado\",\n    \"sedoso\",\n    \"sedutor\",\n    \"segmento\",\n    \"segredo\",\n    \"segundo\",\n    \"seiva\",\n    \"seleto\",\n    \"selvagem\",\n    \"semanal\",\n    \"semente\",\n    \"senador\",\n    \"senhor\",\n    \"sensual\",\n    \"sentado\",\n    \"separado\",\n    \"sereia\",\n    \"seringa\",\n    \"serra\",\n    \"servo\",\n    \"setembro\",\n    \"setor\",\n    \"sigilo\",\n    \"silhueta\",\n    \"silicone\",\n    \"simetria\",\n    \"simpatia\",\n    \"simular\",\n    \"sinal\",\n    \"sincero\",\n    \"singular\",\n    \"sinopse\",\n    \"sintonia\",\n    \"sirene\",\n    \"siri\",\n    \"situado\",\n    \"soberano\",\n    \"sobra\",\n    \"socorro\",\n    \"sogro\",\n    \"soja\",\n    \"solda\",\n    \"soletrar\",\n    \"solteiro\",\n    \"sombrio\",\n    \"sonata\",\n    \"sondar\",\n    \"sonegar\",\n    \"sonhador\",\n    \"sono\",\n    \"soprano\",\n    \"soquete\",\n    \"sorrir\",\n    \"sorteio\",\n    \"sossego\",\n    \"sotaque\",\n    \"soterrar\",\n    \"sovado\",\n    \"sozinho\",\n    \"suavizar\",\n    \"subida\",\n    \"submerso\",\n    \"subsolo\",\n    \"subtrair\",\n    \"sucata\",\n    \"sucesso\",\n    \"suco\",\n    \"sudeste\",\n    \"sufixo\",\n    \"sugador\",\n    \"sugerir\",\n    \"sujeito\",\n    \"sulfato\",\n    \"sumir\",\n    \"suor\",\n    \"superior\",\n    \"suplicar\",\n    \"suposto\",\n    \"suprimir\",\n    \"surdina\",\n    \"surfista\",\n    \"surpresa\",\n    \"surreal\",\n    \"surtir\",\n    \"suspiro\",\n    \"sustento\",\n    \"tabela\",\n    \"tablete\",\n    \"tabuada\",\n    \"tacho\",\n    \"tagarela\",\n    \"talher\",\n    \"talo\",\n    \"talvez\",\n    \"tamanho\",\n    \"tamborim\",\n    \"tampa\",\n    \"tangente\",\n    \"tanto\",\n    \"tapar\",\n    \"tapioca\",\n    \"tardio\",\n    \"tarefa\",\n    \"tarja\",\n    \"tarraxa\",\n    \"tatuagem\",\n    \"taurino\",\n    \"taxativo\",\n    \"taxista\",\n    \"teatral\",\n    \"tecer\",\n    \"tecido\",\n    \"teclado\",\n    \"tedioso\",\n    \"teia\",\n    \"teimar\",\n    \"telefone\",\n    \"telhado\",\n    \"tempero\",\n    \"tenente\",\n    \"tensor\",\n    \"tentar\",\n    \"termal\",\n    \"terno\",\n    \"terreno\",\n    \"tese\",\n    \"tesoura\",\n    \"testado\",\n    \"teto\",\n    \"textura\",\n    \"texugo\",\n    \"tiara\",\n    \"tigela\",\n    \"tijolo\",\n    \"timbrar\",\n    \"timidez\",\n    \"tingido\",\n    \"tinteiro\",\n    \"tiragem\",\n    \"titular\",\n    \"toalha\",\n    \"tocha\",\n    \"tolerar\",\n    \"tolice\",\n    \"tomada\",\n    \"tomilho\",\n    \"tonel\",\n    \"tontura\",\n    \"topete\",\n    \"tora\",\n    \"torcido\",\n    \"torneio\",\n    \"torque\",\n    \"torrada\",\n    \"torto\",\n    \"tostar\",\n    \"touca\",\n    \"toupeira\",\n    \"toxina\",\n    \"trabalho\",\n    \"tracejar\",\n    \"tradutor\",\n    \"trafegar\",\n    \"trajeto\",\n    \"trama\",\n    \"trancar\",\n    \"trapo\",\n    \"traseiro\",\n    \"tratador\",\n    \"travar\",\n    \"treino\",\n    \"tremer\",\n    \"trepidar\",\n    \"trevo\",\n    \"triagem\",\n    \"tribo\",\n    \"triciclo\",\n    \"tridente\",\n    \"trilogia\",\n    \"trindade\",\n    \"triplo\",\n    \"triturar\",\n    \"triunfal\",\n    \"trocar\",\n    \"trombeta\",\n    \"trova\",\n    \"trunfo\",\n    \"truque\",\n    \"tubular\",\n    \"tucano\",\n    \"tudo\",\n    \"tulipa\",\n    \"tupi\",\n    \"turbo\",\n    \"turma\",\n    \"turquesa\",\n    \"tutelar\",\n    \"tutorial\",\n    \"uivar\",\n    \"umbigo\",\n    \"unha\",\n    \"unidade\",\n    \"uniforme\",\n    \"urologia\",\n    \"urso\",\n    \"urtiga\",\n    \"urubu\",\n    \"usado\",\n    \"usina\",\n    \"usufruir\",\n    \"vacina\",\n    \"vadiar\",\n    \"vagaroso\",\n    \"vaidoso\",\n    \"vala\",\n    \"valente\",\n    \"validade\",\n    \"valores\",\n    \"vantagem\",\n    \"vaqueiro\",\n    \"varanda\",\n    \"vareta\",\n    \"varrer\",\n    \"vascular\",\n    \"vasilha\",\n    \"vassoura\",\n    \"vazar\",\n    \"vazio\",\n    \"veado\",\n    \"vedar\",\n    \"vegetar\",\n    \"veicular\",\n    \"veleiro\",\n    \"velhice\",\n    \"veludo\",\n    \"vencedor\",\n    \"vendaval\",\n    \"venerar\",\n    \"ventre\",\n    \"verbal\",\n    \"verdade\",\n    \"vereador\",\n    \"vergonha\",\n    \"vermelho\",\n    \"verniz\",\n    \"versar\",\n    \"vertente\",\n    \"vespa\",\n    \"vestido\",\n    \"vetorial\",\n    \"viaduto\",\n    \"viagem\",\n    \"viajar\",\n    \"viatura\",\n    \"vibrador\",\n    \"videira\",\n    \"vidraria\",\n    \"viela\",\n    \"viga\",\n    \"vigente\",\n    \"vigiar\",\n    \"vigorar\",\n    \"vilarejo\",\n    \"vinco\",\n    \"vinheta\",\n    \"vinil\",\n    \"violeta\",\n    \"virada\",\n    \"virtude\",\n    \"visitar\",\n    \"visto\",\n    \"vitral\",\n    \"viveiro\",\n    \"vizinho\",\n    \"voador\",\n    \"voar\",\n    \"vogal\",\n    \"volante\",\n    \"voleibol\",\n    \"voltagem\",\n    \"volumoso\",\n    \"vontade\",\n    \"vulto\",\n    \"vuvuzela\",\n    \"xadrez\",\n    \"xarope\",\n    \"xeque\",\n    \"xeretar\",\n    \"xerife\",\n    \"xingar\",\n    \"zangado\",\n    \"zarpar\",\n    \"zebu\",\n    \"zelador\",\n    \"zombar\",\n    \"zoologia\",\n    \"zumbido\"\n]\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  (function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else if (typeof exports === 'object') {\n      return module.exports = factory();\n    } else {\n      return root.Heap = factory();\n    }\n  })(this, function() {\n    return Heap;\n  });\n\n}).call(this);\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\nvar globalThis = require('./globalThis');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate;\n\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n","/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createTester = require('./internal/createTester');\n\nvar _createTester2 = _interopRequireDefault(_createTester);\n\nvar _doParallel = require('./internal/doParallel');\n\nvar _doParallel2 = _interopRequireDefault(_doParallel);\n\nvar _identity = require('lodash/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nexports.default = (0, _doParallel2.default)((0, _createTester2.default)(Boolean, _identity2.default));\nmodule.exports = exports['default'];","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","\"use strict\";\n\nconst hasBigInt64 = typeof BigUint64Array !== \"undefined\";\nconst thisPtr = Symbol();\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(U32, U16, ptr) {\n  var dataLength = U32[ptr >>> 2];\n  var dataOffset = (ptr + 4) >>> 1;\n  var dataRemain = dataLength;\n  var parts = [];\n  const chunkSize = 1024;\n  while (dataRemain > chunkSize) {\n    let last = U16[dataOffset + chunkSize - 1];\n    let size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\n    let part = U16.subarray(dataOffset, dataOffset += size);\n    parts.push(String.fromCharCode.apply(String, part));\n    dataRemain -= size;\n  }\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  var baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    var buffer = memory.buffer;\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  var env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    var memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  var rawExports = instance.exports;\n  var memory = rawExports.memory;\n  var memory_allocate = rawExports[\"memory.allocate\"];\n  var memory_fill = rawExports[\"memory.fill\"];\n  var memory_free = rawExports[\"memory.free\"];\n  var table = rawExports.table;\n  var setargc = rawExports._setargc || function() {};\n\n  // Provide views for all sorts of basic values\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\n\n  /** Updates memory views if memory has grown meanwhile. */\n  function checkMem() {\n    // see: https://github.com/WebAssembly/design/issues/1210\n    if (buffer !== memory.buffer) {\n      buffer = memory.buffer;\n      I8  = new Int8Array(buffer);\n      U8  = new Uint8Array(buffer);\n      I16 = new Int16Array(buffer);\n      U16 = new Uint16Array(buffer);\n      I32 = new Int32Array(buffer);\n      U32 = new Uint32Array(buffer);\n      if (hasBigInt64) {\n        I64 = new BigInt64Array(buffer);\n        U64 = new BigUint64Array(buffer);\n      }\n      F32 = new Float32Array(buffer);\n      F64 = new Float64Array(buffer);\n    }\n  }\n  checkMem();\n\n  /** Allocates a new string in the module's memory and returns its pointer. */\n  function newString(str) {\n    var dataLength = str.length;\n    var ptr = memory_allocate(4 + (dataLength << 1));\n    var dataOffset = (4 + ptr) >>> 1;\n    checkMem();\n    U32[ptr >>> 2] = dataLength;\n    for (let i = 0; i < dataLength; ++i) U16[dataOffset + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.newString = newString;\n\n  /** Gets a string from the module's memory by its pointer. */\n  function getString(ptr) {\n    checkMem();\n    return getStringImpl(U32, U16, ptr);\n  }\n\n  baseModule.getString = getString;\n\n  function computeBufferSize(byteLength) {\n    const HEADER_SIZE = 8;\n    return 1 << (32 - Math.clz32(byteLength + HEADER_SIZE - 1));\n  }\n\n  /** Creates a new typed array in the module's memory and returns its pointer. */\n  function newArray(view, length, unsafe) {\n    var ctor = view.constructor;\n    if (ctor === Function) { // TypedArray constructor created in memory\n      ctor = view;\n      view = null;\n    } else { // TypedArray instance copied into memory\n      if (length === undefined) length = view.length;\n    }\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    var byteLength = elementSize * length;\n    var ptr = memory_allocate(12); // TypedArray header\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\n    checkMem();\n    U32[ ptr      >>> 2] = buf;        // .buffer\n    U32[(ptr + 4) >>> 2] = 0;          // .byteOffset\n    U32[(ptr + 8) >>> 2] = byteLength; // .byteLength\n    U32[ buf      >>> 2] = byteLength; // .byteLength\n    U32[(buf + 4) >>> 2] = 0;          // 0\n    if (view) {\n      new ctor(buffer, buf + 8, length).set(view);\n      if (view.length < length && !unsafe) {\n        let setLength = elementSize * view.length;\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\n      }\n    } else if (!unsafe) {\n      memory_fill(buf + 8, 0, byteLength);\n    }\n    return ptr;\n  }\n\n  baseModule.newArray = newArray;\n\n  /** Gets a view on a typed array in the module's memory by its pointer. */\n  function getArray(ctor, ptr) {\n    var elementSize = ctor.BYTES_PER_ELEMENT;\n    if (!elementSize) throw Error(\"not a typed array\");\n    checkMem();\n    var buf        = U32[ ptr      >>> 2];\n    var byteOffset = U32[(ptr + 4) >>> 2];\n    var byteLength = U32[(ptr + 8) >>> 2];\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\n  }\n\n  baseModule.getArray = getArray;\n\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\n  function freeArray(ptr) {\n    checkMem();\n    var buf = U32[ptr >>> 2];\n    memory_free(buf);\n    memory_free(ptr);\n  }\n\n  baseModule.freeArray = freeArray;\n\n  /**\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\n   * WebAssembly functions, i.e. as exported by the module, are supported.\n   */\n  function newFunction(fn) {\n    if (typeof fn.original === \"function\") fn = fn.original;\n    var index = table.length;\n    table.grow(1);\n    table.set(index, fn);\n    return index;\n  }\n\n  baseModule.newFunction = newFunction;\n\n  /** Gets a function by its pointer. */\n  function getFunction(ptr) {\n    return wrapFunction(table.get(ptr), setargc);\n  }\n\n  baseModule.getFunction = getFunction;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table = baseModule.table || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, Object.defineProperties(baseModule, {\n    I8: { get: function() { checkMem(); return I8; } },\n    U8: { get: function() { checkMem(); return U8; } },\n    I16: { get: function() { checkMem(); return I16; } },\n    U16: { get: function() { checkMem(); return U16; } },\n    I32: { get: function() { checkMem(); return I32; } },\n    U32: { get: function() { checkMem(); return U32; } },\n    I64: { get: function() { checkMem(); return I64; } },\n    U64: { get: function() { checkMem(); return U64; } },\n    F32: { get: function() { checkMem(); return F32; } },\n    F64: { get: function() { checkMem(); return F64; } }\n  }));\n}\n\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\nfunction wrapFunction(fn, setargc) {\n  var wrap = (...args) => {\n    setargc(args.length);\n    return fn(...args);\n  }\n  // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\n  // hence we can't use the wrapper and instead need to provide a reference to the original\n  wrap.original = fn;\n  return wrap;\n}\n\n/** Instantiates an AssemblyScript module using the specified imports. */\nfunction instantiate(module, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(module, imports)\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\nfunction instantiateBuffer(buffer, imports) {\n  return instantiate(new WebAssembly.Module(buffer), imports);\n}\n\nexports.instantiateBuffer = instantiateBuffer;\n\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\nasync function instantiateStreaming(response, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setargc = exports._setargc || function() {};\n  function hasOwnProperty(elem, prop) {\n    return Object.prototype.hasOwnProperty.call(elem, prop);\n  }\n  for (let internalName in exports) {\n    if (!hasOwnProperty(exports, internalName)) continue;\n    let elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {};\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [thisPtr]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[thisPtr]); },\n            set: function(value) { setter(this[thisPtr], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          curr[name] = wrapFunction(elem, setargc);\n        } else { // for methods\n          Object.defineProperty(curr, name, {\n            value: function (...args) {\n              setargc(args.length);\n              return elem(this[thisPtr], ...args);\n            }\n          });\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\") {\n        curr[name] = wrapFunction(elem, setargc);\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n\n  return module;\n}\n\nexports.demangle = demangle;\n","'use strict';\n\nmodule.exports = 0;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","module.exports = (function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')(); // eslint-disable-line no-new-func\n  }\n})();\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState && packet.type === 'open') {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","/**\n * @file The entry point for the web extension singleton process.\n */\n\nimport endOfStream from 'end-of-stream';\nimport pump from 'pump';\nimport debounce from 'debounce-stream';\nimport log from 'loglevel';\nimport extension from 'extensionizer';\nimport { storeAsStream, storeTransformStream } from '@metamask/obs-store';\nimport PortStream from 'extension-port-stream';\nimport { captureException } from '@sentry/browser';\n\nimport { ethErrors } from 'eth-rpc-errors';\nimport {\n  ENVIRONMENT_TYPE_POPUP,\n  ENVIRONMENT_TYPE_NOTIFICATION,\n  ENVIRONMENT_TYPE_FULLSCREEN,\n} from '../../shared/constants/app';\nimport { SECOND } from '../../shared/constants/time';\nimport {\n  REJECT_NOTFICIATION_CLOSE,\n  REJECT_NOTFICIATION_CLOSE_SIG,\n} from '../../shared/constants/metametrics';\nimport migrations from './migrations';\nimport Migrator from './lib/migrator';\nimport ExtensionPlatform from './platforms/extension';\nimport LocalStore from './lib/local-store';\nimport ReadOnlyNetworkStore from './lib/network-store';\nimport createStreamSink from './lib/createStreamSink';\nimport NotificationManager, {\n  NOTIFICATION_MANAGER_EVENTS,\n} from './lib/notification-manager';\nimport MetamaskController, {\n  METAMASK_CONTROLLER_EVENTS,\n} from './metamask-controller';\nimport rawFirstTimeState from './first-time-state';\nimport getFirstPreferredLangCode from './lib/get-first-preferred-lang-code';\nimport getObjStructure from './lib/getObjStructure';\nimport setupEnsIpfsResolver from './lib/ens-ipfs/setup';\n/* eslint-enable import/first */\n\nconst { sentry } = global;\nconst firstTimeState = { ...rawFirstTimeState };\n\nlog.setDefaultLevel(process.env.METAMASK_DEBUG ? 'debug' : 'info');\n\nconst platform = new ExtensionPlatform();\n\nconst notificationManager = new NotificationManager();\nglobal.METAMASK_NOTIFIER = notificationManager;\n\nlet popupIsOpen = false;\nlet notificationIsOpen = false;\nlet uiIsTriggering = false;\nconst openMetamaskTabsIDs = {};\nconst requestAccountTabIds = {};\n\n// state persistence\nconst inTest = process.env.IN_TEST;\nconst localStore = inTest ? new ReadOnlyNetworkStore() : new LocalStore();\nlet versionedData;\n\nif (inTest || process.env.METAMASK_DEBUG) {\n  global.metamaskGetState = localStore.get.bind(localStore);\n}\n\n// initialization flow\ninitialize().catch(log.error);\n\n/**\n * @typedef {import('../../shared/constants/transaction').TransactionMeta} TransactionMeta\n */\n\n/**\n * The data emitted from the MetaMaskController.store EventEmitter, also used to initialize the MetaMaskController. Available in UI on React state as state.metamask.\n *\n * @typedef MetaMaskState\n * @property {boolean} isInitialized - Whether the first vault has been created.\n * @property {boolean} isUnlocked - Whether the vault is currently decrypted and accounts are available for selection.\n * @property {boolean} isAccountMenuOpen - Represents whether the main account selection UI is currently displayed.\n * @property {Object} identities - An object matching lower-case hex addresses to Identity objects with \"address\" and \"name\" (nickname) keys.\n * @property {Object} unapprovedTxs - An object mapping transaction hashes to unapproved transactions.\n * @property {Array} frequentRpcList - A list of frequently used RPCs, including custom user-provided ones.\n * @property {Array} addressBook - A list of previously sent to addresses.\n * @property {Object} contractExchangeRates - Info about current token prices.\n * @property {Array} tokens - Tokens held by the current user, including their balances.\n * @property {Object} send - TODO: Document\n * @property {boolean} useBlockie - Indicates preferred user identicon format. True for blockie, false for Jazzicon.\n * @property {Object} featureFlags - An object for optional feature flags.\n * @property {boolean} welcomeScreen - True if welcome screen should be shown.\n * @property {string} currentLocale - A locale string matching the user's preferred display language.\n * @property {Object} provider - The current selected network provider.\n * @property {string} provider.rpcUrl - The address for the RPC API, if using an RPC API.\n * @property {string} provider.type - An identifier for the type of network selected, allows MetaMask to use custom provider strategies for known networks.\n * @property {string} network - A stringified number of the current network ID.\n * @property {Object} accounts - An object mapping lower-case hex addresses to objects with \"balance\" and \"address\" keys, both storing hex string values.\n * @property {hex} currentBlockGasLimit - The most recently seen block gas limit, in a lower case hex prefixed string.\n * @property {TransactionMeta[]} currentNetworkTxList - An array of transactions associated with the currently selected network.\n * @property {Object} unapprovedMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedMsgCount - The number of messages in unapprovedMsgs.\n * @property {Object} unapprovedPersonalMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedPersonalMsgCount - The number of messages in unapprovedPersonalMsgs.\n * @property {Object} unapprovedEncryptionPublicKeyMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedEncryptionPublicKeyMsgCount - The number of messages in EncryptionPublicKeyMsgs.\n * @property {Object} unapprovedDecryptMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedDecryptMsgCount - The number of messages in unapprovedDecryptMsgs.\n * @property {Object} unapprovedTypedMsgs - An object of messages pending approval, mapping a unique ID to the options.\n * @property {number} unapprovedTypedMsgCount - The number of messages in unapprovedTypedMsgs.\n * @property {number} pendingApprovalCount - The number of pending request in the approval controller.\n * @property {string[]} keyringTypes - An array of unique keyring identifying strings, representing available strategies for creating accounts.\n * @property {Keyring[]} keyrings - An array of keyring descriptions, summarizing the accounts that are available for use, and what keyrings they belong to.\n * @property {string} selectedAddress - A lower case hex string of the currently selected address.\n * @property {string} currentCurrency - A string identifying the user's preferred display currency, for use in showing conversion rates.\n * @property {number} conversionRate - A number representing the current exchange rate from the user's preferred currency to Ether.\n * @property {number} conversionDate - A unix epoch date (ms) for the time the current conversion rate was last retrieved.\n * @property {boolean} forgottenPassword - Returns true if the user has initiated the password recovery screen, is recovering from seed phrase.\n */\n\n/**\n * @typedef VersionedData\n * @property {MetaMaskState} data - The data emitted from MetaMask controller, or used to initialize it.\n * @property {number} version - The latest migration version that has been run.\n */\n\n/**\n * Initializes the MetaMask controller, and sets up all platform configuration.\n *\n * @returns {Promise} Setup complete.\n */\nasync function initialize() {\n  const initState = await loadStateFromPersistence();\n  const initLangCode = await getFirstPreferredLangCode();\n  await setupController(initState, initLangCode);\n  log.info('MetaMask initialization complete.');\n}\n\n//\n// State and Persistence\n//\n\n/**\n * Loads any stored data, prioritizing the latest storage strategy.\n * Migrates that data schema in case it was last loaded on an older version.\n *\n * @returns {Promise<MetaMaskState>} Last data emitted from previous instance of MetaMask.\n */\nasync function loadStateFromPersistence() {\n  // migrations\n  const migrator = new Migrator({ migrations });\n  migrator.on('error', console.warn);\n\n  // read from disk\n  // first from preferred, async API:\n  versionedData =\n    (await localStore.get()) || migrator.generateInitialState(firstTimeState);\n\n  // check if somehow state is empty\n  // this should never happen but new error reporting suggests that it has\n  // for a small number of users\n  // https://github.com/metamask/metamask-extension/issues/3919\n  if (versionedData && !versionedData.data) {\n    // unable to recover, clear state\n    versionedData = migrator.generateInitialState(firstTimeState);\n    sentry.captureMessage('MetaMask - Empty vault found - unable to recover');\n  }\n\n  // report migration errors to sentry\n  migrator.on('error', (err) => {\n    // get vault structure without secrets\n    const vaultStructure = getObjStructure(versionedData);\n    sentry.captureException(err, {\n      // \"extra\" key is required by Sentry\n      extra: { vaultStructure },\n    });\n  });\n\n  // migrate data\n  versionedData = await migrator.migrateData(versionedData);\n  if (!versionedData) {\n    throw new Error('MetaMask - migrator returned undefined');\n  }\n\n  // write to disk\n  if (localStore.isSupported) {\n    localStore.set(versionedData);\n  } else {\n    // throw in setTimeout so as to not block boot\n    setTimeout(() => {\n      throw new Error('MetaMask - Localstore not supported');\n    });\n  }\n\n  // return just the data\n  return versionedData.data;\n}\n\n/**\n * Initializes the MetaMask Controller with any initial state and default language.\n * Configures platform-specific error reporting strategy.\n * Streams emitted state updates to platform-specific storage strategy.\n * Creates platform listeners for new Dapps/Contexts, and sets up their data connections to the controller.\n *\n * @param {Object} initState - The initial state to start the controller with, matches the state that is emitted from the controller.\n * @param {string} initLangCode - The region code for the language preferred by the current user.\n * @returns {Promise} After setup is complete.\n */\nfunction setupController(initState, initLangCode) {\n  //\n  // MetaMask Controller\n  //\n\n  const controller = new MetamaskController({\n    infuraProjectId: process.env.INFURA_PROJECT_ID,\n    // User confirmation callbacks:\n    showUserConfirmation: triggerUi,\n    openPopup,\n    // initial state\n    initState,\n    // initial locale code\n    initLangCode,\n    // platform specific api\n    platform,\n    notificationManager,\n    extension,\n    getRequestAccountTabIds: () => {\n      return requestAccountTabIds;\n    },\n    getOpenMetamaskTabsIds: () => {\n      return openMetamaskTabsIDs;\n    },\n  });\n\n  setupEnsIpfsResolver({\n    getCurrentChainId: controller.networkController.getCurrentChainId.bind(\n      controller.networkController,\n    ),\n    getIpfsGateway: controller.preferencesController.getIpfsGateway.bind(\n      controller.preferencesController,\n    ),\n    provider: controller.provider,\n  });\n\n  // setup state persistence\n  pump(\n    storeAsStream(controller.store),\n    debounce(1000),\n    storeTransformStream(versionifyData),\n    createStreamSink(persistData),\n    (error) => {\n      log.error('MetaMask - Persistence pipeline failed', error);\n    },\n  );\n\n  /**\n   * Assigns the given state to the versioned object (with metadata), and returns that.\n   *\n   * @param {Object} state - The state object as emitted by the MetaMaskController.\n   * @returns {VersionedData} The state object wrapped in an object that includes a metadata key.\n   */\n  function versionifyData(state) {\n    versionedData.data = state;\n    return versionedData;\n  }\n\n  let dataPersistenceFailing = false;\n\n  async function persistData(state) {\n    if (!state) {\n      throw new Error('MetaMask - updated state is missing');\n    }\n    if (!state.data) {\n      throw new Error('MetaMask - updated state does not have data');\n    }\n    if (localStore.isSupported) {\n      try {\n        await localStore.set(state);\n        if (dataPersistenceFailing) {\n          dataPersistenceFailing = false;\n        }\n      } catch (err) {\n        // log error so we dont break the pipeline\n        if (!dataPersistenceFailing) {\n          dataPersistenceFailing = true;\n          captureException(err);\n        }\n        log.error('error setting state in local store:', err);\n      }\n    }\n  }\n\n  //\n  // connect to other contexts\n  //\n  extension.runtime.onConnect.addListener(connectRemote);\n  extension.runtime.onConnectExternal.addListener(connectExternal);\n\n  const metamaskInternalProcessHash = {\n    [ENVIRONMENT_TYPE_POPUP]: true,\n    [ENVIRONMENT_TYPE_NOTIFICATION]: true,\n    [ENVIRONMENT_TYPE_FULLSCREEN]: true,\n  };\n\n  const metamaskBlockedPorts = ['trezor-connect'];\n\n  const isClientOpenStatus = () => {\n    return (\n      popupIsOpen ||\n      Boolean(Object.keys(openMetamaskTabsIDs).length) ||\n      notificationIsOpen\n    );\n  };\n\n  const onCloseEnvironmentInstances = (isClientOpen, environmentType) => {\n    // if all instances of metamask are closed we call a method on the controller to stop gasFeeController polling\n    if (isClientOpen === false) {\n      controller.onClientClosed();\n      // otherwise we want to only remove the polling tokens for the environment type that has closed\n    } else {\n      // in the case of fullscreen environment a user might have multiple tabs open so we don't want to disconnect all of\n      // its corresponding polling tokens unless all tabs are closed.\n      if (\n        environmentType === ENVIRONMENT_TYPE_FULLSCREEN &&\n        Boolean(Object.keys(openMetamaskTabsIDs).length)\n      ) {\n        return;\n      }\n      controller.onEnvironmentTypeClosed(environmentType);\n    }\n  };\n\n  /**\n   * A runtime.Port object, as provided by the browser:\n   *\n   * @see https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/runtime/Port\n   * @typedef Port\n   * @type Object\n   */\n\n  /**\n   * Connects a Port to the MetaMask controller via a multiplexed duplex stream.\n   * This method identifies trusted (MetaMask) interfaces, and connects them differently from untrusted (web pages).\n   *\n   * @param {Port} remotePort - The port provided by a new context.\n   */\n  function connectRemote(remotePort) {\n    const processName = remotePort.name;\n    const isMetaMaskInternalProcess = metamaskInternalProcessHash[processName];\n\n    if (metamaskBlockedPorts.includes(remotePort.name)) {\n      return;\n    }\n\n    if (isMetaMaskInternalProcess) {\n      const portStream = new PortStream(remotePort);\n      // communication with popup\n      controller.isClientOpen = true;\n      controller.setupTrustedCommunication(portStream, remotePort.sender);\n\n      if (processName === ENVIRONMENT_TYPE_POPUP) {\n        popupIsOpen = true;\n        endOfStream(portStream, () => {\n          popupIsOpen = false;\n          const isClientOpen = isClientOpenStatus();\n          controller.isClientOpen = isClientOpen;\n          onCloseEnvironmentInstances(isClientOpen, ENVIRONMENT_TYPE_POPUP);\n        });\n      }\n\n      if (processName === ENVIRONMENT_TYPE_NOTIFICATION) {\n        notificationIsOpen = true;\n\n        endOfStream(portStream, () => {\n          notificationIsOpen = false;\n          const isClientOpen = isClientOpenStatus();\n          controller.isClientOpen = isClientOpen;\n          onCloseEnvironmentInstances(\n            isClientOpen,\n            ENVIRONMENT_TYPE_NOTIFICATION,\n          );\n        });\n      }\n\n      if (processName === ENVIRONMENT_TYPE_FULLSCREEN) {\n        const tabId = remotePort.sender.tab.id;\n        openMetamaskTabsIDs[tabId] = true;\n\n        endOfStream(portStream, () => {\n          delete openMetamaskTabsIDs[tabId];\n          const isClientOpen = isClientOpenStatus();\n          controller.isClientOpen = isClientOpen;\n          onCloseEnvironmentInstances(\n            isClientOpen,\n            ENVIRONMENT_TYPE_FULLSCREEN,\n          );\n        });\n      }\n    } else {\n      if (remotePort.sender && remotePort.sender.tab && remotePort.sender.url) {\n        const tabId = remotePort.sender.tab.id;\n        const url = new URL(remotePort.sender.url);\n        const { origin } = url;\n\n        remotePort.onMessage.addListener((msg) => {\n          if (msg.data && msg.data.method === 'eth_requestAccounts') {\n            requestAccountTabIds[origin] = tabId;\n          }\n        });\n      }\n      connectExternal(remotePort);\n    }\n  }\n\n  // communication with page or other extension\n  function connectExternal(remotePort) {\n    const portStream = new PortStream(remotePort);\n    controller.setupUntrustedCommunication({\n      connectionStream: portStream,\n      sender: remotePort.sender,\n    });\n  }\n\n  //\n  // User Interface setup\n  //\n\n  updateBadge();\n  controller.txController.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.messageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.personalMessageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.decryptMessageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.encryptionPublicKeyManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.typedMessageManager.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n  controller.appStateController.on(\n    METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,\n    updateBadge,\n  );\n\n  controller.controllerMessenger.subscribe(\n    METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,\n    updateBadge,\n  );\n\n  /**\n   * Updates the Web Extension's \"badge\" number, on the little fox in the toolbar.\n   * The number reflects the current number of pending transactions or message signatures needing user approval.\n   */\n  function updateBadge() {\n    let label = '';\n    const count = getUnapprovedTransactionCount();\n    if (count) {\n      label = String(count);\n    }\n    extension.browserAction.setBadgeText({ text: label });\n    extension.browserAction.setBadgeBackgroundColor({ color: '#037DD6' });\n  }\n\n  function getUnapprovedTransactionCount() {\n    const unapprovedTxCount = controller.txController.getUnapprovedTxCount();\n    const { unapprovedMsgCount } = controller.messageManager;\n    const { unapprovedPersonalMsgCount } = controller.personalMessageManager;\n    const { unapprovedDecryptMsgCount } = controller.decryptMessageManager;\n    const {\n      unapprovedEncryptionPublicKeyMsgCount,\n    } = controller.encryptionPublicKeyManager;\n    const { unapprovedTypedMessagesCount } = controller.typedMessageManager;\n    const pendingApprovalCount = controller.approvalController.getTotalApprovalCount();\n    const waitingForUnlockCount =\n      controller.appStateController.waitingForUnlock.length;\n    return (\n      unapprovedTxCount +\n      unapprovedMsgCount +\n      unapprovedPersonalMsgCount +\n      unapprovedDecryptMsgCount +\n      unapprovedEncryptionPublicKeyMsgCount +\n      unapprovedTypedMessagesCount +\n      pendingApprovalCount +\n      waitingForUnlockCount\n    );\n  }\n\n  notificationManager.on(\n    NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,\n    ({ automaticallyClosed }) => {\n      if (!automaticallyClosed) {\n        rejectUnapprovedNotifications();\n      } else if (getUnapprovedTransactionCount() > 0) {\n        triggerUi();\n      }\n    },\n  );\n\n  function rejectUnapprovedNotifications() {\n    Object.keys(\n      controller.txController.txStateManager.getUnapprovedTxList(),\n    ).forEach((txId) =>\n      controller.txController.txStateManager.setTxStatusRejected(txId),\n    );\n    controller.messageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.messageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE_SIG,\n        ),\n      );\n    controller.personalMessageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.personalMessageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE_SIG,\n        ),\n      );\n    controller.typedMessageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.typedMessageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE_SIG,\n        ),\n      );\n    controller.decryptMessageManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.decryptMessageManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE,\n        ),\n      );\n    controller.encryptionPublicKeyManager.messages\n      .filter((msg) => msg.status === 'unapproved')\n      .forEach((tx) =>\n        controller.encryptionPublicKeyManager.rejectMsg(\n          tx.id,\n          REJECT_NOTFICIATION_CLOSE,\n        ),\n      );\n\n    // Finally, reject all approvals managed by the ApprovalController\n    controller.approvalController.clear(\n      ethErrors.provider.userRejectedRequest(),\n    );\n\n    updateBadge();\n  }\n\n  return Promise.resolve();\n}\n\n//\n// Etc...\n//\n\n/**\n * Opens the browser popup for user confirmation\n */\nasync function triggerUi() {\n  const tabs = await platform.getActiveTabs();\n  const currentlyActiveMetamaskTab = Boolean(\n    tabs.find((tab) => openMetamaskTabsIDs[tab.id]),\n  );\n  // Vivaldi is not closing port connection on popup close, so popupIsOpen does not work correctly\n  // To be reviewed in the future if this behaviour is fixed - also the way we determine isVivaldi variable might change at some point\n  const isVivaldi =\n    tabs.length > 0 &&\n    tabs[0].extData &&\n    tabs[0].extData.indexOf('vivaldi_tab') > -1;\n  if (\n    !uiIsTriggering &&\n    (isVivaldi || !popupIsOpen) &&\n    !currentlyActiveMetamaskTab\n  ) {\n    uiIsTriggering = true;\n    try {\n      await notificationManager.showPopup();\n    } finally {\n      uiIsTriggering = false;\n    }\n  }\n}\n\n/**\n * Opens the browser popup for user confirmation of watchAsset\n * then it waits until user interact with the UI\n */\nasync function openPopup() {\n  await triggerUi();\n  await new Promise((resolve) => {\n    const interval = setInterval(() => {\n      if (!notificationIsOpen) {\n        clearInterval(interval);\n        resolve();\n      }\n    }, SECOND);\n  });\n}\n\n// On first install, open a new tab with MetaMask\nextension.runtime.onInstalled.addListener(({ reason }) => {\n  if (\n    reason === 'install' &&\n    !(process.env.METAMASK_DEBUG || process.env.IN_TEST)\n  ) {\n    platform.openExtensionInBrowser();\n  }\n});\n"]}