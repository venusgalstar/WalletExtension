{"version":3,"sources":["node_modules/reselect/lib/index.js","ui/pages/send/send.constants.js","node_modules/crc-32/crc32.js","node_modules/@ethereumjs/common/dist.browser/chains/index.js","node_modules/@ethereumjs/common/dist.browser/eips/index.js","node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","node_modules/@ethereumjs/tx/dist.browser/transactionFactory.js","node_modules/@ethereumjs/tx/dist.browser/types.js","node_modules/@ethereumjs/tx/dist.browser/eip2930Transaction.js","node_modules/@ethereumjs/tx/dist.browser/eip1559Transaction.js","node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js","node_modules/safe-buffer/index.js","node_modules/utf8/utf8.js","node_modules/aes-js/index.js","node_modules/randombytes/browser.js","node_modules/bs58check/index.js","node_modules/clone/clone.js","node_modules/browserify-sign/algos.js","node_modules/randomfill/browser.js","node_modules/browserify-sign/browser/index.js","node_modules/pbkdf2/browser.js","node_modules/create-hash/browser.js","node_modules/create-hmac/browser.js","node_modules/diffie-hellman/browser.js","node_modules/browserify-cipher/browser.js","node_modules/create-ecdh/browser.js","node_modules/public-encrypt/browser.js","node_modules/isomorphic-fetch/node_modules/whatwg-fetch/dist/fetch.umd.js","node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js","node_modules/ethereumjs-util/dist.browser/helpers.js","node_modules/rlp/dist.browser/index.js","node_modules/is-hex-prefixed/src/index.js","node_modules/strip-hex-prefix/src/index.js","node_modules/ethereum-cryptography/secp256k1.js","node_modules/ethereum-cryptography/keccak.js","node_modules/browserify-unibabel/index.js","node_modules/bip39/wordlists/chinese_traditional.json","node_modules/bip39/wordlists/italian.json","node_modules/bip39/wordlists/chinese_simplified.json","node_modules/bip39/wordlists/english.json","node_modules/bip39/wordlists/japanese.json","node_modules/bip39/wordlists/french.json","node_modules/bip39/wordlists/korean.json","node_modules/bip39/wordlists/spanish.json","node_modules/unorm/lib/unorm.js","node_modules/eth-hd-keyring/node_modules/ethereumjs-wallet/dist/index.js","node_modules/eth-simple-keyring/node_modules/ethereumjs-wallet/dist/index.js","node_modules/@metamask/controllers/dist/constants.js","node_modules/@metamask/controllers/dist/apis/crypto-compare.js","node_modules/@metamask/controllers/dist/message-manager/AbstractMessageManager.js","node_modules/uuid/dist/index.js","node_modules/@metamask/controllers/dist/assets/assetsUtil.js","node_modules/async-mutex/lib/index.js","node_modules/@metamask/controllers/node_modules/nanoid/index.browser.cjs","node_modules/immer/dist/index.js","node_modules/@metamask/controllers/dist/apis/token-service.js","node_modules/abort-controller/browser.js","node_modules/@metamask/contract-metadata/index.js","node_modules/@metamask/metamask-eth-abis/dist/index.js","node_modules/@metamask/controllers/dist/gas/determineGasFeeCalculations.js","node_modules/@metamask/controllers/dist/gas/gas-util.js","node_modules/@metamask/controllers/dist/gas/fetchGasEstimatesViaEthFeeHistory.js","node_modules/ethjs-unit/lib/index.js","node_modules/multiformats/cjs/src/cid.js","node_modules/eth-phishing-detect/src/config.json","node_modules/eth-phishing-detect/src/detector.js","node_modules/@metamask/controllers/node_modules/ethereumjs-wallet/dist/index.js","node_modules/@metamask/controllers/dist/assets/Standards/ERC20Standard.js","node_modules/@metamask/controllers/dist/assets/Standards/CollectibleStandards/ERC1155/ERC1155Standard.js","node_modules/@metamask/controllers/dist/assets/Standards/CollectibleStandards/ERC721/ERC721Standard.js","node_modules/web3-provider-engine/subproviders/provider.js","node_modules/eth-json-rpc-infura/src/createProvider.js","node_modules/web3-provider-engine/zero.js","node_modules/@metamask/controllers/node_modules/eth-method-registry/index.js","node_modules/@babel/runtime/helpers/classCallCheck.js","node_modules/@babel/runtime/helpers/createClass.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/slicedToArray.js","node_modules/is-buffer/index.js","node_modules/number-to-bn/src/index.js","node_modules/ethjs-schema/src/schema.json","node_modules/ethjs-abi/lib/utils/index.js","node_modules/babel-runtime/node_modules/core-js/library/fn/object/assign.js","node_modules/babel-runtime/regenerator/index.js","node_modules/babel-runtime/core-js/json/stringify.js","node_modules/babel-runtime/helpers/asyncToGenerator.js","node_modules/babel-runtime/core-js/object/keys.js","node_modules/browserify/node_modules/punycode/punycode.js","node_modules/idna-uts46-hx/idna-map.js","ui/selectors/first-time-flow.js","ui/selectors/custom-gas.js","ui/selectors/metametrics.js","ui/selectors/transactions.js","ui/selectors/permissions.js","ui/selectors/confirm-transaction.js","ui/selectors/selectors.js","node_modules/currency-formatter/localeFormats.json","node_modules/currency-formatter/currencies.json","node_modules/accounting/accounting.js","node_modules/locale-currency/index.js","node_modules/web3/lib/version.json","node_modules/web3/lib/web3/settings.js","node_modules/web3/lib/web3/property.js","node_modules/web3/lib/web3/ipcprovider.js","node_modules/web3/lib/web3/batch.js","node_modules/web3/node_modules/bignumber.js/bignumber.js","node_modules/web3/lib/web3/methods/swarm.js","node_modules/web3/lib/web3/methods/net.js","node_modules/web3/lib/web3/methods/db.js","node_modules/web3/lib/web3/methods/personal.js","node_modules/web3/lib/web3/iban.js","node_modules/web3/lib/utils/utils.js","node_modules/web3/lib/web3/extend.js","node_modules/web3/lib/web3/methods/shh.js"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","defaultMemoize","func","arguments","undefined","lastArgs","lastResult","apply","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","concat","selector","params","push","resetRecomputations","exports","__esModule","createStructuredSelector","selectors","selectorCreator","createSelector","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index","_conversion","require","_util","MIN_GAS_PRICE_HEX","parseInt","toString","MIN_GAS_LIMIT_DEC","MIN_GAS_LIMIT_HEX","MIN_GAS_PRICE_GWEI","addHexPrefix","conversionUtil","fromDenomination","toDenomination","fromNumericBase","toNumericBase","numberOfDecimals","MIN_GAS_TOTAL","multiplyCurrencies","multiplicandBase","multiplierBase","factory","CRC32","version","T","c","table","n","Int32Array","signed_crc_table","bstr","seed","C","L","charCodeAt","buf","crc32_buf_8","str","d","DO_NOT_EXPORT_CRC","define","amd","module","__values","this","o","s","Symbol","iterator","m","call","done","TypeError","__importDefault","mod","default","defineProperty","chains","_getInitializedChains","mainnet_json_1","ropsten_json_1","rinkeby_json_1","kovan_json_1","goerli_json_1","calaveras_json_1","customChains","e_1","_a","names","mainnet","ropsten","rinkeby","kovan","goerli","calaveras","customChains_1","customChains_1_1","chain","name_1","name","chainId","e_1_1","error","return","EIPs","hardforks","ethereumjs_util_1","_1","TransactionFactory","fromTxData","txData","txOptions","type","txType","BN","toBuffer","toNumber","Transaction","AccessListEIP2930Transaction","FeeMarketEIP1559Transaction","fromSerializedData","data","EIP","fromSerializedTx","fromBlockBodyData","Buffer","isBuffer","fromValuesArray","getTransactionClass","transactionID","common","N_DIV_2","isAccessList","isAccessListBuffer","Capability","input","firstItem","extendStatics","__extends","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","__read","r","e","ar","baseTransaction_1","types_1","util_1","TRANSACTION_TYPE_BUFFER","from","padStart","_super","opts","_b","_this","DEFAULT_HARDFORK","accessList","gasPrice","_getCommon","chainIdBN","isActivatedEIP","activeCapabilities","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","_validateCannotExceedMaxInteger","v","eqn","gteHardfork","gt","freeze","get","enumerable","configurable","serialized","slice","equals","rlp","decode","fromRlpSerializedTx","nonce","gasLimit","to","getDataFee","cost","iaddn","getDataFeeEIP2930","getUpfrontCost","mul","add","raw","bnToUnpaddedBuffer","serialize","base","encode","getMessageToSign","hashMessage","message","keccak256","hash","isSigned","getMessageToVerifySignature","getSenderPublicKey","msgHash","yParity","ecrecover","addn","_processSignature","toJSON","accessListJSON","getAccessListJSON","bnToHex","BaseTransaction","maxFeePerGas","maxPriorityFeePerGas","lt","baseFee","min","sub","_validateTxV","chainIdDoubled","muln","eq","EIP155ReplayProtection","_getMessageToSign","supports","unpadBuffer","rlphash","vBN","iadd","numSub","subn","isEven","divn","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","size","fill","encoding","SlowBuffer","root","byteArray","byteCount","byteIndex","stringFromCharCode","String","fromCharCode","ucs2decode","string","extra","output","counter","checkScalarValue","codePoint","toUpperCase","createByte","shift","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","codePoints","byteString","tmp","array","ucs2encode","utf8","checkInt","checkInts","arrayish","coerceArray","copy","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","Hex","convertUtf8","toBytes","text","result","encodeURI","substr","fromBytes","bytes","convertHex","numberOfRounds","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","Number","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","padding","pkcs7","pad","padder","strip","_arrayTest","_aesjs","MAX_BYTES","MAX_UINT32","crypto","global","msCrypto","getRandomValues","cb","RangeError","generated","process","nextTick","createHash","bs58checkBase","update","digest","clone","_instanceof","obj","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","parent","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","Infinity","_clone","child","proto","resolve","reject","then","err","__isArray","__isRegExp","RegExp","source","__getRegExpFlags","lastIndex","__isDate","Date","getTime","getPrototypeOf","indexOf","forEach","keyChild","valueChild","entryChild","attrs","getOwnPropertyDescriptor","getOwnPropertySymbols","symbols","descriptor","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","re","flags","ignoreCase","multiline","clonePrototype","oldBrowser","safeBuffer","randombytes","kBufferMaxLength","kMaxLength","kMaxUint32","Math","pow","assertOffset","offset","assertSize","actualFill","browser","ourBuf","uint","randomFill","randomFillSync","stream","inherits","sign","verify","algorithms","Sign","algorithm","Writable","_hashType","_hash","_tag","id","_signType","Verify","createSign","createVerify","toLowerCase","_write","enc","end","sig","pbkdf2","pbkdf2Sync","MD5","RIPEMD160","sha","Base","Hash","_update","_final","alg","Legacy","md5","ZEROS","Hmac","blocksize","_alg","ipad","_ipad","opad","_opad","h","generatePrime","primes","DH","ENCODINGS","binary","base64","DiffieHellmanGroup","createDiffieHellmanGroup","getDiffieHellman","prime","gen","createDiffieHellman","DiffieHellman","generator","genc","ebtk","aes","DES","desModes","aesModes","createCipheriv","suite","mode","createDecipheriv","createCipher","Cipher","password","keyLen","ivLen","Cipheriv","createDecipher","Decipher","Decipheriv","listCiphers","getCiphers","elliptic","curve","ECDH","aliases","secp256k1","byteLength","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","curveType","ec","formatReturnValue","bn","len","toArray","zeros","p224","p256","secp256r1","p192","secp192r1","p384","p521","generateKeys","format","genKeyPair","getPublicKey","computeSecret","other","inenc","keyFromPublic","getPublic","getPrivate","getX","getPrivateKey","setPublicKey","pub","_importPublic","setPrivateKey","priv","_priv","_importPrivate","publicEncrypt","privateDecrypt","privateEncrypt","publicDecrypt","WHATWGFetch","globalThis","self","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","test","normalizeValue","iteratorFor","items","Headers","headers","append","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","isConsumed","byteOffset","readAsText","chars","readArrayBufferAsText","formData","json","JSON","parse","oldValue","has","callback","thisArg","entries","methods","Request","options","method","upcased","url","credentials","signal","referrer","cache","reParamSearch","replace","form","trim","split","decodeURIComponent","Response","bodyInit","status","ok","statusText","response","redirectStatuses","redirect","location","DOMException","stack","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","setTimeout","ontimeout","onabort","open","href","fixUrl","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","assert","val","msg","ctor","superCtor","super_","TempCtor","number","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","parseHexByte","lowerBound","parseBase","start","move","dest","num","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","w","off","_strip","limbLen","limbPow","total","word","imuln","_iaddn","_move","_expand","_normSign","for","inspect","groupSizes","groupBases","out","carry","groupSize","groupBase","isZero","modrn","idivn","ret","toArrayLike","smallMulTo","lo","k","ncarry","rword","maxJ","ArrayType","reqLength","res","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","D","g","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","gte","ltn","lten","lte","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","k256","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","outLen","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","assertIsString","assertIsArray","assertIsBuffer","assertIsHexString","ethjs_util_1","isHexString","getLength","bn_js_1","safeParseInt","encodeLength","hexLength","intToHex","firstByte","_decode","llength","innerRemainder","decoded","remainder","totalLength","isHexPrefixed","integer","inputBuf","inputBuffer","__awaiter","_arguments","P","fulfilled","step","__generator","f","label","sent","trys","ops","verb","throw","op","secp256k1_1","random_1","createPrivateKey","pk","getRandomBytes","privateKeyVerify","createPrivateKeySync","getRandomBytesSync","__export","hash_utils_1","createKeccakHash","keccak224","createHashFunction","keccak384","keccak512","utf8ToBinaryString","encodeURIComponent","match","p1","utf8ToBuffer","binaryStringToBuffer","binaryStringToUtf8","binstr","escstr","code","bufferToUtf8","bufferToBinaryString","ch","bufferToBase64","arr","btoa","base64ToBuffer","atob","utf8ToBase64","base64ToUtf8","b64","strToUtf8Arr","utf8ArrToStr","arrToBase64","base64ToArr","DEFAULT_FEATURE","SBase","LBase","UChar","cp","feature","codepoint","cacheCounter","strategies","needFeature","SIndex","TIndex","floor","VCount","udata","reduceRight","strategy","isHighSurrogate","isLowSurrogate","prepFeature","getDecomp","isCompatibility","isExclude","getCanonicalClass","getComposite","following","UCharIterator","cursor","RecursDecompIterator","it","cano","canonical","resBuf","uchar","recursiveDecomp","decomp","DecompIterator","cc","inspt","splice","CompIterator","procBuf","lastClass","composite","normalize","createIterator","unorm","nfc","nfd","nfkc","nfkd","shimApplied","writable","scrypt_js_1","hdkey_1","thirdparty_1","bs58check","randomBytes","uuidv4","validateHexString","paramName","startsWith","validateBuffer","buff","Wallet","privateKey","publicKey","isValidPrivate","isValidPublic","generate","icapDirect","privateToAddress","generateVanityAddress","pattern","address","fromPublicKey","nonStrict","importPublic","fromExtendedPublicKey","extendedPublicKey","fromPrivateKey","fromExtendedPrivateKey","extendedPrivateKey","fromV1","kdfparams","derivedKey","decipher","Version","Crypto","KeyHeader","Kdf","KdfParams","scrypt","Salt","R","DkLen","CipherText","MAC","IV","runCipherBuffer","fromV3","kdf","salt","dklen","prf","mac","cipher","cipherparams","fromEthSale","encseed","wallet","getAddress","ethaddr","keyExists","privateToPublic","privKey","getPrivateKeyString","bufferToHex","pubKey","getPublicKeyString","publicToAddress","getAddressString","getChecksumAddressString","toChecksumAddress","toV3","v3Params","kdfParams","v3Defaults","uuid","kdfParamsForPBKDF","kdfParamsForScrypt","random","getV3Filename","timestamp","toV3String","_c","stringify","final","GWEI","ERC1155_TOKEN_RECEIVER_INTERFACE_ID","ERC1155_METADATA_URI_INTERFACE_ID","ERC1155_INTERFACE_ID","ERC721_ENUMERABLE_INTERFACE_ID","ERC721_METADATA_INTERFACE_ID","ERC721_INTERFACE_ID","ERC20","ERC1155","ERC721","RINKEBY_CHAIN_ID","IPFS_DEFAULT_GATEWAY_URL","FALL_BACK_VS_CURRENCY","RPC","MAINNET","fetchExchangeRate","currency","nativeCurrency","includeUSDRate","handleFetch","currentCurrency","getPricingURL","Message","conversionRate","usdConversionRate","USD","isFinite","AbstractMessageManager","events_1","BaseController_1","BaseController","config","state","super","hub","EventEmitter","defaultState","unapprovedMessages","unapprovedMessagesCount","messages","initialize","saveMessageList","getUnapprovedMessages","getUnapprovedMessagesCount","emit","setMessageStatus","messageId","getMessage","updateMessage","findIndex","filter","addMessage","find","approveMessage","messageParams","setMessageStatusApproved","metamaskId","prepMessageForSigning","setMessageStatusSigned","rawSig","rejectMessage","_v","_v2","_v3","_v4","_nil","_version","_validate","_stringify","_parse","_interopRequireDefault","compareCollectiblesMetadata","newCollectibleMetadata","collectible","withTimeout","Semaphore","Mutex","Mutex_1","Semaphore_1","withTimeout_1","urlAlphabet","customRandom","alphabet","getRandom","log","LN2","nanoid","byte","customAlphabet","fetchTokenMetadata","fetchTokenList","END_POINT","queryApi","apiURL","abortSignal","fetchOptions","referrerPolicy","timeoutFetch","console","parseJsonResponse","apiResponse","responseObj","tokenURL","getTokensURL","tokenAddress","tokenMetadataURL","getTokenMetadataURL","AbortController","abiERC1155","abiERC721","abiERC20","abiERC20_1","abiERC721_1","abiERC1155_1","GasFeeController_1","isEIP1559Compatible","isLegacyGasAPICompatible","fetchGasEstimates","fetchGasEstimatesUrl","fetchGasEstimatesViaEthFeeHistory","fetchLegacyGasPriceEstimates","fetchLegacyGasPriceEstimatesUrl","fetchEthGasPriceEstimate","calculateTimeEstimate","clientId","ethQuery","estimates","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","gasFeeEstimates","estimatedGasFeeTimeBounds","gasEstimateType","GAS_ESTIMATE_TYPES","FEE_MARKET","LEGACY","ETH_GASPRICE","normalizeGWEIDecimalNumbers","makeClientIdHeader","numberAsWEIHex","gweiDecToWEIBN","weiHexToGweiDec","low","high","estimatedBaseFee","historicalBaseFeeRange","baseFeeTrend","latestPriorityFeeRange","historicalPriorityFeeRange","priorityFeeTrend","networkCongestion","SafeGasPrice","ProposeGasPrice","FastGasPrice","query","maxPriorityFeePerGasInWEI","maxFeePerGasInWEI","estimatedBaseFeeInWEI","effectiveMaxPriorityFee","lowMaxPriorityFeeInWEI","mediumMaxPriorityFeeInWEI","highMaxPriorityFeeInWEI","lowerTimeBound","upperTimeBound","minWaitTimeEstimate","maxWaitTimeEstimate","ethjs_unit_1","constants_1","BlockFeeHistoryDatasetFetcher_1","calculateGasFeeEstimatesForPriorityLevels_1","calculateBaseFeeRange_1","calculateBaseFeeTrend_1","calculatePriorityFeeRange_1","calculatePriorityFeeTrend_1","calculateNetworkCongestion_1","fetchLatestBlock_1","latestBlock","fetcher","endBlockNumber","blocksByDataset","forAll","levelSpecificEstimates","smallRange","fromWei","baseFeePerGas","mediumRange","latestWithNextBlock","latest","tinyRange","longRange","numberToBN","zero","negative1","unitMap","noether","wei","kwei","Kwei","babbage","femtoether","mwei","Mwei","lovelace","picoether","gwei","Gwei","shannon","nanoether","nano","szabo","microether","micro","finney","milliether","milli","ether","kether","grand","mether","gether","tether","getValueOfUnit","unitInput","unit","unitValue","numberToString","dividedToIntegerBy","toPrecision","weiInput","optionsInput","baseLength","fraction","whole","commify","toWei","etherInput","substring","comps","varint","base58","base32","CID","multihash","asCID","_baseCache","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","digest$1","createV1","toStringV0","base58btc","encoder","toStringV1","toStringTag","static","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","prefix","encodeCID","cid","decodeFirst","bytes$1","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","coerce","subarray","digestBytes","digestSize","Digest","multihashCode","initialBytes","parseCIDtoBytes","decoder","codeOffset","encodingLength","hashOffset","encodeTo","range","warn","tolerance","fuzzylist","whitelist","blacklist","levenshtein","processDomainList","list","domainToParts","domain","reverse","domainPartsToFuzzyForm","domainParts","matchPartsAgainstList","some","target","part","check","fuzzyForm","levenshteinMatched","targetParts","fuzzyTarget","ERC20Standard","metamask_eth_abis_1","web3","getBalanceOf","selectedAddress","contract","eth","at","balanceOf","getTokenDecimals","decimals","getTokenSymbol","getDetails","userAddress","all","balance","standard","ERC1155Standard","contractSupportsURIMetadataInterface","contractSupportsInterface","contractSupportsTokenReceiverInterface","contractSupportsBase1155Interface","getTokenURI","tokenId","uri","contractAddress","transferSingle","operator","interfaceId","supportsInterface","isERC1155","tokenURI","ERC721Standard","contractSupportsMetadataInterface","contractSupportsEnumerableInterface","contractSupportsBase721Interface","getCollectibleTokenId","tokenOfOwnerByIndex","getAssetName","getAssetSymbol","isERC721","supportsMetadata","getOwnerOf","ownerOf","Subprovider","ProviderSubprovider","provider","sendAsync","handleRequest","payload","RpcEngine","providerFromEngine","createInfuraMiddleware","engine","ProviderEngine","DefaultFixture","NonceTrackerSubprovider","CacheSubprovider","FilterSubprovider","SubscriptionSubprovider","InflightCacheSubprovider","HookedWalletSubprovider","SanitizingSubprovider","InfuraSubprovider","FetchSubprovider","WebSocketSubprovider","connectionType","rpcUrl","getConnectionType","engineParams","staticSubprovider","addProvider","sanitizer","cacheSubprovider","inflightCache","idmgmtSubprovider","getAccounts","processTransaction","approveTransaction","signTransaction","publishTransaction","processMessage","signMessage","processPersonalMessage","processTypedMessage","approvePersonalMessage","approveTypedMessage","signPersonalMessage","signTypedMessage","personalRecoverSigner","dataSubprovider","debug","createDataSubprovider","stopped","Eth","registryMap","abi","HttpProvider","network","registry","async","signature","charAt","args","instance","Constructor","_defineProperties","props","protoProps","staticProps","asyncGeneratorStep","_next","_throw","info","fn","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","readFloatLE","isSlowBuffer","_isBuffer","stripHexPrefix","multiplier","formattedString","stringArg","web3_clientVersion","web3_sha3","net_version","net_peerCount","net_listening","personal_sign","personal_ecRecover","eth_protocolVersion","eth_syncing","eth_coinbase","eth_mining","eth_hashrate","eth_gasPrice","eth_accounts","eth_blockNumber","eth_getBalance","eth_getStorageAt","eth_getTransactionCount","eth_getBlockTransactionCountByHash","eth_getBlockTransactionCountByNumber","eth_getUncleCountByBlockHash","eth_getUncleCountByBlockNumber","eth_getCode","eth_sign","eth_signTypedData","eth_sendTransaction","eth_sendRawTransaction","eth_call","eth_estimateGas","eth_getBlockByHash","eth_getBlockByNumber","eth_getTransactionByHash","eth_getTransactionByBlockHashAndIndex","eth_getTransactionByBlockNumberAndIndex","eth_getTransactionReceipt","eth_getUncleByBlockHashAndIndex","eth_getUncleByBlockNumberAndIndex","eth_getCompilers","eth_compileLLL","eth_compileSolidity","eth_compileSerpent","eth_newFilter","eth_newBlockFilter","eth_newPendingTransactionFilter","eth_uninstallFilter","eth_getFilterChanges","eth_getFilterLogs","eth_getLogs","eth_getWork","eth_submitWork","eth_submitHashrate","db_putString","db_getString","db_putHex","db_getHex","shh_post","shh_version","shh_newIdentity","shh_hasIdentity","shh_newGroup","shh_addToGroup","shh_newFilter","shh_uninstallFilter","shh_getFilterChanges","shh_getMessages","tags","objects","EthSyncing","__required","startingBlock","currentBlock","highestBlock","SendTransaction","gas","EstimateTransaction","CallTransaction","Block","parentHash","sha3Uncles","logsBloom","transactionsRoot","stateRoot","receiptsRoot","miner","difficulty","totalDifficulty","extraData","gasUsed","transactions","uncles","blockHash","blockNumber","transactionIndex","Receipt","transactionHash","cumulativeGasUsed","logs","Filter","fromBlock","toBlock","topics","FilterChange","removed","logIndex","SHHPost","priority","ttl","SHHFilter","SHHFilterChange","expiry","workProved","SHHMessage","keccak_256","stripZeros","aInput","first","bnToBuffer","bnInput","hexOrBuffer","valueInput","reason","coderNumber","signed","junkLength","uint256Coder","coderBoolean","coderFixedBytes","coderAddress","encodeDynamicBytesHelper","dataLength","decodeDynamicBytesHelper","coderDynamicBytes","dynamic","coderString","coderArray","coder","lengthInput","resultValue","offsetInput","decodeResult","loopResult","paramTypePart","hexlify","modulo","getKeys","allowEmpty","getParamCoder","typeInput","invalidTypeErrorMessage","intSize","_promise","_promise2","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","mapDomain","digitToBasic","digit","flag","adapt","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","inputLength","bias","lastIndexOf","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toASCII","toUnicode","blocks","Uint32Array","blockIdxes","Uint16Array","mapStr","mapChar","uts46_map","firstTimeFlowType","metamask","nextRoute","_routes","INITIALIZE_CREATE_PASSWORD_ROUTE","INITIALIZE_IMPORT_WITH_SEED_PHRASE_ROUTE","DEFAULT_ROUTE","onboardingTabs","tabId","getGasPriceInHexWei","getAverageEstimate","gasButtonInfo","customGasPriceInHex","priceInHexWei","getFastPriceEstimate","_metamask","getGasEstimateType","_gas","getIsMainnet","NONE","getBasicGasEstimateLoadingStatus","showFiat","getShouldShowFiat","getCurrentCurrency","slowEstimateData","averageEstimateData","fastEstimateData","getRenderableGasButtonData","getGasFeeEstimates","getIsGasEstimatesFetched","getCustomGasLimit","GAS_LIMITS","SIMPLE","_common","SLOW","feeInSecondaryCurrency","getRenderableConvertedCurrencyFee","feeInPrimaryCurrency","getRenderableEthFee","AVERAGE","FAST","checkSend","customPrice","_send2","getGasPrice","getCustomGasPrice","fastPrice","conversionGreaterThan","safeLow","getSafeLowEstimate","customGasPrice","estimatedPrice","_confirmTx","_conversions","_formatters","_send","customData","limit","price","basicPriceEstimateToETHTotal","estimate","calcGasTotal","fee","formatETHFee","convertedCurrency","feeInCurrency","decEthToConvertedCurrency","formatCurrency","priceEstimateToWei","priceEstimate","isEIP1559Network","_reselect","selectFragments","fragments","selectFragmentBySuccessEvent","fragmentOptions","persist","fragment","successEvent","selectFragmentById","fragmentId","selectMatchingFragment","existingId","matchedBySuccessEvent","matchedById","_transactions","_txHelper","_transaction","_transaction2","_selectors","incomingTxListSelector","showIncomingTransactions","featureFlags","getSelectedAddress","incomingTransactions","tx","txParams","transactionMatchesNetwork","unapprovedMsgsSelector","unapprovedMsgs","currentNetworkTxListSelector","currentNetworkTxList","unapprovedPersonalMsgsSelector","unapprovedPersonalMsgs","unapprovedDecryptMsgsSelector","unapprovedDecryptMsgs","unapprovedEncryptionPublicKeyMsgsSelector","unapprovedEncryptionPublicKeyMsgs","unapprovedTypedMessagesSelector","unapprovedTypedMessages","smartTransactionsListSelector","_state$metamask$smart","_state$metamask$smart2","_state$metamask$smart3","smartTransactionsState","smartTransactions","getCurrentChainId","stx","confirmed","_stx$status","_objectSpread","transactionType","TRANSACTION_TYPES","SMART","SMART_TRANSACTION_STATUSES","CANCELLED","selectedAddressTxListSelector","smTransactions","unapprovedMessagesSelector","deprecatedGetCurrentNetworkId","transactionSubSelector","incomingTxList","transactionsSelector","subSelectorTxList","selectedAddressTxList","sort","time","insertTransactionGroupByTime","transactionGroups","transactionGroup","primaryTransaction","groupToInsertTime","insertIndex","txGroup","nonceSortedTransactionsSelector","unapprovedTransactionGroups","incomingTransactionGroups","orderedNonces","nonceToTransactionsMap","transaction","txTime","INCOMING","initialTransaction","hasRetried","hasCancelled","_nonceProps$primaryTr","_nonceProps$primaryTr2","_transaction$txReceip","nonceProps","insertTransactionByTime","primaryTxTime","previousPrimaryIsNetworkFailure","TRANSACTION_STATUSES","FAILED","txReceipt","currentTransactionIsOnChainFailure","CONFIRMED","PRIORITY_STATUS_HASH","initialTxTime","RETRY","CANCEL","nonces","nonceToInsert","hexToDecimal","insertOrderedNonce","orderedTransactionGroups","nonNonceTransactionGroups","mergeNonNonceTransactionGroups","nonceSortedPendingTransactionsSelector","PENDING_STATUS_HASH","nonceSortedCompletedTransactionsSelector","submittedPendingTransactionsSelector","SUBMITTED","_subjects$activeTab$o2","activeTab","subjects","Boolean","origin","permissions","connectedAccounts","getPermittedAccountsForCurrentTab","identities","numberOfAccounts","subjectMetadata","getSubjectMetadata","accountsMap","getPermittedAccountsByOrigin","addressConnectedIconMap","subjectKey","iconUrl","nameToRender","getPermissionSubjects","connectedSubjects","subjectValue","getAccountsFromSubject","includes","extensionId","requests","getPermissionsRequests","permissionHistory","lastConnectedInfo","_permissionHistory$ac","_permissionHistory$ac2","permissionHistoryByAccount","accounts","orderedAccounts","getMetaMaskAccountsOrdered","account","lastActive","lastSelected","lastSelectedA","lastSelectedB","_subjects$activeTab$o","parentCapability","permissionName","getTargetSubjectMetadata","_permissions","getPermittedAccounts","getAccountsFromPermission","getAccountsPermissionFromSubject","_state$metamask$subje","subjectSelector","getOriginOfCurrentTab","subject","_subject$permissions","accountsPermission","accountsCaveat","caveats","caveat","CaveatTypes","restrictReturnedAccounts","getAccountsCaveatFromPermission","pendingApprovals","requestData","_tokenUtil","_gas2","_customGas","unapprovedTxsSelector","unapprovedTxs","unconfirmedTransactionsListSelector","unconfirmedTransactionsHashSelector","filteredUnapprovedTxs","unconfirmedTransactionsCountSelector","unapprovedMsgCount","unapprovedPersonalMsgCount","unapprovedDecryptMsgCount","unapprovedEncryptionPublicKeyMsgCount","unapprovedTypedMessagesCount","txId","currentCurrencySelector","conversionRateSelector","txDataSelector","confirmTransaction","tokenDecimalsSelector","tokenProps","tokenDataArgsSelector","tokenData","txParamsSelector","tokenAddressSelector","sendTokenTokenAmountAndToAddressSelector","tokenDecimals","toAddress","tokenAmount","calcTokenAmount","toFixed","roundExponential","contractExchangeRateSelector","contractExchangeRates","isEqualCaseInsensitive","_txData$txParams$gas","_txData$txParams","_txData$txParams$gasP2","_txData$txParams8","_txData$txParams$gasP3","_txData$txParams9","_txData$txParams$gasP4","_txData$txParams10","getNativeCurrency","networkAndAccountSupportsEIP1559","checkNetworkAndAccountSupports1559","gasEstimationObject","_txData$txParams2","selectedGasEstimates","userFeeLevel","TRANSACTION_ENVELOPE_TYPES","_txData$txParams$gasP","_txData$txParams3","decGWEIToHexWEI","_txData$txParams4","_txData$txParams5","_txData$txParams6","_txData$txParams7","CUSTOM_GAS_ESTIMATE","getAveragePriceEstimateInHexWEI","fiatTransactionAmount","getValueFromWeiHex","fromCurrency","toCurrency","ethTransactionAmount","hexMinimumTransactionFee","getMinimumGasTotalInHexWei","hexMaximumTransactionFee","getMaximumGasTotalInHexWei","fiatMinimumTransactionFee","getTransactionFee","fiatMaximumTransactionFee","ethTransactionFee","hexTransactionAmount","fiatTransactionTotal","addFiat","ethTransactionTotal","addEth","hexTransactionTotal","sumHexes","networkSupports1559","networkNotSupports1559","isNotEIP1559Network","accountSupports1559","addressIsLedger","isAddressLedger","transportTypePreferenceIsWebHID","getLedgerTransportType","_hardwareWallets","LEDGER_TRANSPORT_TYPES","WEBHID","webHidIsNotConnected","_app2","getLedgerWebHidConnectedStatus","WEBHID_CONNECTED_STATUSES","CONNECTED","transportIsNotSuccessfullyCreated","getLedgerTransportStatus","TRANSPORT_STATES","VERIFIED","currentKeyring","getCurrentKeyring","KEYRING_TYPES","TREZOR","LEDGER","LATTICE","addressLabel","_labels","TRUNCATED_NAME_CHAR_LIMIT","_util2","shortenAddress","entry","getAddressBookEntry","identity","_hexstringUtils","toChecksumHexAddress","advancedGasFee","advancedInlineGas","appState","isLoading","getCurrentAccountWithSendEtherInfo","qrHardware","customNonceValue","eip1559V2Enabled","frequentRpcListDetail","gasIsLoading","keyring","isHardwareWallet","infuraBlocked","ipfsGateway","maxBaseFee","priorityFee","_network","BUYABLE_CHAINS_MAP","_BUYABLE_CHAINS_MAP$c","transakCurrencies","getIsOptimism","getIsTestnet","env","IN_TEST","_swaps","ALLOWED_SWAPS_CHAIN_IDS","fourBytePrefix","knownMethodData","NETWORK_TYPE_RPC","NATIVE_CURRENCY_TOKEN_IMAGE_MAP","nickname","networksTabSelectedRpcUrl","newCollectibleAddedMessage","newNetworkAdded","nextNonce","tokens","openSeaEnabled","participateInMetaMetrics","selectRpcInfo","rpcInfo","rpcPrefs","hideZeroBalanceTokens","getPreferences","isMainNet","getConversionRate","showFiatInTestnets","recoveryPhraseReminderLastShown","currentTime","frequency","recoveryPhraseReminderHasBeenShown","_time","DAY","showTestNetworks","showWhatsNewPopup","notifications","allowedNotificationIds","currentKeyringIsLedger","supportsWebHid","navigator","hid","currentlyUsingLedgerLive","LIVE","getAllowedNotificationIds","notificationsToShow","notification","isShown","date","selectedAccount","getSelectedAccount","SWAPS_CHAINID_DEFAULT_TOKEN_MAP","targetAddress","getMetaMaskAccounts","accountsWithSendEtherInfoSelector","getAccountByAddress","tokenList","pendingApprovalCount","getUnapprovedTxCount","suggestedAssets","getSuggestedAssetCount","getUnapprovedConfirmations","approval","_templates","TEMPLATED_CONFIRMATION_MESSAGE_TYPES","useCollectibleDetection","useNonceField","useTokenDetection","web3ShimUsageOrigins","msgParams","keyrings","qrKeyring","kr","QR","_app","MESSAGE_TYPE","ETH_SIGN_TYPED_DATA","ETH_SIGN","PERSONAL_SIGN","selectedAccountBalance","cachedBalance","getSelectedAccountCachedBalance","getSelectedIdentity","findKeyringForAddress","isEIP1559Account","_keyring$type","getMetaMaskAccountsRaw","getMetaMaskCachedBalances","currentAccounts","cachedBalances","selectedAccounts","accountID","getMetaMaskKeyrings","getMetaMaskIdentities","_state$metamask$cache","getMetaMaskAccountsConnected","getAddressBook","addressBook","contact","currentAddress","MAINNET_CHAIN_ID","TEST_CHAINS","preferences","OPTIMISM_CHAIN_ID","OPTIMISM_TESTNET_CHAIN_ID","de","thousandsSeparator","decimalSeparator","symbolOnLeft","spaceBetweenAmountAndSymbol","decimalDigits","el","es","nl","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTC","BTN","BWP","BYR","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MTL","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDD","SDG","SEK","SGD","SHP","SLL","SOS","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","UYU","UZS","VEB","VEF","VND","VUV","WST","XAF","XCD","XBT","XOF","XPF","YER","ZAR","ZMW","WON","lib","decimal","thousand","precision","grouping","nativeIsArray","isString","isObject","defaults","object","defs","context","results","checkPrecision","isNaN","checkCurrencyFormat","settings","pos","oldAccounting","unformat","regex","unformatted","parseFloat","power","formatNumber","usePrecision","formatMoney","formats","formatColumn","padAfterSymbol","maxLength","formatted","fVal","accounting","noConflict","getCurrency","locale","localeString","components","countryCode","getLocales","currencyCode","locales","defaultBlock","defaultAccount","Property","getter","setter","outputFormatter","inputFormatter","requestManager","setRequestManager","rm","formatInput","formatOutput","extractCallback","isFunction","attachToObject","buildGet","asyncGetterName","buildAsyncGet","property","bind","IpcProvider","path","net","responseCallbacks","connection","connect","on","_timeout","_parseResponse","load","returnValues","lastChunk","clearTimeout","lastChunkTimeout","InvalidResponse","_addResponseCallback","InvalidConnection","isConnected","writeSync","write","Jsonrpc","Batch","_requestManager","execute","sendBatch","isValidResponse","BigNumber","parseNumeric","isNumeric","mathceil","mathfloor","notBool","roundingMode","tooManyDigits","ALPHABET","BASE","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","compare","xc","yc","intValidatorNoErrors","truncate","toBaseOut","baseIn","baseOut","arrL","toExponential","toFixedPoint","another","configObj","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","ERRORS","isValidInt","intValidatorWithErrors","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSeparator","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","raise","convertBase","search","dp","unshift","caller","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","rand","multiply","temp","xlo","xhi","klo","khi","aL","bL","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","divToInt","greaterThan","greaterThanOrEqualTo","isInteger","isInt","isNegative","lessThan","lessThanOrEqualTo","minus","xLTy","plus","xe","ye","times","negated","squareRoot","rep","xcL","ycL","ylo","yhi","zc","sqrtBase","toDigits","toFormat","g1","g2","intPart","fractionPart","intDigits","toFraction","md","d0","d2","exp","n0","n1","d1","toPower","truncated","trunc","valueOf","Method","properties","toDecimal","formatters","newAccount","importRawKey","inputAddressFormatter","ecRecover","inputTransactionFormatter","padLeft","iso13616Prepare","iban","Z","mod9710","Iban","_iban","fromAddress","base36","padded","fromBban","bban","checkDigit","createIndirect","institution","identifier","isValid","isDirect","isIndirect","checksum","client","asBn","sha3","fromUtf8","allowZero","fromDecimal","toBigNumber","toHex","isBoolean","isBigNumber","isStrictAddress","isChecksumAddress","addressHash","padRight","toUtf8","toAscii","fromAscii","padEnd","transformToFullName","typeName","inputs","extractDisplayName","stBracket","endBracket","extractTypeName","returnValue","toTwosComplement","bigNumber","isAddress","checksumAddress","isJson","isBloom","bloom","isTopic","topic","ex","extension","extendedObject","watches","Shh","newMessageFilter","filterCreationErrorCallback","shh"],"mappings":"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A,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAGAC,EAAA,CAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,EAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,EAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,IACAC,EAAA,CAAA,GAAA,EAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,EAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,EAAA,IAAA,IAAA,GAAA,EAAA,IAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,GAAA,IAAA,GAAA,IAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,GAAA,GAAA,EAAA,IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAGAC,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,EAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WACAC,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,EAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,SAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WACAC,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,SAAA,WAAA,UAAA,WAAA,UAAA,WAAA,SAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,EAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WACAC,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,SAAA,WAAA,UAAA,WAAA,UAAA,WAAA,SAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,EAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAGAC,EAAA,CAAA,WAAA,WAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,SAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,EAAA,UAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YACAC,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,EAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,SAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,SAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YACAC,EAAA,CAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,SAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,EAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YACAC,EAAA,CAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,SAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,WAAA,SAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,SAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,EAAA,WAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,UAAA,WAAA,YAGAC,EAAA,CAAA,EAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,UAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YACAC,EAAA,CAAA,EAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,SAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,WAAA,UAAA,SAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YACAC,EAAA,CAAA,EAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,UAAA,UAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,UAAA,UAAA,WAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,UAAA,UAAA,WAAA,UAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,YACAC,EAAA,CAAA,EAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,SAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,SAAA,UAAA,UAAA,UAAA,UAAA,SAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,WAAA,UAAA,UAAA,UAAA,UAAA,SAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,UAAA,SAAA,UAAA,UAAA,UAAA,UAAA,WAAA,UAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA,WAAA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A,SAAAzjC,GACA,IAAA8iC,EAAAP,EAAAviC,GACA,OAAAsjC,KAAAR,IAkEAD,mBAAAA,EACAI,aAAAA,EACAS,aA/CA,SAAAC,GAGA,OAAAd,EAFAW,KAAAG,KA+CAT,qBAAAA,EACAE,eAAAA,EACAR,qBAAAA,EACAW,eAAAA,EAGAK,aAAAjB,EACAkB,aAAAZ,EACAa,YAAAV,EACAW,YAAAR,mOCnGAljmOChgEA0D,EAAA1D,QAAA,CACA,QACA,WACA,WACA,QACA,SACA,UACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,UACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,QACA,WACA,QACA,SACA,UACA,WACA,QACA,UACA,WACA,WACA,WACA,SACA,WACA,QACA,UACA,WACA,OACA,SACA,OACA,WACA,WACA,OACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,WACA,WACA,SACA,UACA,SACA,WACA,WACA,UACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,QACA,UACA,UACA,WACA,WACA,QACA,QACA,WACA,UACA,WACA,WACA,WACA,WACA,SACA,OACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,WACA,OACA,UACA,WACA,QACA,WACA,WACA,WACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,OACA,UACA,SACA,WACA,UACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,QACA,WACA,OACA,WACA,UACA,OACA,WACA,SACA,WACA,UACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,QACA,WACA,SACA,YACA,SACA,QACA,SACA,UACA,SACA,UACA,SACA,OACA,UACA,WACA,UACA,QACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,QACA,WACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,OACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,OACA,UACA,OACA,SACA,OACA,SACA,SACA,OACA,WACA,QACA,WACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,QACA,QACA,WACA,UACA,UACA,UACA,UACA,QACA,SACA,UACA,WACA,WACA,SACA,UACA,YACA,WACA,WACA,QACA,WACA,SACA,QACA,UACA,OACA,SACA,UACA,OACA,QACA,QACA,UACA,WACA,UACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,OACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,UACA,QACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,OACA,UACA,WACA,UACA,UACA,SACA,UACA,QACA,UACA,WACA,UACA,SACA,UACA,YACA,OACA,SACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,QACA,OACA,QACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,OACA,WACA,UACA,QACA,WACA,WACA,QACA,UACA,UACA,YACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,UACA,YACA,QACA,OACA,SACA,WACA,SACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,SACA,YACA,UACA,UACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,WACA,QACA,UACA,UACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,UACA,UACA,OACA,QACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,UACA,UACA,UACA,WACA,WACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,WACA,SACA,WACA,WACA,WACA,SACA,YACA,UACA,YACA,WACA,YACA,SACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,WACA,OACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,OACA,SACA,UACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,UACA,OACA,UACA,OACA,UACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,OACA,QACA,UACA,WACA,QACA,UACA,OACA,UACA,WACA,QACA,UACA,QACA,WACA,UACA,WACA,OACA,UACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,SACA,QACA,OACA,OACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,WACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,OACA,SACA,QACA,UACA,UACA,WACA,OACA,UACA,UACA,UACA,QACA,UACA,WACA,OACA,UACA,WACA,UACA,WACA,WACA,QACA,UACA,WACA,QACA,UACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,OACA,WACA,SACA,QACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,QACA,WACA,SACA,UACA,QACA,WACA,OACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,OACA,WACA,SACA,SACA,OACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,QACA,UACA,UACA,UACA,QACA,QACA,QACA,UACA,OACA,WACA,OACA,UACA,WACA,SACA,QACA,UACA,SACA,QACA,UACA,WACA,QACA,SACA,UACA,UACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,WACA,WACA,QACA,UACA,UACA,YACA,UACA,UACA,UACA,OACA,WACA,UACA,UACA,QACA,WACA,QACA,WACA,WACA,YACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,UACA,QACA,UACA,UACA,SACA,OACA,WACA,QACA,QACA,UACA,SACA,OACA,SACA,WACA,QACA,UACA,UACA,UACA,UACA,QACA,WACA,QACA,WACA,UACA,WACA,UACA,WACA,QACA,SACA,SACA,WACA,OACA,WACA,QACA,UACA,UACA,OACA,WACA,UACA,WACA,QACA,WACA,WACA,QACA,SACA,QACA,UACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,UACA,SACA,SACA,WACA,UACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,SACA,WACA,OACA,UACA,WACA,QACA,WACA,UACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,SACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,SACA,WACA,QACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,WACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,UACA,SACA,QACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,YACA,QACA,WACA,UACA,SACA,UACA,OACA,QACA,WACA,WACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,YACA,OACA,WACA,SACA,OACA,UACA,QACA,WACA,WACA,UACA,UACA,SACA,UACA,OACA,SACA,QACA,OACA,UACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,OACA,WACA,OACA,WACA,SACA,WACA,QACA,OACA,UACA,UACA,QACA,QACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,WACA,WACA,YACA,UACA,QACA,WACA,OACA,SACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,WACA,QACA,WACA,UACA,UACA,QACA,WACA,WACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,UACA,YACA,WACA,WACA,WACA,OACA,UACA,QACA,UACA,UACA,OACA,UACA,WACA,UACA,QACA,WACA,OACA,UACA,UACA,UACA,SACA,UACA,YACA,OACA,UACA,UACA,UACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,WACA,UACA,WACA,QACA,WACA,YACA,UACA,WACA,SACA,SACA,QACA,OACA,UACA,YACA,QACA,UACA,YACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,YACA,SACA,WACA,WACA,QACA,UACA,YACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,YACA,WACA,SACA,QACA,UACA,SACA,OACA,UACA,SACA,WACA,OACA,UACA,QACA,YACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,OACA,OACA,SACA,UACA,UACA,YACA,WACA,SACA,UACA,WACA,UACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,OACA,WACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,YACA,YACA,YACA,OACA,UACA,UACA,UACA,UACA,UACA,YACA,UACA,OACA,SACA,WACA,UACA,SACA,QACA,YACA,QACA,UACA,WACA,QACA,QACA,YACA,SACA,QACA,QACA,WACA,YACA,OACA,UACA,WACA,UACA,UACA,QACA,SACA,YACA,UACA,SACA,WACA,UACA,YACA,OACA,WACA,WACA,WACA,UACA,WACA,WACA,SACA,SACA,OACA,QACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,OACA,QACA,OACA,WACA,SACA,UACA,QACA,QACA,QACA,UACA,UACA,UACA,UACA,OACA,YACA,OACA,WACA,UACA,UACA,QACA,OACA,SACA,YACA,WACA,UACA,OACA,SACA,UACA,WACA,QACA,WACA,UACA,WACA,WACA,SACA,UACA,OACA,UACA,SACA,UACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,OACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,UACA,OACA,YACA,SACA,UACA,YACA,QACA,UACA,SACA,WACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,OACA,WACA,UACA,SACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,WACA,SACA,WACA,SACA,UACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,UACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,QACA,UACA,OACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,QACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,QACA,QACA,SACA,WACA,UACA,UACA,UACA,OACA,SACA,WACA,QACA,UACA,QACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,QACA,UACA,UACA,OACA,WACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,WACA,YACA,OACA,YACA,QACA,WACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,YACA,SACA,SACA,QACA,UACA,YACA,WACA,OACA,YACA,WACA,WACA,OACA,SACA,WACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,UACA,YACA,WACA,UACA,WACA,WACA,UACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,UACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,SACA,UACA,UACA,WACA,OACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,OACA,UACA,YACA,UACA,SACA,OACA,WACA,UACA,SACA,OACA,WACA,SACA,WACA,SACA,SACA,YACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,OACA,UACA,UACA,SACA,WACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,UACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,QACA,UACA,YACA,SACA,UACA,UACA,SACA,QACA,UACA,YACA,SACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,UACA,SACA,YACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,UACA,WACA,SACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,SACA,WACA,WACA,SACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,YACA,YACA,YACA,UACA,SACA,WACA,YACA,YACA,UACA,WACA,YACA,QACA,YACA,WACA,WACA,OACA,WACA,SACA,QACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,WACA,YACA,UACA,UACA,SACA,YACA,UACA,WACA,UACA,WACA,YACA,QACA,QACA,UACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,YACA,WACA,UACA,QACA,WACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,SACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,WACA,UACA,WACA,OACA,UACA,YACA,UACA,QACA,UACA,UACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,WACA,SACA,WACA,UACA,SACA,WACA,QACA,UACA,UACA,SACA,WACA,OACA,WACA,WACA,WACA,QACA,QACA,UACA,YACA,SACA,UACA,QACA,UACA,WACA,UACA,QACA,YACA,YACA,UACA,QACA,UACA,QACA,SACA,WACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,OACA,YACA,WACA,UACA,UACA,YACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,WACA,UACA,WACA,UACA,UACA,QACA,SACA,SACA,WACA,QACA,SACA,UACA,WACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,WACA,QACA,WACA,WACA,UACA,SACA,YACA,OACA,UACA,UACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,UACA,WACA,WACA,YACA,OACA,YACA,UACA,UACA,OACA,UACA,UACA,UACA,UACA,YACA,QACA,UACA,UACA,WACA,QACA,OACA,UACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,YACA,UACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,QACA,SACA,YACA,WACA,OACA,UACA,SACA,YACA,QACA,UACA,UACA,YACA,QACA,UACA,OACA,QACA,WACA,UACA,YACA,QACA,QACA,UACA,UACA,UACA,UACA,UACA,YACA,SACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,SACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,WACA,YACA,SACA,UACA,OACA,YACA,YACA,WACA,SACA,QACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,OACA,SACA,UACA,UACA,WACA,QACA,UACA,OACA,UACA,SACA,SACA,WACA,QACA,QACA,WACA,YACA,SACA,YACA,WACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,UACA,OACA,SACA,QACA,SACA,WACA,UACA,WACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,QACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,OACA,YACA,UACA,SACA,SACA,UACA,WACA,QACA,UACA,SACA,SACA,WACA,UACA,SACA,SACA,UACA,SACA,SACA,YACA,QACA,SACA,UACA,WACA,WACA,OACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,SACA,OACA,UACA,SACA,YACA,QACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,SACA,OACA,UACA,UACA,UACA,SACA,UACA,OACA,OACA,WACA,SACA,QACA,WACA,UACA,WACA,QACA,UACA,UACA,UACA,SACA,UACA,OACA,UACA,UACA,UACA,QACA,UACA,QACA,QACA,SACA,WACA,SACA,OACA,2NChgkOChgEA0D,EAAA1D,QAAA,CACA,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,yNChgEA0D,EAAA1D,QAAA,CACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,MACA,SACA,MACA,MACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,QACA,MACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,MACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,OACA,OACA,OACA,MACA,SACA,MACA,QACA,QACA,OACA,OACA,SACA,OACA,OACA,MACA,QACA,MACA,QACA,OACA,OACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,QACA,QACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,QACA,SACA,OACA,OACA,QACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,UACA,MACA,MACA,OACA,OACA,OACA,UACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,MACA,OACA,OACA,SACA,MACA,OACA,SACA,OACA,MACA,QACA,QACA,MACA,OACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,QACA,MACA,MACA,MACA,QACA,SACA,OACA,MACA,MACA,OACA,MACA,SACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,SACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,OACA,SACA,SACA,MACA,OACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,QACA,MACA,QACA,OACA,MACA,MACA,QACA,QACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,MACA,OACA,OACA,MACA,QACA,QACA,QACA,MACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,MACA,OACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,UACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,MACA,QACA,SACA,QACA,QACA,SACA,SACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,QACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,WACA,OACA,WACA,WACA,WACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,UACA,MACA,SACA,MACA,MACA,MACA,MACA,SACA,MACA,SACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,MACA,QACA,MACA,OACA,OACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,MACA,OACA,MACA,MACA,QACA,QACA,MACA,QACA,MACA,QACA,MACA,MACA,MACA,OACA,QACA,SACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,QACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,OACA,WACA,QACA,MACA,QACA,MACA,QACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,UACA,QACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,SACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,SACA,QACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,MACA,QACA,MACA,OACA,MACA,QACA,OACA,OACA,MACA,MACA,OACA,QACA,MACA,MACA,QACA,UACA,OACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,OACA,OACA,QACA,SACA,OACA,SACA,MACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,QACA,OACA,MACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,QACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,MACA,UACA,MACA,MACA,MACA,OACA,SACA,OACA,MACA,OACA,MACA,QACA,OACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,OACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,UACA,QACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,QACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,SACA,OACA,MACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,MACA,SACA,MACA,MACA,OACA,MACA,MACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,OACA,MACA,OACA,MACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,MACA,UACA,OACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,MACA,SACA,MACA,WACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,QACA,QACA,OACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,OACA,OACA,OACA,SACA,MACA,QACA,OACA,MACA,QACA,YACA,QACA,OACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,OACA,OACA,SACA,OACA,OACA,MACA,UACA,SACA,MACA,OACA,OACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,QACA,SACA,OACA,SACA,QACA,OACA,MACA,QACA,MACA,QACA,QACA,SACA,OACA,SACA,QACA,MACA,OACA,QACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,WACA,OACA,MACA,MACA,MACA,OACA,OACA,QACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,WACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,OACA,OACA,QACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,MACA,MACA,QACA,QACA,UACA,OACA,QACA,OACA,SACA,MACA,MACA,QACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,MACA,QACA,MACA,OACA,QACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,MACA,OACA,OACA,OACA,SACA,SACA,OACA,MACA,MACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,QACA,MACA,QACA,OACA,MACA,QACA,OACA,QACA,MACA,MACA,SACA,QACA,QACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,WACA,OACA,SACA,SACA,OACA,OACA,MACA,QACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,QACA,MACA,QACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,UACA,MACA,MACA,MACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,QACA,MACA,SACA,OACA,QACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,QACA,MACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,UACA,MACA,OACA,SACA,SACA,MACA,MACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,QACA,QACA,OACA,MACA,MACA,MACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,MACA,SACA,OACA,OACA,MACA,QACA,MACA,MACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,UACA,QACA,OACA,OACA,SACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,OACA,MACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,SACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,QACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,SACA,QACA,MACA,OACA,OACA,QACA,QACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,MACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,SACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,SACA,MACA,WACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,MACA,UACA,MACA,QACA,QACA,QACA,OACA,MACA,QACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,QACA,QACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,MACA,OACA,OACA,OACA,SACA,OACA,MACA,MACA,MACA,MACA,MACA,QACA,SACA,MACA,MACA,OACA,OACA,MACA,MACA,OACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,SACA,QACA,OACA,QACA,OACA,SACA,OACA,OACA,QACA,MACA,QACA,OACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,MACA,OACA,MACA,QACA,WACA,MACA,OACA,SACA,SACA,OACA,OACA,OACA,MACA,MACA,SACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,UACA,QACA,MACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,SACA,OACA,MACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,MACA,OACA,QACA,QACA,OACA,QACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,SACA,OACA,MACA,SACA,OACA,MACA,MACA,OACA,OACA,QACA,UACA,UACA,MACA,MACA,OACA,SACA,OACA,OACA,MACA,MACA,QACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,MACA,QACA,MACA,WACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,OACA,QACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,UACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,OACA,OACA,OACA,SACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,MACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,MACA,MACA,OACA,OACA,MACA,QACA,QACA,MACA,0NChgEA0D,EAAA1D,QAAA,CACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,YACA,SACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,QACA,UACA,WACA,QACA,UACA,YACA,WACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,YACA,SACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,WACA,SACA,WACA,QACA,WACA,UACA,WACA,UACA,UACA,UACA,WACA,SACA,UACA,WACA,UACA,SACA,QACA,YACA,WACA,SACA,SACA,UACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,SACA,YACA,QACA,WACA,WACA,SACA,UACA,UACA,SACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,UACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,WACA,WACA,UACA,UACA,UACA,YACA,UACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,UACA,WACA,UACA,WACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,SACA,UACA,UACA,SACA,SACA,UACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,SACA,UACA,WACA,SACA,WACA,UACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,UACA,WACA,SACA,WACA,WACA,WACA,UACA,UACA,SACA,aaACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,WACA,YACA,WACA,SACA,QACA,UACA,UACA,WACA,QACA,WACA,WACA,UACA,QACA,WACA,SACA,QACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,SACA,QACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,UACA,WACA,QACA,WACA,SACA,SACA,YACA,UACA,UACA,UACA,UACA,UACA,WACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,QACA,QACA,UACA,UACA,UACA,UACA,SACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,WACA,UACA,QACA,UACA,WACA,SACA,UACA,UACA,UACA,QACA,UACA,UACA,WACA,YACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,SACA,SACA,UACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,YACA,UACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,aACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,UACA,UACA,SACA,SACA,WACA,UACA,SACA,YACA,WACA,UACA,QACA,SACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,SACA,UACA,QACA,QACA,UACA,WACA,UACA,WACA,SACA,SACA,WACA,UACA,SACA,SACA,SACA,UACA,WACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,SACA,YACA,UACA,WACA,WACA,YACA,YACA,SACA,SACA,YACA,WACA,WACA,UACA,WACA,UACA,SACA,WACA,WACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,aACA,UACA,YACA,YACA,SACA,YACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,UACA,QACA,WACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,WACA,WACA,aACA,UACA,WACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,aACA,SACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,SACA,YACA,WACA,UACA,UACA,YACA,SACA,SACA,WACA,UACA,UACA,SACA,UACA,SACA,UACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,UACA,YACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,YACA,UACA,UACA,UACA,WACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,WACA,WACA,UACA,QACA,WACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,SACA,SACA,WACA,YACA,YACA,SACA,QACA,SACA,UACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,SACA,WACA,WACA,WACA,UACA,SACA,QACA,UACA,WACA,QACA,QACA,QACA,UACA,QACA,UACA,SACA,UACA,WACA,SACA,UACA,QACA,UACA,SACA,QACA,WACA,SACA,UACA,QACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,UACA,UACA,WACA,UACA,SACA,UACA,aACA,SACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,UACA,QACA,UACA,QACA,SACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,SACA,QACA,SACA,YACA,aaACA,WACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,WACA,UACA,UACA,SACA,SACA,QACA,UACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,WACA,SACA,WACA,UACA,UACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,UACA,UACA,UACA,UACA,WACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,YACA,YACA,UACA,UACA,WACA,QACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,UACA,WACA,SACA,WACA,SACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,SACA,SACA,WACA,UACA,QACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,WACA,YACA,UACA,SACA,YACA,UACA,WACA,YACA,aACA,UACA,UACA,UACA,UACA,SACA,WACA,UACA,SACA,WACA,UACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,UACA,UACA,SACA,WACA,YACA,YACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,YACA,WACA,SACA,QACA,SACA,UACA,SACA,WACA,UACA,SACA,SACA,QACA,WACA,UACA,UACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,QACA,QACA,QACA,SACA,UACA,SACA,WACA,QACA,WACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,WACA,aACA,YACA,UACA,UACA,UACA,UACA,QACA,UACA,WACA,UACA,WACA,UACA,UACA,aACA,WACA,WACA,WACA,UACA,YACA,UACA,UACA,UACA,WACA,YACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,SACA,UACA,UACA,SACA,UACA,WACA,WACA,UACA,UACA,UACA,QACA,SACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,WACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,WACA,UACA,UACA,WACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,SACA,SACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,WACA,UACA,SACA,UACA,UACA,UACA,YACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,SACA,WACA,WACA,UACA,UACA,WACA,QACA,WACA,SACA,QACA,UACA,QACA,SACA,WACA,QACA,UACA,QACA,UACA,WACA,WACA,SACA,SACA,QACA,UACA,WACA,QACA,WACA,UACA,QACA,SACA,WACA,YACA,SACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,QACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,UACA,WACA,UACA,QACA,SACA,QACA,UACA,WACA,UACA,SACA,WACA,SACA,WACA,SACA,QACA,WACA,UACA,UACA,UACA,UACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,QACA,WACA,WACA,QACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,SACA,UACA,QACA,WACA,SACA,WACA,UACA,UACA,QACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,SACA,WACA,QACA,WACA,UACA,WACA,UACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,SACA,WACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,YACA,WACA,SACA,QACA,SACA,SACA,WACA,UACA,SACA,WACA,UACA,SACA,UACA,WACA,SACA,UACA,WACA,WACA,QACA,SACA,SACA,SACA,WACA,SACA,QACA,UACA,WACA,UACA,SACA,WACA,WACA,SACA,QACA,SACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,UACA,QACA,6NChgEA0D,EAAA1D,QAAA,CACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,WACA,QACA,SACA,UACA,SACA,SACA,QACA,WACA,SACA,SACA,QACA,WACA,UACA,WACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,QACA,WACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,cACA,UACA,QACA,UACA,QACA,QACA,QACA,YACA,QACA,QACA,SACA,SACA,UACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,WACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,YACA,QACA,SACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,ccACA,WACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,SACA,SACA,QACA,WACA,QACA,QACA,SACA,QACA,UACA,YACA,QACA,QACA,WACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,WACA,SACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,QACA,WACA,UACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,UACA,SACA,WACA,SACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,WACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,WACA,YACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,WACA,SACA,SACA,QACA,WACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,aACA,WACA,SACA,SACA,SACA,QACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,WACA,SACA,SACA,YACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,YACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,UACA,SACA,YACA,UACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,QACA,UACA,WACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,YACA,WACA,SACA,YACA,QACA,QACA,QACA,UACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,WACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,YACA,SACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,UACA,SACA,YACA,SACA,SACA,QACA,YACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,aACA,QACA,QACA,YACA,QACA,SACA,WACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,WACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,QACA,QACA,QACA,UACA,WACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,UACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,WACA,SACA,SACA,QACA,YACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,QACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,SACA,YACA,UACA,QACA,UACA,YACA,SACA,UACA,SACA,UACA,QACA,QACA,SACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,acACA,UACA,SACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,YACA,SACA,SACA,UACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,QACA,WACA,WACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,QACA,UACA,WACA,QACA,QACA,YACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,WACA,SACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,UACA,SACA,WACA,QACA,WACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,UACA,UACA,WACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,SACA,YACA,SACA,QACA,SACA,QACA,SACA,SACA,WACA,QACA,SACA,UACA,QACA,SACA,SACA,WACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,YACA,QACA,UACA,QACA,QACA,WACA,QACA,SACA,QACA,QACA,WACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,SACA,WACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,WACA,QACA,WACA,QACA,SACA,SACA,SACA,WACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,QACA,UACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,YACA,QACA,SACA,SACA,QACA,QACA,QACA,UACA,YACA,SACA,SACA,QACA,QACA,WACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,SACA,cACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,acACA,QACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,WACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,WACA,WACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,UACA,UACA,WACA,QACA,WACA,QACA,UACA,SACA,SACA,UACA,QACA,cACA,WACA,QACA,SACA,QACA,SACA,SACA,UACA,WACA,YACA,SACA,SACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,WACA,QACA,UACA,SACA,SACA,UACA,aACA,QACA,SACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,SACA,WACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,aACA,QACA,UACA,UACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,aACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,YACA,SACA,QACA,QACA,SACA,QACA,SACA,aACA,SACA,SACA,YACA,QACA,WACA,UACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,QACA,UACA,SACA,WACA,SACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,QACA,SACA,WACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SACA,WACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,aACA,WACA,QACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,2NChgEA0D,EAAA1D,QAAA,CACA,SACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,UACA,WACA,SACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,OACA,SACA,UACA,QACA,SACA,SACA,SACA,QACA,UACA,OACA,WACA,SACA,UACA,SACA,OACA,SACA,WACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,UACA,SACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,SACA,UACA,UACA,SACA,OACA,SACA,UACA,UACA,OACA,UACA,QACA,SACA,QACA,WACA,UACA,UACA,QACA,QACA,SACA,OACA,WACA,SACA,UACA,UACA,OACA,QACA,UACA,QACA,QACA,SACA,QACA,WACA,SACA,QACA,OACA,SACA,UACA,QACA,SACA,OACA,UACA,MACA,QACA,SACA,UACA,WACA,OACA,SACA,UACA,QACA,UACA,OACA,UACA,UACA,UACA,QACA,SACA,SACA,SACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,UACA,UACA,QACA,OACA,SACA,QACA,MACA,WACA,QACA,WACA,SACA,QACA,OACA,QACA,QACA,WACA,OACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,SACA,QACA,QACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,UACA,SACA,UACA,WACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,SACA,SACA,QACA,MACA,SACA,OACA,OACA,SACA,OACA,SACA,QACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,UACA,QACA,SACA,SACA,OACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,QACA,SACA,QACA,UACA,QACA,QACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,QACA,WACA,SACA,OACA,QACA,SACA,UACA,OACA,SACA,MACA,UACA,SACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,SACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,OACA,QACA,WACA,SACA,SACA,UACA,OACA,UACA,UACA,SACA,QACA,UACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,UACA,SACA,SACA,QACA,QACA,SACA,OACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,QACA,QACA,OACA,SACA,QACA,UACA,OACA,QACA,OACA,QACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,WACA,QACA,WACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,SACA,SACA,OACA,OACA,SACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,QACA,UACA,UACA,SACA,OACA,QACA,WACA,UACA,SACA,UACA,SACA,SACA,QACA,SACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,SACA,SACA,QACA,WACA,WACA,QACA,OACA,SACA,SACA,SACA,OACA,SACA,UACA,SACA,SACA,SACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,OACA,SACA,QACA,SACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,MACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,UACA,WACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,QACA,OACA,SACA,UACA,WACA,QACA,SACA,SACA,SACA,SACA,QACA,OACA,WACA,QACA,SACA,SACA,SACA,UACA,UACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,QACA,UACA,MACA,QACA,SACA,SACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,QACA,MACA,UACA,OACA,WACA,WACA,SACA,SACA,SACA,SACA,MACA,UACA,WACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,UACA,UACA,SACA,UACA,QACA,SACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,SACA,UACA,WACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,QACA,SACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,UACA,UACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,SACA,OACA,UACA,SACA,UACA,WACA,QACA,QACA,OACA,SACA,QACA,QACA,MACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,OACA,QACA,WACA,QACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,OACA,SACA,SACA,SACA,MACA,QACA,SACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,SACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,UACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,WACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,OACA,OACA,WACA,QACA,QACA,QACA,SACA,QACA,QACA,SACA,QACA,WACA,SACA,OACA,WACA,SACA,QACA,MACA,UACA,QACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,QACA,OACA,UACA,QACA,SACA,MACA,QACA,SACA,QACA,OACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,WACA,QACA,QACA,SACA,QACA,SACA,SACA,QACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,SACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,MACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,UACA,SACA,SACA,QACA,SACA,UACA,UACA,OACA,QACA,WACA,SACA,QACA,UACA,OACA,SACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,OACA,QACA,SACA,SACA,QACA,QACA,QACA,OACA,SACA,UACA,UACA,OACA,SACA,WACA,QACA,QACA,QACA,SACA,SACA,UACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,QACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,UACA,UACA,SACA,UACA,SACA,SACA,UACA,WACA,WACA,UACA,SACA,UACA,WACA,MACA,OACA,UACA,OACA,SACA,UACA,SACA,SACA,SACA,UACA,QACA,QACA,UACA,OACA,UACA,SACA,UACA,SACA,QACA,OACA,SACA,SACA,OACA,UACA,OACA,UACA,SACA,QACA,SACA,QACA,SACA,WACA,QACA,QACA,UACA,SACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,UACA,WACA,SACA,QACA,QACA,UACA,WACA,OACA,SACA,WACA,QACA,SACA,QACA,QACA,WACA,OACA,SACA,QACA,SACA,QACA,OACA,OACA,WACA,QACA,SACA,OACA,UACA,WACA,SACA,SACA,QACA,QACA,QACA,WACA,UACA,QACA,QACA,OACA,UACA,WACA,QACA,QACA,SACA,SACA,SACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,QACA,SACA,UACA,OACA,WACA,WACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,UACA,OACA,SACA,UACA,QACA,UACA,OACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,OACA,SACA,OACA,MACA,SACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,WACA,SACA,OACA,QACA,QACA,UACA,OACA,WACA,MACA,QACA,QACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,OACA,WACA,SACA,QACA,UACA,QACA,SACA,UACA,QACA,UACA,QACA,UACA,QACA,UACA,UACA,QACA,SACA,SACA,UACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,MACA,SACA,OACA,QACA,UACA,QACA,SACA,QACA,OACA,UACA,OACA,MACA,UACA,UACA,UACA,OACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,QACA,QACA,QACA,OACA,UACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,QACA,UACA,SACA,QACA,SACA,OACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,OACA,WACA,QACA,QACA,UACA,QACA,SACA,UACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,SACA,UACA,UACA,QACA,OACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,UACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,OACA,UACA,SACA,SACA,QACA,OACA,OACA,UACA,UACA,OACA,QACA,QACA,OACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,WACA,UACA,QACA,MACA,QACA,UACA,UACA,OACA,OACA,OACA,SACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,OACA,QACA,OACA,MACA,MACA,SACA,SACA,QACA,OACA,OACA,OACA,SACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,UACA,WACA,SACA,OACA,UACA,OACA,QACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,MACA,WACA,QACA,UACA,SACA,SACA,MACA,QACA,SACA,OACA,QACA,SACA,SACA,WACA,SACA,QACA,QACA,QACA,SACA,UACA,OACA,QACA,UACA,UACA,QACA,SACA,UACA,QACA,SACA,SACA,MACA,QACA,UACA,UACA,WACA,QACA,QACA,UACA,UACA,QACA,UACA,QACA,QACA,OACA,WACA,SACA,WACA,QACA,QACA,QACA,UACA,OACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,UACA,UACA,OACA,SACA,OACA,SACA,UACA,QACA,OACA,SACA,WACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,UACA,QACA,UACA,OACA,QACA,UACA,WACA,UACA,YACA,MACA,UACA,QACA,UACA,MACA,SACA,SACA,QACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,QACA,QACA,OACA,SACA,QACA,UACA,OACA,QACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,QACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,WACA,SACA,SACA,SACA,UACA,QACA,WACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,YACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,WACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,SACA,SACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,SACA,SACA,UACA,QACA,OACA,UACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,OACA,SACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,QACA,UACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,SACA,UACA,UACA,QACA,QACA,UACA,OACA,SACA,SACA,QACA,UACA,UACA,SACA,SACA,MACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,SACA,SACA,UACA,MACA,QACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,UACA,OACA,UACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,SACA,SACA,MACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,SACA,OACA,QACA,QACA,UACA,OACA,SACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,UACA,SACA,QACA,QACA,QACA,SACA,QACA,WACA,UACA,SACA,SACA,UACA,OACA,QACA,OACA,QACA,UACA,UACA,SACA,SACA,QACA,WACA,WACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,QACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,QACA,UACA,MACA,QACA,UACA,SACA,UACA,UACA,OACA,UACA,SACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,WACA,QACA,WACA,QACA,SACA,UACA,QACA,SACA,QACA,QACA,QACA,MACA,SACA,UACA,UACA,UACA,SACA,YACA,SACA,SACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,WACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,UACA,QACA,UACA,SACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,QACA,SACA,UACA,QACA,QACA,OACA,QACA,OACA,QACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,SACA,WACA,QACA,QACA,SACA,UACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,YACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,UACA,QACA,WACA,UACA,SACA,QACA,SACA,UACA,SACA,QACA,MACA,QACA,WACA,SACA,SACA,SACA,QACA,QACA,SACA,QACA,SACA,UACA,OACA,QACA,OACA,UACA,OACA,OACA,SACA,SACA,UACA,UACA,OACA,SACA,UACA,QACA,SACA,OACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,SACA,SACA,WACA,SACA,OACA,UACA,QACA,QACA,UACA,MACA,QACA,QACA,UACA,UACA,UACA,QACA,WACA,QACA,QACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,OACA,SACA,QACA,QACA,SACA,UACA,UACA,UACA,QACA,QACA,SACA,UACA,SACA,SACA,OACA,WACA,MACA,QACA,OACA,SACA,OACA,UACA,OACA,OACA,UACA,QACA,UACA,MACA,OACA,SACA,SACA,QACA,OACA,QACA,UACA,OACA,UACA,QACA,QACA,WACA,UACA,OACA,SACA,SACA,OACA,SACA,SACA,YACA,SACA,QACA,OACA,SACA,QACA,OACA,SACA,QACA,SACA,SACA,QACA,QACA,QACA,MACA,SACA,QACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,WACA,OACA,SACA,SACA,QACA,UACA,QACA,MACA,QACA,UACA,OACA,UACA,UACA,QACA,QACA,SACA,QACA,WACA,QACA,WACA,QACA,QACA,SACA,QACA,OACA,UACA,UACA,SACA,QACA,QACA,OACA,MACA,QACA,SACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,OACA,4NChgEA,SAAAkQ,GA2BA,IAdA,IAAAm3B,EAAA,CAAA,KAAA,EAAA,IAEAC,EAAA,MAAAC,EAAA,KAIAC,EAAA,SAAAC,EAAAC,GACA9jC,KAAA+jC,UAAAF,EACA7jC,KAAA8jC,QAAAA,GAIAje,EAAA,GACAme,EAAA,GACA/pC,EAAA,EAAAA,GAAA,MAAAA,EACA+pC,EAAA/pC,GAAA,EAuDA,IAAAgqC,EAAA,CAJA,SAAAlqC,EAAA8pC,EAAAK,GACA,OAAAL,EAAA,IAAA,MAAAA,GAAAA,EAAA,MAAA,IAAAD,EAAAC,EAAAJ,GAAA1pC,EAAA8pC,EAAAK,IAjDA,SAAAnqC,EAAA8pC,EAAAK,GACA,IAAA9X,EAAAvG,EAAAge,GAOA,OANAzX,IACAA,EAAAryB,EAAA8pC,EAAAK,IACAJ,WAAAE,EAAAH,GAAA,EAAA,KArBA,KAsBAhe,EAAAge,GAAAzX,GAGAA,GASA,SAAAryB,EAAA8pC,EAAAK,GACA,OAAAA,EAAAnqC,EAAA8pC,EAAAK,GAAA,IAAAN,EAAAC,EAAA,OAEA,SAAA9pC,EAAA8pC,EAAAK,GACA,IAAAjyB,EACA,GAAA4xB,EAAAF,GAAAA,MAAAE,GAAAA,EAAAH,GAAAA,MAAAG,EACA,OAAA9pC,EAAA8pC,EAAAK,GAEA,GAAAP,GAAAE,GAAAA,EAAAF,KAAA,CACA,IAAA9kC,EAAA,GACA+J,EA3CA,IA2CAi7B,EAAAF,GACA,IAAA1xB,EAAA,EAAAA,EA5CA,KA4CAA,EACApT,EA7CA,KA6CAoT,GAAAyxB,EA7CA,IA6CAzxB,EAAArJ,GAEA,OAAA,IAAAg7B,EAAAC,EAAA,CAAA,CAAA,CAAAhlC,IAGA,IAAAslC,EAAAN,EAAAH,EACAU,EAAAD,EAnDA,GAoDAL,EAAA,GACA,GAAA,IAAAM,EACAN,EAAA,GAAA,CAAAJ,EAAAS,EAAAC,EAtDA,KAsDAA,QAIA,IAFAN,EAAA,GAAA,CAAAH,EAAA3qB,KAAAqrB,MAAAF,EAvDAG,KADA,KAwDAtrB,KAAAqrB,MAAAF,EAvDAG,IADA,KAyDAR,EAAA,GAAA,GACA7xB,EAAA,EAAAA,EA1DA,KA0DAA,EACA6xB,EAAA,GA3DA,KA2DA7xB,GAAA4xB,EAAA5xB,EAGA,OAAA,IAAA2xB,EAAAC,EAAAC,IAnCA,SAAA/pC,EAAA8pC,EAAAK,GACA,IAEAzD,GADAmD,EAAAW,MADA,MAAAV,IACA,IACAA,GACA,OAAA,IAAAD,EAAAC,EAAApD,GAAAgD,KAuCAG,EAAAh3B,aAAAq3B,EAAAO,aAAA,SAAAzqC,EAAA0qC,GACA,OAAA,SAAAZ,EAAAK,GACA,OAAAO,EAAA1qC,EAAA8pC,EAAAK,MAEA,MAEAN,EAAAc,gBAAA,SAAAb,GACA,OAAAA,GAAA,OAAAA,GAAA,OAEAD,EAAAe,eAAA,SAAAd,GACA,OAAAA,GAAA,OAAAA,GAAA,OAGAD,EAAA3+B,UAAA2/B,YAAA,WACA5kC,KAAA8jC,UACA9jC,KAAA8jC,QAAAF,EAAAh3B,aAAA5M,KAAA+jC,WAAA,GAAAD,UAIAF,EAAA3+B,UAAAvH,SAAA,WACA,GAAAsC,KAAA+jC,UAAA,MACA,OAAAp3B,OAAAC,aAAA5M,KAAA+jC,WAEA,IAAApP,EAAA30B,KAAA+jC,UAAA,MACA,OAAAp3B,OAAAC,aAAAoM,KAAAqrB,MAAA1P,EAAA,MAAA,MAAAA,EAAA,KAAA,QAIAiP,EAAA3+B,UAAA4/B,UAAA,WAEA,OADA7kC,KAAA4kC,cACA5kC,KAAA8jC,QAAA,IAAA,MAGAF,EAAA3+B,UAAA6/B,gBAAA,WAEA,OADA9kC,KAAA4kC,gBACA5kC,KAAA8jC,QAAA,IAAA,IAAA9jC,KAAA8jC,QAAA,IAEAF,EAAA3+B,UAAA8/B,UAAA,WAEA,OADA/kC,KAAA4kC,gBACA5kC,KAAA8jC,QAAA,IAAA,IAAA9jC,KAAA8jC,QAAA,IAEAF,EAAA3+B,UAAA+/B,kBAAA,WAEA,OADAhlC,KAAA4kC,cACA5kC,KAAA8jC,QAAA,GAAA,IAAA9jC,KAAA8jC,QAAA,GAAA,GAEAF,EAAA3+B,UAAAggC,aAAA,SAAAC,GAEA,GADAllC,KAAA4kC,eACA5kC,KAAA8jC,QAAA,GACA,OAAA,KAEA,IAAAD,EAAA7jC,KAAA8jC,QAAA,GAAAoB,EAAAnB,WACA,OAAAF,EAAAD,EAAAh3B,aAAAi3B,GAAA,MAGA,IAAAsB,EAAA,SAAA1lC,GACAO,KAAAP,IAAAA,EACAO,KAAAolC,OAAA,GAEAD,EAAAlgC,UAAAlL,KAAA,WACA,GAAAiG,KAAAP,KAAAO,KAAAolC,OAAAplC,KAAAP,IAAAzF,OAAA,CACA,IACA0F,EADAmkC,EAAA7jC,KAAAP,IAAAH,WAAAU,KAAAolC,UAMA,OAJAxB,EAAAc,gBAAAb,IAAA7jC,KAAAolC,OAAAplC,KAAAP,IAAAzF,QAAA4pC,EAAAe,eAAAjlC,EAAAM,KAAAP,IAAAH,WAAAU,KAAAolC,WACAvB,EAAA,MAAAA,EAAA,QAAAnkC,EAAA,OAAA,QACAM,KAAAolC,QAEAxB,EAAAh3B,aAAAi3B,GAGA,OADA7jC,KAAAP,IAAA,KACA,MAIA,IAAA4lC,EAAA,SAAAC,EAAAC,GACAvlC,KAAAslC,GAAAA,EACAtlC,KAAAwlC,UAAAD,EACAvlC,KAAAylC,OAAA,IAGAJ,EAAApgC,UAAAlL,KAAA,WAcA,GAAA,IAAAiG,KAAAylC,OAAAzrC,OAAA,CACA,IAAA0rC,EAAA1lC,KAAAslC,GAAAvrC,OACA,IAAA2rC,EACA,OAAA,KAEA1lC,KAAAylC,OAlBA,SAAAE,EAAAJ,EAAAG,GACA,IAAAE,EAAAF,EAAAb,YACA,IAAAe,GAAAL,GAAAG,EAAAZ,kBAQA,MAAA,CAAAY,GANA,IADA,IAAAtZ,EAAA,GACAnyB,EAAA,EAAAA,EAAA2rC,EAAA5rC,SAAAC,EAAA,CACA,IAAAP,EAAAisC,EAAAJ,EAAA3B,EAAAh3B,aAAAg5B,EAAA3rC,KACAmyB,EAAAA,EAAArwB,OAAArC,GAEA,OAAA0yB,EAUAuZ,CAAA3lC,KAAAwlC,UAAAE,GAEA,OAAA1lC,KAAAylC,OAAAn4B,SAGA,IAAAu4B,EAAA,SAAAP,GACAtlC,KAAAslC,GAAAA,EACAtlC,KAAAylC,OAAA,IAGAI,EAAA5gC,UAAAlL,KAAA,WACA,IAAA+rC,EACA,GAAA,IAAA9lC,KAAAylC,OAAAzrC,OACA,EAAA,CACA,IAAA0rC,EAAA1lC,KAAAslC,GAAAvrC,OACA,IAAA2rC,EACA,MAEAI,EAAAJ,EAAAV,oBACA,IAAAe,EAAA/lC,KAAAylC,OAAAzrC,OACA,GAAA,IAAA8rC,EACA,KAAAC,EAAA,IAAAA,EAAA,CAGA,GAFA/lC,KAAAylC,OAAAM,EAAA,GACAf,qBACAc,EACA,MAIA9lC,KAAAylC,OAAAO,OAAAD,EAAA,EAAAL,SACA,IAAAI,GAEA,OAAA9lC,KAAAylC,OAAAn4B,SAGA,IAAA24B,EAAA,SAAAX,GACAtlC,KAAAslC,GAAAA,EACAtlC,KAAAkmC,QAAA,GACAlmC,KAAAylC,OAAA,GACAzlC,KAAAmmC,UAAA,MAGAF,EAAAhhC,UAAAlL,KAAA,WACA,KAAA,IAAAiG,KAAAylC,OAAAzrC,QAAA,CACA,IAAA0rC,EAAA1lC,KAAAslC,GAAAvrC,OACA,IAAA2rC,EAAA,CACA1lC,KAAAylC,OAAAzlC,KAAAkmC,QACAlmC,KAAAkmC,QAAA,GACA,MAEA,GAAA,IAAAlmC,KAAAkmC,QAAAlsC,OACAgG,KAAAmmC,UAAAT,EAAAV,oBACAhlC,KAAAkmC,QAAAhqC,KAAAwpC,OACA,CACA,IACAU,EADApmC,KAAAkmC,QAAA,GACAjB,aAAAS,GACAI,EAAAJ,EAAAV,oBACAoB,IAAApmC,KAAAmmC,UAAAL,GAAA,IAAA9lC,KAAAmmC,WACAnmC,KAAAkmC,QAAA,GAAAE,GAEA,IAAAN,IACA9lC,KAAAylC,OAAAzlC,KAAAkmC,QACAlmC,KAAAkmC,QAAA,IAEAlmC,KAAAmmC,UAAAL,EACA9lC,KAAAkmC,QAAAhqC,KAAAwpC,KAIA,OAAA1lC,KAAAylC,OAAAn4B,SAGA,IAaA+4B,EAAA,SAAA1oB,EAAAle,GAIA,IAHA,IAEAimC,EAFAJ,EAdA,SAAA3nB,EAAAle,GACA,OAAAke,GACA,IAAA,MACA,OAAA,IAAAkoB,EAAA,IAAAR,EAAA,IAAAF,EAAA1lC,IAAA,IACA,IAAA,OACA,OAAA,IAAAomC,EAAA,IAAAR,EAAA,IAAAF,EAAA1lC,IAAA,IACA,IAAA,MACA,OAAA,IAAAwmC,EAAA,IAAAJ,EAAA,IAAAR,EAAA,IAAAF,EAAA1lC,IAAA,KACA,IAAA,OACA,OAAA,IAAAwmC,EAAA,IAAAJ,EAAA,IAAAR,EAAA,IAAAF,EAAA1lC,IAAA,KAEA,MAAAke,EAAA,cAGA2oB,CAAA3oB,EAAAle,GACA2sB,EAAA,GAEAsZ,EAAAJ,EAAAvrC,QACAqyB,GAAAsZ,EAAAhoC,WAEA,OAAA0uB,GAqBAwX,EAAAW,MAAA,CACA,EAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,OACA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,IAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,IAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,MAAA,CAAA,CAAA,MACA,IAAA,CAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,GAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,MACA,IAAA,CAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,MAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,IAAA,IAAA,OAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,IAAA,CAAA,IAAA,IAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,IAAA,MAAA,IAAA,CAAA,CAAA,KAAA,KAAA,IAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,OACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,IACA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,IACA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,QACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,KAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,KAAA,CAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,KAAA,CAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,KAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IACA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,IAAA,OACA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,IAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,MAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,CAAA,IAAA,KAAA,IAAA,KAAA,IAAA,QACA,KAAA,CAAA,KAAA,CAAA,CAAA,OAAA,KAAA,CAAA,CAAA,OAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MACA,KAAA,CAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,MAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,QACA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,GAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,OAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,MAAA,KAAA,CAAA,CAAA,KAAA,OACA,KAAA,CAAA,KAAA,CAAA,CAAA,QAAA,KAAA,CAAA,CAAA,SACA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,IAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,IAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,QAAA,MAAA,CAAA,CAAA,MAAA,OAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,IAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,KAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,MAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,IAAA,KAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,IAAA,KAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,IAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,KAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,GAAA,GAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,GAAA,KAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,IACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,IACA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IACA,MAAA,CAAA,OAAA,CAAA,CAAA,IACA,MAAA,CAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,GAAA,OAAA,CAAA,CAAA,GAAA,OAAA,CAAA,CAAA,GAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,KAAA,OAAA,CAAA,CAAA,OAAA,QAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,KAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,KAAA,OAAA,CAAA,CAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,MAAA,GAAA,OAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,KAAA,OAAA,CAAA,CAAA,GAAA,IAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,MAAA,MAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,KAAA,OAAA,CAAA,CAAA,OAAA,MACA,MAAA,CAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,OAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SACA,MAAA,CAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,OAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SACA,KAAA,CAAA,KAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,SAAA,MAAA,CAAA,CAAA,QAAA,MAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,MAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,SAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,QAAA,OAAA,CAAA,CAAA,UACA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,GAAA,KAAA,KAAA,KAAA,KAAA,GAAA,KAAA,KAAA,KAAA,KAAA,GAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,GAAA,KAAA,KAAA,KAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,KAAA,MAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,GAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,KAAA,MAAA,CAAA,CAAA,KAAA,MAAA,MACA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,IAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,KAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,KAAA,MAAA,CAAA,CAAA,MAAA,OAKA,IAAAgC,EAAA,CACAC,IAxFA,SAAA/mC,GACA,OAAA4mC,EAAA,MAAA5mC,IAwFAgnC,IAjGA,SAAAhnC,GACA,OAAA4mC,EAAA,MAAA5mC,IAiGAinC,KAtFA,SAAAjnC,GACA,OAAA4mC,EAAA,OAAA5mC,IAsFAknC,KA/FA,SAAAlnC,GACA,OAAA4mC,EAAA,OAAA5mC,KAoGA,iBAAAK,EACAA,EAAA1D,QAAAmqC,EAGA,mBAAA3mC,QAAAA,OAAAC,IACAD,OAAA,SAAA,WACA,OAAA2mC,KAKAj6B,EAAAi6B,MAAAA,EAwBAA,EAAAK,aAAA,EAEAj6B,OAAA1H,UAAAohC,YACA1pC,OAAAiE,eAAA+L,OAAA1H,UAAA,YAAA,CACAsC,YAAA,EACAC,cAAA,EACAq/B,UAAA,EACA1pC,MAAA,SAAA6oB,GACA,IAAAvmB,EAAA,GAAAO,KAGA,GAAA,SAFAgmB,EAAAA,IAAA3rB,UAAA,MAAA2rB,GAGA,OAAAugB,EAAAC,IAAA/mC,GACA,GAAA,QAAAumB,EACA,OAAAugB,EAAAE,IAAAhnC,GACA,GAAA,SAAAumB,EACA,OAAAugB,EAAAG,KAAAjnC,GACA,GAAA,SAAAumB,EACA,OAAAugB,EAAAI,KAAAlnC,GAEA,MAAA,IAAAmV,WAAA,+BAAAoR,MAKAugB,EAAAK,aAAA,GA5bA,CA8bA5mC,wXC7bA,IAAAmF,EAAAnF,MAAAA,KAAAmF,UAAA,WASA,OARAA,EAAAxI,OAAAyI,QAAA,SAAAC,GACA,IAAA,IAAAnF,EAAAjG,EAAA,EAAA8E,EAAA3E,UAAAJ,OAAAC,EAAA8E,EAAA9E,IAEA,IAAA,IAAA4K,KADA3E,EAAA9F,UAAAH,GACA0C,OAAAsI,UAAAH,eAAAxE,KAAAJ,EAAA2E,KACAQ,EAAAR,GAAA3E,EAAA2E,IAEA,OAAAQ,GAEAF,EAAA3K,MAAAwF,KAAA5F,YAEA+lC,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGAymC,EAAAxgC,MAAAA,KAAAwgC,aAAA,SAAAtb,EAAAtC,GACA,IAAA6d,EAAA7L,EAAAvvB,EAAA60B,EAAAvkB,EAAA,CAAA+qB,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAt7B,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAu7B,KAAA,GAAAC,IAAA,IACA,OAAA3G,EAAA,CAAAngC,KAAA+mC,EAAA,GAAAC,MAAAD,EAAA,GAAAv+B,OAAAu+B,EAAA,IAAA,mBAAA3gC,SAAA+5B,EAAA/5B,OAAAC,UAAA,WAAA,OAAAJ,OAAAk6B,EACA,SAAA4G,EAAA/hC,GAAA,OAAA,SAAAkI,GAAA,OACA,SAAA+5B,GACA,GAAAP,EAAA,MAAA,IAAAjgC,UAAA,mCACA,KAAAmV,OACA,GAAA8qB,EAAA,EAAA7L,IAAAvvB,EAAA,EAAA27B,EAAA,GAAApM,EAAA,OAAAoM,EAAA,GAAApM,EAAA,SAAAvvB,EAAAuvB,EAAA,SAAAvvB,EAAA/E,KAAAs0B,GAAA,GAAAA,EAAA76B,SAAAsL,EAAAA,EAAA/E,KAAAs0B,EAAAoM,EAAA,KAAAzgC,KAAA,OAAA8E,EAEA,OADAuvB,EAAA,EAAAvvB,IAAA27B,EAAA,CAAA,EAAAA,EAAA,GAAA37B,EAAAlI,QACA6jC,EAAA,IACA,KAAA,EAAA,KAAA,EAAA37B,EAAA27B,EAAA,MACA,KAAA,EAAA,OAAArrB,EAAA+qB,QAAA,CAAAvjC,MAAA6jC,EAAA,GAAAzgC,MAAA,GACA,KAAA,EAAAoV,EAAA+qB,QAAA9L,EAAAoM,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAArrB,EAAAkrB,IAAAhlC,MAAA8Z,EAAAirB,KAAA/kC,MAAA,SACA,QACA,KAAAwJ,EAAAsQ,EAAAirB,MAAAv7B,EAAAA,EAAArL,OAAA,GAAAqL,EAAAA,EAAArL,OAAA,KAAA,IAAAgnC,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAArrB,EAAA,EAAA,SACA,GAAA,IAAAqrB,EAAA,MAAA37B,GAAA27B,EAAA,GAAA37B,EAAA,IAAA27B,EAAA,GAAA37B,EAAA,IAAA,CAAAsQ,EAAA+qB,MAAAM,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAArrB,EAAA+qB,MAAAr7B,EAAA,GAAA,CAAAsQ,EAAA+qB,MAAAr7B,EAAA,GAAAA,EAAA27B,EAAA,MACA,GAAA37B,GAAAsQ,EAAA+qB,MAAAr7B,EAAA,GAAA,CAAAsQ,EAAA+qB,MAAAr7B,EAAA,GAAAsQ,EAAAkrB,IAAA3kC,KAAA8kC,GAAA,MACA37B,EAAA,IAAAsQ,EAAAkrB,IAAAhlC,MACA8Z,EAAAirB,KAAA/kC,MAAA,SAEAmlC,EAAApe,EAAAtiB,KAAA4kB,EAAAvP,GACA,MAAAnQ,GAAAw7B,EAAA,CAAA,EAAAx7B,GAAAovB,EAAA,EAAA,QAAA6L,EAAAp7B,EAAA,EACA,GAAA,EAAA27B,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA7jC,MAAA6jC,EAAA,GAAAA,EAAA,QAAA,EAAAzgC,MAAA,GArBAggC,CAAA,CAAAxhC,EAAAkI,OAwBAtK,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACA,IAAAoX,EAAAjX,EAAA,UACAoF,EAAApF,EAAA,mBACAwpC,EAAAxpC,EAAA,aACAypC,EAAAzpC,EAAA,WACAX,OAAAiE,eAAAxE,EAAA,QAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAAy/B,EAAApmC,WACA,IAAAqmC,EAAA1pC,EAAA,gBACAX,OAAAiE,eAAAxE,EAAA,aAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA0/B,EAAArmC,WACA,IAAAsmC,EAAA3pC,EAAA,aACA4pC,EAAA5pC,EAAA,eACA6pC,EAAA7pC,EAAA,WACA,SAAA8pC,EAAAC,EAAA5nC,EAAAzF,GAIA,GAHAyF,EAAAkb,cAAA2sB,WAAA,QACA7nC,EAAAA,EAAAiI,MAAA,KAEAjI,IAAAzF,EACA,OAAAyF,EAEA,GAAAzF,EAAA,EACA,MAAA,IAAAmB,MAAA,mDAEA,GAAA,iBAAAnB,GAAAyF,EAAAzF,SAAAA,EACA,MAAA,IAAAmB,MAAA,WAAAksC,EAAA,oBAAArtC,EAAA,mBAEA,IAAA,oBAAAmoB,KAAA1iB,GAEA,MAAA,IAAAtE,MAAA,WAAAksC,EAAA,qBADA,iBAAArtC,EAAAA,EAAA,sCACA,mBAEA,OAAAyF,EAEA,SAAA8nC,EAAAF,EAAAG,EAAAxtC,GACA,IAAA6J,EAAAC,SAAA0jC,GAGA,MAAA,IAAArsC,MAAA,WAAAksC,EAAA,wBAFA,iBAAArtC,EAAA,GAAA,EAAAA,EAAA,sCAEA,8BADA,iBAAAA,EAAA,KAAAA,EAAA,UAAA,KAGA,GAAA,iBAAAA,GAAAwtC,EAAAxtC,SAAAA,EACA,MAAA,IAAAmB,MAAA,WAAAksC,EAAA,oBAAArtC,EAAA,UAEA,OAAAwtC,EAwDA,IAAAC,EAAA,WACA,SAAAA,EAAAC,EAAAC,GAIA,QAHA,IAAAA,IAAAA,EAAAttC,WACA2F,KAAA0nC,WAAAA,EACA1nC,KAAA2nC,UAAAA,EACAD,GAAAC,EACA,MAAA,IAAAxsC,MAAA,oEAEA,GAAAusC,IAAAhlC,EAAAklC,eAAAF,GACA,MAAA,IAAAvsC,MAAA,2EAEA,GAAAwsC,IAAAjlC,EAAAmlC,cAAAF,GACA,MAAA,IAAAxsC,MAAA,sBA+VA,OAtVAssC,EAAAK,SAAA,SAAAC,GAEA,QADA,IAAAA,IAAAA,GAAA,IACAA,EAUA,OAAA,IAAAN,EAAAP,EAAA,KARA,IADA,IAAA9c,EAAA,IAAA1nB,EAAAQ,GAAA,2CAAA,MACA,CACA,IAAAwkC,EAAAR,EAAA,IACA,GAAA,IAAAxkC,EAAAQ,GAAAR,EAAAslC,iBAAAN,IAAApM,IAAAlR,GACA,OAAA,IAAAqd,EAAAC,KAWAD,EAAAQ,sBAAA,SAAAC,GAIA,IAHAA,aAAAnxB,SACAmxB,EAAA,IAAAnxB,OAAAmxB,MAEA,CACA,IAAAR,EAAAR,EAAA,IACAiB,EAAAzlC,EAAAslC,iBAAAN,GACA,GAAAQ,EAAA/lB,KAAAgmB,EAAAzqC,SAAA,QACA,OAAA,IAAA+pC,EAAAC,KAUAD,EAAAW,cAAA,SAAAT,EAAAU,GAKA,YAJA,IAAAA,IAAAA,GAAA,GACAA,IACAV,EAAAjlC,EAAA4lC,aAAAX,IAEA,IAAAF,EAAAptC,UAAAstC,IAKAF,EAAAc,sBAAA,SAAAC,GACA,GAAA,SAAAA,EAAA9gC,MAAA,EAAA,GACA,MAAA,IAAAvM,MAAA,8BAEA,IAAAwsC,EAAAV,EAAAp/B,OAAA2gC,GAAA9gC,MAAA,IAEA,OAAA+/B,EAAAW,cAAAT,GAAA,IAKAF,EAAAgB,eAAA,SAAAf,GACA,OAAA,IAAAD,EAAAC,IAKAD,EAAAiB,uBAAA,SAAAC,GACA,GAAA,SAAAA,EAAAjhC,MAAA,EAAA,GACA,MAAA,IAAAvM,MAAA,+BAEA,IAAA4S,EAAAk5B,EAAAp/B,OAAA8gC,GACA,GAAA,IAAA56B,EAAA,IACA,MAAA,IAAA5S,MAAA,gCAEA,OAAAssC,EAAAgB,eAAA16B,EAAArG,MAAA,MAQA+/B,EAAAmB,OAAA,SAAArkC,EAAAwZ,GACA,OAAAoiB,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAA4kB,EAAAikB,EAAAC,EAAAr3B,EAAAs3B,EACA,OAAAvI,EAAAxgC,MAAA,SAAAuB,GACA,OAAAA,EAAAm/B,OACA,KAAA,EAEA,GAAA,OADA9b,EAAA,iBAAArgB,EAAAA,EAAAsgB,KAAAC,MAAAvgB,IACAykC,QACA,MAAA,IAAA7tC,MAAA,mBAEA,GAAA,WAAAypB,EAAAqkB,OAAAC,UAAAC,IACA,MAAA,IAAAhuC,MAAA,qCAGA,OADA0tC,EAAAjkB,EAAAqkB,OAAAC,UAAAE,UACA,CAAA,EAAAtC,EAAAuC,OAAAxlC,EAAAiC,KAAAiY,GAAAla,EAAAiC,KAAA8e,EAAAqkB,OAAAK,KAAA,OAAAT,EAAA9T,EAAA8T,EAAAU,EAAAV,EAAAxI,EAAAwI,EAAAW,QACA,KAAA,EAIA,GAHAV,EAAAvnC,EAAAo/B,OACAlvB,EAAA5N,EAAAiC,KAAA8e,EAAAqkB,OAAAQ,WAAA,OACA/mC,EAAAuG,UAAApF,EAAA9H,OAAA,CAAA+sC,EAAAphC,MAAA,GAAA,IAAA+J,KACA/T,SAAA,SAAAknB,EAAAqkB,OAAAS,IACA,MAAA,IAAAvuC,MAAA,qDAIA,OAFA4tC,EAAAx0B,EAAAqJ,iBAAA,cAAAlb,EAAAuG,UAAA6/B,EAAAphC,MAAA,EAAA,KAAAA,MAAA,EAAA,IAAA7D,EAAAiC,KAAA8e,EAAAqkB,OAAAU,GAAA,QAEA,CAAA,EAAA,IAAAlC,EADAmC,EAAAb,EAAAt3B,aAYAg2B,EAAAoC,OAAA,SAAAtlC,EAAAwZ,EAAAsqB,GAEA,YADA,IAAAA,IAAAA,GAAA,GACAlI,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAA4kB,EAAAkkB,EAAAD,EAAAp3B,EAAAs3B,EACA,OAAAvI,EAAAxgC,MAAA,SAAAuB,GACA,OAAAA,EAAAm/B,OACA,KAAA,EAEA,GAAA,KADA9b,EAAA,iBAAArgB,EAAAA,EAAAsgB,KAAAC,MAAAujB,EAAA9jC,EAAAoW,cAAApW,IACA5F,QACA,MAAA,IAAAxD,MAAA,mBAEA,MAAA,WAAAypB,EAAArQ,OAAAu1B,IAAA,CAAA,EAAA,IACAjB,EAAAjkB,EAAArQ,OAAAs0B,UACA,CAAA,EAAA/B,EAAAuC,OAAAxlC,EAAAiC,KAAAiY,GAAAla,EAAAiC,KAAA+iC,EAAAkB,KAAA,OAAAlB,EAAA9pC,EAAA8pC,EAAAtjC,EAAAsjC,EAAAhkC,EAAAgkC,EAAAmB,SACA,KAAA,EAGA,OADAlB,EAAAvnC,EAAAo/B,OACA,CAAA,EAAA,GACA,KAAA,EACA,GAAA,WAAA/b,EAAArQ,OAAAu1B,IAQA,MAAA,IAAA3uC,MAAA,qCANA,GAAA,iBADA0tC,EAAAjkB,EAAArQ,OAAAs0B,WACAoB,IACA,MAAA,IAAA9uC,MAAA,oCAEA2tC,EAAAv0B,EAAA0G,WAAApX,EAAAiC,KAAAiY,GAAAla,EAAAiC,KAAA+iC,EAAAkB,KAAA,OAAAlB,EAAAhqC,EAAAgqC,EAAAmB,MAAA,UAKAzoC,EAAAm/B,MAAA,EACA,KAAA,EAGA,GAFAjvB,EAAA5N,EAAAiC,KAAA8e,EAAArQ,OAAA9C,WAAA,OACA/O,EAAAuG,UAAApF,EAAA9H,OAAA,CAAA8H,EAAAiC,KAAAgjC,EAAAphC,MAAA,GAAA,KAAA+J,KACA/T,SAAA,SAAAknB,EAAArQ,OAAA21B,IACA,MAAA,IAAA/uC,MAAA,qDAIA,OAFA4tC,EAAAx0B,EAAAqJ,iBAAAgH,EAAArQ,OAAA41B,OAAArB,EAAAphC,MAAA,EAAA,IAAA7D,EAAAiC,KAAA8e,EAAArQ,OAAA61B,aAAAr4B,GAAA,QAEA,CAAA,EAAA,IAAA01B,EADAmC,EAAAb,EAAAt3B,aAcAg2B,EAAA4C,YAAA,SAAA9lC,EAAAwZ,GACA,IAAA6G,EAAA,iBAAArgB,EAAAA,EAAAsgB,KAAAC,MAAAvgB,GACA+lC,EAAAzmC,EAAAiC,KAAA8e,EAAA0lB,QAAA,OAEAxB,EAAAv0B,EAAA0G,WAAA8C,EAAAA,EAAA,IAAA,GAAA,UAAArW,MAAA,EAAA,IAKAvI,EAAAyqC,EADAr1B,EAAAqJ,iBAAA,cAAAkrB,EAAAwB,EAAA5iC,MAAA,EAAA,KACA4iC,EAAA5iC,MAAA,KACA6iC,EAAA,IAAA9C,EAAA/kC,EAAAuG,UAAA9J,IACA,GAAAorC,EAAAC,aAAA9sC,SAAA,SAAAknB,EAAA6lB,QACA,MAAA,IAAAtvC,MAAA,oDAEA,OAAAovC,GAEA5tC,OAAAiE,eAAA6mC,EAAAxiC,UAAA,SAAA,CAKAqC,IAAA,WAIA,OAHAojC,EAAA1qC,KAAA2nC,aACA3nC,KAAA2nC,UAAAjlC,EAAAioC,gBAAA3qC,KAAA0nC,aAEA1nC,KAAA2nC,WAEApgC,YAAA,EACAC,cAAA,IAEA7K,OAAAiE,eAAA6mC,EAAAxiC,UAAA,UAAA,CAIAqC,IAAA,WACA,IAAAojC,EAAA1qC,KAAA0nC,YACA,MAAA,IAAAvsC,MAAA,oCAEA,OAAA6E,KAAA0nC,YAEAngC,YAAA,EACAC,cAAA,IAQAigC,EAAAxiC,UAAA4b,cAAA,WACA,OAAA7gB,KAAA4qC,SAEAnD,EAAAxiC,UAAA4lC,oBAAA,WACA,OAAAnoC,EAAAooC,YAAA9qC,KAAA4qC,UAMAnD,EAAAxiC,UAAAob,aAAA,WACA,OAAArgB,KAAA+qC,QAKAtD,EAAAxiC,UAAA+lC,mBAAA,WACA,OAAAtoC,EAAAooC,YAAA9qC,KAAAqgB,iBAKAonB,EAAAxiC,UAAAulC,WAAA,WACA,OAAA9nC,EAAAuoC,gBAAAjrC,KAAA+qC,SAKAtD,EAAAxiC,UAAAimC,iBAAA,WACA,OAAAxoC,EAAAooC,YAAA9qC,KAAAwqC,eAMA/C,EAAAxiC,UAAAkmC,yBAAA,WACA,OAAAzoC,EAAA0oC,kBAAAprC,KAAAkrC,qBAQAzD,EAAAxiC,UAAAomC,KAAA,SAAAttB,EAAA9X,GACA,OAAAk6B,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAAsrC,EAAAC,EAAAzC,EAAAqB,EAAA14B,EAAAy4B,EACA,OAAA1J,EAAAxgC,MAAA,SAAAkG,GACA,OAAAA,EAAAw6B,OACA,KAAA,EACA,IAAAgK,EAAA1qC,KAAA0nC,YACA,MAAA,IAAAvsC,MAAA,oCAIA,OAxVAc,EAsVAgK,EArVAulC,EAAA,CACArB,OAAA,cACAL,IAAA,SACAC,KAAA7C,EAAA,IACAn1B,GAAAm1B,EAAA,IACAuE,KAAAvE,EAAA,IACA8C,MAAA,GACAnrC,EAAA,OACAE,EAAA,OACAwG,EAAA,EACAV,EAAA,GA2UAymC,EAzUArvC,GAGA,iBAAAA,EAAA8tC,OACA9tC,EAAA8tC,KAAAlmC,EAAAiC,KAAAshC,EAAA,OAAAnrC,EAAA8tC,MAAA,QAEA,iBAAA9tC,EAAA8V,KACA9V,EAAA8V,GAAAlO,EAAAiC,KAAAshC,EAAA,KAAAnrC,EAAA8V,GAAA,IAAA,QAEA,iBAAA9V,EAAAwvC,OACAxvC,EAAAwvC,KAAA5nC,EAAAiC,KAAAshC,EAAA,OAAAnrC,EAAAwvC,KAAA,IAAA,QAEAxvC,EAAA8tC,MACAxC,EAAA,OAAAtrC,EAAA8tC,MAEA9tC,EAAA8V,IACAw1B,EAAA,KAAAtrC,EAAA8V,GAAA,IAEA9V,EAAAwvC,MACAlE,EAAA,OAAAtrC,EAAAwvC,KAAA,IAEAtmC,EAAAA,EAAA,GAAAqmC,GAAAvvC,IApBAuvC,EAyUAF,EAAAxB,KAEA,IAAA,SAAA,MAAA,CAAA,EAAA,GACA,IAAA,SAAA,MAAA,CAAA,EAAA,GAEA,MAAA,CAAA,EAAA,GACA,KAAA,EAGA,OAFAyB,EA1TA,SAAAtlC,GACA,MAAA,CACA+jC,MAAA/jC,EAAA+jC,MACAD,KAAA9jC,EAAA8jC,KACAlrC,EAAAoH,EAAApH,EACAorC,IAAA,eAqTAyB,CAAAJ,GACAxC,EAAAv0B,EAAA0G,WAAApX,EAAAiC,KAAAiY,GAAAwtB,EAAAxB,KAAAwB,EAAA1sC,EAAA0sC,EAAAvB,MAAA,UACA,CAAA,EAAA,GACA,KAAA,EAEA,OADAuB,EAtTA,SAAAtlC,GACA,MAAA,CACA+jC,MAAA/jC,EAAA+jC,MACAD,KAAA9jC,EAAA8jC,KACAhrC,EAAAkH,EAAAlH,EACAwG,EAAAU,EAAAV,EACAV,EAAAoB,EAAApB,GAgTA8mC,CAAAL,GACA,CAAA,EAAAxE,EAAAuC,OAAAxlC,EAAAiC,KAAAiY,GAAAwtB,EAAAxB,KAAAwB,EAAAxsC,EAAAwsC,EAAAhmC,EAAAgmC,EAAA1mC,EAAA0mC,EAAAvB,QACA,KAAA,EAGA,OADAlB,EAAA5iC,EAAAy6B,OACA,CAAA,EAAA,GACA,KAAA,EAAA,MAAA,IAAAxlC,MAAA,mBACA,KAAA,EAEA,KADAgvC,EAAA51B,EAAAkJ,eAAA6tB,EAAAnB,OAAArB,EAAAphC,MAAA,EAAA,IAAA4jC,EAAAv5B,KAEA,MAAA,IAAA5W,MAAA,sBAIA,OAFAsW,EAAAm4B,EAAAO,EAAAnqC,KAAA4qC,SACAV,EAAAxnC,EAAAuG,UAAApF,EAAA9H,OAAA,CAAA8H,EAAAiC,KAAAgjC,EAAAphC,MAAA,GAAA,KAAA7D,EAAAiC,KAAA2L,MACA,CAAA,EAAA,CACA9S,QAAA,EACA2b,GAAA6sB,EAAA,CAAAyE,OAAAN,EAAAG,OAEAtD,QAAAnoC,KAAAwqC,aAAA9sC,SAAA,OACA6W,OAAA,CACA9C,WAAAA,EAAA/T,SAAA,OACA0sC,aAAA,CAAAr4B,GAAAu5B,EAAAv5B,GAAArU,SAAA,QACAysC,OAAAmB,EAAAnB,OACAL,IAAAwB,EAAAxB,IACAjB,UAAA1jC,EAAAA,EAAA,GAAAomC,GAAA,CAAAxB,KAAAwB,EAAAxB,KAAArsC,SAAA,SACAwsC,IAAAA,EAAAxsC,SAAA,UA3XA,IAAAzB,EACAuvC,SAoYA/D,EAAAxiC,UAAA4mC,cAAA,SAAAC,GAaA,MAAA,CAAA,SADAA,EAAA,IAAA10B,KAAA00B,GAAA,IAAA10B,MACAzN,SAAAoc,QAAA,KAAA,KAAA,KAAA/lB,KAAAwqC,aAAA9sC,SAAA,QAAAxC,KAAA,KAEAusC,EAAAxiC,UAAA8mC,WAAA,SAAAhuB,EAAA9X,GACA,OAAAk6B,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAAuB,EAAA2E,EACA,OAAAs6B,EAAAxgC,MAAA,SAAAgsC,GACA,OAAAA,EAAAtL,OACA,KAAA,EAEA,OADAx6B,GAAA3E,EAAAsjB,MAAAonB,UACA,CAAA,EAAAjsC,KAAAqrC,KAAAttB,EAAA9X,IACA,KAAA,EAAA,MAAA,CAAA,EAAAC,EAAA1L,MAAA+G,EAAA,CAAAyqC,EAAArL,kBAKA8G,EA3WA,GA+WA,SAAAmC,EAAAO,EAAA1mC,GACA,OAAAI,EAAA9H,OAAA,CAAAouC,EAAAj1B,OAAAzR,GAAA0mC,EAAA+B,UAEA,SAAAxB,EAAAle,GACA,OAAAA,IAAAnyB,WAAA,OAAAmyB,EANApwB,EAAAuE,QAAA8mC,sdC3fA,IAAAtiC,EAAAnF,MAAAA,KAAAmF,UAAA,WASA,OARAA,EAAAxI,OAAAyI,QAAA,SAAAC,GACA,IAAA,IAAAnF,EAAAjG,EAAA,EAAA8E,EAAA3E,UAAAJ,OAAAC,EAAA8E,EAAA9E,IAEA,IAAA,IAAA4K,KADA3E,EAAA9F,UAAAH,GACA0C,OAAAsI,UAAAH,eAAAxE,KAAAJ,EAAA2E,KACAQ,EAAAR,GAAA3E,EAAA2E,IAEA,OAAAQ,GAEAF,EAAA3K,MAAAwF,KAAA5F,YAEA+lC,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGAymC,EAAAxgC,MAAAA,KAAAwgC,aAAA,SAAAtb,EAAAtC,GACA,IAAA6d,EAAA7L,EAAAvvB,EAAA60B,EAAAvkB,EAAA,CAAA+qB,MAAA,EAAAC,KAAA,WAAA,GAAA,EAAAt7B,EAAA,GAAA,MAAAA,EAAA,GAAA,OAAAA,EAAA,IAAAu7B,KAAA,GAAAC,IAAA,IACA,OAAA3G,EAAA,CAAAngC,KAAA+mC,EAAA,GAAAC,MAAAD,EAAA,GAAAv+B,OAAAu+B,EAAA,IAAA,mBAAA3gC,SAAA+5B,EAAA/5B,OAAAC,UAAA,WAAA,OAAAJ,OAAAk6B,EACA,SAAA4G,EAAA/hC,GAAA,OAAA,SAAAkI,GAAA,OACA,SAAA+5B,GACA,GAAAP,EAAA,MAAA,IAAAjgC,UAAA,mCACA,KAAAmV,OACA,GAAA8qB,EAAA,EAAA7L,IAAAvvB,EAAA,EAAA27B,EAAA,GAAApM,EAAA,OAAAoM,EAAA,GAAApM,EAAA,SAAAvvB,EAAAuvB,EAAA,SAAAvvB,EAAA/E,KAAAs0B,GAAA,GAAAA,EAAA76B,SAAAsL,EAAAA,EAAA/E,KAAAs0B,EAAAoM,EAAA,KAAAzgC,KAAA,OAAA8E,EAEA,OADAuvB,EAAA,EAAAvvB,IAAA27B,EAAA,CAAA,EAAAA,EAAA,GAAA37B,EAAAlI,QACA6jC,EAAA,IACA,KAAA,EAAA,KAAA,EAAA37B,EAAA27B,EAAA,MACA,KAAA,EAAA,OAAArrB,EAAA+qB,QAAA,CAAAvjC,MAAA6jC,EAAA,GAAAzgC,MAAA,GACA,KAAA,EAAAoV,EAAA+qB,QAAA9L,EAAAoM,EAAA,GAAAA,EAAA,CAAA,GAAA,SACA,KAAA,EAAAA,EAAArrB,EAAAkrB,IAAAhlC,MAAA8Z,EAAAirB,KAAA/kC,MAAA,SACA,QACA,KAAAwJ,EAAAsQ,EAAAirB,MAAAv7B,EAAAA,EAAArL,OAAA,GAAAqL,EAAAA,EAAArL,OAAA,KAAA,IAAAgnC,EAAA,IAAA,IAAAA,EAAA,IAAA,CAAArrB,EAAA,EAAA,SACA,GAAA,IAAAqrB,EAAA,MAAA37B,GAAA27B,EAAA,GAAA37B,EAAA,IAAA27B,EAAA,GAAA37B,EAAA,IAAA,CAAAsQ,EAAA+qB,MAAAM,EAAA,GAAA,MACA,GAAA,IAAAA,EAAA,IAAArrB,EAAA+qB,MAAAr7B,EAAA,GAAA,CAAAsQ,EAAA+qB,MAAAr7B,EAAA,GAAAA,EAAA27B,EAAA,MACA,GAAA37B,GAAAsQ,EAAA+qB,MAAAr7B,EAAA,GAAA,CAAAsQ,EAAA+qB,MAAAr7B,EAAA,GAAAsQ,EAAAkrB,IAAA3kC,KAAA8kC,GAAA,MACA37B,EAAA,IAAAsQ,EAAAkrB,IAAAhlC,MACA8Z,EAAAirB,KAAA/kC,MAAA,SAEAmlC,EAAApe,EAAAtiB,KAAA4kB,EAAAvP,GACA,MAAAnQ,GAAAw7B,EAAA,CAAA,EAAAx7B,GAAAovB,EAAA,EAAA,QAAA6L,EAAAp7B,EAAA,EACA,GAAA,EAAA27B,EAAA,GAAA,MAAAA,EAAA,GAAA,MAAA,CAAA7jC,MAAA6jC,EAAA,GAAAA,EAAA,QAAA,EAAAzgC,MAAA,GArBAggC,CAAA,CAAAxhC,EAAAkI,OAwBAtK,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACA,IAAAoX,EAAAjX,EAAA,UACAoF,EAAApF,EAAA,mBACAwpC,EAAAxpC,EAAA,aACAypC,EAAAzpC,EAAA,WACAX,OAAAiE,eAAAxE,EAAA,QAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAAy/B,EAAApmC,WACA,IAAAqmC,EAAA1pC,EAAA,gBACAX,OAAAiE,eAAAxE,EAAA,aAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA0/B,EAAArmC,WACA,IAAAsmC,EAAA3pC,EAAA,aACA4pC,EAAA5pC,EAAA,eACA6pC,EAAA7pC,EAAA,WACA,SAAA8pC,EAAAC,EAAA5nC,EAAAzF,GAIA,GAHAyF,EAAAkb,cAAA2sB,WAAA,QACA7nC,EAAAA,EAAAiI,MAAA,KAEAjI,IAAAzF,EACA,OAAAyF,EAEA,GAAAzF,EAAA,EACA,MAAA,IAAAmB,MAAA,mDAEA,GAAA,iBAAAnB,GAAAyF,EAAAzF,SAAAA,EACA,MAAA,IAAAmB,MAAA,WAAAksC,EAAA,oBAAArtC,EAAA,mBAEA,IAAA,oBAAAmoB,KAAA1iB,GAEA,MAAA,IAAAtE,MAAA,WAAAksC,EAAA,qBADA,iBAAArtC,EAAAA,EAAA,sCACA,mBAEA,OAAAyF,EAEA,SAAA8nC,EAAAF,EAAAG,EAAAxtC,GACA,IAAA6J,EAAAC,SAAA0jC,GAGA,MAAA,IAAArsC,MAAA,WAAAksC,EAAA,wBAFA,iBAAArtC,EAAA,GAAA,EAAAA,EAAA,sCAEA,8BADA,iBAAAA,EAAA,KAAAA,EAAA,UAAA,KAGA,GAAA,iBAAAA,GAAAwtC,EAAAxtC,SAAAA,EACA,MAAA,IAAAmB,MAAA,WAAAksC,EAAA,oBAAArtC,EAAA,UAEA,OAAAwtC,EAwDA,IAAAC,EAAA,WACA,SAAAA,EAAAC,EAAAC,GAIA,QAHA,IAAAA,IAAAA,EAAAttC,WACA2F,KAAA0nC,WAAAA,EACA1nC,KAAA2nC,UAAAA,EACAD,GAAAC,EACA,MAAA,IAAAxsC,MAAA,oEAEA,GAAAusC,IAAAhlC,EAAAklC,eAAAF,GACA,MAAA,IAAAvsC,MAAA,2EAEA,GAAAwsC,IAAAjlC,EAAAmlC,cAAAF,GACA,MAAA,IAAAxsC,MAAA,sBA+VA,OAtVAssC,EAAAK,SAAA,SAAAC,GAEA,QADA,IAAAA,IAAAA,GAAA,IACAA,EAUA,OAAA,IAAAN,EAAAP,EAAA,KARA,IADA,IAAA9c,EAAA,IAAA1nB,EAAAQ,GAAA,2CAAA,MACA,CACA,IAAAwkC,EAAAR,EAAA,IACA,GAAA,IAAAxkC,EAAAQ,GAAAR,EAAAslC,iBAAAN,IAAApM,IAAAlR,GACA,OAAA,IAAAqd,EAAAC,KAWAD,EAAAQ,sBAAA,SAAAC,GAIA,IAHAA,aAAAnxB,SACAmxB,EAAA,IAAAnxB,OAAAmxB,MAEA,CACA,IAAAR,EAAAR,EAAA,IACAiB,EAAAzlC,EAAAslC,iBAAAN,GACA,GAAAQ,EAAA/lB,KAAAgmB,EAAAzqC,SAAA,QACA,OAAA,IAAA+pC,EAAAC,KAUAD,EAAAW,cAAA,SAAAT,EAAAU,GAKA,YAJA,IAAAA,IAAAA,GAAA,GACAA,IACAV,EAAAjlC,EAAA4lC,aAAAX,IAEA,IAAAF,EAAAptC,UAAAstC,IAKAF,EAAAc,sBAAA,SAAAC,GACA,GAAA,SAAAA,EAAA9gC,MAAA,EAAA,GACA,MAAA,IAAAvM,MAAA,8BAEA,IAAAwsC,EAAAV,EAAAp/B,OAAA2gC,GAAA9gC,MAAA,IAEA,OAAA+/B,EAAAW,cAAAT,GAAA,IAKAF,EAAAgB,eAAA,SAAAf,GACA,OAAA,IAAAD,EAAAC,IAKAD,EAAAiB,uBAAA,SAAAC,GACA,GAAA,SAAAA,EAAAjhC,MAAA,EAAA,GACA,MAAA,IAAAvM,MAAA,+BAEA,IAAA4S,EAAAk5B,EAAAp/B,OAAA8gC,GACA,GAAA,IAAA56B,EAAA,IACA,MAAA,IAAA5S,MAAA,gCAEA,OAAAssC,EAAAgB,eAAA16B,EAAArG,MAAA,MAQA+/B,EAAAmB,OAAA,SAAArkC,EAAAwZ,GACA,OAAAoiB,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAA4kB,EAAAikB,EAAAC,EAAAr3B,EAAAs3B,EACA,OAAAvI,EAAAxgC,MAAA,SAAAuB,GACA,OAAAA,EAAAm/B,OACA,KAAA,EAEA,GAAA,OADA9b,EAAA,iBAAArgB,EAAAA,EAAAsgB,KAAAC,MAAAvgB,IACAykC,QACA,MAAA,IAAA7tC,MAAA,mBAEA,GAAA,WAAAypB,EAAAqkB,OAAAC,UAAAC,IACA,MAAA,IAAAhuC,MAAA,qCAGA,OADA0tC,EAAAjkB,EAAAqkB,OAAAC,UAAAE,UACA,CAAA,EAAAtC,EAAAuC,OAAAxlC,EAAAiC,KAAAiY,GAAAla,EAAAiC,KAAA8e,EAAAqkB,OAAAK,KAAA,OAAAT,EAAA9T,EAAA8T,EAAAU,EAAAV,EAAAxI,EAAAwI,EAAAW,QACA,KAAA,EAIA,GAHAV,EAAAvnC,EAAAo/B,OACAlvB,EAAA5N,EAAAiC,KAAA8e,EAAAqkB,OAAAQ,WAAA,OACA/mC,EAAAuG,UAAApF,EAAA9H,OAAA,CAAA+sC,EAAAphC,MAAA,GAAA,IAAA+J,KACA/T,SAAA,SAAAknB,EAAAqkB,OAAAS,IACA,MAAA,IAAAvuC,MAAA,qDAIA,OAFA4tC,EAAAx0B,EAAAqJ,iBAAA,cAAAlb,EAAAuG,UAAA6/B,EAAAphC,MAAA,EAAA,KAAAA,MAAA,EAAA,IAAA7D,EAAAiC,KAAA8e,EAAAqkB,OAAAU,GAAA,QAEA,CAAA,EAAA,IAAAlC,EADAmC,EAAAb,EAAAt3B,aAYAg2B,EAAAoC,OAAA,SAAAtlC,EAAAwZ,EAAAsqB,GAEA,YADA,IAAAA,IAAAA,GAAA,GACAlI,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAA4kB,EAAAkkB,EAAAD,EAAAp3B,EAAAs3B,EACA,OAAAvI,EAAAxgC,MAAA,SAAAuB,GACA,OAAAA,EAAAm/B,OACA,KAAA,EAEA,GAAA,KADA9b,EAAA,iBAAArgB,EAAAA,EAAAsgB,KAAAC,MAAAujB,EAAA9jC,EAAAoW,cAAApW,IACA5F,QACA,MAAA,IAAAxD,MAAA,mBAEA,MAAA,WAAAypB,EAAArQ,OAAAu1B,IAAA,CAAA,EAAA,IACAjB,EAAAjkB,EAAArQ,OAAAs0B,UACA,CAAA,EAAA/B,EAAAuC,OAAAxlC,EAAAiC,KAAAiY,GAAAla,EAAAiC,KAAA+iC,EAAAkB,KAAA,OAAAlB,EAAA9pC,EAAA8pC,EAAAtjC,EAAAsjC,EAAAhkC,EAAAgkC,EAAAmB,SACA,KAAA,EAGA,OADAlB,EAAAvnC,EAAAo/B,OACA,CAAA,EAAA,GACA,KAAA,EACA,GAAA,WAAA/b,EAAArQ,OAAAu1B,IAQA,MAAA,IAAA3uC,MAAA,qCANA,GAAA,iBADA0tC,EAAAjkB,EAAArQ,OAAAs0B,WACAoB,IACA,MAAA,IAAA9uC,MAAA,oCAEA2tC,EAAAv0B,EAAA0G,WAAApX,EAAAiC,KAAAiY,GAAAla,EAAAiC,KAAA+iC,EAAAkB,KAAA,OAAAlB,EAAAhqC,EAAAgqC,EAAAmB,MAAA,UAKAzoC,EAAAm/B,MAAA,EACA,KAAA,EAGA,GAFAjvB,EAAA5N,EAAAiC,KAAA8e,EAAArQ,OAAA9C,WAAA,OACA/O,EAAAuG,UAAApF,EAAA9H,OAAA,CAAA8H,EAAAiC,KAAAgjC,EAAAphC,MAAA,GAAA,KAAA+J,KACA/T,SAAA,SAAAknB,EAAArQ,OAAA21B,IACA,MAAA,IAAA/uC,MAAA,qDAIA,OAFA4tC,EAAAx0B,EAAAqJ,iBAAAgH,EAAArQ,OAAA41B,OAAArB,EAAAphC,MAAA,EAAA,IAAA7D,EAAAiC,KAAA8e,EAAArQ,OAAA61B,aAAAr4B,GAAA,QAEA,CAAA,EAAA,IAAA01B,EADAmC,EAAAb,EAAAt3B,aAcAg2B,EAAA4C,YAAA,SAAA9lC,EAAAwZ,GACA,IAAA6G,EAAA,iBAAArgB,EAAAA,EAAAsgB,KAAAC,MAAAvgB,GACA+lC,EAAAzmC,EAAAiC,KAAA8e,EAAA0lB,QAAA,OAEAxB,EAAAv0B,EAAA0G,WAAA8C,EAAAA,EAAA,IAAA,GAAA,UAAArW,MAAA,EAAA,IAKAvI,EAAAyqC,EADAr1B,EAAAqJ,iBAAA,cAAAkrB,EAAAwB,EAAA5iC,MAAA,EAAA,KACA4iC,EAAA5iC,MAAA,KACA6iC,EAAA,IAAA9C,EAAA/kC,EAAAuG,UAAA9J,IACA,GAAAorC,EAAAC,aAAA9sC,SAAA,SAAAknB,EAAA6lB,QACA,MAAA,IAAAtvC,MAAA,oDAEA,OAAAovC,GAEA5tC,OAAAiE,eAAA6mC,EAAAxiC,UAAA,SAAA,CAKAqC,IAAA,WAIA,OAHAojC,EAAA1qC,KAAA2nC,aACA3nC,KAAA2nC,UAAAjlC,EAAAioC,gBAAA3qC,KAAA0nC,aAEA1nC,KAAA2nC,WAEApgC,YAAA,EACAC,cAAA,IAEA7K,OAAAiE,eAAA6mC,EAAAxiC,UAAA,UAAA,CAIAqC,IAAA,WACA,IAAAojC,EAAA1qC,KAAA0nC,YACA,MAAA,IAAAvsC,MAAA,oCAEA,OAAA6E,KAAA0nC,YAEAngC,YAAA,EACAC,cAAA,IAQAigC,EAAAxiC,UAAA4b,cAAA,WACA,OAAA7gB,KAAA4qC,SAEAnD,EAAAxiC,UAAA4lC,oBAAA,WACA,OAAAnoC,EAAAooC,YAAA9qC,KAAA4qC,UAMAnD,EAAAxiC,UAAAob,aAAA,WACA,OAAArgB,KAAA+qC,QAKAtD,EAAAxiC,UAAA+lC,mBAAA,WACA,OAAAtoC,EAAAooC,YAAA9qC,KAAAqgB,iBAKAonB,EAAAxiC,UAAAulC,WAAA,WACA,OAAA9nC,EAAAuoC,gBAAAjrC,KAAA+qC,SAKAtD,EAAAxiC,UAAAimC,iBAAA,WACA,OAAAxoC,EAAAooC,YAAA9qC,KAAAwqC,eAMA/C,EAAAxiC,UAAAkmC,yBAAA,WACA,OAAAzoC,EAAA0oC,kBAAAprC,KAAAkrC,qBAQAzD,EAAAxiC,UAAAomC,KAAA,SAAAttB,EAAA9X,GACA,OAAAk6B,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAAsrC,EAAAC,EAAAzC,EAAAqB,EAAA14B,EAAAy4B,EACA,OAAA1J,EAAAxgC,MAAA,SAAAkG,GACA,OAAAA,EAAAw6B,OACA,KAAA,EACA,IAAAgK,EAAA1qC,KAAA0nC,YACA,MAAA,IAAAvsC,MAAA,oCAIA,OAxVAc,EAsVAgK,EArVAulC,EAAA,CACArB,OAAA,cACAL,IAAA,SACAC,KAAA7C,EAAA,IACAn1B,GAAAm1B,EAAA,IACAuE,KAAAvE,EAAA,IACA8C,MAAA,GACAnrC,EAAA,OACAE,EAAA,OACAwG,EAAA,EACAV,EAAA,GA2UAymC,EAzUArvC,GAGA,iBAAAA,EAAA8tC,OACA9tC,EAAA8tC,KAAAlmC,EAAAiC,KAAAshC,EAAA,OAAAnrC,EAAA8tC,MAAA,QAEA,iBAAA9tC,EAAA8V,KACA9V,EAAA8V,GAAAlO,EAAAiC,KAAAshC,EAAA,KAAAnrC,EAAA8V,GAAA,IAAA,QAEA,iBAAA9V,EAAAwvC,OACAxvC,EAAAwvC,KAAA5nC,EAAAiC,KAAAshC,EAAA,OAAAnrC,EAAAwvC,KAAA,IAAA,QAEAxvC,EAAA8tC,MACAxC,EAAA,OAAAtrC,EAAA8tC,MAEA9tC,EAAA8V,IACAw1B,EAAA,KAAAtrC,EAAA8V,GAAA,IAEA9V,EAAAwvC,MACAlE,EAAA,OAAAtrC,EAAAwvC,KAAA,IAEAtmC,EAAAA,EAAA,GAAAqmC,GAAAvvC,IApBAuvC,EAyUAF,EAAAxB,KAEA,IAAA,SAAA,MAAA,CAAA,EAAA,GACA,IAAA,SAAA,MAAA,CAAA,EAAA,GAEA,MAAA,CAAA,EAAA,GACA,KAAA,EAGA,OAFAyB,EA1TA,SAAAtlC,GACA,MAAA,CACA+jC,MAAA/jC,EAAA+jC,MACAD,KAAA9jC,EAAA8jC,KACAlrC,EAAAoH,EAAApH,EACAorC,IAAA,eAqTAyB,CAAAJ,GACAxC,EAAAv0B,EAAA0G,WAAApX,EAAAiC,KAAAiY,GAAAwtB,EAAAxB,KAAAwB,EAAA1sC,EAAA0sC,EAAAvB,MAAA,UACA,CAAA,EAAA,GACA,KAAA,EAEA,OADAuB,EAtTA,SAAAtlC,GACA,MAAA,CACA+jC,MAAA/jC,EAAA+jC,MACAD,KAAA9jC,EAAA8jC,KACAhrC,EAAAkH,EAAAlH,EACAwG,EAAAU,EAAAV,EACAV,EAAAoB,EAAApB,GAgTA8mC,CAAAL,GACA,CAAA,EAAAxE,EAAAuC,OAAAxlC,EAAAiC,KAAAiY,GAAAwtB,EAAAxB,KAAAwB,EAAAxsC,EAAAwsC,EAAAhmC,EAAAgmC,EAAA1mC,EAAA0mC,EAAAvB,QACA,KAAA,EAGA,OADAlB,EAAA5iC,EAAAy6B,OACA,CAAA,EAAA,GACA,KAAA,EAAA,MAAA,IAAAxlC,MAAA,mBACA,KAAA,EAEA,KADAgvC,EAAA51B,EAAAkJ,eAAA6tB,EAAAnB,OAAArB,EAAAphC,MAAA,EAAA,IAAA4jC,EAAAv5B,KAEA,MAAA,IAAA5W,MAAA,sBAIA,OAFAsW,EAAAm4B,EAAAO,EAAAnqC,KAAA4qC,SACAV,EAAAxnC,EAAAuG,UAAApF,EAAA9H,OAAA,CAAA8H,EAAAiC,KAAAgjC,EAAAphC,MAAA,GAAA,KAAA7D,EAAAiC,KAAA2L,MACA,CAAA,EAAA,CACA9S,QAAA,EACA2b,GAAA6sB,EAAA,CAAAyE,OAAAN,EAAAG,OAEAtD,QAAAnoC,KAAAwqC,aAAA9sC,SAAA,OACA6W,OAAA,CACA9C,WAAAA,EAAA/T,SAAA,OACA0sC,aAAA,CAAAr4B,GAAAu5B,EAAAv5B,GAAArU,SAAA,QACAysC,OAAAmB,EAAAnB,OACAL,IAAAwB,EAAAxB,IACAjB,UAAA1jC,EAAAA,EAAA,GAAAomC,GAAA,CAAAxB,KAAAwB,EAAAxB,KAAArsC,SAAA,SACAwsC,IAAAA,EAAAxsC,SAAA,UA3XA,IAAAzB,EACAuvC,SAoYA/D,EAAAxiC,UAAA4mC,cAAA,SAAAC,GAaA,MAAA,CAAA,SADAA,EAAA,IAAA10B,KAAA00B,GAAA,IAAA10B,MACAzN,SAAAoc,QAAA,KAAA,KAAA,KAAA/lB,KAAAwqC,aAAA9sC,SAAA,QAAAxC,KAAA,KAEAusC,EAAAxiC,UAAA8mC,WAAA,SAAAhuB,EAAA9X,GACA,OAAAk6B,EAAAngC,UAAA,OAAA,GAAA,WACA,IAAAuB,EAAA2E,EACA,OAAAs6B,EAAAxgC,MAAA,SAAAgsC,GACA,OAAAA,EAAAtL,OACA,KAAA,EAEA,OADAx6B,GAAA3E,EAAAsjB,MAAAonB,UACA,CAAA,EAAAjsC,KAAAqrC,KAAAttB,EAAA9X,IACA,KAAA,EAAA,MAAA,CAAA,EAAAC,EAAA1L,MAAA+G,EAAA,CAAAyqC,EAAArL,kBAKA8G,EA3WA,GA+WA,SAAAmC,EAAAO,EAAA1mC,GACA,OAAAI,EAAA9H,OAAA,CAAAouC,EAAAj1B,OAAAzR,GAAA0mC,EAAA+B,UAEA,SAAAxB,EAAAle,GACA,OAAAA,IAAAnyB,WAAA,OAAAmyB,EANApwB,EAAAuE,QAAA8mC,gTC3fA9qC,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAA+vC,KAAA/vC,EAAAgwC,oCAAAhwC,EAAAiwC,kCAAAjwC,EAAAkwC,qBAAAlwC,EAAAmwC,+BAAAnwC,EAAAowC,6BAAApwC,EAAAqwC,oBAAArwC,EAAAswC,MAAAtwC,EAAAuwC,QAAAvwC,EAAAwwC,OAAAxwC,EAAAywC,iBAAAzwC,EAAA0wC,yBAAA1wC,EAAA2wC,sBAAA3wC,EAAA4wC,IAAA5wC,EAAA6wC,aAAA,EACA7wC,EAAA6wC,QAAA,UACA7wC,EAAA4wC,IAAA,MACA5wC,EAAA2wC,sBAAA,MACA3wC,EAAA0wC,yBAAA,oCAEA1wC,EAAAywC,iBAAA,IAEAzwC,EAAAwwC,OAAA,SACAxwC,EAAAuwC,QAAA,UACAvwC,EAAAswC,MAAA,QAEAtwC,EAAAqwC,oBAAA,aACArwC,EAAAowC,6BAAA,aACApwC,EAAAmwC,+BAAA,aACAnwC,EAAAkwC,qBAAA,aACAlwC,EAAAiwC,kCAAA,aACAjwC,EAAAgwC,oCAAA,aAEAhwC,EAAA+vC,KAAA,kQCpBA,IAAAhM,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGA4C,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAA8wC,uBAAA,EACA,MAAAtnC,EAAAtI,EAAA,WAqDAlB,EAAA8wC,kBA5BA,SAAAC,EAAAC,EAAAC,GACA,OAAAlN,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAA4kB,QAAAhf,EAAA0nC,YAfA,SAAAC,EAAAH,EAAAC,GACA,MACA,qDAAAD,EAAAhgC,uBAAAmgC,EAAAngC,iBACAigC,GAAA,QAAAE,EAAAngC,cAAA,OAAA,IAYAogC,CAAAL,EAAAC,EAAAC,IASA,GAAA,UAAAzoB,EAAAwB,SACA,MAAA,IAAAjrB,MAAAypB,EAAA6oB,SAEA,MAAAC,EAAA36B,OAAA6R,EAAAuoB,EAAA//B,gBACAugC,EAAA56B,OAAA6R,EAAAgpB,KACA,IAAA76B,OAAA86B,SAAAH,GACA,MAAA,IAAAvyC,MAAA,wBAAAgyC,EAAA//B,kBAAAwX,EAAAuoB,EAAA//B,kBAEA,GAAAigC,IAAAt6B,OAAA86B,SAAAF,GACA,MAAA,IAAAxyC,MAAA,2CAAAypB,EAAAgpB,OAEA,MAAA,CACAF,eAAAA,EACAC,kBAAAA,kSC5DAhxC,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAA0xC,4BAAA,EACA,MAAAC,EAAAzwC,EAAA,UACA0wC,EAAA1wC,EAAA,qBAIA,MAAAwwC,UAAAE,EAAAC,eAOAjpC,YAAAkpC,EAAAC,GACAC,MAAAF,EAAAC,GAIAnuC,KAAAquC,IAAA,IAAAN,EAAAO,aAIAtuC,KAAAmC,KAAA,yBACAnC,KAAAuuC,aAAA,CACAC,mBAAA,GACAC,wBAAA,GAEAzuC,KAAA0uC,SAAA,GACA1uC,KAAA2uC,aAMAC,kBACA,MAAAJ,EAAAxuC,KAAA6uC,wBACAJ,EAAAzuC,KAAA8uC,6BACA9uC,KAAAkV,OAAA,CAAAs5B,mBAAAA,EAAAC,wBAAAA,IACAzuC,KAAAquC,IAAAU,KAAA,eAQAC,iBAAAC,EAAA3oB,GACA,MAAAtd,EAAAhJ,KAAAkvC,WAAAD,GACA,IAAAjmC,EACA,MAAA,IAAA7N,MAAA,GAAA6E,KAAAmC,mCAAA8sC,MAEAjmC,EAAAsd,OAAAA,EACAtmB,KAAAmvC,cAAAnmC,GACAhJ,KAAAquC,IAAAU,KAAA,GAAAE,KAAA3oB,IAAAtd,GACA,aAAAsd,GAAA,WAAAA,GAAA,YAAAA,GACAtmB,KAAAquC,IAAAU,KAAA,GAAAE,aAAAjmC,GASAmmC,cAAAnmC,GACA,MAAA5L,EAAA4C,KAAA0uC,SAAAU,WAAAtmB,GAAA9f,EAAAsR,KAAAwO,EAAAxO,MAEA,IAAAld,IACA4C,KAAA0uC,SAAAtxC,GAAA4L,GAEAhJ,KAAA4uC,kBAOAE,6BACA,OAAAnyC,OAAAC,KAAAoD,KAAA6uC,yBAAA70C,OAOA60C,wBACA,OAAA7uC,KAAA0uC,SACAW,QAAArmC,GAAA,eAAAA,EAAAsd,SACArpB,QAAA,CAAAoS,EAAArG,KACAqG,EAAArG,EAAAsR,IAAAtR,EACAqG,IACA,IAQAigC,WAAAtmC,GACAhJ,KAAA0uC,SAAAxyC,KAAA8M,GACAhJ,KAAA4uC,kBASAM,WAAAD,GACA,OAAAjvC,KAAA0uC,SAAAa,MAAAvmC,GAAAA,EAAAsR,KAAA20B,IAUAO,eAAAC,GAIA,OADAzvC,KAAA0vC,yBAAAD,EAAAE,YACA3vC,KAAA4vC,sBAAAH,GAOAC,yBAAAT,GACAjvC,KAAAgvC,iBAAAC,EAAA,YAUAY,uBAAAZ,EAAAa,GACA,MAAA9mC,EAAAhJ,KAAAkvC,WAAAD,GAEAjmC,IAGAA,EAAA8mC,OAAAA,EACA9vC,KAAAmvC,cAAAnmC,GACAhJ,KAAAgvC,iBAAAC,EAAA,WAOAc,cAAAd,GACAjvC,KAAAgvC,iBAAAC,EAAA,aAGA7yC,EAAA0xC,uBAAAA,EACA1xC,EAAAuE,QAAAmtC,waCnKAnxC,OAAAiE,eAAAxE,EAAA,aAAA,CACAe,OAAA,IAEAR,OAAAiE,eAAAxE,EAAA,KAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAA0oC,EAAArvC,WAGAhE,OAAAiE,eAAAxE,EAAA,KAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAA2oC,EAAAtvC,WAGAhE,OAAAiE,eAAAxE,EAAA,KAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAA4oC,EAAAvvC,WAGAhE,OAAAiE,eAAAxE,EAAA,KAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAA6oC,EAAAxvC,WAGAhE,OAAAiE,eAAAxE,EAAA,MAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAA8oC,EAAAzvC,WAGAhE,OAAAiE,eAAAxE,EAAA,UAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAA+oC,EAAA1vC,WAGAhE,OAAAiE,eAAAxE,EAAA,WAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAAgpC,EAAA3vC,WAGAhE,OAAAiE,eAAAxE,EAAA,YAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAAipC,EAAA5vC,WAGAhE,OAAAiE,eAAAxE,EAAA,QAAA,CACAmL,YAAA,EACAD,IAAA,WACA,OAAAkpC,EAAA7vC,WAIA,IAAAqvC,EAAAS,EAAAnzC,EAAA,YAEA2yC,EAAAQ,EAAAnzC,EAAA,YAEA4yC,EAAAO,EAAAnzC,EAAA,YAEA6yC,EAAAM,EAAAnzC,EAAA,YAEA8yC,EAAAK,EAAAnzC,EAAA,aAEA+yC,EAAAI,EAAAnzC,EAAA,iBAEAgzC,EAAAG,EAAAnzC,EAAA,kBAEAizC,EAAAE,EAAAnzC,EAAA,mBAEAkzC,EAAAC,EAAAnzC,EAAA,eAEA,SAAAmzC,EAAAn7B,GAAA,OAAAA,GAAAA,EAAAjZ,WAAAiZ,EAAA,CAAA3U,QAAA2U,2MC7EA3Y,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAAs0C,iCAAA,EA8BAt0C,EAAAs0C,4BApBA,SAAAC,EAAAC,GAkBA,MAjBA,CACA,QACA,kBACA,eACA,iBACA,gBACA,YACA,oBACA,gBAEA3zC,QAAA,CAAAE,EAAAN,IACA8zC,EAAA9zC,IACA8zC,EAAA9zC,KAAA+zC,EAAA/zC,GACAM,EAAA,EAEAA,GACA,GACA,8SC7BAR,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAAy0C,YAAAz0C,EAAA00C,UAAA10C,EAAA20C,WAAA,EACA,IAAAC,EAAA1zC,EAAA,WACAX,OAAAiE,eAAAxE,EAAA,QAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA0pC,EAAArwC,WACA,IAAAswC,EAAA3zC,EAAA,eACAX,OAAAiE,eAAAxE,EAAA,YAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA2pC,EAAAtwC,WACA,IAAAuwC,EAAA5zC,EAAA,iBACAX,OAAAiE,eAAAxE,EAAA,cAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA4pC,EAAAL,kQCRA,IAAAM,YAAAA,GAAA7zC,EAAA,4BA2BA,IAAAsuC,EAAAn8B,GAAA8E,OAAAG,gBAAA,IAAAlG,WAAAiB,IACA2hC,EAAA,CAAAC,EAAAnlC,EAAAolC,KACA,IAAAnZ,GAAA,GAAAnf,KAAAu4B,IAAAF,EAAAr3C,OAAA,GAAAgf,KAAAw4B,KAAA,EACAjR,KAAA,IAAApI,EAAAjsB,EAAAmlC,EAAAr3C,QACA,MAAA,KACA,IAAAsgB,EAAA,GACA,OAAA,CACA,IAAA7K,EAAA6hC,EAAA/Q,GACAtuB,EAAAsuB,EACA,KAAAtuB,KAEA,GADAqI,GAAA+2B,EAAA5hC,EAAAwC,GAAAkmB,IAAA,GACA7d,EAAAtgB,SAAAkS,EAAA,OAAAoO,KAuBAxa,EAAA1D,QAAA,CAAAq1C,OAjBA,CAAAvlC,EAAA,MACA,IAAAoO,EAAA,GACA7K,EAAA8E,OAAAG,gBAAA,IAAAlG,WAAAtC,IACA,KAAAA,KAAA,CACA,IAAAwlC,EAAA,GAAAjiC,EAAAvD,GAEAoO,GADAo3B,EAAA,GACAA,EAAAh0C,SAAA,IACAg0C,EAAA,IACAA,EAAA,IAAAh0C,SAAA,IAAA0P,cACAskC,EAAA,GACA,IAEA,IAGA,OAAAp3B,GAEAq3B,eAlBA,CAAAN,EAAAnlC,IAAAklC,EAAAC,EAAAnlC,EAAA0/B,GAkBAwF,aAAAA,EAAAD,YAAAA,EAAAvF,OAAAA,2TCzDA9rC,EAAA1D,QAAAkB,EAAA,wPCHA,IAAA6iC,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGA4C,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAAw1C,mBAAAx1C,EAAAy1C,oBAAA,EACA,MAAAjsC,EAAAtI,EAAA,WACAw0C,EAAA,4CAqEA,SAAAC,EAAAC,EAAAC,GACA,OAAA9R,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAkyC,EAAA,CACAtsB,SAAAosB,EACAG,eAAA,6BACA5sB,OAAA,MACA5H,KAAA,OACAgI,OAAAssB,EACApsB,MAAA,WAEAqsB,EAAA1vB,QAAA,IAAAmH,OAAApH,QACA2vB,EAAA1vB,QAAAxT,IAAA,eAAA,oBACA,IACA,aAAApJ,EAAAwsC,aAAAJ,EAAAE,EA5DA,KA8DA,MAAAt7B,GACA,eAAAA,EAAAzU,MACAkwC,QAAAd,IAAA,sBAGA,OAAAl3C,aAUA,SAAAi4C,EAAAC,GACA,OAAApS,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAwyC,QAAAD,EAAA3tB,OAEA,GAAA4tB,MAAAA,OAAA,EAAAA,EAAAlwC,MACA,MAAA,IAAAnH,MAAA,uBAAAq3C,EAAAlwC,SAEA,OAAAkwC,KAjEAp2C,EAAAy1C,eAVA,SAAAzvC,EAAA6vC,GACA,OAAA9R,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAyyC,EA1BA,SAAArwC,GACA,MAAA,GAAA0vC,YAAA1vC,IAyBAswC,CAAAtwC,GACAqkB,QAAAsrB,EAAAU,EAAAR,GACA,OAAAxrB,EACA6rB,EAAA7rB,GAEApsB,cAuBA+B,EAAAw1C,mBAVA,SAAAxvC,EAAAuwC,EAAAV,GACA,OAAA9R,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAA4yC,EApCA,SAAAxwC,EAAAuwC,GACA,MAAA,GAAAb,WAAA1vC,aAAAuwC,IAmCAE,CAAAzwC,EAAAuwC,GACAlsB,QAAAsrB,EAAAa,EAAAX,GACA,OAAAxrB,EACA6rB,EAAA7rB,GAEApsB,oQCnEA,MAAAy4C,gBAAAA,GAAApxB,WAGA5hB,EAAA1D,QAAA02C,wPCPAhzC,EAAA1D,QAAAkB,EAAA,8UCCAX,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAA22C,WAAA32C,EAAA42C,UAAA52C,EAAA62C,cAAA,EACA,MAAAC,EAAA51C,EAAA,mBACAX,OAAAiE,eAAAxE,EAAA,WAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA4rC,EAAAD,YACA,MAAAE,EAAA71C,EAAA,oBACAX,OAAAiE,eAAAxE,EAAA,YAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA6rC,EAAAH,aACA,MAAAI,EAAA91C,EAAA,qBACAX,OAAAiE,eAAAxE,EAAA,aAAA,CAAAmL,YAAA,EAAAD,IAAA,WAAA,OAAA8rC,EAAAL,4RCPA,IAAA5S,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGA4C,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACA,MAAAk2C,EAAA/1C,EAAA,sBAuEAlB,EAAAuE,QA5CA,UAAA2yC,oBAAAA,EAAAC,yBAAAA,EAAAC,kBAAAA,EAAAC,qBAAAA,EAAAC,kCAAAA,EAAAC,6BAAAA,EAAAC,gCAAAA,EAAAC,yBAAAA,EAAAC,sBAAAA,EAAAC,SAAAA,EAAAC,SAAAA,IACA,OAAA7T,EAAAngC,UAAA,OAAA,GAAA,YACA,IACA,GAAAszC,EAAA,CACA,IAAAW,EACA,IACAA,QAAAT,EAAAC,EAAAM,GAEA,MAAAxyC,GACA0yC,QAAAP,EAAAM,GAEA,MAAAE,8BAAAA,EAAAC,sBAAAA,GAAAF,EAAAG,OAEA,MAAA,CACAC,gBAAAJ,EACAK,0BAHAR,EAAAI,EAAAC,EAAAF,GAIAM,gBAAAlB,EAAAmB,mBAAAC,YAGA,GAAAlB,EAAA,CAEA,MAAA,CACAc,sBAFAV,EAAAC,EAAAG,GAGAO,0BAAA,GACAC,gBAAAlB,EAAAmB,mBAAAE,QAGA,MAAA,IAAAv5C,MAAA,sDAEA,MAAA+K,GACA,IAEA,MAAA,CACAmuC,sBAFAR,EAAAG,GAGAM,0BAAA,GACAC,gBAAAlB,EAAAmB,mBAAAG,cAGA,MAAAryC,GACA,MAAA,IAAAnH,MAAA,6CAAAmH,EAAA0G,yTC5EA,IAAAm3B,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGA4C,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACAf,EAAA03C,sBAAA13C,EAAAy3C,yBAAAz3C,EAAAu3C,6BAAAv3C,EAAAo3C,kBAAAp3C,EAAAw4C,iCAAA,EACA,MAAAlyC,EAAApF,EAAA,mBACAsI,EAAAtI,EAAA,WACAu3C,EAAAd,IAAA,CAAA,cAAAA,IAOA,SAAAa,EAAA71C,GACA,MAAA+1C,EAAAlvC,EAAAmvC,eAAAh2C,GAAArB,SAAA,IAEA,OADAkI,EAAAovC,gBAAAF,GAAAp3C,SAAA,IAGAtB,EAAAw4C,4BAAAA,EAyBAx4C,EAAAo3C,kBAjBA,SAAA/tB,EAAAsuB,GACA,OAAA5T,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAi0C,QAAAruC,EAAA0nC,YAAA7nB,EAAAsuB,EAAA,CAAAvxB,QAAAqyB,EAAAd,IAAA15C,WACA,MAAA,CACA46C,IAAAt4C,OAAAyI,OAAAzI,OAAAyI,OAAA,GAAA6uC,EAAAgB,KAAA,CAAAf,8BAAAU,EAAAX,EAAAgB,IAAAf,+BAAAC,sBAAAS,EAAAX,EAAAgB,IAAAd,yBACAC,OAAAz3C,OAAAyI,OAAAzI,OAAAyI,OAAA,GAAA6uC,EAAAG,QAAA,CAAAF,8BAAAU,EAAAX,EAAAG,OAAAF,+BAAAC,sBAAAS,EAAAX,EAAAG,OAAAD,yBACAe,KAAAv4C,OAAAyI,OAAAzI,OAAAyI,OAAA,GAAA6uC,EAAAiB,MAAA,CAAAhB,8BAAAU,EAAAX,EAAAiB,KAAAhB,+BAAAC,sBAAAS,EAAAX,EAAAiB,KAAAf,yBACAgB,iBAAAP,EAAAX,EAAAkB,kBACAC,uBAAAnB,EAAAmB,uBACAC,aAAApB,EAAAoB,aACAC,uBAAArB,EAAAqB,uBACAC,2BAAAtB,EAAAsB,2BACAC,iBAAAvB,EAAAuB,iBACAC,kBAAAxB,EAAAwB,uBA6BAr5C,EAAAu3C,6BAhBA,SAAAluB,EAAAsuB,GACA,OAAA5T,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAqP,QAAAzJ,EAAA0nC,YAAA7nB,EAAA,CACAG,SAAAH,EACA0sB,eAAA,6BACA5sB,OAAA,MACA5H,KAAA,OACA6E,QAAA7lB,OAAAyI,OAAA,CAAA,eAAA,oBAAA2uC,GAAAc,EAAAd,MAEA,MAAA,CACAkB,IAAA5lC,EAAAqmC,aACAtB,OAAA/kC,EAAAsmC,gBACAT,KAAA7lC,EAAAumC,kBAmBAx5C,EAAAy3C,yBARA,SAAAG,GACA,OAAA7T,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAsG,QAAAV,EAAAiwC,MAAA7B,EAAA,YACA,MAAA,CACA1tC,SAAAV,EAAAovC,gBAAA1uC,GAAA5I,gBAmDAtB,EAAA03C,sBAtCA,SAAA7pC,EAAAD,EAAAqqC,GACA,MAAAY,IAAAA,EAAAb,OAAAA,EAAAc,KAAAA,EAAAC,iBAAAA,GAAAd,EACAyB,EAAAlwC,EAAAmvC,eAAA9qC,GACA8rC,EAAAnwC,EAAAmvC,eAAA/qC,GACAgsC,EAAApwC,EAAAmvC,eAAAI,GACAc,EAAAvzC,EAAAQ,GAAAkH,IAAA0rC,EAAAC,EAAA1rC,IAAA2rC,IACAE,EAAAtwC,EAAAmvC,eAAAE,EAAAf,+BACAiC,EAAAvwC,EAAAmvC,eAAAX,EAAAF,+BACAkC,EAAAxwC,EAAAmvC,eAAAG,EAAAhB,+BACA,IAAAmC,EACAC,EAuBA,OAtBAL,EAAA/rC,GAAAgsC,IACAG,EAAA,KACAC,EAAA,WAEAL,EAAA9a,IAAA+a,IACAD,EAAA/rC,GAAAisC,IACAE,EAAApB,EAAAsB,oBACAD,EAAArB,EAAAuB,qBAEAP,EAAA9a,IAAAgb,IACAF,EAAA/rC,GAAAksC,IACAC,EAAAjC,EAAAmC,oBACAD,EAAAlC,EAAAoC,qBAEAP,EAAAxrC,GAAA2rC,IACAC,EAAAnB,EAAAqB,oBACAD,EAAApB,EAAAsB,sBAGAH,EAAA,EACAC,EAAApB,EAAAsB,qBAEA,CACAH,eAAAA,EACAC,eAAAA,q0BCtIA,IAAAnW,EAAAngC,MAAAA,KAAAmgC,WAAA,SAAAjb,EAAAkb,EAAAC,EAAAnjB,GAEA,OAAA,IAAAmjB,IAAAA,EAAAxqB,WAAA,SAAAY,EAAAC,GACA,SAAA4pB,EAAAnjC,GAAA,IAAAojC,EAAArjB,EAAAnjB,KAAAoD,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA4e,EAAAjnB,GAAA,IAAAojC,EAAArjB,EAAA,MAAA/f,IAAA,MAAAqI,GAAAkR,EAAAlR,IACA,SAAA+6B,EAAAlxB,GAJA,IAAAlS,EAIAkS,EAAA9O,KAAAkW,EAAApH,EAAAlS,QAJAA,EAIAkS,EAAAlS,MAJAA,aAAAkjC,EAAAljC,EAAA,IAAAkjC,GAAA,SAAA5pB,GAAAA,EAAAtZ,OAIAwZ,KAAA2pB,EAAAlc,GACAmc,GAAArjB,EAAAA,EAAA1iB,MAAA0qB,EAAAkb,GAAA,KAAArmC,YAGA0G,EAAAT,MAAAA,KAAAS,iBAAA,SAAAC,GACA,OAAAA,GAAAA,EAAArE,WAAAqE,EAAA,CAAAC,QAAAD,IAEA/D,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IACA,MAAAs5C,EAAAn5C,EAAA,cACAo5C,EAAAp5C,EAAA,gBACAq5C,EAAAl2C,EAAAnD,EAAA,sEACAs5C,EAAAn2C,EAAAnD,EAAA,kFACAu5C,EAAAp2C,EAAAnD,EAAA,8DACAw5C,EAAAr2C,EAAAnD,EAAA,8DACAy5C,EAAAt2C,EAAAnD,EAAA,kEACA05C,EAAAv2C,EAAAnD,EAAA,kEACA25C,EAAAx2C,EAAAnD,EAAA,mEACA45C,EAAAz2C,EAAAnD,EAAA,yDAyCAlB,EAAAuE,QAzBA,SAAAqzC,GACA,OAAA7T,EAAAngC,UAAA,OAAA,GAAA,YACA,MAAAm3C,QAAAD,EAAAv2C,QAAAqzC,GACAoD,EAAA,IAAAT,EAAAh2C,QAAA,CACAqzC,SAAAA,EACAqD,eAAAF,EAAAhuB,SAEAmuB,QAAAF,EAAAG,SACAC,EAAAZ,EAAAj2C,QAAA22C,EAAAG,YACAtC,EAAAsB,EAAAiB,QAAAP,EAAAQ,cAAAjB,EAAAvK,MACAiJ,EAAAyB,EAAAl2C,QAAA22C,EAAAM,aACAvC,EAAAyB,EAAAn2C,QAAA22C,EAAAO,qBACAvC,EAAAyB,EAAAp2C,QAAA22C,EAAAQ,QACAvC,EAAAwB,EAAAp2C,QAAA22C,EAAAM,aACApC,EAAAwB,EAAAr2C,QAAA22C,EAAAS,WACAtC,EAAAwB,EAAAt2C,QAAA22C,EAAAU,WACA,OAAAr7C,OAAAyI,OAAAzI,OAAAyI,OAAA,GAAAoyC,GAAA,CAAArC,iBAAAA,EACAC,uBAAAA,EACAC,aAAAA,EACAC,uBAAAA,EACAC,2BAAAA,EACAC,iBAAAA,EACAC,kBAAAA,iTC3DA,IAAAvyC,EAAA5F,EAAA,SACA26C,EAAA36C,EAAA,gBAEA46C,EAAA,IAAAh1C,EAAA,GACAi1C,EAAA,IAAAj1C,GAAA,GAGAk1C,EAAA,CACAC,QAAA,IACAC,IAAA,IACAC,KAAA,OACAC,KAAA,OACAC,QAAA,OACAC,WAAA,OACAC,KAAA,UACAC,KAAA,UACAC,SAAA,UACAC,UAAA,UACAC,KAAA,aACAC,KAAA,aACAC,QAAA,aACAC,UAAA,aACAC,KAAA,aACAC,MAAA,gBACAC,WAAA,gBACAC,MAAA,gBACAC,OAAA,mBACAC,WAAA,mBACAC,MAAA,mBACAC,MAAA,sBACAC,OAAA,yBACAC,MAAA,yBACAC,OAAA,4BACAC,OAAA,+BACAC,OAAA,mCAUA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAA,EAAAt/B,cAAA,QACAw/B,EAAA/B,EAAA8B,GAEA,GAAA,iBAAAC,EACA,MAAA,IAAAh/C,MAAA,kCAAA8+C,EAAA,8DAAAp1B,KAAAonB,UAAAmM,EAAA,KAAA,IAGA,OAAA,IAAAl1C,EAAAi3C,EAAA,IAGA,SAAAC,EAAAvuC,GACA,GAAA,iBAAAA,EAAA,CACA,IAAAA,EAAAq2B,MAAA,eACA,MAAA,IAAA/mC,MAAA,4DAAA0Q,EAAA,gDAEA,OAAAA,EACA,GAAA,iBAAAA,EACA,OAAAc,OAAAd,GACA,GAAA,iBAAAA,GAAAA,EAAAnO,WAAAmO,EAAA4hB,QAAA5hB,EAAAwuC,oBACA,OAAAxuC,EAAAyuC,YACA3tC,OAAAd,EAAAyuC,eAGAzuC,EAAAnO,SAAA,IAGA,MAAA,IAAAvC,MAAA,4DAAA0Q,EAAA,iBAAAA,EAAA,KAwFA/L,EAAA1D,QAAA,CACAg8C,QAAAA,EACAgC,eAAAA,EACAJ,eAAAA,EACAtC,QAzFA,SAAA6C,EAAAL,EAAAM,GACA,IAAAlC,EAAAL,EAAAsC,GACAjxB,EAAAgvB,EAAApuC,GAAAguC,GACAtvC,EAAAoxC,EAAAE,GACAO,EAAArC,EAAA8B,GAAAlgD,OAAA,GAAA,EACAsrB,EAAAk1B,GAAA,GAEAlxB,IACAgvB,EAAAA,EAAA/vC,IAAA4vC,IAKA,IAFA,IAAAuC,EAAApC,EAAA53C,IAAAkI,GAAAlL,SAAA,IAEAg9C,EAAA1gD,OAAAygD,GACAC,EAAA,IAAAA,EAGAp1B,EAAAtR,MACA0mC,EAAAA,EAAAxY,MAAA,wBAAA,IAGA,IAAAyY,EAAArC,EAAAnf,IAAAvwB,GAAAlL,SAAA,IAEA4nB,EAAAs1B,UACAD,EAAAA,EAAA50B,QAAA,wBAAA,MAGA,IAAA5oB,EAAAw9C,GAAA,KAAAD,EAAA,GAAA,IAAAA,GAMA,OAJApxB,IACAnsB,EAAA,IAAAA,GAGAA,GAyDA09C,MAtDA,SAAAC,EAAAZ,GACA,IAAAR,EAAAU,EAAAU,GACAlyC,EAAAoxC,EAAAE,GACAO,EAAArC,EAAA8B,GAAAlgD,OAAA,GAAA,EAGAsvB,EAAA,MAAAowB,EAAAqB,UAAA,EAAA,GAKA,GAJAzxB,IACAowB,EAAAA,EAAAqB,UAAA,IAGA,MAAArB,EACA,MAAA,IAAAv+C,MAAA,wCAAA2/C,EAAA,0BAIA,IAAAE,EAAAtB,EAAAxzB,MAAA,KACA,GAAA80B,EAAAhhD,OAAA,EACA,MAAA,IAAAmB,MAAA,wCAAA2/C,EAAA,qCAGA,IAAAH,EAAAK,EAAA,GACAN,EAAAM,EAAA,GAQA,GANAL,IACAA,EAAA,KAEAD,IACAA,EAAA,KAEAA,EAAA1gD,OAAAygD,EACA,MAAA,IAAAt/C,MAAA,wCAAA2/C,EAAA,oCAGA,KAAAJ,EAAA1gD,OAAAygD,GACAC,GAAA,IAGAC,EAAA,IAAAz3C,EAAAy3C,GACAD,EAAA,IAAAx3C,EAAAw3C,GACA,IAAApC,EAAAqC,EAAApyC,IAAAK,GAAAJ,IAAAkyC,GAMA,OAJApxB,IACAgvB,EAAAA,EAAA/vC,IAAA4vC,IAGA,IAAAj1C,EAAAo1C,EAAA56C,SAAA,IAAA,wUC5JAf,OAAAiE,eAAAxE,EAAA,aAAA,CAAAe,OAAA,IAEA,IAAA89C,EAAA39C,EAAA,eACA6X,EAAA7X,EAAA,sBACA49C,EAAA59C,EAAA,qBACA69C,EAAA79C,EAAA,qBACAmS,EAAAnS,EAAA,cAEA,MAAA89C,EACAp2C,YAAArG,EAAA8jC,EAAA4Y,EAAA5rC,GACAzP,KAAAyiC,KAAAA,EACAziC,KAAArB,QAAAA,EACAqB,KAAAq7C,UAAAA,EACAr7C,KAAAyP,MAAAA,EACAzP,KAAAukB,WAAA9U,EAAA8U,WACAvkB,KAAA6e,WAAApP,EAAAoP,WACA7e,KAAAs7C,MAAAt7C,KACAA,KAAAu7C,WAAA,IAAA7lC,IACA/Y,OAAA6+C,iBAAAx7C,KAAA,CACAukB,WAAAk3B,EACA58B,WAAA48B,EACAhZ,KAAAiZ,EACA/8C,QAAA+8C,EACAL,UAAAK,EACAjsC,MAAAisC,EACAH,WAAAE,EACAH,MAAAG,IAGAE,OACA,GACA,IADA37C,KAAArB,QAEA,OAAAqB,KAEA,CACA,MAAAyiC,KAAAA,EAAA4Y,UAAAA,GAAAr7C,KACA,GAAAyiC,IAAAmZ,EACA,MAAA,IAAAzgD,MAAA,4CAEA,GAAAkgD,EAAA5Y,OAAAoZ,EACA,MAAA,IAAA1gD,MAAA,sDAEA,OAAAigD,EAAAU,SAAAT,IAIAU,OACA,OAAA/7C,KAAArB,SACA,KAAA,EAAA,CACA,MAAA8jC,KAAAA,EAAAttB,OAAA6mC,GAAAh8C,KAAAq7C,UACAA,EAAAlmC,EAAAjQ,OAAAu9B,EAAAuZ,GACA,OAAAZ,EAAAa,SAAAj8C,KAAAyiC,KAAA4Y,GAEA,KAAA,EACA,OAAAr7C,KAEA,QACA,MAAA7E,MAAA,+BAAA6E,KAAArB,sDAIAgJ,OAAA4Y,GACA,OAAAA,GAAAvgB,KAAAyiC,OAAAliB,EAAAkiB,MAAAziC,KAAArB,UAAA4hB,EAAA5hB,SAAAwW,EAAAxN,OAAA3H,KAAAq7C,UAAA96B,EAAA86B,WAEA39C,SAAAkL,GACA,MAAA6G,MAAAA,EAAA9Q,QAAAA,EAAA48C,WAAAA,GAAAv7C,KACA,OACA,IADArB,EAEAu9C,EAAAzsC,EAAA8rC,EAAA3yC,GAAAsyC,EAAAiB,UAAAC,SAEAC,EAAA5sC,EAAA8rC,EAAA3yC,GAAAuyC,EAAAA,OAAAiB,SAGAzyC,SACA,MAAA,CACA84B,KAAAziC,KAAAyiC,KACA9jC,QAAAqB,KAAArB,QACAuK,KAAAlJ,KAAAq7C,UAAA5rC,OAGA6sC,IAAAn8C,OAAAm8C,eACA,MAAA,MAEA,CAAAn8C,OAAAsrB,IAAA,iCACA,MAAA,OAAAzrB,KAAAtC,WAAA,IAEA6+C,aAAAp/C,GAEA,OADAq/C,EAAA,QAAAC,MACAt/C,IAAAA,EAAAu/C,IAAAv/C,EAAAm+C,QAAAn+C,GAEAw/C,0BACA,MAAA,IAAAxhD,MAAA,+BAEAyhD,YACA,MAAA,IAAAzhD,MAAA,uEAEAqQ,aACA,MAAA,IAAArQ,MAAA,qEAEA0hD,oBACA,MAAA,IAAA1hD,MAAA,0CAEA2hD,aACA,MAAA,IAAA3hD,MAAA,mCAEAohD,aAAAp/C,GACA,GAAAA,aAAAi+C,EACA,OAAAj+C,EACA,GAAA,MAAAA,GAAAA,EAAAm+C,QAAAn+C,EAAA,CACA,MAAAwB,QAAAA,EAAA8jC,KAAAA,EAAA4Y,UAAAA,EAAA5rC,MAAAA,GAAAtS,EACA,OAAA,IAAAi+C,EAAAz8C,EAAA8jC,EAAA4Y,EAAA5rC,GAAAstC,EAAAp+C,EAAA8jC,EAAA4Y,EAAA5rC,QACA,GAAA,MAAAtS,IAAA,IAAAA,EAAAu/C,GAAA,CACA,MAAA/9C,QAAAA,EAAA08C,UAAAA,EAAA5Y,KAAAA,GAAAtlC,EACA6+C,EAAA7mC,EAAAtN,OAAAwzC,GACA,OAAAD,EAAAl2C,OAAAvG,EAAA8jC,EAAAuZ,GAEA,OAAA,KAGAO,cAAA59C,EAAA8jC,EAAAttB,GACA,GAAA,iBAAAstB,EACA,MAAA,IAAAtnC,MAAA,yCAEA,OAAAwD,GACA,KAAA,EACA,GAAA8jC,IAAAmZ,EACA,MAAA,IAAAzgD,MAAA,wCAAAygD,qBAEA,OAAA,IAAAR,EAAAz8C,EAAA8jC,EAAAttB,EAAAA,EAAA1F,OAGA,KAAA,EAAA,CACA,MAAAA,EAAAstC,EAAAp+C,EAAA8jC,EAAAttB,EAAA1F,OACA,OAAA,IAAA2rC,EAAAz8C,EAAA8jC,EAAAttB,EAAA1F,GAEA,QACA,MAAA,IAAAtU,MAAA,oBAIAohD,gBAAApnC,GACA,OAAAimC,EAAAl2C,OAAA,EAAA02C,EAAAzmC,GAEAonC,gBAAA9Z,EAAAttB,GACA,OAAAimC,EAAAl2C,OAAA,EAAAu9B,EAAAttB,GAEAonC,cAAA9sC,GACA,MAAAutC,EAAAnd,GAAAub,EAAA6B,YAAAxtC,GACA,GAAAowB,EAAA7lC,OACA,MAAA,IAAAmB,MAAA,oBAEA,OAAA6hD,EAEAT,mBAAAW,GACA,MAAAC,EAAA/B,EAAAgC,aAAAF,GACAG,EAAAF,EAAAjxC,KAAAixC,EAAAG,cACAC,EAAA9tC,EAAA+tC,OAAAN,EAAAO,SAAAJ,EAAAA,EAAAF,EAAAG,gBACA,GAAAC,EAAA1+B,aAAAs+B,EAAAG,cACA,MAAA,IAAAniD,MAAA,oBAEA,MAAAuiD,EAAAH,EAAAE,SAAAN,EAAAG,cAAAH,EAAAQ,YACA3B,EAAA,IAAA7mC,EAAAyoC,OAAAT,EAAAU,cAAAV,EAAAQ,WAAAD,EAAAH,GAEA,MAAA,CADA,IAAAJ,EAAAx+C,QAAAy8C,EAAAU,SAAAE,GAAAZ,EAAAa,SAAAkB,EAAAP,MAAAZ,GAGAkB,EAAAO,SAAAN,EAAAjxC,OAGAqwC,oBAAAuB,GACA,IAAA3kC,EAAA,EACA,MAAApf,EAAA,KACA,MAAAE,EAAAD,GAAAihD,EAAApzC,OAAAi2C,EAAAL,SAAAtkC,IAEA,OADAA,GAAAnf,EACAC,GAEA,IAAA0E,EAAA5E,IACA6iD,EAAAhB,EAOA,GANA,KAAAj9C,GACAA,EAAA,EACAwa,EAAA,GACA,IAAAxa,IACAi+C,EAAA7iD,KAEA,IAAA4E,GAAA,IAAAA,EACA,MAAA,IAAAiW,WAAA,uBAAAjW,KAEA,MAAA0+C,EAAAlkC,EACA0kC,EAAA9jD,IACA4jD,EAAA5jD,IACAmS,EAAAiN,EAAAwkC,EAEA,MAAA,CACAh/C,QAAAA,EACAi+C,MAAAA,EACAiB,cAAAA,EACAF,WAAAA,EACAL,cANApxC,EAAAmxC,EAOAnxC,KAAAA,GAGAqwC,aAAAvlC,EAAApO,GACA,MAAAk0C,EAAArtC,GAAAsuC,EAAA/mC,EAAApO,GACAo0C,EAAA5B,EAAAvzC,OAAA4H,GAEA,OADAutC,EAAAzB,WAAAvsC,IAAA8tC,EAAA9lC,GACAgmC,GAGA,MAAAe,EAAA,CAAA/mC,EAAApO,KACA,OAAAoO,EAAA,IACA,IAAA,IAAA,CACA,MAAAgnC,EAAAp1C,GAAAsyC,EAAAiB,UACA,MAAA,CACAjB,EAAAiB,UAAAW,OACAkB,EAAAn2C,OAAA,GAAAqzC,EAAAiB,UAAAW,SAAA9lC,MAGA,KAAAkkC,EAAAiB,UAAAW,OAAA,CACA,MAAAkB,EAAAp1C,GAAAsyC,EAAAiB,UACA,MAAA,CACAjB,EAAAiB,UAAAW,OACAkB,EAAAn2C,OAAAmP,IAGA,KAAAmkC,EAAAA,OAAA2B,OAAA,CACA,MAAAkB,EAAAp1C,GAAAuyC,EAAAA,OACA,MAAA,CACAA,EAAAA,OAAA2B,OACAkB,EAAAn2C,OAAAmP,IAGA,QACA,GAAA,MAAApO,EACA,MAAAzN,MAAA,mFAEA,MAAA,CACA6b,EAAA,GACApO,EAAAf,OAAAmP,MAKAklC,EAAA,CAAAzsC,EAAAoW,EAAAjd,KACA,MAAAk0C,OAAAA,GAAAl0C,EACA,GAAAk0C,IAAA5B,EAAAiB,UAAAW,OACA,MAAA3hD,MAAA,8BAAAyN,EAAAzG,iBAEA,MAAA66C,EAAAn3B,EAAAve,IAAAw1C,GACA,GAAA,MAAAE,EAAA,CACA,MAAAA,EAAAp0C,EAAAC,OAAA4G,GAAA/H,MAAA,GAEA,OADAme,EAAA7W,IAAA8tC,EAAAE,GACAA,EAEA,OAAAA,GAGAX,EAAA,CAAA5sC,EAAAoW,EAAAjd,KACA,MAAAk0C,OAAAA,GAAAl0C,EACAo0C,EAAAn3B,EAAAve,IAAAw1C,GACA,GAAA,MAAAE,EAAA,CACA,MAAAA,EAAAp0C,EAAAC,OAAA4G,GAEA,OADAoW,EAAA7W,IAAA8tC,EAAAE,GACAA,EAEA,OAAAA,GAGApB,EAAA,IACAC,EAAA,GACAkB,EAAA,CAAAp+C,EAAA8jC,EAAA4Y,KACA,MAAA4C,EAAAhD,EAAAiD,eAAAv/C,GACAw/C,EAAAF,EAAAhD,EAAAiD,eAAAzb,GACAhzB,EAAA,IAAAjB,WAAA2vC,EAAA9C,EAAAx8B,YAIA,OAHAo8B,EAAAmD,SAAAz/C,EAAA8Q,EAAA,GACAwrC,EAAAmD,SAAA3b,EAAAhzB,EAAAwuC,GACAxuC,EAAAT,IAAAqsC,EAAA8C,GACA1uC,GAEAitC,EAAAv8C,OAAAsrB,IAAA,oBACAiwB,EAAA,CACA7U,UAAA,EACAr/B,cAAA,EACAD,YAAA,GAEAk0C,EAAA,CACA5U,UAAA,EACAt/B,YAAA,EACAC,cAAA,GAGAg1C,EAAA,CAAA6B,EAAAr1C,KACA,IAAAq1C,EAAAl8B,KAFA,aAKA,MAAA,IAAAhnB,MAAA6N,GAFAqpC,QAAAiM,KAAAt1C,IAKAyzC,EAAA,6SAgBArgD,EAAAg/C,IAAAA,0NC1TAt7C,EAAA1D,QAAA,CACAuC,QAAA,EACA4/C,UAAA,EACAC,UAAA,CACA,cACA,eACA,oBACA,mBACA,oBACA,mBACA,aACA,cACA,sBACA,eACA,qBACA,eACA,sBACA,gBACA,0BAGAC,UAAA,CACA,cACA,aACA,cACA,WACA,eACA,YACA,gBACA,eACA,cACA,eACA,YACA,cACA,oBACA,gBACA,eACA,cACA,aACA,aACA,aACA,qBACA,mBACA,kBACA,gBACA,cACA,eACA,iBACA,cACA,cACA,gBACA,eACA,aACA,cACA,cACA,iBACA,kBACA,cACA,gBACA,cACA,gBACA,eACA,kBACA,eACA,gBACA,gBACA,yBACA,cACA,YACA,iBACA,eACA,cACA,eACA,eACA,WACA,eACA,YACA,cACA,aACA,gBACA,mBACA,aACA,gBACA,aACA,aACA,mBACA,cACA,YACA,mBACA,kBACA,eACA,cACA,eACA,iBACA,cACA,aACA,aACA,gBACA,oBACA,kBACA,iBACA,eACA,cACA,mBACA,eACA,YACA,gBACA,gBACA,gBACA,cACA,eACA,gBACA,cACA,eACA,mBACA,YACA,iBACA,sBACA,WACA,YACA,SACA,WACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,WACA,WACA,cACA,WACA,YACA,SACA,YACA,cACA,eACA,YACA,SACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,gBACA,YACA,SACA,WACA,YACA,UACA,UACA,cACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,SACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,aACA,UACA,gBACA,WACA,WACA,UACA,WACA,aACA,WACA,UACA,YACA,WACA,iBACA,UACA,YACA,YACA,WACA,cACA,YACA,YACA,YACA,iBACA,YACA,WACA,WACA,YACA,WACA,UACA,WACA,WACA,aACA,oBACA,YACA,aACA,YACA,cACA,aACA,UACA,UACA,WACA,WACA,gBACA,aACA,cACA,SACA,UACA,sBACA,UACA,QACA,eACA,sBACA,YACA,YACA,aACA,iBACA,eACA,eACA,cACA,YACA,mBACA,gBACA,sBACA,gBACA,gBACA,YACA,gBACA,eACA,gBACA,aACA,cACA,aACA,eACA,UACA,eACA,iBACA,cACA,cACA,gBACA,WACA,aACA,eACA,gBACA,aACA,aACA,gBACA,aACA,kBACA,cACA,eACA,WACA,oBACA,gBACA,gBACA,YACA,eACA,WACA,aACA,eACA,mBACA,gBACA,cACA,cACA,gBACA,iBACA,eACA,aACA,YACA,cACA,eACA,eACA,cACA,eACA,YACA,YACA,iBACA,cACA,eACA,YACA,iBACA,cACA,cACA,cACA,gBACA,iBACA,cACA,eACA,YACA,eACA,eACA,cACA,oBACA,eACA,eACA,iBACA,kBACA,cACA,kBACA,YACA,YACA,eACA,cACA,YACA,cACA,iBACA,iBACA,eACA,aACA,cACA,cACA,kBACA,gBACA,kBACA,cACA,kBACA,kBACA,iBACA,eACA,eACA,kBACA,aACA,eACA,gBACA,YACA,aACA,kBACA,qBACA,eACA,cACA,cACA,YACA,cACA,eACA,yBACA,mBACA,YACA,UACA,eACA,gBACA,aACA,YACA,aACA,YACA,gBACA,iBACA,aACA,aACA,WACA,aACA,cACA,iBACA,aACA,kBACA,mBACA,cACA,iBACA,gBACA,eACA,eACA,YACA,iBACA,iBACA,aACA,YACA,YACA,cACA,YACA,eACA,cACA,iBACA,cACA,qBACA,eACA,cACA,WACA,aACA,aACA,kBACA,cACA,cACA,cACA,aACA,cACA,kBACA,eACA,eACA,YACA,qBACA,mBACA,cACA,eACA,eACA,gBACA,gBACA,cACA,gBACA,gBACA,aACA,cACA,kBACA,oBACA,YACA,YACA,eACA,iBACA,eACA,eACA,eACA,YACA,YACA,gBACA,iBACA,eACA,gBACA,YACA,YACA,gBACA,gBACA,eACA,YACA,aACA,aACA,gBACA,aACA,aACA,cACA,YACA,YACA,eACA,cACA,qBACA,cACA,gBACA,eACA,iBACA,cACA,WACA,gCACA,aACA,eACA,cACA,eACA,eACA,eACA,WACA,eACA,cACA,eACA,aACA,eACA,mBACA,YACA,eACA,YACA,aACA,kBACA,aACA,gBACA,cACA,WACA,yBACA,cACA,aACA,aACA,cACA,eACA,gBACA,qBACA,YACA,aACA,WACA,eACA,gBACA,mBACA,aACA,iBACA,cACA,eACA,aACA,YACA,YACA,gBACA,gBACA,uCACA,gBACA,eACA,aACA,iBACA,qBACA,eACA,wCACA,eACA,aACA,cACA,eACA,cACA,sCACA,YACA,cACA,YACA,iBACA,YACA,aACA,gBACA,aACA,aACA,cACA,cACA,WACA,cACA,UACA,YACA,YACA,aACA,aACA,cACA,sBACA,qBACA,cACA,YACA,gBACA,eACA,eACA,gBACA,eACA,gBACA,YACA,cACA,cACA,gBACA,cACA,aACA,YACA,cACA,iBACA,cACA,eACA,aACA,aACA,uBACA,gBACA,cACA,eACA,eACA,cACA,cACA,cACA,eACA,iBACA,cACA,YACA,mBACA,eACA,gBACA,cACA,eACA,eACA,cACA,iBACA,qBACA,cACA,cACA,mBACA,eACA,eACA,cACA,oBACA,mBACA,oBACA,eACA,eACA,aACA,aACA,qBACA,eACA,qBACA,eACA,eACA,cACA,YACA,eACA,cACA,gBACA,iBACA,aACA,cACA,eACA,cACA,cACA,gBACA,eACA,YACA,oBACA,aACA,cACA,aACA,cACA,gBACA,gBACA,YACA,cACA,cACA,oBACA,iBACA,cACA,qBACA,gBACA,YACA,iBACA,eACA,YACA,gBACA,cACA,YACA,gBACA,eACA,qBACA,cACA,eACA,eACA,oBACA,mBACA,oBACA,oBACA,wBACA,qBACA,cACA,cACA,eACA,eACA,gBACA,mBACA,eACA,cACA,cACA,eACA,eACA,eACA,aACA,eACA,eACA,aACA,cACA,eACA,cACA,aACA,cACA,cACA,eACA,aACA,cACA,aACA,eACA,cACA,eACA,cACA,cACA,cACA,oBACA,eACA,iBACA,iBACA,mBACA,oBACA,eACA,cACA,cACA,eACA,cACA,eACA,iBACA,iBACA,YACA,gBACA,aACA,cACA,mBACA,eACA,gBACA,iBACA,mBACA,cACA,cACA,mBACA,gBACA,eACA,iBACA,eACA,eACA,eACA,eACA,cACA,gBACA,eACA,cACA,aACA,iBACA,mBACA,WACA,iBACA,cACA,eACA,cACA,eACA,mBACA,eACA,YACA,aACA,cACA,mBACA,eACA,WACA,YACA,UACA,YACA,cACA,cACA,gBACA,eACA,cACA,cACA,aACA,YACA,mBACA,gBACA,cACA,gBACA,cACA,eAEAC,UAAA,CACA,wBACA,yBACA,6BACA,mBACA,6BACA,kBACA,uBACA,uBACA,gBACA,kBACA,iBACA,kBACA,kBACA,eACA,sCACA,2BACA,kBACA,cACA,sBACA,kBACA,uCACA,2BACA,WACA,sBACA,2BACA,0BACA,oBACA,wBACA,sBACA,sBACA,qBACA,uBACA,0BACA,mBACA,sBACA,oBACA,6BACA,2BACA,sBACA,qBACA,kBACA,iBACA,qBACA,eACA,aACA,qBACA,kBACA,cACA,iBACA,qBACA,wBACA,mBACA,cACA,oBACA,gBACA,eACA,sCACA,uCACA,mCACA,yBACA,sBACA,wBACA,kBACA,uCACA,wBACA,4BACA,2BACA,2BACA,2BACA,2BACA,eACA,mBACA,gBACA,oBACA,iBACA,iBACA,gBACA,iBACA,sBACA,YACA,mBACA,eACA,kBACA,mCACA,YACA,iBACA,yBACA,sBACA,sBACA,iBACA,sDACA,2BACA,2BACA,4BACA,wBACA,eACA,eACA,wBACA,cACA,0BACA,mBACA,yBACA,wBACA,mBACA,gBACA,mBACA,yBACA,oBACA,oCACA,iBACA,wBACA,qBACA,wBACA,wBACA,iBACA,cACA,sBACA,yBACA,mBACA,oBACA,uBACA,mCACA,mCACA,iCACA,qCACA,uBACA,uBACA,qBACA,yBACA,qBACA,oBACA,gBACA,eACA,kBACA,oBACA,oBACA,gBACA,kBACA,iBACA,kBACA,eACA,cACA,cACA,iBACA,iBACA,qBACA,2BACA,2BACA,2BACA,2BACA,iBACA,0BACA,iCACA,eACA,gBACA,mBACA,6BACA,mBACA,qBACA,cACA,qBACA,kBACA,eACA,oBACA,sBACA,iBACA,wBACA,+BACA,aACA,yBACA,mBACA,+BACA,gBACA,oBACA,mBACA,oBACA,aACA,gBACA,uBACA,uBACA,gCACA,wBACA,yBACA,wBACA,uBACA,8BACA,sCACA,kBACA,0BACA,mBACA,yBACA,cACA,eACA,cACA,0BACA,uBACA,YACA,oBACA,8BACA,yBACA,uBACA,wBACA,yBACA,kBACA,cACA,4BACA,sBACA,gDACA,4BACA,aACA,cACA,uBACA,uBACA,qBACA,4BACA,kBACA,6BACA,iCACA,yBACA,uBACA,gDACA,YACA,kBACA,oBACA,gCACA,mCACA,uBACA,6BACA,kBACA,yBACA,uBACA,gBACA,iBACA,iBACA,uBACA,6BACA,4CACA,6BACA,mBACA,4CACA,sBACA,4BACA,4BACA,cACA,oBACA,gBACA,iBACA,aACA,cACA,oBACA,oBACA,eACA,2BACA,mBACA,eACA,mBACA,kBACA,gBACA,eACA,kBACA,cACA,oBACA,2BACA,uBACA,wBACA,mBACA,kBACA,kBACA,0BACA,iBACA,sBACA,iBACA,oBACA,eACA,oBACA,kBACA,oBACA,sBACA,qBACA,eACA,6BACA,eACA,gBACA,cACA,4BACA,0BACA,qBACA,gBACA,gBACA,gBACA,eACA,cACA,gBACA,cACA,eACA,kBACA,qBACA,qBACA,mBACA,kBACA,cACA,mBACA,8BACA,iBACA,oBACA,mBACA,cACA,6CACA,gBACA,cACA,wBACA,sBACA,wBACA,uBACA,2BACA,uBACA,0BACA,cACA,iBACA,sBACA,oBACA,eACA,cACA,gBACA,aACA,eACA,eACA,eACA,iBACA,eACA,gBACA,gBACA,iBACA,yBACA,aACA,uBACA,iBACA,uBACA,cACA,wBACA,qBACA,YACA,kCACA,qBACA,kBACA,mBACA,cACA,iBACA,mBACA,gBACA,qBACA,qBACA,cACA,eACA,YACA,eACA,wBACA,YACA,cACA,iBACA,sBACA,yBACA,kBACA,aACA,qBACA,eACA,oBACA,cACA,aACA,qCACA,aACA,YACA,kCACA,sBACA,kBACA,mBACA,kBACA,cACA,oBACA,gBACA,0BACA,iBACA,aACA,8BACA,wBACA,mBACA,mBACA,4BACA,aACA,aACA,8BACA,cACA,qBACA,mBACA,eACA,cACA,uBACA,uBACA,wBACA,yBACA,aACA,sBACA,mBACA,uBACA,cACA,yBACA,aACA,gBACA,cACA,qBACA,cACA,aACA,cACA,8BACA,+BACA,2BACA,kBACA,+BACA,8BACA,WACA,iBACA,qBACA,iBACA,0BACA,0BACA,6BACA,6BACA,iBACA,oBACA,mBACA,mBACA,aACA,eACA,uBACA,iBACA,YACA,eACA,aACA,aACA,qBACA,YACA,sBACA,kBACA,4BACA,gCACA,gBACA,4BACA,kBACA,WACA,uBACA,cACA,oBACA,iBACA,gBACA,mBACA,0CACA,eACA,kBACA,cACA,cACA,gBACA,wCACA,eACA,gCACA,uBACA,gBACA,aACA,aACA,qBACA,iBACA,kBACA,sBACA,sBACA,cACA,qBACA,kBACA,uBACA,YACA,UACA,0BACA,2BACA,iBACA,cACA,oBACA,0CACA,wBACA,kBACA,iCACA,oBACA,eACA,wBACA,uBACA,iBACA,+BACA,iBACA,wBACA,2BACA,eACA,gCACA,gBACA,iBACA,aACA,mBACA,uBACA,gBACA,gBACA,mBACA,cACA,uBACA,qBACA,iBACA,+BACA,wBACA,iBACA,gBACA,eACA,sBACA,iBACA,iBACA,cACA,oBACA,qBACA,cACA,oBACA,4BACA,mCACA,gBACA,gBACA,mBACA,kBACA,oBACA,YACA,aACA,aACA,iBACA,aACA,4BACA,+BACA,aACA,iBACA,iBACA,mBACA,gBACA,gBACA,uBACA,uBACA,kBACA,mBACA,oBACA,uBACA,gBACA,sBACA,wBACA,sBACA,eACA,qBACA,2BACA,sBACA,oBACA,oBACA,YACA,uBACA,mBACA,eACA,eACA,YACA,mBACA,oBACA,2BACA,iBACA,sBACA,8BACA,iCACA,kBACA,yBACA,6BACA,6BACA,yBACA,wBACA,0BACA,qBACA,uBACA,8BACA,yBACA,8BACA,8BACA,gCACA,2BACA,uBACA,4BACA,0BACA,mBACA,2BACA,0BACA,sBACA,wBACA,oBACA,gBACA,gBACA,oBACA,qBACA,uBACA,kBACA,sBACA,oBACA,mBACA,kBACA,8BACA,oBACA,UACA,mBACA,gCACA,aACA,mBACA,kBACA,gCACA,yBACA,iBACA,+BACA,oBACA,kBACA,aACA,aACA,aACA,cACA,aACA,aACA,cACA,aACA,cACA,mBACA,kBACA,YACA,YACA,mBACA,WACA,kBACA,4BACA,cACA,2BACA,cACA,kBACA,sBACA,oBACA,2BACA,sBACA,mBACA,2CACA,oCACA,uBACA,gDACA,4BACA,uBACA,eACA,qBACA,aACA,qBACA,wBACA,kBACA,gBACA,eACA,mBACA,qBACA,eACA,kBACA,qBACA,sBACA,oBACA,8BACA,YACA,qBACA,qBACA,eACA,cACA,iBACA,iBACA,+BACA,oBACA,mBACA,4BACA,8BACA,eACA,oBACA,oBACA,oBACA,0BACA,4BACA,yCACA,uCACA,kBACA,0BACA,oBACA,4BACA,eACA,uCACA,2BACA,qBACA,qBACA,cACA,eACA,sBACA,iBACA,cACA,aACA,iBACA,0BACA,cACA,eACA,8BACA,8BACA,sBACA,8BACA,yBACA,cACA,iBACA,mBACA,kCACA,8BACA,8BACA,2BACA,kBACA,iBACA,iBACA,kBACA,mBACA,kCACA,mCACA,0BACA,sCACA,eACA,uBACA,oBACA,uBACA,uBACA,iCACA,gBACA,sBACA,gBACA,+BACA,gBACA,gBACA,uBACA,kBACA,yBACA,8BACA,0BACA,kBACA,sBACA,mBACA,iBACA,mBACA,iBACA,gBACA,iBACA,2BACA,yCACA,kCACA,4BACA,wCACA,0BACA,4BACA,qBACA,kBACA,mBACA,iCACA,+BACA,iBACA,iBACA,+BACA,oBACA,wBACA,kBACA,wBACA,cACA,iBACA,aACA,iCACA,qBACA,iBACA,mBACA,YACA,qBACA,eACA,YACA,aACA,eACA,cACA,iCACA,2BACA,2BACA,8BACA,eACA,gBACA,kBACA,mBACA,oBACA,gBACA,oBACA,0BACA,gBACA,YACA,mBACA,wCACA,qBACA,gBACA,6BACA,iCACA,gCACA,8BACA,qBACA,wBACA,qBACA,qBACA,qBACA,6BACA,yCACA,iBACA,wBACA,6BACA,sBACA,qBACA,wBACA,mBACA,cACA,0BACA,iBACA,mBACA,kBACA,qBACA,sBACA,qBACA,gBACA,gBACA,iBACA,wBACA,UACA,UACA,kBACA,wBACA,UACA,0BACA,0BACA,kBACA,qBACA,mBACA,qBACA,oBACA,gBACA,mBACA,yBACA,yBACA,0BACA,UACA,kBACA,oBACA,kBACA,mBACA,iBACA,eACA,cACA,mBACA,uBACA,eACA,cACA,eACA,cACA,gBACA,cACA,cACA,gBACA,iBACA,mBACA,oBACA,iBACA,YACA,qBACA,YACA,kBACA,yBACA,eACA,gBACA,qBACA,eACA,WACA,qBACA,qBACA,kBACA,kBACA,YACA,cACA,eACA,qBACA,cACA,sBACA,eACA,eACA,cACA,cACA,eACA,cACA,kBACA,sBACA,gBACA,qBACA,6BACA,aACA,uBACA,kBACA,gBACA,gBACA,eACA,kBACA,kBACA,mBACA,kBACA,oBACA,kBACA,4BACA,yCACA,oBACA,mBACA,oBACA,wBACA,kBACA,qBACA,0BACA,uBACA,qBACA,eACA,kBACA,wBACA,cACA,iBACA,oBACA,gBACA,iBACA,sBACA,oBACA,oBACA,mBACA,qBACA,eACA,qBACA,mBACA,+BACA,kBACA,qBACA,mBACA,cACA,kBACA,oBACA,eACA,sBACA,eACA,cACA,yBACA,sBACA,qBACA,8BACA,0CACA,cACA,kBACA,uBACA,eACA,iBACA,qBACA,kBACA,8BACA,oBACA,gBACA,kBACA,iCACA,oBACA,aACA,uBACA,8BACA,oBACA,kBACA,cACA,kBACA,6BACA,eACA,cACA,qBACA,oBACA,+BACA,gBACA,wBACA,oBACA,iBACA,wBACA,cACA,yCACA,kBACA,oBACA,iBACA,gCACA,4CACA,uBACA,eACA,wBACA,oBACA,aACA,gBACA,aACA,gBACA,iBACA,gBACA,cACA,iBACA,mBACA,gBACA,eACA,oBACA,4BACA,iBACA,qBACA,iBACA,sBACA,aACA,iBACA,wCACA,sCACA,uCACA,cACA,iBACA,kBACA,oBACA,gBACA,kBACA,iBACA,+BACA,8BACA,kBACA,qBACA,0CACA,aACA,gBACA,iCACA,iBACA,kBACA,0BACA,kBACA,cACA,mBACA,cACA,cACA,aACA,gCACA,wBACA,iBACA,sBACA,YACA,mBACA,wBACA,cACA,iBACA,iBACA,iBACA,oBACA,mBACA,eACA,eACA,eACA,eACA,iBACA,cACA,kBACA,YACA,qBACA,iBACA,aACA,cACA,wBACA,kBACA,sBACA,aACA,oBACA,oBACA,qBACA,gBACA,mBACA,qBACA,qBACA,oBACA,iBACA,gBACA,cACA,iBACA,eACA,oBACA,oBACA,qBACA,oBACA,mBACA,wBACA,eACA,mBACA,oBACA,kBACA,kBACA,mBACA,cACA,sBACA,sBACA,6BACA,wBACA,kCACA,cACA,yBACA,gBACA,wBACA,mBACA,0BACA,qBACA,cACA,kBACA,WACA,gBACA,cACA,gBACA,iBACA,gBACA,gBACA,eACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,uBACA,uBACA,oBACA,qBACA,aACA,aACA,aACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,iBACA,eACA,qBACA,cACA,sBACA,wBACA,2CACA,8BACA,iBACA,SACA,uBACA,gBACA,YACA,aACA,qCACA,oBACA,sBACA,gBACA,6BACA,mBACA,gBACA,eACA,wCACA,4BACA,eACA,gBACA,yBACA,iBACA,uBACA,wBACA,aACA,sCACA,aACA,aACA,sBACA,oBACA,4BACA,aACA,+BACA,iBACA,iBACA,cACA,2CACA,wBACA,eACA,eACA,qBACA,gBACA,kBACA,yBACA,eACA,mBACA,kBACA,iBACA,gBACA,gBACA,iBACA,gBACA,gBACA,aACA,mBACA,qBACA,mBACA,aACA,mBACA,kBACA,uBACA,mBACA,oBACA,kBACA,mBACA,aACA,kBACA,iBACA,+BACA,kBACA,eACA,kBACA,gBACA,iBACA,qCACA,cACA,eACA,cACA,aACA,gBACA,YACA,aACA,kBACA,+BACA,iBACA,eACA,aACA,mBACA,gBACA,sBACA,uBACA,uBACA,mBACA,aACA,aACA,aACA,oBACA,iBACA,eACA,mBACA,oBACA,cACA,oBACA,iBACA,2BACA,YACA,iBACA,qBACA,4BACA,wBACA,aACA,kBACA,aACA,eACA,eACA,qBACA,eACA,mBACA,yBACA,qBACA,qBACA,UACA,mBACA,8BACA,4BACA,YACA,YACA,YACA,YACA,YACA,aACA,YACA,YACA,YACA,YACA,YACA,gBACA,gBACA,iCACA,iBACA,kBACA,sBACA,eACA,cACA,iBACA,iBACA,cACA,mBACA,iBACA,YACA,YACA,YACA,iBACA,sBACA,aACA,oBACA,iBACA,gBACA,gBACA,gBACA,yBACA,oBACA,qBACA,wBACA,iBACA,gBACA,qBACA,2BACA,4BACA,2BACA,+CACA,4BACA,kBACA,oBACA,2BACA,YACA,mBACA,4BACA,mCACA,iBACA,YACA,sBACA,kCACA,eACA,gBACA,0BACA,sBACA,yBACA,qBACA,2BACA,uBACA,gBACA,qBACA,YACA,sBACA,sBACA,sBACA,iBACA,sBACA,mBACA,aACA,iBACA,mBACA,oBACA,gEACA,gBACA,eACA,gBACA,uBACA,2BACA,sBACA,0BACA,iBACA,kBACA,aACA,aACA,iBACA,mBACA,eACA,gBACA,kBACA,+BACA,gBACA,yCACA,gBACA,gCACA,4BACA,gBACA,oBACA,iBACA,+BACA,kBACA,iBACA,cACA,iBACA,aACA,YACA,gBACA,kBACA,cACA,kBACA,sBACA,sBACA,0BACA,eACA,kBACA,cACA,WACA,aACA,kBACA,aACA,aACA,gBACA,kBACA,cACA,iBACA,mBACA,qBACA,mBACA,oBACA,qBACA,yBACA,yBACA,cACA,uBACA,sBACA,kBACA,oBACA,sBACA,wBACA,gBACA,eACA,eACA,kBACA,gBACA,iBACA,kBACA,cACA,wBACA,gBACA,aACA,aACA,aACA,aACA,qBACA,iDACA,kBACA,kBACA,sBACA,cACA,gBACA,iBACA,qBACA,qBACA,iBACA,wBACA,eACA,iBACA,gBACA,kBACA,kBACA,cACA,cACA,aACA,aACA,aACA,gBACA,WACA,eACA,cACA,yBACA,qBACA,kBACA,sBACA,0BACA,oBACA,mBACA,sBACA,uCACA,mBACA,iBACA,mBACA,qBACA,gBACA,qBACA,mBACA,eACA,mBACA,eACA,cACA,cACA,iBACA,iBACA,sBACA,uBACA,oBACA,gBACA,+BACA,iBACA,8CACA,oCACA,oBACA,yBACA,6CACA,6BACA,gCACA,qCACA,oBACA,aACA,gBACA,gBACA,gBACA,gBACA,qBACA,+BACA,uBACA,gBACA,qCACA,kCACA,wBACA,qBACA,kBACA,iBACA,eACA,mBACA,kBACA,yBACA,uBACA,iBACA,WACA,gBACA,gBACA,kBACA,gBACA,kBACA,kBACA,mBACA,cACA,aACA,aACA,gBACA,aACA,eACA,0BACA,iBACA,kBACA,cACA,kCACA,kBACA,aACA,YACA,kBACA,gBACA,kBACA,qBACA,eACA,iBACA,kBACA,gCACA,gBACA,sBACA,qBACA,sBACA,uBACA,kBACA,yBACA,iBACA,eACA,kBACA,sBACA,8BACA,uBACA,iBACA,wBACA,uBACA,gBACA,8BACA,wBACA,gCACA,0BACA,mBACA,cACA,yBACA,+BACA,eACA,iBACA,oBACA,gBACA,mBACA,gBACA,cACA,iBACA,kBACA,gBACA,eACA,kBACA,gBACA,kBACA,gBACA,mBACA,4BACA,cACA,eACA,wBACA,gBACA,YACA,oBACA,gBACA,wBACA,gBACA,eACA,iBACA,+BACA,eACA,iBACA,mBACA,mBACA,cACA,qBACA,iBACA,qBACA,gBACA,mBACA,iBACA,oBACA,kBACA,oBACA,uBACA,mBACA,eACA,oBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,gBACA,gBACA,oBACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,gBACA,gBACA,gBACA,gBACA,oBACA,eACA,iBACA,oBACA,mBACA,mBACA,iBACA,wCACA,iBACA,gBACA,gBACA,eACA,gBACA,mBACA,kBACA,kBACA,eACA,iBACA,oBACA,eACA,6BACA,uBACA,WACA,uBACA,kBACA,aACA,kBACA,aACA,iBACA,mBACA,mBACA,oBACA,oBACA,eACA,kBACA,uBACA,gBACA,oBACA,qBACA,qBACA,iBACA,oBACA,WACA,eACA,gBACA,cACA,gBACA,qBACA,uBACA,0BACA,gBACA,aACA,cACA,cACA,sBACA,aACA,iBACA,eACA,uBACA,aACA,mBACA,kBACA,kBACA,eACA,eACA,oBACA,oBACA,kBACA,mBACA,mCACA,sBACA,qBACA,qBACA,aACA,qBACA,mCACA,gBACA,qBACA,qBACA,oBACA,cACA,qBACA,oBACA,gBACA,kBACA,qBACA,oBACA,kBACA,qBACA,gBACA,YACA,mBACA,oBACA,uBACA,sBACA,iBACA,uBACA,aACA,eACA,mBACA,oBACA,wBACA,qBACA,gBACA,sBACA,yBACA,iBACA,kBACA,cACA,sBACA,mBACA,cACA,cACA,sBACA,6BACA,8CACA,gBACA,gBACA,yBACA,aACA,iBACA,mBACA,yCACA,iBACA,kBACA,qBACA,cACA,gBACA,kBACA,wBACA,cACA,gBACA,gBACA,gBACA,iBACA,mBACA,uBACA,yBACA,yBACA,kBACA,iBACA,aACA,eACA,kBACA,mBACA,eACA,cACA,gBACA,cACA,iBACA,mBACA,uBACA,mBACA,aACA,cACA,eACA,gBACA,cACA,eACA,gBACA,gBACA,cACA,kBACA,kBACA,mBACA,cACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,uBACA,eACA,aACA,eACA,kBACA,uBACA,iBACA,gBACA,gBACA,0CACA,8BACA,uBACA,0BACA,cACA,wBACA,4BACA,2BACA,oBACA,qBACA,mBACA,kBACA,0BACA,mBACA,uBACA,gBACA,0BACA,mBACA,qBACA,cACA,8BACA,uBACA,yBACA,kBACA,0BACA,gBACA,iBACA,aACA,oBACA,YACA,qBACA,WACA,aACA,cACA,kBACA,kBACA,kBACA,gBACA,cACA,aACA,gBACA,qBACA,YACA,gBACA,eACA,wBACA,aACA,YACA,YACA,gBACA,gBACA,gBACA,sBACA,iBACA,kCACA,oDACA,iDACA,oBACA,kBACA,mBACA,aACA,iBACA,cACA,uBACA,kBACA,cACA,eACA,aACA,wBACA,oBACA,kBACA,mBACA,gBACA,aACA,YACA,aACA,eACA,mBACA,gBACA,0CACA,4BACA,kCACA,oBACA,gBACA,mBACA,4BACA,sBACA,qCACA,kBACA,cACA,gBACA,cACA,aACA,cACA,cACA,cACA,aACA,qBACA,YACA,eACA,eACA,eACA,aACA,WACA,UACA,YACA,gBACA,gBACA,eACA,cACA,aACA,eACA,cACA,aACA,eACA,cACA,eACA,aACA,wBACA,iBACA,aACA,cACA,cACA,cACA,eACA,cACA,YACA,YACA,gBACA,eACA,gBACA,cACA,gBACA,gBACA,sBACA,8CACA,aACA,aACA,yBACA,iBACA,eACA,gBACA,iBACA,aACA,oBACA,kBACA,iBACA,kBACA,aACA,aACA,aACA,yBACA,eACA,WACA,wBACA,gBACA,iBACA,mBACA,wCACA,cACA,gBACA,cACA,6BACA,kBACA,sCACA,aACA,eACA,2BACA,qBACA,sBACA,iBACA,iBACA,iBACA,cACA,qBACA,eACA,aACA,iBACA,aACA,gBACA,gBACA,gBACA,eACA,aACA,kBACA,mBACA,mBACA,eACA,eACA,2BACA,iBACA,eACA,oBACA,cACA,eACA,wBACA,oBACA,aACA,mCACA,6CACA,qBACA,cACA,iBACA,gBACA,kBACA,eACA,gBACA,cACA,cACA,iBACA,YACA,mCACA,aACA,0BACA,YACA,yBACA,uCACA,eACA,oBACA,sBACA,yBACA,kCACA,iCACA,gBACA,+BACA,uBACA,gCACA,kBACA,kBACA,mBACA,eACA,iBACA,4BACA,cACA,iBACA,aACA,gBACA,wBACA,sBACA,kBACA,iBACA,eACA,WACA,wBACA,oBACA,aACA,gBACA,aACA,aACA,kBACA,kBACA,yBACA,iBACA,eACA,cACA,kBACA,kBACA,sBACA,gBACA,uBACA,iBACA,4BACA,aACA,cACA,kBACA,eACA,kBACA,gBACA,cACA,mBACA,cACA,eACA,gBACA,qBACA,2BACA,mBACA,oBACA,iBACA,oBACA,oBACA,sBACA,6BACA,oBACA,qBACA,2BACA,kBACA,gBACA,wBACA,mBACA,oBACA,sBACA,oBACA,aACA,qBACA,kBACA,gCACA,gCACA,wBACA,wBACA,qBACA,kBACA,aACA,mBACA,gBACA,gBACA,wCACA,kBACA,eACA,iBACA,aACA,mBACA,iBACA,wBACA,+BACA,gBACA,eACA,qBACA,gBACA,4CACA,kBACA,eACA,aACA,kBACA,iBACA,gBACA,gBACA,eACA,iBACA,kBACA,iBACA,oBACA,gBACA,iBACA,kBACA,mBACA,YACA,mBACA,gBACA,gBACA,qCACA,uBACA,6BACA,uBACA,iBACA,8BACA,cACA,sDACA,4BACA,oBACA,uBACA,eACA,iBACA,gBACA,eACA,yBACA,gBACA,WACA,wBACA,kBACA,4BACA,6BACA,oBACA,iBACA,sBACA,yBACA,2BACA,sCACA,8BACA,gBACA,yCACA,gCACA,iBACA,2BACA,sBACA,kBACA,oBACA,mBACA,mBACA,mBACA,yBACA,qBACA,sBACA,iBACA,4BACA,WACA,gBACA,mBACA,wBACA,iBACA,kBACA,kBACA,gBACA,gBACA,kBACA,wBACA,sBACA,kBACA,sBACA,qBACA,uBACA,oBACA,mDACA,gBACA,oBACA,oBACA,oBACA,mBACA,mBACA,eACA,iBACA,cACA,eACA,kBACA,kBACA,kBACA,2BACA,+BACA,kBACA,oBACA,wBACA,YACA,iBACA,eACA,oBACA,eACA,kBACA,mBACA,oBACA,mBACA,gBACA,cACA,iBACA,aACA,cACA,aACA,iBACA,cACA,cACA,mBACA,cACA,mBACA,sBACA,oBACA,YACA,mBACA,kBACA,uBACA,mBACA,2BACA,cACA,oBACA,eACA,cACA,mBACA,kBACA,aACA,iBACA,eACA,uBACA,gBACA,mBACA,YACA,8BACA,eACA,uBACA,0BACA,eACA,kBACA,iBACA,eACA,iBACA,kBACA,kBACA,kBACA,cACA,mBACA,0BACA,0BACA,0BACA,yBACA,0BACA,0BACA,0BACA,0BACA,gBACA,kBACA,gBACA,0BACA,aACA,aACA,sBACA,gBACA,uBACA,cACA,iBACA,kBACA,mBACA,iBACA,kBACA,sBACA,0BACA,kBACA,8BACA,uBACA,gBACA,mBACA,mBACA,iBACA,kBACA,iBACA,eACA,mBACA,kCACA,4BACA,4BACA,sBACA,eACA,sCACA,+BACA,wBACA,yBACA,8BACA,8BACA,kBACA,wBACA,wBACA,gBACA,kBACA,aACA,aACA,kBACA,iBACA,cACA,wBACA,oBACA,qBACA,mBACA,iBACA,kBACA,iBACA,kBACA,mBACA,aACA,wBACA,2BACA,iBACA,qBACA,mBACA,kBACA,sBACA,iBACA,gBACA,uBACA,YACA,kBACA,aACA,kBACA,UACA,oBACA,aACA,kBACA,gBACA,oBACA,iBACA,kBACA,gBACA,6BACA,uBACA,mBACA,uBACA,cACA,eACA,kBACA,iBACA,mBACA,iBACA,gBACA,oBACA,gBACA,iBACA,iBACA,mBACA,cACA,qBACA,iBACA,qBACA,eACA,wBACA,2BACA,8BACA,iBACA,iBACA,kBACA,gBACA,wBACA,sBACA,8BACA,sBACA,gCACA,yBACA,iBACA,gBACA,gBACA,cACA,cACA,wBACA,kBACA,iBACA,uBACA,gBACA,2BACA,cACA,cACA,gBACA,eACA,aACA,yBACA,uBACA,yBACA,kBACA,iBACA,iBACA,uBACA,wBACA,iCACA,qBACA,gBACA,eACA,eACA,WACA,oBACA,cACA,aACA,iBACA,gBACA,gBACA,YACA,WACA,kBACA,gBACA,kBACA,2BACA,qBACA,qCACA,+BACA,+BACA,qBACA,gBACA,mBACA,kBACA,eACA,eACA,eACA,0BACA,qBACA,gBACA,eACA,eACA,eACA,uBACA,gBACA,wBACA,yBACA,YACA,sBACA,iBACA,kBACA,wBACA,iBACA,qCACA,+BACA,0BACA,mBACA,iBACA,iBACA,kBACA,aACA,gBACA,gBACA,mBACA,gBACA,kBACA,6BACA,yBACA,iBACA,iBACA,aACA,mBACA,cACA,eACA,oBACA,mBACA,iBACA,eACA,iBACA,wBACA,iBACA,gBACA,0BACA,mBACA,YACA,gBACA,aACA,kBACA,6BACA,aACA,0BACA,aACA,qBACA,2BACA,8BACA,aACA,6BACA,qBACA,eACA,6BACA,gBACA,kBACA,qBACA,sBACA,mBACA,aACA,cACA,oBACA,iBACA,2BACA,cACA,kBACA,aACA,4BACA,qBACA,eACA,kBACA,gBACA,wBACA,mBACA,yBACA,4BACA,2BACA,eACA,kBACA,eACA,cACA,qBACA,qBACA,wBACA,cACA,6BACA,YACA,oBACA,iBACA,6BACA,kBACA,gBACA,0BACA,2BACA,2BACA,yBACA,kBACA,2BACA,2BACA,2BACA,yBACA,0BACA,yBACA,0BACA,yBACA,2BACA,0BACA,2BACA,yBACA,yBACA,yBACA,0BACA,0BACA,yBACA,2BACA,cACA,yBACA,cACA,YACA,uBACA,sBACA,sBACA,2BACA,wBACA,kBACA,oBACA,gBACA,eACA,qBACA,mBACA,oBACA,mBACA,cACA,0BACA,0BACA,kBACA,mBACA,oBACA,eACA,aACA,aACA,sBACA,iBACA,aACA,WACA,iBACA,8BACA,gBACA,iBACA,mBACA,aACA,sCACA,8BACA,sBACA,wBACA,kBACA,wBACA,iBACA,gCACA,sBACA,kBACA,yCACA,0BACA,sBACA,qBACA,iBACA,uBACA,wBACA,kBACA,wBACA,yBACA,mBACA,sBACA,eACA,mBACA,mBACA,mBACA,kBACA,4BACA,kBACA,qBACA,cACA,mBACA,kBACA,sBACA,sBACA,qBACA,4BACA,4BACA,0BACA,iBACA,kBACA,oBACA,oBACA,eACA,oBACA,eACA,iBACA,YACA,qBACA,cACA,yBACA,wBACA,wBACA,4BACA,kBACA,qBACA,aACA,sBACA,oBACA,gBACA,cACA,eACA,sBACA,cACA,oBACA,kBACA,gBACA,kBACA,qBACA,cACA,iBACA,eACA,uBACA,mBACA,cACA,gBACA,oBACA,aACA,iBACA,kBACA,cACA,oBACA,aACA,cACA,wBACA,cACA,kBACA,iBACA,wBACA,wBACA,eACA,gBACA,eACA,YACA,gBACA,iBACA,cACA,iBACA,eACA,iBACA,wBACA,kBACA,yBACA,iBACA,kBACA,0BACA,sBACA,mBACA,mBACA,kBACA,oBACA,aACA,cACA,qBACA,iBACA,qCACA,qBACA,0CACA,0BACA,iBACA,cACA,iBACA,aACA,sBACA,iBACA,oBACA,wBACA,wBACA,wBACA,0BACA,wBACA,aACA,gDACA,aACA,oBACA,mBACA,yCACA,mBACA,sBACA,aACA,mDACA,0DACA,8CACA,yDACA,eACA,oBACA,+CACA,eACA,6BACA,6CACA,uBACA,gBACA,mBACA,eACA,iBACA,YACA,mBACA,oBACA,wBACA,wBACA,UACA,qCACA,iBACA,kBACA,WACA,iBACA,YACA,sBACA,kBACA,iBACA,eACA,eACA,oBACA,wBACA,kBACA,oBACA,gBACA,iBACA,aACA,oBACA,aACA,mBACA,oBACA,aACA,eACA,eACA,YACA,mDACA,iCACA,iCACA,wBACA,qBACA,gBACA,oBACA,cACA,oBACA,aACA,8BACA,eACA,YACA,YACA,oBACA,+BACA,uBACA,iBACA,oBACA,+BACA,aACA,qBACA,qBACA,6BACA,oBACA,oBACA,6BACA,eACA,eACA,mBACA,mBACA,cACA,wBACA,oBACA,2CACA,mBACA,sBACA,wBACA,kBACA,iBACA,eACA,eACA,gBACA,eACA,cACA,gBACA,eACA,kBACA,gBACA,cACA,gBACA,UACA,iBACA,iBACA,yBACA,sBACA,gDACA,mBACA,wBACA,gBACA,iBACA,cACA,cACA,iBACA,iBACA,cACA,iBACA,cACA,gBACA,aACA,eACA,gBACA,gBACA,aACA,qBACA,iBACA,eACA,oBACA,kBACA,aACA,iBACA,eACA,eACA,sBACA,gBACA,uBACA,gBACA,+BACA,wBACA,eACA,oBACA,gBACA,aACA,cACA,uBACA,eACA,mBACA,mBACA,cACA,gBACA,iBACA,uBACA,kBACA,eACA,qBACA,mBACA,iBACA,aACA,aACA,6BACA,uBACA,wBACA,aACA,mBACA,yBACA,iBACA,yBACA,kCACA,yBACA,0BACA,kBACA,gBACA,uBACA,oBACA,2BACA,sBACA,oBACA,wBACA,kBACA,kBACA,mBACA,+BACA,gCACA,YACA,sBACA,cACA,6BACA,oBACA,gBACA,cACA,sBACA,wBACA,kBACA,wBACA,aACA,oBACA,0BACA,eACA,sBACA,gCACA,gBACA,wCACA,WACA,eACA,WACA,qBACA,cACA,gBACA,qBACA,iBACA,4BACA,sBACA,iBACA,gCACA,oBACA,iBACA,eACA,cACA,eACA,iBACA,kBACA,kBACA,wBACA,oBACA,cACA,0BACA,cACA,oBACA,eACA,gBACA,aACA,mBACA,gBACA,qBACA,6CACA,8BACA,iDACA,sBACA,eACA,iBACA,+BACA,gBACA,gBACA,iBACA,eACA,iBACA,gBACA,iBACA,cACA,eACA,eACA,iBACA,eACA,cACA,qBACA,qBACA,kBACA,sBACA,iBACA,gBACA,uBACA,gBACA,iBACA,oBACA,kBACA,4BACA,cACA,oBACA,2BACA,iBACA,iBACA,wBACA,kBACA,cACA,YACA,qBACA,eACA,sBACA,gBACA,wBACA,kBACA,gBACA,sBACA,iBACA,eACA,gBACA,kBACA,iBACA,qCACA,qBACA,6CACA,+BACA,cACA,gBACA,oBACA,eACA,YACA,iBACA,qBACA,eACA,uBACA,iBACA,kBACA,0BACA,gCACA,qBACA,kBACA,gBACA,gBACA,yBACA,iBACA,qBACA,0BACA,kBACA,iBACA,YACA,eACA,mBACA,8BACA,sBACA,wBACA,kBACA,kBACA,gBACA,gBACA,gBACA,iBACA,kBACA,uBACA,kBACA,qBACA,cACA,iBACA,oBACA,mBACA,mBACA,oBACA,kBACA,sBACA,cACA,oCACA,mBACA,iBACA,iBACA,gBACA,YACA,eACA,oBACA,UACA,qBACA,uBACA,oBACA,gCACA,uBACA,aACA,eACA,qBACA,8BACA,2BACA,qBACA,yBACA,gBACA,4BACA,oBACA,0BACA,iBACA,kBACA,wBACA,aACA,cACA,kBACA,sBACA,eACA,qBACA,wBACA,kBACA,oBACA,eACA,gBACA,kBACA,wBACA,mBACA,iBACA,qBACA,mBACA,WACA,mBACA,0BACA,4BACA,wBACA,cACA,gBACA,mBACA,cACA,qBACA,mCACA,qBACA,mBACA,uBACA,iBACA,oBACA,wBACA,iBACA,wBACA,+BACA,mBACA,gBACA,uBACA,oBACA,kBACA,4BACA,qBACA,kBACA,iCACA,qBACA,eACA,mBACA,cACA,0BACA,kBACA,qBACA,iBACA,gBACA,cACA,sCACA,mBACA,gBACA,mBACA,gBACA,wBACA,aACA,mBACA,6BACA,4BACA,sBACA,qBACA,oBACA,kBACA,cACA,cACA,iBACA,mBACA,eACA,qBACA,gBACA,qBACA,kBACA,yBACA,mBACA,qBACA,yBACA,oBACA,gBACA,oBACA,eACA,kBACA,iBACA,qBACA,kBACA,eACA,eACA,oBACA,wBACA,8BACA,gBACA,kBACA,+BACA,qBACA,mBACA,kBACA,iBACA,wBACA,mBACA,kBACA,4BACA,iBACA,YACA,cACA,mBACA,iBACA,8BACA,oBACA,mBACA,oBACA,oBACA,oBACA,yBACA,8BACA,sBACA,4BACA,4BACA,mBACA,+BACA,kBACA,kBACA,mBACA,gCACA,0BACA,mBACA,yBACA,oBACA,yBACA,gCACA,oBACA,qBACA,eACA,mBACA,iCACA,eACA,qBACA,uBACA,mBACA,kBACA,kBACA,kBACA,iBACA,cACA,uBACA,0BACA,mBACA,eACA,eACA,4BACA,YACA,uBACA,gBACA,iBACA,gCACA,kBACA,wBACA,sCACA,kBACA,eACA,6BACA,mBACA,wBACA,gBACA,iCACA,4BACA,gBACA,iCACA,qBACA,cACA,kBACA,mBACA,4BACA,wBACA,cACA,0BACA,kBACA,4BACA,mBACA,mBACA,oBACA,aACA,cACA,uBACA,kBACA,0BACA,uBACA,aACA,sBACA,oBACA,mBACA,qDACA,qDACA,qDACA,eACA,kBACA,4BACA,wBACA,cACA,yBACA,eACA,oBACA,eACA,eACA,mBACA,eACA,cACA,oBACA,iBACA,kBACA,8BACA,oBACA,sBACA,yBACA,yBACA,kBACA,sCACA,wBACA,qCACA,mBACA,mBACA,yBACA,cACA,gBACA,cACA,gBACA,oBACA,iBACA,mBACA,qBACA,WACA,kBACA,8BACA,0BACA,sBACA,mBACA,mBACA,eACA,4BACA,cACA,0BACA,aACA,kBACA,mBACA,eACA,iBACA,gBACA,mCACA,YACA,cACA,uBACA,uCACA,0BACA,mBACA,mBACA,uBACA,iBACA,mBACA,sBACA,YACA,mBACA,iBACA,YACA,oBACA,kBACA,2BACA,kBACA,sBACA,4BACA,mBACA,eACA,kBACA,eACA,mBACA,mBACA,qBACA,yBACA,oBACA,eACA,eACA,cACA,0BACA,sBACA,aACA,iBACA,gBACA,qBACA,eACA,2BACA,kBACA,mBACA,2BACA,kBACA,cACA,mBACA,kBACA,YACA,kBACA,qBACA,yBACA,uBACA,oBACA,mBACA,mBACA,kBACA,iBACA,4BACA,YACA,4BACA,yBACA,kCACA,kBACA,gBACA,iBACA,cACA,wBACA,kBACA,eACA,mBACA,eACA,kBACA,YACA,kBACA,6BACA,kBACA,qBACA,iBACA,kBACA,0BACA,oBACA,eACA,oBACA,oBACA,uBACA,0BACA,kBACA,6BACA,0BACA,iBACA,eACA,2BACA,oBACA,oBACA,eACA,mCACA,yBACA,cACA,WACA,gBACA,gBACA,kBACA,eACA,oBACA,qDACA,qDACA,4BACA,kBACA,sBACA,gBACA,0BACA,0BACA,oBACA,sBACA,kBACA,aACA,iBACA,0BACA,mBACA,iBACA,6BACA,gBACA,cACA,4BACA,qBACA,8BACA,uBACA,oBACA,yBACA,wBACA,2BACA,sBACA,gBACA,eACA,kBACA,wBACA,eACA,0BACA,kBACA,yBACA,qDACA,qBACA,eACA,qBACA,iBACA,sBACA,qBACA,gBACA,mBACA,YACA,gCACA,yBACA,yBACA,iBACA,oBACA,qBACA,wBACA,sBACA,oBACA,iBACA,uBACA,oBACA,eACA,iBACA,kCACA,6BACA,uBACA,0BACA,mBACA,cACA,gBACA,mBACA,gBACA,iBACA,kBACA,8BACA,uBACA,iBACA,qDACA,mBACA,qBACA,eACA,2BACA,cACA,sBACA,oBACA,kBACA,wBACA,iBACA,mBACA,qBACA,cACA,0BACA,kBACA,uBACA,iBACA,YACA,uCACA,8BACA,wBACA,qBACA,uBACA,mBACA,wBACA,oBACA,yBACA,sBACA,wBACA,iBACA,eACA,oBACA,yBACA,iDACA,kBACA,sBACA,uBACA,kBACA,uBACA,eACA,WACA,oBACA,kBACA,qBACA,sBACA,oBACA,yBACA,gBACA,4BACA,wBACA,4BACA,cACA,uBACA,mBACA,gBACA,WACA,WACA,qBACA,sEACA,gBACA,sEACA,kBACA,oBACA,WACA,oBACA,qBACA,sBACA,WACA,sBACA,qBACA,qBACA,yBACA,sBACA,oBACA,gBACA,2BACA,uBACA,6BACA,iBACA,cACA,gBACA,oBACA,kBACA,qBACA,oBACA,mBACA,kBACA,iBACA,kBACA,sBACA,kBACA,+BACA,gCACA,gCACA,gCACA,iCACA,UACA,uBACA,YACA,iBACA,sBACA,YACA,uBACA,wBACA,iBACA,qBACA,qBACA,sBACA,gBACA,yBACA,gBACA,oBACA,uBACA,eACA,iBACA,WACA,kCACA,uBACA,sBACA,gBACA,oBACA,sBACA,uBACA,kBACA,wBACA,iBACA,uBACA,mBACA,iBACA,sBACA,mBACA,oBACA,gBACA,oBACA,mBACA,iBACA,kBACA,aACA,sBACA,4BACA,uBACA,aACA,iBACA,cACA,aACA,mBACA,WACA,sBACA,gBACA,uBACA,sBACA,oBACA,yBACA,iBACA,kBACA,gBACA,kBACA,kBACA,sBACA,iBACA,cACA,YACA,yCACA,qBACA,WACA,eACA,iBACA,oCACA,oBACA,sBACA,mBACA,cACA,UACA,eACA,kBACA,YACA,kBACA,qBACA,gBACA,aACA,0BACA,eACA,0BACA,4BACA,iBACA,YACA,8BACA,qBACA,oBACA,YACA,4BACA,oBACA,qBACA,2BACA,iBACA,gCACA,oBACA,mBACA,wBACA,yBACA,oBACA,sCACA,wBACA,kBACA,aACA,qBACA,uBACA,sBACA,aACA,qBACA,4BACA,oBACA,iBACA,WACA,qBACA,wBACA,0BACA,oBACA,qBACA,mBACA,iBACA,eACA,uBACA,0CACA,iBACA,4BACA,wBACA,0BACA,mBACA,yBACA,sBACA,qBACA,8BACA,UACA,iBACA,2BACA,qBACA,+BACA,8BACA,0BACA,0BACA,0BACA,0BACA,0BACA,wBACA,uBACA,yBACA,yBACA,yBACA,yBACA,uBACA,gCACA,kBACA,gBACA,cACA,kBACA,oBACA,iBACA,qBACA,iBACA,qBACA,sBACA,aACA,iBACA,kBACA,oBACA,0BACA,4BACA,6BACA,mBACA,iBACA,kBACA,iBACA,mBACA,kBACA,mCACA,mCACA,gBACA,kBACA,kBACA,mBACA,qBACA,qBACA,wBACA,mBACA,cACA,sBACA,gBACA,cACA,yBACA,mBACA,iBACA,wBACA,sBACA,mBACA,sBACA,aACA,kBACA,cACA,eACA,wBACA,wBACA,wBACA,wBACA,qBACA,8BACA,oBACA,mCACA,sBACA,uBACA,gBACA,sBACA,uBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,sBACA,sBACA,mCACA,oCACA,kCACA,WACA,4BACA,6BACA,mBACA,qBACA,qBACA,sBACA,WACA,eACA,kBACA,oBACA,oCACA,gBACA,wBACA,aACA,cACA,eACA,oBACA,sBACA,6BACA,0BACA,0BACA,0BACA,wBACA,wBACA,uBACA,sBACA,sBACA,iBACA,mBACA,qBACA,2BACA,aACA,yBACA,8BACA,kBACA,aACA,yBACA,oBACA,uBACA,sBACA,0BACA,qBACA,2BACA,qBACA,0BACA,0BACA,qBACA,sBACA,gBACA,sBACA,uBACA,yBACA,UACA,iBACA,YACA,sBACA,yBACA,eACA,uBACA,iBACA,gBACA,aACA,mBACA,+BACA,kCACA,0BACA,4BACA,8BACA,mBACA,wBACA,qBACA,YACA,cACA,qBACA,eACA,gBACA,0BACA,sBACA,sBACA,kBACA,qBACA,qBACA,aACA,sBACA,aACA,iBACA,gBACA,sBACA,qBACA,cACA,aACA,kBACA,oBACA,mBACA,kBACA,wBACA,aACA,uCACA,oBACA,gBACA,iBACA,0BACA,mBACA,oBACA,kBACA,kBACA,mBACA,mBACA,mBACA,uBACA,kBACA,iBACA,oBACA,kBACA,qBACA,iBACA,uBACA,iBACA,8BACA,sBACA,kBACA,cACA,WACA,cACA,oBACA,oBACA,0BACA,uBACA,0BACA,2BACA,0BACA,cACA,wBACA,wBACA,iBACA,WACA,oBACA,yBACA,YACA,eACA,gBACA,WACA,8BACA,kBACA,YACA,iBACA,oBACA,qBACA,sBACA,mBACA,mBACA,2BACA,sBACA,kBACA,iBACA,iBACA,eACA,6BACA,8BACA,+BACA,8BACA,qBACA,gBACA,uBACA,4BACA,2BACA,2BACA,qBACA,8CACA,gBACA,2BACA,0BACA,2BACA,kBACA,iBACA,4BACA,iBACA,kBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,sBACA,qBACA,qBACA,qBACA,oBACA,mBACA,oBACA,sBACA,qBACA,mBACA,oBACA,qBACA,qBACA,eACA,YACA,aACA,qBACA,uBACA,sBACA,oBACA,kBACA,sBACA,6BACA,6BACA,6BACA,wBACA,6BACA,8BACA,uBACA,mBACA,kBACA,oBACA,yBACA,4BACA,uBACA,0BACA,uBACA,cACA,6BACA,yBACA,gBACA,iBACA,kBACA,aACA,sBACA,kBACA,qBACA,iBACA,kBACA,oBACA,eACA,aACA,cACA,mBACA,aACA,cACA,mBACA,8BACA,4BACA,wBACA,uBACA,uBACA,2BACA,oBACA,mBACA,oBACA,uBACA,2BACA,wBACA,uBACA,oBACA,oBACA,mBACA,wBACA,cACA,WACA,yBACA,wBACA,4BACA,qBACA,cACA,iBACA,kBACA,mBACA,iBACA,iBACA,kBACA,kBACA,qCACA,uBACA,mBACA,mBACA,kBACA,qBACA,qBACA,mBACA,qBACA,kBACA,sBACA,8BACA,mBACA,iBACA,0DACA,oDACA,0BACA,yDACA,wDACA,yDACA,uDACA,sBACA,uBACA,6BACA,6BACA,oBACA,2DACA,kBACA,eACA,wBACA,qBACA,sBACA,iBACA,mBACA,cACA,aACA,8CACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBACA,uCACA,mBACA,mBACA,wCACA,oBACA,mBACA,qBACA,mBACA,iCACA,gCACA,kCACA,gCACA,qCACA,gCACA,kCACA,wCACA,mCACA,oBACA,mBACA,mBACA,qBACA,mBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,mBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBACA,sBACA,qBACA,qBACA,qBACA,uBACA,kBACA,mBACA,4BACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,oCACA,4CACA,4CACA,uCACA,yCACA,oBACA,oBACA,0BACA,sBACA,qBACA,kBACA,0CACA,0CACA,oBACA,oBACA,uBACA,oBACA,kBACA,uBACA,kBACA,sBACA,qBACA,sBACA,iBACA,qBACA,yBACA,qBACA,mBACA,kBACA,kBACA,mBACA,qBACA,kCACA,oBACA,mBACA,uCACA,oBACA,qBACA,mBACA,kBACA,sBACA,qBACA,4CACA,4BACA,+BACA,oBACA,2BACA,sBACA,qBACA,kBACA,4BACA,mBACA,uCACA,qBACA,kBACA,qBACA,iBACA,kBACA,kBACA,uBACA,wBACA,sBACA,qBACA,sBACA,2BACA,uBACA,kBACA,YACA,kBACA,gBACA,sBACA,kBACA,2BACA,uBACA,iBACA,gBACA,sBACA,eACA,gBACA,mBACA,mBACA,mBACA,yBACA,mBACA,kBACA,uBACA,uBACA,oBACA,uBACA,sBACA,kBACA,iBACA,mBACA,oBACA,oBACA,mBACA,mBACA,YACA,+DACA,+DACA,wBACA,0BACA,2BACA,sBACA,8BACA,eACA,0BACA,mBACA,sBACA,sBACA,oBACA,2BACA,uBACA,cACA,iBACA,wBACA,gBACA,qBACA,oBACA,4BACA,kBACA,wBACA,aACA,gBACA,wBACA,6BACA,eACA,yBACA,qBACA,0BACA,iBACA,iBACA,kBACA,iBACA,kBACA,sBACA,iBACA,mBACA,mBACA,yBACA,sBACA,kBACA,wBACA,2BACA,qBACA,4BACA,kBACA,uBACA,oBACA,oBACA,oBACA,mBACA,qBACA,qBACA,qBACA,mBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,2CACA,oBACA,oBACA,oBACA,kBACA,mBACA,oBACA,YACA,iBACA,yBACA,+BACA,oBACA,oBACA,cACA,6BACA,mBACA,iBACA,qBACA,oBACA,uBACA,gBACA,gBACA,sBACA,8CACA,eACA,oBACA,sBACA,+BACA,+BACA,+BACA,6BACA,oBACA,mBACA,oBACA,wCACA,2CACA,oCACA,oBACA,YACA,eACA,4BACA,8CACA,mBACA,iBACA,mBACA,iBACA,cACA,kBACA,aACA,wBACA,aACA,WACA,sBACA,mBACA,oBACA,gBACA,cACA,iBACA,cACA,oBACA,6BACA,0BACA,iBACA,mBACA,aACA,iBACA,gBACA,wBACA,eACA,qBACA,0BACA,gCACA,qBACA,sBACA,eACA,uBACA,mBACA,0BACA,2BACA,sBACA,oBACA,qBACA,qBACA,gBACA,oCACA,mBACA,wCACA,2CACA,0BACA,wCACA,gBACA,gBACA,kBACA,wCACA,qCACA,mCACA,kCACA,iBACA,iBACA,mCACA,iBACA,uBACA,4CACA,gBACA,mCACA,eACA,6BACA,8BACA,8BACA,0BACA,0BACA,iCACA,kCACA,6BACA,2BACA,4BACA,4BACA,0BACA,+BACA,iCACA,8BACA,iCACA,uBACA,uBACA,yBACA,8BACA,8BACA,wBACA,iCACA,2BACA,wBACA,wBACA,uBACA,iCACA,oBACA,qBACA,yBACA,8BACA,8BACA,sBACA,kBACA,cACA,sBACA,mBACA,qBACA,eACA,cACA,mBACA,yBACA,qBACA,kBACA,mBACA,0BACA,gBACA,kBACA,oBACA,0BACA,0BACA,uCACA,iBACA,0BACA,0BACA,0BACA,mBACA,uBACA,yBACA,kBACA,iBACA,gBACA,yBACA,sBACA,gCACA,cACA,wBACA,kBACA,yBACA,kBACA,kBACA,sBACA,6BACA,yBACA,sBACA,sBACA,qBACA,6BACA,kBACA,oBACA,sBACA,uBACA,yBACA,yBACA,gBACA,cACA,qBACA,mBACA,mBACA,gBACA,qBACA,sBACA,iBACA,6BACA,0BACA,kBACA,mBACA,cACA,sBACA,gBACA,aACA,gBACA,uBACA,6BACA,gCACA,wBACA,0BACA,qBACA,qBACA,eACA,2BACA,cACA,eACA,2BACA,oBACA,sBACA,qBACA,uBACA,qBACA,sBACA,yBACA,yBACA,sBACA,eACA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBACA,qBACA,oBACA,wBACA,mBACA,oBACA,cACA,sBACA,qBACA,yBACA,wBACA,wBACA,yBACA,yBACA,0BACA,aACA,gCACA,4BACA,mBACA,cACA,kBACA,kBACA,qBACA,mBACA,oBACA,YACA,gBACA,kBACA,oBACA,kBACA,kBACA,uBACA,mBACA,4BACA,UACA,cACA,uBACA,0BACA,yBACA,mBACA,aACA,yBACA,uBACA,yBACA,yCACA,kBACA,cACA,iBACA,sBACA,oBACA,aACA,iBACA,0BACA,8BACA,8BACA,cACA,oBACA,uBACA,oBACA,4BACA,uBACA,+BACA,eACA,qBACA,+BACA,uBACA,sBACA,qCACA,+BACA,oBACA,oBACA,6BACA,8BACA,2BACA,gBACA,cACA,+BACA,oBACA,mBACA,6BACA,qBACA,iBACA,mBACA,kBACA,gBACA,eACA,iBACA,qBACA,wBACA,mBACA,mBACA,uBACA,iBACA,wBACA,sBACA,qBACA,oBACA,qBACA,2BACA,kBACA,oBACA,mBACA,mBACA,+BACA,+BACA,6BACA,8BACA,8BACA,wBACA,gBACA,qBACA,0BACA,iBACA,mBACA,mBACA,gBACA,cACA,uBACA,eACA,cACA,cACA,gCACA,+BACA,8BACA,sBACA,0BACA,0BACA,0BACA,sBACA,kBACA,kBACA,yBACA,mBACA,eACA,oBACA,wBACA,kBACA,0BACA,wBACA,kBACA,eACA,qBACA,qBACA,oBACA,iBACA,qBACA,oBACA,oBACA,oBACA,qBACA,kBACA,gBACA,qBACA,kBACA,kBACA,iBACA,oBACA,mBACA,qBACA,+BACA,+BACA,wBACA,mBACA,kBACA,6BACA,cACA,yBACA,sBACA,iBACA,iBACA,uBACA,uBACA,kBACA,kBACA,eACA,sBACA,oBACA,qBACA,iBACA,kBACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,uBACA,cACA,eACA,mBACA,mBACA,yBACA,cACA,qBACA,gBACA,oBACA,aACA,oBACA,iBACA,oBACA,oBACA,oBACA,qBACA,oBACA,sBACA,sBACA,oBACA,sBACA,oBACA,qBACA,oBACA,oBACA,mBACA,qBACA,qBACA,sBACA,uBACA,qBACA,iBACA,gBACA,iBACA,iBACA,uBACA,aACA,kBACA,wBACA,+BACA,wBACA,eACA,aACA,YACA,cACA,wBACA,sBACA,cACA,gBACA,iBACA,yBACA,uBACA,wBACA,eACA,eACA,oBACA,sBACA,mBACA,sBACA,uBACA,mBACA,mBACA,oBACA,YACA,4BACA,wCACA,cACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,sBACA,sBACA,uBACA,yBACA,0BACA,sBACA,mBACA,qBACA,mBACA,wBACA,oBACA,YACA,eACA,iBACA,cACA,iBACA,oBACA,eACA,oBACA,sBACA,oBACA,qBACA,qBACA,qBACA,iCACA,4BACA,oBACA,oBACA,oBACA,oBACA,oBACA,uBACA,wBACA,mBACA,0BACA,mBACA,4CACA,uBACA,eACA,oBACA,0BACA,eACA,4BACA,yBACA,iCACA,eACA,kBACA,cACA,eACA,aACA,eACA,uBACA,cACA,cACA,cACA,cACA,kBACA,2BACA,sBACA,cACA,iBACA,iBACA,cACA,eACA,qBACA,eACA,yBACA,mBACA,qBACA,eACA,cACA,kBACA,iBACA,oBACA,gBACA,cACA,gBACA,4BACA,wBACA,sBACA,gBACA,mBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,uBACA,qBACA,oBACA,uBACA,qBACA,qBACA,uBACA,uBACA,qBACA,qBACA,wBACA,qBACA,oBACA,uBACA,qBACA,oBACA,qBACA,qBACA,sBACA,sBACA,qBACA,mBACA,uBACA,oBACA,uBACA,uBACA,mBACA,oBACA,qBACA,oBACA,uCACA,qBACA,qBACA,qBACA,oBACA,sBACA,sBACA,qBACA,oBACA,oBACA,qBACA,qBACA,yBACA,qBACA,cACA,kBACA,qBACA,mBACA,sBACA,oBACA,yBACA,sBACA,qCACA,iCACA,sCACA,gBACA,kBACA,aACA,iCACA,yBACA,qBACA,kBACA,4CACA,iBACA,uBACA,iBACA,kBACA,eACA,oBACA,eACA,eACA,iBACA,qBACA,cACA,+BACA,6BACA,6BACA,yBACA,8BACA,0BACA,4BACA,2BACA,8BACA,8BACA,+BACA,8BACA,4BACA,4BACA,4BACA,4BACA,wBACA,oBACA,kBACA,cACA,aACA,YACA,cACA,eACA,cACA,YACA,aACA,cACA,sBACA,yBACA,yBACA,yBACA,sBACA,sBACA,0BACA,2BACA,0BACA,wBACA,wBACA,sBACA,sBACA,wBACA,2BACA,yBACA,yBACA,sBACA,qBACA,0BACA,uBACA,wBACA,uBACA,0BACA,2BACA,sBACA,0BACA,wBACA,wBACA,sBACA,uBACA,sBACA,yBACA,sBACA,qBACA,0BACA,sBACA,yBACA,eACA,eACA,oBACA,oBACA,oBACA,mBACA,aACA,oBACA,qBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,mBACA,kBACA,mBACA,mBACA,qBACA,mBACA,oBACA,qBACA,qBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,qBACA,kBACA,mBACA,oBACA,mBACA,qBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,mBACA,qBACA,mBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,oBACA,qBACA,uBACA,mBACA,oBACA,qBACA,oBACA,oBACA,kBACA,sBACA,qBACA,mBACA,sBACA,sBACA,uBACA,oBACA,qBACA,mBACA,sBACA,uBACA,mBACA,oBACA,mBACA,oBACA,oBACA,qBACA,uBACA,qBACA,2BACA,uBACA,mBACA,uBACA,oBACA,oBACA,qBACA,uBACA,qBACA,sBACA,oBACA,uBACA,sBACA,sBACA,qBACA,qBACA,qBACA,wBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,qBACA,kBACA,mBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,mBACA,kBACA,qBACA,kBACA,mBACA,sBACA,qBACA,qBACA,wBACA,sBACA,yBACA,qBACA,oBACA,mBACA,mBACA,qBACA,qBACA,qBACA,qBACA,mBACA,oBACA,qBACA,mBACA,oBACA,yBACA,sBACA,qBACA,oBACA,oBACA,mBACA,qBACA,oBACA,sBACA,mBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,kBACA,qBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,sBACA,mBACA,mBACA,mBACA,mBACA,mBACA,qBACA,oBACA,sBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBACA,kBACA,qBACA,oBACA,oBACA,mBACA,oBACA,sBACA,oBACA,qBACA,oBACA,qBACA,sBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,mBACA,0BACA,oBACA,oBACA,uBACA,oBACA,wBACA,qBACA,oBACA,mBACA,qBACA,mBACA,sBACA,sBACA,uBACA,oBACA,qBACA,mBACA,qBACA,uBACA,mBACA,oBACA,oBACA,qBACA,oBACA,qBACA,mBACA,mBACA,oBACA,qBACA,qBACA,qBACA,mBACA,oBACA,qBACA,uBACA,uBACA,uBACA,wBACA,qBACA,sBACA,uBACA,oBACA,mBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,eACA,gBACA,kBACA,gBACA,eACA,kBACA,4BACA,6BACA,6BACA,2BACA,yBACA,yBACA,8BACA,kDACA,mBACA,oBACA,oBACA,qBACA,qBACA,mBACA,oBACA,eACA,qBACA,sBACA,mBACA,qBACA,qBACA,oBACA,wBACA,mBACA,eACA,0CACA,wBACA,cACA,oBACA,kBACA,gBACA,gBACA,4BACA,iBACA,yBACA,oBACA,eACA,wBACA,iBACA,oBACA,sBACA,iCACA,qBACA,+BACA,gBACA,8BACA,oBACA,gBACA,iBACA,eACA,4BACA,6BACA,0BACA,2BACA,4BACA,0BACA,2BACA,4BACA,aACA,aACA,cACA,cACA,cACA,gBACA,eACA,aACA,eACA,aACA,cACA,cACA,wBACA,2BACA,qBACA,0BACA,uBACA,wBACA,wBACA,uBACA,sBACA,wBACA,uBACA,wBACA,uBACA,sBACA,wBACA,wBACA,uBACA,wBACA,qBACA,oBACA,oBACA,mBACA,oBACA,oBACA,qBACA,oBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,mBACA,kBACA,kBACA,oBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,mBACA,oBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,mBACA,kBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,0BACA,qBACA,oBACA,sBACA,oBACA,wBACA,qBACA,mBACA,kBACA,mBACA,oBACA,sBACA,sBACA,sBACA,kBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,mBACA,qBACA,sBACA,uBACA,oBACA,qBACA,qBACA,qBACA,qBACA,uBACA,qBACA,oBACA,wBACA,qBACA,sBACA,qBACA,sBACA,oBACA,qBACA,sBACA,sBACA,oBACA,uBACA,oBACA,uBACA,sBACA,wBACA,sBACA,mBACA,sBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,sBACA,oBACA,qBACA,qBACA,qBACA,mBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,mBACA,qBACA,qBACA,oBACA,qBACA,sBACA,uBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,sBACA,oBACA,qBACA,oBACA,mBACA,qBACA,oBACA,0BACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,mBACA,sBACA,oBACA,sBACA,mBACA,oBACA,oBACA,oBACA,qBACA,qBACA,oBACA,kBACA,qBACA,mBACA,qBACA,oBACA,qBACA,qBACA,sBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,mBACA,oBACA,oBACA,mBACA,qBACA,kBACA,sBACA,sBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,6CACA,oBACA,mBACA,yBACA,qBACA,oBACA,oBACA,mBACA,wBACA,qBACA,oBACA,mBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,eACA,gBACA,0BACA,oBACA,yBACA,yBACA,qBACA,kBACA,wBACA,0BACA,wBACA,sBACA,uBACA,oBACA,kBACA,YACA,qBACA,qBACA,wBACA,yBACA,2BACA,0BACA,mBACA,uBACA,oBACA,mBACA,mBACA,YACA,YACA,wBACA,uBACA,uBACA,wBACA,wBACA,uBACA,aACA,aACA,cACA,mBACA,8BACA,8BACA,iCACA,gBACA,cACA,mBACA,oBACA,yBACA,sBACA,kBACA,cACA,UACA,YACA,oBACA,kBACA,iBACA,iBACA,0BACA,eACA,gBACA,iBACA,oBACA,wBACA,qBACA,oBACA,mBACA,oBACA,gBACA,oBACA,kBACA,mBACA,oBACA,uBACA,qBACA,oBACA,oBACA,mBACA,oBACA,0BACA,0BACA,8BACA,kBACA,eACA,gBACA,sBACA,qBACA,oBACA,sBACA,qBACA,wBACA,mBACA,uBACA,6BACA,0BACA,iBACA,oBACA,qBACA,oBACA,yBACA,cACA,mBACA,mBACA,cACA,wBACA,eACA,oBACA,wBACA,wBACA,iBACA,oBACA,qBACA,oBACA,gCACA,wBACA,qBACA,qBACA,yBACA,yBACA,eACA,qBACA,gBACA,kBACA,oBACA,gBACA,gBACA,0BACA,kDACA,yBACA,kBACA,cACA,uBACA,sBACA,sBACA,qBACA,qBACA,iBACA,wBACA,YACA,iBACA,cACA,iBACA,mBACA,sBACA,0BACA,gBACA,gBACA,eACA,mBACA,mBACA,iBACA,kBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,mBACA,oBACA,oBACA,mBACA,oBACA,mBACA,oBACA,mBACA,wBACA,wBACA,uBACA,qBACA,yBACA,kCACA,qBACA,qBACA,kBACA,mBACA,qBACA,sBACA,uBACA,oBACA,qBACA,+BACA,+BACA,oBACA,aACA,0BACA,kDACA,2BACA,eACA,6BACA,wBACA,yBACA,qBACA,yBACA,6BACA,wBACA,yBACA,YACA,qBACA,wBACA,wBACA,gBACA,YACA,mBACA,yBACA,sBACA,gBACA,uBACA,sBACA,iBACA,kBACA,mBACA,0BACA,4BACA,yBACA,0BACA,2BACA,iCACA,gBACA,eACA,yBACA,cACA,gBACA,eACA,yBACA,iBACA,kBACA,eACA,gBACA,8CACA,2BACA,sBACA,kBACA,uBACA,cACA,gBACA,eACA,kBACA,mBACA,2BACA,oBACA,mBACA,uBACA,2BACA,6BACA,+BACA,sBACA,qBACA,eACA,yBACA,oBACA,qBACA,oBACA,oBACA,oBACA,iDACA,mBACA,cACA,sBACA,qBACA,6BACA,qBACA,sBACA,sBACA,mBACA,iBACA,sBACA,sBACA,+BACA,qBACA,aACA,eACA,qBACA,0BACA,cACA,6BACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,cACA,sBACA,cACA,qBACA,6BACA,iBACA,mBACA,uBACA,sBACA,uBACA,sBACA,oBACA,qBACA,2BACA,6BACA,+BACA,+BACA,oBACA,oBACA,uBACA,gBACA,oBACA,mBACA,oBACA,mBACA,qBACA,qBACA,wBACA,qBACA,oBACA,mBACA,oBACA,yBACA,wBACA,oBACA,uBACA,mBACA,sBACA,oBACA,mBACA,qBACA,uBACA,qBACA,yBACA,qBACA,yBACA,sBACA,qBACA,wBACA,qBACA,qBACA,mBACA,sBACA,8BACA,0BACA,6BACA,2BACA,8BACA,2BACA,0BACA,6BACA,0BACA,2BACA,8BACA,+BACA,+BACA,kCACA,0BACA,0BACA,0BACA,0BACA,0BACA,4BACA,gCACA,0BACA,2BACA,2BACA,0BACA,wBACA,2BACA,0BACA,4BACA,4BACA,2BACA,2BACA,gCACA,8BACA,gCACA,6BACA,4BACA,8BACA,8BACA,4BACA,4BACA,0BACA,0BACA,4BACA,6BACA,8BACA,2BACA,4BACA,sCACA,uBACA,oBACA,sBACA,oBACA,qBACA,qBACA,oBACA,oBACA,sBACA,yBACA,oBACA,oBACA,mBACA,uBACA,uBACA,kCACA,uBACA,qBACA,uBACA,uBACA,qBACA,8BACA,+BACA,4BACA,8BACA,iCACA,+BACA,6BACA,6BACA,sBACA,sBACA,wBACA,sBACA,qBACA,kBACA,2BACA,oBACA,mBACA,oBACA,eACA,eACA,wBACA,eACA,iBACA,kBACA,kBACA,eACA,eACA,+CACA,0CACA,wBACA,mCACA,6BACA,mBACA,iBACA,YACA,uBACA,oBACA,oBACA,YACA,iBACA,mBACA,kBACA,qBACA,YACA,cACA,iBACA,YACA,cACA,cACA,cACA,aACA,cACA,gBACA,cACA,aACA,gBACA,eACA,oCACA,8BACA,uBACA,YACA,wBACA,8BACA,2BACA,8BACA,2CACA,oCACA,gBACA,sBACA,gBACA,wBACA,mBACA,6GACA,iBACA,mBACA,oBACA,oBACA,oBACA,oBACA,eACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,uBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,sBACA,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,mBACA,mBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,kBACA,kBACA,iBACA,qBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,qBACA,qBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,sCACA,sBACA,oBACA,oBACA,qBACA,kBACA,kCACA,cACA,YACA,sBACA,2BACA,6BACA,2BACA,mBACA,oBACA,yBACA,gBACA,kBACA,yBACA,0BACA,2BACA,mBACA,4BACA,uBACA,qBACA,8BACA,cACA,sBACA,oBACA,oBACA,8BACA,8BACA,4BACA,0BACA,mBACA,6BACA,uBACA,YACA,iBACA,sBACA,iBACA,uBACA,kBACA,kBACA,eACA,iBACA,6BACA,8BACA,4BACA,4BACA,yBACA,cACA,cACA,iBACA,mBACA,iBACA,qBACA,oBACA,oCACA,eACA,uBACA,6BACA,sBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,iBACA,mBACA,0BACA,kCACA,uBACA,qBACA,gCACA,sCACA,qBACA,uBACA,qBACA,kBACA,iBACA,kBACA,iBACA,wBACA,kBACA,wBACA,mBACA,mBACA,oCACA,2BACA,qBACA,mDACA,0BACA,iBACA,sBACA,iBACA,4BACA,wBACA,wBACA,uBACA,iBACA,mBACA,iBACA,qBACA,4BACA,kBACA,eACA,gBACA,iBACA,qCACA,mCACA,qBACA,mBACA,cACA,YACA,eACA,0BACA,2BACA,2BACA,eACA,gBACA,oBACA,uBACA,qBACA,qBACA,qBACA,kBACA,qBACA,6BACA,2BACA,2BACA,cACA,qBACA,iBACA,iBACA,4BACA,mBACA,gBACA,qBACA,kBACA,mBACA,gBACA,iBACA,sBACA,eACA,oBACA,oBACA,eACA,mBACA,gBACA,eACA,eACA,wBACA,qBACA,uBACA,4BACA,qBACA,sBACA,uBACA,kBACA,mBACA,qBACA,qBACA,6BACA,qBACA,sBACA,0BACA,qBACA,qBACA,8BACA,sBACA,qBACA,sBACA,iBACA,iBACA,eACA,kBACA,oCACA,iBACA,0BACA,mBACA,kBACA,iBACA,aACA,oBACA,oBACA,mBACA,uBACA,iBACA,kCACA,iCACA,qBACA,wBACA,qBACA,uBACA,oBACA,sBACA,2BACA,0BACA,yBACA,yBACA,yBACA,0BACA,yBACA,+BACA,sDACA,oCACA,cACA,8BACA,kBACA,sBACA,0BACA,kBACA,gBACA,wBACA,0BACA,wBACA,2BACA,wBACA,eACA,aACA,eACA,cACA,eACA,oBACA,sBACA,oBACA,sBACA,iBACA,oBACA,oBACA,qBACA,wCACA,oBACA,qBACA,sBACA,wBACA,0BACA,0BACA,kBACA,qBACA,6BACA,6BACA,2BACA,iCACA,yBACA,iBACA,mBACA,gBACA,eACA,gBACA,eACA,sBACA,qBACA,qBACA,qBACA,qBACA,+BACA,cACA,gBACA,eACA,eACA,mBACA,wBACA,yBACA,yBACA,gBACA,2BACA,6BACA,kBACA,iBACA,eACA,mBACA,kBACA,gBACA,gBACA,cACA,eACA,eACA,cACA,eACA,eACA,oBACA,eACA,mBACA,oBACA,qBACA,sBACA,sBACA,sBACA,uBACA,uBACA,qBACA,sBACA,qBACA,qBACA,eACA,eACA,mBACA,eACA,kBACA,sBACA,qBACA,oBACA,8BACA,+BACA,6BACA,6BACA,+BACA,oBACA,uBACA,2BACA,iBACA,4BACA,kBACA,kBACA,kBACA,kBACA,kBACA,qBACA,eACA,sBACA,oBACA,qBACA,mBACA,uBACA,kBACA,mBACA,kBACA,uBACA,uBACA,0BACA,WACA,aACA,cACA,eACA,WACA,gBACA,iBACA,aACA,aACA,aACA,sBACA,mBACA,iBACA,6BACA,iBACA,eACA,cACA,kBACA,mBACA,cACA,cACA,kBACA,oBACA,0BACA,0BACA,gBACA,kBACA,sBACA,mBACA,sBACA,2BACA,2BACA,2BACA,oBACA,qBACA,iBACA,kBACA,iBACA,sBACA,qBACA,sBACA,sBACA,oCACA,iBACA,iBACA,gBACA,gBACA,oBACA,qBACA,kBACA,oBACA,eACA,qBACA,uBACA,sBACA,oBACA,8BACA,eACA,gBACA,wBACA,cACA,cACA,cACA,eACA,oBACA,wBACA,6BACA,eACA,gBACA,kCACA,yBACA,wBACA,oBACA,uBACA,6BACA,8BACA,qBACA,uBACA,sBACA,oBACA,2BACA,2BACA,uBACA,2BACA,0BACA,mBACA,mBACA,wBACA,2BACA,cACA,qBACA,kBACA,uBACA,yBACA,mCACA,yBACA,uBACA,+BACA,wBACA,gCACA,wBACA,wBACA,yBACA,4BACA,4BACA,+BACA,mBACA,yBACA,iBACA,gBACA,wBACA,cACA,sBACA,+BACA,wBACA,kBACA,kBACA,cACA,cACA,eACA,iBACA,iBACA,qBACA,wBACA,uBACA,yBACA,cACA,eACA,iCACA,gBACA,oBACA,kBACA,iBACA,yBACA,kBACA,wBACA,wBACA,oBACA,oBACA,+BACA,8BACA,sBACA,qCACA,gBACA,sBACA,wBACA,2BACA,kBACA,YACA,qBACA,mBACA,gBACA,gBACA,kBACA,cACA,iBACA,wBACA,6BACA,aACA,kBACA,kBACA,iBACA,aACA,eACA,0BACA,eACA,2BACA,qBACA,qBACA,uBACA,wBACA,yBACA,yBACA,uCACA,gBACA,iBACA,iBACA,wBACA,wBACA,qBACA,qBACA,yBACA,iBACA,uBACA,kBACA,uCACA,sBACA,mBACA,yBACA,oBACA,uBACA,wBACA,0BACA,gBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,kBACA,0DACA,mBACA,uBACA,sBACA,uBACA,4BACA,2BACA,sBACA,uBACA,kBACA,wBACA,uBACA,eACA,gBACA,iBACA,uBACA,eACA,eACA,gBACA,yBACA,uBACA,yBACA,4BACA,sBACA,wBACA,0BACA,iBACA,iBACA,gBACA,kBACA,eACA,sBACA,kBACA,uBACA,sBACA,oBACA,qCACA,gBACA,sBACA,0BACA,oBACA,qBACA,2BACA,gBACA,qCACA,kBACA,qBACA,0BACA,oBACA,sBACA,0BACA,yBACA,qBACA,oCACA,uBACA,qCACA,qBACA,kCACA,oBACA,gBACA,oBACA,iBACA,iBACA,kBACA,gBACA,oBACA,yBACA,2BACA,wBACA,mBACA,kCACA,mCACA,6BACA,sBACA,0BACA,+BACA,iBACA,YACA,iCACA,sBACA,sBACA,uBACA,wBACA,mBACA,mCACA,qBACA,wBACA,qCACA,gBACA,gBACA,2BACA,oCACA,2BACA,YACA,yBACA,wBACA,iBACA,iBACA,iBACA,iBACA,sBACA,mCACA,gCACA,gBACA,oBACA,sBACA,sBACA,oBACA,oBACA,iBACA,cACA,eACA,kBACA,oBACA,kCACA,eACA,wBACA,qBACA,qCACA,gBACA,uBACA,oBACA,oBACA,qBACA,qCACA,mBACA,gBACA,yBACA,+BACA,YACA,wBACA,wBACA,2BACA,uBACA,oBACA,sCACA,qBACA,sCACA,gCACA,oCACA,eACA,oBACA,mCACA,uCACA,mBACA,qCACA,gBACA,aACA,oBACA,iBACA,kBACA,wBACA,2BACA,wBACA,iBACA,oBACA,gBACA,aACA,uBACA,gBACA,uBACA,qCACA,gBACA,gBACA,mCACA,oBACA,YACA,0BACA,oBACA,wBACA,mBACA,uBACA,iBACA,qBACA,oCACA,4BACA,yBACA,iBACA,kBACA,oBACA,oCACA,cACA,uBACA,eACA,uBACA,mBACA,0BACA,6BACA,2BACA,eACA,mBACA,oBACA,oBACA,qCACA,gBACA,cACA,2BACA,mBACA,eACA,0BACA,0BACA,mBACA,oBACA,gBACA,gBACA,qBACA,cACA,uBACA,kBACA,2BACA,eACA,qBACA,oBACA,oBACA,gBACA,oCACA,qBACA,yBACA,mBACA,eACA,oBACA,uCACA,sBACA,eACA,kBACA,oBACA,iCACA,YACA,oBACA,qCACA,wBACA,2BACA,iCACA,gCACA,aACA,4BACA,iBACA,qBACA,qBACA,gBACA,kBACA,eACA,sBACA,sBACA,0BACA,4BACA,mCACA,uBACA,eACA,mBACA,sBACA,sBACA,yBACA,wBACA,qBACA,aACA,uCACA,wBACA,sBACA,uBACA,yBACA,gBACA,wBACA,uBACA,kBACA,aACA,sBACA,iBACA,gBACA,wBACA,oBACA,qBACA,oBACA,wCACA,mBACA,kBACA,0BACA,mBACA,mBACA,kBACA,oBACA,oBACA,gBACA,8BACA,qBACA,uBACA,wBACA,wBACA,uBACA,uBACA,iBACA,mBACA,mBACA,kBACA,4BACA,oBACA,uBACA,oBACA,gCACA,mCACA,iBACA,mBACA,sBACA,mBACA,kBACA,4BACA,qBACA,oBACA,6BACA,mBACA,qBACA,oBACA,oBACA,0BACA,iCACA,yBACA,oBACA,sBACA,kBACA,4BACA,iBACA,kBACA,oBACA,gBACA,gCACA,uBACA,4BACA,oBACA,oBACA,wBACA,gBACA,iBACA,mBACA,iCACA,6BACA,sBACA,mBACA,2BACA,cACA,qCACA,uBACA,uBACA,yBACA,YACA,uBACA,cACA,sBACA,eACA,gBACA,uBACA,kBACA,oBACA,0BACA,oBACA,aACA,uBACA,YACA,cACA,0BACA,gCACA,2BACA,eACA,mBACA,eACA,wBACA,sBACA,cACA,wBACA,uBACA,wBACA,wBACA,uBACA,wBACA,uBACA,sBACA,uBACA,uBACA,sBACA,sBACA,qBACA,uBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBACA,sBACA,uBACA,sBACA,sBACA,uBACA,sBACA,qBACA,sBACA,wBACA,uBACA,sBACA,qBACA,mBACA,wBACA,qBACA,qBACA,uBACA,yBACA,kBACA,oBACA,kBACA,mBACA,6BACA,mBACA,qBACA,iBACA,oBACA,gBACA,oBACA,qBACA,sBACA,kBACA,uBACA,uBACA,uBACA,yBACA,yBACA,yBACA,sBACA,wBACA,wBACA,wBACA,uBACA,sBACA,sBACA,sBACA,qBACA,qBACA,qBACA,UACA,yBACA,uBACA,cACA,sBACA,sBACA,qBACA,uBACA,sBACA,sBACA,wBACA,qBACA,sBACA,qBACA,sBACA,uBACA,wBACA,uBACA,wBACA,uBACA,uBACA,wBACA,uBACA,wBACA,sBACA,sBACA,qBACA,sBACA,sBACA,2BACA,qBACA,uBACA,sBACA,sBACA,qBACA,sBACA,uBACA,uBACA,sBACA,sBACA,wBACA,iBACA,0BACA,iBACA,cACA,8BACA,sBACA,qBACA,qBACA,oCACA,wCACA,sBACA,kBACA,oBACA,gBACA,iBACA,kBACA,uBACA,oBACA,sBACA,+DACA,uDACA,mBACA,mBACA,kBACA,wBACA,6BACA,kBACA,kBACA,sBACA,sBACA,wBACA,mBACA,yBACA,qBACA,qBACA,iCACA,yBACA,wBACA,oCACA,oCACA,4BACA,+BACA,yBACA,cACA,oBACA,uBACA,oBACA,oBACA,sBACA,qBACA,qBACA,6BACA,uBACA,sBACA,0CACA,yBACA,mBACA,cACA,4BACA,iBACA,yBACA,kBACA,cACA,2BACA,qBACA,aACA,sBACA,iBACA,mBACA,kBACA,oBACA,gBACA,sBACA,uBACA,2BACA,qBACA,gBACA,mBACA,cACA,eACA,yBACA,uBACA,uBACA,mBACA,sBACA,kBACA,oBACA,eACA,sBACA,8BACA,iBACA,kBACA,mBACA,oBACA,kBACA,iBACA,uBACA,kBACA,cACA,kBACA,qBACA,0BACA,YACA,+BACA,iCACA,oBACA,eACA,WACA,oBACA,wBACA,mBACA,oBACA,qCACA,yBACA,iBACA,gBACA,wBACA,qBACA,iCACA,4BACA,gCACA,+BACA,qBACA,qBACA,mBACA,kBACA,iBACA,yBACA,mBACA,uBACA,0BACA,mBACA,uBACA,gBACA,iBACA,0BACA,6BACA,2BACA,wBACA,uBACA,sBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,qBACA,oCACA,qBACA,oBACA,oBACA,uBACA,2BACA,0BACA,gBACA,mBACA,gBACA,mBACA,eACA,sBACA,kBACA,uBACA,yBACA,oBACA,sBACA,mBACA,2BACA,qBACA,mBACA,qBACA,gBACA,aACA,mBACA,uBACA,eACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,wBACA,+BACA,sBACA,gCACA,qBACA,sBACA,wBACA,qBACA,4BACA,6BACA,iCACA,kCACA,qBACA,oBACA,sBACA,qBACA,iBACA,uBACA,mBACA,cACA,4BACA,yBACA,sBACA,uBACA,mBACA,aACA,uBACA,kBACA,iBACA,qBACA,eACA,oBACA,oBACA,kBACA,uBACA,sBACA,oBACA,sBACA,2BACA,2BACA,uBACA,yBACA,sBACA,sBACA,gBACA,qBACA,kBACA,8BACA,gBACA,iBACA,uBACA,qBACA,iBACA,eACA,sBACA,iBACA,oBACA,6BACA,WACA,gBACA,0BACA,iBACA,mBACA,gBACA,oBACA,wBACA,oBACA,kBACA,eACA,gBACA,8BACA,aACA,iBACA,yBACA,aACA,mBACA,mBACA,sBACA,kBACA,wBACA,0BACA,mBACA,eACA,mBACA,gBACA,qBACA,cACA,iBACA,uBACA,sBACA,4BACA,eACA,sBACA,mBACA,aACA,6BACA,iBACA,wBACA,qBACA,yBACA,iBACA,iBACA,iBACA,kBACA,iBACA,wBACA,wBACA,iBACA,oBACA,oBACA,2BACA,aACA,gBACA,mBACA,oBACA,sBACA,iCACA,2BACA,oBACA,aACA,0BACA,2BACA,2BACA,YACA,kBACA,mBACA,wBACA,iBACA,4BACA,qBACA,oBACA,cACA,kBACA,0BACA,uBACA,0BACA,uBACA,oBACA,mBACA,YACA,wBACA,sBACA,yBACA,6BACA,yBACA,+BACA,gBACA,sBACA,sBACA,wBACA,6BACA,sBACA,kCACA,sBACA,gBACA,mBACA,yBACA,gBACA,qBACA,sBACA,+BACA,uBACA,qBACA,qBACA,sBACA,yBACA,sBACA,uBACA,kBACA,2BACA,sBACA,wCACA,iBACA,sBACA,eACA,sBACA,mBACA,qBACA,oBACA,iBACA,uBACA,gBACA,gBACA,oBACA,cACA,YACA,oBACA,mBACA,yBACA,eACA,aACA,oBACA,eACA,+BACA,oBACA,uBACA,oBACA,yBACA,iBACA,qBACA,eACA,qBACA,wBACA,0BACA,sBACA,6BACA,eACA,gCACA,cACA,kBACA,mBACA,oBACA,cACA,kBACA,kBACA,8BACA,mBACA,yBACA,qBACA,qBACA,gBACA,yBACA,qBACA,mCACA,oBACA,+BACA,4BACA,eACA,0BACA,iBACA,sBACA,kBACA,sBACA,wBACA,0BACA,wBACA,iBACA,mBACA,sBACA,sBACA,sBACA,sBACA,sBACA,kBACA,kBACA,qBACA,yBACA,yBACA,6BACA,kBACA,+BACA,+BACA,2BACA,cACA,kBACA,kBACA,gBACA,oBACA,kBACA,qBACA,kBACA,uBACA,2BACA,oBACA,aACA,qBACA,gBACA,eACA,YACA,eACA,sBACA,iBACA,2BACA,qBACA,oBACA,yBACA,wBACA,oBACA,kBACA,wBACA,+BACA,iBACA,sBACA,aACA,2BACA,cACA,iBACA,iBACA,cACA,gBACA,cACA,aACA,cACA,iBACA,gBACA,iBACA,oBACA,iBACA,YACA,aACA,oBACA,eACA,eACA,oBACA,cACA,cACA,cACA,sBACA,eACA,kBACA,cACA,mBACA,aACA,wBACA,kBACA,qBACA,mBACA,wBACA,oBACA,mBACA,kBACA,qBACA,qBACA,mBACA,qBACA,oBACA,mBACA,oBACA,uBACA,uBACA,sBACA,oBACA,mBACA,kBACA,aACA,gBACA,8BACA,mBACA,gBACA,cACA,qBACA,kBACA,YACA,eACA,oBACA,sBACA,2BACA,kBACA,sBACA,cACA,oBACA,sCACA,0BACA,iBACA,oBACA,kBACA,yBACA,0BACA,iBACA,0BACA,kBACA,oBACA,qBACA,kBACA,cACA,eACA,mBACA,oBACA,yBACA,yBACA,aACA,eACA,2BACA,mBACA,oBACA,uBACA,4BACA,gCACA,oBACA,uBACA,oBACA,4BACA,qBACA,iBACA,eACA,oBACA,eACA,gBACA,kBACA,aACA,yBACA,0BACA,qBACA,qBACA,oBACA,oBACA,wBACA,wBACA,UACA,0BACA,qBACA,2BACA,oBACA,0BACA,iBACA,sBACA,kBACA,kBACA,kBACA,eACA,kBACA,uBACA,gBACA,yBACA,kBACA,yBACA,oBACA,2BACA,2BACA,eACA,mBACA,cACA,kBACA,gBACA,8BACA,gBACA,mBACA,aACA,mBACA,4BACA,8BACA,cACA,kBACA,2BACA,2BACA,kBACA,2BACA,wBACA,iBACA,kBACA,yBACA,sBACA,0BACA,qBACA,uBACA,0BACA,sBACA,qBACA,oBACA,sBACA,oBACA,mBACA,gBACA,sBACA,kBACA,gBACA,wBACA,kBACA,0BACA,iBACA,qBACA,iBACA,iBACA,kBACA,iBACA,iBACA,2BACA,yBACA,iBACA,iBACA,gBACA,qBACA,wBACA,qBACA,mBACA,kBACA,qBACA,oBACA,sBACA,oBACA,gBACA,kBACA,sBACA,iBACA,2BACA,eACA,oBACA,gBACA,oBACA,mBACA,mBACA,qBACA,2BACA,gBACA,4BACA,qBACA,yBACA,kBACA,YACA,uBACA,kBACA,mBACA,kBACA,kBACA,gCACA,iBACA,qBACA,+BACA,kBACA,qBACA,sBACA,iBACA,wBACA,eACA,gBACA,mBACA,mBACA,gBACA,eACA,gBACA,eACA,wBACA,kBACA,gBACA,gBACA,2BACA,oBACA,mCACA,sBACA,iBACA,2BACA,uBACA,wBACA,kBACA,cACA,qBACA,8BACA,gBACA,iBACA,mBACA,mBACA,sBACA,oBACA,4BACA,wBACA,kBACA,qBACA,qBACA,oBACA,mBACA,kBACA,sBACA,+BACA,qBACA,yBACA,6BACA,WACA,gBACA,cACA,mBACA,iBACA,kBACA,uBACA,qBACA,oBACA,uBACA,YACA,aACA,cACA,mBACA,oBACA,eACA,YACA,kBACA,iBACA,6BACA,mBACA,wBACA,sBACA,uBACA,uBACA,iBACA,4CACA,oBACA,gBACA,iBACA,aACA,wBACA,cACA,gBACA,uBACA,cACA,gBACA,kBACA,kBACA,gDACA,6BACA,kBACA,oBACA,yBACA,iBACA,gBACA,oBACA,uBACA,qBACA,iBACA,wBACA,2BACA,kBACA,qBACA,iBACA,iBACA,0BACA,wBACA,eACA,kBACA,eACA,kBACA,oBACA,eACA,cACA,eACA,eACA,kBACA,yBACA,2BACA,kBACA,wBACA,iBACA,mBACA,iBACA,gBACA,sBACA,aACA,oBACA,oBACA,qBACA,yBACA,wBACA,8BACA,eACA,kBACA,wBACA,kBACA,wBACA,WACA,eACA,sBACA,cACA,cACA,eACA,gBACA,aACA,gBACA,0BACA,iBACA,kBACA,oBACA,qBACA,oBACA,qBACA,oBACA,gBACA,0BACA,wBACA,iBACA,6BACA,kBACA,gBACA,iBACA,qBACA,8BACA,kBACA,iBACA,uBACA,aACA,oBACA,kBACA,sBACA,iBACA,kBACA,eACA,aACA,aACA,YACA,iBACA,sBACA,sBACA,8BACA,YACA,uBACA,sBACA,sCACA,YACA,kBACA,aACA,cACA,gBACA,aACA,mBACA,8BACA,YACA,mBACA,kBACA,iBACA,gBACA,kBACA,0BACA,sBACA,sBACA,qBACA,uBACA,yBACA,8BACA,6BACA,6BACA,mBACA,qBACA,qBACA,yBACA,aACA,yBACA,mBACA,2BACA,uBACA,eACA,sBACA,6BACA,iBACA,mBACA,oBACA,gBACA,cACA,gBACA,eACA,eACA,uBACA,yBACA,gBACA,mBACA,sBACA,kBACA,UACA,YACA,UACA,kBACA,oBACA,uBACA,wBACA,2BACA,uBACA,qBACA,oBACA,sBACA,sBACA,+CACA,wBACA,kBACA,mBACA,cACA,qBACA,gBACA,kBACA,uBACA,mCACA,kBACA,iBACA,cACA,oBACA,wBACA,aACA,mBACA,kBACA,kCACA,qBACA,2BACA,iBACA,6BACA,oBACA,+BACA,sBACA,sBACA,uBACA,iBACA,4BACA,gBACA,gBACA,gBACA,yBACA,oBACA,cACA,kBACA,yBACA,iBACA,iBACA,kBACA,4BACA,6BACA,kBACA,6BACA,iBACA,iBACA,cACA,cACA,mBACA,sBACA,iBACA,oBACA,cACA,cACA,kBACA,mBACA,oBACA,yBACA,mBACA,qBACA,eACA,oBACA,gBACA,kBACA,mBACA,sBACA,qBACA,iBACA,wBACA,cACA,mBACA,yBACA,uBACA,oBACA,eACA,uBACA,iBACA,oBACA,gCACA,oBACA,iCACA,gBACA,0BACA,2BACA,6BACA,iBACA,YACA,kBACA,kBACA,gBACA,cACA,iBACA,iBACA,gBACA,qBACA,mBACA,wBACA,kBACA,iBACA,mBACA,sBACA,iBACA,sCACA,oBACA,gCACA,mBACA,mBACA,iBACA,iBACA,0BACA,wBACA,yBACA,mBACA,uCACA,qBACA,2BACA,2BACA,gCACA,oBACA,8BACA,2BACA,2BACA,mBACA,iBACA,kBACA,0BACA,0BACA,oBACA,sBACA,oBACA,YACA,yBACA,qBACA,2BACA,sBACA,kBACA,eACA,eACA,sBACA,mBACA,sBACA,kBACA,uBACA,kBACA,oBACA,qBACA,qBACA,kBACA,eACA,sBACA,oBACA,qBACA,oBACA,mBACA,eACA,gBACA,kBACA,oBACA,kBACA,gBACA,0BACA,iBACA,8BACA,qBACA,qBACA,sBACA,wBACA,qBACA,qBACA,gBACA,sBACA,2BACA,sBACA,gCACA,sBACA,gBACA,4BACA,qBACA,gBACA,mBACA,gBACA,uBACA,8BACA,iBACA,aACA,6BACA,WACA,WACA,WACA,WACA,aACA,6BACA,WACA,qBACA,oBACA,uBACA,mBACA,YACA,WACA,iBACA,iBACA,0BACA,mBACA,gBACA,qBACA,wBACA,gBACA,gBACA,gBACA,iBACA,0BACA,eACA,kCACA,6BACA,6BACA,8BACA,0DACA,oBACA,sBACA,uBACA,uBACA,qBACA,uBACA,2BACA,sBACA,gBACA,gBACA,uBACA,uBACA,YACA,4BACA,8BACA,YACA,eACA,mBACA,iBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,oBACA,sBACA,sEACA,mDACA,yDACA,oBACA,qBACA,qBACA,qBACA,eACA,iBACA,qBACA,cACA,kBACA,uBACA,iBACA,iBACA,mBACA,kBACA,iBACA,eACA,iBACA,uBACA,2BACA,mBACA,oBACA,gBACA,uBACA,gBACA,yBACA,iBACA,mBACA,gBACA,sBACA,aACA,gBACA,aACA,aACA,mBACA,YACA,kBACA,qBACA,iBACA,gBACA,gBACA,WACA,kBACA,mBACA,uBACA,uBACA,gBACA,cACA,6BACA,iBACA,mBACA,yBACA,mBACA,yBACA,kBACA,cACA,qBACA,mCACA,oBACA,iBACA,aACA,cACA,kBACA,oBACA,sBACA,gBACA,gBACA,mBACA,oBACA,qBACA,oBACA,sBACA,6BACA,sBACA,4BACA,sBACA,mBACA,uBACA,sBACA,gBACA,aACA,eACA,YACA,kBACA,UACA,mBACA,mBACA,eACA,sBACA,gBACA,uBACA,oBACA,oBACA,qBACA,sBACA,qBACA,qBACA,0BACA,6BACA,sBACA,qBACA,gBACA,kBACA,0BACA,+BACA,mBACA,oBACA,eACA,eACA,kBACA,uBACA,yBACA,kBACA,eACA,uBACA,qBACA,aACA,mBACA,gBACA,qBACA,iBACA,cACA,uBACA,gBACA,qBACA,iBACA,eACA,sBACA,kBACA,wBACA,iBACA,iBACA,mBACA,oBACA,oBACA,yBACA,oBACA,qCACA,wBACA,yCACA,uBACA,qBACA,kBACA,YACA,gBACA,4BACA,gBACA,aACA,gBACA,uBACA,yBACA,kBACA,sBACA,mBACA,iBACA,2BACA,iBACA,iBACA,qBACA,eACA,6BACA,wBACA,sBACA,oBACA,yBACA,uBACA,wBACA,kBACA,oBACA,kBACA,mBACA,sBACA,uBACA,oBACA,qBACA,oBACA,mBACA,oBACA,4BACA,wBACA,eACA,mBACA,yBACA,sCACA,0BACA,iBACA,iCACA,eACA,gCACA,0BACA,mBACA,mBACA,oBACA,0BACA,0BACA,4BACA,uBACA,+BACA,mCACA,eACA,2BACA,gBACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,oBACA,+BACA,oBACA,gBACA,eACA,eACA,iBACA,mBACA,kBACA,qBACA,qBACA,kBACA,oBACA,sBACA,kBACA,sBACA,sBACA,yBACA,oBACA,mBACA,oBACA,wBACA,mBACA,uBACA,qBACA,qBACA,mBACA,qBACA,sBACA,mBACA,qBACA,wBACA,0BACA,0BACA,wDACA,iCACA,uBACA,kBACA,mBACA,0BACA,6BACA,gCACA,cACA,wBACA,wBACA,6CACA,mBACA,gCACA,cACA,eACA,iBACA,eACA,oBACA,wBACA,oBACA,2BACA,eACA,mBACA,qBACA,wBACA,iBACA,kCACA,gBACA,mBACA,aACA,mBACA,sBACA,YACA,eACA,gBACA,oBACA,kBACA,oBACA,sBACA,iBACA,oBACA,eACA,sBACA,mBACA,0BACA,yBACA,oBACA,sBACA,sBACA,mBACA,mBACA,yBACA,qCACA,mCACA,iCACA,oBACA,sBACA,qBACA,oBACA,wBACA,mCACA,wBACA,sCACA,wBACA,WACA,wBACA,gBACA,eACA,kBACA,uBACA,wBACA,oBACA,eACA,8BACA,qBACA,4BACA,qBACA,qBACA,eACA,sBACA,0BACA,oBACA,mBACA,2BACA,kCACA,qBACA,iBACA,sBACA,uBACA,gCACA,0BACA,yBACA,0BACA,qBACA,mBACA,qBACA,oBACA,uBACA,gBACA,oBACA,gBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,sBACA,qBACA,qBACA,qBACA,uBACA,sBACA,qBACA,qBACA,oBACA,mBACA,mBACA,oBACA,qBACA,oBACA,qBACA,sBACA,yBACA,qBACA,oBACA,qBACA,sBACA,qBACA,sBACA,oBACA,sBACA,sBACA,kBACA,oBACA,mBACA,mBACA,oBACA,kBACA,qBACA,mBACA,mBACA,kBACA,mBACA,+BACA,8BACA,0BACA,wBACA,wBACA,wBACA,4BACA,yBACA,6BACA,0BACA,0BACA,4BACA,0BACA,6BACA,yBACA,0BACA,wBACA,kCACA,iCACA,2BACA,kCACA,oEACA,qEACA,iCACA,mBACA,4BACA,wBACA,qBACA,oBACA,sBACA,sBACA,sBACA,qBACA,kBACA,qBACA,oBACA,sBACA,qBACA,mBACA,mBACA,qBACA,oBACA,uBACA,uBACA,oBACA,iBACA,kBACA,kBACA,mBACA,mBACA,oBACA,mBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,oBACA,uBACA,wBACA,uBACA,qBACA,eACA,eACA,cACA,cACA,eACA,gBACA,gBACA,gBACA,mBACA,2BACA,mCACA,mCACA,iBACA,qBACA,8BACA,eACA,oBACA,2BACA,eACA,oBACA,eACA,eACA,wBACA,mBACA,qCACA,iBACA,kBACA,uBACA,gBACA,+BACA,uBACA,sBACA,sBACA,2BACA,kBACA,gCACA,yBACA,eACA,0BACA,kBACA,uBACA,eACA,mBACA,cACA,UACA,eACA,oBACA,qBACA,oCACA,kBACA,cACA,cACA,gCACA,6BACA,WACA,qBACA,uBACA,oBACA,cACA,gBACA,oBACA,oBACA,gBACA,kBACA,mBACA,mBACA,iBACA,yBACA,sBACA,sBACA,UACA,yBACA,gBACA,eACA,mBACA,6BACA,aACA,sBACA,0BACA,uBACA,gBACA,mBACA,gBACA,oCACA,oBACA,gBACA,aACA,eACA,uBACA,kBACA,kBACA,wBACA,eACA,qBACA,yBACA,uBACA,iBACA,sBACA,iBACA,eACA,yBACA,qBACA,cACA,mBACA,oBACA,oBACA,oBACA,2BACA,uCACA,iCACA,iBACA,kBACA,8BACA,aACA,mBACA,wBACA,eACA,qBACA,yCACA,eACA,mBACA,wBACA,qBACA,qBACA,uBACA,uBACA,sBACA,+BACA,aACA,uBACA,oBACA,uCACA,sBACA,gBACA,uBACA,uBACA,wBACA,gBACA,qBACA,cACA,mBACA,eACA,kBACA,mBACA,mBACA,iBACA,kBACA,eACA,eACA,mBACA,6BACA,8BACA,kBACA,oBACA,yBACA,kCACA,kBACA,iBACA,uBACA,gBACA,kBACA,yBACA,kBACA,sBACA,uBACA,kBACA,iBACA,sBACA,mBACA,aACA,eACA,iBACA,cACA,gBACA,aACA,aACA,iBACA,cACA,uBACA,iBACA,cACA,iBACA,oBACA,eACA,oBACA,iBACA,eACA,qBACA,6BACA,iBACA,cACA,qBACA,eACA,oBACA,sBACA,gBACA,oBACA,qBACA,kBACA,qBACA,4BACA,uBACA,kBACA,qBACA,qBACA,qBACA,qBACA,oBACA,4BACA,qBACA,oBACA,sBACA,eACA,oBACA,gBACA,kBACA,yBACA,oBACA,wBACA,oBACA,cACA,oBACA,0BACA,0BACA,0BACA,0BACA,oBACA,cACA,eACA,cACA,6BACA,mBACA,wBACA,iBACA,gBACA,eACA,qBACA,kBACA,cACA,iBACA,oBACA,eACA,oBACA,qBACA,gBACA,kBACA,oBACA,gBACA,uBACA,wBACA,aACA,kBACA,gBACA,iBACA,qBACA,eACA,mBACA,eACA,mBACA,oBACA,oBACA,mBACA,qBACA,iCACA,eACA,sBACA,cACA,wBACA,aACA,sBACA,gBACA,wBACA,aACA,oBACA,qBACA,oBACA,wBACA,eACA,qBACA,kBACA,kBACA,kCACA,uBACA,sBACA,gCACA,cACA,cACA,+BACA,oBACA,iBACA,sBACA,0BACA,0BACA,iBACA,kBACA,iBACA,sCACA,gBACA,kBACA,oBACA,wBACA,iBACA,eACA,uBACA,qBACA,iBACA,aACA,mBACA,kBACA,eACA,gBACA,oBACA,2BACA,cACA,8BACA,gBACA,uBACA,eACA,kBACA,gBACA,yBACA,sBACA,iBACA,qBACA,uBACA,qBACA,qBACA,oBACA,uBACA,mBACA,aACA,oBACA,gBACA,eACA,mBACA,mCACA,8BACA,wCACA,sCACA,aACA,kBACA,oBACA,gBACA,aACA,mBACA,0BACA,kBACA,sBACA,sBACA,qBACA,gBACA,gBACA,iBACA,uCACA,kBACA,oBACA,qBACA,oBACA,cACA,qBACA,eACA,iBACA,6BACA,8BACA,aACA,qBACA,gBACA,aACA,qBACA,iBACA,cACA,mBACA,0BACA,kBACA,2BACA,qBACA,cACA,mBACA,eACA,uBACA,qBACA,kBACA,yBACA,iBACA,uBACA,kBACA,qBACA,sBACA,wBACA,YACA,cACA,8BACA,iBACA,sBACA,eACA,mBACA,kBACA,mBACA,mBACA,kBACA,iBACA,wBACA,eACA,iBACA,YACA,oBACA,gBACA,iBACA,eACA,oBACA,wBACA,oBACA,iBACA,eACA,2BACA,kBACA,iBACA,uBACA,qBACA,qBACA,aACA,kBACA,8BACA,kBACA,eACA,sBACA,eACA,kBACA,eACA,mBACA,kBACA,cACA,qBACA,gBACA,iBACA,oBACA,iBACA,gBACA,wBACA,4BACA,+BACA,gBACA,+BACA,gBACA,gBACA,gBACA,+BACA,kBACA,oBACA,eACA,cACA,8BACA,cACA,yBACA,aACA,yBACA,kBACA,6BACA,qBACA,uBACA,eACA,qBACA,eACA,kBACA,yBACA,uBACA,mBACA,oBACA,sBACA,kBACA,oBACA,kBACA,4BACA,iBACA,eACA,gBACA,mBACA,iBACA,sBACA,2BACA,qBACA,cACA,aACA,qBACA,iBACA,mBACA,kBACA,6BACA,aACA,qBACA,eACA,cACA,cACA,qBACA,qBACA,eACA,qBACA,qBACA,qBACA,eACA,cACA,gBACA,cACA,sBACA,aACA,sBACA,cACA,iBACA,kBACA,iBACA,mBACA,aACA,6BACA,cACA,4BACA,4BACA,4BACA,wBACA,8BACA,eACA,iCACA,YACA,gBACA,sBACA,kBACA,sBACA,cACA,gBACA,gBACA,4BACA,kBACA,eACA,cACA,cACA,gBACA,qBACA,mBACA,8BACA,uBACA,+BACA,iBACA,0BACA,iBACA,gBACA,0BACA,iBACA,0BACA,yBACA,yBACA,qBACA,+BACA,4BACA,+BACA,8BACA,oBACA,uBACA,mBACA,oBACA,oBACA,qBACA,oBACA,8BACA,mBACA,uBACA,qBACA,kBACA,oBACA,SACA,gBACA,cACA,cACA,qCACA,oBACA,qBACA,sBACA,sBACA,qCACA,mCACA,sBACA,6BACA,iBACA,iBACA,uBACA,kBACA,6BACA,8BACA,iBACA,eACA,iBACA,cACA,gCACA,4BACA,gBACA,sBACA,mBACA,sBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,gBACA,eACA,gBACA,qBACA,iBACA,cACA,oBACA,gBACA,mBACA,sBACA,qBACA,aACA,mBACA,6BACA,qBACA,+BACA,qBACA,oBACA,kBACA,4BACA,uBACA,gBACA,aACA,cACA,qBACA,eACA,gBACA,eACA,oBACA,iBACA,kBACA,0BACA,uBACA,cACA,mBACA,oBACA,wBACA,iBACA,8BACA,6BACA,6BACA,iBACA,iBACA,kBACA,wBACA,kBACA,yBACA,gBACA,kBACA,2BACA,uBACA,YACA,mBACA,mBACA,0BACA,kBACA,UACA,YACA,cACA,sBACA,kBACA,wBACA,oBACA,iBACA,kBACA,iBACA,sBACA,iBACA,cACA,iBACA,iBACA,eACA,aACA,uBACA,+DACA,iBACA,eACA,mBACA,iBACA,qBACA,gBACA,qBACA,cACA,gBACA,cACA,gBACA,6BACA,iBACA,mBACA,gCACA,mBACA,6BACA,oBACA,iBACA,gBACA,qBACA,oBACA,gBACA,UACA,oBACA,sBACA,YACA,WACA,YACA,WACA,SACA,gBACA,YACA,UACA,UACA,UACA,cACA,aACA,yBACA,kBACA,cACA,iBACA,oDACA,4BACA,2BACA,6BACA,aACA,cACA,oBACA,2BACA,8BACA,mBACA,0CACA,oBACA,8BACA,mBACA,uBACA,eACA,aACA,gBACA,kBACA,sBACA,6BACA,6BACA,qBACA,iBACA,oBACA,oBACA,eACA,sBACA,qBACA,sBACA,qBACA,qBACA,iBACA,iBACA,kBACA,oBACA,6BACA,uEACA,kBACA,mBACA,6BACA,aACA,6BACA,iBACA,kBACA,iBACA,eACA,kBACA,kBACA,UACA,6BACA,qBACA,iBACA,oBACA,eACA,iBACA,2BACA,qBACA,6BACA,iBACA,iBACA,YACA,oBACA,iBACA,kBACA,mBACA,cACA,6BACA,gDACA,qBACA,qBACA,wBACA,cACA,mEACA,eACA,yDACA,WACA,iEACA,wBACA,6BACA,iBACA,uBACA,qBACA,YACA,eACA,cACA,gBACA,kBACA,mBACA,cACA,UACA,cACA,qBACA,mBACA,cACA,eACA,eACA,wBACA,eACA,qBACA,wBACA,cACA,cACA,cACA,gBACA,wBACA,oBACA,iBACA,yBACA,sBACA,eACA,6BACA,8BACA,+BACA,sBACA,cACA,4BACA,gCACA,8BACA,cACA,cACA,eACA,mBACA,qBACA,qBACA,qBACA,gBACA,mBACA,kBACA,aACA,eACA,qBACA,kBACA,iBACA,gBACA,mBACA,qBACA,qBACA,mBACA,kBACA,qBACA,oBACA,qBACA,6BACA,iBACA,gBACA,oBACA,eACA,oBACA,oBACA,yBACA,oCACA,iBACA,gBACA,qBACA,6BACA,mBACA,oBACA,kCACA,oBACA,wBACA,iBACA,kBACA,cACA,sBACA,mBACA,8BACA,gBACA,2BACA,+BACA,+BACA,8BACA,8BACA,6BACA,6BACA,4BACA,6BACA,6BACA,6BACA,6BACA,2BACA,cACA,iBACA,mBACA,mBACA,sBACA,eACA,qBACA,iBACA,oBACA,eACA,qBACA,eACA,oBACA,qBACA,iBACA,oBACA,cACA,sBACA,gCACA,kBACA,cACA,0BACA,kBACA,kBACA,kBACA,kBACA,YACA,6BACA,cACA,wBACA,aACA,kBACA,wBACA,iBACA,oBACA,sBACA,uBACA,qBACA,oBACA,mBACA,6BACA,qBACA,eACA,sBACA,eACA,mCACA,oBACA,cACA,cACA,eACA,gBACA,cACA,2BACA,qBACA,gBACA,iCACA,iBACA,qBACA,iBACA,gBACA,6BACA,kBACA,qBACA,sBACA,wBACA,oBACA,0BACA,gBACA,gBACA,kBACA,iBACA,4BACA,gBACA,yBACA,eACA,qBACA,uBACA,eACA,oBACA,qBACA,gBACA,kBACA,uBACA,iBACA,WACA,gBACA,yBACA,oBACA,mBACA,gBACA,wBACA,wBACA,oBACA,eACA,4BACA,2BACA,kBACA,QACA,6BACA,4BACA,6BACA,iBACA,sBACA,gBACA,oBACA,sBACA,UACA,cACA,iBACA,8BACA,wBACA,cACA,kBACA,sBACA,sBACA,6BACA,oBACA,qBACA,kBACA,kBACA,gBACA,sBACA,qBACA,yBACA,wBACA,cACA,cACA,oBACA,wBACA,UACA,wBACA,kBACA,oBACA,iCACA,iBACA,yBACA,mBACA,sBACA,gBACA,oBACA,iBACA,gBACA,0BACA,gBACA,uBACA,4BACA,eACA,mBACA,iBACA,2BACA,kBACA,eACA,kBACA,uBACA,yBACA,uBACA,qBACA,+BACA,sBACA,kBACA,cACA,yBACA,cACA,iBACA,oBACA,cACA,4BACA,mBACA,oBACA,kCACA,mBACA,oBACA,wBACA,gBACA,0BACA,2BACA,kBACA,iBACA,0BACA,kBACA,sBACA,qBACA,qBACA,iBACA,qBACA,gBACA,gBACA,0BACA,oBACA,yBACA,gBACA,gBACA,kBACA,iBACA,iBACA,gBACA,qBACA,kBACA,cACA,oBACA,cACA,mCACA,wBACA,mBACA,gBACA,oBACA,iBACA,4BACA,mBACA,gBACA,kBACA,sBACA,mBACA,uBACA,4BACA,gBACA,iBACA,oBACA,0CACA,qBACA,cACA,oBACA,oBACA,kBACA,sBACA,wBACA,uBACA,sBACA,mBACA,kBACA,wBACA,mCACA,eACA,gBACA,qBACA,mBACA,aACA,mBACA,uBACA,iBACA,cACA,yBACA,wBACA,mBACA,8BACA,kBACA,qBACA,yBACA,cACA,wBACA,iBACA,uBACA,cACA,sBACA,gBACA,sBACA,mBACA,mBACA,mBACA,2BACA,6BACA,qBACA,mBACA,yBACA,kBACA,kBACA,2BACA,yBACA,yBACA,yBACA,yBACA,yBACA,2BACA,YACA,mBACA,cACA,qBACA,uBACA,wBACA,mBACA,cACA,oBACA,eACA,cACA,oBACA,mBACA,oBACA,eACA,eACA,gBACA,mBACA,oBACA,cACA,mBACA,+BACA,0BACA,qBACA,8BACA,kCACA,sBACA,oBACA,mBACA,qBACA,oBACA,iBACA,eACA,oBACA,oBACA,eACA,iBACA,2BACA,cACA,mBACA,yBACA,iBACA,iBACA,kBACA,8BACA,iBACA,eACA,mBACA,mBACA,wBACA,kBACA,sBACA,kBACA,gBACA,gBACA,eACA,gBACA,gBACA,eACA,iBACA,eACA,iBACA,iBACA,kBACA,cACA,kBACA,0BACA,2BACA,kBACA,kBACA,wBACA,YACA,uBACA,kBACA,mBACA,uBACA,kBACA,uBACA,kBACA,qBACA,qBACA,oBACA,mBACA,oBACA,0BACA,YACA,uBACA,4BACA,aACA,qBACA,uBACA,mBACA,kBACA,qBACA,mBACA,wBACA,kBACA,iBACA,qBACA,qBACA,gBACA,mBACA,kBACA,6BACA,+BACA,8BACA,2BACA,+BACA,8BACA,6BACA,6BACA,8BACA,6BACA,uBACA,+BACA,+BACA,+BACA,+BACA,8BACA,gBACA,mBACA,uBACA,iBACA,sBACA,mBACA,wBACA,qBACA,cACA,cACA,cACA,cACA,qBACA,uBACA,mBACA,kBACA,kBACA,qBACA,oBACA,oBACA,gBACA,sBACA,qBACA,iBACA,kBACA,6BACA,uBACA,iBACA,qBACA,mBACA,kBACA,iBACA,+BACA,iBACA,gBACA,sBACA,gBACA,kBACA,oBACA,sCACA,kBACA,iBACA,mBACA,wBACA,oCACA,qBACA,eACA,yBACA,wBACA,kBACA,gBACA,sBACA,sBACA,2BACA,qBACA,oBACA,wBACA,yBACA,yBACA,yBACA,8BACA,8BACA,+BACA,6BACA,0BACA,iBACA,yBACA,sBACA,mBACA,wBACA,mBACA,kBACA,8BACA,gBACA,aACA,qBACA,oBACA,cACA,sBACA,kBACA,aACA,eACA,eACA,2BACA,8BACA,6BACA,uBACA,eACA,sBACA,sBACA,gBACA,uBACA,iBACA,iBACA,+BACA,iBACA,gBACA,2BACA,eACA,iBACA,oBACA,0BACA,kBACA,mBACA,6BACA,4BACA,iBACA,cACA,uBACA,kBACA,iBACA,kBACA,iBACA,uBACA,mBACA,0BACA,kBACA,0BACA,cACA,kCACA,oBACA,YACA,kBACA,qBACA,6BACA,0CACA,oBACA,wBACA,gBACA,+BACA,8BACA,kBACA,cACA,wBACA,+BACA,yBACA,qBACA,YACA,qBACA,cACA,iBACA,aACA,oBACA,qBACA,uBACA,wBACA,eACA,iBACA,gBACA,mCACA,iBACA,+BACA,sBACA,gBACA,kBACA,2BACA,uBACA,qBACA,wBACA,qBACA,4BACA,mBACA,mBACA,mBACA,oBACA,4BACA,sBACA,qBACA,WACA,eACA,qBACA,iBACA,2BACA,sCACA,qBACA,wBACA,mBACA,sBACA,sBACA,sBACA,gBACA,wBACA,oBACA,qBACA,aACA,mBACA,YACA,aACA,yBACA,oBACA,iBACA,oBACA,8BACA,mBACA,mBACA,mBACA,iCACA,oCACA,eACA,0BACA,UACA,iBACA,cACA,eACA,sBACA,oBACA,gCACA,mBACA,wBACA,wBACA,uBACA,wBACA,uBACA,uBACA,wBACA,sBACA,sBACA,qBACA,0BACA,aACA,qBACA,iBACA,mBACA,eACA,qBACA,yBACA,4CACA,gBACA,gBACA,iBACA,oBACA,sBACA,wBACA,uBACA,sBACA,sBACA,SACA,8BACA,aACA,iBACA,eACA,kBACA,oBACA,wBACA,oBACA,kBACA,uBACA,oBACA,sBACA,mBACA,uBACA,qBACA,6BACA,mBACA,gBACA,sBACA,UACA,mBACA,kBACA,yBACA,UACA,sBACA,0BACA,oBACA,wBACA,gBACA,YACA,kBACA,mBACA,uBACA,iBACA,oBACA,UACA,iBACA,cACA,gBACA,qBACA,oBACA,mBACA,eACA,8BACA,mBACA,gBACA,qBACA,iBACA,oBACA,2BACA,UACA,aACA,mBACA,uBACA,6BACA,6BACA,yBACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,6BACA,4BACA,yCACA,wBACA,cACA,eACA,sBACA,qBACA,cACA,qBACA,qBACA,4BACA,cACA,sBACA,UACA,eACA,+BACA,UACA,iBACA,uBACA,eACA,kBACA,wBACA,qBACA,YACA,cACA,SACA,mCACA,gBACA,0BACA,oBACA,4EACA,sCACA,6BACA,oBACA,mCACA,uBACA,QACA,uBACA,+BACA,+BACA,uBACA,SACA,oBACA,0BACA,2BACA,iBACA,mBACA,iBACA,aACA,kBACA,wCACA,oBACA,0BACA,wBACA,kBACA,uBACA,uBACA,WACA,2BACA,iBACA,eACA,4BACA,kBACA,4BACA,kBACA,8BACA,yBACA,sBACA,mCACA,mBACA,8BACA,wBACA,eACA,oBACA,kBACA,6BACA,uBACA,iCACA,+BACA,oBACA,aACA,mBACA,YACA,4CACA,iBACA,2BACA,eACA,eACA,gBACA,cACA,uBACA,cACA,eACA,sBACA,oBACA,eACA,eACA,sBACA,mBACA,sCACA,4BACA,4CACA,8BACA,iBACA,WACA,uBACA,8BACA,kBACA,uBACA,yBACA,UACA,wBACA,kBACA,yBACA,qBACA,qBACA,qCACA,yBACA,mBACA,UACA,4DACA,gBACA,mBACA,eACA,iCACA,iBACA,iBACA,qCACA,0BACA,6BACA,oCACA,gCACA,0BACA,uBACA,mBACA,iBACA,gBACA,sBACA,sBACA,uBACA,yBACA,sBACA,gCACA,cACA,cACA,aACA,oBACA,qBACA,sBACA,qBACA,qBACA,cACA,cACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,mBACA,eACA,iBACA,oBACA,sBACA,6BACA,kBACA,wBACA,yBACA,2BACA,6BACA,uBACA,eACA,aACA,kBACA,uBACA,iBACA,8CACA,cACA,gBACA,sBACA,iBACA,uBACA,yBACA,iBACA,eACA,eACA,sBACA,mBACA,uBACA,gDACA,oBACA,oCACA,gEACA,mBACA,8CACA,UACA,YACA,+BACA,uBACA,uBACA,mBACA,gCACA,kBACA,oBACA,oBACA,cACA,6BACA,6BACA,YACA,kBACA,YACA,YACA,aACA,oBACA,sBACA,6BACA,oBACA,6BACA,kBACA,sBACA,sBACA,cACA,iBACA,2BACA,eACA,aACA,oBACA,oBACA,eACA,cACA,aACA,cACA,cACA,cACA,eACA,iBACA,sBACA,aACA,oBACA,kBACA,kBACA,kBACA,uBACA,eACA,gBACA,eACA,gBACA,WACA,sBACA,qBACA,sBACA,cACA,wBACA,sBACA,wBACA,eACA,eACA,cACA,iBACA,6BACA,eACA,uBACA,aACA,eACA,cACA,UACA,oBACA,gBACA,oBACA,eACA,cACA,uBACA,kBACA,yBACA,uBACA,8BACA,6BACA,oBACA,mBACA,6BACA,eACA,iBACA,sBACA,gBACA,eACA,oBACA,iBACA,UACA,aACA,sBACA,sBACA,sBACA,iBACA,WACA,WACA,eACA,uBACA,2BACA,oBACA,aACA,8BACA,iCACA,mBACA,gBACA,eACA,oBACA,wBACA,sBACA,qBACA,sCACA,8BACA,qBACA,aACA,iBACA,uBACA,aACA,mBACA,qBACA,iBACA,0BACA,0BACA,0BACA,yBACA,0BACA,6BACA,yBACA,yBACA,yBACA,yBACA,wBACA,wBACA,yBACA,wBACA,yBACA,wBACA,yBACA,yBACA,yBACA,yBACA,2BACA,2BACA,2BACA,yBACA,yBACA,yBACA,wBACA,yBACA,yBACA,wBACA,yBACA,yBACA,yBACA,wBACA,wBACA,yBACA,0BACA,2BACA,wBACA,0BACA,yBACA,wBACA,yBACA,wBACA,iCACA,0CACA,2BACA,wBACA,wBACA,yBACA,yBACA,2BACA,uBACA,yBACA,wBACA,yBACA,yBACA,0BACA,wBACA,0BACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,6BACA,8BACA,8BACA,6BACA,4BACA,4BACA,6BACA,6BACA,4BACA,2BACA,2BACA,4BACA,6BACA,2BACA,4BACA,4BACA,2BACA,4BACA,2BACA,4BACA,2BACA,2BACA,4BACA,2BACA,4BACA,4BACA,+BACA,4BACA,2BACA,2BACA,2BACA,6BACA,+BACA,8BACA,+BACA,8BACA,2BACA,2BACA,2BACA,6BACA,4BACA,aACA,kBACA,mBACA,oBACA,qBACA,aACA,cACA,2BACA,aACA,iBACA,2BACA,2BACA,6BACA,8BACA,uBACA,wBACA,wBACA,cACA,sBACA,uBACA,wBACA,mBACA,sBACA,uBACA,oBACA,iBACA,aACA,YACA,kCACA,iBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,uBACA,iBACA,eACA,wBACA,+BACA,eACA,mBACA,iBACA,WACA,4BACA,6BACA,8BACA,6BACA,sBACA,qBACA,qBACA,yBACA,mBACA,uBACA,cACA,uBACA,6BACA,qBACA,mBACA,iBACA,gBACA,aACA,qBACA,mBACA,uBACA,kBACA,cACA,gBACA,iBACA,iBACA,sBACA,kBACA,sBACA,UACA,kBACA,qBACA,qBACA,eACA,kBACA,uBACA,qBACA,kBACA,kBACA,sBACA,iBACA,yBACA,uBACA,sBACA,sBACA,sBACA,uBACA,uBACA,sBACA,sBACA,eACA,oBACA,iBACA,mBACA,sBACA,iBACA,WACA,kBACA,oBACA,cACA,gBACA,iBACA,oBACA,YACA,qBACA,qBACA,qBACA,wBACA,yBACA,yBACA,kBACA,eACA,qBACA,sBACA,iBACA,kBACA,sBACA,sBACA,uBACA,oBACA,iBACA,oBACA,mBACA,iBACA,mBACA,qBACA,8BACA,uBACA,yBACA,uBACA,iBACA,iBACA,eACA,mBACA,aACA,eACA,kBACA,gBACA,oBACA,yBACA,uBACA,oBACA,mBACA,cACA,eACA,eACA,aACA,YACA,2BACA,6BACA,qBACA,oBACA,qBACA,oBACA,qBACA,qBACA,+BACA,4BACA,2BACA,4BACA,2BACA,4BACA,8BACA,oBACA,oBACA,mBACA,mBACA,mBACA,sBACA,qBACA,eACA,mBACA,cACA,iBACA,qBACA,kBACA,iBACA,qBACA,kBACA,eACA,oBACA,yBACA,YACA,yBACA,cACA,gBACA,aACA,iBACA,aACA,6BACA,4BACA,qBACA,gBACA,eACA,cACA,oBACA,wBACA,qBACA,uBACA,iBACA,eACA,iBACA,uCACA,mBACA,oBACA,oBACA,mBACA,eACA,sBACA,4BACA,4BACA,iBACA,2BACA,gBACA,uBACA,YACA,qBACA,gBACA,kBACA,aACA,eACA,oBACA,cACA,oBACA,gBACA,wBACA,oBACA,cACA,cACA,gBACA,0BACA,gBACA,sBACA,qBACA,iBACA,mBACA,6BACA,cACA,sBACA,eACA,wBACA,6BACA,wBACA,uBACA,iBACA,6BACA,iBACA,kBACA,oBACA,gBACA,cACA,oBACA,gBACA,WACA,cACA,aACA,iBACA,aACA,gBACA,kBACA,oBACA,uBACA,YACA,YACA,cACA,qBACA,oBACA,sBACA,aACA,iBACA,gBACA,eACA,uBACA,2BACA,iBACA,iBACA,aACA,cACA,mBACA,oBACA,oBACA,8BACA,mBACA,oBACA,6BACA,mBACA,oBACA,gBACA,eACA,eACA,+BACA,gBACA,gBACA,kBACA,6BACA,gBACA,aACA,yBACA,eACA,2BACA,2BACA,sBACA,qBACA,qBACA,gBACA,6BACA,4BACA,oBACA,oBACA,mBACA,4BACA,mBACA,iBACA,uBACA,6BACA,oBACA,yBACA,iBACA,6BACA,mBACA,aACA,qBACA,WACA,gBACA,aACA,4BACA,kBACA,aACA,sBACA,mBACA,4BACA,iBACA,gBACA,wBACA,iBACA,qBACA,2BACA,aACA,kBACA,gBACA,8BACA,sBACA,mBACA,iBACA,oBACA,gBACA,mBACA,iBACA,sBACA,6BACA,iBACA,YACA,cACA,aACA,sBACA,8BACA,gBACA,WACA,gBACA,qBACA,gBACA,eACA,WACA,iBACA,sBACA,cACA,+BACA,2BACA,aACA,aACA,mBACA,wBACA,kBACA,aACA,iBACA,iBACA,mBACA,wBACA,iBACA,qBACA,iBACA,qBACA,0BACA,iBACA,yBACA,mBACA,qBACA,wBACA,mBACA,mBACA,iBACA,6BACA,gBACA,gBACA,iBACA,kBACA,wBACA,gBACA,iBACA,iBACA,kBACA,iBACA,kBACA,kBACA,mBACA,qBACA,oBACA,YACA,oBACA,oBACA,uBACA,wBACA,wBACA,mBACA,iBACA,2BACA,wBACA,2BACA,iBACA,eACA,yBACA,wBACA,0BACA,yBACA,0BACA,wBACA,uBACA,sBACA,wBACA,4BACA,sBACA,sBACA,sBACA,uBACA,sBACA,uBACA,uBACA,0BACA,uBACA,wBACA,wBACA,yBACA,uBACA,wBACA,uBACA,wBACA,gBACA,iBACA,eACA,YACA,qBACA,gBACA,oBACA,YACA,kBACA,cACA,gBACA,uBACA,sBACA,qBACA,eACA,YACA,8BACA,YACA,wBACA,iBACA,iBACA,eACA,iBACA,gBACA,yBACA,kBACA,4BACA,uBACA,mBACA,kBACA,aACA,uBACA,kBACA,kBACA,wBACA,0BACA,oBACA,sCACA,yBACA,eACA,aACA,eACA,gBACA,sBACA,qBACA,iBACA,sBACA,mBACA,oBACA,oBACA,oBACA,oBACA,cACA,uBACA,uBACA,eACA,eACA,gBACA,gBACA,kBACA,sBACA,kBACA,yBACA,kBACA,oBACA,wBACA,gBACA,gBACA,iBACA,iBACA,sBACA,qBACA,2BACA,kBACA,wBACA,qCACA,oBACA,wBACA,kBACA,sBACA,qBACA,6BACA,0BACA,2BACA,oBACA,cACA,qBACA,eACA,mBACA,sBACA,sBACA,eACA,iBACA,sBACA,eACA,sBACA,aACA,sBACA,oBACA,gBACA,uBACA,gBACA,oBACA,aACA,mBACA,oBACA,aACA,0BACA,uBACA,uBACA,iBACA,uBACA,uBACA,wBACA,qBACA,qBACA,sBACA,sBACA,qBACA,sBACA,uBACA,uBACA,qBACA,qBACA,cACA,aACA,cACA,UACA,oBACA,oBACA,kBACA,gBACA,qBACA,sBACA,iBACA,qBACA,gBACA,eACA,mBACA,qBACA,gBACA,gBACA,eACA,WACA,yBACA,kBACA,eACA,mBACA,WACA,iBACA,gBACA,oBACA,kBACA,sBACA,gBACA,kBACA,mBACA,iBACA,gBACA,gBACA,+BACA,2BACA,2BACA,kBACA,sBACA,sBACA,iBACA,iBACA,qBACA,gBACA,gBACA,iBACA,+BACA,gBACA,YACA,0BACA,qBACA,gBACA,yBACA,mBACA,0BACA,gBACA,gBACA,eACA,iBACA,kBACA,gBACA,mBACA,aACA,qBACA,gBACA,gBACA,2BACA,wBACA,iBACA,aACA,kBACA,iBACA,qBACA,0BACA,kBACA,kBACA,0BACA,4BACA,iBACA,iBACA,4BACA,6BACA,mBACA,iBACA,kBACA,2BACA,mBACA,gBACA,yBACA,0BACA,mBACA,6BACA,kBACA,0BACA,gBACA,cACA,wBACA,0BACA,iBACA,mBACA,0BACA,qBACA,sBACA,kBACA,mBACA,iBACA,YACA,qBACA,cACA,oBACA,gBACA,cACA,oBACA,eACA,sBACA,iBACA,cACA,aACA,iBACA,iBACA,iBACA,iBACA,iBACA,gBACA,uBACA,aACA,cACA,cACA,yBACA,eACA,kBACA,gBACA,cACA,mBACA,gBACA,aACA,eACA,gBACA,eACA,wBACA,eACA,aACA,cACA,wBACA,oBACA,eACA,gBACA,aACA,aACA,wBACA,gBACA,wBACA,iBACA,eACA,aACA,iBACA,eACA,aACA,cACA,cACA,YACA,gBACA,oBACA,mBACA,mBACA,cACA,kBACA,kBACA,eACA,eACA,cACA,eACA,mBACA,kBACA,mBACA,mBACA,mBACA,sCACA,eACA,gBACA,eACA,eACA,cACA,gBACA,eACA,eACA,eACA,gBACA,cACA,wBACA,+BACA,gBACA,mBACA,cACA,cACA,cACA,cACA,qBACA,sBACA,gBACA,gBACA,SACA,iBACA,WACA,yBACA,oBACA,mBACA,wBACA,uBACA,kCACA,iBACA,gBACA,cACA,iBACA,mBACA,mBACA,mBACA,uBACA,gBACA,iBACA,mBACA,sBACA,sBACA,oBACA,iBACA,uBACA,uBACA,uBACA,gDACA,sBACA,oBACA,wBACA,oBACA,kBACA,oBACA,qBACA,mBACA,mBACA,oBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,2BACA,2BACA,uBACA,qBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,mBACA,mBACA,mBACA,mBACA,oBACA,qBACA,oBACA,oBACA,uBACA,uBACA,mBACA,oBACA,oBACA,qBACA,iBACA,oBACA,mBACA,qBACA,sBACA,oBACA,oBACA,oBACA,mBACA,mBACA,qBACA,qBACA,qBACA,qBACA,kBACA,qBACA,mBACA,oBACA,qBACA,qBACA,sBACA,qBACA,oBACA,oBACA,qBACA,mBACA,oBACA,qBACA,mBACA,iBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,oBACA,qBACA,qBACA,oBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,mBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,yBACA,eACA,eACA,eACA,gBACA,cACA,gBACA,gBACA,sBACA,eACA,eACA,cACA,kBACA,mBACA,qBACA,mBACA,oBACA,cACA,gBACA,cACA,mBACA,uBACA,sBACA,oBACA,wBACA,0BACA,qBACA,wBACA,uBACA,uBACA,sBACA,6BACA,wBACA,oBACA,uBACA,mBACA,kBACA,mBACA,qBACA,uBACA,uBACA,uBACA,osBACA,sBACA,aACA,iBACA,oBACA,qBACA,YACA,mBACA,iBACA,cACA,eACA,gBACA,eACA,yBACA,eACA,iBACA,gBACA,WACA,aACA,eACA,cACA,gBACA,mBACA,sBACA,mBACA,UACA,4BACA,iBACA,qBACA,kBACA,eACA,oBACA,iBACA,YACA,oBACA,eACA,cACA,0BACA,sBACA,sBACA,sBACA,oBACA,sBACA,qBACA,qBACA,sBACA,sBACA,sBACA,sBACA,qBACA,qBACA,2BACA,kBACA,eACA,mBACA,cACA,qBACA,sBACA,uBACA,qBACA,iBACA,uBACA,yBACA,uBACA,kBACA,eACA,0BACA,0BACA,cACA,gBACA,gBACA,eACA,eACA,cACA,WACA,YACA,YACA,YACA,kBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,wBACA,wBACA,qBACA,qBACA,oBACA,mBACA,cACA,WACA,WACA,aACA,WACA,cACA,cACA,YACA,0BACA,cACA,aACA,wBACA,qBACA,gCACA,gCACA,gCACA,wBACA,kBACA,wBACA,wBACA,wBACA,wBACA,wBACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,yCACA,yCACA,wCACA,wCACA,mCACA,sCACA,mCACA,uCACA,yBACA,0CACA,sBACA,qBACA,0CACA,qBACA,qBACA,8BACA,8BACA,oCACA,qCACA,oCACA,qBACA,qBACA,wBACA,+BACA,8BACA,oCACA,+B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","file":"../ExtensionSource/common-2.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.defaultMemoize = defaultMemoize;\nexports.createSelectorCreator = createSelectorCreator;\nexports.createStructuredSelector = createStructuredSelector;\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = defaultMemoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = exports.createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {\n  conversionUtil,\n  multiplyCurrencies,\n} from '../../../shared/modules/conversion.utils';\nimport { addHexPrefix } from '../../../app/scripts/lib/util';\n\nconst MIN_GAS_PRICE_DEC = '0';\nconst MIN_GAS_PRICE_HEX = parseInt(MIN_GAS_PRICE_DEC, 10).toString(16);\nconst MIN_GAS_LIMIT_DEC = '21000';\nconst MAX_GAS_LIMIT_DEC = '7920027';\nconst MIN_GAS_LIMIT_HEX = parseInt(MIN_GAS_LIMIT_DEC, 10).toString(16);\n\nconst HIGH_FEE_WARNING_MULTIPLIER = 1.5;\nconst MIN_GAS_PRICE_GWEI = addHexPrefix(\n  conversionUtil(MIN_GAS_PRICE_HEX, {\n    fromDenomination: 'WEI',\n    toDenomination: 'GWEI',\n    fromNumericBase: 'hex',\n    toNumericBase: 'hex',\n    numberOfDecimals: 1,\n  }),\n);\n\nconst MIN_GAS_TOTAL = multiplyCurrencies(MIN_GAS_LIMIT_HEX, MIN_GAS_PRICE_HEX, {\n  toNumericBase: 'hex',\n  multiplicandBase: 16,\n  multiplierBase: 16,\n});\n\nconst TOKEN_TRANSFER_FUNCTION_SIGNATURE = '0xa9059cbb';\nconst COLLECTIBLE_TRANSFER_FROM_FUNCTION_SIGNATURE = '0x23b872dd';\n\nconst INSUFFICIENT_FUNDS_ERROR = 'insufficientFunds';\nconst INSUFFICIENT_TOKENS_ERROR = 'insufficientTokens';\nconst NEGATIVE_ETH_ERROR = 'negativeETH';\nconst INVALID_RECIPIENT_ADDRESS_ERROR = 'invalidAddressRecipient';\nconst INVALID_RECIPIENT_ADDRESS_NOT_ETH_NETWORK_ERROR =\n  'invalidAddressRecipientNotEthNetwork';\nconst REQUIRED_ERROR = 'required';\nconst KNOWN_RECIPIENT_ADDRESS_WARNING = 'knownAddressRecipient';\nconst CONTRACT_ADDRESS_ERROR = 'contractAddressError';\nconst CONFUSING_ENS_ERROR = 'confusingEnsDomain';\nconst ENS_NO_ADDRESS_FOR_NAME = 'noAddressForName';\nconst ENS_NOT_FOUND_ON_NETWORK = 'ensNotFoundOnCurrentNetwork';\nconst ENS_NOT_SUPPORTED_ON_NETWORK = 'ensNotSupportedOnNetwork';\nconst ENS_ILLEGAL_CHARACTER = 'ensIllegalCharacter';\nconst ENS_UNKNOWN_ERROR = 'ensUnknownError';\nconst ENS_REGISTRATION_ERROR = 'ensRegistrationError';\n\nexport {\n  MAX_GAS_LIMIT_DEC,\n  HIGH_FEE_WARNING_MULTIPLIER,\n  INSUFFICIENT_FUNDS_ERROR,\n  INSUFFICIENT_TOKENS_ERROR,\n  INVALID_RECIPIENT_ADDRESS_ERROR,\n  KNOWN_RECIPIENT_ADDRESS_WARNING,\n  CONTRACT_ADDRESS_ERROR,\n  INVALID_RECIPIENT_ADDRESS_NOT_ETH_NETWORK_ERROR,\n  ENS_NO_ADDRESS_FOR_NAME,\n  ENS_NOT_FOUND_ON_NETWORK,\n  ENS_NOT_SUPPORTED_ON_NETWORK,\n  ENS_ILLEGAL_CHARACTER,\n  ENS_UNKNOWN_ERROR,\n  ENS_REGISTRATION_ERROR,\n  MIN_GAS_LIMIT_DEC,\n  MIN_GAS_LIMIT_HEX,\n  MIN_GAS_PRICE_DEC,\n  MIN_GAS_PRICE_GWEI,\n  MIN_GAS_PRICE_HEX,\n  MIN_GAS_TOTAL,\n  NEGATIVE_ETH_ERROR,\n  REQUIRED_ERROR,\n  CONFUSING_ENS_ERROR,\n  TOKEN_TRANSFER_FUNCTION_SIGNATURE,\n  COLLECTIBLE_TRANSFER_FROM_FUNCTION_SIGNATURE,\n};\n","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T = signed_crc_table();\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t}\n\tif(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf(buf, seed) {\n\tif(buf.length > 10000) return crc32_buf_8(buf, seed);\n\tvar C = seed ^ -1, L = buf.length - 3;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf_8(buf, seed) {\n\tvar C = seed ^ -1, L = buf.length - 7;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T[(C ^ c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn C ^ -1;\n}\nCRC32.table = T;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = exports._getInitializedChains = void 0;\nvar mainnet_json_1 = __importDefault(require(\"./mainnet.json\"));\nvar ropsten_json_1 = __importDefault(require(\"./ropsten.json\"));\nvar rinkeby_json_1 = __importDefault(require(\"./rinkeby.json\"));\nvar kovan_json_1 = __importDefault(require(\"./kovan.json\"));\nvar goerli_json_1 = __importDefault(require(\"./goerli.json\"));\nvar calaveras_json_1 = __importDefault(require(\"./calaveras.json\"));\n/**\n * @hidden\n */\nfunction _getInitializedChains(customChains) {\n    var e_1, _a;\n    var names = {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '5': 'goerli',\n        '123': 'calaveras',\n    };\n    var chains = {\n        mainnet: mainnet_json_1.default,\n        ropsten: ropsten_json_1.default,\n        rinkeby: rinkeby_json_1.default,\n        kovan: kovan_json_1.default,\n        goerli: goerli_json_1.default,\n        calaveras: calaveras_json_1.default,\n    };\n    if (customChains) {\n        try {\n            for (var customChains_1 = __values(customChains), customChains_1_1 = customChains_1.next(); !customChains_1_1.done; customChains_1_1 = customChains_1.next()) {\n                var chain = customChains_1_1.value;\n                var name_1 = chain.name;\n                names[chain.chainId.toString()] = name_1;\n                chains[name_1] = chain;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (customChains_1_1 && !customChains_1_1.done && (_a = customChains_1.return)) _a.call(customChains_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    chains['names'] = names;\n    return chains;\n}\nexports._getInitializedChains = _getInitializedChains;\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexports.chains = _getInitializedChains();\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIPs = void 0;\nexports.EIPs = {\n    1559: require('./1559.json'),\n    2315: require('./2315.json'),\n    2537: require('./2537.json'),\n    2565: require('./2565.json'),\n    2718: require('./2718.json'),\n    2929: require('./2929.json'),\n    2930: require('./2930.json'),\n    3198: require('./3198.json'),\n    3529: require('./3529.json'),\n    3541: require('./3541.json'),\n    3554: require('./3554.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = void 0;\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n    ['berlin', require('./berlin.json')],\n    ['london', require('./london.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar _1 = require(\".\");\nvar TransactionFactory = /** @class */ (function () {\n    // It is not possible to instantiate a TransactionFactory object.\n    function TransactionFactory() {\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param txOptions - Options to pass on to the constructor of the transaction\n     */\n    TransactionFactory.fromTxData = function (txData, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (!('type' in txData) || txData.type === undefined) {\n            // Assume legacy transaction\n            return _1.Transaction.fromTxData(txData, txOptions);\n        }\n        else {\n            var txType = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(txData.type)).toNumber();\n            if (txType === 0) {\n                return _1.Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 1) {\n                return _1.AccessListEIP2930Transaction.fromTxData(txData, txOptions);\n            }\n            else if (txType === 2) {\n                return _1.FeeMarketEIP1559Transaction.fromTxData(txData, txOptions);\n            }\n            else {\n                throw new Error(\"Tx instantiation with type \" + txType + \" not supported\");\n            }\n        }\n    };\n    /**\n     * This method tries to decode serialized data.\n     *\n     * @param data - The data Buffer\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromSerializedData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (data[0] <= 0x7f) {\n            // Determine the type.\n            var EIP = void 0;\n            switch (data[0]) {\n                case 1:\n                    EIP = 2930;\n                    break;\n                case 2:\n                    EIP = 1559;\n                    break;\n                default:\n                    throw new Error(\"TypedTransaction with ID \" + data[0] + \" unknown\");\n            }\n            if (EIP === 1559) {\n                return _1.FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions);\n            }\n            else {\n                // EIP === 2930\n                return _1.AccessListEIP2930Transaction.fromSerializedTx(data, txOptions);\n            }\n        }\n        else {\n            return _1.Transaction.fromSerializedTx(data, txOptions);\n        }\n    };\n    /**\n     * When decoding a BlockBody, in the transactions field, a field is either:\n     * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n     * A Buffer[] (Legacy Transaction)\n     * This method returns the right transaction.\n     *\n     * @param data - A Buffer or Buffer[]\n     * @param txOptions - The transaction options\n     */\n    TransactionFactory.fromBlockBodyData = function (data, txOptions) {\n        if (txOptions === void 0) { txOptions = {}; }\n        if (Buffer.isBuffer(data)) {\n            return this.fromSerializedData(data, txOptions);\n        }\n        else if (Array.isArray(data)) {\n            // It is a legacy transaction\n            return _1.Transaction.fromValuesArray(data, txOptions);\n        }\n        else {\n            throw new Error('Cannot decode transaction: unknown type input');\n        }\n    };\n    /**\n     * This helper method allows one to retrieve the class which matches the transactionID\n     * If transactionID is undefined, returns the legacy transaction class.\n     * @deprecated - This method is deprecated and will be removed on the next major release\n     * @param transactionID\n     * @param common - This option is not used\n     */\n    // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n    TransactionFactory.getTransactionClass = function (transactionID, common) {\n        if (transactionID === void 0) { transactionID = 0; }\n        var legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff);\n        if (legacyTxn) {\n            return _1.Transaction;\n        }\n        switch (transactionID) {\n            case 1:\n                return _1.AccessListEIP2930Transaction;\n            case 2:\n                return _1.FeeMarketEIP1559Transaction;\n            default:\n                throw new Error(\"TypedTransaction with ID \" + transactionID + \" unknown\");\n        }\n    };\n    return TransactionFactory;\n}());\nexports.default = TransactionFactory;\n//# sourceMappingURL=transactionFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 1;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nvar AccessListEIP2930Transaction = /** @class */ (function (_super) {\n    __extends(AccessListEIP2930Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function AccessListEIP2930Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _a, _b;\n        var _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'berlin';\n        var chainId = txData.chainId, accessList = txData.accessList, gasPrice = txData.gasPrice;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        // EIP-2718 check is done in Common\n        if (!_this.common.isActivatedEIP(2930)) {\n            throw new Error('EIP-2930 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.gasPrice = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(gasPrice === '' ? '0x' : gasPrice));\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            throw new Error('The y-parity of the transaction should either be 0 or 1');\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AccessListEIP2930Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    AccessListEIP2930Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new AccessListEIP2930Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     */\n    AccessListEIP2930Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: \" + TRANSACTION_TYPE + \", received: \" + serialized\n                .slice(0, 1)\n                .toString('hex'));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return AccessListEIP2930Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n     */\n    AccessListEIP2930Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     */\n    AccessListEIP2930Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 8 && values.length !== 11) {\n            throw new Error('Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).');\n        }\n        var _a = __read(values, 11), chainId = _a[0], nonce = _a[1], gasPrice = _a[2], gasLimit = _a[3], to = _a[4], value = _a[5], data = _a[6], accessList = _a[7], v = _a[8], r = _a[9], s = _a[10];\n        var emptyAccessList = [];\n        return new AccessListEIP2930Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : emptyAccessList,\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    AccessListEIP2930Transaction.prototype.getDataFee = function () {\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    AccessListEIP2930Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n     *\n     * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)]`\n     *\n     * Use {@link AccessListEIP2930Transaction.serialize} to add to block data for {@link Block.fromValuesArray}.\n     */\n    AccessListEIP2930Transaction.prototype.raw = function () {\n        return [\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.chainId),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.nonce),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasPrice),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n            this.r !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n            this.s !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-2930 transaction.\n     *\n     * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n     * signatureYParity (v), signatureR (r), signatureS (s)])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceeding and concatenated to\n     * the RLP encoding of the values.\n     */\n    AccessListEIP2930Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    /**\n     * Returns the serialized unsigned tx (hashed or raw), which can be used\n     * to sign the transaction (e.g. for sending to a hardware wallet).\n     *\n     * Note: in contrast to the legacy tx the raw message format is already\n     * serialized and doesn't need to be RLP encoded any more.\n     *\n     * ```javascript\n     * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n     * ```\n     *\n     * @param hashMessage - Return hashed message if set to true (default: true)\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 8);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return ethereumjs_util_1.keccak256(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    AccessListEIP2930Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            throw new Error('Cannot call hash method if transaction is not signed');\n        }\n        return ethereumjs_util_1.keccak256(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    AccessListEIP2930Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    AccessListEIP2930Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            throw new Error('Cannot call this method if transaction is not signed');\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n        }\n        var _b = this, yParity = _b.yParity, r = _b.r, s = _b.s;\n        try {\n            return ethereumjs_util_1.ecrecover(msgHash, yParity.addn(27), // Recover the 27 which was stripped from ecsign\n            ethereumjs_util_1.bnToUnpaddedBuffer(r), ethereumjs_util_1.bnToUnpaddedBuffer(s));\n        }\n        catch (e) {\n            throw new Error('Invalid Signature');\n        }\n    };\n    AccessListEIP2930Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = {\n            common: this.common,\n        };\n        return AccessListEIP2930Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    AccessListEIP2930Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: ethereumjs_util_1.bnToHex(this.chainId),\n            nonce: ethereumjs_util_1.bnToHex(this.nonce),\n            gasPrice: ethereumjs_util_1.bnToHex(this.gasPrice),\n            gasLimit: ethereumjs_util_1.bnToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: ethereumjs_util_1.bnToHex(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? ethereumjs_util_1.bnToHex(this.v) : undefined,\n            r: this.r !== undefined ? ethereumjs_util_1.bnToHex(this.r) : undefined,\n            s: this.s !== undefined ? ethereumjs_util_1.bnToHex(this.s) : undefined,\n        };\n    };\n    return AccessListEIP2930Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = AccessListEIP2930Transaction;\n//# sourceMappingURL=eip2930Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\nvar TRANSACTION_TYPE = 2;\nvar TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex');\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nvar FeeMarketEIP1559Transaction = /** @class */ (function (_super) {\n    __extends(FeeMarketEIP1559Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function FeeMarketEIP1559Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _a, _b;\n        var _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        /**\n         * The default HF if the tx type is active on that HF\n         * or the first greater HF where the tx is active.\n         *\n         * @hidden\n         */\n        _this.DEFAULT_HARDFORK = 'london';\n        var chainId = txData.chainId, accessList = txData.accessList, maxFeePerGas = txData.maxFeePerGas, maxPriorityFeePerGas = txData.maxPriorityFeePerGas;\n        _this.common = _this._getCommon(opts.common, chainId);\n        _this.chainId = _this.common.chainIdBN();\n        if (!_this.common.isActivatedEIP(1559)) {\n            throw new Error('EIP-1559 not enabled on Common');\n        }\n        _this.activeCapabilities = _this.activeCapabilities.concat([1559, 2718, 2930]);\n        // Populate the access list fields\n        var accessListData = util_1.AccessLists.getAccessListData(accessList !== null && accessList !== void 0 ? accessList : []);\n        _this.accessList = accessListData.accessList;\n        _this.AccessListJSON = accessListData.AccessListJSON;\n        // Verify the access list format.\n        util_1.AccessLists.verifyAccessList(_this.accessList);\n        _this.maxFeePerGas = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas));\n        _this.maxPriorityFeePerGas = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas));\n        _this._validateCannotExceedMaxInteger({\n            maxFeePerGas: _this.maxFeePerGas,\n            maxPriorityFeePerGas: _this.maxPriorityFeePerGas,\n        }, 256);\n        if (_this.maxFeePerGas.lt(_this.maxPriorityFeePerGas)) {\n            throw new Error('maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)');\n        }\n        if (_this.v && !_this.v.eqn(0) && !_this.v.eqn(1)) {\n            throw new Error('The y-parity of the transaction should either be 0 or 1');\n        }\n        if (_this.common.gteHardfork('homestead') && ((_a = _this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n        }\n        var freeze = (_b = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _b !== void 0 ? _b : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderR\", {\n        /**\n         * EIP-2930 alias for `r`\n         *\n         * @deprecated use `r` instead\n         */\n        get: function () {\n            return this.r;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"senderS\", {\n        /**\n         * EIP-2930 alias for `s`\n         *\n         * @deprecated use `s` instead\n         */\n        get: function () {\n            return this.s;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FeeMarketEIP1559Transaction.prototype, \"yParity\", {\n        /**\n         * EIP-2930 alias for `v`\n         *\n         * @deprecated use `v` instead\n         */\n        get: function () {\n            return this.v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, v, r, s }\n     *\n     * Notes:\n     * - `chainId` will be set automatically if not provided\n     * - All parameters are optional and have some basic default values\n     */\n    FeeMarketEIP1559Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new FeeMarketEIP1559Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     */\n    FeeMarketEIP1559Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n            throw new Error(\"Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: \" + TRANSACTION_TYPE + \", received: \" + serialized\n                .slice(0, 1)\n                .toString('hex'));\n        }\n        var values = ethereumjs_util_1.rlp.decode(serialized.slice(1));\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input: must be array');\n        }\n        return FeeMarketEIP1559Transaction.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n     *\n     * Note: This means that the Buffer should start with 0x01.\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n     */\n    FeeMarketEIP1559Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     */\n    FeeMarketEIP1559Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (values.length !== 9 && values.length !== 12) {\n            throw new Error('Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).');\n        }\n        var _a = __read(values, 12), chainId = _a[0], nonce = _a[1], maxPriorityFeePerGas = _a[2], maxFeePerGas = _a[3], gasLimit = _a[4], to = _a[5], value = _a[6], data = _a[7], accessList = _a[8], v = _a[9], r = _a[10], s = _a[11];\n        return new FeeMarketEIP1559Transaction({\n            chainId: new ethereumjs_util_1.BN(chainId),\n            nonce: nonce,\n            maxPriorityFeePerGas: maxPriorityFeePerGas,\n            maxFeePerGas: maxFeePerGas,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            accessList: accessList !== null && accessList !== void 0 ? accessList : [],\n            v: v !== undefined ? new ethereumjs_util_1.BN(v) : undefined,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    FeeMarketEIP1559Transaction.prototype.getDataFee = function () {\n        var cost = _super.prototype.getDataFee.call(this);\n        cost.iaddn(util_1.AccessLists.getDataFeeEIP2930(this.accessList, this.common));\n        return cost;\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     * @param baseFee The base fee of the block (will be set to 0 if not provided)\n     */\n    FeeMarketEIP1559Transaction.prototype.getUpfrontCost = function (baseFee) {\n        if (baseFee === void 0) { baseFee = new ethereumjs_util_1.BN(0); }\n        var inclusionFeePerGas = ethereumjs_util_1.BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee));\n        var gasPrice = inclusionFeePerGas.add(baseFee);\n        return this.gasLimit.mul(gasPrice).add(this.value);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n     *\n     * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS]`\n     *\n     * Use {@link FeeMarketEIP1559Transaction.serialize} to add to block data for {@link Block.fromValuesArray}.\n     */\n    FeeMarketEIP1559Transaction.prototype.raw = function () {\n        return [\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.chainId),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.nonce),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.maxFeePerGas),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.value),\n            this.data,\n            this.accessList,\n            this.v !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n            this.r !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n            this.s !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the EIP-1559 transaction.\n     *\n     * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n     * accessList, signatureYParity, signatureR, signatureS])`\n     *\n     * Note that in contrast to the legacy tx serialization format this is not\n     * valid RLP any more due to the raw tx type preceeding and concatenated to\n     * the RLP encoding of the values.\n     */\n    FeeMarketEIP1559Transaction.prototype.serialize = function () {\n        var base = this.raw();\n        return Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n    };\n    FeeMarketEIP1559Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var base = this.raw().slice(0, 9);\n        var message = Buffer.concat([TRANSACTION_TYPE_BUFFER, ethereumjs_util_1.rlp.encode(base)]);\n        if (hashMessage) {\n            return ethereumjs_util_1.keccak256(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    FeeMarketEIP1559Transaction.prototype.hash = function () {\n        if (!this.isSigned()) {\n            throw new Error('Cannot call hash method if transaction is not signed');\n        }\n        return ethereumjs_util_1.keccak256(this.serialize());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    FeeMarketEIP1559Transaction.prototype.getMessageToVerifySignature = function () {\n        return this.getMessageToSign();\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    FeeMarketEIP1559Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        if (!this.isSigned()) {\n            throw new Error('Cannot call this method if transaction is not signed');\n        }\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return ethereumjs_util_1.ecrecover(msgHash, v.addn(27), // Recover the 27 which was stripped from ecsign\n            ethereumjs_util_1.bnToUnpaddedBuffer(r), ethereumjs_util_1.bnToUnpaddedBuffer(s));\n        }\n        catch (e) {\n            throw new Error('Invalid Signature');\n        }\n    };\n    FeeMarketEIP1559Transaction.prototype._processSignature = function (v, r, s) {\n        var opts = {\n            common: this.common,\n        };\n        return FeeMarketEIP1559Transaction.fromTxData({\n            chainId: this.chainId,\n            nonce: this.nonce,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            accessList: this.accessList,\n            v: new ethereumjs_util_1.BN(v - 27),\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction\n     */\n    FeeMarketEIP1559Transaction.prototype.toJSON = function () {\n        var accessListJSON = util_1.AccessLists.getAccessListJSON(this.accessList);\n        return {\n            chainId: ethereumjs_util_1.bnToHex(this.chainId),\n            nonce: ethereumjs_util_1.bnToHex(this.nonce),\n            maxPriorityFeePerGas: ethereumjs_util_1.bnToHex(this.maxPriorityFeePerGas),\n            maxFeePerGas: ethereumjs_util_1.bnToHex(this.maxFeePerGas),\n            gasLimit: ethereumjs_util_1.bnToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: ethereumjs_util_1.bnToHex(this.value),\n            data: '0x' + this.data.toString('hex'),\n            accessList: accessListJSON,\n            v: this.v !== undefined ? ethereumjs_util_1.bnToHex(this.v) : undefined,\n            r: this.r !== undefined ? ethereumjs_util_1.bnToHex(this.r) : undefined,\n            s: this.s !== undefined ? ethereumjs_util_1.bnToHex(this.s) : undefined,\n        };\n    };\n    return FeeMarketEIP1559Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = FeeMarketEIP1559Transaction;\n//# sourceMappingURL=eip1559Transaction.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        var _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN(ethereumjs_util_1.toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For an unsigned legacy tx this method returns the the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.nonce),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasPrice),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.value),\n            this.data,\n            this.v !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n            this.r !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n            this.s !== undefined ? ethereumjs_util_1.bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned legacy tx this method uses the empty Buffer values\n     * for the signature parameters `v`, `r` and `s` for encoding. For an\n     * EIP-155 compliant representation use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.nonce),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasPrice),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            ethereumjs_util_1.bnToUnpaddedBuffer(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push(ethereumjs_util_1.toBuffer(this.common.chainIdBN()));\n            values.push(ethereumjs_util_1.unpadBuffer(ethereumjs_util_1.toBuffer(0)));\n            values.push(ethereumjs_util_1.unpadBuffer(ethereumjs_util_1.toBuffer(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return ethereumjs_util_1.rlphash(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        return ethereumjs_util_1.rlphash(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            throw Error('This transaction is not signed');\n        }\n        var message = this._getMessageToSign();\n        return ethereumjs_util_1.rlphash(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            throw new Error('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return ethereumjs_util_1.ecrecover(msgHash, v, ethereumjs_util_1.bnToUnpaddedBuffer(r), ethereumjs_util_1.bnToUnpaddedBuffer(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            throw new Error('Invalid Signature');\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = {\n            common: this.common,\n        };\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: ethereumjs_util_1.bnToHex(this.nonce),\n            gasPrice: ethereumjs_util_1.bnToHex(this.gasPrice),\n            gasLimit: ethereumjs_util_1.bnToHex(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: ethereumjs_util_1.bnToHex(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? ethereumjs_util_1.bnToHex(this.v) : undefined,\n            r: this.r !== undefined ? ethereumjs_util_1.bnToHex(this.r) : undefined,\n            s: this.s !== undefined ? ethereumjs_util_1.bnToHex(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            !v.eqn(0) &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \" + v.toString() + \" and chain id \" + common\n                        .chainIdBN()\n                        .toString() + \". See the Common parameter of the Transaction constructor to set the chain id.\");\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            throw Error('This transaction is not signed');\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","module.exports = require('./browser/algorithms.json')\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","var createHash = require('create-hash')\nvar stream = require('stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = new Buffer(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","var ebtk = require('evp_bytestokey')\nvar aes = require('browserify-aes/browser')\nvar DES = require('browserify-des')\nvar desModes = require('browserify-des/modes')\nvar aesModes = require('browserify-aes/modes')\nfunction createCipher (suite, password) {\n  var keyLen, ivLen\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\nfunction createDecipher (suite, password) {\n  var keyLen, ivLen\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    return aes.createCipheriv(suite, key, iv)\n  } else if (desModes[suite]) {\n    return new DES({\n      key: key,\n      iv: iv,\n      mode: suite\n    })\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n}\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    return aes.createDecipheriv(suite, key, iv)\n  } else if (desModes[suite]) {\n    return new DES({\n      key: key,\n      iv: iv,\n      mode: suite,\n      decrypt: true\n    })\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n}\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\nexports.listCiphers = exports.getCiphers = getCiphers\n","var elliptic = require('elliptic');\nvar BN = require('bn.js');\n\nmodule.exports = function createECDH(curve) {\n\treturn new ECDH(curve);\n};\n\nvar aliases = {\n\tsecp256k1: {\n\t\tname: 'secp256k1',\n\t\tbyteLength: 32\n\t},\n\tsecp224r1: {\n\t\tname: 'p224',\n\t\tbyteLength: 28\n\t},\n\tprime256v1: {\n\t\tname: 'p256',\n\t\tbyteLength: 32\n\t},\n\tprime192v1: {\n\t\tname: 'p192',\n\t\tbyteLength: 24\n\t},\n\ted25519: {\n\t\tname: 'ed25519',\n\t\tbyteLength: 32\n\t},\n\tsecp384r1: {\n\t\tname: 'p384',\n\t\tbyteLength: 48\n\t},\n\tsecp521r1: {\n\t\tname: 'p521',\n\t\tbyteLength: 66\n\t}\n};\n\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\n\nfunction ECDH(curve) {\n\tthis.curveType = aliases[curve];\n\tif (!this.curveType ) {\n\t\tthis.curveType = {\n\t\t\tname: curve\n\t\t};\n\t}\n\tthis.curve = new elliptic.ec(this.curveType.name);\n\tthis.keys = void 0;\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n\tthis.keys = this.curve.genKeyPair();\n\treturn this.getPublicKey(enc, format);\n};\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n\tinenc = inenc || 'utf8';\n\tif (!Buffer.isBuffer(other)) {\n\t\tother = new Buffer(other, inenc);\n\t}\n\tvar otherPub = this.curve.keyFromPublic(other).getPublic();\n\tvar out = otherPub.mul(this.keys.getPrivate()).getX();\n\treturn formatReturnValue(out, enc, this.curveType.byteLength);\n};\n\nECDH.prototype.getPublicKey = function (enc, format) {\n\tvar key = this.keys.getPublic(format === 'compressed', true);\n\tif (format === 'hybrid') {\n\t\tif (key[key.length - 1] % 2) {\n\t\t\tkey[0] = 7;\n\t\t} else {\n\t\t\tkey [0] = 6;\n\t\t}\n\t}\n\treturn formatReturnValue(key, enc);\n};\n\nECDH.prototype.getPrivateKey = function (enc) {\n\treturn formatReturnValue(this.keys.getPrivate(), enc);\n};\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n\tenc = enc || 'utf8';\n\tif (!Buffer.isBuffer(pub)) {\n\t\tpub = new Buffer(pub, enc);\n\t}\n\tthis.keys._importPublic(pub);\n\treturn this;\n};\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n\tenc = enc || 'utf8';\n\tif (!Buffer.isBuffer(priv)) {\n\t\tpriv = new Buffer(priv, enc);\n\t}\n\tvar _priv = new BN(priv);\n\t_priv = _priv.toString(16);\n\tthis.keys._importPrivate(_priv);\n\treturn this;\n};\n\nfunction formatReturnValue(bn, enc, len) {\n\tif (!Array.isArray(bn)) {\n\t\tbn = bn.toArray();\n\t}\n\tvar buf = new Buffer(bn);\n\tif (len && buf.length < len) {\n\t\tvar zeros = new Buffer(len - buf.length);\n\t\tzeros.fill(0);\n\t\tbuf = Buffer.concat([zeros, buf]);\n\t}\n\tif (!enc) {\n\t\treturn buf;\n\t} else {\n\t\treturn buf.toString(enc);\n\t}\n}\n","exports.publicEncrypt = require('./publicEncrypt');\nexports.privateDecrypt = require('./privateDecrypt');\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.WHATWGFetch = {})));\n}(this, (function (exports) { 'use strict';\n\n  var global =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    (typeof global !== 'undefined' && global);\n\n  var support = {\n    searchParams: 'URLSearchParams' in global,\n    iterable: 'Symbol' in global && 'iterator' in Symbol,\n    blob:\n      'FileReader' in global &&\n      'Blob' in global &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in global,\n    arrayBuffer: 'ArrayBuffer' in global\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          var isConsumed = consumed(this);\n          if (isConsumed) {\n            return isConsumed\n          }\n          if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n            return Promise.resolve(\n              this._bodyArrayBuffer.buffer.slice(\n                this._bodyArrayBuffer.byteOffset,\n                this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n              )\n            )\n          } else {\n            return Promise.resolve(this._bodyArrayBuffer)\n          }\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          headers.append(key, value);\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = global.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && global.location.href ? global.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer &&\n          request.headers.get('Content-Type') &&\n          request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!global.fetch) {\n    global.fetch = fetch;\n    global.Headers = Headers;\n    global.Request = Request;\n    global.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar ethjs_util_1 = require(\"ethjs-util\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexports.assertIsHexString = function (input) {\n    if (!ethjs_util_1.isHexString(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexports.assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexports.assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexports.assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v[0] === '0' && v[1] === '0') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length_1 = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length_1;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (bn_js_1.default.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","'use strict';\n\nfunction utf8ToBinaryString(str) {\n  var escstr = encodeURIComponent(str);\n  // replaces any uri escape sequence, such as %0A,\n  // with binary escape, such as 0x0A\n  var binstr = escstr.replace(/%([0-9A-F]{2})/g, function(match, p1) {\n    return String.fromCharCode(parseInt(p1, 16));\n  });\n\n  return binstr;\n}\n\nfunction utf8ToBuffer(str) {\n  var binstr = utf8ToBinaryString(str);\n  var buf = binaryStringToBuffer(binstr);\n  return buf;\n}\n\nfunction utf8ToBase64(str) {\n  var binstr = utf8ToBinaryString(str);\n  return btoa(binstr);\n}\n\nfunction binaryStringToUtf8(binstr) {\n  var escstr = binstr.replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  });\n\n  return decodeURIComponent(escstr);\n}\n\nfunction bufferToUtf8(buf) {\n  var binstr = bufferToBinaryString(buf);\n\n  return binaryStringToUtf8(binstr);\n}\n\nfunction base64ToUtf8(b64) {\n  var binstr = atob(b64);\n\n  return binaryStringToUtf8(binstr);\n}\n\nfunction bufferToBinaryString(buf) {\n  var binstr = Array.prototype.map.call(buf, function (ch) {\n    return String.fromCharCode(ch);\n  }).join('');\n\n  return binstr;\n}\n\nfunction bufferToBase64(arr) {\n  var binstr = bufferToBinaryString(arr);\n  return btoa(binstr);\n}\n\nfunction binaryStringToBuffer(binstr) {\n  var buf;\n\n  if ('undefined' !== typeof Uint8Array) {\n    buf = new Uint8Array(binstr.length);\n  } else {\n    buf = [];\n  }\n\n  Array.prototype.forEach.call(binstr, function (ch, i) {\n    buf[i] = ch.charCodeAt(0);\n  });\n\n  return buf;\n}\n\nfunction base64ToBuffer(base64) {\n  var binstr = atob(base64);\n  var buf = binaryStringToBuffer(binstr);\n  return buf;\n}\n\nmodule.exports = {\n  utf8ToBinaryString: utf8ToBinaryString\n, utf8ToBuffer: utf8ToBuffer\n, utf8ToBase64: utf8ToBase64\n, binaryStringToUtf8: binaryStringToUtf8\n, bufferToUtf8: bufferToUtf8\n, base64ToUtf8: base64ToUtf8\n, bufferToBinaryString: bufferToBinaryString\n, bufferToBase64: bufferToBase64\n, binaryStringToBuffer: binaryStringToBuffer\n, base64ToBuffer: base64ToBuffer\n\n// compat\n, strToUtf8Arr: utf8ToBuffer\n, utf8ArrToStr: bufferToUtf8\n, arrToBase64: bufferToBase64\n, base64ToArr: base64ToBuffer\n};\n","module.exports=[\n  \"的\",\n  \"一\",\n  \"是\",\n  \"在\",\n  \"不\",\n  \"了\",\n  \"有\",\n  \"和\",\n  \"人\",\n  \"這\",\n  \"中\",\n  \"大\",\n  \"為\",\n  \"上\",\n  \"個\",\n  \"國\",\n  \"我\",\n  \"以\",\n  \"要\",\n  \"他\",\n  \"時\",\n  \"來\",\n  \"用\",\n  \"們\",\n  \"生\",\n  \"到\",\n  \"作\",\n  \"地\",\n  \"於\",\n  \"出\",\n  \"就\",\n  \"分\",\n  \"對\",\n  \"成\",\n  \"會\",\n  \"可\",\n  \"主\",\n  \"發\",\n  \"年\",\n  \"動\",\n  \"同\",\n  \"工\",\n  \"也\",\n  \"能\",\n  \"下\",\n  \"過\",\n  \"子\",\n  \"說\",\n  \"產\",\n  \"種\",\n  \"面\",\n  \"而\",\n  \"方\",\n  \"後\",\n  \"多\",\n  \"定\",\n  \"行\",\n  \"學\",\n  \"法\",\n  \"所\",\n  \"民\",\n  \"得\",\n  \"經\",\n  \"十\",\n  \"三\",\n  \"之\",\n  \"進\",\n  \"著\",\n  \"等\",\n  \"部\",\n  \"度\",\n  \"家\",\n  \"電\",\n  \"力\",\n  \"裡\",\n  \"如\",\n  \"水\",\n  \"化\",\n  \"高\",\n  \"自\",\n  \"二\",\n  \"理\",\n  \"起\",\n  \"小\",\n  \"物\",\n  \"現\",\n  \"實\",\n  \"加\",\n  \"量\",\n  \"都\",\n  \"兩\",\n  \"體\",\n  \"制\",\n  \"機\",\n  \"當\",\n  \"使\",\n  \"點\",\n  \"從\",\n  \"業\",\n  \"本\",\n  \"去\",\n  \"把\",\n  \"性\",\n  \"好\",\n  \"應\",\n  \"開\",\n  \"它\",\n  \"合\",\n  \"還\",\n  \"因\",\n  \"由\",\n  \"其\",\n  \"些\",\n  \"然\",\n  \"前\",\n  \"外\",\n  \"天\",\n  \"政\",\n  \"四\",\n  \"日\",\n  \"那\",\n  \"社\",\n  \"義\",\n  \"事\",\n  \"平\",\n  \"形\",\n  \"相\",\n  \"全\",\n  \"表\",\n  \"間\",\n  \"樣\",\n  \"與\",\n  \"關\",\n  \"各\",\n  \"重\",\n  \"新\",\n  \"線\",\n  \"內\",\n  \"數\",\n  \"正\",\n  \"心\",\n  \"反\",\n  \"你\",\n  \"明\",\n  \"看\",\n  \"原\",\n  \"又\",\n  \"麼\",\n  \"利\",\n  \"比\",\n  \"或\",\n  \"但\",\n  \"質\",\n  \"氣\",\n  \"第\",\n  \"向\",\n  \"道\",\n  \"命\",\n  \"此\",\n  \"變\",\n  \"條\",\n  \"只\",\n  \"沒\",\n  \"結\",\n  \"解\",\n  \"問\",\n  \"意\",\n  \"建\",\n  \"月\",\n  \"公\",\n  \"無\",\n  \"系\",\n  \"軍\",\n  \"很\",\n  \"情\",\n  \"者\",\n  \"最\",\n  \"立\",\n  \"代\",\n  \"想\",\n  \"已\",\n  \"通\",\n  \"並\",\n  \"提\",\n  \"直\",\n  \"題\",\n  \"黨\",\n  \"程\",\n  \"展\",\n  \"五\",\n  \"果\",\n  \"料\",\n  \"象\",\n  \"員\",\n  \"革\",\n  \"位\",\n  \"入\",\n  \"常\",\n  \"文\",\n  \"總\",\n  \"次\",\n  \"品\",\n  \"式\",\n  \"活\",\n  \"設\",\n  \"及\",\n  \"管\",\n  \"特\",\n  \"件\",\n  \"長\",\n  \"求\",\n  \"老\",\n  \"頭\",\n  \"基\",\n  \"資\",\n  \"邊\",\n  \"流\",\n  \"路\",\n  \"級\",\n  \"少\",\n  \"圖\",\n  \"山\",\n  \"統\",\n  \"接\",\n  \"知\",\n  \"較\",\n  \"將\",\n  \"組\",\n  \"見\",\n  \"計\",\n  \"別\",\n  \"她\",\n  \"手\",\n  \"角\",\n  \"期\",\n  \"根\",\n  \"論\",\n  \"運\",\n  \"農\",\n  \"指\",\n  \"幾\",\n  \"九\",\n  \"區\",\n  \"強\",\n  \"放\",\n  \"決\",\n  \"西\",\n  \"被\",\n  \"幹\",\n  \"做\",\n  \"必\",\n  \"戰\",\n  \"先\",\n  \"回\",\n  \"則\",\n  \"任\",\n  \"取\",\n  \"據\",\n  \"處\",\n  \"隊\",\n  \"南\",\n  \"給\",\n  \"色\",\n  \"光\",\n  \"門\",\n  \"即\",\n  \"保\",\n  \"治\",\n  \"北\",\n  \"造\",\n  \"百\",\n  \"規\",\n  \"熱\",\n  \"領\",\n  \"七\",\n  \"海\",\n  \"口\",\n  \"東\",\n  \"導\",\n  \"器\",\n  \"壓\",\n  \"志\",\n  \"世\",\n  \"金\",\n  \"增\",\n  \"爭\",\n  \"濟\",\n  \"階\",\n  \"油\",\n  \"思\",\n  \"術\",\n  \"極\",\n  \"交\",\n  \"受\",\n  \"聯\",\n  \"什\",\n  \"認\",\n  \"六\",\n  \"共\",\n  \"權\",\n  \"收\",\n  \"證\",\n  \"改\",\n  \"清\",\n  \"美\",\n  \"再\",\n  \"採\",\n  \"轉\",\n  \"更\",\n  \"單\",\n  \"風\",\n  \"切\",\n  \"打\",\n  \"白\",\n  \"教\",\n  \"速\",\n  \"花\",\n  \"帶\",\n  \"安\",\n  \"場\",\n  \"身\",\n  \"車\",\n  \"例\",\n  \"真\",\n  \"務\",\n  \"具\",\n  \"萬\",\n  \"每\",\n  \"目\",\n  \"至\",\n  \"達\",\n  \"走\",\n  \"積\",\n  \"示\",\n  \"議\",\n  \"聲\",\n  \"報\",\n  \"鬥\",\n  \"完\",\n  \"類\",\n  \"八\",\n  \"離\",\n  \"華\",\n  \"名\",\n  \"確\",\n  \"才\",\n  \"科\",\n  \"張\",\n  \"信\",\n  \"馬\",\n  \"節\",\n  \"話\",\n  \"米\",\n  \"整\",\n  \"空\",\n  \"元\",\n  \"況\",\n  \"今\",\n  \"集\",\n  \"溫\",\n  \"傳\",\n  \"土\",\n  \"許\",\n  \"步\",\n  \"群\",\n  \"廣\",\n  \"石\",\n  \"記\",\n  \"需\",\n  \"段\",\n  \"研\",\n  \"界\",\n  \"拉\",\n  \"林\",\n  \"律\",\n  \"叫\",\n  \"且\",\n  \"究\",\n  \"觀\",\n  \"越\",\n  \"織\",\n  \"裝\",\n  \"影\",\n  \"算\",\n  \"低\",\n  \"持\",\n  \"音\",\n  \"眾\",\n  \"書\",\n  \"布\",\n  \"复\",\n  \"容\",\n  \"兒\",\n  \"須\",\n  \"際\",\n  \"商\",\n  \"非\",\n  \"驗\",\n  \"連\",\n  \"斷\",\n  \"深\",\n  \"難\",\n  \"近\",\n  \"礦\",\n  \"千\",\n  \"週\",\n  \"委\",\n  \"素\",\n  \"技\",\n  \"備\",\n  \"半\",\n  \"辦\",\n  \"青\",\n  \"省\",\n  \"列\",\n  \"習\",\n  \"響\",\n  \"約\",\n  \"支\",\n  \"般\",\n  \"史\",\n  \"感\",\n  \"勞\",\n  \"便\",\n  \"團\",\n  \"往\",\n  \"酸\",\n  \"歷\",\n  \"市\",\n  \"克\",\n  \"何\",\n  \"除\",\n  \"消\",\n  \"構\",\n  \"府\",\n  \"稱\",\n  \"太\",\n  \"準\",\n  \"精\",\n  \"值\",\n  \"號\",\n  \"率\",\n  \"族\",\n  \"維\",\n  \"劃\",\n  \"選\",\n  \"標\",\n  \"寫\",\n  \"存\",\n  \"候\",\n  \"毛\",\n  \"親\",\n  \"快\",\n  \"效\",\n  \"斯\",\n  \"院\",\n  \"查\",\n  \"江\",\n  \"型\",\n  \"眼\",\n  \"王\",\n  \"按\",\n  \"格\",\n  \"養\",\n  \"易\",\n  \"置\",\n  \"派\",\n  \"層\",\n  \"片\",\n  \"始\",\n  \"卻\",\n  \"專\",\n  \"狀\",\n  \"育\",\n  \"廠\",\n  \"京\",\n  \"識\",\n  \"適\",\n  \"屬\",\n  \"圓\",\n  \"包\",\n  \"火\",\n  \"住\",\n  \"調\",\n  \"滿\",\n  \"縣\",\n  \"局\",\n  \"照\",\n  \"參\",\n  \"紅\",\n  \"細\",\n  \"引\",\n  \"聽\",\n  \"該\",\n  \"鐵\",\n  \"價\",\n  \"嚴\",\n  \"首\",\n  \"底\",\n  \"液\",\n  \"官\",\n  \"德\",\n  \"隨\",\n  \"病\",\n  \"蘇\",\n  \"失\",\n  \"爾\",\n  \"死\",\n  \"講\",\n  \"配\",\n  \"女\",\n  \"黃\",\n  \"推\",\n  \"顯\",\n  \"談\",\n  \"罪\",\n  \"神\",\n  \"藝\",\n  \"呢\",\n  \"席\",\n  \"含\",\n  \"企\",\n  \"望\",\n  \"密\",\n  \"批\",\n  \"營\",\n  \"項\",\n  \"防\",\n  \"舉\",\n  \"球\",\n  \"英\",\n  \"氧\",\n  \"勢\",\n  \"告\",\n  \"李\",\n  \"台\",\n  \"落\",\n  \"木\",\n  \"幫\",\n  \"輪\",\n  \"破\",\n  \"亞\",\n  \"師\",\n  \"圍\",\n  \"注\",\n  \"遠\",\n  \"字\",\n  \"材\",\n  \"排\",\n  \"供\",\n  \"河\",\n  \"態\",\n  \"封\",\n  \"另\",\n  \"施\",\n  \"減\",\n  \"樹\",\n  \"溶\",\n  \"怎\",\n  \"止\",\n  \"案\",\n  \"言\",\n  \"士\",\n  \"均\",\n  \"武\",\n  \"固\",\n  \"葉\",\n  \"魚\",\n  \"波\",\n  \"視\",\n  \"僅\",\n  \"費\",\n  \"緊\",\n  \"愛\",\n  \"左\",\n  \"章\",\n  \"早\",\n  \"朝\",\n  \"害\",\n  \"續\",\n  \"輕\",\n  \"服\",\n  \"試\",\n  \"食\",\n  \"充\",\n  \"兵\",\n  \"源\",\n  \"判\",\n  \"護\",\n  \"司\",\n  \"足\",\n  \"某\",\n  \"練\",\n  \"差\",\n  \"致\",\n  \"板\",\n  \"田\",\n  \"降\",\n  \"黑\",\n  \"犯\",\n  \"負\",\n  \"擊\",\n  \"范\",\n  \"繼\",\n  \"興\",\n  \"似\",\n  \"餘\",\n  \"堅\",\n  \"曲\",\n  \"輸\",\n  \"修\",\n  \"故\",\n  \"城\",\n  \"夫\",\n  \"夠\",\n  \"送\",\n  \"筆\",\n  \"船\",\n  \"佔\",\n  \"右\",\n  \"財\",\n  \"吃\",\n  \"富\",\n  \"春\",\n  \"職\",\n  \"覺\",\n  \"漢\",\n  \"畫\",\n  \"功\",\n  \"巴\",\n  \"跟\",\n  \"雖\",\n  \"雜\",\n  \"飛\",\n  \"檢\",\n  \"吸\",\n  \"助\",\n  \"昇\",\n  \"陽\",\n  \"互\",\n  \"初\",\n  \"創\",\n  \"抗\",\n  \"考\",\n  \"投\",\n  \"壞\",\n  \"策\",\n  \"古\",\n  \"徑\",\n  \"換\",\n  \"未\",\n  \"跑\",\n  \"留\",\n  \"鋼\",\n  \"曾\",\n  \"端\",\n  \"責\",\n  \"站\",\n  \"簡\",\n  \"述\",\n  \"錢\",\n  \"副\",\n  \"盡\",\n  \"帝\",\n  \"射\",\n  \"草\",\n  \"衝\",\n  \"承\",\n  \"獨\",\n  \"令\",\n  \"限\",\n  \"阿\",\n  \"宣\",\n  \"環\",\n  \"雙\",\n  \"請\",\n  \"超\",\n  \"微\",\n  \"讓\",\n  \"控\",\n  \"州\",\n  \"良\",\n  \"軸\",\n  \"找\",\n  \"否\",\n  \"紀\",\n  \"益\",\n  \"依\",\n  \"優\",\n  \"頂\",\n  \"礎\",\n  \"載\",\n  \"倒\",\n  \"房\",\n  \"突\",\n  \"坐\",\n  \"粉\",\n  \"敵\",\n  \"略\",\n  \"客\",\n  \"袁\",\n  \"冷\",\n  \"勝\",\n  \"絕\",\n  \"析\",\n  \"塊\",\n  \"劑\",\n  \"測\",\n  \"絲\",\n  \"協\",\n  \"訴\",\n  \"念\",\n  \"陳\",\n  \"仍\",\n  \"羅\",\n  \"鹽\",\n  \"友\",\n  \"洋\",\n  \"錯\",\n  \"苦\",\n  \"夜\",\n  \"刑\",\n  \"移\",\n  \"頻\",\n  \"逐\",\n  \"靠\",\n  \"混\",\n  \"母\",\n  \"短\",\n  \"皮\",\n  \"終\",\n  \"聚\",\n  \"汽\",\n  \"村\",\n  \"雲\",\n  \"哪\",\n  \"既\",\n  \"距\",\n  \"衛\",\n  \"停\",\n  \"烈\",\n  \"央\",\n  \"察\",\n  \"燒\",\n  \"迅\",\n  \"境\",\n  \"若\",\n  \"印\",\n  \"洲\",\n  \"刻\",\n  \"括\",\n  \"激\",\n  \"孔\",\n  \"搞\",\n  \"甚\",\n  \"室\",\n  \"待\",\n  \"核\",\n  \"校\",\n  \"散\",\n  \"侵\",\n  \"吧\",\n  \"甲\",\n  \"遊\",\n  \"久\",\n  \"菜\",\n  \"味\",\n  \"舊\",\n  \"模\",\n  \"湖\",\n  \"貨\",\n  \"損\",\n  \"預\",\n  \"阻\",\n  \"毫\",\n  \"普\",\n  \"穩\",\n  \"乙\",\n  \"媽\",\n  \"植\",\n  \"息\",\n  \"擴\",\n  \"銀\",\n  \"語\",\n  \"揮\",\n  \"酒\",\n  \"守\",\n  \"拿\",\n  \"序\",\n  \"紙\",\n  \"醫\",\n  \"缺\",\n  \"雨\",\n  \"嗎\",\n  \"針\",\n  \"劉\",\n  \"啊\",\n  \"急\",\n  \"唱\",\n  \"誤\",\n  \"訓\",\n  \"願\",\n  \"審\",\n  \"附\",\n  \"獲\",\n  \"茶\",\n  \"鮮\",\n  \"糧\",\n  \"斤\",\n  \"孩\",\n  \"脫\",\n  \"硫\",\n  \"肥\",\n  \"善\",\n  \"龍\",\n  \"演\",\n  \"父\",\n  \"漸\",\n  \"血\",\n  \"歡\",\n  \"械\",\n  \"掌\",\n  \"歌\",\n  \"沙\",\n  \"剛\",\n  \"攻\",\n  \"謂\",\n  \"盾\",\n  \"討\",\n  \"晚\",\n  \"粒\",\n  \"亂\",\n  \"燃\",\n  \"矛\",\n  \"乎\",\n  \"殺\",\n  \"藥\",\n  \"寧\",\n  \"魯\",\n  \"貴\",\n  \"鐘\",\n  \"煤\",\n  \"讀\",\n  \"班\",\n  \"伯\",\n  \"香\",\n  \"介\",\n  \"迫\",\n  \"句\",\n  \"豐\",\n  \"培\",\n  \"握\",\n  \"蘭\",\n  \"擔\",\n  \"弦\",\n  \"蛋\",\n  \"沉\",\n  \"假\",\n  \"穿\",\n  \"執\",\n  \"答\",\n  \"樂\",\n  \"誰\",\n  \"順\",\n  \"煙\",\n  \"縮\",\n  \"徵\",\n  \"臉\",\n  \"喜\",\n  \"松\",\n  \"腳\",\n  \"困\",\n  \"異\",\n  \"免\",\n  \"背\",\n  \"星\",\n  \"福\",\n  \"買\",\n  \"染\",\n  \"井\",\n  \"概\",\n  \"慢\",\n  \"怕\",\n  \"磁\",\n  \"倍\",\n  \"祖\",\n  \"皇\",\n  \"促\",\n  \"靜\",\n  \"補\",\n  \"評\",\n  \"翻\",\n  \"肉\",\n  \"踐\",\n  \"尼\",\n  \"衣\",\n  \"寬\",\n  \"揚\",\n  \"棉\",\n  \"希\",\n  \"傷\",\n  \"操\",\n  \"垂\",\n  \"秋\",\n  \"宜\",\n  \"氫\",\n  \"套\",\n  \"督\",\n  \"振\",\n  \"架\",\n  \"亮\",\n  \"末\",\n  \"憲\",\n  \"慶\",\n  \"編\",\n  \"牛\",\n  \"觸\",\n  \"映\",\n  \"雷\",\n  \"銷\",\n  \"詩\",\n  \"座\",\n  \"居\",\n  \"抓\",\n  \"裂\",\n  \"胞\",\n  \"呼\",\n  \"娘\",\n  \"景\",\n  \"威\",\n  \"綠\",\n  \"晶\",\n  \"厚\",\n  \"盟\",\n  \"衡\",\n  \"雞\",\n  \"孫\",\n  \"延\",\n  \"危\",\n  \"膠\",\n  \"屋\",\n  \"鄉\",\n  \"臨\",\n  \"陸\",\n  \"顧\",\n  \"掉\",\n  \"呀\",\n  \"燈\",\n  \"歲\",\n  \"措\",\n  \"束\",\n  \"耐\",\n  \"劇\",\n  \"玉\",\n  \"趙\",\n  \"跳\",\n  \"哥\",\n  \"季\",\n  \"課\",\n  \"凱\",\n  \"胡\",\n  \"額\",\n  \"款\",\n  \"紹\",\n  \"卷\",\n  \"齊\",\n  \"偉\",\n  \"蒸\",\n  \"殖\",\n  \"永\",\n  \"宗\",\n  \"苗\",\n  \"川\",\n  \"爐\",\n  \"岩\",\n  \"弱\",\n  \"零\",\n  \"楊\",\n  \"奏\",\n  \"沿\",\n  \"露\",\n  \"桿\",\n  \"探\",\n  \"滑\",\n  \"鎮\",\n  \"飯\",\n  \"濃\",\n  \"航\",\n  \"懷\",\n  \"趕\",\n  \"庫\",\n  \"奪\",\n  \"伊\",\n  \"靈\",\n  \"稅\",\n  \"途\",\n  \"滅\",\n  \"賽\",\n  \"歸\",\n  \"召\",\n  \"鼓\",\n  \"播\",\n  \"盤\",\n  \"裁\",\n  \"險\",\n  \"康\",\n  \"唯\",\n  \"錄\",\n  \"菌\",\n  \"純\",\n  \"借\",\n  \"糖\",\n  \"蓋\",\n  \"橫\",\n  \"符\",\n  \"私\",\n  \"努\",\n  \"堂\",\n  \"域\",\n  \"槍\",\n  \"潤\",\n  \"幅\",\n  \"哈\",\n  \"竟\",\n  \"熟\",\n  \"蟲\",\n  \"澤\",\n  \"腦\",\n  \"壤\",\n  \"碳\",\n  \"歐\",\n  \"遍\",\n  \"側\",\n  \"寨\",\n  \"敢\",\n  \"徹\",\n  \"慮\",\n  \"斜\",\n  \"薄\",\n  \"庭\",\n  \"納\",\n  \"彈\",\n  \"飼\",\n  \"伸\",\n  \"折\",\n  \"麥\",\n  \"濕\",\n  \"暗\",\n  \"荷\",\n  \"瓦\",\n  \"塞\",\n  \"床\",\n  \"築\",\n  \"惡\",\n  \"戶\",\n  \"訪\",\n  \"塔\",\n  \"奇\",\n  \"透\",\n  \"梁\",\n  \"刀\",\n  \"旋\",\n  \"跡\",\n  \"卡\",\n  \"氯\",\n  \"遇\",\n  \"份\",\n  \"毒\",\n  \"泥\",\n  \"退\",\n  \"洗\",\n  \"擺\",\n  \"灰\",\n  \"彩\",\n  \"賣\",\n  \"耗\",\n  \"夏\",\n  \"擇\",\n  \"忙\",\n  \"銅\",\n  \"獻\",\n  \"硬\",\n  \"予\",\n  \"繁\",\n  \"圈\",\n  \"雪\",\n  \"函\",\n  \"亦\",\n  \"抽\",\n  \"篇\",\n  \"陣\",\n  \"陰\",\n  \"丁\",\n  \"尺\",\n  \"追\",\n  \"堆\",\n  \"雄\",\n  \"迎\",\n  \"泛\",\n  \"爸\",\n  \"樓\",\n  \"避\",\n  \"謀\",\n  \"噸\",\n  \"野\",\n  \"豬\",\n  \"旗\",\n  \"累\",\n  \"偏\",\n  \"典\",\n  \"館\",\n  \"索\",\n  \"秦\",\n  \"脂\",\n  \"潮\",\n  \"爺\",\n  \"豆\",\n  \"忽\",\n  \"托\",\n  \"驚\",\n  \"塑\",\n  \"遺\",\n  \"愈\",\n  \"朱\",\n  \"替\",\n  \"纖\",\n  \"粗\",\n  \"傾\",\n  \"尚\",\n  \"痛\",\n  \"楚\",\n  \"謝\",\n  \"奮\",\n  \"購\",\n  \"磨\",\n  \"君\",\n  \"池\",\n  \"旁\",\n  \"碎\",\n  \"骨\",\n  \"監\",\n  \"捕\",\n  \"弟\",\n  \"暴\",\n  \"割\",\n  \"貫\",\n  \"殊\",\n  \"釋\",\n  \"詞\",\n  \"亡\",\n  \"壁\",\n  \"頓\",\n  \"寶\",\n  \"午\",\n  \"塵\",\n  \"聞\",\n  \"揭\",\n  \"炮\",\n  \"殘\",\n  \"冬\",\n  \"橋\",\n  \"婦\",\n  \"警\",\n  \"綜\",\n  \"招\",\n  \"吳\",\n  \"付\",\n  \"浮\",\n  \"遭\",\n  \"徐\",\n  \"您\",\n  \"搖\",\n  \"谷\",\n  \"贊\",\n  \"箱\",\n  \"隔\",\n  \"訂\",\n  \"男\",\n  \"吹\",\n  \"園\",\n  \"紛\",\n  \"唐\",\n  \"敗\",\n  \"宋\",\n  \"玻\",\n  \"巨\",\n  \"耕\",\n  \"坦\",\n  \"榮\",\n  \"閉\",\n  \"灣\",\n  \"鍵\",\n  \"凡\",\n  \"駐\",\n  \"鍋\",\n  \"救\",\n  \"恩\",\n  \"剝\",\n  \"凝\",\n  \"鹼\",\n  \"齒\",\n  \"截\",\n  \"煉\",\n  \"麻\",\n  \"紡\",\n  \"禁\",\n  \"廢\",\n  \"盛\",\n  \"版\",\n  \"緩\",\n  \"淨\",\n  \"睛\",\n  \"昌\",\n  \"婚\",\n  \"涉\",\n  \"筒\",\n  \"嘴\",\n  \"插\",\n  \"岸\",\n  \"朗\",\n  \"莊\",\n  \"街\",\n  \"藏\",\n  \"姑\",\n  \"貿\",\n  \"腐\",\n  \"奴\",\n  \"啦\",\n  \"慣\",\n  \"乘\",\n  \"夥\",\n  \"恢\",\n  \"勻\",\n  \"紗\",\n  \"扎\",\n  \"辯\",\n  \"耳\",\n  \"彪\",\n  \"臣\",\n  \"億\",\n  \"璃\",\n  \"抵\",\n  \"脈\",\n  \"秀\",\n  \"薩\",\n  \"俄\",\n  \"網\",\n  \"舞\",\n  \"店\",\n  \"噴\",\n  \"縱\",\n  \"寸\",\n  \"汗\",\n  \"掛\",\n  \"洪\",\n  \"賀\",\n  \"閃\",\n  \"柬\",\n  \"爆\",\n  \"烯\",\n  \"津\",\n  \"稻\",\n  \"牆\",\n  \"軟\",\n  \"勇\",\n  \"像\",\n  \"滾\",\n  \"厘\",\n  \"蒙\",\n  \"芳\",\n  \"肯\",\n  \"坡\",\n  \"柱\",\n  \"盪\",\n  \"腿\",\n  \"儀\",\n  \"旅\",\n  \"尾\",\n  \"軋\",\n  \"冰\",\n  \"貢\",\n  \"登\",\n  \"黎\",\n  \"削\",\n  \"鑽\",\n  \"勒\",\n  \"逃\",\n  \"障\",\n  \"氨\",\n  \"郭\",\n  \"峰\",\n  \"幣\",\n  \"港\",\n  \"伏\",\n  \"軌\",\n  \"畝\",\n  \"畢\",\n  \"擦\",\n  \"莫\",\n  \"刺\",\n  \"浪\",\n  \"秘\",\n  \"援\",\n  \"株\",\n  \"健\",\n  \"售\",\n  \"股\",\n  \"島\",\n  \"甘\",\n  \"泡\",\n  \"睡\",\n  \"童\",\n  \"鑄\",\n  \"湯\",\n  \"閥\",\n  \"休\",\n  \"匯\",\n  \"舍\",\n  \"牧\",\n  \"繞\",\n  \"炸\",\n  \"哲\",\n  \"磷\",\n  \"績\",\n  \"朋\",\n  \"淡\",\n  \"尖\",\n  \"啟\",\n  \"陷\",\n  \"柴\",\n  \"呈\",\n  \"徒\",\n  \"顏\",\n  \"淚\",\n  \"稍\",\n  \"忘\",\n  \"泵\",\n  \"藍\",\n  \"拖\",\n  \"洞\",\n  \"授\",\n  \"鏡\",\n  \"辛\",\n  \"壯\",\n  \"鋒\",\n  \"貧\",\n  \"虛\",\n  \"彎\",\n  \"摩\",\n  \"泰\",\n  \"幼\",\n  \"廷\",\n  \"尊\",\n  \"窗\",\n  \"綱\",\n  \"弄\",\n  \"隸\",\n  \"疑\",\n  \"氏\",\n  \"宮\",\n  \"姐\",\n  \"震\",\n  \"瑞\",\n  \"怪\",\n  \"尤\",\n  \"琴\",\n  \"循\",\n  \"描\",\n  \"膜\",\n  \"違\",\n  \"夾\",\n  \"腰\",\n  \"緣\",\n  \"珠\",\n  \"窮\",\n  \"森\",\n  \"枝\",\n  \"竹\",\n  \"溝\",\n  \"催\",\n  \"繩\",\n  \"憶\",\n  \"邦\",\n  \"剩\",\n  \"幸\",\n  \"漿\",\n  \"欄\",\n  \"擁\",\n  \"牙\",\n  \"貯\",\n  \"禮\",\n  \"濾\",\n  \"鈉\",\n  \"紋\",\n  \"罷\",\n  \"拍\",\n  \"咱\",\n  \"喊\",\n  \"袖\",\n  \"埃\",\n  \"勤\",\n  \"罰\",\n  \"焦\",\n  \"潛\",\n  \"伍\",\n  \"墨\",\n  \"欲\",\n  \"縫\",\n  \"姓\",\n  \"刊\",\n  \"飽\",\n  \"仿\",\n  \"獎\",\n  \"鋁\",\n  \"鬼\",\n  \"麗\",\n  \"跨\",\n  \"默\",\n  \"挖\",\n  \"鏈\",\n  \"掃\",\n  \"喝\",\n  \"袋\",\n  \"炭\",\n  \"污\",\n  \"幕\",\n  \"諸\",\n  \"弧\",\n  \"勵\",\n  \"梅\",\n  \"奶\",\n  \"潔\",\n  \"災\",\n  \"舟\",\n  \"鑑\",\n  \"苯\",\n  \"訟\",\n  \"抱\",\n  \"毀\",\n  \"懂\",\n  \"寒\",\n  \"智\",\n  \"埔\",\n  \"寄\",\n  \"屆\",\n  \"躍\",\n  \"渡\",\n  \"挑\",\n  \"丹\",\n  \"艱\",\n  \"貝\",\n  \"碰\",\n  \"拔\",\n  \"爹\",\n  \"戴\",\n  \"碼\",\n  \"夢\",\n  \"芽\",\n  \"熔\",\n  \"赤\",\n  \"漁\",\n  \"哭\",\n  \"敬\",\n  \"顆\",\n  \"奔\",\n  \"鉛\",\n  \"仲\",\n  \"虎\",\n  \"稀\",\n  \"妹\",\n  \"乏\",\n  \"珍\",\n  \"申\",\n  \"桌\",\n  \"遵\",\n  \"允\",\n  \"隆\",\n  \"螺\",\n  \"倉\",\n  \"魏\",\n  \"銳\",\n  \"曉\",\n  \"氮\",\n  \"兼\",\n  \"隱\",\n  \"礙\",\n  \"赫\",\n  \"撥\",\n  \"忠\",\n  \"肅\",\n  \"缸\",\n  \"牽\",\n  \"搶\",\n  \"博\",\n  \"巧\",\n  \"殼\",\n  \"兄\",\n  \"杜\",\n  \"訊\",\n  \"誠\",\n  \"碧\",\n  \"祥\",\n  \"柯\",\n  \"頁\",\n  \"巡\",\n  \"矩\",\n  \"悲\",\n  \"灌\",\n  \"齡\",\n  \"倫\",\n  \"票\",\n  \"尋\",\n  \"桂\",\n  \"鋪\",\n  \"聖\",\n  \"恐\",\n  \"恰\",\n  \"鄭\",\n  \"趣\",\n  \"抬\",\n  \"荒\",\n  \"騰\",\n  \"貼\",\n  \"柔\",\n  \"滴\",\n  \"猛\",\n  \"闊\",\n  \"輛\",\n  \"妻\",\n  \"填\",\n  \"撤\",\n  \"儲\",\n  \"簽\",\n  \"鬧\",\n  \"擾\",\n  \"紫\",\n  \"砂\",\n  \"遞\",\n  \"戲\",\n  \"吊\",\n  \"陶\",\n  \"伐\",\n  \"餵\",\n  \"療\",\n  \"瓶\",\n  \"婆\",\n  \"撫\",\n  \"臂\",\n  \"摸\",\n  \"忍\",\n  \"蝦\",\n  \"蠟\",\n  \"鄰\",\n  \"胸\",\n  \"鞏\",\n  \"擠\",\n  \"偶\",\n  \"棄\",\n  \"槽\",\n  \"勁\",\n  \"乳\",\n  \"鄧\",\n  \"吉\",\n  \"仁\",\n  \"爛\",\n  \"磚\",\n  \"租\",\n  \"烏\",\n  \"艦\",\n  \"伴\",\n  \"瓜\",\n  \"淺\",\n  \"丙\",\n  \"暫\",\n  \"燥\",\n  \"橡\",\n  \"柳\",\n  \"迷\",\n  \"暖\",\n  \"牌\",\n  \"秧\",\n  \"膽\",\n  \"詳\",\n  \"簧\",\n  \"踏\",\n  \"瓷\",\n  \"譜\",\n  \"呆\",\n  \"賓\",\n  \"糊\",\n  \"洛\",\n  \"輝\",\n  \"憤\",\n  \"競\",\n  \"隙\",\n  \"怒\",\n  \"粘\",\n  \"乃\",\n  \"緒\",\n  \"肩\",\n  \"籍\",\n  \"敏\",\n  \"塗\",\n  \"熙\",\n  \"皆\",\n  \"偵\",\n  \"懸\",\n  \"掘\",\n  \"享\",\n  \"糾\",\n  \"醒\",\n  \"狂\",\n  \"鎖\",\n  \"淀\",\n  \"恨\",\n  \"牲\",\n  \"霸\",\n  \"爬\",\n  \"賞\",\n  \"逆\",\n  \"玩\",\n  \"陵\",\n  \"祝\",\n  \"秒\",\n  \"浙\",\n  \"貌\",\n  \"役\",\n  \"彼\",\n  \"悉\",\n  \"鴨\",\n  \"趨\",\n  \"鳳\",\n  \"晨\",\n  \"畜\",\n  \"輩\",\n  \"秩\",\n  \"卵\",\n  \"署\",\n  \"梯\",\n  \"炎\",\n  \"灘\",\n  \"棋\",\n  \"驅\",\n  \"篩\",\n  \"峽\",\n  \"冒\",\n  \"啥\",\n  \"壽\",\n  \"譯\",\n  \"浸\",\n  \"泉\",\n  \"帽\",\n  \"遲\",\n  \"矽\",\n  \"疆\",\n  \"貸\",\n  \"漏\",\n  \"稿\",\n  \"冠\",\n  \"嫩\",\n  \"脅\",\n  \"芯\",\n  \"牢\",\n  \"叛\",\n  \"蝕\",\n  \"奧\",\n  \"鳴\",\n  \"嶺\",\n  \"羊\",\n  \"憑\",\n  \"串\",\n  \"塘\",\n  \"繪\",\n  \"酵\",\n  \"融\",\n  \"盆\",\n  \"錫\",\n  \"廟\",\n  \"籌\",\n  \"凍\",\n  \"輔\",\n  \"攝\",\n  \"襲\",\n  \"筋\",\n  \"拒\",\n  \"僚\",\n  \"旱\",\n  \"鉀\",\n  \"鳥\",\n  \"漆\",\n  \"沈\",\n  \"眉\",\n  \"疏\",\n  \"添\",\n  \"棒\",\n  \"穗\",\n  \"硝\",\n  \"韓\",\n  \"逼\",\n  \"扭\",\n  \"僑\",\n  \"涼\",\n  \"挺\",\n  \"碗\",\n  \"栽\",\n  \"炒\",\n  \"杯\",\n  \"患\",\n  \"餾\",\n  \"勸\",\n  \"豪\",\n  \"遼\",\n  \"勃\",\n  \"鴻\",\n  \"旦\",\n  \"吏\",\n  \"拜\",\n  \"狗\",\n  \"埋\",\n  \"輥\",\n  \"掩\",\n  \"飲\",\n  \"搬\",\n  \"罵\",\n  \"辭\",\n  \"勾\",\n  \"扣\",\n  \"估\",\n  \"蔣\",\n  \"絨\",\n  \"霧\",\n  \"丈\",\n  \"朵\",\n  \"姆\",\n  \"擬\",\n  \"宇\",\n  \"輯\",\n  \"陝\",\n  \"雕\",\n  \"償\",\n  \"蓄\",\n  \"崇\",\n  \"剪\",\n  \"倡\",\n  \"廳\",\n  \"咬\",\n  \"駛\",\n  \"薯\",\n  \"刷\",\n  \"斥\",\n  \"番\",\n  \"賦\",\n  \"奉\",\n  \"佛\",\n  \"澆\",\n  \"漫\",\n  \"曼\",\n  \"扇\",\n  \"鈣\",\n  \"桃\",\n  \"扶\",\n  \"仔\",\n  \"返\",\n  \"俗\",\n  \"虧\",\n  \"腔\",\n  \"鞋\",\n  \"棱\",\n  \"覆\",\n  \"框\",\n  \"悄\",\n  \"叔\",\n  \"撞\",\n  \"騙\",\n  \"勘\",\n  \"旺\",\n  \"沸\",\n  \"孤\",\n  \"吐\",\n  \"孟\",\n  \"渠\",\n  \"屈\",\n  \"疾\",\n  \"妙\",\n  \"惜\",\n  \"仰\",\n  \"狠\",\n  \"脹\",\n  \"諧\",\n  \"拋\",\n  \"黴\",\n  \"桑\",\n  \"崗\",\n  \"嘛\",\n  \"衰\",\n  \"盜\",\n  \"滲\",\n  \"臟\",\n  \"賴\",\n  \"湧\",\n  \"甜\",\n  \"曹\",\n  \"閱\",\n  \"肌\",\n  \"哩\",\n  \"厲\",\n  \"烴\",\n  \"緯\",\n  \"毅\",\n  \"昨\",\n  \"偽\",\n  \"症\",\n  \"煮\",\n  \"嘆\",\n  \"釘\",\n  \"搭\",\n  \"莖\",\n  \"籠\",\n  \"酷\",\n  \"偷\",\n  \"弓\",\n  \"錐\",\n  \"恆\",\n  \"傑\",\n  \"坑\",\n  \"鼻\",\n  \"翼\",\n  \"綸\",\n  \"敘\",\n  \"獄\",\n  \"逮\",\n  \"罐\",\n  \"絡\",\n  \"棚\",\n  \"抑\",\n  \"膨\",\n  \"蔬\",\n  \"寺\",\n  \"驟\",\n  \"穆\",\n  \"冶\",\n  \"枯\",\n  \"冊\",\n  \"屍\",\n  \"凸\",\n  \"紳\",\n  \"坯\",\n  \"犧\",\n  \"焰\",\n  \"轟\",\n  \"欣\",\n  \"晉\",\n  \"瘦\",\n  \"禦\",\n  \"錠\",\n  \"錦\",\n  \"喪\",\n  \"旬\",\n  \"鍛\",\n  \"壟\",\n  \"搜\",\n  \"撲\",\n  \"邀\",\n  \"亭\",\n  \"酯\",\n  \"邁\",\n  \"舒\",\n  \"脆\",\n  \"酶\",\n  \"閒\",\n  \"憂\",\n  \"酚\",\n  \"頑\",\n  \"羽\",\n  \"漲\",\n  \"卸\",\n  \"仗\",\n  \"陪\",\n  \"闢\",\n  \"懲\",\n  \"杭\",\n  \"姚\",\n  \"肚\",\n  \"捉\",\n  \"飄\",\n  \"漂\",\n  \"昆\",\n  \"欺\",\n  \"吾\",\n  \"郎\",\n  \"烷\",\n  \"汁\",\n  \"呵\",\n  \"飾\",\n  \"蕭\",\n  \"雅\",\n  \"郵\",\n  \"遷\",\n  \"燕\",\n  \"撒\",\n  \"姻\",\n  \"赴\",\n  \"宴\",\n  \"煩\",\n  \"債\",\n  \"帳\",\n  \"斑\",\n  \"鈴\",\n  \"旨\",\n  \"醇\",\n  \"董\",\n  \"餅\",\n  \"雛\",\n  \"姿\",\n  \"拌\",\n  \"傅\",\n  \"腹\",\n  \"妥\",\n  \"揉\",\n  \"賢\",\n  \"拆\",\n  \"歪\",\n  \"葡\",\n  \"胺\",\n  \"丟\",\n  \"浩\",\n  \"徽\",\n  \"昂\",\n  \"墊\",\n  \"擋\",\n  \"覽\",\n  \"貪\",\n  \"慰\",\n  \"繳\",\n  \"汪\",\n  \"慌\",\n  \"馮\",\n  \"諾\",\n  \"姜\",\n  \"誼\",\n  \"兇\",\n  \"劣\",\n  \"誣\",\n  \"耀\",\n  \"昏\",\n  \"躺\",\n  \"盈\",\n  \"騎\",\n  \"喬\",\n  \"溪\",\n  \"叢\",\n  \"盧\",\n  \"抹\",\n  \"悶\",\n  \"諮\",\n  \"刮\",\n  \"駕\",\n  \"纜\",\n  \"悟\",\n  \"摘\",\n  \"鉺\",\n  \"擲\",\n  \"頗\",\n  \"幻\",\n  \"柄\",\n  \"惠\",\n  \"慘\",\n  \"佳\",\n  \"仇\",\n  \"臘\",\n  \"窩\",\n  \"滌\",\n  \"劍\",\n  \"瞧\",\n  \"堡\",\n  \"潑\",\n  \"蔥\",\n  \"罩\",\n  \"霍\",\n  \"撈\",\n  \"胎\",\n  \"蒼\",\n  \"濱\",\n  \"倆\",\n  \"捅\",\n  \"湘\",\n  \"砍\",\n  \"霞\",\n  \"邵\",\n  \"萄\",\n  \"瘋\",\n  \"淮\",\n  \"遂\",\n  \"熊\",\n  \"糞\",\n  \"烘\",\n  \"宿\",\n  \"檔\",\n  \"戈\",\n  \"駁\",\n  \"嫂\",\n  \"裕\",\n  \"徙\",\n  \"箭\",\n  \"捐\",\n  \"腸\",\n  \"撐\",\n  \"曬\",\n  \"辨\",\n  \"殿\",\n  \"蓮\",\n  \"攤\",\n  \"攪\",\n  \"醬\",\n  \"屏\",\n  \"疫\",\n  \"哀\",\n  \"蔡\",\n  \"堵\",\n  \"沫\",\n  \"皺\",\n  \"暢\",\n  \"疊\",\n  \"閣\",\n  \"萊\",\n  \"敲\",\n  \"轄\",\n  \"鉤\",\n  \"痕\",\n  \"壩\",\n  \"巷\",\n  \"餓\",\n  \"禍\",\n  \"丘\",\n  \"玄\",\n  \"溜\",\n  \"曰\",\n  \"邏\",\n  \"彭\",\n  \"嘗\",\n  \"卿\",\n  \"妨\",\n  \"艇\",\n  \"吞\",\n  \"韋\",\n  \"怨\",\n  \"矮\",\n  \"歇\"\n]\n","module.exports=[\n  \"abaco\",\n  \"abbaglio\",\n  \"abbinato\",\n  \"abete\",\n  \"abisso\",\n  \"abolire\",\n  \"abrasivo\",\n  \"abrogato\",\n  \"accadere\",\n  \"accenno\",\n  \"accusato\",\n  \"acetone\",\n  \"achille\",\n  \"acido\",\n  \"acqua\",\n  \"acre\",\n  \"acrilico\",\n  \"acrobata\",\n  \"acuto\",\n  \"adagio\",\n  \"addebito\",\n  \"addome\",\n  \"adeguato\",\n  \"aderire\",\n  \"adipe\",\n  \"adottare\",\n  \"adulare\",\n  \"affabile\",\n  \"affetto\",\n  \"affisso\",\n  \"affranto\",\n  \"aforisma\",\n  \"afoso\",\n  \"africano\",\n  \"agave\",\n  \"agente\",\n  \"agevole\",\n  \"aggancio\",\n  \"agire\",\n  \"agitare\",\n  \"agonismo\",\n  \"agricolo\",\n  \"agrumeto\",\n  \"aguzzo\",\n  \"alabarda\",\n  \"alato\",\n  \"albatro\",\n  \"alberato\",\n  \"albo\",\n  \"albume\",\n  \"alce\",\n  \"alcolico\",\n  \"alettone\",\n  \"alfa\",\n  \"algebra\",\n  \"aliante\",\n  \"alibi\",\n  \"alimento\",\n  \"allagato\",\n  \"allegro\",\n  \"allievo\",\n  \"allodola\",\n  \"allusivo\",\n  \"almeno\",\n  \"alogeno\",\n  \"alpaca\",\n  \"alpestre\",\n  \"altalena\",\n  \"alterno\",\n  \"alticcio\",\n  \"altrove\",\n  \"alunno\",\n  \"alveolo\",\n  \"alzare\",\n  \"amalgama\",\n  \"amanita\",\n  \"amarena\",\n  \"ambito\",\n  \"ambrato\",\n  \"ameba\",\n  \"america\",\n  \"ametista\",\n  \"amico\",\n  \"ammasso\",\n  \"ammenda\",\n  \"ammirare\",\n  \"ammonito\",\n  \"amore\",\n  \"ampio\",\n  \"ampliare\",\n  \"amuleto\",\n  \"anacardo\",\n  \"anagrafe\",\n  \"analista\",\n  \"anarchia\",\n  \"anatra\",\n  \"anca\",\n  \"ancella\",\n  \"ancora\",\n  \"andare\",\n  \"andrea\",\n  \"anello\",\n  \"angelo\",\n  \"angolare\",\n  \"angusto\",\n  \"anima\",\n  \"annegare\",\n  \"annidato\",\n  \"anno\",\n  \"annuncio\",\n  \"anonimo\",\n  \"anticipo\",\n  \"anzi\",\n  \"apatico\",\n  \"apertura\",\n  \"apode\",\n  \"apparire\",\n  \"appetito\",\n  \"appoggio\",\n  \"approdo\",\n  \"appunto\",\n  \"aprile\",\n  \"arabica\",\n  \"arachide\",\n  \"aragosta\",\n  \"araldica\",\n  \"arancio\",\n  \"aratura\",\n  \"arazzo\",\n  \"arbitro\",\n  \"archivio\",\n  \"ardito\",\n  \"arenile\",\n  \"argento\",\n  \"argine\",\n  \"arguto\",\n  \"aria\",\n  \"armonia\",\n  \"arnese\",\n  \"arredato\",\n  \"arringa\",\n  \"arrosto\",\n  \"arsenico\",\n  \"arso\",\n  \"artefice\",\n  \"arzillo\",\n  \"asciutto\",\n  \"ascolto\",\n  \"asepsi\",\n  \"asettico\",\n  \"asfalto\",\n  \"asino\",\n  \"asola\",\n  \"aspirato\",\n  \"aspro\",\n  \"assaggio\",\n  \"asse\",\n  \"assoluto\",\n  \"assurdo\",\n  \"asta\",\n  \"astenuto\",\n  \"astice\",\n  \"astratto\",\n  \"atavico\",\n  \"ateismo\",\n  \"atomico\",\n  \"atono\",\n  \"attesa\",\n  \"attivare\",\n  \"attorno\",\n  \"attrito\",\n  \"attuale\",\n  \"ausilio\",\n  \"austria\",\n  \"autista\",\n  \"autonomo\",\n  \"autunno\",\n  \"avanzato\",\n  \"avere\",\n  \"avvenire\",\n  \"avviso\",\n  \"avvolgere\",\n  \"azione\",\n  \"azoto\",\n  \"azzimo\",\n  \"azzurro\",\n  \"babele\",\n  \"baccano\",\n  \"bacino\",\n  \"baco\",\n  \"badessa\",\n  \"badilata\",\n  \"bagnato\",\n  \"baita\",\n  \"balcone\",\n  \"baldo\",\n  \"balena\",\n  \"ballata\",\n  \"balzano\",\n  \"bambino\",\n  \"bandire\",\n  \"baraonda\",\n  \"barbaro\",\n  \"barca\",\n  \"baritono\",\n  \"barlume\",\n  \"barocco\",\n  \"basilico\",\n  \"basso\",\n  \"batosta\",\n  \"battuto\",\n  \"baule\",\n  \"bava\",\n  \"bavosa\",\n  \"becco\",\n  \"beffa\",\n  \"belgio\",\n  \"belva\",\n  \"benda\",\n  \"benevole\",\n  \"benigno\",\n  \"benzina\",\n  \"bere\",\n  \"berlina\",\n  \"beta\",\n  \"bibita\",\n  \"bici\",\n  \"bidone\",\n  \"bifido\",\n  \"biga\",\n  \"bilancia\",\n  \"bimbo\",\n  \"binocolo\",\n  \"biologo\",\n  \"bipede\",\n  \"bipolare\",\n  \"birbante\",\n  \"birra\",\n  \"biscotto\",\n  \"bisesto\",\n  \"bisnonno\",\n  \"bisonte\",\n  \"bisturi\",\n  \"bizzarro\",\n  \"blando\",\n  \"blatta\",\n  \"bollito\",\n  \"bonifico\",\n  \"bordo\",\n  \"bosco\",\n  \"botanico\",\n  \"bottino\",\n  \"bozzolo\",\n  \"braccio\",\n  \"bradipo\",\n  \"brama\",\n  \"branca\",\n  \"bravura\",\n  \"bretella\",\n  \"brevetto\",\n  \"brezza\",\n  \"briglia\",\n  \"brillante\",\n  \"brindare\",\n  \"broccolo\",\n  \"brodo\",\n  \"bronzina\",\n  \"brullo\",\n  \"bruno\",\n  \"bubbone\",\n  \"buca\",\n  \"budino\",\n  \"buffone\",\n  \"buio\",\n  \"bulbo\",\n  \"buono\",\n  \"burlone\",\n  \"burrasca\",\n  \"bussola\",\n  \"busta\",\n  \"cadetto\",\n  \"caduco\",\n  \"calamaro\",\n  \"calcolo\",\n  \"calesse\",\n  \"calibro\",\n  \"calmo\",\n  \"caloria\",\n  \"cambusa\",\n  \"camerata\",\n  \"camicia\",\n  \"cammino\",\n  \"camola\",\n  \"campale\",\n  \"canapa\",\n  \"candela\",\n  \"cane\",\n  \"canino\",\n  \"canotto\",\n  \"cantina\",\n  \"capace\",\n  \"capello\",\n  \"capitolo\",\n  \"capogiro\",\n  \"cappero\",\n  \"capra\",\n  \"capsula\",\n  \"carapace\",\n  \"carcassa\",\n  \"cardo\",\n  \"carisma\",\n  \"carovana\",\n  \"carretto\",\n  \"cartolina\",\n  \"casaccio\",\n  \"cascata\",\n  \"caserma\",\n  \"caso\",\n  \"cassone\",\n  \"castello\",\n  \"casuale\",\n  \"catasta\",\n  \"catena\",\n  \"catrame\",\n  \"cauto\",\n  \"cavillo\",\n  \"cedibile\",\n  \"cedrata\",\n  \"cefalo\",\n  \"celebre\",\n  \"cellulare\",\n  \"cena\",\n  \"cenone\",\n  \"centesimo\",\n  \"ceramica\",\n  \"cercare\",\n  \"certo\",\n  \"cerume\",\n  \"cervello\",\n  \"cesoia\",\n  \"cespo\",\n  \"ceto\",\n  \"chela\",\n  \"chiaro\",\n  \"chicca\",\n  \"chiedere\",\n  \"chimera\",\n  \"china\",\n  \"chirurgo\",\n  \"chitarra\",\n  \"ciao\",\n  \"ciclismo\",\n  \"cifrare\",\n  \"cigno\",\n  \"cilindro\",\n  \"ciottolo\",\n  \"circa\",\n  \"cirrosi\",\n  \"citrico\",\n  \"cittadino\",\n  \"ciuffo\",\n  \"civetta\",\n  \"civile\",\n  \"classico\",\n  \"clinica\",\n  \"cloro\",\n  \"cocco\",\n  \"codardo\",\n  \"codice\",\n  \"coerente\",\n  \"cognome\",\n  \"collare\",\n  \"colmato\",\n  \"colore\",\n  \"colposo\",\n  \"coltivato\",\n  \"colza\",\n  \"coma\",\n  \"cometa\",\n  \"commando\",\n  \"comodo\",\n  \"computer\",\n  \"comune\",\n  \"conciso\",\n  \"condurre\",\n  \"conferma\",\n  \"congelare\",\n  \"coniuge\",\n  \"connesso\",\n  \"conoscere\",\n  \"consumo\",\n  \"continuo\",\n  \"convegno\",\n  \"coperto\",\n  \"copione\",\n  \"coppia\",\n  \"copricapo\",\n  \"corazza\",\n  \"cordata\",\n  \"coricato\",\n  \"cornice\",\n  \"corolla\",\n  \"corpo\",\n  \"corredo\",\n  \"corsia\",\n  \"cortese\",\n  \"cosmico\",\n  \"costante\",\n  \"cottura\",\n  \"covato\",\n  \"cratere\",\n  \"cravatta\",\n  \"creato\",\n  \"credere\",\n  \"cremoso\",\n  \"crescita\",\n  \"creta\",\n  \"criceto\",\n  \"crinale\",\n  \"crisi\",\n  \"critico\",\n  \"croce\",\n  \"cronaca\",\n  \"crostata\",\n  \"cruciale\",\n  \"crusca\",\n  \"cucire\",\n  \"cuculo\",\n  \"cugino\",\n  \"cullato\",\n  \"cupola\",\n  \"curatore\",\n  \"cursore\",\n  \"curvo\",\n  \"cuscino\",\n  \"custode\",\n  \"dado\",\n  \"daino\",\n  \"dalmata\",\n  \"damerino\",\n  \"daniela\",\n  \"dannoso\",\n  \"danzare\",\n  \"datato\",\n  \"davanti\",\n  \"davvero\",\n  \"debutto\",\n  \"decennio\",\n  \"deciso\",\n  \"declino\",\n  \"decollo\",\n  \"decreto\",\n  \"dedicato\",\n  \"definito\",\n  \"deforme\",\n  \"degno\",\n  \"delegare\",\n  \"delfino\",\n  \"delirio\",\n  \"delta\",\n  \"demenza\",\n  \"denotato\",\n  \"dentro\",\n  \"deposito\",\n  \"derapata\",\n  \"derivare\",\n  \"deroga\",\n  \"descritto\",\n  \"deserto\",\n  \"desiderio\",\n  \"desumere\",\n  \"detersivo\",\n  \"devoto\",\n  \"diametro\",\n  \"dicembre\",\n  \"diedro\",\n  \"difeso\",\n  \"diffuso\",\n  \"digerire\",\n  \"digitale\",\n  \"diluvio\",\n  \"dinamico\",\n  \"dinnanzi\",\n  \"dipinto\",\n  \"diploma\",\n  \"dipolo\",\n  \"diradare\",\n  \"dire\",\n  \"dirotto\",\n  \"dirupo\",\n  \"disagio\",\n  \"discreto\",\n  \"disfare\",\n  \"disgelo\",\n  \"disposto\",\n  \"distanza\",\n  \"disumano\",\n  \"dito\",\n  \"divano\",\n  \"divelto\",\n  \"dividere\",\n  \"divorato\",\n  \"doblone\",\n  \"docente\",\n  \"doganale\",\n  \"dogma\",\n  \"dolce\",\n  \"domato\",\n  \"domenica\",\n  \"dominare\",\n  \"dondolo\",\n  \"dono\",\n  \"dormire\",\n  \"dote\",\n  \"dottore\",\n  \"dovuto\",\n  \"dozzina\",\n  \"drago\",\n  \"druido\",\n  \"dubbio\",\n  \"dubitare\",\n  \"ducale\",\n  \"duna\",\n  \"duomo\",\n  \"duplice\",\n  \"duraturo\",\n  \"ebano\",\n  \"eccesso\",\n  \"ecco\",\n  \"eclissi\",\n  \"economia\",\n  \"edera\",\n  \"edicola\",\n  \"edile\",\n  \"editoria\",\n  \"educare\",\n  \"egemonia\",\n  \"egli\",\n  \"egoismo\",\n  \"egregio\",\n  \"elaborato\",\n  \"elargire\",\n  \"elegante\",\n  \"elencato\",\n  \"eletto\",\n  \"elevare\",\n  \"elfico\",\n  \"elica\",\n  \"elmo\",\n  \"elsa\",\n  \"eluso\",\n  \"emanato\",\n  \"emblema\",\n  \"emesso\",\n  \"emiro\",\n  \"emotivo\",\n  \"emozione\",\n  \"empirico\",\n  \"emulo\",\n  \"endemico\",\n  \"enduro\",\n  \"energia\",\n  \"enfasi\",\n  \"enoteca\",\n  \"entrare\",\n  \"enzima\",\n  \"epatite\",\n  \"epilogo\",\n  \"episodio\",\n  \"epocale\",\n  \"eppure\",\n  \"equatore\",\n  \"erario\",\n  \"erba\",\n  \"erboso\",\n  \"erede\",\n  \"eremita\",\n  \"erigere\",\n  \"ermetico\",\n  \"eroe\",\n  \"erosivo\",\n  \"errante\",\n  \"esagono\",\n  \"esame\",\n  \"esanime\",\n  \"esaudire\",\n  \"esca\",\n  \"esempio\",\n  \"esercito\",\n  \"esibito\",\n  \"esigente\",\n  \"esistere\",\n  \"esito\",\n  \"esofago\",\n  \"esortato\",\n  \"esoso\",\n  \"espanso\",\n  \"espresso\",\n  \"essenza\",\n  \"esso\",\n  \"esteso\",\n  \"estimare\",\n  \"estonia\",\n  \"estroso\",\n  \"esultare\",\n  \"etilico\",\n  \"etnico\",\n  \"etrusco\",\n  \"etto\",\n  \"euclideo\",\n  \"europa\",\n  \"evaso\",\n  \"evidenza\",\n  \"evitato\",\n  \"evoluto\",\n  \"evviva\",\n  \"fabbrica\",\n  \"faccenda\",\n  \"fachiro\",\n  \"falco\",\n  \"famiglia\",\n  \"fanale\",\n  \"fanfara\",\n  \"fango\",\n  \"fantasma\",\n  \"fare\",\n  \"farfalla\",\n  \"farinoso\",\n  \"farmaco\",\n  \"fascia\",\n  \"fastoso\",\n  \"fasullo\",\n  \"faticare\",\n  \"fato\",\n  \"favoloso\",\n  \"febbre\",\n  \"fecola\",\n  \"fede\",\n  \"fegato\",\n  \"felpa\",\n  \"feltro\",\n  \"femmina\",\n  \"fendere\",\n  \"fenomeno\",\n  \"fermento\",\n  \"ferro\",\n  \"fertile\",\n  \"fessura\",\n  \"festivo\",\n  \"fetta\",\n  \"feudo\",\n  \"fiaba\",\n  \"fiducia\",\n  \"fifa\",\n  \"figurato\",\n  \"filo\",\n  \"finanza\",\n  \"finestra\",\n  \"finire\",\n  \"fiore\",\n  \"fiscale\",\n  \"fisico\",\n  \"fiume\",\n  \"flacone\",\n  \"flamenco\",\n  \"flebo\",\n  \"flemma\",\n  \"florido\",\n  \"fluente\",\n  \"fluoro\",\n  \"fobico\",\n  \"focaccia\",\n  \"focoso\",\n  \"foderato\",\n  \"foglio\",\n  \"folata\",\n  \"folclore\",\n  \"folgore\",\n  \"fondente\",\n  \"fonetico\",\n  \"fonia\",\n  \"fontana\",\n  \"forbito\",\n  \"forchetta\",\n  \"foresta\",\n  \"formica\",\n  \"fornaio\",\n  \"foro\",\n  \"fortezza\",\n  \"forzare\",\n  \"fosfato\",\n  \"fosso\",\n  \"fracasso\",\n  \"frana\",\n  \"frassino\",\n  \"fratello\",\n  \"freccetta\",\n  \"frenata\",\n  \"fresco\",\n  \"frigo\",\n  \"frollino\",\n  \"fronde\",\n  \"frugale\",\n  \"frutta\",\n  \"fucilata\",\n  \"fucsia\",\n  \"fuggente\",\n  \"fulmine\",\n  \"fulvo\",\n  \"fumante\",\n  \"fumetto\",\n  \"fumoso\",\n  \"fune\",\n  \"funzione\",\n  \"fuoco\",\n  \"furbo\",\n  \"furgone\",\n  \"furore\",\n  \"fuso\",\n  \"futile\",\n  \"gabbiano\",\n  \"gaffe\",\n  \"galateo\",\n  \"gallina\",\n  \"galoppo\",\n  \"gambero\",\n  \"gamma\",\n  \"garanzia\",\n  \"garbo\",\n  \"garofano\",\n  \"garzone\",\n  \"gasdotto\",\n  \"gasolio\",\n  \"gastrico\",\n  \"gatto\",\n  \"gaudio\",\n  \"gazebo\",\n  \"gazzella\",\n  \"geco\",\n  \"gelatina\",\n  \"gelso\",\n  \"gemello\",\n  \"gemmato\",\n  \"gene\",\n  \"genitore\",\n  \"gennaio\",\n  \"genotipo\",\n  \"gergo\",\n  \"ghepardo\",\n  \"ghiaccio\",\n  \"ghisa\",\n  \"giallo\",\n  \"gilda\",\n  \"ginepro\",\n  \"giocare\",\n  \"gioiello\",\n  \"giorno\",\n  \"giove\",\n  \"girato\",\n  \"girone\",\n  \"gittata\",\n  \"giudizio\",\n  \"giurato\",\n  \"giusto\",\n  \"globulo\",\n  \"glutine\",\n  \"gnomo\",\n  \"gobba\",\n  \"golf\",\n  \"gomito\",\n  \"gommone\",\n  \"gonfio\",\n  \"gonna\",\n  \"governo\",\n  \"gracile\",\n  \"grado\",\n  \"grafico\",\n  \"grammo\",\n  \"grande\",\n  \"grattare\",\n  \"gravoso\",\n  \"grazia\",\n  \"greca\",\n  \"gregge\",\n  \"grifone\",\n  \"grigio\",\n  \"grinza\",\n  \"grotta\",\n  \"gruppo\",\n  \"guadagno\",\n  \"guaio\",\n  \"guanto\",\n  \"guardare\",\n  \"gufo\",\n  \"guidare\",\n  \"ibernato\",\n  \"icona\",\n  \"identico\",\n  \"idillio\",\n  \"idolo\",\n  \"idra\",\n  \"idrico\",\n  \"idrogeno\",\n  \"igiene\",\n  \"ignaro\",\n  \"ignorato\",\n  \"ilare\",\n  \"illeso\",\n  \"illogico\",\n  \"illudere\",\n  \"imballo\",\n  \"imbevuto\",\n  \"imbocco\",\n  \"imbuto\",\n  \"immane\",\n  \"immerso\",\n  \"immolato\",\n  \"impacco\",\n  \"impeto\",\n  \"impiego\",\n  \"importo\",\n  \"impronta\",\n  \"inalare\",\n  \"inarcare\",\n  \"inattivo\",\n  \"incanto\",\n  \"incendio\",\n  \"inchino\",\n  \"incisivo\",\n  \"incluso\",\n  \"incontro\",\n  \"incrocio\",\n  \"incubo\",\n  \"indagine\",\n  \"india\",\n  \"indole\",\n  \"inedito\",\n  \"infatti\",\n  \"infilare\",\n  \"inflitto\",\n  \"ingaggio\",\n  \"ingegno\",\n  \"inglese\",\n  \"ingordo\",\n  \"ingrosso\",\n  \"innesco\",\n  \"inodore\",\n  \"inoltrare\",\n  \"inondato\",\n  \"insano\",\n  \"insetto\",\n  \"insieme\",\n  \"insonnia\",\n  \"insulina\",\n  \"intasato\",\n  \"intero\",\n  \"intonaco\",\n  \"intuito\",\n  \"inumidire\",\n  \"invalido\",\n  \"invece\",\n  \"invito\",\n  \"iperbole\",\n  \"ipnotico\",\n  \"ipotesi\",\n  \"ippica\",\n  \"iride\",\n  \"irlanda\",\n  \"ironico\",\n  \"irrigato\",\n  \"irrorare\",\n  \"isolato\",\n  \"isotopo\",\n  \"isterico\",\n  \"istituto\",\n  \"istrice\",\n  \"italia\",\n  \"iterare\",\n  \"labbro\",\n  \"labirinto\",\n  \"lacca\",\n  \"lacerato\",\n  \"lacrima\",\n  \"lacuna\",\n  \"laddove\",\n  \"lago\",\n  \"lampo\",\n  \"lancetta\",\n  \"lanterna\",\n  \"lardoso\",\n  \"larga\",\n  \"laringe\",\n  \"lastra\",\n  \"latenza\",\n  \"latino\",\n  \"lattuga\",\n  \"lavagna\",\n  \"lavoro\",\n  \"legale\",\n  \"leggero\",\n  \"lembo\",\n  \"lentezza\",\n  \"lenza\",\n  \"leone\",\n  \"lepre\",\n  \"lesivo\",\n  \"lessato\",\n  \"lesto\",\n  \"letterale\",\n  \"leva\",\n  \"levigato\",\n  \"libero\",\n  \"lido\",\n  \"lievito\",\n  \"lilla\",\n  \"limatura\",\n  \"limitare\",\n  \"limpido\",\n  \"lineare\",\n  \"lingua\",\n  \"liquido\",\n  \"lira\",\n  \"lirica\",\n  \"lisca\",\n  \"lite\",\n  \"litigio\",\n  \"livrea\",\n  \"locanda\",\n  \"lode\",\n  \"logica\",\n  \"lombare\",\n  \"londra\",\n  \"longevo\",\n  \"loquace\",\n  \"lorenzo\",\n  \"loto\",\n  \"lotteria\",\n  \"luce\",\n  \"lucidato\",\n  \"lumaca\",\n  \"luminoso\",\n  \"lungo\",\n  \"lupo\",\n  \"luppolo\",\n  \"lusinga\",\n  \"lusso\",\n  \"lutto\",\n  \"macabro\",\n  \"macchina\",\n  \"macero\",\n  \"macinato\",\n  \"madama\",\n  \"magico\",\n  \"maglia\",\n  \"magnete\",\n  \"magro\",\n  \"maiolica\",\n  \"malafede\",\n  \"malgrado\",\n  \"malinteso\",\n  \"malsano\",\n  \"malto\",\n  \"malumore\",\n  \"mana\",\n  \"mancia\",\n  \"mandorla\",\n  \"mangiare\",\n  \"manifesto\",\n  \"mannaro\",\n  \"manovra\",\n  \"mansarda\",\n  \"mantide\",\n  \"manubrio\",\n  \"mappa\",\n  \"maratona\",\n  \"marcire\",\n  \"maretta\",\n  \"marmo\",\n  \"marsupio\",\n  \"maschera\",\n  \"massaia\",\n  \"mastino\",\n  \"materasso\",\n  \"matricola\",\n  \"mattone\",\n  \"maturo\",\n  \"mazurca\",\n  \"meandro\",\n  \"meccanico\",\n  \"mecenate\",\n  \"medesimo\",\n  \"meditare\",\n  \"mega\",\n  \"melassa\",\n  \"melis\",\n  \"melodia\",\n  \"meninge\",\n  \"meno\",\n  \"mensola\",\n  \"mercurio\",\n  \"merenda\",\n  \"merlo\",\n  \"meschino\",\n  \"mese\",\n  \"messere\",\n  \"mestolo\",\n  \"metallo\",\n  \"metodo\",\n  \"mettere\",\n  \"miagolare\",\n  \"mica\",\n  \"micelio\",\n  \"michele\",\n  \"microbo\",\n  \"midollo\",\n  \"miele\",\n  \"migliore\",\n  \"milano\",\n  \"milite\",\n  \"mimosa\",\n  \"minerale\",\n  \"mini\",\n  \"minore\",\n  \"mirino\",\n  \"mirtillo\",\n  \"miscela\",\n  \"missiva\",\n  \"misto\",\n  \"misurare\",\n  \"mitezza\",\n  \"mitigare\",\n  \"mitra\",\n  \"mittente\",\n  \"mnemonico\",\n  \"modello\",\n  \"modifica\",\n  \"modulo\",\n  \"mogano\",\n  \"mogio\",\n  \"mole\",\n  \"molosso\",\n  \"monastero\",\n  \"monco\",\n  \"mondina\",\n  \"monetario\",\n  \"monile\",\n  \"monotono\",\n  \"monsone\",\n  \"montato\",\n  \"monviso\",\n  \"mora\",\n  \"mordere\",\n  \"morsicato\",\n  \"mostro\",\n  \"motivato\",\n  \"motosega\",\n  \"motto\",\n  \"movenza\",\n  \"movimento\",\n  \"mozzo\",\n  \"mucca\",\n  \"mucosa\",\n  \"muffa\",\n  \"mughetto\",\n  \"mugnaio\",\n  \"mulatto\",\n  \"mulinello\",\n  \"multiplo\",\n  \"mummia\",\n  \"munto\",\n  \"muovere\",\n  \"murale\",\n  \"musa\",\n  \"muscolo\",\n  \"musica\",\n  \"mutevole\",\n  \"muto\",\n  \"nababbo\",\n  \"nafta\",\n  \"nanometro\",\n  \"narciso\",\n  \"narice\",\n  \"narrato\",\n  \"nascere\",\n  \"nastrare\",\n  \"naturale\",\n  \"nautica\",\n  \"naviglio\",\n  \"nebulosa\",\n  \"necrosi\",\n  \"negativo\",\n  \"negozio\",\n  \"nemmeno\",\n  \"neofita\",\n  \"neretto\",\n  \"nervo\",\n  \"nessuno\",\n  \"nettuno\",\n  \"neutrale\",\n  \"neve\",\n  \"nevrotico\",\n  \"nicchia\",\n  \"ninfa\",\n  \"nitido\",\n  \"nobile\",\n  \"nocivo\",\n  \"nodo\",\n  \"nome\",\n  \"nomina\",\n  \"nordico\",\n  \"normale\",\n  \"norvegese\",\n  \"nostrano\",\n  \"notare\",\n  \"notizia\",\n  \"notturno\",\n  \"novella\",\n  \"nucleo\",\n  \"nulla\",\n  \"numero\",\n  \"nuovo\",\n  \"nutrire\",\n  \"nuvola\",\n  \"nuziale\",\n  \"oasi\",\n  \"obbedire\",\n  \"obbligo\",\n  \"obelisco\",\n  \"oblio\",\n  \"obolo\",\n  \"obsoleto\",\n  \"occasione\",\n  \"occhio\",\n  \"occidente\",\n  \"occorrere\",\n  \"occultare\",\n  \"ocra\",\n  \"oculato\",\n  \"odierno\",\n  \"odorare\",\n  \"offerta\",\n  \"offrire\",\n  \"offuscato\",\n  \"oggetto\",\n  \"oggi\",\n  \"ognuno\",\n  \"olandese\",\n  \"olfatto\",\n  \"oliato\",\n  \"oliva\",\n  \"ologramma\",\n  \"oltre\",\n  \"omaggio\",\n  \"ombelico\",\n  \"ombra\",\n  \"omega\",\n  \"omissione\",\n  \"ondoso\",\n  \"onere\",\n  \"onice\",\n  \"onnivoro\",\n  \"onorevole\",\n  \"onta\",\n  \"operato\",\n  \"opinione\",\n  \"opposto\",\n  \"oracolo\",\n  \"orafo\",\n  \"ordine\",\n  \"orecchino\",\n  \"orefice\",\n  \"orfano\",\n  \"organico\",\n  \"origine\",\n  \"orizzonte\",\n  \"orma\",\n  \"ormeggio\",\n  \"ornativo\",\n  \"orologio\",\n  \"orrendo\",\n  \"orribile\",\n  \"ortensia\",\n  \"ortica\",\n  \"orzata\",\n  \"orzo\",\n  \"osare\",\n  \"oscurare\",\n  \"osmosi\",\n  \"ospedale\",\n  \"ospite\",\n  \"ossa\",\n  \"ossidare\",\n  \"ostacolo\",\n  \"oste\",\n  \"otite\",\n  \"otre\",\n  \"ottagono\",\n  \"ottimo\",\n  \"ottobre\",\n  \"ovale\",\n  \"ovest\",\n  \"ovino\",\n  \"oviparo\",\n  \"ovocito\",\n  \"ovunque\",\n  \"ovviare\",\n  \"ozio\",\n  \"pacchetto\",\n  \"pace\",\n  \"pacifico\",\n  \"padella\",\n  \"padrone\",\n  \"paese\",\n  \"paga\",\n  \"pagina\",\n  \"palazzina\",\n  \"palesare\",\n  \"pallido\",\n  \"palo\",\n  \"palude\",\n  \"pandoro\",\n  \"pannello\",\n  \"paolo\",\n  \"paonazzo\",\n  \"paprica\",\n  \"parabola\",\n  \"parcella\",\n  \"parere\",\n  \"pargolo\",\n  \"pari\",\n  \"parlato\",\n  \"parola\",\n  \"partire\",\n  \"parvenza\",\n  \"parziale\",\n  \"passivo\",\n  \"pasticca\",\n  \"patacca\",\n  \"patologia\",\n  \"pattume\",\n  \"pavone\",\n  \"peccato\",\n  \"pedalare\",\n  \"pedonale\",\n  \"peggio\",\n  \"peloso\",\n  \"penare\",\n  \"pendice\",\n  \"penisola\",\n  \"pennuto\",\n  \"penombra\",\n  \"pensare\",\n  \"pentola\",\n  \"pepe\",\n  \"pepita\",\n  \"perbene\",\n  \"percorso\",\n  \"perdonato\",\n  \"perforare\",\n  \"pergamena\",\n  \"periodo\",\n  \"permesso\",\n  \"perno\",\n  \"perplesso\",\n  \"persuaso\",\n  \"pertugio\",\n  \"pervaso\",\n  \"pesatore\",\n  \"pesista\",\n  \"peso\",\n  \"pestifero\",\n  \"petalo\",\n  \"pettine\",\n  \"petulante\",\n  \"pezzo\",\n  \"piacere\",\n  \"pianta\",\n  \"piattino\",\n  \"piccino\",\n  \"picozza\",\n  \"piega\",\n  \"pietra\",\n  \"piffero\",\n  \"pigiama\",\n  \"pigolio\",\n  \"pigro\",\n  \"pila\",\n  \"pilifero\",\n  \"pillola\",\n  \"pilota\",\n  \"pimpante\",\n  \"pineta\",\n  \"pinna\",\n  \"pinolo\",\n  \"pioggia\",\n  \"piombo\",\n  \"piramide\",\n  \"piretico\",\n  \"pirite\",\n  \"pirolisi\",\n  \"pitone\",\n  \"pizzico\",\n  \"placebo\",\n  \"planare\",\n  \"plasma\",\n  \"platano\",\n  \"plenario\",\n  \"pochezza\",\n  \"poderoso\",\n  \"podismo\",\n  \"poesia\",\n  \"poggiare\",\n  \"polenta\",\n  \"poligono\",\n  \"pollice\",\n  \"polmonite\",\n  \"polpetta\",\n  \"polso\",\n  \"poltrona\",\n  \"polvere\",\n  \"pomice\",\n  \"pomodoro\",\n  \"ponte\",\n  \"popoloso\",\n  \"porfido\",\n  \"poroso\",\n  \"porpora\",\n  \"porre\",\n  \"portata\",\n  \"posa\",\n  \"positivo\",\n  \"possesso\",\n  \"postulato\",\n  \"potassio\",\n  \"potere\",\n  \"pranzo\",\n  \"prassi\",\n  \"pratica\",\n  \"precluso\",\n  \"predica\",\n  \"prefisso\",\n  \"pregiato\",\n  \"prelievo\",\n  \"premere\",\n  \"prenotare\",\n  \"preparato\",\n  \"presenza\",\n  \"pretesto\",\n  \"prevalso\",\n  \"prima\",\n  \"principe\",\n  \"privato\",\n  \"problema\",\n  \"procura\",\n  \"produrre\",\n  \"profumo\",\n  \"progetto\",\n  \"prolunga\",\n  \"promessa\",\n  \"pronome\",\n  \"proposta\",\n  \"proroga\",\n  \"proteso\",\n  \"prova\",\n  \"prudente\",\n  \"prugna\",\n  \"prurito\",\n  \"psiche\",\n  \"pubblico\",\n  \"pudica\",\n  \"pugilato\",\n  \"pugno\",\n  \"pulce\",\n  \"pulito\",\n  \"pulsante\",\n  \"puntare\",\n  \"pupazzo\",\n  \"pupilla\",\n  \"puro\",\n  \"quadro\",\n  \"qualcosa\",\n  \"quasi\",\n  \"querela\",\n  \"quota\",\n  \"raccolto\",\n  \"raddoppio\",\n  \"radicale\",\n  \"radunato\",\n  \"raffica\",\n  \"ragazzo\",\n  \"ragione\",\n  \"ragno\",\n  \"ramarro\",\n  \"ramingo\",\n  \"ramo\",\n  \"randagio\",\n  \"rantolare\",\n  \"rapato\",\n  \"rapina\",\n  \"rappreso\",\n  \"rasatura\",\n  \"raschiato\",\n  \"rasente\",\n  \"rassegna\",\n  \"rastrello\",\n  \"rata\",\n  \"ravveduto\",\n  \"reale\",\n  \"recepire\",\n  \"recinto\",\n  \"recluta\",\n  \"recondito\",\n  \"recupero\",\n  \"reddito\",\n  \"redimere\",\n  \"regalato\",\n  \"registro\",\n  \"regola\",\n  \"regresso\",\n  \"relazione\",\n  \"remare\",\n  \"remoto\",\n  \"renna\",\n  \"replica\",\n  \"reprimere\",\n  \"reputare\",\n  \"resa\",\n  \"residente\",\n  \"responso\",\n  \"restauro\",\n  \"rete\",\n  \"retina\",\n  \"retorica\",\n  \"rettifica\",\n  \"revocato\",\n  \"riassunto\",\n  \"ribadire\",\n  \"ribelle\",\n  \"ribrezzo\",\n  \"ricarica\",\n  \"ricco\",\n  \"ricevere\",\n  \"riciclato\",\n  \"ricordo\",\n  \"ricreduto\",\n  \"ridicolo\",\n  \"ridurre\",\n  \"rifasare\",\n  \"riflesso\",\n  \"riforma\",\n  \"rifugio\",\n  \"rigare\",\n  \"rigettato\",\n  \"righello\",\n  \"rilassato\",\n  \"rilevato\",\n  \"rimanere\",\n  \"rimbalzo\",\n  \"rimedio\",\n  \"rimorchio\",\n  \"rinascita\",\n  \"rincaro\",\n  \"rinforzo\",\n  \"rinnovo\",\n  \"rinomato\",\n  \"rinsavito\",\n  \"rintocco\",\n  \"rinuncia\",\n  \"rinvenire\",\n  \"riparato\",\n  \"ripetuto\",\n  \"ripieno\",\n  \"riportare\",\n  \"ripresa\",\n  \"ripulire\",\n  \"risata\",\n  \"rischio\",\n  \"riserva\",\n  \"risibile\",\n  \"riso\",\n  \"rispetto\",\n  \"ristoro\",\n  \"risultato\",\n  \"risvolto\",\n  \"ritardo\",\n  \"ritegno\",\n  \"ritmico\",\n  \"ritrovo\",\n  \"riunione\",\n  \"riva\",\n  \"riverso\",\n  \"rivincita\",\n  \"rivolto\",\n  \"rizoma\",\n  \"roba\",\n  \"robotico\",\n  \"robusto\",\n  \"roccia\",\n  \"roco\",\n  \"rodaggio\",\n  \"rodere\",\n  \"roditore\",\n  \"rogito\",\n  \"rollio\",\n  \"romantico\",\n  \"rompere\",\n  \"ronzio\",\n  \"rosolare\",\n  \"rospo\",\n  \"rotante\",\n  \"rotondo\",\n  \"rotula\",\n  \"rovescio\",\n  \"rubizzo\",\n  \"rubrica\",\n  \"ruga\",\n  \"rullino\",\n  \"rumine\",\n  \"rumoroso\",\n  \"ruolo\",\n  \"rupe\",\n  \"russare\",\n  \"rustico\",\n  \"sabato\",\n  \"sabbiare\",\n  \"sabotato\",\n  \"sagoma\",\n  \"salasso\",\n  \"saldatura\",\n  \"salgemma\",\n  \"salivare\",\n  \"salmone\",\n  \"salone\",\n  \"saltare\",\n  \"saluto\",\n  \"salvo\",\n  \"sapere\",\n  \"sapido\",\n  \"saporito\",\n  \"saraceno\",\n  \"sarcasmo\",\n  \"sarto\",\n  \"sassoso\",\n  \"satellite\",\n  \"satira\",\n  \"satollo\",\n  \"saturno\",\n  \"savana\",\n  \"savio\",\n  \"saziato\",\n  \"sbadiglio\",\n  \"sbalzo\",\n  \"sbancato\",\n  \"sbarra\",\n  \"sbattere\",\n  \"sbavare\",\n  \"sbendare\",\n  \"sbirciare\",\n  \"sbloccato\",\n  \"sbocciato\",\n  \"sbrinare\",\n  \"sbruffone\",\n  \"sbuffare\",\n  \"scabroso\",\n  \"scadenza\",\n  \"scala\",\n  \"scambiare\",\n  \"scandalo\",\n  \"scapola\",\n  \"scarso\",\n  \"scatenare\",\n  \"scavato\",\n  \"scelto\",\n  \"scenico\",\n  \"scettro\",\n  \"scheda\",\n  \"schiena\",\n  \"sciarpa\",\n  \"scienza\",\n  \"scindere\",\n  \"scippo\",\n  \"sciroppo\",\n  \"scivolo\",\n  \"sclerare\",\n  \"scodella\",\n  \"scolpito\",\n  \"scomparto\",\n  \"sconforto\",\n  \"scoprire\",\n  \"scorta\",\n  \"scossone\",\n  \"scozzese\",\n  \"scriba\",\n  \"scrollare\",\n  \"scrutinio\",\n  \"scuderia\",\n  \"scultore\",\n  \"scuola\",\n  \"scuro\",\n  \"scusare\",\n  \"sdebitare\",\n  \"sdoganare\",\n  \"seccatura\",\n  \"secondo\",\n  \"sedano\",\n  \"seggiola\",\n  \"segnalato\",\n  \"segregato\",\n  \"seguito\",\n  \"selciato\",\n  \"selettivo\",\n  \"sella\",\n  \"selvaggio\",\n  \"semaforo\",\n  \"sembrare\",\n  \"seme\",\n  \"seminato\",\n  \"sempre\",\n  \"senso\",\n  \"sentire\",\n  \"sepolto\",\n  \"sequenza\",\n  \"serata\",\n  \"serbato\",\n  \"sereno\",\n  \"serio\",\n  \"serpente\",\n  \"serraglio\",\n  \"servire\",\n  \"sestina\",\n  \"setola\",\n  \"settimana\",\n  \"sfacelo\",\n  \"sfaldare\",\n  \"sfamato\",\n  \"sfarzoso\",\n  \"sfaticato\",\n  \"sfera\",\n  \"sfida\",\n  \"sfilato\",\n  \"sfinge\",\n  \"sfocato\",\n  \"sfoderare\",\n  \"sfogo\",\n  \"sfoltire\",\n  \"sforzato\",\n  \"sfratto\",\n  \"sfruttato\",\n  \"sfuggito\",\n  \"sfumare\",\n  \"sfuso\",\n  \"sgabello\",\n  \"sgarbato\",\n  \"sgonfiare\",\n  \"sgorbio\",\n  \"sgrassato\",\n  \"sguardo\",\n  \"sibilo\",\n  \"siccome\",\n  \"sierra\",\n  \"sigla\",\n  \"signore\",\n  \"silenzio\",\n  \"sillaba\",\n  \"simbolo\",\n  \"simpatico\",\n  \"simulato\",\n  \"sinfonia\",\n  \"singolo\",\n  \"sinistro\",\n  \"sino\",\n  \"sintesi\",\n  \"sinusoide\",\n  \"sipario\",\n  \"sisma\",\n  \"sistole\",\n  \"situato\",\n  \"slitta\",\n  \"slogatura\",\n  \"sloveno\",\n  \"smarrito\",\n  \"smemorato\",\n  \"smentito\",\n  \"smeraldo\",\n  \"smilzo\",\n  \"smontare\",\n  \"smottato\",\n  \"smussato\",\n  \"snellire\",\n  \"snervato\",\n  \"snodo\",\n  \"sobbalzo\",\n  \"sobrio\",\n  \"soccorso\",\n  \"sociale\",\n  \"sodale\",\n  \"soffitto\",\n  \"sogno\",\n  \"soldato\",\n  \"solenne\",\n  \"solido\",\n  \"sollazzo\",\n  \"solo\",\n  \"solubile\",\n  \"solvente\",\n  \"somatico\",\n  \"somma\",\n  \"sonda\",\n  \"sonetto\",\n  \"sonnifero\",\n  \"sopire\",\n  \"soppeso\",\n  \"sopra\",\n  \"sorgere\",\n  \"sorpasso\",\n  \"sorriso\",\n  \"sorso\",\n  \"sorteggio\",\n  \"sorvolato\",\n  \"sospiro\",\n  \"sosta\",\n  \"sottile\",\n  \"spada\",\n  \"spalla\",\n  \"spargere\",\n  \"spatola\",\n  \"spavento\",\n  \"spazzola\",\n  \"specie\",\n  \"spedire\",\n  \"spegnere\",\n  \"spelatura\",\n  \"speranza\",\n  \"spessore\",\n  \"spettrale\",\n  \"spezzato\",\n  \"spia\",\n  \"spigoloso\",\n  \"spillato\",\n  \"spinoso\",\n  \"spirale\",\n  \"splendido\",\n  \"sportivo\",\n  \"sposo\",\n  \"spranga\",\n  \"sprecare\",\n  \"spronato\",\n  \"spruzzo\",\n  \"spuntino\",\n  \"squillo\",\n  \"sradicare\",\n  \"srotolato\",\n  \"stabile\",\n  \"stacco\",\n  \"staffa\",\n  \"stagnare\",\n  \"stampato\",\n  \"stantio\",\n  \"starnuto\",\n  \"stasera\",\n  \"statuto\",\n  \"stelo\",\n  \"steppa\",\n  \"sterzo\",\n  \"stiletto\",\n  \"stima\",\n  \"stirpe\",\n  \"stivale\",\n  \"stizzoso\",\n  \"stonato\",\n  \"storico\",\n  \"strappo\",\n  \"stregato\",\n  \"stridulo\",\n  \"strozzare\",\n  \"strutto\",\n  \"stuccare\",\n  \"stufo\",\n  \"stupendo\",\n  \"subentro\",\n  \"succoso\",\n  \"sudore\",\n  \"suggerito\",\n  \"sugo\",\n  \"sultano\",\n  \"suonare\",\n  \"superbo\",\n  \"supporto\",\n  \"surgelato\",\n  \"surrogato\",\n  \"sussurro\",\n  \"sutura\",\n  \"svagare\",\n  \"svedese\",\n  \"sveglio\",\n  \"svelare\",\n  \"svenuto\",\n  \"svezia\",\n  \"sviluppo\",\n  \"svista\",\n  \"svizzera\",\n  \"svolta\",\n  \"svuotare\",\n  \"tabacco\",\n  \"tabulato\",\n  \"tacciare\",\n  \"taciturno\",\n  \"tale\",\n  \"talismano\",\n  \"tampone\",\n  \"tannino\",\n  \"tara\",\n  \"tardivo\",\n  \"targato\",\n  \"tariffa\",\n  \"tarpare\",\n  \"tartaruga\",\n  \"tasto\",\n  \"tattico\",\n  \"taverna\",\n  \"tavolata\",\n  \"tazza\",\n  \"teca\",\n  \"tecnico\",\n  \"telefono\",\n  \"temerario\",\n  \"tempo\",\n  \"temuto\",\n  \"tendone\",\n  \"tenero\",\n  \"tensione\",\n  \"tentacolo\",\n  \"teorema\",\n  \"terme\",\n  \"terrazzo\",\n  \"terzetto\",\n  \"tesi\",\n  \"tesserato\",\n  \"testato\",\n  \"tetro\",\n  \"tettoia\",\n  \"tifare\",\n  \"tigella\",\n  \"timbro\",\n  \"tinto\",\n  \"tipico\",\n  \"tipografo\",\n  \"tiraggio\",\n  \"tiro\",\n  \"titanio\",\n  \"titolo\",\n  \"titubante\",\n  \"tizio\",\n  \"tizzone\",\n  \"toccare\",\n  \"tollerare\",\n  \"tolto\",\n  \"tombola\",\n  \"tomo\",\n  \"tonfo\",\n  \"tonsilla\",\n  \"topazio\",\n  \"topologia\",\n  \"toppa\",\n  \"torba\",\n  \"tornare\",\n  \"torrone\",\n  \"tortora\",\n  \"toscano\",\n  \"tossire\",\n  \"tostatura\",\n  \"totano\",\n  \"trabocco\",\n  \"trachea\",\n  \"trafila\",\n  \"tragedia\",\n  \"tralcio\",\n  \"tramonto\",\n  \"transito\",\n  \"trapano\",\n  \"trarre\",\n  \"trasloco\",\n  \"trattato\",\n  \"trave\",\n  \"treccia\",\n  \"tremolio\",\n  \"trespolo\",\n  \"tributo\",\n  \"tricheco\",\n  \"trifoglio\",\n  \"trillo\",\n  \"trincea\",\n  \"trio\",\n  \"tristezza\",\n  \"triturato\",\n  \"trivella\",\n  \"tromba\",\n  \"trono\",\n  \"troppo\",\n  \"trottola\",\n  \"trovare\",\n  \"truccato\",\n  \"tubatura\",\n  \"tuffato\",\n  \"tulipano\",\n  \"tumulto\",\n  \"tunisia\",\n  \"turbare\",\n  \"turchino\",\n  \"tuta\",\n  \"tutela\",\n  \"ubicato\",\n  \"uccello\",\n  \"uccisore\",\n  \"udire\",\n  \"uditivo\",\n  \"uffa\",\n  \"ufficio\",\n  \"uguale\",\n  \"ulisse\",\n  \"ultimato\",\n  \"umano\",\n  \"umile\",\n  \"umorismo\",\n  \"uncinetto\",\n  \"ungere\",\n  \"ungherese\",\n  \"unicorno\",\n  \"unificato\",\n  \"unisono\",\n  \"unitario\",\n  \"unte\",\n  \"uovo\",\n  \"upupa\",\n  \"uragano\",\n  \"urgenza\",\n  \"urlo\",\n  \"usanza\",\n  \"usato\",\n  \"uscito\",\n  \"usignolo\",\n  \"usuraio\",\n  \"utensile\",\n  \"utilizzo\",\n  \"utopia\",\n  \"vacante\",\n  \"vaccinato\",\n  \"vagabondo\",\n  \"vagliato\",\n  \"valanga\",\n  \"valgo\",\n  \"valico\",\n  \"valletta\",\n  \"valoroso\",\n  \"valutare\",\n  \"valvola\",\n  \"vampata\",\n  \"vangare\",\n  \"vanitoso\",\n  \"vano\",\n  \"vantaggio\",\n  \"vanvera\",\n  \"vapore\",\n  \"varano\",\n  \"varcato\",\n  \"variante\",\n  \"vasca\",\n  \"vedetta\",\n  \"vedova\",\n  \"veduto\",\n  \"vegetale\",\n  \"veicolo\",\n  \"velcro\",\n  \"velina\",\n  \"velluto\",\n  \"veloce\",\n  \"venato\",\n  \"vendemmia\",\n  \"vento\",\n  \"verace\",\n  \"verbale\",\n  \"vergogna\",\n  \"verifica\",\n  \"vero\",\n  \"verruca\",\n  \"verticale\",\n  \"vescica\",\n  \"vessillo\",\n  \"vestale\",\n  \"veterano\",\n  \"vetrina\",\n  \"vetusto\",\n  \"viandante\",\n  \"vibrante\",\n  \"vicenda\",\n  \"vichingo\",\n  \"vicinanza\",\n  \"vidimare\",\n  \"vigilia\",\n  \"vigneto\",\n  \"vigore\",\n  \"vile\",\n  \"villano\",\n  \"vimini\",\n  \"vincitore\",\n  \"viola\",\n  \"vipera\",\n  \"virgola\",\n  \"virologo\",\n  \"virulento\",\n  \"viscoso\",\n  \"visione\",\n  \"vispo\",\n  \"vissuto\",\n  \"visura\",\n  \"vita\",\n  \"vitello\",\n  \"vittima\",\n  \"vivanda\",\n  \"vivido\",\n  \"viziare\",\n  \"voce\",\n  \"voga\",\n  \"volatile\",\n  \"volere\",\n  \"volpe\",\n  \"voragine\",\n  \"vulcano\",\n  \"zampogna\",\n  \"zanna\",\n  \"zappato\",\n  \"zattera\",\n  \"zavorra\",\n  \"zefiro\",\n  \"zelante\",\n  \"zelo\",\n  \"zenzero\",\n  \"zerbino\",\n  \"zibetto\",\n  \"zinco\",\n  \"zircone\",\n  \"zitto\",\n  \"zolla\",\n  \"zotico\",\n  \"zucchero\",\n  \"zufolo\",\n  \"zulu\",\n  \"zuppa\"\n]\n","module.exports=[\n  \"的\",\n  \"一\",\n  \"是\",\n  \"在\",\n  \"不\",\n  \"了\",\n  \"有\",\n  \"和\",\n  \"人\",\n  \"这\",\n  \"中\",\n  \"大\",\n  \"为\",\n  \"上\",\n  \"个\",\n  \"国\",\n  \"我\",\n  \"以\",\n  \"要\",\n  \"他\",\n  \"时\",\n  \"来\",\n  \"用\",\n  \"们\",\n  \"生\",\n  \"到\",\n  \"作\",\n  \"地\",\n  \"于\",\n  \"出\",\n  \"就\",\n  \"分\",\n  \"对\",\n  \"成\",\n  \"会\",\n  \"可\",\n  \"主\",\n  \"发\",\n  \"年\",\n  \"动\",\n  \"同\",\n  \"工\",\n  \"也\",\n  \"能\",\n  \"下\",\n  \"过\",\n  \"子\",\n  \"说\",\n  \"产\",\n  \"种\",\n  \"面\",\n  \"而\",\n  \"方\",\n  \"后\",\n  \"多\",\n  \"定\",\n  \"行\",\n  \"学\",\n  \"法\",\n  \"所\",\n  \"民\",\n  \"得\",\n  \"经\",\n  \"十\",\n  \"三\",\n  \"之\",\n  \"进\",\n  \"着\",\n  \"等\",\n  \"部\",\n  \"度\",\n  \"家\",\n  \"电\",\n  \"力\",\n  \"里\",\n  \"如\",\n  \"水\",\n  \"化\",\n  \"高\",\n  \"自\",\n  \"二\",\n  \"理\",\n  \"起\",\n  \"小\",\n  \"物\",\n  \"现\",\n  \"实\",\n  \"加\",\n  \"量\",\n  \"都\",\n  \"两\",\n  \"体\",\n  \"制\",\n  \"机\",\n  \"当\",\n  \"使\",\n  \"点\",\n  \"从\",\n  \"业\",\n  \"本\",\n  \"去\",\n  \"把\",\n  \"性\",\n  \"好\",\n  \"应\",\n  \"开\",\n  \"它\",\n  \"合\",\n  \"还\",\n  \"因\",\n  \"由\",\n  \"其\",\n  \"些\",\n  \"然\",\n  \"前\",\n  \"外\",\n  \"天\",\n  \"政\",\n  \"四\",\n  \"日\",\n  \"那\",\n  \"社\",\n  \"义\",\n  \"事\",\n  \"平\",\n  \"形\",\n  \"相\",\n  \"全\",\n  \"表\",\n  \"间\",\n  \"样\",\n  \"与\",\n  \"关\",\n  \"各\",\n  \"重\",\n  \"新\",\n  \"线\",\n  \"内\",\n  \"数\",\n  \"正\",\n  \"心\",\n  \"反\",\n  \"你\",\n  \"明\",\n  \"看\",\n  \"原\",\n  \"又\",\n  \"么\",\n  \"利\",\n  \"比\",\n  \"或\",\n  \"但\",\n  \"质\",\n  \"气\",\n  \"第\",\n  \"向\",\n  \"道\",\n  \"命\",\n  \"此\",\n  \"变\",\n  \"条\",\n  \"只\",\n  \"没\",\n  \"结\",\n  \"解\",\n  \"问\",\n  \"意\",\n  \"建\",\n  \"月\",\n  \"公\",\n  \"无\",\n  \"系\",\n  \"军\",\n  \"很\",\n  \"情\",\n  \"者\",\n  \"最\",\n  \"立\",\n  \"代\",\n  \"想\",\n  \"已\",\n  \"通\",\n  \"并\",\n  \"提\",\n  \"直\",\n  \"题\",\n  \"党\",\n  \"程\",\n  \"展\",\n  \"五\",\n  \"果\",\n  \"料\",\n  \"象\",\n  \"员\",\n  \"革\",\n  \"位\",\n  \"入\",\n  \"常\",\n  \"文\",\n  \"总\",\n  \"次\",\n  \"品\",\n  \"式\",\n  \"活\",\n  \"设\",\n  \"及\",\n  \"管\",\n  \"特\",\n  \"件\",\n  \"长\",\n  \"求\",\n  \"老\",\n  \"头\",\n  \"基\",\n  \"资\",\n  \"边\",\n  \"流\",\n  \"路\",\n  \"级\",\n  \"少\",\n  \"图\",\n  \"山\",\n  \"统\",\n  \"接\",\n  \"知\",\n  \"较\",\n  \"将\",\n  \"组\",\n  \"见\",\n  \"计\",\n  \"别\",\n  \"她\",\n  \"手\",\n  \"角\",\n  \"期\",\n  \"根\",\n  \"论\",\n  \"运\",\n  \"农\",\n  \"指\",\n  \"几\",\n  \"九\",\n  \"区\",\n  \"强\",\n  \"放\",\n  \"决\",\n  \"西\",\n  \"被\",\n  \"干\",\n  \"做\",\n  \"必\",\n  \"战\",\n  \"先\",\n  \"回\",\n  \"则\",\n  \"任\",\n  \"取\",\n  \"据\",\n  \"处\",\n  \"队\",\n  \"南\",\n  \"给\",\n  \"色\",\n  \"光\",\n  \"门\",\n  \"即\",\n  \"保\",\n  \"治\",\n  \"北\",\n  \"造\",\n  \"百\",\n  \"规\",\n  \"热\",\n  \"领\",\n  \"七\",\n  \"海\",\n  \"口\",\n  \"东\",\n  \"导\",\n  \"器\",\n  \"压\",\n  \"志\",\n  \"世\",\n  \"金\",\n  \"增\",\n  \"争\",\n  \"济\",\n  \"阶\",\n  \"油\",\n  \"思\",\n  \"术\",\n  \"极\",\n  \"交\",\n  \"受\",\n  \"联\",\n  \"什\",\n  \"认\",\n  \"六\",\n  \"共\",\n  \"权\",\n  \"收\",\n  \"证\",\n  \"改\",\n  \"清\",\n  \"美\",\n  \"再\",\n  \"采\",\n  \"转\",\n  \"更\",\n  \"单\",\n  \"风\",\n  \"切\",\n  \"打\",\n  \"白\",\n  \"教\",\n  \"速\",\n  \"花\",\n  \"带\",\n  \"安\",\n  \"场\",\n  \"身\",\n  \"车\",\n  \"例\",\n  \"真\",\n  \"务\",\n  \"具\",\n  \"万\",\n  \"每\",\n  \"目\",\n  \"至\",\n  \"达\",\n  \"走\",\n  \"积\",\n  \"示\",\n  \"议\",\n  \"声\",\n  \"报\",\n  \"斗\",\n  \"完\",\n  \"类\",\n  \"八\",\n  \"离\",\n  \"华\",\n  \"名\",\n  \"确\",\n  \"才\",\n  \"科\",\n  \"张\",\n  \"信\",\n  \"马\",\n  \"节\",\n  \"话\",\n  \"米\",\n  \"整\",\n  \"空\",\n  \"元\",\n  \"况\",\n  \"今\",\n  \"集\",\n  \"温\",\n  \"传\",\n  \"土\",\n  \"许\",\n  \"步\",\n  \"群\",\n  \"广\",\n  \"石\",\n  \"记\",\n  \"需\",\n  \"段\",\n  \"研\",\n  \"界\",\n  \"拉\",\n  \"林\",\n  \"律\",\n  \"叫\",\n  \"且\",\n  \"究\",\n  \"观\",\n  \"越\",\n  \"织\",\n  \"装\",\n  \"影\",\n  \"算\",\n  \"低\",\n  \"持\",\n  \"音\",\n  \"众\",\n  \"书\",\n  \"布\",\n  \"复\",\n  \"容\",\n  \"儿\",\n  \"须\",\n  \"际\",\n  \"商\",\n  \"非\",\n  \"验\",\n  \"连\",\n  \"断\",\n  \"深\",\n  \"难\",\n  \"近\",\n  \"矿\",\n  \"千\",\n  \"周\",\n  \"委\",\n  \"素\",\n  \"技\",\n  \"备\",\n  \"半\",\n  \"办\",\n  \"青\",\n  \"省\",\n  \"列\",\n  \"习\",\n  \"响\",\n  \"约\",\n  \"支\",\n  \"般\",\n  \"史\",\n  \"感\",\n  \"劳\",\n  \"便\",\n  \"团\",\n  \"往\",\n  \"酸\",\n  \"历\",\n  \"市\",\n  \"克\",\n  \"何\",\n  \"除\",\n  \"消\",\n  \"构\",\n  \"府\",\n  \"称\",\n  \"太\",\n  \"准\",\n  \"精\",\n  \"值\",\n  \"号\",\n  \"率\",\n  \"族\",\n  \"维\",\n  \"划\",\n  \"选\",\n  \"标\",\n  \"写\",\n  \"存\",\n  \"候\",\n  \"毛\",\n  \"亲\",\n  \"快\",\n  \"效\",\n  \"斯\",\n  \"院\",\n  \"查\",\n  \"江\",\n  \"型\",\n  \"眼\",\n  \"王\",\n  \"按\",\n  \"格\",\n  \"养\",\n  \"易\",\n  \"置\",\n  \"派\",\n  \"层\",\n  \"片\",\n  \"始\",\n  \"却\",\n  \"专\",\n  \"状\",\n  \"育\",\n  \"厂\",\n  \"京\",\n  \"识\",\n  \"适\",\n  \"属\",\n  \"圆\",\n  \"包\",\n  \"火\",\n  \"住\",\n  \"调\",\n  \"满\",\n  \"县\",\n  \"局\",\n  \"照\",\n  \"参\",\n  \"红\",\n  \"细\",\n  \"引\",\n  \"听\",\n  \"该\",\n  \"铁\",\n  \"价\",\n  \"严\",\n  \"首\",\n  \"底\",\n  \"液\",\n  \"官\",\n  \"德\",\n  \"随\",\n  \"病\",\n  \"苏\",\n  \"失\",\n  \"尔\",\n  \"死\",\n  \"讲\",\n  \"配\",\n  \"女\",\n  \"黄\",\n  \"推\",\n  \"显\",\n  \"谈\",\n  \"罪\",\n  \"神\",\n  \"艺\",\n  \"呢\",\n  \"席\",\n  \"含\",\n  \"企\",\n  \"望\",\n  \"密\",\n  \"批\",\n  \"营\",\n  \"项\",\n  \"防\",\n  \"举\",\n  \"球\",\n  \"英\",\n  \"氧\",\n  \"势\",\n  \"告\",\n  \"李\",\n  \"台\",\n  \"落\",\n  \"木\",\n  \"帮\",\n  \"轮\",\n  \"破\",\n  \"亚\",\n  \"师\",\n  \"围\",\n  \"注\",\n  \"远\",\n  \"字\",\n  \"材\",\n  \"排\",\n  \"供\",\n  \"河\",\n  \"态\",\n  \"封\",\n  \"另\",\n  \"施\",\n  \"减\",\n  \"树\",\n  \"溶\",\n  \"怎\",\n  \"止\",\n  \"案\",\n  \"言\",\n  \"士\",\n  \"均\",\n  \"武\",\n  \"固\",\n  \"叶\",\n  \"鱼\",\n  \"波\",\n  \"视\",\n  \"仅\",\n  \"费\",\n  \"紧\",\n  \"爱\",\n  \"左\",\n  \"章\",\n  \"早\",\n  \"朝\",\n  \"害\",\n  \"续\",\n  \"轻\",\n  \"服\",\n  \"试\",\n  \"食\",\n  \"充\",\n  \"兵\",\n  \"源\",\n  \"判\",\n  \"护\",\n  \"司\",\n  \"足\",\n  \"某\",\n  \"练\",\n  \"差\",\n  \"致\",\n  \"板\",\n  \"田\",\n  \"降\",\n  \"黑\",\n  \"犯\",\n  \"负\",\n  \"击\",\n  \"范\",\n  \"继\",\n  \"兴\",\n  \"似\",\n  \"余\",\n  \"坚\",\n  \"曲\",\n  \"输\",\n  \"修\",\n  \"故\",\n  \"城\",\n  \"夫\",\n  \"够\",\n  \"送\",\n  \"笔\",\n  \"船\",\n  \"占\",\n  \"右\",\n  \"财\",\n  \"吃\",\n  \"富\",\n  \"春\",\n  \"职\",\n  \"觉\",\n  \"汉\",\n  \"画\",\n  \"功\",\n  \"巴\",\n  \"跟\",\n  \"虽\",\n  \"杂\",\n  \"飞\",\n  \"检\",\n  \"吸\",\n  \"助\",\n  \"升\",\n  \"阳\",\n  \"互\",\n  \"初\",\n  \"创\",\n  \"抗\",\n  \"考\",\n  \"投\",\n  \"坏\",\n  \"策\",\n  \"古\",\n  \"径\",\n  \"换\",\n  \"未\",\n  \"跑\",\n  \"留\",\n  \"钢\",\n  \"曾\",\n  \"端\",\n  \"责\",\n  \"站\",\n  \"简\",\n  \"述\",\n  \"钱\",\n  \"副\",\n  \"尽\",\n  \"帝\",\n  \"射\",\n  \"草\",\n  \"冲\",\n  \"承\",\n  \"独\",\n  \"令\",\n  \"限\",\n  \"阿\",\n  \"宣\",\n  \"环\",\n  \"双\",\n  \"请\",\n  \"超\",\n  \"微\",\n  \"让\",\n  \"控\",\n  \"州\",\n  \"良\",\n  \"轴\",\n  \"找\",\n  \"否\",\n  \"纪\",\n  \"益\",\n  \"依\",\n  \"优\",\n  \"顶\",\n  \"础\",\n  \"载\",\n  \"倒\",\n  \"房\",\n  \"突\",\n  \"坐\",\n  \"粉\",\n  \"敌\",\n  \"略\",\n  \"客\",\n  \"袁\",\n  \"冷\",\n  \"胜\",\n  \"绝\",\n  \"析\",\n  \"块\",\n  \"剂\",\n  \"测\",\n  \"丝\",\n  \"协\",\n  \"诉\",\n  \"念\",\n  \"陈\",\n  \"仍\",\n  \"罗\",\n  \"盐\",\n  \"友\",\n  \"洋\",\n  \"错\",\n  \"苦\",\n  \"夜\",\n  \"刑\",\n  \"移\",\n  \"频\",\n  \"逐\",\n  \"靠\",\n  \"混\",\n  \"母\",\n  \"短\",\n  \"皮\",\n  \"终\",\n  \"聚\",\n  \"汽\",\n  \"村\",\n  \"云\",\n  \"哪\",\n  \"既\",\n  \"距\",\n  \"卫\",\n  \"停\",\n  \"烈\",\n  \"央\",\n  \"察\",\n  \"烧\",\n  \"迅\",\n  \"境\",\n  \"若\",\n  \"印\",\n  \"洲\",\n  \"刻\",\n  \"括\",\n  \"激\",\n  \"孔\",\n  \"搞\",\n  \"甚\",\n  \"室\",\n  \"待\",\n  \"核\",\n  \"校\",\n  \"散\",\n  \"侵\",\n  \"吧\",\n  \"甲\",\n  \"游\",\n  \"久\",\n  \"菜\",\n  \"味\",\n  \"旧\",\n  \"模\",\n  \"湖\",\n  \"货\",\n  \"损\",\n  \"预\",\n  \"阻\",\n  \"毫\",\n  \"普\",\n  \"稳\",\n  \"乙\",\n  \"妈\",\n  \"植\",\n  \"息\",\n  \"扩\",\n  \"银\",\n  \"语\",\n  \"挥\",\n  \"酒\",\n  \"守\",\n  \"拿\",\n  \"序\",\n  \"纸\",\n  \"医\",\n  \"缺\",\n  \"雨\",\n  \"吗\",\n  \"针\",\n  \"刘\",\n  \"啊\",\n  \"急\",\n  \"唱\",\n  \"误\",\n  \"训\",\n  \"愿\",\n  \"审\",\n  \"附\",\n  \"获\",\n  \"茶\",\n  \"鲜\",\n  \"粮\",\n  \"斤\",\n  \"孩\",\n  \"脱\",\n  \"硫\",\n  \"肥\",\n  \"善\",\n  \"龙\",\n  \"演\",\n  \"父\",\n  \"渐\",\n  \"血\",\n  \"欢\",\n  \"械\",\n  \"掌\",\n  \"歌\",\n  \"沙\",\n  \"刚\",\n  \"攻\",\n  \"谓\",\n  \"盾\",\n  \"讨\",\n  \"晚\",\n  \"粒\",\n  \"乱\",\n  \"燃\",\n  \"矛\",\n  \"乎\",\n  \"杀\",\n  \"药\",\n  \"宁\",\n  \"鲁\",\n  \"贵\",\n  \"钟\",\n  \"煤\",\n  \"读\",\n  \"班\",\n  \"伯\",\n  \"香\",\n  \"介\",\n  \"迫\",\n  \"句\",\n  \"丰\",\n  \"培\",\n  \"握\",\n  \"兰\",\n  \"担\",\n  \"弦\",\n  \"蛋\",\n  \"沉\",\n  \"假\",\n  \"穿\",\n  \"执\",\n  \"答\",\n  \"乐\",\n  \"谁\",\n  \"顺\",\n  \"烟\",\n  \"缩\",\n  \"征\",\n  \"脸\",\n  \"喜\",\n  \"松\",\n  \"脚\",\n  \"困\",\n  \"异\",\n  \"免\",\n  \"背\",\n  \"星\",\n  \"福\",\n  \"买\",\n  \"染\",\n  \"井\",\n  \"概\",\n  \"慢\",\n  \"怕\",\n  \"磁\",\n  \"倍\",\n  \"祖\",\n  \"皇\",\n  \"促\",\n  \"静\",\n  \"补\",\n  \"评\",\n  \"翻\",\n  \"肉\",\n  \"践\",\n  \"尼\",\n  \"衣\",\n  \"宽\",\n  \"扬\",\n  \"棉\",\n  \"希\",\n  \"伤\",\n  \"操\",\n  \"垂\",\n  \"秋\",\n  \"宜\",\n  \"氢\",\n  \"套\",\n  \"督\",\n  \"振\",\n  \"架\",\n  \"亮\",\n  \"末\",\n  \"宪\",\n  \"庆\",\n  \"编\",\n  \"牛\",\n  \"触\",\n  \"映\",\n  \"雷\",\n  \"销\",\n  \"诗\",\n  \"座\",\n  \"居\",\n  \"抓\",\n  \"裂\",\n  \"胞\",\n  \"呼\",\n  \"娘\",\n  \"景\",\n  \"威\",\n  \"绿\",\n  \"晶\",\n  \"厚\",\n  \"盟\",\n  \"衡\",\n  \"鸡\",\n  \"孙\",\n  \"延\",\n  \"危\",\n  \"胶\",\n  \"屋\",\n  \"乡\",\n  \"临\",\n  \"陆\",\n  \"顾\",\n  \"掉\",\n  \"呀\",\n  \"灯\",\n  \"岁\",\n  \"措\",\n  \"束\",\n  \"耐\",\n  \"剧\",\n  \"玉\",\n  \"赵\",\n  \"跳\",\n  \"哥\",\n  \"季\",\n  \"课\",\n  \"凯\",\n  \"胡\",\n  \"额\",\n  \"款\",\n  \"绍\",\n  \"卷\",\n  \"齐\",\n  \"伟\",\n  \"蒸\",\n  \"殖\",\n  \"永\",\n  \"宗\",\n  \"苗\",\n  \"川\",\n  \"炉\",\n  \"岩\",\n  \"弱\",\n  \"零\",\n  \"杨\",\n  \"奏\",\n  \"沿\",\n  \"露\",\n  \"杆\",\n  \"探\",\n  \"滑\",\n  \"镇\",\n  \"饭\",\n  \"浓\",\n  \"航\",\n  \"怀\",\n  \"赶\",\n  \"库\",\n  \"夺\",\n  \"伊\",\n  \"灵\",\n  \"税\",\n  \"途\",\n  \"灭\",\n  \"赛\",\n  \"归\",\n  \"召\",\n  \"鼓\",\n  \"播\",\n  \"盘\",\n  \"裁\",\n  \"险\",\n  \"康\",\n  \"唯\",\n  \"录\",\n  \"菌\",\n  \"纯\",\n  \"借\",\n  \"糖\",\n  \"盖\",\n  \"横\",\n  \"符\",\n  \"私\",\n  \"努\",\n  \"堂\",\n  \"域\",\n  \"枪\",\n  \"润\",\n  \"幅\",\n  \"哈\",\n  \"竟\",\n  \"熟\",\n  \"虫\",\n  \"泽\",\n  \"脑\",\n  \"壤\",\n  \"碳\",\n  \"欧\",\n  \"遍\",\n  \"侧\",\n  \"寨\",\n  \"敢\",\n  \"彻\",\n  \"虑\",\n  \"斜\",\n  \"薄\",\n  \"庭\",\n  \"纳\",\n  \"弹\",\n  \"饲\",\n  \"伸\",\n  \"折\",\n  \"麦\",\n  \"湿\",\n  \"暗\",\n  \"荷\",\n  \"瓦\",\n  \"塞\",\n  \"床\",\n  \"筑\",\n  \"恶\",\n  \"户\",\n  \"访\",\n  \"塔\",\n  \"奇\",\n  \"透\",\n  \"梁\",\n  \"刀\",\n  \"旋\",\n  \"迹\",\n  \"卡\",\n  \"氯\",\n  \"遇\",\n  \"份\",\n  \"毒\",\n  \"泥\",\n  \"退\",\n  \"洗\",\n  \"摆\",\n  \"灰\",\n  \"彩\",\n  \"卖\",\n  \"耗\",\n  \"夏\",\n  \"择\",\n  \"忙\",\n  \"铜\",\n  \"献\",\n  \"硬\",\n  \"予\",\n  \"繁\",\n  \"圈\",\n  \"雪\",\n  \"函\",\n  \"亦\",\n  \"抽\",\n  \"篇\",\n  \"阵\",\n  \"阴\",\n  \"丁\",\n  \"尺\",\n  \"追\",\n  \"堆\",\n  \"雄\",\n  \"迎\",\n  \"泛\",\n  \"爸\",\n  \"楼\",\n  \"避\",\n  \"谋\",\n  \"吨\",\n  \"野\",\n  \"猪\",\n  \"旗\",\n  \"累\",\n  \"偏\",\n  \"典\",\n  \"馆\",\n  \"索\",\n  \"秦\",\n  \"脂\",\n  \"潮\",\n  \"爷\",\n  \"豆\",\n  \"忽\",\n  \"托\",\n  \"惊\",\n  \"塑\",\n  \"遗\",\n  \"愈\",\n  \"朱\",\n  \"替\",\n  \"纤\",\n  \"粗\",\n  \"倾\",\n  \"尚\",\n  \"痛\",\n  \"楚\",\n  \"谢\",\n  \"奋\",\n  \"购\",\n  \"磨\",\n  \"君\",\n  \"池\",\n  \"旁\",\n  \"碎\",\n  \"骨\",\n  \"监\",\n  \"捕\",\n  \"弟\",\n  \"暴\",\n  \"割\",\n  \"贯\",\n  \"殊\",\n  \"释\",\n  \"词\",\n  \"亡\",\n  \"壁\",\n  \"顿\",\n  \"宝\",\n  \"午\",\n  \"尘\",\n  \"闻\",\n  \"揭\",\n  \"炮\",\n  \"残\",\n  \"冬\",\n  \"桥\",\n  \"妇\",\n  \"警\",\n  \"综\",\n  \"招\",\n  \"吴\",\n  \"付\",\n  \"浮\",\n  \"遭\",\n  \"徐\",\n  \"您\",\n  \"摇\",\n  \"谷\",\n  \"赞\",\n  \"箱\",\n  \"隔\",\n  \"订\",\n  \"男\",\n  \"吹\",\n  \"园\",\n  \"纷\",\n  \"唐\",\n  \"败\",\n  \"宋\",\n  \"玻\",\n  \"巨\",\n  \"耕\",\n  \"坦\",\n  \"荣\",\n  \"闭\",\n  \"湾\",\n  \"键\",\n  \"凡\",\n  \"驻\",\n  \"锅\",\n  \"救\",\n  \"恩\",\n  \"剥\",\n  \"凝\",\n  \"碱\",\n  \"齿\",\n  \"截\",\n  \"炼\",\n  \"麻\",\n  \"纺\",\n  \"禁\",\n  \"废\",\n  \"盛\",\n  \"版\",\n  \"缓\",\n  \"净\",\n  \"睛\",\n  \"昌\",\n  \"婚\",\n  \"涉\",\n  \"筒\",\n  \"嘴\",\n  \"插\",\n  \"岸\",\n  \"朗\",\n  \"庄\",\n  \"街\",\n  \"藏\",\n  \"姑\",\n  \"贸\",\n  \"腐\",\n  \"奴\",\n  \"啦\",\n  \"惯\",\n  \"乘\",\n  \"伙\",\n  \"恢\",\n  \"匀\",\n  \"纱\",\n  \"扎\",\n  \"辩\",\n  \"耳\",\n  \"彪\",\n  \"臣\",\n  \"亿\",\n  \"璃\",\n  \"抵\",\n  \"脉\",\n  \"秀\",\n  \"萨\",\n  \"俄\",\n  \"网\",\n  \"舞\",\n  \"店\",\n  \"喷\",\n  \"纵\",\n  \"寸\",\n  \"汗\",\n  \"挂\",\n  \"洪\",\n  \"贺\",\n  \"闪\",\n  \"柬\",\n  \"爆\",\n  \"烯\",\n  \"津\",\n  \"稻\",\n  \"墙\",\n  \"软\",\n  \"勇\",\n  \"像\",\n  \"滚\",\n  \"厘\",\n  \"蒙\",\n  \"芳\",\n  \"肯\",\n  \"坡\",\n  \"柱\",\n  \"荡\",\n  \"腿\",\n  \"仪\",\n  \"旅\",\n  \"尾\",\n  \"轧\",\n  \"冰\",\n  \"贡\",\n  \"登\",\n  \"黎\",\n  \"削\",\n  \"钻\",\n  \"勒\",\n  \"逃\",\n  \"障\",\n  \"氨\",\n  \"郭\",\n  \"峰\",\n  \"币\",\n  \"港\",\n  \"伏\",\n  \"轨\",\n  \"亩\",\n  \"毕\",\n  \"擦\",\n  \"莫\",\n  \"刺\",\n  \"浪\",\n  \"秘\",\n  \"援\",\n  \"株\",\n  \"健\",\n  \"售\",\n  \"股\",\n  \"岛\",\n  \"甘\",\n  \"泡\",\n  \"睡\",\n  \"童\",\n  \"铸\",\n  \"汤\",\n  \"阀\",\n  \"休\",\n  \"汇\",\n  \"舍\",\n  \"牧\",\n  \"绕\",\n  \"炸\",\n  \"哲\",\n  \"磷\",\n  \"绩\",\n  \"朋\",\n  \"淡\",\n  \"尖\",\n  \"启\",\n  \"陷\",\n  \"柴\",\n  \"呈\",\n  \"徒\",\n  \"颜\",\n  \"泪\",\n  \"稍\",\n  \"忘\",\n  \"泵\",\n  \"蓝\",\n  \"拖\",\n  \"洞\",\n  \"授\",\n  \"镜\",\n  \"辛\",\n  \"壮\",\n  \"锋\",\n  \"贫\",\n  \"虚\",\n  \"弯\",\n  \"摩\",\n  \"泰\",\n  \"幼\",\n  \"廷\",\n  \"尊\",\n  \"窗\",\n  \"纲\",\n  \"弄\",\n  \"隶\",\n  \"疑\",\n  \"氏\",\n  \"宫\",\n  \"姐\",\n  \"震\",\n  \"瑞\",\n  \"怪\",\n  \"尤\",\n  \"琴\",\n  \"循\",\n  \"描\",\n  \"膜\",\n  \"违\",\n  \"夹\",\n  \"腰\",\n  \"缘\",\n  \"珠\",\n  \"穷\",\n  \"森\",\n  \"枝\",\n  \"竹\",\n  \"沟\",\n  \"催\",\n  \"绳\",\n  \"忆\",\n  \"邦\",\n  \"剩\",\n  \"幸\",\n  \"浆\",\n  \"栏\",\n  \"拥\",\n  \"牙\",\n  \"贮\",\n  \"礼\",\n  \"滤\",\n  \"钠\",\n  \"纹\",\n  \"罢\",\n  \"拍\",\n  \"咱\",\n  \"喊\",\n  \"袖\",\n  \"埃\",\n  \"勤\",\n  \"罚\",\n  \"焦\",\n  \"潜\",\n  \"伍\",\n  \"墨\",\n  \"欲\",\n  \"缝\",\n  \"姓\",\n  \"刊\",\n  \"饱\",\n  \"仿\",\n  \"奖\",\n  \"铝\",\n  \"鬼\",\n  \"丽\",\n  \"跨\",\n  \"默\",\n  \"挖\",\n  \"链\",\n  \"扫\",\n  \"喝\",\n  \"袋\",\n  \"炭\",\n  \"污\",\n  \"幕\",\n  \"诸\",\n  \"弧\",\n  \"励\",\n  \"梅\",\n  \"奶\",\n  \"洁\",\n  \"灾\",\n  \"舟\",\n  \"鉴\",\n  \"苯\",\n  \"讼\",\n  \"抱\",\n  \"毁\",\n  \"懂\",\n  \"寒\",\n  \"智\",\n  \"埔\",\n  \"寄\",\n  \"届\",\n  \"跃\",\n  \"渡\",\n  \"挑\",\n  \"丹\",\n  \"艰\",\n  \"贝\",\n  \"碰\",\n  \"拔\",\n  \"爹\",\n  \"戴\",\n  \"码\",\n  \"梦\",\n  \"芽\",\n  \"熔\",\n  \"赤\",\n  \"渔\",\n  \"哭\",\n  \"敬\",\n  \"颗\",\n  \"奔\",\n  \"铅\",\n  \"仲\",\n  \"虎\",\n  \"稀\",\n  \"妹\",\n  \"乏\",\n  \"珍\",\n  \"申\",\n  \"桌\",\n  \"遵\",\n  \"允\",\n  \"隆\",\n  \"螺\",\n  \"仓\",\n  \"魏\",\n  \"锐\",\n  \"晓\",\n  \"氮\",\n  \"兼\",\n  \"隐\",\n  \"碍\",\n  \"赫\",\n  \"拨\",\n  \"忠\",\n  \"肃\",\n  \"缸\",\n  \"牵\",\n  \"抢\",\n  \"博\",\n  \"巧\",\n  \"壳\",\n  \"兄\",\n  \"杜\",\n  \"讯\",\n  \"诚\",\n  \"碧\",\n  \"祥\",\n  \"柯\",\n  \"页\",\n  \"巡\",\n  \"矩\",\n  \"悲\",\n  \"灌\",\n  \"龄\",\n  \"伦\",\n  \"票\",\n  \"寻\",\n  \"桂\",\n  \"铺\",\n  \"圣\",\n  \"恐\",\n  \"恰\",\n  \"郑\",\n  \"趣\",\n  \"抬\",\n  \"荒\",\n  \"腾\",\n  \"贴\",\n  \"柔\",\n  \"滴\",\n  \"猛\",\n  \"阔\",\n  \"辆\",\n  \"妻\",\n  \"填\",\n  \"撤\",\n  \"储\",\n  \"签\",\n  \"闹\",\n  \"扰\",\n  \"紫\",\n  \"砂\",\n  \"递\",\n  \"戏\",\n  \"吊\",\n  \"陶\",\n  \"伐\",\n  \"喂\",\n  \"疗\",\n  \"瓶\",\n  \"婆\",\n  \"抚\",\n  \"臂\",\n  \"摸\",\n  \"忍\",\n  \"虾\",\n  \"蜡\",\n  \"邻\",\n  \"胸\",\n  \"巩\",\n  \"挤\",\n  \"偶\",\n  \"弃\",\n  \"槽\",\n  \"劲\",\n  \"乳\",\n  \"邓\",\n  \"吉\",\n  \"仁\",\n  \"烂\",\n  \"砖\",\n  \"租\",\n  \"乌\",\n  \"舰\",\n  \"伴\",\n  \"瓜\",\n  \"浅\",\n  \"丙\",\n  \"暂\",\n  \"燥\",\n  \"橡\",\n  \"柳\",\n  \"迷\",\n  \"暖\",\n  \"牌\",\n  \"秧\",\n  \"胆\",\n  \"详\",\n  \"簧\",\n  \"踏\",\n  \"瓷\",\n  \"谱\",\n  \"呆\",\n  \"宾\",\n  \"糊\",\n  \"洛\",\n  \"辉\",\n  \"愤\",\n  \"竞\",\n  \"隙\",\n  \"怒\",\n  \"粘\",\n  \"乃\",\n  \"绪\",\n  \"肩\",\n  \"籍\",\n  \"敏\",\n  \"涂\",\n  \"熙\",\n  \"皆\",\n  \"侦\",\n  \"悬\",\n  \"掘\",\n  \"享\",\n  \"纠\",\n  \"醒\",\n  \"狂\",\n  \"锁\",\n  \"淀\",\n  \"恨\",\n  \"牲\",\n  \"霸\",\n  \"爬\",\n  \"赏\",\n  \"逆\",\n  \"玩\",\n  \"陵\",\n  \"祝\",\n  \"秒\",\n  \"浙\",\n  \"貌\",\n  \"役\",\n  \"彼\",\n  \"悉\",\n  \"鸭\",\n  \"趋\",\n  \"凤\",\n  \"晨\",\n  \"畜\",\n  \"辈\",\n  \"秩\",\n  \"卵\",\n  \"署\",\n  \"梯\",\n  \"炎\",\n  \"滩\",\n  \"棋\",\n  \"驱\",\n  \"筛\",\n  \"峡\",\n  \"冒\",\n  \"啥\",\n  \"寿\",\n  \"译\",\n  \"浸\",\n  \"泉\",\n  \"帽\",\n  \"迟\",\n  \"硅\",\n  \"疆\",\n  \"贷\",\n  \"漏\",\n  \"稿\",\n  \"冠\",\n  \"嫩\",\n  \"胁\",\n  \"芯\",\n  \"牢\",\n  \"叛\",\n  \"蚀\",\n  \"奥\",\n  \"鸣\",\n  \"岭\",\n  \"羊\",\n  \"凭\",\n  \"串\",\n  \"塘\",\n  \"绘\",\n  \"酵\",\n  \"融\",\n  \"盆\",\n  \"锡\",\n  \"庙\",\n  \"筹\",\n  \"冻\",\n  \"辅\",\n  \"摄\",\n  \"袭\",\n  \"筋\",\n  \"拒\",\n  \"僚\",\n  \"旱\",\n  \"钾\",\n  \"鸟\",\n  \"漆\",\n  \"沈\",\n  \"眉\",\n  \"疏\",\n  \"添\",\n  \"棒\",\n  \"穗\",\n  \"硝\",\n  \"韩\",\n  \"逼\",\n  \"扭\",\n  \"侨\",\n  \"凉\",\n  \"挺\",\n  \"碗\",\n  \"栽\",\n  \"炒\",\n  \"杯\",\n  \"患\",\n  \"馏\",\n  \"劝\",\n  \"豪\",\n  \"辽\",\n  \"勃\",\n  \"鸿\",\n  \"旦\",\n  \"吏\",\n  \"拜\",\n  \"狗\",\n  \"埋\",\n  \"辊\",\n  \"掩\",\n  \"饮\",\n  \"搬\",\n  \"骂\",\n  \"辞\",\n  \"勾\",\n  \"扣\",\n  \"估\",\n  \"蒋\",\n  \"绒\",\n  \"雾\",\n  \"丈\",\n  \"朵\",\n  \"姆\",\n  \"拟\",\n  \"宇\",\n  \"辑\",\n  \"陕\",\n  \"雕\",\n  \"偿\",\n  \"蓄\",\n  \"崇\",\n  \"剪\",\n  \"倡\",\n  \"厅\",\n  \"咬\",\n  \"驶\",\n  \"薯\",\n  \"刷\",\n  \"斥\",\n  \"番\",\n  \"赋\",\n  \"奉\",\n  \"佛\",\n  \"浇\",\n  \"漫\",\n  \"曼\",\n  \"扇\",\n  \"钙\",\n  \"桃\",\n  \"扶\",\n  \"仔\",\n  \"返\",\n  \"俗\",\n  \"亏\",\n  \"腔\",\n  \"鞋\",\n  \"棱\",\n  \"覆\",\n  \"框\",\n  \"悄\",\n  \"叔\",\n  \"撞\",\n  \"骗\",\n  \"勘\",\n  \"旺\",\n  \"沸\",\n  \"孤\",\n  \"吐\",\n  \"孟\",\n  \"渠\",\n  \"屈\",\n  \"疾\",\n  \"妙\",\n  \"惜\",\n  \"仰\",\n  \"狠\",\n  \"胀\",\n  \"谐\",\n  \"抛\",\n  \"霉\",\n  \"桑\",\n  \"岗\",\n  \"嘛\",\n  \"衰\",\n  \"盗\",\n  \"渗\",\n  \"脏\",\n  \"赖\",\n  \"涌\",\n  \"甜\",\n  \"曹\",\n  \"阅\",\n  \"肌\",\n  \"哩\",\n  \"厉\",\n  \"烃\",\n  \"纬\",\n  \"毅\",\n  \"昨\",\n  \"伪\",\n  \"症\",\n  \"煮\",\n  \"叹\",\n  \"钉\",\n  \"搭\",\n  \"茎\",\n  \"笼\",\n  \"酷\",\n  \"偷\",\n  \"弓\",\n  \"锥\",\n  \"恒\",\n  \"杰\",\n  \"坑\",\n  \"鼻\",\n  \"翼\",\n  \"纶\",\n  \"叙\",\n  \"狱\",\n  \"逮\",\n  \"罐\",\n  \"络\",\n  \"棚\",\n  \"抑\",\n  \"膨\",\n  \"蔬\",\n  \"寺\",\n  \"骤\",\n  \"穆\",\n  \"冶\",\n  \"枯\",\n  \"册\",\n  \"尸\",\n  \"凸\",\n  \"绅\",\n  \"坯\",\n  \"牺\",\n  \"焰\",\n  \"轰\",\n  \"欣\",\n  \"晋\",\n  \"瘦\",\n  \"御\",\n  \"锭\",\n  \"锦\",\n  \"丧\",\n  \"旬\",\n  \"锻\",\n  \"垄\",\n  \"搜\",\n  \"扑\",\n  \"邀\",\n  \"亭\",\n  \"酯\",\n  \"迈\",\n  \"舒\",\n  \"脆\",\n  \"酶\",\n  \"闲\",\n  \"忧\",\n  \"酚\",\n  \"顽\",\n  \"羽\",\n  \"涨\",\n  \"卸\",\n  \"仗\",\n  \"陪\",\n  \"辟\",\n  \"惩\",\n  \"杭\",\n  \"姚\",\n  \"肚\",\n  \"捉\",\n  \"飘\",\n  \"漂\",\n  \"昆\",\n  \"欺\",\n  \"吾\",\n  \"郎\",\n  \"烷\",\n  \"汁\",\n  \"呵\",\n  \"饰\",\n  \"萧\",\n  \"雅\",\n  \"邮\",\n  \"迁\",\n  \"燕\",\n  \"撒\",\n  \"姻\",\n  \"赴\",\n  \"宴\",\n  \"烦\",\n  \"债\",\n  \"帐\",\n  \"斑\",\n  \"铃\",\n  \"旨\",\n  \"醇\",\n  \"董\",\n  \"饼\",\n  \"雏\",\n  \"姿\",\n  \"拌\",\n  \"傅\",\n  \"腹\",\n  \"妥\",\n  \"揉\",\n  \"贤\",\n  \"拆\",\n  \"歪\",\n  \"葡\",\n  \"胺\",\n  \"丢\",\n  \"浩\",\n  \"徽\",\n  \"昂\",\n  \"垫\",\n  \"挡\",\n  \"览\",\n  \"贪\",\n  \"慰\",\n  \"缴\",\n  \"汪\",\n  \"慌\",\n  \"冯\",\n  \"诺\",\n  \"姜\",\n  \"谊\",\n  \"凶\",\n  \"劣\",\n  \"诬\",\n  \"耀\",\n  \"昏\",\n  \"躺\",\n  \"盈\",\n  \"骑\",\n  \"乔\",\n  \"溪\",\n  \"丛\",\n  \"卢\",\n  \"抹\",\n  \"闷\",\n  \"咨\",\n  \"刮\",\n  \"驾\",\n  \"缆\",\n  \"悟\",\n  \"摘\",\n  \"铒\",\n  \"掷\",\n  \"颇\",\n  \"幻\",\n  \"柄\",\n  \"惠\",\n  \"惨\",\n  \"佳\",\n  \"仇\",\n  \"腊\",\n  \"窝\",\n  \"涤\",\n  \"剑\",\n  \"瞧\",\n  \"堡\",\n  \"泼\",\n  \"葱\",\n  \"罩\",\n  \"霍\",\n  \"捞\",\n  \"胎\",\n  \"苍\",\n  \"滨\",\n  \"俩\",\n  \"捅\",\n  \"湘\",\n  \"砍\",\n  \"霞\",\n  \"邵\",\n  \"萄\",\n  \"疯\",\n  \"淮\",\n  \"遂\",\n  \"熊\",\n  \"粪\",\n  \"烘\",\n  \"宿\",\n  \"档\",\n  \"戈\",\n  \"驳\",\n  \"嫂\",\n  \"裕\",\n  \"徙\",\n  \"箭\",\n  \"捐\",\n  \"肠\",\n  \"撑\",\n  \"晒\",\n  \"辨\",\n  \"殿\",\n  \"莲\",\n  \"摊\",\n  \"搅\",\n  \"酱\",\n  \"屏\",\n  \"疫\",\n  \"哀\",\n  \"蔡\",\n  \"堵\",\n  \"沫\",\n  \"皱\",\n  \"畅\",\n  \"叠\",\n  \"阁\",\n  \"莱\",\n  \"敲\",\n  \"辖\",\n  \"钩\",\n  \"痕\",\n  \"坝\",\n  \"巷\",\n  \"饿\",\n  \"祸\",\n  \"丘\",\n  \"玄\",\n  \"溜\",\n  \"曰\",\n  \"逻\",\n  \"彭\",\n  \"尝\",\n  \"卿\",\n  \"妨\",\n  \"艇\",\n  \"吞\",\n  \"韦\",\n  \"怨\",\n  \"矮\",\n  \"歇\"\n]\n","module.exports=[\n  \"abandon\",\n  \"ability\",\n  \"able\",\n  \"about\",\n  \"above\",\n  \"absent\",\n  \"absorb\",\n  \"abstract\",\n  \"absurd\",\n  \"abuse\",\n  \"access\",\n  \"accident\",\n  \"account\",\n  \"accuse\",\n  \"achieve\",\n  \"acid\",\n  \"acoustic\",\n  \"acquire\",\n  \"across\",\n  \"act\",\n  \"action\",\n  \"actor\",\n  \"actress\",\n  \"actual\",\n  \"adapt\",\n  \"add\",\n  \"addict\",\n  \"address\",\n  \"adjust\",\n  \"admit\",\n  \"adult\",\n  \"advance\",\n  \"advice\",\n  \"aerobic\",\n  \"affair\",\n  \"afford\",\n  \"afraid\",\n  \"again\",\n  \"age\",\n  \"agent\",\n  \"agree\",\n  \"ahead\",\n  \"aim\",\n  \"air\",\n  \"airport\",\n  \"aisle\",\n  \"alarm\",\n  \"album\",\n  \"alcohol\",\n  \"alert\",\n  \"alien\",\n  \"all\",\n  \"alley\",\n  \"allow\",\n  \"almost\",\n  \"alone\",\n  \"alpha\",\n  \"already\",\n  \"also\",\n  \"alter\",\n  \"always\",\n  \"amateur\",\n  \"amazing\",\n  \"among\",\n  \"amount\",\n  \"amused\",\n  \"analyst\",\n  \"anchor\",\n  \"ancient\",\n  \"anger\",\n  \"angle\",\n  \"angry\",\n  \"animal\",\n  \"ankle\",\n  \"announce\",\n  \"annual\",\n  \"another\",\n  \"answer\",\n  \"antenna\",\n  \"antique\",\n  \"anxiety\",\n  \"any\",\n  \"apart\",\n  \"apology\",\n  \"appear\",\n  \"apple\",\n  \"approve\",\n  \"april\",\n  \"arch\",\n  \"arctic\",\n  \"area\",\n  \"arena\",\n  \"argue\",\n  \"arm\",\n  \"armed\",\n  \"armor\",\n  \"army\",\n  \"around\",\n  \"arrange\",\n  \"arrest\",\n  \"arrive\",\n  \"arrow\",\n  \"art\",\n  \"artefact\",\n  \"artist\",\n  \"artwork\",\n  \"ask\",\n  \"aspect\",\n  \"assault\",\n  \"asset\",\n  \"assist\",\n  \"assume\",\n  \"asthma\",\n  \"athlete\",\n  \"atom\",\n  \"attack\",\n  \"attend\",\n  \"attitude\",\n  \"attract\",\n  \"auction\",\n  \"audit\",\n  \"august\",\n  \"aunt\",\n  \"author\",\n  \"auto\",\n  \"autumn\",\n  \"average\",\n  \"avocado\",\n  \"avoid\",\n  \"awake\",\n  \"aware\",\n  \"away\",\n  \"awesome\",\n  \"awful\",\n  \"awkward\",\n  \"axis\",\n  \"baby\",\n  \"bachelor\",\n  \"bacon\",\n  \"badge\",\n  \"bag\",\n  \"balance\",\n  \"balcony\",\n  \"ball\",\n  \"bamboo\",\n  \"banana\",\n  \"banner\",\n  \"bar\",\n  \"barely\",\n  \"bargain\",\n  \"barrel\",\n  \"base\",\n  \"basic\",\n  \"basket\",\n  \"battle\",\n  \"beach\",\n  \"bean\",\n  \"beauty\",\n  \"because\",\n  \"become\",\n  \"beef\",\n  \"before\",\n  \"begin\",\n  \"behave\",\n  \"behind\",\n  \"believe\",\n  \"below\",\n  \"belt\",\n  \"bench\",\n  \"benefit\",\n  \"best\",\n  \"betray\",\n  \"better\",\n  \"between\",\n  \"beyond\",\n  \"bicycle\",\n  \"bid\",\n  \"bike\",\n  \"bind\",\n  \"biology\",\n  \"bird\",\n  \"birth\",\n  \"bitter\",\n  \"black\",\n  \"blade\",\n  \"blame\",\n  \"blanket\",\n  \"blast\",\n  \"bleak\",\n  \"bless\",\n  \"blind\",\n  \"blood\",\n  \"blossom\",\n  \"blouse\",\n  \"blue\",\n  \"blur\",\n  \"blush\",\n  \"board\",\n  \"boat\",\n  \"body\",\n  \"boil\",\n  \"bomb\",\n  \"bone\",\n  \"bonus\",\n  \"book\",\n  \"boost\",\n  \"border\",\n  \"boring\",\n  \"borrow\",\n  \"boss\",\n  \"bottom\",\n  \"bounce\",\n  \"box\",\n  \"boy\",\n  \"bracket\",\n  \"brain\",\n  \"brand\",\n  \"brass\",\n  \"brave\",\n  \"bread\",\n  \"breeze\",\n  \"brick\",\n  \"bridge\",\n  \"brief\",\n  \"bright\",\n  \"bring\",\n  \"brisk\",\n  \"broccoli\",\n  \"broken\",\n  \"bronze\",\n  \"broom\",\n  \"brother\",\n  \"brown\",\n  \"brush\",\n  \"bubble\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"build\",\n  \"bulb\",\n  \"bulk\",\n  \"bullet\",\n  \"bundle\",\n  \"bunker\",\n  \"burden\",\n  \"burger\",\n  \"burst\",\n  \"bus\",\n  \"business\",\n  \"busy\",\n  \"butter\",\n  \"buyer\",\n  \"buzz\",\n  \"cabbage\",\n  \"cabin\",\n  \"cable\",\n  \"cactus\",\n  \"cage\",\n  \"cake\",\n  \"call\",\n  \"calm\",\n  \"camera\",\n  \"camp\",\n  \"can\",\n  \"canal\",\n  \"cancel\",\n  \"candy\",\n  \"cannon\",\n  \"canoe\",\n  \"canvas\",\n  \"canyon\",\n  \"capable\",\n  \"capital\",\n  \"captain\",\n  \"car\",\n  \"carbon\",\n  \"card\",\n  \"cargo\",\n  \"carpet\",\n  \"carry\",\n  \"cart\",\n  \"case\",\n  \"cash\",\n  \"casino\",\n  \"castle\",\n  \"casual\",\n  \"cat\",\n  \"catalog\",\n  \"catch\",\n  \"category\",\n  \"cattle\",\n  \"caught\",\n  \"cause\",\n  \"caution\",\n  \"cave\",\n  \"ceiling\",\n  \"celery\",\n  \"cement\",\n  \"census\",\n  \"century\",\n  \"cereal\",\n  \"certain\",\n  \"chair\",\n  \"chalk\",\n  \"champion\",\n  \"change\",\n  \"chaos\",\n  \"chapter\",\n  \"charge\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"check\",\n  \"cheese\",\n  \"chef\",\n  \"cherry\",\n  \"chest\",\n  \"chicken\",\n  \"chief\",\n  \"child\",\n  \"chimney\",\n  \"choice\",\n  \"choose\",\n  \"chronic\",\n  \"chuckle\",\n  \"chunk\",\n  \"churn\",\n  \"cigar\",\n  \"cinnamon\",\n  \"circle\",\n  \"citizen\",\n  \"city\",\n  \"civil\",\n  \"claim\",\n  \"clap\",\n  \"clarify\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clerk\",\n  \"clever\",\n  \"click\",\n  \"client\",\n  \"cliff\",\n  \"climb\",\n  \"clinic\",\n  \"clip\",\n  \"clock\",\n  \"clog\",\n  \"close\",\n  \"cloth\",\n  \"cloud\",\n  \"clown\",\n  \"club\",\n  \"clump\",\n  \"cluster\",\n  \"clutch\",\n  \"coach\",\n  \"coast\",\n  \"coconut\",\n  \"code\",\n  \"coffee\",\n  \"coil\",\n  \"coin\",\n  \"collect\",\n  \"color\",\n  \"column\",\n  \"combine\",\n  \"come\",\n  \"comfort\",\n  \"comic\",\n  \"common\",\n  \"company\",\n  \"concert\",\n  \"conduct\",\n  \"confirm\",\n  \"congress\",\n  \"connect\",\n  \"consider\",\n  \"control\",\n  \"convince\",\n  \"cook\",\n  \"cool\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"core\",\n  \"corn\",\n  \"correct\",\n  \"cost\",\n  \"cotton\",\n  \"couch\",\n  \"country\",\n  \"couple\",\n  \"course\",\n  \"cousin\",\n  \"cover\",\n  \"coyote\",\n  \"crack\",\n  \"cradle\",\n  \"craft\",\n  \"cram\",\n  \"crane\",\n  \"crash\",\n  \"crater\",\n  \"crawl\",\n  \"crazy\",\n  \"cream\",\n  \"credit\",\n  \"creek\",\n  \"crew\",\n  \"cricket\",\n  \"crime\",\n  \"crisp\",\n  \"critic\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crowd\",\n  \"crucial\",\n  \"cruel\",\n  \"cruise\",\n  \"crumble\",\n  \"crunch\",\n  \"crush\",\n  \"cry\",\n  \"crystal\",\n  \"cube\",\n  \"culture\",\n  \"cup\",\n  \"cupboard\",\n  \"curious\",\n  \"current\",\n  \"curtain\",\n  \"curve\",\n  \"cushion\",\n  \"custom\",\n  \"cute\",\n  \"cycle\",\n  \"dad\",\n  \"damage\",\n  \"damp\",\n  \"dance\",\n  \"danger\",\n  \"daring\",\n  \"dash\",\n  \"daughter\",\n  \"dawn\",\n  \"day\",\n  \"deal\",\n  \"debate\",\n  \"debris\",\n  \"decade\",\n  \"december\",\n  \"decide\",\n  \"decline\",\n  \"decorate\",\n  \"decrease\",\n  \"deer\",\n  \"defense\",\n  \"define\",\n  \"defy\",\n  \"degree\",\n  \"delay\",\n  \"deliver\",\n  \"demand\",\n  \"demise\",\n  \"denial\",\n  \"dentist\",\n  \"deny\",\n  \"depart\",\n  \"depend\",\n  \"deposit\",\n  \"depth\",\n  \"deputy\",\n  \"derive\",\n  \"describe\",\n  \"desert\",\n  \"design\",\n  \"desk\",\n  \"despair\",\n  \"destroy\",\n  \"detail\",\n  \"detect\",\n  \"develop\",\n  \"device\",\n  \"devote\",\n  \"diagram\",\n  \"dial\",\n  \"diamond\",\n  \"diary\",\n  \"dice\",\n  \"diesel\",\n  \"diet\",\n  \"differ\",\n  \"digital\",\n  \"dignity\",\n  \"dilemma\",\n  \"dinner\",\n  \"dinosaur\",\n  \"direct\",\n  \"dirt\",\n  \"disagree\",\n  \"discover\",\n  \"disease\",\n  \"dish\",\n  \"dismiss\",\n  \"disorder\",\n  \"display\",\n  \"distance\",\n  \"divert\",\n  \"divide\",\n  \"divorce\",\n  \"dizzy\",\n  \"doctor\",\n  \"document\",\n  \"dog\",\n  \"doll\",\n  \"dolphin\",\n  \"domain\",\n  \"donate\",\n  \"donkey\",\n  \"donor\",\n  \"door\",\n  \"dose\",\n  \"double\",\n  \"dove\",\n  \"draft\",\n  \"dragon\",\n  \"drama\",\n  \"drastic\",\n  \"draw\",\n  \"dream\",\n  \"dress\",\n  \"drift\",\n  \"drill\",\n  \"drink\",\n  \"drip\",\n  \"drive\",\n  \"drop\",\n  \"drum\",\n  \"dry\",\n  \"duck\",\n  \"dumb\",\n  \"dune\",\n  \"during\",\n  \"dust\",\n  \"dutch\",\n  \"duty\",\n  \"dwarf\",\n  \"dynamic\",\n  \"eager\",\n  \"eagle\",\n  \"early\",\n  \"earn\",\n  \"earth\",\n  \"easily\",\n  \"east\",\n  \"easy\",\n  \"echo\",\n  \"ecology\",\n  \"economy\",\n  \"edge\",\n  \"edit\",\n  \"educate\",\n  \"effort\",\n  \"egg\",\n  \"eight\",\n  \"either\",\n  \"elbow\",\n  \"elder\",\n  \"electric\",\n  \"elegant\",\n  \"element\",\n  \"elephant\",\n  \"elevator\",\n  \"elite\",\n  \"else\",\n  \"embark\",\n  \"embody\",\n  \"embrace\",\n  \"emerge\",\n  \"emotion\",\n  \"employ\",\n  \"empower\",\n  \"empty\",\n  \"enable\",\n  \"enact\",\n  \"end\",\n  \"endless\",\n  \"endorse\",\n  \"enemy\",\n  \"energy\",\n  \"enforce\",\n  \"engage\",\n  \"engine\",\n  \"enhance\",\n  \"enjoy\",\n  \"enlist\",\n  \"enough\",\n  \"enrich\",\n  \"enroll\",\n  \"ensure\",\n  \"enter\",\n  \"entire\",\n  \"entry\",\n  \"envelope\",\n  \"episode\",\n  \"equal\",\n  \"equip\",\n  \"era\",\n  \"erase\",\n  \"erode\",\n  \"erosion\",\n  \"error\",\n  \"erupt\",\n  \"escape\",\n  \"essay\",\n  \"essence\",\n  \"estate\",\n  \"eternal\",\n  \"ethics\",\n  \"evidence\",\n  \"evil\",\n  \"evoke\",\n  \"evolve\",\n  \"exact\",\n  \"example\",\n  \"excess\",\n  \"exchange\",\n  \"excite\",\n  \"exclude\",\n  \"excuse\",\n  \"execute\",\n  \"exercise\",\n  \"exhaust\",\n  \"exhibit\",\n  \"exile\",\n  \"exist\",\n  \"exit\",\n  \"exotic\",\n  \"expand\",\n  \"expect\",\n  \"expire\",\n  \"explain\",\n  \"expose\",\n  \"express\",\n  \"extend\",\n  \"extra\",\n  \"eye\",\n  \"eyebrow\",\n  \"fabric\",\n  \"face\",\n  \"faculty\",\n  \"fade\",\n  \"faint\",\n  \"faith\",\n  \"fall\",\n  \"false\",\n  \"fame\",\n  \"family\",\n  \"famous\",\n  \"fan\",\n  \"fancy\",\n  \"fantasy\",\n  \"farm\",\n  \"fashion\",\n  \"fat\",\n  \"fatal\",\n  \"father\",\n  \"fatigue\",\n  \"fault\",\n  \"favorite\",\n  \"feature\",\n  \"february\",\n  \"federal\",\n  \"fee\",\n  \"feed\",\n  \"feel\",\n  \"female\",\n  \"fence\",\n  \"festival\",\n  \"fetch\",\n  \"fever\",\n  \"few\",\n  \"fiber\",\n  \"fiction\",\n  \"field\",\n  \"figure\",\n  \"file\",\n  \"film\",\n  \"filter\",\n  \"final\",\n  \"find\",\n  \"fine\",\n  \"finger\",\n  \"finish\",\n  \"fire\",\n  \"firm\",\n  \"first\",\n  \"fiscal\",\n  \"fish\",\n  \"fit\",\n  \"fitness\",\n  \"fix\",\n  \"flag\",\n  \"flame\",\n  \"flash\",\n  \"flat\",\n  \"flavor\",\n  \"flee\",\n  \"flight\",\n  \"flip\",\n  \"float\",\n  \"flock\",\n  \"floor\",\n  \"flower\",\n  \"fluid\",\n  \"flush\",\n  \"fly\",\n  \"foam\",\n  \"focus\",\n  \"fog\",\n  \"foil\",\n  \"fold\",\n  \"follow\",\n  \"food\",\n  \"foot\",\n  \"force\",\n  \"forest\",\n  \"forget\",\n  \"fork\",\n  \"fortune\",\n  \"forum\",\n  \"forward\",\n  \"fossil\",\n  \"foster\",\n  \"found\",\n  \"fox\",\n  \"fragile\",\n  \"frame\",\n  \"frequent\",\n  \"fresh\",\n  \"friend\",\n  \"fringe\",\n  \"frog\",\n  \"front\",\n  \"frost\",\n  \"frown\",\n  \"frozen\",\n  \"fruit\",\n  \"fuel\",\n  \"fun\",\n  \"funny\",\n  \"furnace\",\n  \"fury\",\n  \"future\",\n  \"gadget\",\n  \"gain\",\n  \"galaxy\",\n  \"gallery\",\n  \"game\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"garlic\",\n  \"garment\",\n  \"gas\",\n  \"gasp\",\n  \"gate\",\n  \"gather\",\n  \"gauge\",\n  \"gaze\",\n  \"general\",\n  \"genius\",\n  \"genre\",\n  \"gentle\",\n  \"genuine\",\n  \"gesture\",\n  \"ghost\",\n  \"giant\",\n  \"gift\",\n  \"giggle\",\n  \"ginger\",\n  \"giraffe\",\n  \"girl\",\n  \"give\",\n  \"glad\",\n  \"glance\",\n  \"glare\",\n  \"glass\",\n  \"glide\",\n  \"glimpse\",\n  \"globe\",\n  \"gloom\",\n  \"glory\",\n  \"glove\",\n  \"glow\",\n  \"glue\",\n  \"goat\",\n  \"goddess\",\n  \"gold\",\n  \"good\",\n  \"goose\",\n  \"gorilla\",\n  \"gospel\",\n  \"gossip\",\n  \"govern\",\n  \"gown\",\n  \"grab\",\n  \"grace\",\n  \"grain\",\n  \"grant\",\n  \"grape\",\n  \"grass\",\n  \"gravity\",\n  \"great\",\n  \"green\",\n  \"grid\",\n  \"grief\",\n  \"grit\",\n  \"grocery\",\n  \"group\",\n  \"grow\",\n  \"grunt\",\n  \"guard\",\n  \"guess\",\n  \"guide\",\n  \"guilt\",\n  \"guitar\",\n  \"gun\",\n  \"gym\",\n  \"habit\",\n  \"hair\",\n  \"half\",\n  \"hammer\",\n  \"hamster\",\n  \"hand\",\n  \"happy\",\n  \"harbor\",\n  \"hard\",\n  \"harsh\",\n  \"harvest\",\n  \"hat\",\n  \"have\",\n  \"hawk\",\n  \"hazard\",\n  \"head\",\n  \"health\",\n  \"heart\",\n  \"heavy\",\n  \"hedgehog\",\n  \"height\",\n  \"hello\",\n  \"helmet\",\n  \"help\",\n  \"hen\",\n  \"hero\",\n  \"hidden\",\n  \"high\",\n  \"hill\",\n  \"hint\",\n  \"hip\",\n  \"hire\",\n  \"history\",\n  \"hobby\",\n  \"hockey\",\n  \"hold\",\n  \"hole\",\n  \"holiday\",\n  \"hollow\",\n  \"home\",\n  \"honey\",\n  \"hood\",\n  \"hope\",\n  \"horn\",\n  \"horror\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hotel\",\n  \"hour\",\n  \"hover\",\n  \"hub\",\n  \"huge\",\n  \"human\",\n  \"humble\",\n  \"humor\",\n  \"hundred\",\n  \"hungry\",\n  \"hunt\",\n  \"hurdle\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hybrid\",\n  \"ice\",\n  \"icon\",\n  \"idea\",\n  \"identify\",\n  \"idle\",\n  \"ignore\",\n  \"ill\",\n  \"illegal\",\n  \"illness\",\n  \"image\",\n  \"imitate\",\n  \"immense\",\n  \"immune\",\n  \"impact\",\n  \"impose\",\n  \"improve\",\n  \"impulse\",\n  \"inch\",\n  \"include\",\n  \"income\",\n  \"increase\",\n  \"index\",\n  \"indicate\",\n  \"indoor\",\n  \"industry\",\n  \"infant\",\n  \"inflict\",\n  \"inform\",\n  \"inhale\",\n  \"inherit\",\n  \"initial\",\n  \"inject\",\n  \"injury\",\n  \"inmate\",\n  \"inner\",\n  \"innocent\",\n  \"input\",\n  \"inquiry\",\n  \"insane\",\n  \"insect\",\n  \"inside\",\n  \"inspire\",\n  \"install\",\n  \"intact\",\n  \"interest\",\n  \"into\",\n  \"invest\",\n  \"invite\",\n  \"involve\",\n  \"iron\",\n  \"island\",\n  \"isolate\",\n  \"issue\",\n  \"item\",\n  \"ivory\",\n  \"jacket\",\n  \"jaguar\",\n  \"jar\",\n  \"jazz\",\n  \"jealous\",\n  \"jeans\",\n  \"jelly\",\n  \"jewel\",\n  \"job\",\n  \"join\",\n  \"joke\",\n  \"journey\",\n  \"joy\",\n  \"judge\",\n  \"juice\",\n  \"jump\",\n  \"jungle\",\n  \"junior\",\n  \"junk\",\n  \"just\",\n  \"kangaroo\",\n  \"keen\",\n  \"keep\",\n  \"ketchup\",\n  \"key\",\n  \"kick\",\n  \"kid\",\n  \"kidney\",\n  \"kind\",\n  \"kingdom\",\n  \"kiss\",\n  \"kit\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kiwi\",\n  \"knee\",\n  \"knife\",\n  \"knock\",\n  \"know\",\n  \"lab\",\n  \"label\",\n  \"labor\",\n  \"ladder\",\n  \"lady\",\n  \"lake\",\n  \"lamp\",\n  \"language\",\n  \"laptop\",\n  \"large\",\n  \"later\",\n  \"latin\",\n  \"laugh\",\n  \"laundry\",\n  \"lava\",\n  \"law\",\n  \"lawn\",\n  \"lawsuit\",\n  \"layer\",\n  \"lazy\",\n  \"leader\",\n  \"leaf\",\n  \"learn\",\n  \"leave\",\n  \"lecture\",\n  \"left\",\n  \"leg\",\n  \"legal\",\n  \"legend\",\n  \"leisure\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"leopard\",\n  \"lesson\",\n  \"letter\",\n  \"level\",\n  \"liar\",\n  \"liberty\",\n  \"library\",\n  \"license\",\n  \"life\",\n  \"lift\",\n  \"light\",\n  \"like\",\n  \"limb\",\n  \"limit\",\n  \"link\",\n  \"lion\",\n  \"liquid\",\n  \"list\",\n  \"little\",\n  \"live\",\n  \"lizard\",\n  \"load\",\n  \"loan\",\n  \"lobster\",\n  \"local\",\n  \"lock\",\n  \"logic\",\n  \"lonely\",\n  \"long\",\n  \"loop\",\n  \"lottery\",\n  \"loud\",\n  \"lounge\",\n  \"love\",\n  \"loyal\",\n  \"lucky\",\n  \"luggage\",\n  \"lumber\",\n  \"lunar\",\n  \"lunch\",\n  \"luxury\",\n  \"lyrics\",\n  \"machine\",\n  \"mad\",\n  \"magic\",\n  \"magnet\",\n  \"maid\",\n  \"mail\",\n  \"main\",\n  \"major\",\n  \"make\",\n  \"mammal\",\n  \"man\",\n  \"manage\",\n  \"mandate\",\n  \"mango\",\n  \"mansion\",\n  \"manual\",\n  \"maple\",\n  \"marble\",\n  \"march\",\n  \"margin\",\n  \"marine\",\n  \"market\",\n  \"marriage\",\n  \"mask\",\n  \"mass\",\n  \"master\",\n  \"match\",\n  \"material\",\n  \"math\",\n  \"matrix\",\n  \"matter\",\n  \"maximum\",\n  \"maze\",\n  \"meadow\",\n  \"mean\",\n  \"measure\",\n  \"meat\",\n  \"mechanic\",\n  \"medal\",\n  \"media\",\n  \"melody\",\n  \"melt\",\n  \"member\",\n  \"memory\",\n  \"mention\",\n  \"menu\",\n  \"mercy\",\n  \"merge\",\n  \"merit\",\n  \"merry\",\n  \"mesh\",\n  \"message\",\n  \"metal\",\n  \"method\",\n  \"middle\",\n  \"midnight\",\n  \"milk\",\n  \"million\",\n  \"mimic\",\n  \"mind\",\n  \"minimum\",\n  \"minor\",\n  \"minute\",\n  \"miracle\",\n  \"mirror\",\n  \"misery\",\n  \"miss\",\n  \"mistake\",\n  \"mix\",\n  \"mixed\",\n  \"mixture\",\n  \"mobile\",\n  \"model\",\n  \"modify\",\n  \"mom\",\n  \"moment\",\n  \"monitor\",\n  \"monkey\",\n  \"monster\",\n  \"month\",\n  \"moon\",\n  \"moral\",\n  \"more\",\n  \"morning\",\n  \"mosquito\",\n  \"mother\",\n  \"motion\",\n  \"motor\",\n  \"mountain\",\n  \"mouse\",\n  \"move\",\n  \"movie\",\n  \"much\",\n  \"muffin\",\n  \"mule\",\n  \"multiply\",\n  \"muscle\",\n  \"museum\",\n  \"mushroom\",\n  \"music\",\n  \"must\",\n  \"mutual\",\n  \"myself\",\n  \"mystery\",\n  \"myth\",\n  \"naive\",\n  \"name\",\n  \"napkin\",\n  \"narrow\",\n  \"nasty\",\n  \"nation\",\n  \"nature\",\n  \"near\",\n  \"neck\",\n  \"need\",\n  \"negative\",\n  \"neglect\",\n  \"neither\",\n  \"nephew\",\n  \"nerve\",\n  \"nest\",\n  \"net\",\n  \"network\",\n  \"neutral\",\n  \"never\",\n  \"news\",\n  \"next\",\n  \"nice\",\n  \"night\",\n  \"noble\",\n  \"noise\",\n  \"nominee\",\n  \"noodle\",\n  \"normal\",\n  \"north\",\n  \"nose\",\n  \"notable\",\n  \"note\",\n  \"nothing\",\n  \"notice\",\n  \"novel\",\n  \"now\",\n  \"nuclear\",\n  \"number\",\n  \"nurse\",\n  \"nut\",\n  \"oak\",\n  \"obey\",\n  \"object\",\n  \"oblige\",\n  \"obscure\",\n  \"observe\",\n  \"obtain\",\n  \"obvious\",\n  \"occur\",\n  \"ocean\",\n  \"october\",\n  \"odor\",\n  \"off\",\n  \"offer\",\n  \"office\",\n  \"often\",\n  \"oil\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympic\",\n  \"omit\",\n  \"once\",\n  \"one\",\n  \"onion\",\n  \"online\",\n  \"only\",\n  \"open\",\n  \"opera\",\n  \"opinion\",\n  \"oppose\",\n  \"option\",\n  \"orange\",\n  \"orbit\",\n  \"orchard\",\n  \"order\",\n  \"ordinary\",\n  \"organ\",\n  \"orient\",\n  \"original\",\n  \"orphan\",\n  \"ostrich\",\n  \"other\",\n  \"outdoor\",\n  \"outer\",\n  \"output\",\n  \"outside\",\n  \"oval\",\n  \"oven\",\n  \"over\",\n  \"own\",\n  \"owner\",\n  \"oxygen\",\n  \"oyster\",\n  \"ozone\",\n  \"pact\",\n  \"paddle\",\n  \"page\",\n  \"pair\",\n  \"palace\",\n  \"palm\",\n  \"panda\",\n  \"panel\",\n  \"panic\",\n  \"panther\",\n  \"paper\",\n  \"parade\",\n  \"parent\",\n  \"park\",\n  \"parrot\",\n  \"party\",\n  \"pass\",\n  \"patch\",\n  \"path\",\n  \"patient\",\n  \"patrol\",\n  \"pattern\",\n  \"pause\",\n  \"pave\",\n  \"payment\",\n  \"peace\",\n  \"peanut\",\n  \"pear\",\n  \"peasant\",\n  \"pelican\",\n  \"pen\",\n  \"penalty\",\n  \"pencil\",\n  \"people\",\n  \"pepper\",\n  \"perfect\",\n  \"permit\",\n  \"person\",\n  \"pet\",\n  \"phone\",\n  \"photo\",\n  \"phrase\",\n  \"physical\",\n  \"piano\",\n  \"picnic\",\n  \"picture\",\n  \"piece\",\n  \"pig\",\n  \"pigeon\",\n  \"pill\",\n  \"pilot\",\n  \"pink\",\n  \"pioneer\",\n  \"pipe\",\n  \"pistol\",\n  \"pitch\",\n  \"pizza\",\n  \"place\",\n  \"planet\",\n  \"plastic\",\n  \"plate\",\n  \"play\",\n  \"please\",\n  \"pledge\",\n  \"pluck\",\n  \"plug\",\n  \"plunge\",\n  \"poem\",\n  \"poet\",\n  \"point\",\n  \"polar\",\n  \"pole\",\n  \"police\",\n  \"pond\",\n  \"pony\",\n  \"pool\",\n  \"popular\",\n  \"portion\",\n  \"position\",\n  \"possible\",\n  \"post\",\n  \"potato\",\n  \"pottery\",\n  \"poverty\",\n  \"powder\",\n  \"power\",\n  \"practice\",\n  \"praise\",\n  \"predict\",\n  \"prefer\",\n  \"prepare\",\n  \"present\",\n  \"pretty\",\n  \"prevent\",\n  \"price\",\n  \"pride\",\n  \"primary\",\n  \"print\",\n  \"priority\",\n  \"prison\",\n  \"private\",\n  \"prize\",\n  \"problem\",\n  \"process\",\n  \"produce\",\n  \"profit\",\n  \"program\",\n  \"project\",\n  \"promote\",\n  \"proof\",\n  \"property\",\n  \"prosper\",\n  \"protect\",\n  \"proud\",\n  \"provide\",\n  \"public\",\n  \"pudding\",\n  \"pull\",\n  \"pulp\",\n  \"pulse\",\n  \"pumpkin\",\n  \"punch\",\n  \"pupil\",\n  \"puppy\",\n  \"purchase\",\n  \"purity\",\n  \"purpose\",\n  \"purse\",\n  \"push\",\n  \"put\",\n  \"puzzle\",\n  \"pyramid\",\n  \"quality\",\n  \"quantum\",\n  \"quarter\",\n  \"question\",\n  \"quick\",\n  \"quit\",\n  \"quiz\",\n  \"quote\",\n  \"rabbit\",\n  \"raccoon\",\n  \"race\",\n  \"rack\",\n  \"radar\",\n  \"radio\",\n  \"rail\",\n  \"rain\",\n  \"raise\",\n  \"rally\",\n  \"ramp\",\n  \"ranch\",\n  \"random\",\n  \"range\",\n  \"rapid\",\n  \"rare\",\n  \"rate\",\n  \"rather\",\n  \"raven\",\n  \"raw\",\n  \"razor\",\n  \"ready\",\n  \"real\",\n  \"reason\",\n  \"rebel\",\n  \"rebuild\",\n  \"recall\",\n  \"receive\",\n  \"recipe\",\n  \"record\",\n  \"recycle\",\n  \"reduce\",\n  \"reflect\",\n  \"reform\",\n  \"refuse\",\n  \"region\",\n  \"regret\",\n  \"regular\",\n  \"reject\",\n  \"relax\",\n  \"release\",\n  \"relief\",\n  \"rely\",\n  \"remain\",\n  \"remember\",\n  \"remind\",\n  \"remove\",\n  \"render\",\n  \"renew\",\n  \"rent\",\n  \"reopen\",\n  \"repair\",\n  \"repeat\",\n  \"replace\",\n  \"report\",\n  \"require\",\n  \"rescue\",\n  \"resemble\",\n  \"resist\",\n  \"resource\",\n  \"response\",\n  \"result\",\n  \"retire\",\n  \"retreat\",\n  \"return\",\n  \"reunion\",\n  \"reveal\",\n  \"review\",\n  \"reward\",\n  \"rhythm\",\n  \"rib\",\n  \"ribbon\",\n  \"rice\",\n  \"rich\",\n  \"ride\",\n  \"ridge\",\n  \"rifle\",\n  \"right\",\n  \"rigid\",\n  \"ring\",\n  \"riot\",\n  \"ripple\",\n  \"risk\",\n  \"ritual\",\n  \"rival\",\n  \"river\",\n  \"road\",\n  \"roast\",\n  \"robot\",\n  \"robust\",\n  \"rocket\",\n  \"romance\",\n  \"roof\",\n  \"rookie\",\n  \"room\",\n  \"rose\",\n  \"rotate\",\n  \"rough\",\n  \"round\",\n  \"route\",\n  \"royal\",\n  \"rubber\",\n  \"rude\",\n  \"rug\",\n  \"rule\",\n  \"run\",\n  \"runway\",\n  \"rural\",\n  \"sad\",\n  \"saddle\",\n  \"sadness\",\n  \"safe\",\n  \"sail\",\n  \"salad\",\n  \"salmon\",\n  \"salon\",\n  \"salt\",\n  \"salute\",\n  \"same\",\n  \"sample\",\n  \"sand\",\n  \"satisfy\",\n  \"satoshi\",\n  \"sauce\",\n  \"sausage\",\n  \"save\",\n  \"say\",\n  \"scale\",\n  \"scan\",\n  \"scare\",\n  \"scatter\",\n  \"scene\",\n  \"scheme\",\n  \"school\",\n  \"science\",\n  \"scissors\",\n  \"scorpion\",\n  \"scout\",\n  \"scrap\",\n  \"screen\",\n  \"script\",\n  \"scrub\",\n  \"sea\",\n  \"search\",\n  \"season\",\n  \"seat\",\n  \"second\",\n  \"secret\",\n  \"section\",\n  \"security\",\n  \"seed\",\n  \"seek\",\n  \"segment\",\n  \"select\",\n  \"sell\",\n  \"seminar\",\n  \"senior\",\n  \"sense\",\n  \"sentence\",\n  \"series\",\n  \"service\",\n  \"session\",\n  \"settle\",\n  \"setup\",\n  \"seven\",\n  \"shadow\",\n  \"shaft\",\n  \"shallow\",\n  \"share\",\n  \"shed\",\n  \"shell\",\n  \"sheriff\",\n  \"shield\",\n  \"shift\",\n  \"shine\",\n  \"ship\",\n  \"shiver\",\n  \"shock\",\n  \"shoe\",\n  \"shoot\",\n  \"shop\",\n  \"short\",\n  \"shoulder\",\n  \"shove\",\n  \"shrimp\",\n  \"shrug\",\n  \"shuffle\",\n  \"shy\",\n  \"sibling\",\n  \"sick\",\n  \"side\",\n  \"siege\",\n  \"sight\",\n  \"sign\",\n  \"silent\",\n  \"silk\",\n  \"silly\",\n  \"silver\",\n  \"similar\",\n  \"simple\",\n  \"since\",\n  \"sing\",\n  \"siren\",\n  \"sister\",\n  \"situate\",\n  \"six\",\n  \"size\",\n  \"skate\",\n  \"sketch\",\n  \"ski\",\n  \"skill\",\n  \"skin\",\n  \"skirt\",\n  \"skull\",\n  \"slab\",\n  \"slam\",\n  \"sleep\",\n  \"slender\",\n  \"slice\",\n  \"slide\",\n  \"slight\",\n  \"slim\",\n  \"slogan\",\n  \"slot\",\n  \"slow\",\n  \"slush\",\n  \"small\",\n  \"smart\",\n  \"smile\",\n  \"smoke\",\n  \"smooth\",\n  \"snack\",\n  \"snake\",\n  \"snap\",\n  \"sniff\",\n  \"snow\",\n  \"soap\",\n  \"soccer\",\n  \"social\",\n  \"sock\",\n  \"soda\",\n  \"soft\",\n  \"solar\",\n  \"soldier\",\n  \"solid\",\n  \"solution\",\n  \"solve\",\n  \"someone\",\n  \"song\",\n  \"soon\",\n  \"sorry\",\n  \"sort\",\n  \"soul\",\n  \"sound\",\n  \"soup\",\n  \"source\",\n  \"south\",\n  \"space\",\n  \"spare\",\n  \"spatial\",\n  \"spawn\",\n  \"speak\",\n  \"special\",\n  \"speed\",\n  \"spell\",\n  \"spend\",\n  \"sphere\",\n  \"spice\",\n  \"spider\",\n  \"spike\",\n  \"spin\",\n  \"spirit\",\n  \"split\",\n  \"spoil\",\n  \"sponsor\",\n  \"spoon\",\n  \"sport\",\n  \"spot\",\n  \"spray\",\n  \"spread\",\n  \"spring\",\n  \"spy\",\n  \"square\",\n  \"squeeze\",\n  \"squirrel\",\n  \"stable\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"stairs\",\n  \"stamp\",\n  \"stand\",\n  \"start\",\n  \"state\",\n  \"stay\",\n  \"steak\",\n  \"steel\",\n  \"stem\",\n  \"step\",\n  \"stereo\",\n  \"stick\",\n  \"still\",\n  \"sting\",\n  \"stock\",\n  \"stomach\",\n  \"stone\",\n  \"stool\",\n  \"story\",\n  \"stove\",\n  \"strategy\",\n  \"street\",\n  \"strike\",\n  \"strong\",\n  \"struggle\",\n  \"student\",\n  \"stuff\",\n  \"stumble\",\n  \"style\",\n  \"subject\",\n  \"submit\",\n  \"subway\",\n  \"success\",\n  \"such\",\n  \"sudden\",\n  \"suffer\",\n  \"sugar\",\n  \"suggest\",\n  \"suit\",\n  \"summer\",\n  \"sun\",\n  \"sunny\",\n  \"sunset\",\n  \"super\",\n  \"supply\",\n  \"supreme\",\n  \"sure\",\n  \"surface\",\n  \"surge\",\n  \"surprise\",\n  \"surround\",\n  \"survey\",\n  \"suspect\",\n  \"sustain\",\n  \"swallow\",\n  \"swamp\",\n  \"swap\",\n  \"swarm\",\n  \"swear\",\n  \"sweet\",\n  \"swift\",\n  \"swim\",\n  \"swing\",\n  \"switch\",\n  \"sword\",\n  \"symbol\",\n  \"symptom\",\n  \"syrup\",\n  \"system\",\n  \"table\",\n  \"tackle\",\n  \"tag\",\n  \"tail\",\n  \"talent\",\n  \"talk\",\n  \"tank\",\n  \"tape\",\n  \"target\",\n  \"task\",\n  \"taste\",\n  \"tattoo\",\n  \"taxi\",\n  \"teach\",\n  \"team\",\n  \"tell\",\n  \"ten\",\n  \"tenant\",\n  \"tennis\",\n  \"tent\",\n  \"term\",\n  \"test\",\n  \"text\",\n  \"thank\",\n  \"that\",\n  \"theme\",\n  \"then\",\n  \"theory\",\n  \"there\",\n  \"they\",\n  \"thing\",\n  \"this\",\n  \"thought\",\n  \"three\",\n  \"thrive\",\n  \"throw\",\n  \"thumb\",\n  \"thunder\",\n  \"ticket\",\n  \"tide\",\n  \"tiger\",\n  \"tilt\",\n  \"timber\",\n  \"time\",\n  \"tiny\",\n  \"tip\",\n  \"tired\",\n  \"tissue\",\n  \"title\",\n  \"toast\",\n  \"tobacco\",\n  \"today\",\n  \"toddler\",\n  \"toe\",\n  \"together\",\n  \"toilet\",\n  \"token\",\n  \"tomato\",\n  \"tomorrow\",\n  \"tone\",\n  \"tongue\",\n  \"tonight\",\n  \"tool\",\n  \"tooth\",\n  \"top\",\n  \"topic\",\n  \"topple\",\n  \"torch\",\n  \"tornado\",\n  \"tortoise\",\n  \"toss\",\n  \"total\",\n  \"tourist\",\n  \"toward\",\n  \"tower\",\n  \"town\",\n  \"toy\",\n  \"track\",\n  \"trade\",\n  \"traffic\",\n  \"tragic\",\n  \"train\",\n  \"transfer\",\n  \"trap\",\n  \"trash\",\n  \"travel\",\n  \"tray\",\n  \"treat\",\n  \"tree\",\n  \"trend\",\n  \"trial\",\n  \"tribe\",\n  \"trick\",\n  \"trigger\",\n  \"trim\",\n  \"trip\",\n  \"trophy\",\n  \"trouble\",\n  \"truck\",\n  \"true\",\n  \"truly\",\n  \"trumpet\",\n  \"trust\",\n  \"truth\",\n  \"try\",\n  \"tube\",\n  \"tuition\",\n  \"tumble\",\n  \"tuna\",\n  \"tunnel\",\n  \"turkey\",\n  \"turn\",\n  \"turtle\",\n  \"twelve\",\n  \"twenty\",\n  \"twice\",\n  \"twin\",\n  \"twist\",\n  \"two\",\n  \"type\",\n  \"typical\",\n  \"ugly\",\n  \"umbrella\",\n  \"unable\",\n  \"unaware\",\n  \"uncle\",\n  \"uncover\",\n  \"under\",\n  \"undo\",\n  \"unfair\",\n  \"unfold\",\n  \"unhappy\",\n  \"uniform\",\n  \"unique\",\n  \"unit\",\n  \"universe\",\n  \"unknown\",\n  \"unlock\",\n  \"until\",\n  \"unusual\",\n  \"unveil\",\n  \"update\",\n  \"upgrade\",\n  \"uphold\",\n  \"upon\",\n  \"upper\",\n  \"upset\",\n  \"urban\",\n  \"urge\",\n  \"usage\",\n  \"use\",\n  \"used\",\n  \"useful\",\n  \"useless\",\n  \"usual\",\n  \"utility\",\n  \"vacant\",\n  \"vacuum\",\n  \"vague\",\n  \"valid\",\n  \"valley\",\n  \"valve\",\n  \"van\",\n  \"vanish\",\n  \"vapor\",\n  \"various\",\n  \"vast\",\n  \"vault\",\n  \"vehicle\",\n  \"velvet\",\n  \"vendor\",\n  \"venture\",\n  \"venue\",\n  \"verb\",\n  \"verify\",\n  \"version\",\n  \"very\",\n  \"vessel\",\n  \"veteran\",\n  \"viable\",\n  \"vibrant\",\n  \"vicious\",\n  \"victory\",\n  \"video\",\n  \"view\",\n  \"village\",\n  \"vintage\",\n  \"violin\",\n  \"virtual\",\n  \"virus\",\n  \"visa\",\n  \"visit\",\n  \"visual\",\n  \"vital\",\n  \"vivid\",\n  \"vocal\",\n  \"voice\",\n  \"void\",\n  \"volcano\",\n  \"volume\",\n  \"vote\",\n  \"voyage\",\n  \"wage\",\n  \"wagon\",\n  \"wait\",\n  \"walk\",\n  \"wall\",\n  \"walnut\",\n  \"want\",\n  \"warfare\",\n  \"warm\",\n  \"warrior\",\n  \"wash\",\n  \"wasp\",\n  \"waste\",\n  \"water\",\n  \"wave\",\n  \"way\",\n  \"wealth\",\n  \"weapon\",\n  \"wear\",\n  \"weasel\",\n  \"weather\",\n  \"web\",\n  \"wedding\",\n  \"weekend\",\n  \"weird\",\n  \"welcome\",\n  \"west\",\n  \"wet\",\n  \"whale\",\n  \"what\",\n  \"wheat\",\n  \"wheel\",\n  \"when\",\n  \"where\",\n  \"whip\",\n  \"whisper\",\n  \"wide\",\n  \"width\",\n  \"wife\",\n  \"wild\",\n  \"will\",\n  \"win\",\n  \"window\",\n  \"wine\",\n  \"wing\",\n  \"wink\",\n  \"winner\",\n  \"winter\",\n  \"wire\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"witness\",\n  \"wolf\",\n  \"woman\",\n  \"wonder\",\n  \"wood\",\n  \"wool\",\n  \"word\",\n  \"work\",\n  \"world\",\n  \"worry\",\n  \"worth\",\n  \"wrap\",\n  \"wreck\",\n  \"wrestle\",\n  \"wrist\",\n  \"write\",\n  \"wrong\",\n  \"yard\",\n  \"year\",\n  \"yellow\",\n  \"you\",\n  \"young\",\n  \"youth\",\n  \"zebra\",\n  \"zero\",\n  \"zone\",\n  \"zoo\"\n]\n","module.exports=[\n  \"あいこくしん\",\n  \"あいさつ\",\n  \"あいだ\",\n  \"あおぞら\",\n  \"あかちゃん\",\n  \"あきる\",\n  \"あけがた\",\n  \"あける\",\n  \"あこがれる\",\n  \"あさい\",\n  \"あさひ\",\n  \"あしあと\",\n  \"あじわう\",\n  \"あずかる\",\n  \"あずき\",\n  \"あそぶ\",\n  \"あたえる\",\n  \"あたためる\",\n  \"あたりまえ\",\n  \"あたる\",\n  \"あつい\",\n  \"あつかう\",\n  \"あっしゅく\",\n  \"あつまり\",\n  \"あつめる\",\n  \"あてな\",\n  \"あてはまる\",\n  \"あひる\",\n  \"あぶら\",\n  \"あぶる\",\n  \"あふれる\",\n  \"あまい\",\n  \"あまど\",\n  \"あまやかす\",\n  \"あまり\",\n  \"あみもの\",\n  \"あめりか\",\n  \"あやまる\",\n  \"あゆむ\",\n  \"あらいぐま\",\n  \"あらし\",\n  \"あらすじ\",\n  \"あらためる\",\n  \"あらゆる\",\n  \"あらわす\",\n  \"ありがとう\",\n  \"あわせる\",\n  \"あわてる\",\n  \"あんい\",\n  \"あんがい\",\n  \"あんこ\",\n  \"あんぜん\",\n  \"あんてい\",\n  \"あんない\",\n  \"あんまり\",\n  \"いいだす\",\n  \"いおん\",\n  \"いがい\",\n  \"いがく\",\n  \"いきおい\",\n  \"いきなり\",\n  \"いきもの\",\n  \"いきる\",\n  \"いくじ\",\n  \"いくぶん\",\n  \"いけばな\",\n  \"いけん\",\n  \"いこう\",\n  \"いこく\",\n  \"いこつ\",\n  \"いさましい\",\n  \"いさん\",\n  \"いしき\",\n  \"いじゅう\",\n  \"いじょう\",\n  \"いじわる\",\n  \"いずみ\",\n  \"いずれ\",\n  \"いせい\",\n  \"いせえび\",\n  \"いせかい\",\n  \"いせき\",\n  \"いぜん\",\n  \"いそうろう\",\n  \"いそがしい\",\n  \"いだい\",\n  \"いだく\",\n  \"いたずら\",\n  \"いたみ\",\n  \"いたりあ\",\n  \"いちおう\",\n  \"いちじ\",\n  \"いちど\",\n  \"いちば\",\n  \"いちぶ\",\n  \"いちりゅう\",\n  \"いつか\",\n  \"いっしゅん\",\n  \"いっせい\",\n  \"いっそう\",\n  \"いったん\",\n  \"いっち\",\n  \"いってい\",\n  \"いっぽう\",\n  \"いてざ\",\n  \"いてん\",\n  \"いどう\",\n  \"いとこ\",\n  \"いない\",\n  \"いなか\",\n  \"いねむり\",\n  \"いのち\",\n  \"いのる\",\n  \"いはつ\",\n  \"いばる\",\n  \"いはん\",\n  \"いびき\",\n  \"いひん\",\n  \"いふく\",\n  \"いへん\",\n  \"いほう\",\n  \"いみん\",\n  \"いもうと\",\n  \"いもたれ\",\n  \"いもり\",\n  \"いやがる\",\n  \"いやす\",\n  \"いよかん\",\n  \"いよく\",\n  \"いらい\",\n  \"いらすと\",\n  \"いりぐち\",\n  \"いりょう\",\n  \"いれい\",\n  \"いれもの\",\n  \"いれる\",\n  \"いろえんぴつ\",\n  \"いわい\",\n  \"いわう\",\n  \"いわかん\",\n  \"いわば\",\n  \"いわゆる\",\n  \"いんげんまめ\",\n  \"いんさつ\",\n  \"いんしょう\",\n  \"いんよう\",\n  \"うえき\",\n  \"うえる\",\n  \"うおざ\",\n  \"うがい\",\n  \"うかぶ\",\n  \"うかべる\",\n  \"うきわ\",\n  \"うくらいな\",\n  \"うくれれ\",\n  \"うけたまわる\",\n  \"うけつけ\",\n  \"うけとる\",\n  \"うけもつ\",\n  \"うける\",\n  \"うごかす\",\n  \"うごく\",\n  \"うこん\",\n  \"うさぎ\",\n  \"うしなう\",\n  \"うしろがみ\",\n  \"うすい\",\n  \"うすぎ\",\n  \"うすぐらい\",\n  \"うすめる\",\n  \"うせつ\",\n  \"うちあわせ\",\n  \"うちがわ\",\n  \"うちき\",\n  \"うちゅう\",\n  \"うっかり\",\n  \"うつくしい\",\n  \"うったえる\",\n  \"うつる\",\n  \"うどん\",\n  \"うなぎ\",\n  \"うなじ\",\n  \"うなずく\",\n  \"うなる\",\n  \"うねる\",\n  \"うのう\",\n  \"うぶげ\",\n  \"うぶごえ\",\n  \"うまれる\",\n  \"うめる\",\n  \"うもう\",\n  \"うやまう\",\n  \"うよく\",\n  \"うらがえす\",\n  \"うらぐち\",\n  \"うらない\",\n  \"うりあげ\",\n  \"うりきれ\",\n  \"うるさい\",\n  \"うれしい\",\n  \"うれゆき\",\n  \"うれる\",\n  \"うろこ\",\n  \"うわき\",\n  \"うわさ\",\n  \"うんこう\",\n  \"うんちん\",\n  \"うんてん\",\n  \"うんどう\",\n  \"えいえん\",\n  \"えいが\",\n  \"えいきょう\",\n  \"えいご\",\n  \"えいせい\",\n  \"えいぶん\",\n  \"えいよう\",\n  \"えいわ\",\n  \"えおり\",\n  \"えがお\",\n  \"えがく\",\n  \"えきたい\",\n  \"えくせる\",\n  \"えしゃく\",\n  \"えすて\",\n  \"えつらん\",\n  \"えのぐ\",\n  \"えほうまき\",\n  \"えほん\",\n  \"えまき\",\n  \"えもじ\",\n  \"えもの\",\n  \"えらい\",\n  \"えらぶ\",\n  \"えりあ\",\n  \"えんえん\",\n  \"えんかい\",\n  \"えんぎ\",\n  \"えんげき\",\n  \"えんしゅう\",\n  \"えんぜつ\",\n  \"えんそく\",\n  \"えんちょう\",\n  \"えんとつ\",\n  \"おいかける\",\n  \"おいこす\",\n  \"おいしい\",\n  \"おいつく\",\n  \"おうえん\",\n  \"おうさま\",\n  \"おうじ\",\n  \"おうせつ\",\n  \"おうたい\",\n  \"おうふく\",\n  \"おうべい\",\n  \"おうよう\",\n  \"おえる\",\n  \"おおい\",\n  \"おおう\",\n  \"おおどおり\",\n  \"おおや\",\n  \"おおよそ\",\n  \"おかえり\",\n  \"おかず\",\n  \"おがむ\",\n  \"おかわり\",\n  \"おぎなう\",\n  \"おきる\",\n  \"おくさま\",\n  \"おくじょう\",\n  \"おくりがな\",\n  \"おくる\",\n  \"おくれる\",\n  \"おこす\",\n  \"おこなう\",\n  \"おこる\",\n  \"おさえる\",\n  \"おさない\",\n  \"おさめる\",\n  \"おしいれ\",\n  \"おしえる\",\n  \"おじぎ\",\n  \"おじさん\",\n  \"おしゃれ\",\n  \"おそらく\",\n  \"おそわる\",\n  \"おたがい\",\n  \"おたく\",\n  \"おだやか\",\n  \"おちつく\",\n  \"おっと\",\n  \"おつり\",\n  \"おでかけ\",\n  \"おとしもの\",\n  \"おとなしい\",\n  \"おどり\",\n  \"おどろかす\",\n  \"おばさん\",\n  \"おまいり\",\n  \"おめでとう\",\n  \"おもいで\",\n  \"おもう\",\n  \"おもたい\",\n  \"おもちゃ\",\n  \"おやつ\",\n  \"おやゆび\",\n  \"およぼす\",\n  \"おらんだ\",\n  \"おろす\",\n  \"おんがく\",\n  \"おんけい\",\n  \"おんしゃ\",\n  \"おんせん\",\n  \"おんだん\",\n  \"おんちゅう\",\n  \"おんどけい\",\n  \"かあつ\",\n  \"かいが\",\n  \"がいき\",\n  \"がいけん\",\n  \"がいこう\",\n  \"かいさつ\",\n  \"かいしゃ\",\n  \"かいすいよく\",\n  \"かいぜん\",\n  \"かいぞうど\",\n  \"かいつう\",\n  \"かいてん\",\n  \"かいとう\",\n  \"かいふく\",\n  \"がいへき\",\n  \"かいほう\",\n  \"かいよう\",\n  \"がいらい\",\n  \"かいわ\",\n  \"かえる\",\n  \"かおり\",\n  \"かかえる\",\n  \"かがく\",\n  \"かがし\",\n  \"かがみ\",\n  \"かくご\",\n  \"かくとく\",\n  \"かざる\",\n  \"がぞう\",\n  \"かたい\",\n  \"かたち\",\n  \"がちょう\",\n  \"がっきゅう\",\n  \"がっこう\",\n  \"がっさん\",\n  \"がっしょう\",\n  \"かなざわし\",\n  \"かのう\",\n  \"がはく\",\n  \"かぶか\",\n  \"かほう\",\n  \"かほご\",\n  \"かまう\",\n  \"かまぼこ\",\n  \"かめれおん\",\n  \"かゆい\",\n  \"かようび\",\n  \"からい\",\n  \"かるい\",\n  \"かろう\",\n  \"かわく\",\n  \"かわら\",\n  \"がんか\",\n  \"かんけい\",\n  \"かんこう\",\n  \"かんしゃ\",\n  \"かんそう\",\n  \"かんたん\",\n  \"かんち\",\n  \"がんばる\",\n  \"きあい\",\n  \"きあつ\",\n  \"きいろ\",\n  \"ぎいん\",\n  \"きうい\",\n  \"きうん\",\n  \"きえる\",\n  \"きおう\",\n  \"きおく\",\n  \"きおち\",\n  \"きおん\",\n  \"きかい\",\n  \"きかく\",\n  \"きかんしゃ\",\n  \"ききて\",\n  \"きくばり\",\n  \"きくらげ\",\n  \"きけんせい\",\n  \"きこう\",\n  \"きこえる\",\n  \"きこく\",\n  \"きさい\",\n  \"きさく\",\n  \"きさま\",\n  \"きさらぎ\",\n  \"ぎじかがく\",\n  \"ぎしき\",\n  \"ぎじたいけん\",\n  \"ぎじにってい\",\n  \"ぎじゅつしゃ\",\n  \"きすう\",\n  \"きせい\",\n  \"きせき\",\n  \"きせつ\",\n  \"きそう\",\n  \"きぞく\",\n  \"きぞん\",\n  \"きたえる\",\n  \"きちょう\",\n  \"きつえん\",\n  \"ぎっちり\",\n  \"きつつき\",\n  \"きつね\",\n  \"きてい\",\n  \"きどう\",\n  \"きどく\",\n  \"きない\",\n  \"きなが\",\n  \"きなこ\",\n  \"きぬごし\",\n  \"きねん\",\n  \"きのう\",\n  \"きのした\",\n  \"きはく\",\n  \"きびしい\",\n  \"きひん\",\n  \"きふく\",\n  \"きぶん\",\n  \"きぼう\",\n  \"きほん\",\n  \"きまる\",\n  \"きみつ\",\n  \"きむずかしい\",\n  \"きめる\",\n  \"きもだめし\",\n  \"きもち\",\n  \"きもの\",\n  \"きゃく\",\n  \"きやく\",\n  \"ぎゅうにく\",\n  \"きよう\",\n  \"きょうりゅう\",\n  \"きらい\",\n  \"きらく\",\n  \"きりん\",\n  \"きれい\",\n  \"きれつ\",\n  \"きろく\",\n  \"ぎろん\",\n  \"きわめる\",\n  \"ぎんいろ\",\n  \"きんかくじ\",\n  \"きんじょ\",\n  \"きんようび\",\n  \"ぐあい\",\n  \"くいず\",\n  \"くうかん\",\n  \"くうき\",\n  \"くうぐん\",\n  \"くうこう\",\n  \"ぐうせい\",\n  \"くうそう\",\n  \"ぐうたら\",\n  \"くうふく\",\n  \"くうぼ\",\n  \"くかん\",\n  \"くきょう\",\n  \"くげん\",\n  \"ぐこう\",\n  \"くさい\",\n  \"くさき\",\n  \"くさばな\",\n  \"くさる\",\n  \"くしゃみ\",\n  \"くしょう\",\n  \"くすのき\",\n  \"くすりゆび\",\n  \"くせげ\",\n  \"くせん\",\n  \"ぐたいてき\",\n  \"くださる\",\n  \"くたびれる\",\n  \"くちこみ\",\n  \"くちさき\",\n  \"くつした\",\n  \"ぐっすり\",\n  \"くつろぐ\",\n  \"くとうてん\",\n  \"くどく\",\n  \"くなん\",\n  \"くねくね\",\n  \"くのう\",\n  \"くふう\",\n  \"くみあわせ\",\n  \"くみたてる\",\n  \"くめる\",\n  \"くやくしょ\",\n  \"くらす\",\n  \"くらべる\",\n  \"くるま\",\n  \"くれる\",\n  \"くろう\",\n  \"くわしい\",\n  \"ぐんかん\",\n  \"ぐんしょく\",\n  \"ぐんたい\",\n  \"ぐんて\",\n  \"けあな\",\n  \"けいかく\",\n  \"けいけん\",\n  \"けいこ\",\n  \"けいさつ\",\n  \"げいじゅつ\",\n  \"けいたい\",\n  \"げいのうじん\",\n  \"けいれき\",\n  \"けいろ\",\n  \"けおとす\",\n  \"けおりもの\",\n  \"げきか\",\n  \"げきげん\",\n  \"げきだん\",\n  \"げきちん\",\n  \"げきとつ\",\n  \"げきは\",\n  \"げきやく\",\n  \"げこう\",\n  \"げこくじょう\",\n  \"げざい\",\n  \"けさき\",\n  \"げざん\",\n  \"けしき\",\n  \"けしごむ\",\n  \"けしょう\",\n  \"げすと\",\n  \"けたば\",\n  \"けちゃっぷ\",\n  \"けちらす\",\n  \"けつあつ\",\n  \"けつい\",\n  \"けつえき\",\n  \"けっこん\",\n  \"けつじょ\",\n  \"けっせき\",\n  \"けってい\",\n  \"けつまつ\",\n  \"げつようび\",\n  \"げつれい\",\n  \"けつろん\",\n  \"げどく\",\n  \"けとばす\",\n  \"けとる\",\n  \"けなげ\",\n  \"けなす\",\n  \"けなみ\",\n  \"けぬき\",\n  \"げねつ\",\n  \"けねん\",\n  \"けはい\",\n  \"げひん\",\n  \"けぶかい\",\n  \"げぼく\",\n  \"けまり\",\n  \"けみかる\",\n  \"けむし\",\n  \"けむり\",\n  \"けもの\",\n  \"けらい\",\n  \"けろけろ\",\n  \"けわしい\",\n  \"けんい\",\n  \"けんえつ\",\n  \"けんお\",\n  \"けんか\",\n  \"げんき\",\n  \"けんげん\",\n  \"けんこう\",\n  \"けんさく\",\n  \"けんしゅう\",\n  \"けんすう\",\n  \"げんそう\",\n  \"けんちく\",\n  \"けんてい\",\n  \"けんとう\",\n  \"けんない\",\n  \"けんにん\",\n  \"げんぶつ\",\n  \"けんま\",\n  \"けんみん\",\n  \"けんめい\",\n  \"けんらん\",\n  \"けんり\",\n  \"こあくま\",\n  \"こいぬ\",\n  \"こいびと\",\n  \"ごうい\",\n  \"こうえん\",\n  \"こうおん\",\n  \"こうかん\",\n  \"ごうきゅう\",\n  \"ごうけい\",\n  \"こうこう\",\n  \"こうさい\",\n  \"こうじ\",\n  \"こうすい\",\n  \"ごうせい\",\n  \"こうそく\",\n  \"こうたい\",\n  \"こうちゃ\",\n  \"こうつう\",\n  \"こうてい\",\n  \"こうどう\",\n  \"こうない\",\n  \"こうはい\",\n  \"ごうほう\",\n  \"ごうまん\",\n  \"こうもく\",\n  \"こうりつ\",\n  \"こえる\",\n  \"こおり\",\n  \"ごかい\",\n  \"ごがつ\",\n  \"ごかん\",\n  \"こくご\",\n  \"こくさい\",\n  \"こくとう\",\n  \"こくない\",\n  \"こくはく\",\n  \"こぐま\",\n  \"こけい\",\n  \"こける\",\n  \"ここのか\",\n  \"こころ\",\n  \"こさめ\",\n  \"こしつ\",\n  \"こすう\",\n  \"こせい\",\n  \"こせき\",\n  \"こぜん\",\n  \"こそだて\",\n  \"こたい\",\n  \"こたえる\",\n  \"こたつ\",\n  \"こちょう\",\n  \"こっか\",\n  \"こつこつ\",\n  \"こつばん\",\n  \"こつぶ\",\n  \"こてい\",\n  \"こてん\",\n  \"ことがら\",\n  \"ことし\",\n  \"ことば\",\n  \"ことり\",\n  \"こなごな\",\n  \"こねこね\",\n  \"このまま\",\n  \"このみ\",\n  \"このよ\",\n  \"ごはん\",\n  \"こひつじ\",\n  \"こふう\",\n  \"こふん\",\n  \"こぼれる\",\n  \"ごまあぶら\",\n  \"こまかい\",\n  \"ごますり\",\n  \"こまつな\",\n  \"こまる\",\n  \"こむぎこ\",\n  \"こもじ\",\n  \"こもち\",\n  \"こもの\",\n  \"こもん\",\n  \"こやく\",\n  \"こやま\",\n  \"こゆう\",\n  \"こゆび\",\n  \"こよい\",\n  \"こよう\",\n  \"こりる\",\n  \"これくしょん\",\n  \"ころっけ\",\n  \"こわもて\",\n  \"こわれる\",\n  \"こんいん\",\n  \"こんかい\",\n  \"こんき\",\n  \"こんしゅう\",\n  \"こんすい\",\n  \"こんだて\",\n  \"こんとん\",\n  \"こんなん\",\n  \"こんびに\",\n  \"こんぽん\",\n  \"こんまけ\",\n  \"こんや\",\n  \"こんれい\",\n  \"こんわく\",\n  \"ざいえき\",\n  \"さいかい\",\n  \"さいきん\",\n  \"ざいげん\",\n  \"ざいこ\",\n  \"さいしょ\",\n  \"さいせい\",\n  \"ざいたく\",\n  \"ざいちゅう\",\n  \"さいてき\",\n  \"ざいりょう\",\n  \"さうな\",\n  \"さかいし\",\n  \"さがす\",\n  \"さかな\",\n  \"さかみち\",\n  \"さがる\",\n  \"さぎょう\",\n  \"さくし\",\n  \"さくひん\",\n  \"さくら\",\n  \"さこく\",\n  \"さこつ\",\n  \"さずかる\",\n  \"ざせき\",\n  \"さたん\",\n  \"さつえい\",\n  \"ざつおん\",\n  \"ざっか\",\n  \"ざつがく\",\n  \"さっきょく\",\n  \"ざっし\",\n  \"さつじん\",\n  \"ざっそう\",\n  \"さつたば\",\n  \"さつまいも\",\n  \"さてい\",\n  \"さといも\",\n  \"さとう\",\n  \"さとおや\",\n  \"さとし\",\n  \"さとる\",\n  \"さのう\",\n  \"さばく\",\n  \"さびしい\",\n  \"さべつ\",\n  \"さほう\",\n  \"さほど\",\n  \"さます\",\n  \"さみしい\",\n  \"さみだれ\",\n  \"さむけ\",\n  \"さめる\",\n  \"さやえんどう\",\n  \"さゆう\",\n  \"さよう\",\n  \"さよく\",\n  \"さらだ\",\n  \"ざるそば\",\n  \"さわやか\",\n  \"さわる\",\n  \"さんいん\",\n  \"さんか\",\n  \"さんきゃく\",\n  \"さんこう\",\n  \"さんさい\",\n  \"ざんしょ\",\n  \"さんすう\",\n  \"さんせい\",\n  \"さんそ\",\n  \"さんち\",\n  \"さんま\",\n  \"さんみ\",\n  \"さんらん\",\n  \"しあい\",\n  \"しあげ\",\n  \"しあさって\",\n  \"しあわせ\",\n  \"しいく\",\n  \"しいん\",\n  \"しうち\",\n  \"しえい\",\n  \"しおけ\",\n  \"しかい\",\n  \"しかく\",\n  \"じかん\",\n  \"しごと\",\n  \"しすう\",\n  \"じだい\",\n  \"したうけ\",\n  \"したぎ\",\n  \"したて\",\n  \"したみ\",\n  \"しちょう\",\n  \"しちりん\",\n  \"しっかり\",\n  \"しつじ\",\n  \"しつもん\",\n  \"してい\",\n  \"してき\",\n  \"してつ\",\n  \"じてん\",\n  \"じどう\",\n  \"しなぎれ\",\n  \"しなもの\",\n  \"しなん\",\n  \"しねま\",\n  \"しねん\",\n  \"しのぐ\",\n  \"しのぶ\",\n  \"しはい\",\n  \"しばかり\",\n  \"しはつ\",\n  \"しはらい\",\n  \"しはん\",\n  \"しひょう\",\n  \"しふく\",\n  \"じぶん\",\n  \"しへい\",\n  \"しほう\",\n  \"しほん\",\n  \"しまう\",\n  \"しまる\",\n  \"しみん\",\n  \"しむける\",\n  \"じむしょ\",\n  \"しめい\",\n  \"しめる\",\n  \"しもん\",\n  \"しゃいん\",\n  \"しゃうん\",\n  \"しゃおん\",\n  \"じゃがいも\",\n  \"しやくしょ\",\n  \"しゃくほう\",\n  \"しゃけん\",\n  \"しゃこ\",\n  \"しゃざい\",\n  \"しゃしん\",\n  \"しゃせん\",\n  \"しゃそう\",\n  \"しゃたい\",\n  \"しゃちょう\",\n  \"しゃっきん\",\n  \"じゃま\",\n  \"しゃりん\",\n  \"しゃれい\",\n  \"じゆう\",\n  \"じゅうしょ\",\n  \"しゅくはく\",\n  \"じゅしん\",\n  \"しゅっせき\",\n  \"しゅみ\",\n  \"しゅらば\",\n  \"じゅんばん\",\n  \"しょうかい\",\n  \"しょくたく\",\n  \"しょっけん\",\n  \"しょどう\",\n  \"しょもつ\",\n  \"しらせる\",\n  \"しらべる\",\n  \"しんか\",\n  \"しんこう\",\n  \"じんじゃ\",\n  \"しんせいじ\",\n  \"しんちく\",\n  \"しんりん\",\n  \"すあげ\",\n  \"すあし\",\n  \"すあな\",\n  \"ずあん\",\n  \"すいえい\",\n  \"すいか\",\n  \"すいとう\",\n  \"ずいぶん\",\n  \"すいようび\",\n  \"すうがく\",\n  \"すうじつ\",\n  \"すうせん\",\n  \"すおどり\",\n  \"すきま\",\n  \"すくう\",\n  \"すくない\",\n  \"すける\",\n  \"すごい\",\n  \"すこし\",\n  \"ずさん\",\n  \"すずしい\",\n  \"すすむ\",\n  \"すすめる\",\n  \"すっかり\",\n  \"ずっしり\",\n  \"ずっと\",\n  \"すてき\",\n  \"すてる\",\n  \"すねる\",\n  \"すのこ\",\n  \"すはだ\",\n  \"すばらしい\",\n  \"ずひょう\",\n  \"ずぶぬれ\",\n  \"すぶり\",\n  \"すふれ\",\n  \"すべて\",\n  \"すべる\",\n  \"ずほう\",\n  \"すぼん\",\n  \"すまい\",\n  \"すめし\",\n  \"すもう\",\n  \"すやき\",\n  \"すらすら\",\n  \"するめ\",\n  \"すれちがう\",\n  \"すろっと\",\n  \"すわる\",\n  \"すんぜん\",\n  \"すんぽう\",\n  \"せあぶら\",\n  \"せいかつ\",\n  \"せいげん\",\n  \"せいじ\",\n  \"せいよう\",\n  \"せおう\",\n  \"せかいかん\",\n  \"せきにん\",\n  \"せきむ\",\n  \"せきゆ\",\n  \"せきらんうん\",\n  \"せけん\",\n  \"せこう\",\n  \"せすじ\",\n  \"せたい\",\n  \"せたけ\",\n  \"せっかく\",\n  \"せっきゃく\",\n  \"ぜっく\",\n  \"せっけん\",\n  \"せっこつ\",\n  \"せっさたくま\",\n  \"せつぞく\",\n  \"せつだん\",\n  \"せつでん\",\n  \"せっぱん\",\n  \"せつび\",\n  \"せつぶん\",\n  \"せつめい\",\n  \"せつりつ\",\n  \"せなか\",\n  \"せのび\",\n  \"せはば\",\n  \"せびろ\",\n  \"せぼね\",\n  \"せまい\",\n  \"せまる\",\n  \"せめる\",\n  \"せもたれ\",\n  \"せりふ\",\n  \"ぜんあく\",\n  \"せんい\",\n  \"せんえい\",\n  \"せんか\",\n  \"せんきょ\",\n  \"せんく\",\n  \"せんげん\",\n  \"ぜんご\",\n  \"せんさい\",\n  \"せんしゅ\",\n  \"せんすい\",\n  \"せんせい\",\n  \"せんぞ\",\n  \"せんたく\",\n  \"せんちょう\",\n  \"せんてい\",\n  \"せんとう\",\n  \"せんぬき\",\n  \"せんねん\",\n  \"せんぱい\",\n  \"ぜんぶ\",\n  \"ぜんぽう\",\n  \"せんむ\",\n  \"せんめんじょ\",\n  \"せんもん\",\n  \"せんやく\",\n  \"せんゆう\",\n  \"せんよう\",\n  \"ぜんら\",\n  \"ぜんりゃく\",\n  \"せんれい\",\n  \"せんろ\",\n  \"そあく\",\n  \"そいとげる\",\n  \"そいね\",\n  \"そうがんきょう\",\n  \"そうき\",\n  \"そうご\",\n  \"そうしん\",\n  \"そうだん\",\n  \"そうなん\",\n  \"そうび\",\n  \"そうめん\",\n  \"そうり\",\n  \"そえもの\",\n  \"そえん\",\n  \"そがい\",\n  \"そげき\",\n  \"そこう\",\n  \"そこそこ\",\n  \"そざい\",\n  \"そしな\",\n  \"そせい\",\n  \"そせん\",\n  \"そそぐ\",\n  \"そだてる\",\n  \"そつう\",\n  \"そつえん\",\n  \"そっかん\",\n  \"そつぎょう\",\n  \"そっけつ\",\n  \"そっこう\",\n  \"そっせん\",\n  \"そっと\",\n  \"そとがわ\",\n  \"そとづら\",\n  \"そなえる\",\n  \"そなた\",\n  \"そふぼ\",\n  \"そぼく\",\n  \"そぼろ\",\n  \"そまつ\",\n  \"そまる\",\n  \"そむく\",\n  \"そむりえ\",\n  \"そめる\",\n  \"そもそも\",\n  \"そよかぜ\",\n  \"そらまめ\",\n  \"そろう\",\n  \"そんかい\",\n  \"そんけい\",\n  \"そんざい\",\n  \"そんしつ\",\n  \"そんぞく\",\n  \"そんちょう\",\n  \"ぞんび\",\n  \"ぞんぶん\",\n  \"そんみん\",\n  \"たあい\",\n  \"たいいん\",\n  \"たいうん\",\n  \"たいえき\",\n  \"たいおう\",\n  \"だいがく\",\n  \"たいき\",\n  \"たいぐう\",\n  \"たいけん\",\n  \"たいこ\",\n  \"たいざい\",\n  \"だいじょうぶ\",\n  \"だいすき\",\n  \"たいせつ\",\n  \"たいそう\",\n  \"だいたい\",\n  \"たいちょう\",\n  \"たいてい\",\n  \"だいどころ\",\n  \"たいない\",\n  \"たいねつ\",\n  \"たいのう\",\n  \"たいはん\",\n  \"だいひょう\",\n  \"たいふう\",\n  \"たいへん\",\n  \"たいほ\",\n  \"たいまつばな\",\n  \"たいみんぐ\",\n  \"たいむ\",\n  \"たいめん\",\n  \"たいやき\",\n  \"たいよう\",\n  \"たいら\",\n  \"たいりょく\",\n  \"たいる\",\n  \"たいわん\",\n  \"たうえ\",\n  \"たえる\",\n  \"たおす\",\n  \"たおる\",\n  \"たおれる\",\n  \"たかい\",\n  \"たかね\",\n  \"たきび\",\n  \"たくさん\",\n  \"たこく\",\n  \"たこやき\",\n  \"たさい\",\n  \"たしざん\",\n  \"だじゃれ\",\n  \"たすける\",\n  \"たずさわる\",\n  \"たそがれ\",\n  \"たたかう\",\n  \"たたく\",\n  \"ただしい\",\n  \"たたみ\",\n  \"たちばな\",\n  \"だっかい\",\n  \"だっきゃく\",\n  \"だっこ\",\n  \"だっしゅつ\",\n  \"だったい\",\n  \"たてる\",\n  \"たとえる\",\n  \"たなばた\",\n  \"たにん\",\n  \"たぬき\",\n  \"たのしみ\",\n  \"たはつ\",\n  \"たぶん\",\n  \"たべる\",\n  \"たぼう\",\n  \"たまご\",\n  \"たまる\",\n  \"だむる\",\n  \"ためいき\",\n  \"ためす\",\n  \"ためる\",\n  \"たもつ\",\n  \"たやすい\",\n  \"たよる\",\n  \"たらす\",\n  \"たりきほんがん\",\n  \"たりょう\",\n  \"たりる\",\n  \"たると\",\n  \"たれる\",\n  \"たれんと\",\n  \"たろっと\",\n  \"たわむれる\",\n  \"だんあつ\",\n  \"たんい\",\n  \"たんおん\",\n  \"たんか\",\n  \"たんき\",\n  \"たんけん\",\n  \"たんご\",\n  \"たんさん\",\n  \"たんじょうび\",\n  \"だんせい\",\n  \"たんそく\",\n  \"たんたい\",\n  \"だんち\",\n  \"たんてい\",\n  \"たんとう\",\n  \"だんな\",\n  \"たんにん\",\n  \"だんねつ\",\n  \"たんのう\",\n  \"たんぴん\",\n  \"だんぼう\",\n  \"たんまつ\",\n  \"たんめい\",\n  \"だんれつ\",\n  \"だんろ\",\n  \"だんわ\",\n  \"ちあい\",\n  \"ちあん\",\n  \"ちいき\",\n  \"ちいさい\",\n  \"ちえん\",\n  \"ちかい\",\n  \"ちから\",\n  \"ちきゅう\",\n  \"ちきん\",\n  \"ちけいず\",\n  \"ちけん\",\n  \"ちこく\",\n  \"ちさい\",\n  \"ちしき\",\n  \"ちしりょう\",\n  \"ちせい\",\n  \"ちそう\",\n  \"ちたい\",\n  \"ちたん\",\n  \"ちちおや\",\n  \"ちつじょ\",\n  \"ちてき\",\n  \"ちてん\",\n  \"ちぬき\",\n  \"ちぬり\",\n  \"ちのう\",\n  \"ちひょう\",\n  \"ちへいせん\",\n  \"ちほう\",\n  \"ちまた\",\n  \"ちみつ\",\n  \"ちみどろ\",\n  \"ちめいど\",\n  \"ちゃんこなべ\",\n  \"ちゅうい\",\n  \"ちゆりょく\",\n  \"ちょうし\",\n  \"ちょさくけん\",\n  \"ちらし\",\n  \"ちらみ\",\n  \"ちりがみ\",\n  \"ちりょう\",\n  \"ちるど\",\n  \"ちわわ\",\n  \"ちんたい\",\n  \"ちんもく\",\n  \"ついか\",\n  \"ついたち\",\n  \"つうか\",\n  \"つうじょう\",\n  \"つうはん\",\n  \"つうわ\",\n  \"つかう\",\n  \"つかれる\",\n  \"つくね\",\n  \"つくる\",\n  \"つけね\",\n  \"つける\",\n  \"つごう\",\n  \"つたえる\",\n  \"つづく\",\n  \"つつじ\",\n  \"つつむ\",\n  \"つとめる\",\n  \"つながる\",\n  \"つなみ\",\n  \"つねづね\",\n  \"つのる\",\n  \"つぶす\",\n  \"つまらない\",\n  \"つまる\",\n  \"つみき\",\n  \"つめたい\",\n  \"つもり\",\n  \"つもる\",\n  \"つよい\",\n  \"つるぼ\",\n  \"つるみく\",\n  \"つわもの\",\n  \"つわり\",\n  \"てあし\",\n  \"てあて\",\n  \"てあみ\",\n  \"ていおん\",\n  \"ていか\",\n  \"ていき\",\n  \"ていけい\",\n  \"ていこく\",\n  \"ていさつ\",\n  \"ていし\",\n  \"ていせい\",\n  \"ていたい\",\n  \"ていど\",\n  \"ていねい\",\n  \"ていひょう\",\n  \"ていへん\",\n  \"ていぼう\",\n  \"てうち\",\n  \"ておくれ\",\n  \"てきとう\",\n  \"てくび\",\n  \"でこぼこ\",\n  \"てさぎょう\",\n  \"てさげ\",\n  \"てすり\",\n  \"てそう\",\n  \"てちがい\",\n  \"てちょう\",\n  \"てつがく\",\n  \"てつづき\",\n  \"でっぱ\",\n  \"てつぼう\",\n  \"てつや\",\n  \"でぬかえ\",\n  \"てぬき\",\n  \"てぬぐい\",\n  \"てのひら\",\n  \"てはい\",\n  \"てぶくろ\",\n  \"てふだ\",\n  \"てほどき\",\n  \"てほん\",\n  \"てまえ\",\n  \"てまきずし\",\n  \"てみじか\",\n  \"てみやげ\",\n  \"てらす\",\n  \"てれび\",\n  \"てわけ\",\n  \"てわたし\",\n  \"でんあつ\",\n  \"てんいん\",\n  \"てんかい\",\n  \"てんき\",\n  \"てんぐ\",\n  \"てんけん\",\n  \"てんごく\",\n  \"てんさい\",\n  \"てんし\",\n  \"てんすう\",\n  \"でんち\",\n  \"てんてき\",\n  \"てんとう\",\n  \"てんない\",\n  \"てんぷら\",\n  \"てんぼうだい\",\n  \"てんめつ\",\n  \"てんらんかい\",\n  \"でんりょく\",\n  \"でんわ\",\n  \"どあい\",\n  \"といれ\",\n  \"どうかん\",\n  \"とうきゅう\",\n  \"どうぐ\",\n  \"とうし\",\n  \"とうむぎ\",\n  \"とおい\",\n  \"とおか\",\n  \"とおく\",\n  \"とおす\",\n  \"とおる\",\n  \"とかい\",\n  \"とかす\",\n  \"ときおり\",\n  \"ときどき\",\n  \"とくい\",\n  \"とくしゅう\",\n  \"とくてん\",\n  \"とくに\",\n  \"とくべつ\",\n  \"とけい\",\n  \"とける\",\n  \"とこや\",\n  \"とさか\",\n  \"としょかん\",\n  \"とそう\",\n  \"とたん\",\n  \"とちゅう\",\n  \"とっきゅう\",\n  \"とっくん\",\n  \"とつぜん\",\n  \"とつにゅう\",\n  \"とどける\",\n  \"ととのえる\",\n  \"とない\",\n  \"となえる\",\n  \"となり\",\n  \"とのさま\",\n  \"とばす\",\n  \"どぶがわ\",\n  \"とほう\",\n  \"とまる\",\n  \"とめる\",\n  \"ともだち\",\n  \"ともる\",\n  \"どようび\",\n  \"とらえる\",\n  \"とんかつ\",\n  \"どんぶり\",\n  \"ないかく\",\n  \"ないこう\",\n  \"ないしょ\",\n  \"ないす\",\n  \"ないせん\",\n  \"ないそう\",\n  \"なおす\",\n  \"ながい\",\n  \"なくす\",\n  \"なげる\",\n  \"なこうど\",\n  \"なさけ\",\n  \"なたでここ\",\n  \"なっとう\",\n  \"なつやすみ\",\n  \"ななおし\",\n  \"なにごと\",\n  \"なにもの\",\n  \"なにわ\",\n  \"なのか\",\n  \"なふだ\",\n  \"なまいき\",\n  \"なまえ\",\n  \"なまみ\",\n  \"なみだ\",\n  \"なめらか\",\n  \"なめる\",\n  \"なやむ\",\n  \"ならう\",\n  \"ならび\",\n  \"ならぶ\",\n  \"なれる\",\n  \"なわとび\",\n  \"なわばり\",\n  \"にあう\",\n  \"にいがた\",\n  \"にうけ\",\n  \"におい\",\n  \"にかい\",\n  \"にがて\",\n  \"にきび\",\n  \"にくしみ\",\n  \"にくまん\",\n  \"にげる\",\n  \"にさんかたんそ\",\n  \"にしき\",\n  \"にせもの\",\n  \"にちじょう\",\n  \"にちようび\",\n  \"にっか\",\n  \"にっき\",\n  \"にっけい\",\n  \"にっこう\",\n  \"にっさん\",\n  \"にっしょく\",\n  \"にっすう\",\n  \"にっせき\",\n  \"にってい\",\n  \"になう\",\n  \"にほん\",\n  \"にまめ\",\n  \"にもつ\",\n  \"にやり\",\n  \"にゅういん\",\n  \"にりんしゃ\",\n  \"にわとり\",\n  \"にんい\",\n  \"にんか\",\n  \"にんき\",\n  \"にんげん\",\n  \"にんしき\",\n  \"にんずう\",\n  \"にんそう\",\n  \"にんたい\",\n  \"にんち\",\n  \"にんてい\",\n  \"にんにく\",\n  \"にんぷ\",\n  \"にんまり\",\n  \"にんむ\",\n  \"にんめい\",\n  \"にんよう\",\n  \"ぬいくぎ\",\n  \"ぬかす\",\n  \"ぬぐいとる\",\n  \"ぬぐう\",\n  \"ぬくもり\",\n  \"ぬすむ\",\n  \"ぬまえび\",\n  \"ぬめり\",\n  \"ぬらす\",\n  \"ぬんちゃく\",\n  \"ねあげ\",\n  \"ねいき\",\n  \"ねいる\",\n  \"ねいろ\",\n  \"ねぐせ\",\n  \"ねくたい\",\n  \"ねくら\",\n  \"ねこぜ\",\n  \"ねこむ\",\n  \"ねさげ\",\n  \"ねすごす\",\n  \"ねそべる\",\n  \"ねだん\",\n  \"ねつい\",\n  \"ねっしん\",\n  \"ねつぞう\",\n  \"ねったいぎょ\",\n  \"ねぶそく\",\n  \"ねふだ\",\n  \"ねぼう\",\n  \"ねほりはほり\",\n  \"ねまき\",\n  \"ねまわし\",\n  \"ねみみ\",\n  \"ねむい\",\n  \"ねむたい\",\n  \"ねもと\",\n  \"ねらう\",\n  \"ねわざ\",\n  \"ねんいり\",\n  \"ねんおし\",\n  \"ねんかん\",\n  \"ねんきん\",\n  \"ねんぐ\",\n  \"ねんざ\",\n  \"ねんし\",\n  \"ねんちゃく\",\n  \"ねんど\",\n  \"ねんぴ\",\n  \"ねんぶつ\",\n  \"ねんまつ\",\n  \"ねんりょう\",\n  \"ねんれい\",\n  \"のいず\",\n  \"のおづま\",\n  \"のがす\",\n  \"のきなみ\",\n  \"のこぎり\",\n  \"のこす\",\n  \"のこる\",\n  \"のせる\",\n  \"のぞく\",\n  \"のぞむ\",\n  \"のたまう\",\n  \"のちほど\",\n  \"のっく\",\n  \"のばす\",\n  \"のはら\",\n  \"のべる\",\n  \"のぼる\",\n  \"のみもの\",\n  \"のやま\",\n  \"のらいぬ\",\n  \"のらねこ\",\n  \"のりもの\",\n  \"のりゆき\",\n  \"のれん\",\n  \"のんき\",\n  \"ばあい\",\n  \"はあく\",\n  \"ばあさん\",\n  \"ばいか\",\n  \"ばいく\",\n  \"はいけん\",\n  \"はいご\",\n  \"はいしん\",\n  \"はいすい\",\n  \"はいせん\",\n  \"はいそう\",\n  \"はいち\",\n  \"ばいばい\",\n  \"はいれつ\",\n  \"はえる\",\n  \"はおる\",\n  \"はかい\",\n  \"ばかり\",\n  \"はかる\",\n  \"はくしゅ\",\n  \"はけん\",\n  \"はこぶ\",\n  \"はさみ\",\n  \"はさん\",\n  \"はしご\",\n  \"ばしょ\",\n  \"はしる\",\n  \"はせる\",\n  \"ぱそこん\",\n  \"はそん\",\n  \"はたん\",\n  \"はちみつ\",\n  \"はつおん\",\n  \"はっかく\",\n  \"はづき\",\n  \"はっきり\",\n  \"はっくつ\",\n  \"はっけん\",\n  \"はっこう\",\n  \"はっさん\",\n  \"はっしん\",\n  \"はったつ\",\n  \"はっちゅう\",\n  \"はってん\",\n  \"はっぴょう\",\n  \"はっぽう\",\n  \"はなす\",\n  \"はなび\",\n  \"はにかむ\",\n  \"はぶらし\",\n  \"はみがき\",\n  \"はむかう\",\n  \"はめつ\",\n  \"はやい\",\n  \"はやし\",\n  \"はらう\",\n  \"はろうぃん\",\n  \"はわい\",\n  \"はんい\",\n  \"はんえい\",\n  \"はんおん\",\n  \"はんかく\",\n  \"はんきょう\",\n  \"ばんぐみ\",\n  \"はんこ\",\n  \"はんしゃ\",\n  \"はんすう\",\n  \"はんだん\",\n  \"ぱんち\",\n  \"ぱんつ\",\n  \"はんてい\",\n  \"はんとし\",\n  \"はんのう\",\n  \"はんぱ\",\n  \"はんぶん\",\n  \"はんぺん\",\n  \"はんぼうき\",\n  \"はんめい\",\n  \"はんらん\",\n  \"はんろん\",\n  \"ひいき\",\n  \"ひうん\",\n  \"ひえる\",\n  \"ひかく\",\n  \"ひかり\",\n  \"ひかる\",\n  \"ひかん\",\n  \"ひくい\",\n  \"ひけつ\",\n  \"ひこうき\",\n  \"ひこく\",\n  \"ひさい\",\n  \"ひさしぶり\",\n  \"ひさん\",\n  \"びじゅつかん\",\n  \"ひしょ\",\n  \"ひそか\",\n  \"ひそむ\",\n  \"ひたむき\",\n  \"ひだり\",\n  \"ひたる\",\n  \"ひつぎ\",\n  \"ひっこし\",\n  \"ひっし\",\n  \"ひつじゅひん\",\n  \"ひっす\",\n  \"ひつぜん\",\n  \"ぴったり\",\n  \"ぴっちり\",\n  \"ひつよう\",\n  \"ひてい\",\n  \"ひとごみ\",\n  \"ひなまつり\",\n  \"ひなん\",\n  \"ひねる\",\n  \"ひはん\",\n  \"ひびく\",\n  \"ひひょう\",\n  \"ひほう\",\n  \"ひまわり\",\n  \"ひまん\",\n  \"ひみつ\",\n  \"ひめい\",\n  \"ひめじし\",\n  \"ひやけ\",\n  \"ひやす\",\n  \"ひよう\",\n  \"びょうき\",\n  \"ひらがな\",\n  \"ひらく\",\n  \"ひりつ\",\n  \"ひりょう\",\n  \"ひるま\",\n  \"ひるやすみ\",\n  \"ひれい\",\n  \"ひろい\",\n  \"ひろう\",\n  \"ひろき\",\n  \"ひろゆき\",\n  \"ひんかく\",\n  \"ひんけつ\",\n  \"ひんこん\",\n  \"ひんしゅ\",\n  \"ひんそう\",\n  \"ぴんち\",\n  \"ひんぱん\",\n  \"びんぼう\",\n  \"ふあん\",\n  \"ふいうち\",\n  \"ふうけい\",\n  \"ふうせん\",\n  \"ぷうたろう\",\n  \"ふうとう\",\n  \"ふうふ\",\n  \"ふえる\",\n  \"ふおん\",\n  \"ふかい\",\n  \"ふきん\",\n  \"ふくざつ\",\n  \"ふくぶくろ\",\n  \"ふこう\",\n  \"ふさい\",\n  \"ふしぎ\",\n  \"ふじみ\",\n  \"ふすま\",\n  \"ふせい\",\n  \"ふせぐ\",\n  \"ふそく\",\n  \"ぶたにく\",\n  \"ふたん\",\n  \"ふちょう\",\n  \"ふつう\",\n  \"ふつか\",\n  \"ふっかつ\",\n  \"ふっき\",\n  \"ふっこく\",\n  \"ぶどう\",\n  \"ふとる\",\n  \"ふとん\",\n  \"ふのう\",\n  \"ふはい\",\n  \"ふひょう\",\n  \"ふへん\",\n  \"ふまん\",\n  \"ふみん\",\n  \"ふめつ\",\n  \"ふめん\",\n  \"ふよう\",\n  \"ふりこ\",\n  \"ふりる\",\n  \"ふるい\",\n  \"ふんいき\",\n  \"ぶんがく\",\n  \"ぶんぐ\",\n  \"ふんしつ\",\n  \"ぶんせき\",\n  \"ふんそう\",\n  \"ぶんぽう\",\n  \"へいあん\",\n  \"へいおん\",\n  \"へいがい\",\n  \"へいき\",\n  \"へいげん\",\n  \"へいこう\",\n  \"へいさ\",\n  \"へいしゃ\",\n  \"へいせつ\",\n  \"へいそ\",\n  \"へいたく\",\n  \"へいてん\",\n  \"へいねつ\",\n  \"へいわ\",\n  \"へきが\",\n  \"へこむ\",\n  \"べにいろ\",\n  \"べにしょうが\",\n  \"へらす\",\n  \"へんかん\",\n  \"べんきょう\",\n  \"べんごし\",\n  \"へんさい\",\n  \"へんたい\",\n  \"べんり\",\n  \"ほあん\",\n  \"ほいく\",\n  \"ぼうぎょ\",\n  \"ほうこく\",\n  \"ほうそう\",\n  \"ほうほう\",\n  \"ほうもん\",\n  \"ほうりつ\",\n  \"ほえる\",\n  \"ほおん\",\n  \"ほかん\",\n  \"ほきょう\",\n  \"ぼきん\",\n  \"ほくろ\",\n  \"ほけつ\",\n  \"ほけん\",\n  \"ほこう\",\n  \"ほこる\",\n  \"ほしい\",\n  \"ほしつ\",\n  \"ほしゅ\",\n  \"ほしょう\",\n  \"ほせい\",\n  \"ほそい\",\n  \"ほそく\",\n  \"ほたて\",\n  \"ほたる\",\n  \"ぽちぶくろ\",\n  \"ほっきょく\",\n  \"ほっさ\",\n  \"ほったん\",\n  \"ほとんど\",\n  \"ほめる\",\n  \"ほんい\",\n  \"ほんき\",\n  \"ほんけ\",\n  \"ほんしつ\",\n  \"ほんやく\",\n  \"まいにち\",\n  \"まかい\",\n  \"まかせる\",\n  \"まがる\",\n  \"まける\",\n  \"まこと\",\n  \"まさつ\",\n  \"まじめ\",\n  \"ますく\",\n  \"まぜる\",\n  \"まつり\",\n  \"まとめ\",\n  \"まなぶ\",\n  \"まぬけ\",\n  \"まねく\",\n  \"まほう\",\n  \"まもる\",\n  \"まゆげ\",\n  \"まよう\",\n  \"まろやか\",\n  \"まわす\",\n  \"まわり\",\n  \"まわる\",\n  \"まんが\",\n  \"まんきつ\",\n  \"まんぞく\",\n  \"まんなか\",\n  \"みいら\",\n  \"みうち\",\n  \"みえる\",\n  \"みがく\",\n  \"みかた\",\n  \"みかん\",\n  \"みけん\",\n  \"みこん\",\n  \"みじかい\",\n  \"みすい\",\n  \"みすえる\",\n  \"みせる\",\n  \"みっか\",\n  \"みつかる\",\n  \"みつける\",\n  \"みてい\",\n  \"みとめる\",\n  \"みなと\",\n  \"みなみかさい\",\n  \"みねらる\",\n  \"みのう\",\n  \"みのがす\",\n  \"みほん\",\n  \"みもと\",\n  \"みやげ\",\n  \"みらい\",\n  \"みりょく\",\n  \"みわく\",\n  \"みんか\",\n  \"みんぞく\",\n  \"むいか\",\n  \"むえき\",\n  \"むえん\",\n  \"むかい\",\n  \"むかう\",\n  \"むかえ\",\n  \"むかし\",\n  \"むぎちゃ\",\n  \"むける\",\n  \"むげん\",\n  \"むさぼる\",\n  \"むしあつい\",\n  \"むしば\",\n  \"むじゅん\",\n  \"むしろ\",\n  \"むすう\",\n  \"むすこ\",\n  \"むすぶ\",\n  \"むすめ\",\n  \"むせる\",\n  \"むせん\",\n  \"むちゅう\",\n  \"むなしい\",\n  \"むのう\",\n  \"むやみ\",\n  \"むよう\",\n  \"むらさき\",\n  \"むりょう\",\n  \"むろん\",\n  \"めいあん\",\n  \"めいうん\",\n  \"めいえん\",\n  \"めいかく\",\n  \"めいきょく\",\n  \"めいさい\",\n  \"めいし\",\n  \"めいそう\",\n  \"めいぶつ\",\n  \"めいれい\",\n  \"めいわく\",\n  \"めぐまれる\",\n  \"めざす\",\n  \"めした\",\n  \"めずらしい\",\n  \"めだつ\",\n  \"めまい\",\n  \"めやす\",\n  \"めんきょ\",\n  \"めんせき\",\n  \"めんどう\",\n  \"もうしあげる\",\n  \"もうどうけん\",\n  \"もえる\",\n  \"もくし\",\n  \"もくてき\",\n  \"もくようび\",\n  \"もちろん\",\n  \"もどる\",\n  \"もらう\",\n  \"もんく\",\n  \"もんだい\",\n  \"やおや\",\n  \"やける\",\n  \"やさい\",\n  \"やさしい\",\n  \"やすい\",\n  \"やすたろう\",\n  \"やすみ\",\n  \"やせる\",\n  \"やそう\",\n  \"やたい\",\n  \"やちん\",\n  \"やっと\",\n  \"やっぱり\",\n  \"やぶる\",\n  \"やめる\",\n  \"ややこしい\",\n  \"やよい\",\n  \"やわらかい\",\n  \"ゆうき\",\n  \"ゆうびんきょく\",\n  \"ゆうべ\",\n  \"ゆうめい\",\n  \"ゆけつ\",\n  \"ゆしゅつ\",\n  \"ゆせん\",\n  \"ゆそう\",\n  \"ゆたか\",\n  \"ゆちゃく\",\n  \"ゆでる\",\n  \"ゆにゅう\",\n  \"ゆびわ\",\n  \"ゆらい\",\n  \"ゆれる\",\n  \"ようい\",\n  \"ようか\",\n  \"ようきゅう\",\n  \"ようじ\",\n  \"ようす\",\n  \"ようちえん\",\n  \"よかぜ\",\n  \"よかん\",\n  \"よきん\",\n  \"よくせい\",\n  \"よくぼう\",\n  \"よけい\",\n  \"よごれる\",\n  \"よさん\",\n  \"よしゅう\",\n  \"よそう\",\n  \"よそく\",\n  \"よっか\",\n  \"よてい\",\n  \"よどがわく\",\n  \"よねつ\",\n  \"よやく\",\n  \"よゆう\",\n  \"よろこぶ\",\n  \"よろしい\",\n  \"らいう\",\n  \"らくがき\",\n  \"らくご\",\n  \"らくさつ\",\n  \"らくだ\",\n  \"らしんばん\",\n  \"らせん\",\n  \"らぞく\",\n  \"らたい\",\n  \"らっか\",\n  \"られつ\",\n  \"りえき\",\n  \"りかい\",\n  \"りきさく\",\n  \"りきせつ\",\n  \"りくぐん\",\n  \"りくつ\",\n  \"りけん\",\n  \"りこう\",\n  \"りせい\",\n  \"りそう\",\n  \"りそく\",\n  \"りてん\",\n  \"りねん\",\n  \"りゆう\",\n  \"りゅうがく\",\n  \"りよう\",\n  \"りょうり\",\n  \"りょかん\",\n  \"りょくちゃ\",\n  \"りょこう\",\n  \"りりく\",\n  \"りれき\",\n  \"りろん\",\n  \"りんご\",\n  \"るいけい\",\n  \"るいさい\",\n  \"るいじ\",\n  \"るいせき\",\n  \"るすばん\",\n  \"るりがわら\",\n  \"れいかん\",\n  \"れいぎ\",\n  \"れいせい\",\n  \"れいぞうこ\",\n  \"れいとう\",\n  \"れいぼう\",\n  \"れきし\",\n  \"れきだい\",\n  \"れんあい\",\n  \"れんけい\",\n  \"れんこん\",\n  \"れんさい\",\n  \"れんしゅう\",\n  \"れんぞく\",\n  \"れんらく\",\n  \"ろうか\",\n  \"ろうご\",\n  \"ろうじん\",\n  \"ろうそく\",\n  \"ろくが\",\n  \"ろこつ\",\n  \"ろじうら\",\n  \"ろしゅつ\",\n  \"ろせん\",\n  \"ろてん\",\n  \"ろめん\",\n  \"ろれつ\",\n  \"ろんぎ\",\n  \"ろんぱ\",\n  \"ろんぶん\",\n  \"ろんり\",\n  \"わかす\",\n  \"わかめ\",\n  \"わかやま\",\n  \"わかれる\",\n  \"わしつ\",\n  \"わじまし\",\n  \"わすれもの\",\n  \"わらう\",\n  \"われる\"\n]\n","module.exports=[\n  \"abaisser\",\n  \"abandon\",\n  \"abdiquer\",\n  \"abeille\",\n  \"abolir\",\n  \"aborder\",\n  \"aboutir\",\n  \"aboyer\",\n  \"abrasif\",\n  \"abreuver\",\n  \"abriter\",\n  \"abroger\",\n  \"abrupt\",\n  \"absence\",\n  \"absolu\",\n  \"absurde\",\n  \"abusif\",\n  \"abyssal\",\n  \"académie\",\n  \"acajou\",\n  \"acarien\",\n  \"accabler\",\n  \"accepter\",\n  \"acclamer\",\n  \"accolade\",\n  \"accroche\",\n  \"accuser\",\n  \"acerbe\",\n  \"achat\",\n  \"acheter\",\n  \"aciduler\",\n  \"acier\",\n  \"acompte\",\n  \"acquérir\",\n  \"acronyme\",\n  \"acteur\",\n  \"actif\",\n  \"actuel\",\n  \"adepte\",\n  \"adéquat\",\n  \"adhésif\",\n  \"adjectif\",\n  \"adjuger\",\n  \"admettre\",\n  \"admirer\",\n  \"adopter\",\n  \"adorer\",\n  \"adoucir\",\n  \"adresse\",\n  \"adroit\",\n  \"adulte\",\n  \"adverbe\",\n  \"aérer\",\n  \"aéronef\",\n  \"affaire\",\n  \"affecter\",\n  \"affiche\",\n  \"affreux\",\n  \"affubler\",\n  \"agacer\",\n  \"agencer\",\n  \"agile\",\n  \"agiter\",\n  \"agrafer\",\n  \"agréable\",\n  \"agrume\",\n  \"aider\",\n  \"aiguille\",\n  \"ailier\",\n  \"aimable\",\n  \"aisance\",\n  \"ajouter\",\n  \"ajuster\",\n  \"alarmer\",\n  \"alchimie\",\n  \"alerte\",\n  \"algèbre\",\n  \"algue\",\n  \"aliéner\",\n  \"aliment\",\n  \"alléger\",\n  \"alliage\",\n  \"allouer\",\n  \"allumer\",\n  \"alourdir\",\n  \"alpaga\",\n  \"altesse\",\n  \"alvéole\",\n  \"amateur\",\n  \"ambigu\",\n  \"ambre\",\n  \"aménager\",\n  \"amertume\",\n  \"amidon\",\n  \"amiral\",\n  \"amorcer\",\n  \"amour\",\n  \"amovible\",\n  \"amphibie\",\n  \"ampleur\",\n  \"amusant\",\n  \"analyse\",\n  \"anaphore\",\n  \"anarchie\",\n  \"anatomie\",\n  \"ancien\",\n  \"anéantir\",\n  \"angle\",\n  \"angoisse\",\n  \"anguleux\",\n  \"animal\",\n  \"annexer\",\n  \"annonce\",\n  \"annuel\",\n  \"anodin\",\n  \"anomalie\",\n  \"anonyme\",\n  \"anormal\",\n  \"antenne\",\n  \"antidote\",\n  \"anxieux\",\n  \"apaiser\",\n  \"apéritif\",\n  \"aplanir\",\n  \"apologie\",\n  \"appareil\",\n  \"appeler\",\n  \"apporter\",\n  \"appuyer\",\n  \"aquarium\",\n  \"aqueduc\",\n  \"arbitre\",\n  \"arbuste\",\n  \"ardeur\",\n  \"ardoise\",\n  \"argent\",\n  \"arlequin\",\n  \"armature\",\n  \"armement\",\n  \"armoire\",\n  \"armure\",\n  \"arpenter\",\n  \"arracher\",\n  \"arriver\",\n  \"arroser\",\n  \"arsenic\",\n  \"artériel\",\n  \"article\",\n  \"aspect\",\n  \"asphalte\",\n  \"aspirer\",\n  \"assaut\",\n  \"asservir\",\n  \"assiette\",\n  \"associer\",\n  \"assurer\",\n  \"asticot\",\n  \"astre\",\n  \"astuce\",\n  \"atelier\",\n  \"atome\",\n  \"atrium\",\n  \"atroce\",\n  \"attaque\",\n  \"attentif\",\n  \"attirer\",\n  \"attraper\",\n  \"aubaine\",\n  \"auberge\",\n  \"audace\",\n  \"audible\",\n  \"augurer\",\n  \"aurore\",\n  \"automne\",\n  \"autruche\",\n  \"avaler\",\n  \"avancer\",\n  \"avarice\",\n  \"avenir\",\n  \"averse\",\n  \"aveugle\",\n  \"aviateur\",\n  \"avide\",\n  \"avion\",\n  \"aviser\",\n  \"avoine\",\n  \"avouer\",\n  \"avril\",\n  \"axial\",\n  \"axiome\",\n  \"badge\",\n  \"bafouer\",\n  \"bagage\",\n  \"baguette\",\n  \"baignade\",\n  \"balancer\",\n  \"balcon\",\n  \"baleine\",\n  \"balisage\",\n  \"bambin\",\n  \"bancaire\",\n  \"bandage\",\n  \"banlieue\",\n  \"bannière\",\n  \"banquier\",\n  \"barbier\",\n  \"baril\",\n  \"baron\",\n  \"barque\",\n  \"barrage\",\n  \"bassin\",\n  \"bastion\",\n  \"bataille\",\n  \"bateau\",\n  \"batterie\",\n  \"baudrier\",\n  \"bavarder\",\n  \"belette\",\n  \"bélier\",\n  \"belote\",\n  \"bénéfice\",\n  \"berceau\",\n  \"berger\",\n  \"berline\",\n  \"bermuda\",\n  \"besace\",\n  \"besogne\",\n  \"bétail\",\n  \"beurre\",\n  \"biberon\",\n  \"bicycle\",\n  \"bidule\",\n  \"bijou\",\n  \"bilan\",\n  \"bilingue\",\n  \"billard\",\n  \"binaire\",\n  \"biologie\",\n  \"biopsie\",\n  \"biotype\",\n  \"biscuit\",\n  \"bison\",\n  \"bistouri\",\n  \"bitume\",\n  \"bizarre\",\n  \"blafard\",\n  \"blague\",\n  \"blanchir\",\n  \"blessant\",\n  \"blinder\",\n  \"blond\",\n  \"bloquer\",\n  \"blouson\",\n  \"bobard\",\n  \"bobine\",\n  \"boire\",\n  \"boiser\",\n  \"bolide\",\n  \"bonbon\",\n  \"bondir\",\n  \"bonheur\",\n  \"bonifier\",\n  \"bonus\",\n  \"bordure\",\n  \"borne\",\n  \"botte\",\n  \"boucle\",\n  \"boueux\",\n  \"bougie\",\n  \"boulon\",\n  \"bouquin\",\n  \"bourse\",\n  \"boussole\",\n  \"boutique\",\n  \"boxeur\",\n  \"branche\",\n  \"brasier\",\n  \"brave\",\n  \"brebis\",\n  \"brèche\",\n  \"breuvage\",\n  \"bricoler\",\n  \"brigade\",\n  \"brillant\",\n  \"brioche\",\n  \"brique\",\n  \"brochure\",\n  \"broder\",\n  \"bronzer\",\n  \"brousse\",\n  \"broyeur\",\n  \"brume\",\n  \"brusque\",\n  \"brutal\",\n  \"bruyant\",\n  \"buffle\",\n  \"buisson\",\n  \"bulletin\",\n  \"bureau\",\n  \"burin\",\n  \"bustier\",\n  \"butiner\",\n  \"butoir\",\n  \"buvable\",\n  \"buvette\",\n  \"cabanon\",\n  \"cabine\",\n  \"cachette\",\n  \"cadeau\",\n  \"cadre\",\n  \"caféine\",\n  \"caillou\",\n  \"caisson\",\n  \"calculer\",\n  \"calepin\",\n  \"calibre\",\n  \"calmer\",\n  \"calomnie\",\n  \"calvaire\",\n  \"camarade\",\n  \"caméra\",\n  \"camion\",\n  \"campagne\",\n  \"canal\",\n  \"caneton\",\n  \"canon\",\n  \"cantine\",\n  \"canular\",\n  \"capable\",\n  \"caporal\",\n  \"caprice\",\n  \"capsule\",\n  \"capter\",\n  \"capuche\",\n  \"carabine\",\n  \"carbone\",\n  \"caresser\",\n  \"caribou\",\n  \"carnage\",\n  \"carotte\",\n  \"carreau\",\n  \"carton\",\n  \"cascade\",\n  \"casier\",\n  \"casque\",\n  \"cassure\",\n  \"causer\",\n  \"caution\",\n  \"cavalier\",\n  \"caverne\",\n  \"caviar\",\n  \"cédille\",\n  \"ceinture\",\n  \"céleste\",\n  \"cellule\",\n  \"cendrier\",\n  \"censurer\",\n  \"central\",\n  \"cercle\",\n  \"cérébral\",\n  \"cerise\",\n  \"cerner\",\n  \"cerveau\",\n  \"cesser\",\n  \"chagrin\",\n  \"chaise\",\n  \"chaleur\",\n  \"chambre\",\n  \"chance\",\n  \"chapitre\",\n  \"charbon\",\n  \"chasseur\",\n  \"chaton\",\n  \"chausson\",\n  \"chavirer\",\n  \"chemise\",\n  \"chenille\",\n  \"chéquier\",\n  \"chercher\",\n  \"cheval\",\n  \"chien\",\n  \"chiffre\",\n  \"chignon\",\n  \"chimère\",\n  \"chiot\",\n  \"chlorure\",\n  \"chocolat\",\n  \"choisir\",\n  \"chose\",\n  \"chouette\",\n  \"chrome\",\n  \"chute\",\n  \"cigare\",\n  \"cigogne\",\n  \"cimenter\",\n  \"cinéma\",\n  \"cintrer\",\n  \"circuler\",\n  \"cirer\",\n  \"cirque\",\n  \"citerne\",\n  \"citoyen\",\n  \"citron\",\n  \"civil\",\n  \"clairon\",\n  \"clameur\",\n  \"claquer\",\n  \"classe\",\n  \"clavier\",\n  \"client\",\n  \"cligner\",\n  \"climat\",\n  \"clivage\",\n  \"cloche\",\n  \"clonage\",\n  \"cloporte\",\n  \"cobalt\",\n  \"cobra\",\n  \"cocasse\",\n  \"cocotier\",\n  \"coder\",\n  \"codifier\",\n  \"coffre\",\n  \"cogner\",\n  \"cohésion\",\n  \"coiffer\",\n  \"coincer\",\n  \"colère\",\n  \"colibri\",\n  \"colline\",\n  \"colmater\",\n  \"colonel\",\n  \"combat\",\n  \"comédie\",\n  \"commande\",\n  \"compact\",\n  \"concert\",\n  \"conduire\",\n  \"confier\",\n  \"congeler\",\n  \"connoter\",\n  \"consonne\",\n  \"contact\",\n  \"convexe\",\n  \"copain\",\n  \"copie\",\n  \"corail\",\n  \"corbeau\",\n  \"cordage\",\n  \"corniche\",\n  \"corpus\",\n  \"correct\",\n  \"cortège\",\n  \"cosmique\",\n  \"costume\",\n  \"coton\",\n  \"coude\",\n  \"coupure\",\n  \"courage\",\n  \"couteau\",\n  \"couvrir\",\n  \"coyote\",\n  \"crabe\",\n  \"crainte\",\n  \"cravate\",\n  \"crayon\",\n  \"créature\",\n  \"créditer\",\n  \"crémeux\",\n  \"creuser\",\n  \"crevette\",\n  \"cribler\",\n  \"crier\",\n  \"cristal\",\n  \"critère\",\n  \"croire\",\n  \"croquer\",\n  \"crotale\",\n  \"crucial\",\n  \"cruel\",\n  \"crypter\",\n  \"cubique\",\n  \"cueillir\",\n  \"cuillère\",\n  \"cuisine\",\n  \"cuivre\",\n  \"culminer\",\n  \"cultiver\",\n  \"cumuler\",\n  \"cupide\",\n  \"curatif\",\n  \"curseur\",\n  \"cyanure\",\n  \"cycle\",\n  \"cylindre\",\n  \"cynique\",\n  \"daigner\",\n  \"damier\",\n  \"danger\",\n  \"danseur\",\n  \"dauphin\",\n  \"débattre\",\n  \"débiter\",\n  \"déborder\",\n  \"débrider\",\n  \"débutant\",\n  \"décaler\",\n  \"décembre\",\n  \"déchirer\",\n  \"décider\",\n  \"déclarer\",\n  \"décorer\",\n  \"décrire\",\n  \"décupler\",\n  \"dédale\",\n  \"déductif\",\n  \"déesse\",\n  \"défensif\",\n  \"défiler\",\n  \"défrayer\",\n  \"dégager\",\n  \"dégivrer\",\n  \"déglutir\",\n  \"dégrafer\",\n  \"déjeuner\",\n  \"délice\",\n  \"déloger\",\n  \"demander\",\n  \"demeurer\",\n  \"démolir\",\n  \"dénicher\",\n  \"dénouer\",\n  \"dentelle\",\n  \"dénuder\",\n  \"départ\",\n  \"dépenser\",\n  \"déphaser\",\n  \"déplacer\",\n  \"déposer\",\n  \"déranger\",\n  \"dérober\",\n  \"désastre\",\n  \"descente\",\n  \"désert\",\n  \"désigner\",\n  \"désobéir\",\n  \"dessiner\",\n  \"destrier\",\n  \"détacher\",\n  \"détester\",\n  \"détourer\",\n  \"détresse\",\n  \"devancer\",\n  \"devenir\",\n  \"deviner\",\n  \"devoir\",\n  \"diable\",\n  \"dialogue\",\n  \"diamant\",\n  \"dicter\",\n  \"différer\",\n  \"digérer\",\n  \"digital\",\n  \"digne\",\n  \"diluer\",\n  \"dimanche\",\n  \"diminuer\",\n  \"dioxyde\",\n  \"directif\",\n  \"diriger\",\n  \"discuter\",\n  \"disposer\",\n  \"dissiper\",\n  \"distance\",\n  \"divertir\",\n  \"diviser\",\n  \"docile\",\n  \"docteur\",\n  \"dogme\",\n  \"doigt\",\n  \"domaine\",\n  \"domicile\",\n  \"dompter\",\n  \"donateur\",\n  \"donjon\",\n  \"donner\",\n  \"dopamine\",\n  \"dortoir\",\n  \"dorure\",\n  \"dosage\",\n  \"doseur\",\n  \"dossier\",\n  \"dotation\",\n  \"douanier\",\n  \"double\",\n  \"douceur\",\n  \"douter\",\n  \"doyen\",\n  \"dragon\",\n  \"draper\",\n  \"dresser\",\n  \"dribbler\",\n  \"droiture\",\n  \"duperie\",\n  \"duplexe\",\n  \"durable\",\n  \"durcir\",\n  \"dynastie\",\n  \"éblouir\",\n  \"écarter\",\n  \"écharpe\",\n  \"échelle\",\n  \"éclairer\",\n  \"éclipse\",\n  \"éclore\",\n  \"écluse\",\n  \"école\",\n  \"économie\",\n  \"écorce\",\n  \"écouter\",\n  \"écraser\",\n  \"écrémer\",\n  \"écrivain\",\n  \"écrou\",\n  \"écume\",\n  \"écureuil\",\n  \"édifier\",\n  \"éduquer\",\n  \"effacer\",\n  \"effectif\",\n  \"effigie\",\n  \"effort\",\n  \"effrayer\",\n  \"effusion\",\n  \"égaliser\",\n  \"égarer\",\n  \"éjecter\",\n  \"élaborer\",\n  \"élargir\",\n  \"électron\",\n  \"élégant\",\n  \"éléphant\",\n  \"élève\",\n  \"éligible\",\n  \"élitisme\",\n  \"éloge\",\n  \"élucider\",\n  \"éluder\",\n  \"emballer\",\n  \"embellir\",\n  \"embryon\",\n  \"émeraude\",\n  \"émission\",\n  \"emmener\",\n  \"émotion\",\n  \"émouvoir\",\n  \"empereur\",\n  \"employer\",\n  \"emporter\",\n  \"emprise\",\n  \"émulsion\",\n  \"encadrer\",\n  \"enchère\",\n  \"enclave\",\n  \"encoche\",\n  \"endiguer\",\n  \"endosser\",\n  \"endroit\",\n  \"enduire\",\n  \"énergie\",\n  \"enfance\",\n  \"enfermer\",\n  \"enfouir\",\n  \"engager\",\n  \"engin\",\n  \"englober\",\n  \"énigme\",\n  \"enjamber\",\n  \"enjeu\",\n  \"enlever\",\n  \"ennemi\",\n  \"ennuyeux\",\n  \"enrichir\",\n  \"enrobage\",\n  \"enseigne\",\n  \"entasser\",\n  \"entendre\",\n  \"entier\",\n  \"entourer\",\n  \"entraver\",\n  \"énumérer\",\n  \"envahir\",\n  \"enviable\",\n  \"envoyer\",\n  \"enzyme\",\n  \"éolien\",\n  \"épaissir\",\n  \"épargne\",\n  \"épatant\",\n  \"épaule\",\n  \"épicerie\",\n  \"épidémie\",\n  \"épier\",\n  \"épilogue\",\n  \"épine\",\n  \"épisode\",\n  \"épitaphe\",\n  \"époque\",\n  \"épreuve\",\n  \"éprouver\",\n  \"épuisant\",\n  \"équerre\",\n  \"équipe\",\n  \"ériger\",\n  \"érosion\",\n  \"erreur\",\n  \"éruption\",\n  \"escalier\",\n  \"espadon\",\n  \"espèce\",\n  \"espiègle\",\n  \"espoir\",\n  \"esprit\",\n  \"esquiver\",\n  \"essayer\",\n  \"essence\",\n  \"essieu\",\n  \"essorer\",\n  \"estime\",\n  \"estomac\",\n  \"estrade\",\n  \"étagère\",\n  \"étaler\",\n  \"étanche\",\n  \"étatique\",\n  \"éteindre\",\n  \"étendoir\",\n  \"éternel\",\n  \"éthanol\",\n  \"éthique\",\n  \"ethnie\",\n  \"étirer\",\n  \"étoffer\",\n  \"étoile\",\n  \"étonnant\",\n  \"étourdir\",\n  \"étrange\",\n  \"étroit\",\n  \"étude\",\n  \"euphorie\",\n  \"évaluer\",\n  \"évasion\",\n  \"éventail\",\n  \"évidence\",\n  \"éviter\",\n  \"évolutif\",\n  \"évoquer\",\n  \"exact\",\n  \"exagérer\",\n  \"exaucer\",\n  \"exceller\",\n  \"excitant\",\n  \"exclusif\",\n  \"excuse\",\n  \"exécuter\",\n  \"exemple\",\n  \"exercer\",\n  \"exhaler\",\n  \"exhorter\",\n  \"exigence\",\n  \"exiler\",\n  \"exister\",\n  \"exotique\",\n  \"expédier\",\n  \"explorer\",\n  \"exposer\",\n  \"exprimer\",\n  \"exquis\",\n  \"extensif\",\n  \"extraire\",\n  \"exulter\",\n  \"fable\",\n  \"fabuleux\",\n  \"facette\",\n  \"facile\",\n  \"facture\",\n  \"faiblir\",\n  \"falaise\",\n  \"fameux\",\n  \"famille\",\n  \"farceur\",\n  \"farfelu\",\n  \"farine\",\n  \"farouche\",\n  \"fasciner\",\n  \"fatal\",\n  \"fatigue\",\n  \"faucon\",\n  \"fautif\",\n  \"faveur\",\n  \"favori\",\n  \"fébrile\",\n  \"féconder\",\n  \"fédérer\",\n  \"félin\",\n  \"femme\",\n  \"fémur\",\n  \"fendoir\",\n  \"féodal\",\n  \"fermer\",\n  \"féroce\",\n  \"ferveur\",\n  \"festival\",\n  \"feuille\",\n  \"feutre\",\n  \"février\",\n  \"fiasco\",\n  \"ficeler\",\n  \"fictif\",\n  \"fidèle\",\n  \"figure\",\n  \"filature\",\n  \"filetage\",\n  \"filière\",\n  \"filleul\",\n  \"filmer\",\n  \"filou\",\n  \"filtrer\",\n  \"financer\",\n  \"finir\",\n  \"fiole\",\n  \"firme\",\n  \"fissure\",\n  \"fixer\",\n  \"flairer\",\n  \"flamme\",\n  \"flasque\",\n  \"flatteur\",\n  \"fléau\",\n  \"flèche\",\n  \"fleur\",\n  \"flexion\",\n  \"flocon\",\n  \"flore\",\n  \"fluctuer\",\n  \"fluide\",\n  \"fluvial\",\n  \"folie\",\n  \"fonderie\",\n  \"fongible\",\n  \"fontaine\",\n  \"forcer\",\n  \"forgeron\",\n  \"formuler\",\n  \"fortune\",\n  \"fossile\",\n  \"foudre\",\n  \"fougère\",\n  \"fouiller\",\n  \"foulure\",\n  \"fourmi\",\n  \"fragile\",\n  \"fraise\",\n  \"franchir\",\n  \"frapper\",\n  \"frayeur\",\n  \"frégate\",\n  \"freiner\",\n  \"frelon\",\n  \"frémir\",\n  \"frénésie\",\n  \"frère\",\n  \"friable\",\n  \"friction\",\n  \"frisson\",\n  \"frivole\",\n  \"froid\",\n  \"fromage\",\n  \"frontal\",\n  \"frotter\",\n  \"fruit\",\n  \"fugitif\",\n  \"fuite\",\n  \"fureur\",\n  \"furieux\",\n  \"furtif\",\n  \"fusion\",\n  \"futur\",\n  \"gagner\",\n  \"galaxie\",\n  \"galerie\",\n  \"gambader\",\n  \"garantir\",\n  \"gardien\",\n  \"garnir\",\n  \"garrigue\",\n  \"gazelle\",\n  \"gazon\",\n  \"géant\",\n  \"gélatine\",\n  \"gélule\",\n  \"gendarme\",\n  \"général\",\n  \"génie\",\n  \"genou\",\n  \"gentil\",\n  \"géologie\",\n  \"géomètre\",\n  \"géranium\",\n  \"germe\",\n  \"gestuel\",\n  \"geyser\",\n  \"gibier\",\n  \"gicler\",\n  \"girafe\",\n  \"givre\",\n  \"glace\",\n  \"glaive\",\n  \"glisser\",\n  \"globe\",\n  \"gloire\",\n  \"glorieux\",\n  \"golfeur\",\n  \"gomme\",\n  \"gonfler\",\n  \"gorge\",\n  \"gorille\",\n  \"goudron\",\n  \"gouffre\",\n  \"goulot\",\n  \"goupille\",\n  \"gourmand\",\n  \"goutte\",\n  \"graduel\",\n  \"graffiti\",\n  \"graine\",\n  \"grand\",\n  \"grappin\",\n  \"gratuit\",\n  \"gravir\",\n  \"grenat\",\n  \"griffure\",\n  \"griller\",\n  \"grimper\",\n  \"grogner\",\n  \"gronder\",\n  \"grotte\",\n  \"groupe\",\n  \"gruger\",\n  \"grutier\",\n  \"gruyère\",\n  \"guépard\",\n  \"guerrier\",\n  \"guide\",\n  \"guimauve\",\n  \"guitare\",\n  \"gustatif\",\n  \"gymnaste\",\n  \"gyrostat\",\n  \"habitude\",\n  \"hachoir\",\n  \"halte\",\n  \"hameau\",\n  \"hangar\",\n  \"hanneton\",\n  \"haricot\",\n  \"harmonie\",\n  \"harpon\",\n  \"hasard\",\n  \"hélium\",\n  \"hématome\",\n  \"herbe\",\n  \"hérisson\",\n  \"hermine\",\n  \"héron\",\n  \"hésiter\",\n  \"heureux\",\n  \"hiberner\",\n  \"hibou\",\n  \"hilarant\",\n  \"histoire\",\n  \"hiver\",\n  \"homard\",\n  \"hommage\",\n  \"homogène\",\n  \"honneur\",\n  \"honorer\",\n  \"honteux\",\n  \"horde\",\n  \"horizon\",\n  \"horloge\",\n  \"hormone\",\n  \"horrible\",\n  \"houleux\",\n  \"housse\",\n  \"hublot\",\n  \"huileux\",\n  \"humain\",\n  \"humble\",\n  \"humide\",\n  \"humour\",\n  \"hurler\",\n  \"hydromel\",\n  \"hygiène\",\n  \"hymne\",\n  \"hypnose\",\n  \"idylle\",\n  \"ignorer\",\n  \"iguane\",\n  \"illicite\",\n  \"illusion\",\n  \"image\",\n  \"imbiber\",\n  \"imiter\",\n  \"immense\",\n  \"immobile\",\n  \"immuable\",\n  \"impact\",\n  \"impérial\",\n  \"implorer\",\n  \"imposer\",\n  \"imprimer\",\n  \"imputer\",\n  \"incarner\",\n  \"incendie\",\n  \"incident\",\n  \"incliner\",\n  \"incolore\",\n  \"indexer\",\n  \"indice\",\n  \"inductif\",\n  \"inédit\",\n  \"ineptie\",\n  \"inexact\",\n  \"infini\",\n  \"infliger\",\n  \"informer\",\n  \"infusion\",\n  \"ingérer\",\n  \"inhaler\",\n  \"inhiber\",\n  \"injecter\",\n  \"injure\",\n  \"innocent\",\n  \"inoculer\",\n  \"inonder\",\n  \"inscrire\",\n  \"insecte\",\n  \"insigne\",\n  \"insolite\",\n  \"inspirer\",\n  \"instinct\",\n  \"insulter\",\n  \"intact\",\n  \"intense\",\n  \"intime\",\n  \"intrigue\",\n  \"intuitif\",\n  \"inutile\",\n  \"invasion\",\n  \"inventer\",\n  \"inviter\",\n  \"invoquer\",\n  \"ironique\",\n  \"irradier\",\n  \"irréel\",\n  \"irriter\",\n  \"isoler\",\n  \"ivoire\",\n  \"ivresse\",\n  \"jaguar\",\n  \"jaillir\",\n  \"jambe\",\n  \"janvier\",\n  \"jardin\",\n  \"jauger\",\n  \"jaune\",\n  \"javelot\",\n  \"jetable\",\n  \"jeton\",\n  \"jeudi\",\n  \"jeunesse\",\n  \"joindre\",\n  \"joncher\",\n  \"jongler\",\n  \"joueur\",\n  \"jouissif\",\n  \"journal\",\n  \"jovial\",\n  \"joyau\",\n  \"joyeux\",\n  \"jubiler\",\n  \"jugement\",\n  \"junior\",\n  \"jupon\",\n  \"juriste\",\n  \"justice\",\n  \"juteux\",\n  \"juvénile\",\n  \"kayak\",\n  \"kimono\",\n  \"kiosque\",\n  \"label\",\n  \"labial\",\n  \"labourer\",\n  \"lacérer\",\n  \"lactose\",\n  \"lagune\",\n  \"laine\",\n  \"laisser\",\n  \"laitier\",\n  \"lambeau\",\n  \"lamelle\",\n  \"lampe\",\n  \"lanceur\",\n  \"langage\",\n  \"lanterne\",\n  \"lapin\",\n  \"largeur\",\n  \"larme\",\n  \"laurier\",\n  \"lavabo\",\n  \"lavoir\",\n  \"lecture\",\n  \"légal\",\n  \"léger\",\n  \"légume\",\n  \"lessive\",\n  \"lettre\",\n  \"levier\",\n  \"lexique\",\n  \"lézard\",\n  \"liasse\",\n  \"libérer\",\n  \"libre\",\n  \"licence\",\n  \"licorne\",\n  \"liège\",\n  \"lièvre\",\n  \"ligature\",\n  \"ligoter\",\n  \"ligue\",\n  \"limer\",\n  \"limite\",\n  \"limonade\",\n  \"limpide\",\n  \"linéaire\",\n  \"lingot\",\n  \"lionceau\",\n  \"liquide\",\n  \"lisière\",\n  \"lister\",\n  \"lithium\",\n  \"litige\",\n  \"littoral\",\n  \"livreur\",\n  \"logique\",\n  \"lointain\",\n  \"loisir\",\n  \"lombric\",\n  \"loterie\",\n  \"louer\",\n  \"lourd\",\n  \"loutre\",\n  \"louve\",\n  \"loyal\",\n  \"lubie\",\n  \"lucide\",\n  \"lucratif\",\n  \"lueur\",\n  \"lugubre\",\n  \"luisant\",\n  \"lumière\",\n  \"lunaire\",\n  \"lundi\",\n  \"luron\",\n  \"lutter\",\n  \"luxueux\",\n  \"machine\",\n  \"magasin\",\n  \"magenta\",\n  \"magique\",\n  \"maigre\",\n  \"maillon\",\n  \"maintien\",\n  \"mairie\",\n  \"maison\",\n  \"majorer\",\n  \"malaxer\",\n  \"maléfice\",\n  \"malheur\",\n  \"malice\",\n  \"mallette\",\n  \"mammouth\",\n  \"mandater\",\n  \"maniable\",\n  \"manquant\",\n  \"manteau\",\n  \"manuel\",\n  \"marathon\",\n  \"marbre\",\n  \"marchand\",\n  \"mardi\",\n  \"maritime\",\n  \"marqueur\",\n  \"marron\",\n  \"marteler\",\n  \"mascotte\",\n  \"massif\",\n  \"matériel\",\n  \"matière\",\n  \"matraque\",\n  \"maudire\",\n  \"maussade\",\n  \"mauve\",\n  \"maximal\",\n  \"méchant\",\n  \"méconnu\",\n  \"médaille\",\n  \"médecin\",\n  \"méditer\",\n  \"méduse\",\n  \"meilleur\",\n  \"mélange\",\n  \"mélodie\",\n  \"membre\",\n  \"mémoire\",\n  \"menacer\",\n  \"mener\",\n  \"menhir\",\n  \"mensonge\",\n  \"mentor\",\n  \"mercredi\",\n  \"mérite\",\n  \"merle\",\n  \"messager\",\n  \"mesure\",\n  \"métal\",\n  \"météore\",\n  \"méthode\",\n  \"métier\",\n  \"meuble\",\n  \"miauler\",\n  \"microbe\",\n  \"miette\",\n  \"mignon\",\n  \"migrer\",\n  \"milieu\",\n  \"million\",\n  \"mimique\",\n  \"mince\",\n  \"minéral\",\n  \"minimal\",\n  \"minorer\",\n  \"minute\",\n  \"miracle\",\n  \"miroiter\",\n  \"missile\",\n  \"mixte\",\n  \"mobile\",\n  \"moderne\",\n  \"moelleux\",\n  \"mondial\",\n  \"moniteur\",\n  \"monnaie\",\n  \"monotone\",\n  \"monstre\",\n  \"montagne\",\n  \"monument\",\n  \"moqueur\",\n  \"morceau\",\n  \"morsure\",\n  \"mortier\",\n  \"moteur\",\n  \"motif\",\n  \"mouche\",\n  \"moufle\",\n  \"moulin\",\n  \"mousson\",\n  \"mouton\",\n  \"mouvant\",\n  \"multiple\",\n  \"munition\",\n  \"muraille\",\n  \"murène\",\n  \"murmure\",\n  \"muscle\",\n  \"muséum\",\n  \"musicien\",\n  \"mutation\",\n  \"muter\",\n  \"mutuel\",\n  \"myriade\",\n  \"myrtille\",\n  \"mystère\",\n  \"mythique\",\n  \"nageur\",\n  \"nappe\",\n  \"narquois\",\n  \"narrer\",\n  \"natation\",\n  \"nation\",\n  \"nature\",\n  \"naufrage\",\n  \"nautique\",\n  \"navire\",\n  \"nébuleux\",\n  \"nectar\",\n  \"néfaste\",\n  \"négation\",\n  \"négliger\",\n  \"négocier\",\n  \"neige\",\n  \"nerveux\",\n  \"nettoyer\",\n  \"neurone\",\n  \"neutron\",\n  \"neveu\",\n  \"niche\",\n  \"nickel\",\n  \"nitrate\",\n  \"niveau\",\n  \"noble\",\n  \"nocif\",\n  \"nocturne\",\n  \"noirceur\",\n  \"noisette\",\n  \"nomade\",\n  \"nombreux\",\n  \"nommer\",\n  \"normatif\",\n  \"notable\",\n  \"notifier\",\n  \"notoire\",\n  \"nourrir\",\n  \"nouveau\",\n  \"novateur\",\n  \"novembre\",\n  \"novice\",\n  \"nuage\",\n  \"nuancer\",\n  \"nuire\",\n  \"nuisible\",\n  \"numéro\",\n  \"nuptial\",\n  \"nuque\",\n  \"nutritif\",\n  \"obéir\",\n  \"objectif\",\n  \"obliger\",\n  \"obscur\",\n  \"observer\",\n  \"obstacle\",\n  \"obtenir\",\n  \"obturer\",\n  \"occasion\",\n  \"occuper\",\n  \"océan\",\n  \"octobre\",\n  \"octroyer\",\n  \"octupler\",\n  \"oculaire\",\n  \"odeur\",\n  \"odorant\",\n  \"offenser\",\n  \"officier\",\n  \"offrir\",\n  \"ogive\",\n  \"oiseau\",\n  \"oisillon\",\n  \"olfactif\",\n  \"olivier\",\n  \"ombrage\",\n  \"omettre\",\n  \"onctueux\",\n  \"onduler\",\n  \"onéreux\",\n  \"onirique\",\n  \"opale\",\n  \"opaque\",\n  \"opérer\",\n  \"opinion\",\n  \"opportun\",\n  \"opprimer\",\n  \"opter\",\n  \"optique\",\n  \"orageux\",\n  \"orange\",\n  \"orbite\",\n  \"ordonner\",\n  \"oreille\",\n  \"organe\",\n  \"orgueil\",\n  \"orifice\",\n  \"ornement\",\n  \"orque\",\n  \"ortie\",\n  \"osciller\",\n  \"osmose\",\n  \"ossature\",\n  \"otarie\",\n  \"ouragan\",\n  \"ourson\",\n  \"outil\",\n  \"outrager\",\n  \"ouvrage\",\n  \"ovation\",\n  \"oxyde\",\n  \"oxygène\",\n  \"ozone\",\n  \"paisible\",\n  \"palace\",\n  \"palmarès\",\n  \"palourde\",\n  \"palper\",\n  \"panache\",\n  \"panda\",\n  \"pangolin\",\n  \"paniquer\",\n  \"panneau\",\n  \"panorama\",\n  \"pantalon\",\n  \"papaye\",\n  \"papier\",\n  \"papoter\",\n  \"papyrus\",\n  \"paradoxe\",\n  \"parcelle\",\n  \"paresse\",\n  \"parfumer\",\n  \"parler\",\n  \"parole\",\n  \"parrain\",\n  \"parsemer\",\n  \"partager\",\n  \"parure\",\n  \"parvenir\",\n  \"passion\",\n  \"pastèque\",\n  \"paternel\",\n  \"patience\",\n  \"patron\",\n  \"pavillon\",\n  \"pavoiser\",\n  \"payer\",\n  \"paysage\",\n  \"peigne\",\n  \"peintre\",\n  \"pelage\",\n  \"pélican\",\n  \"pelle\",\n  \"pelouse\",\n  \"peluche\",\n  \"pendule\",\n  \"pénétrer\",\n  \"pénible\",\n  \"pensif\",\n  \"pénurie\",\n  \"pépite\",\n  \"péplum\",\n  \"perdrix\",\n  \"perforer\",\n  \"période\",\n  \"permuter\",\n  \"perplexe\",\n  \"persil\",\n  \"perte\",\n  \"peser\",\n  \"pétale\",\n  \"petit\",\n  \"pétrir\",\n  \"peuple\",\n  \"pharaon\",\n  \"phobie\",\n  \"phoque\",\n  \"photon\",\n  \"phrase\",\n  \"physique\",\n  \"piano\",\n  \"pictural\",\n  \"pièce\",\n  \"pierre\",\n  \"pieuvre\",\n  \"pilote\",\n  \"pinceau\",\n  \"pipette\",\n  \"piquer\",\n  \"pirogue\",\n  \"piscine\",\n  \"piston\",\n  \"pivoter\",\n  \"pixel\",\n  \"pizza\",\n  \"placard\",\n  \"plafond\",\n  \"plaisir\",\n  \"planer\",\n  \"plaque\",\n  \"plastron\",\n  \"plateau\",\n  \"pleurer\",\n  \"plexus\",\n  \"pliage\",\n  \"plomb\",\n  \"plonger\",\n  \"pluie\",\n  \"plumage\",\n  \"pochette\",\n  \"poésie\",\n  \"poète\",\n  \"pointe\",\n  \"poirier\",\n  \"poisson\",\n  \"poivre\",\n  \"polaire\",\n  \"policier\",\n  \"pollen\",\n  \"polygone\",\n  \"pommade\",\n  \"pompier\",\n  \"ponctuel\",\n  \"pondérer\",\n  \"poney\",\n  \"portique\",\n  \"position\",\n  \"posséder\",\n  \"posture\",\n  \"potager\",\n  \"poteau\",\n  \"potion\",\n  \"pouce\",\n  \"poulain\",\n  \"poumon\",\n  \"pourpre\",\n  \"poussin\",\n  \"pouvoir\",\n  \"prairie\",\n  \"pratique\",\n  \"précieux\",\n  \"prédire\",\n  \"préfixe\",\n  \"prélude\",\n  \"prénom\",\n  \"présence\",\n  \"prétexte\",\n  \"prévoir\",\n  \"primitif\",\n  \"prince\",\n  \"prison\",\n  \"priver\",\n  \"problème\",\n  \"procéder\",\n  \"prodige\",\n  \"profond\",\n  \"progrès\",\n  \"proie\",\n  \"projeter\",\n  \"prologue\",\n  \"promener\",\n  \"propre\",\n  \"prospère\",\n  \"protéger\",\n  \"prouesse\",\n  \"proverbe\",\n  \"prudence\",\n  \"pruneau\",\n  \"psychose\",\n  \"public\",\n  \"puceron\",\n  \"puiser\",\n  \"pulpe\",\n  \"pulsar\",\n  \"punaise\",\n  \"punitif\",\n  \"pupitre\",\n  \"purifier\",\n  \"puzzle\",\n  \"pyramide\",\n  \"quasar\",\n  \"querelle\",\n  \"question\",\n  \"quiétude\",\n  \"quitter\",\n  \"quotient\",\n  \"racine\",\n  \"raconter\",\n  \"radieux\",\n  \"ragondin\",\n  \"raideur\",\n  \"raisin\",\n  \"ralentir\",\n  \"rallonge\",\n  \"ramasser\",\n  \"rapide\",\n  \"rasage\",\n  \"ratisser\",\n  \"ravager\",\n  \"ravin\",\n  \"rayonner\",\n  \"réactif\",\n  \"réagir\",\n  \"réaliser\",\n  \"réanimer\",\n  \"recevoir\",\n  \"réciter\",\n  \"réclamer\",\n  \"récolter\",\n  \"recruter\",\n  \"reculer\",\n  \"recycler\",\n  \"rédiger\",\n  \"redouter\",\n  \"refaire\",\n  \"réflexe\",\n  \"réformer\",\n  \"refrain\",\n  \"refuge\",\n  \"régalien\",\n  \"région\",\n  \"réglage\",\n  \"régulier\",\n  \"réitérer\",\n  \"rejeter\",\n  \"rejouer\",\n  \"relatif\",\n  \"relever\",\n  \"relief\",\n  \"remarque\",\n  \"remède\",\n  \"remise\",\n  \"remonter\",\n  \"remplir\",\n  \"remuer\",\n  \"renard\",\n  \"renfort\",\n  \"renifler\",\n  \"renoncer\",\n  \"rentrer\",\n  \"renvoi\",\n  \"replier\",\n  \"reporter\",\n  \"reprise\",\n  \"reptile\",\n  \"requin\",\n  \"réserve\",\n  \"résineux\",\n  \"résoudre\",\n  \"respect\",\n  \"rester\",\n  \"résultat\",\n  \"rétablir\",\n  \"retenir\",\n  \"réticule\",\n  \"retomber\",\n  \"retracer\",\n  \"réunion\",\n  \"réussir\",\n  \"revanche\",\n  \"revivre\",\n  \"révolte\",\n  \"révulsif\",\n  \"richesse\",\n  \"rideau\",\n  \"rieur\",\n  \"rigide\",\n  \"rigoler\",\n  \"rincer\",\n  \"riposter\",\n  \"risible\",\n  \"risque\",\n  \"rituel\",\n  \"rival\",\n  \"rivière\",\n  \"rocheux\",\n  \"romance\",\n  \"rompre\",\n  \"ronce\",\n  \"rondin\",\n  \"roseau\",\n  \"rosier\",\n  \"rotatif\",\n  \"rotor\",\n  \"rotule\",\n  \"rouge\",\n  \"rouille\",\n  \"rouleau\",\n  \"routine\",\n  \"royaume\",\n  \"ruban\",\n  \"rubis\",\n  \"ruche\",\n  \"ruelle\",\n  \"rugueux\",\n  \"ruiner\",\n  \"ruisseau\",\n  \"ruser\",\n  \"rustique\",\n  \"rythme\",\n  \"sabler\",\n  \"saboter\",\n  \"sabre\",\n  \"sacoche\",\n  \"safari\",\n  \"sagesse\",\n  \"saisir\",\n  \"salade\",\n  \"salive\",\n  \"salon\",\n  \"saluer\",\n  \"samedi\",\n  \"sanction\",\n  \"sanglier\",\n  \"sarcasme\",\n  \"sardine\",\n  \"saturer\",\n  \"saugrenu\",\n  \"saumon\",\n  \"sauter\",\n  \"sauvage\",\n  \"savant\",\n  \"savonner\",\n  \"scalpel\",\n  \"scandale\",\n  \"scélérat\",\n  \"scénario\",\n  \"sceptre\",\n  \"schéma\",\n  \"science\",\n  \"scinder\",\n  \"score\",\n  \"scrutin\",\n  \"sculpter\",\n  \"séance\",\n  \"sécable\",\n  \"sécher\",\n  \"secouer\",\n  \"sécréter\",\n  \"sédatif\",\n  \"séduire\",\n  \"seigneur\",\n  \"séjour\",\n  \"sélectif\",\n  \"semaine\",\n  \"sembler\",\n  \"semence\",\n  \"séminal\",\n  \"sénateur\",\n  \"sensible\",\n  \"sentence\",\n  \"séparer\",\n  \"séquence\",\n  \"serein\",\n  \"sergent\",\n  \"sérieux\",\n  \"serrure\",\n  \"sérum\",\n  \"service\",\n  \"sésame\",\n  \"sévir\",\n  \"sevrage\",\n  \"sextuple\",\n  \"sidéral\",\n  \"siècle\",\n  \"siéger\",\n  \"siffler\",\n  \"sigle\",\n  \"signal\",\n  \"silence\",\n  \"silicium\",\n  \"simple\",\n  \"sincère\",\n  \"sinistre\",\n  \"siphon\",\n  \"sirop\",\n  \"sismique\",\n  \"situer\",\n  \"skier\",\n  \"social\",\n  \"socle\",\n  \"sodium\",\n  \"soigneux\",\n  \"soldat\",\n  \"soleil\",\n  \"solitude\",\n  \"soluble\",\n  \"sombre\",\n  \"sommeil\",\n  \"somnoler\",\n  \"sonde\",\n  \"songeur\",\n  \"sonnette\",\n  \"sonore\",\n  \"sorcier\",\n  \"sortir\",\n  \"sosie\",\n  \"sottise\",\n  \"soucieux\",\n  \"soudure\",\n  \"souffle\",\n  \"soulever\",\n  \"soupape\",\n  \"source\",\n  \"soutirer\",\n  \"souvenir\",\n  \"spacieux\",\n  \"spatial\",\n  \"spécial\",\n  \"sphère\",\n  \"spiral\",\n  \"stable\",\n  \"station\",\n  \"sternum\",\n  \"stimulus\",\n  \"stipuler\",\n  \"strict\",\n  \"studieux\",\n  \"stupeur\",\n  \"styliste\",\n  \"sublime\",\n  \"substrat\",\n  \"subtil\",\n  \"subvenir\",\n  \"succès\",\n  \"sucre\",\n  \"suffixe\",\n  \"suggérer\",\n  \"suiveur\",\n  \"sulfate\",\n  \"superbe\",\n  \"supplier\",\n  \"surface\",\n  \"suricate\",\n  \"surmener\",\n  \"surprise\",\n  \"sursaut\",\n  \"survie\",\n  \"suspect\",\n  \"syllabe\",\n  \"symbole\",\n  \"symétrie\",\n  \"synapse\",\n  \"syntaxe\",\n  \"système\",\n  \"tabac\",\n  \"tablier\",\n  \"tactile\",\n  \"tailler\",\n  \"talent\",\n  \"talisman\",\n  \"talonner\",\n  \"tambour\",\n  \"tamiser\",\n  \"tangible\",\n  \"tapis\",\n  \"taquiner\",\n  \"tarder\",\n  \"tarif\",\n  \"tartine\",\n  \"tasse\",\n  \"tatami\",\n  \"tatouage\",\n  \"taupe\",\n  \"taureau\",\n  \"taxer\",\n  \"témoin\",\n  \"temporel\",\n  \"tenaille\",\n  \"tendre\",\n  \"teneur\",\n  \"tenir\",\n  \"tension\",\n  \"terminer\",\n  \"terne\",\n  \"terrible\",\n  \"tétine\",\n  \"texte\",\n  \"thème\",\n  \"théorie\",\n  \"thérapie\",\n  \"thorax\",\n  \"tibia\",\n  \"tiède\",\n  \"timide\",\n  \"tirelire\",\n  \"tiroir\",\n  \"tissu\",\n  \"titane\",\n  \"titre\",\n  \"tituber\",\n  \"toboggan\",\n  \"tolérant\",\n  \"tomate\",\n  \"tonique\",\n  \"tonneau\",\n  \"toponyme\",\n  \"torche\",\n  \"tordre\",\n  \"tornade\",\n  \"torpille\",\n  \"torrent\",\n  \"torse\",\n  \"tortue\",\n  \"totem\",\n  \"toucher\",\n  \"tournage\",\n  \"tousser\",\n  \"toxine\",\n  \"traction\",\n  \"trafic\",\n  \"tragique\",\n  \"trahir\",\n  \"train\",\n  \"trancher\",\n  \"travail\",\n  \"trèfle\",\n  \"tremper\",\n  \"trésor\",\n  \"treuil\",\n  \"triage\",\n  \"tribunal\",\n  \"tricoter\",\n  \"trilogie\",\n  \"triomphe\",\n  \"tripler\",\n  \"triturer\",\n  \"trivial\",\n  \"trombone\",\n  \"tronc\",\n  \"tropical\",\n  \"troupeau\",\n  \"tuile\",\n  \"tulipe\",\n  \"tumulte\",\n  \"tunnel\",\n  \"turbine\",\n  \"tuteur\",\n  \"tutoyer\",\n  \"tuyau\",\n  \"tympan\",\n  \"typhon\",\n  \"typique\",\n  \"tyran\",\n  \"ubuesque\",\n  \"ultime\",\n  \"ultrason\",\n  \"unanime\",\n  \"unifier\",\n  \"union\",\n  \"unique\",\n  \"unitaire\",\n  \"univers\",\n  \"uranium\",\n  \"urbain\",\n  \"urticant\",\n  \"usage\",\n  \"usine\",\n  \"usuel\",\n  \"usure\",\n  \"utile\",\n  \"utopie\",\n  \"vacarme\",\n  \"vaccin\",\n  \"vagabond\",\n  \"vague\",\n  \"vaillant\",\n  \"vaincre\",\n  \"vaisseau\",\n  \"valable\",\n  \"valise\",\n  \"vallon\",\n  \"valve\",\n  \"vampire\",\n  \"vanille\",\n  \"vapeur\",\n  \"varier\",\n  \"vaseux\",\n  \"vassal\",\n  \"vaste\",\n  \"vecteur\",\n  \"vedette\",\n  \"végétal\",\n  \"véhicule\",\n  \"veinard\",\n  \"véloce\",\n  \"vendredi\",\n  \"vénérer\",\n  \"venger\",\n  \"venimeux\",\n  \"ventouse\",\n  \"verdure\",\n  \"vérin\",\n  \"vernir\",\n  \"verrou\",\n  \"verser\",\n  \"vertu\",\n  \"veston\",\n  \"vétéran\",\n  \"vétuste\",\n  \"vexant\",\n  \"vexer\",\n  \"viaduc\",\n  \"viande\",\n  \"victoire\",\n  \"vidange\",\n  \"vidéo\",\n  \"vignette\",\n  \"vigueur\",\n  \"vilain\",\n  \"village\",\n  \"vinaigre\",\n  \"violon\",\n  \"vipère\",\n  \"virement\",\n  \"virtuose\",\n  \"virus\",\n  \"visage\",\n  \"viseur\",\n  \"vision\",\n  \"visqueux\",\n  \"visuel\",\n  \"vital\",\n  \"vitesse\",\n  \"viticole\",\n  \"vitrine\",\n  \"vivace\",\n  \"vivipare\",\n  \"vocation\",\n  \"voguer\",\n  \"voile\",\n  \"voisin\",\n  \"voiture\",\n  \"volaille\",\n  \"volcan\",\n  \"voltiger\",\n  \"volume\",\n  \"vorace\",\n  \"vortex\",\n  \"voter\",\n  \"vouloir\",\n  \"voyage\",\n  \"voyelle\",\n  \"wagon\",\n  \"xénon\",\n  \"yacht\",\n  \"zèbre\",\n  \"zénith\",\n  \"zeste\",\n  \"zoologie\"\n]\n","module.exports=[\n  \"가격\",\n  \"가끔\",\n  \"가난\",\n  \"가능\",\n  \"가득\",\n  \"가르침\",\n  \"가뭄\",\n  \"가방\",\n  \"가상\",\n  \"가슴\",\n  \"가운데\",\n  \"가을\",\n  \"가이드\",\n  \"가입\",\n  \"가장\",\n  \"가정\",\n  \"가족\",\n  \"가죽\",\n  \"각오\",\n  \"각자\",\n  \"간격\",\n  \"간부\",\n  \"간섭\",\n  \"간장\",\n  \"간접\",\n  \"간판\",\n  \"갈등\",\n  \"갈비\",\n  \"갈색\",\n  \"갈증\",\n  \"감각\",\n  \"감기\",\n  \"감소\",\n  \"감수성\",\n  \"감자\",\n  \"감정\",\n  \"갑자기\",\n  \"강남\",\n  \"강당\",\n  \"강도\",\n  \"강력히\",\n  \"강변\",\n  \"강북\",\n  \"강사\",\n  \"강수량\",\n  \"강아지\",\n  \"강원도\",\n  \"강의\",\n  \"강제\",\n  \"강조\",\n  \"같이\",\n  \"개구리\",\n  \"개나리\",\n  \"개방\",\n  \"개별\",\n  \"개선\",\n  \"개성\",\n  \"개인\",\n  \"객관적\",\n  \"거실\",\n  \"거액\",\n  \"거울\",\n  \"거짓\",\n  \"거품\",\n  \"걱정\",\n  \"건강\",\n  \"건물\",\n  \"건설\",\n  \"건조\",\n  \"건축\",\n  \"걸음\",\n  \"검사\",\n  \"검토\",\n  \"게시판\",\n  \"게임\",\n  \"겨울\",\n  \"견해\",\n  \"결과\",\n  \"결국\",\n  \"결론\",\n  \"결석\",\n  \"결승\",\n  \"결심\",\n  \"결정\",\n  \"결혼\",\n  \"경계\",\n  \"경고\",\n  \"경기\",\n  \"경력\",\n  \"경복궁\",\n  \"경비\",\n  \"경상도\",\n  \"경영\",\n  \"경우\",\n  \"경쟁\",\n  \"경제\",\n  \"경주\",\n  \"경찰\",\n  \"경치\",\n  \"경향\",\n  \"경험\",\n  \"계곡\",\n  \"계단\",\n  \"계란\",\n  \"계산\",\n  \"계속\",\n  \"계약\",\n  \"계절\",\n  \"계층\",\n  \"계획\",\n  \"고객\",\n  \"고구려\",\n  \"고궁\",\n  \"고급\",\n  \"고등학생\",\n  \"고무신\",\n  \"고민\",\n  \"고양이\",\n  \"고장\",\n  \"고전\",\n  \"고집\",\n  \"고춧가루\",\n  \"고통\",\n  \"고향\",\n  \"곡식\",\n  \"골목\",\n  \"골짜기\",\n  \"골프\",\n  \"공간\",\n  \"공개\",\n  \"공격\",\n  \"공군\",\n  \"공급\",\n  \"공기\",\n  \"공동\",\n  \"공무원\",\n  \"공부\",\n  \"공사\",\n  \"공식\",\n  \"공업\",\n  \"공연\",\n  \"공원\",\n  \"공장\",\n  \"공짜\",\n  \"공책\",\n  \"공통\",\n  \"공포\",\n  \"공항\",\n  \"공휴일\",\n  \"과목\",\n  \"과일\",\n  \"과장\",\n  \"과정\",\n  \"과학\",\n  \"관객\",\n  \"관계\",\n  \"관광\",\n  \"관념\",\n  \"관람\",\n  \"관련\",\n  \"관리\",\n  \"관습\",\n  \"관심\",\n  \"관점\",\n  \"관찰\",\n  \"광경\",\n  \"광고\",\n  \"광장\",\n  \"광주\",\n  \"괴로움\",\n  \"굉장히\",\n  \"교과서\",\n  \"교문\",\n  \"교복\",\n  \"교실\",\n  \"교양\",\n  \"교육\",\n  \"교장\",\n  \"교직\",\n  \"교통\",\n  \"교환\",\n  \"교훈\",\n  \"구경\",\n  \"구름\",\n  \"구멍\",\n  \"구별\",\n  \"구분\",\n  \"구석\",\n  \"구성\",\n  \"구속\",\n  \"구역\",\n  \"구입\",\n  \"구청\",\n  \"구체적\",\n  \"국가\",\n  \"국기\",\n  \"국내\",\n  \"국립\",\n  \"국물\",\n  \"국민\",\n  \"국수\",\n  \"국어\",\n  \"국왕\",\n  \"국적\",\n  \"국제\",\n  \"국회\",\n  \"군대\",\n  \"군사\",\n  \"군인\",\n  \"궁극적\",\n  \"권리\",\n  \"권위\",\n  \"권투\",\n  \"귀국\",\n  \"귀신\",\n  \"규정\",\n  \"규칙\",\n  \"균형\",\n  \"그날\",\n  \"그냥\",\n  \"그늘\",\n  \"그러나\",\n  \"그룹\",\n  \"그릇\",\n  \"그림\",\n  \"그제서야\",\n  \"그토록\",\n  \"극복\",\n  \"극히\",\n  \"근거\",\n  \"근교\",\n  \"근래\",\n  \"근로\",\n  \"근무\",\n  \"근본\",\n  \"근원\",\n  \"근육\",\n  \"근처\",\n  \"글씨\",\n  \"글자\",\n  \"금강산\",\n  \"금고\",\n  \"금년\",\n  \"금메달\",\n  \"금액\",\n  \"금연\",\n  \"금요일\",\n  \"금지\",\n  \"긍정적\",\n  \"기간\",\n  \"기관\",\n  \"기념\",\n  \"기능\",\n  \"기독교\",\n  \"기둥\",\n  \"기록\",\n  \"기름\",\n  \"기법\",\n  \"기본\",\n  \"기분\",\n  \"기쁨\",\n  \"기숙사\",\n  \"기술\",\n  \"기억\",\n  \"기업\",\n  \"기온\",\n  \"기운\",\n  \"기원\",\n  \"기적\",\n  \"기준\",\n  \"기침\",\n  \"기혼\",\n  \"기획\",\n  \"긴급\",\n  \"긴장\",\n  \"길이\",\n  \"김밥\",\n  \"김치\",\n  \"김포공항\",\n  \"깍두기\",\n  \"깜빡\",\n  \"깨달음\",\n  \"깨소금\",\n  \"껍질\",\n  \"꼭대기\",\n  \"꽃잎\",\n  \"나들이\",\n  \"나란히\",\n  \"나머지\",\n  \"나물\",\n  \"나침반\",\n  \"나흘\",\n  \"낙엽\",\n  \"난방\",\n  \"날개\",\n  \"날씨\",\n  \"날짜\",\n  \"남녀\",\n  \"남대문\",\n  \"남매\",\n  \"남산\",\n  \"남자\",\n  \"남편\",\n  \"남학생\",\n  \"낭비\",\n  \"낱말\",\n  \"내년\",\n  \"내용\",\n  \"내일\",\n  \"냄비\",\n  \"냄새\",\n  \"냇물\",\n  \"냉동\",\n  \"냉면\",\n  \"냉방\",\n  \"냉장고\",\n  \"넥타이\",\n  \"넷째\",\n  \"노동\",\n  \"노란색\",\n  \"노력\",\n  \"노인\",\n  \"녹음\",\n  \"녹차\",\n  \"녹화\",\n  \"논리\",\n  \"논문\",\n  \"논쟁\",\n  \"놀이\",\n  \"농구\",\n  \"농담\",\n  \"농민\",\n  \"농부\",\n  \"농업\",\n  \"농장\",\n  \"농촌\",\n  \"높이\",\n  \"눈동자\",\n  \"눈물\",\n  \"눈썹\",\n  \"뉴욕\",\n  \"느낌\",\n  \"늑대\",\n  \"능동적\",\n  \"능력\",\n  \"다방\",\n  \"다양성\",\n  \"다음\",\n  \"다이어트\",\n  \"다행\",\n  \"단계\",\n  \"단골\",\n  \"단독\",\n  \"단맛\",\n  \"단순\",\n  \"단어\",\n  \"단위\",\n  \"단점\",\n  \"단체\",\n  \"단추\",\n  \"단편\",\n  \"단풍\",\n  \"달걀\",\n  \"달러\",\n  \"달력\",\n  \"달리\",\n  \"닭고기\",\n  \"담당\",\n  \"담배\",\n  \"담요\",\n  \"담임\",\n  \"답변\",\n  \"답장\",\n  \"당근\",\n  \"당분간\",\n  \"당연히\",\n  \"당장\",\n  \"대규모\",\n  \"대낮\",\n  \"대단히\",\n  \"대답\",\n  \"대도시\",\n  \"대략\",\n  \"대량\",\n  \"대륙\",\n  \"대문\",\n  \"대부분\",\n  \"대신\",\n  \"대응\",\n  \"대장\",\n  \"대전\",\n  \"대접\",\n  \"대중\",\n  \"대책\",\n  \"대출\",\n  \"대충\",\n  \"대통령\",\n  \"대학\",\n  \"대한민국\",\n  \"대합실\",\n  \"대형\",\n  \"덩어리\",\n  \"데이트\",\n  \"도대체\",\n  \"도덕\",\n  \"도둑\",\n  \"도망\",\n  \"도서관\",\n  \"도심\",\n  \"도움\",\n  \"도입\",\n  \"도자기\",\n  \"도저히\",\n  \"도전\",\n  \"도중\",\n  \"도착\",\n  \"독감\",\n  \"독립\",\n  \"독서\",\n  \"독일\",\n  \"독창적\",\n  \"동화책\",\n  \"뒷모습\",\n  \"뒷산\",\n  \"딸아이\",\n  \"마누라\",\n  \"마늘\",\n  \"마당\",\n  \"마라톤\",\n  \"마련\",\n  \"마무리\",\n  \"마사지\",\n  \"마약\",\n  \"마요네즈\",\n  \"마을\",\n  \"마음\",\n  \"마이크\",\n  \"마중\",\n  \"마지막\",\n  \"마찬가지\",\n  \"마찰\",\n  \"마흔\",\n  \"막걸리\",\n  \"막내\",\n  \"막상\",\n  \"만남\",\n  \"만두\",\n  \"만세\",\n  \"만약\",\n  \"만일\",\n  \"만점\",\n  \"만족\",\n  \"만화\",\n  \"많이\",\n  \"말기\",\n  \"말씀\",\n  \"말투\",\n  \"맘대로\",\n  \"망원경\",\n  \"매년\",\n  \"매달\",\n  \"매력\",\n  \"매번\",\n  \"매스컴\",\n  \"매일\",\n  \"매장\",\n  \"맥주\",\n  \"먹이\",\n  \"먼저\",\n  \"먼지\",\n  \"멀리\",\n  \"메일\",\n  \"며느리\",\n  \"며칠\",\n  \"면담\",\n  \"멸치\",\n  \"명단\",\n  \"명령\",\n  \"명예\",\n  \"명의\",\n  \"명절\",\n  \"명칭\",\n  \"명함\",\n  \"모금\",\n  \"모니터\",\n  \"모델\",\n  \"모든\",\n  \"모범\",\n  \"모습\",\n  \"모양\",\n  \"모임\",\n  \"모조리\",\n  \"모집\",\n  \"모퉁이\",\n  \"목걸이\",\n  \"목록\",\n  \"목사\",\n  \"목소리\",\n  \"목숨\",\n  \"목적\",\n  \"목표\",\n  \"몰래\",\n  \"몸매\",\n  \"몸무게\",\n  \"몸살\",\n  \"몸속\",\n  \"몸짓\",\n  \"몸통\",\n  \"몹시\",\n  \"무관심\",\n  \"무궁화\",\n  \"무더위\",\n  \"무덤\",\n  \"무릎\",\n  \"무슨\",\n  \"무엇\",\n  \"무역\",\n  \"무용\",\n  \"무조건\",\n  \"무지개\",\n  \"무척\",\n  \"문구\",\n  \"문득\",\n  \"문법\",\n  \"문서\",\n  \"문제\",\n  \"문학\",\n  \"문화\",\n  \"물가\",\n  \"물건\",\n  \"물결\",\n  \"물고기\",\n  \"물론\",\n  \"물리학\",\n  \"물음\",\n  \"물질\",\n  \"물체\",\n  \"미국\",\n  \"미디어\",\n  \"미사일\",\n  \"미술\",\n  \"미역\",\n  \"미용실\",\n  \"미움\",\n  \"미인\",\n  \"미팅\",\n  \"미혼\",\n  \"민간\",\n  \"민족\",\n  \"민주\",\n  \"믿음\",\n  \"밀가루\",\n  \"밀리미터\",\n  \"밑바닥\",\n  \"바가지\",\n  \"바구니\",\n  \"바나나\",\n  \"바늘\",\n  \"바닥\",\n  \"바닷가\",\n  \"바람\",\n  \"바이러스\",\n  \"바탕\",\n  \"박물관\",\n  \"박사\",\n  \"박수\",\n  \"반대\",\n  \"반드시\",\n  \"반말\",\n  \"반발\",\n  \"반성\",\n  \"반응\",\n  \"반장\",\n  \"반죽\",\n  \"반지\",\n  \"반찬\",\n  \"받침\",\n  \"발가락\",\n  \"발걸음\",\n  \"발견\",\n  \"발달\",\n  \"발레\",\n  \"발목\",\n  \"발바닥\",\n  \"발생\",\n  \"발음\",\n  \"발자국\",\n  \"발전\",\n  \"발톱\",\n  \"발표\",\n  \"밤하늘\",\n  \"밥그릇\",\n  \"밥맛\",\n  \"밥상\",\n  \"밥솥\",\n  \"방금\",\n  \"방면\",\n  \"방문\",\n  \"방바닥\",\n  \"방법\",\n  \"방송\",\n  \"방식\",\n  \"방안\",\n  \"방울\",\n  \"방지\",\n  \"방학\",\n  \"방해\",\n  \"방향\",\n  \"배경\",\n  \"배꼽\",\n  \"배달\",\n  \"배드민턴\",\n  \"백두산\",\n  \"백색\",\n  \"백성\",\n  \"백인\",\n  \"백제\",\n  \"백화점\",\n  \"버릇\",\n  \"버섯\",\n  \"버튼\",\n  \"번개\",\n  \"번역\",\n  \"번지\",\n  \"번호\",\n  \"벌금\",\n  \"벌레\",\n  \"벌써\",\n  \"범위\",\n  \"범인\",\n  \"범죄\",\n  \"법률\",\n  \"법원\",\n  \"법적\",\n  \"법칙\",\n  \"베이징\",\n  \"벨트\",\n  \"변경\",\n  \"변동\",\n  \"변명\",\n  \"변신\",\n  \"변호사\",\n  \"변화\",\n  \"별도\",\n  \"별명\",\n  \"별일\",\n  \"병실\",\n  \"병아리\",\n  \"병원\",\n  \"보관\",\n  \"보너스\",\n  \"보라색\",\n  \"보람\",\n  \"보름\",\n  \"보상\",\n  \"보안\",\n  \"보자기\",\n  \"보장\",\n  \"보전\",\n  \"보존\",\n  \"보통\",\n  \"보편적\",\n  \"보험\",\n  \"복도\",\n  \"복사\",\n  \"복숭아\",\n  \"복습\",\n  \"볶음\",\n  \"본격적\",\n  \"본래\",\n  \"본부\",\n  \"본사\",\n  \"본성\",\n  \"본인\",\n  \"본질\",\n  \"볼펜\",\n  \"봉사\",\n  \"봉지\",\n  \"봉투\",\n  \"부근\",\n  \"부끄러움\",\n  \"부담\",\n  \"부동산\",\n  \"부문\",\n  \"부분\",\n  \"부산\",\n  \"부상\",\n  \"부엌\",\n  \"부인\",\n  \"부작용\",\n  \"부장\",\n  \"부정\",\n  \"부족\",\n  \"부지런히\",\n  \"부친\",\n  \"부탁\",\n  \"부품\",\n  \"부회장\",\n  \"북부\",\n  \"북한\",\n  \"분노\",\n  \"분량\",\n  \"분리\",\n  \"분명\",\n  \"분석\",\n  \"분야\",\n  \"분위기\",\n  \"분필\",\n  \"분홍색\",\n  \"불고기\",\n  \"불과\",\n  \"불교\",\n  \"불꽃\",\n  \"불만\",\n  \"불법\",\n  \"불빛\",\n  \"불안\",\n  \"불이익\",\n  \"불행\",\n  \"브랜드\",\n  \"비극\",\n  \"비난\",\n  \"비닐\",\n  \"비둘기\",\n  \"비디오\",\n  \"비로소\",\n  \"비만\",\n  \"비명\",\n  \"비밀\",\n  \"비바람\",\n  \"비빔밥\",\n  \"비상\",\n  \"비용\",\n  \"비율\",\n  \"비중\",\n  \"비타민\",\n  \"비판\",\n  \"빌딩\",\n  \"빗물\",\n  \"빗방울\",\n  \"빗줄기\",\n  \"빛깔\",\n  \"빨간색\",\n  \"빨래\",\n  \"빨리\",\n  \"사건\",\n  \"사계절\",\n  \"사나이\",\n  \"사냥\",\n  \"사람\",\n  \"사랑\",\n  \"사립\",\n  \"사모님\",\n  \"사물\",\n  \"사방\",\n  \"사상\",\n  \"사생활\",\n  \"사설\",\n  \"사슴\",\n  \"사실\",\n  \"사업\",\n  \"사용\",\n  \"사월\",\n  \"사장\",\n  \"사전\",\n  \"사진\",\n  \"사촌\",\n  \"사춘기\",\n  \"사탕\",\n  \"사투리\",\n  \"사흘\",\n  \"산길\",\n  \"산부인과\",\n  \"산업\",\n  \"산책\",\n  \"살림\",\n  \"살인\",\n  \"살짝\",\n  \"삼계탕\",\n  \"삼국\",\n  \"삼십\",\n  \"삼월\",\n  \"삼촌\",\n  \"상관\",\n  \"상금\",\n  \"상대\",\n  \"상류\",\n  \"상반기\",\n  \"상상\",\n  \"상식\",\n  \"상업\",\n  \"상인\",\n  \"상자\",\n  \"상점\",\n  \"상처\",\n  \"상추\",\n  \"상태\",\n  \"상표\",\n  \"상품\",\n  \"상황\",\n  \"새벽\",\n  \"색깔\",\n  \"색연필\",\n  \"생각\",\n  \"생명\",\n  \"생물\",\n  \"생방송\",\n  \"생산\",\n  \"생선\",\n  \"생신\",\n  \"생일\",\n  \"생활\",\n  \"서랍\",\n  \"서른\",\n  \"서명\",\n  \"서민\",\n  \"서비스\",\n  \"서양\",\n  \"서울\",\n  \"서적\",\n  \"서점\",\n  \"서쪽\",\n  \"서클\",\n  \"석사\",\n  \"석유\",\n  \"선거\",\n  \"선물\",\n  \"선배\",\n  \"선생\",\n  \"선수\",\n  \"선원\",\n  \"선장\",\n  \"선전\",\n  \"선택\",\n  \"선풍기\",\n  \"설거지\",\n  \"설날\",\n  \"설렁탕\",\n  \"설명\",\n  \"설문\",\n  \"설사\",\n  \"설악산\",\n  \"설치\",\n  \"설탕\",\n  \"섭씨\",\n  \"성공\",\n  \"성당\",\n  \"성명\",\n  \"성별\",\n  \"성인\",\n  \"성장\",\n  \"성적\",\n  \"성질\",\n  \"성함\",\n  \"세금\",\n  \"세미나\",\n  \"세상\",\n  \"세월\",\n  \"세종대왕\",\n  \"세탁\",\n  \"센터\",\n  \"센티미터\",\n  \"셋째\",\n  \"소규모\",\n  \"소극적\",\n  \"소금\",\n  \"소나기\",\n  \"소년\",\n  \"소득\",\n  \"소망\",\n  \"소문\",\n  \"소설\",\n  \"소속\",\n  \"소아과\",\n  \"소용\",\n  \"소원\",\n  \"소음\",\n  \"소중히\",\n  \"소지품\",\n  \"소질\",\n  \"소풍\",\n  \"소형\",\n  \"속담\",\n  \"속도\",\n  \"속옷\",\n  \"손가락\",\n  \"손길\",\n  \"손녀\",\n  \"손님\",\n  \"손등\",\n  \"손목\",\n  \"손뼉\",\n  \"손실\",\n  \"손질\",\n  \"손톱\",\n  \"손해\",\n  \"솔직히\",\n  \"솜씨\",\n  \"송아지\",\n  \"송이\",\n  \"송편\",\n  \"쇠고기\",\n  \"쇼핑\",\n  \"수건\",\n  \"수년\",\n  \"수단\",\n  \"수돗물\",\n  \"수동적\",\n  \"수면\",\n  \"수명\",\n  \"수박\",\n  \"수상\",\n  \"수석\",\n  \"수술\",\n  \"수시로\",\n  \"수업\",\n  \"수염\",\n  \"수영\",\n  \"수입\",\n  \"수준\",\n  \"수집\",\n  \"수출\",\n  \"수컷\",\n  \"수필\",\n  \"수학\",\n  \"수험생\",\n  \"수화기\",\n  \"숙녀\",\n  \"숙소\",\n  \"숙제\",\n  \"순간\",\n  \"순서\",\n  \"순수\",\n  \"순식간\",\n  \"순위\",\n  \"숟가락\",\n  \"술병\",\n  \"술집\",\n  \"숫자\",\n  \"스님\",\n  \"스물\",\n  \"스스로\",\n  \"스승\",\n  \"스웨터\",\n  \"스위치\",\n  \"스케이트\",\n  \"스튜디오\",\n  \"스트레스\",\n  \"스포츠\",\n  \"슬쩍\",\n  \"슬픔\",\n  \"습관\",\n  \"습기\",\n  \"승객\",\n  \"승리\",\n  \"승부\",\n  \"승용차\",\n  \"승진\",\n  \"시각\",\n  \"시간\",\n  \"시골\",\n  \"시금치\",\n  \"시나리오\",\n  \"시댁\",\n  \"시리즈\",\n  \"시멘트\",\n  \"시민\",\n  \"시부모\",\n  \"시선\",\n  \"시설\",\n  \"시스템\",\n  \"시아버지\",\n  \"시어머니\",\n  \"시월\",\n  \"시인\",\n  \"시일\",\n  \"시작\",\n  \"시장\",\n  \"시절\",\n  \"시점\",\n  \"시중\",\n  \"시즌\",\n  \"시집\",\n  \"시청\",\n  \"시합\",\n  \"시험\",\n  \"식구\",\n  \"식기\",\n  \"식당\",\n  \"식량\",\n  \"식료품\",\n  \"식물\",\n  \"식빵\",\n  \"식사\",\n  \"식생활\",\n  \"식초\",\n  \"식탁\",\n  \"식품\",\n  \"신고\",\n  \"신규\",\n  \"신념\",\n  \"신문\",\n  \"신발\",\n  \"신비\",\n  \"신사\",\n  \"신세\",\n  \"신용\",\n  \"신제품\",\n  \"신청\",\n  \"신체\",\n  \"신화\",\n  \"실감\",\n  \"실내\",\n  \"실력\",\n  \"실례\",\n  \"실망\",\n  \"실수\",\n  \"실습\",\n  \"실시\",\n  \"실장\",\n  \"실정\",\n  \"실질적\",\n  \"실천\",\n  \"실체\",\n  \"실컷\",\n  \"실태\",\n  \"실패\",\n  \"실험\",\n  \"실현\",\n  \"심리\",\n  \"심부름\",\n  \"심사\",\n  \"심장\",\n  \"심정\",\n  \"심판\",\n  \"쌍둥이\",\n  \"씨름\",\n  \"씨앗\",\n  \"아가씨\",\n  \"아나운서\",\n  \"아드님\",\n  \"아들\",\n  \"아쉬움\",\n  \"아스팔트\",\n  \"아시아\",\n  \"아울러\",\n  \"아저씨\",\n  \"아줌마\",\n  \"아직\",\n  \"아침\",\n  \"아파트\",\n  \"아프리카\",\n  \"아픔\",\n  \"아홉\",\n  \"아흔\",\n  \"악기\",\n  \"악몽\",\n  \"악수\",\n  \"안개\",\n  \"안경\",\n  \"안과\",\n  \"안내\",\n  \"안녕\",\n  \"안동\",\n  \"안방\",\n  \"안부\",\n  \"안주\",\n  \"알루미늄\",\n  \"알코올\",\n  \"암시\",\n  \"암컷\",\n  \"압력\",\n  \"앞날\",\n  \"앞문\",\n  \"애인\",\n  \"애정\",\n  \"액수\",\n  \"앨범\",\n  \"야간\",\n  \"야단\",\n  \"야옹\",\n  \"약간\",\n  \"약국\",\n  \"약속\",\n  \"약수\",\n  \"약점\",\n  \"약품\",\n  \"약혼녀\",\n  \"양념\",\n  \"양력\",\n  \"양말\",\n  \"양배추\",\n  \"양주\",\n  \"양파\",\n  \"어둠\",\n  \"어려움\",\n  \"어른\",\n  \"어젯밤\",\n  \"어쨌든\",\n  \"어쩌다가\",\n  \"어쩐지\",\n  \"언니\",\n  \"언덕\",\n  \"언론\",\n  \"언어\",\n  \"얼굴\",\n  \"얼른\",\n  \"얼음\",\n  \"얼핏\",\n  \"엄마\",\n  \"업무\",\n  \"업종\",\n  \"업체\",\n  \"엉덩이\",\n  \"엉망\",\n  \"엉터리\",\n  \"엊그제\",\n  \"에너지\",\n  \"에어컨\",\n  \"엔진\",\n  \"여건\",\n  \"여고생\",\n  \"여관\",\n  \"여군\",\n  \"여권\",\n  \"여대생\",\n  \"여덟\",\n  \"여동생\",\n  \"여든\",\n  \"여론\",\n  \"여름\",\n  \"여섯\",\n  \"여성\",\n  \"여왕\",\n  \"여인\",\n  \"여전히\",\n  \"여직원\",\n  \"여학생\",\n  \"여행\",\n  \"역사\",\n  \"역시\",\n  \"역할\",\n  \"연결\",\n  \"연구\",\n  \"연극\",\n  \"연기\",\n  \"연락\",\n  \"연설\",\n  \"연세\",\n  \"연속\",\n  \"연습\",\n  \"연애\",\n  \"연예인\",\n  \"연인\",\n  \"연장\",\n  \"연주\",\n  \"연출\",\n  \"연필\",\n  \"연합\",\n  \"연휴\",\n  \"열기\",\n  \"열매\",\n  \"열쇠\",\n  \"열심히\",\n  \"열정\",\n  \"열차\",\n  \"열흘\",\n  \"염려\",\n  \"엽서\",\n  \"영국\",\n  \"영남\",\n  \"영상\",\n  \"영양\",\n  \"영역\",\n  \"영웅\",\n  \"영원히\",\n  \"영하\",\n  \"영향\",\n  \"영혼\",\n  \"영화\",\n  \"옆구리\",\n  \"옆방\",\n  \"옆집\",\n  \"예감\",\n  \"예금\",\n  \"예방\",\n  \"예산\",\n  \"예상\",\n  \"예선\",\n  \"예술\",\n  \"예습\",\n  \"예식장\",\n  \"예약\",\n  \"예전\",\n  \"예절\",\n  \"예정\",\n  \"예컨대\",\n  \"옛날\",\n  \"오늘\",\n  \"오락\",\n  \"오랫동안\",\n  \"오렌지\",\n  \"오로지\",\n  \"오른발\",\n  \"오븐\",\n  \"오십\",\n  \"오염\",\n  \"오월\",\n  \"오전\",\n  \"오직\",\n  \"오징어\",\n  \"오페라\",\n  \"오피스텔\",\n  \"오히려\",\n  \"옥상\",\n  \"옥수수\",\n  \"온갖\",\n  \"온라인\",\n  \"온몸\",\n  \"온종일\",\n  \"온통\",\n  \"올가을\",\n  \"올림픽\",\n  \"올해\",\n  \"옷차림\",\n  \"와이셔츠\",\n  \"와인\",\n  \"완성\",\n  \"완전\",\n  \"왕비\",\n  \"왕자\",\n  \"왜냐하면\",\n  \"왠지\",\n  \"외갓집\",\n  \"외국\",\n  \"외로움\",\n  \"외삼촌\",\n  \"외출\",\n  \"외침\",\n  \"외할머니\",\n  \"왼발\",\n  \"왼손\",\n  \"왼쪽\",\n  \"요금\",\n  \"요일\",\n  \"요즘\",\n  \"요청\",\n  \"용기\",\n  \"용서\",\n  \"용어\",\n  \"우산\",\n  \"우선\",\n  \"우승\",\n  \"우연히\",\n  \"우정\",\n  \"우체국\",\n  \"우편\",\n  \"운동\",\n  \"운명\",\n  \"운반\",\n  \"운전\",\n  \"운행\",\n  \"울산\",\n  \"울음\",\n  \"움직임\",\n  \"웃어른\",\n  \"웃음\",\n  \"워낙\",\n  \"원고\",\n  \"원래\",\n  \"원서\",\n  \"원숭이\",\n  \"원인\",\n  \"원장\",\n  \"원피스\",\n  \"월급\",\n  \"월드컵\",\n  \"월세\",\n  \"월요일\",\n  \"웨이터\",\n  \"위반\",\n  \"위법\",\n  \"위성\",\n  \"위원\",\n  \"위험\",\n  \"위협\",\n  \"윗사람\",\n  \"유난히\",\n  \"유럽\",\n  \"유명\",\n  \"유물\",\n  \"유산\",\n  \"유적\",\n  \"유치원\",\n  \"유학\",\n  \"유행\",\n  \"유형\",\n  \"육군\",\n  \"육상\",\n  \"육십\",\n  \"육체\",\n  \"은행\",\n  \"음력\",\n  \"음료\",\n  \"음반\",\n  \"음성\",\n  \"음식\",\n  \"음악\",\n  \"음주\",\n  \"의견\",\n  \"의논\",\n  \"의문\",\n  \"의복\",\n  \"의식\",\n  \"의심\",\n  \"의외로\",\n  \"의욕\",\n  \"의원\",\n  \"의학\",\n  \"이것\",\n  \"이곳\",\n  \"이념\",\n  \"이놈\",\n  \"이달\",\n  \"이대로\",\n  \"이동\",\n  \"이렇게\",\n  \"이력서\",\n  \"이론적\",\n  \"이름\",\n  \"이민\",\n  \"이발소\",\n  \"이별\",\n  \"이불\",\n  \"이빨\",\n  \"이상\",\n  \"이성\",\n  \"이슬\",\n  \"이야기\",\n  \"이용\",\n  \"이웃\",\n  \"이월\",\n  \"이윽고\",\n  \"이익\",\n  \"이전\",\n  \"이중\",\n  \"이튿날\",\n  \"이틀\",\n  \"이혼\",\n  \"인간\",\n  \"인격\",\n  \"인공\",\n  \"인구\",\n  \"인근\",\n  \"인기\",\n  \"인도\",\n  \"인류\",\n  \"인물\",\n  \"인생\",\n  \"인쇄\",\n  \"인연\",\n  \"인원\",\n  \"인재\",\n  \"인종\",\n  \"인천\",\n  \"인체\",\n  \"인터넷\",\n  \"인하\",\n  \"인형\",\n  \"일곱\",\n  \"일기\",\n  \"일단\",\n  \"일대\",\n  \"일등\",\n  \"일반\",\n  \"일본\",\n  \"일부\",\n  \"일상\",\n  \"일생\",\n  \"일손\",\n  \"일요일\",\n  \"일월\",\n  \"일정\",\n  \"일종\",\n  \"일주일\",\n  \"일찍\",\n  \"일체\",\n  \"일치\",\n  \"일행\",\n  \"일회용\",\n  \"임금\",\n  \"임무\",\n  \"입대\",\n  \"입력\",\n  \"입맛\",\n  \"입사\",\n  \"입술\",\n  \"입시\",\n  \"입원\",\n  \"입장\",\n  \"입학\",\n  \"자가용\",\n  \"자격\",\n  \"자극\",\n  \"자동\",\n  \"자랑\",\n  \"자부심\",\n  \"자식\",\n  \"자신\",\n  \"자연\",\n  \"자원\",\n  \"자율\",\n  \"자전거\",\n  \"자정\",\n  \"자존심\",\n  \"자판\",\n  \"작가\",\n  \"작년\",\n  \"작성\",\n  \"작업\",\n  \"작용\",\n  \"작은딸\",\n  \"작품\",\n  \"잔디\",\n  \"잔뜩\",\n  \"잔치\",\n  \"잘못\",\n  \"잠깐\",\n  \"잠수함\",\n  \"잠시\",\n  \"잠옷\",\n  \"잠자리\",\n  \"잡지\",\n  \"장관\",\n  \"장군\",\n  \"장기간\",\n  \"장래\",\n  \"장례\",\n  \"장르\",\n  \"장마\",\n  \"장면\",\n  \"장모\",\n  \"장미\",\n  \"장비\",\n  \"장사\",\n  \"장소\",\n  \"장식\",\n  \"장애인\",\n  \"장인\",\n  \"장점\",\n  \"장차\",\n  \"장학금\",\n  \"재능\",\n  \"재빨리\",\n  \"재산\",\n  \"재생\",\n  \"재작년\",\n  \"재정\",\n  \"재채기\",\n  \"재판\",\n  \"재학\",\n  \"재활용\",\n  \"저것\",\n  \"저고리\",\n  \"저곳\",\n  \"저녁\",\n  \"저런\",\n  \"저렇게\",\n  \"저번\",\n  \"저울\",\n  \"저절로\",\n  \"저축\",\n  \"적극\",\n  \"적당히\",\n  \"적성\",\n  \"적용\",\n  \"적응\",\n  \"전개\",\n  \"전공\",\n  \"전기\",\n  \"전달\",\n  \"전라도\",\n  \"전망\",\n  \"전문\",\n  \"전반\",\n  \"전부\",\n  \"전세\",\n  \"전시\",\n  \"전용\",\n  \"전자\",\n  \"전쟁\",\n  \"전주\",\n  \"전철\",\n  \"전체\",\n  \"전통\",\n  \"전혀\",\n  \"전후\",\n  \"절대\",\n  \"절망\",\n  \"절반\",\n  \"절약\",\n  \"절차\",\n  \"점검\",\n  \"점수\",\n  \"점심\",\n  \"점원\",\n  \"점점\",\n  \"점차\",\n  \"접근\",\n  \"접시\",\n  \"접촉\",\n  \"젓가락\",\n  \"정거장\",\n  \"정도\",\n  \"정류장\",\n  \"정리\",\n  \"정말\",\n  \"정면\",\n  \"정문\",\n  \"정반대\",\n  \"정보\",\n  \"정부\",\n  \"정비\",\n  \"정상\",\n  \"정성\",\n  \"정오\",\n  \"정원\",\n  \"정장\",\n  \"정지\",\n  \"정치\",\n  \"정확히\",\n  \"제공\",\n  \"제과점\",\n  \"제대로\",\n  \"제목\",\n  \"제발\",\n  \"제법\",\n  \"제삿날\",\n  \"제안\",\n  \"제일\",\n  \"제작\",\n  \"제주도\",\n  \"제출\",\n  \"제품\",\n  \"제한\",\n  \"조각\",\n  \"조건\",\n  \"조금\",\n  \"조깅\",\n  \"조명\",\n  \"조미료\",\n  \"조상\",\n  \"조선\",\n  \"조용히\",\n  \"조절\",\n  \"조정\",\n  \"조직\",\n  \"존댓말\",\n  \"존재\",\n  \"졸업\",\n  \"졸음\",\n  \"종교\",\n  \"종로\",\n  \"종류\",\n  \"종소리\",\n  \"종업원\",\n  \"종종\",\n  \"종합\",\n  \"좌석\",\n  \"죄인\",\n  \"주관적\",\n  \"주름\",\n  \"주말\",\n  \"주머니\",\n  \"주먹\",\n  \"주문\",\n  \"주민\",\n  \"주방\",\n  \"주변\",\n  \"주식\",\n  \"주인\",\n  \"주일\",\n  \"주장\",\n  \"주전자\",\n  \"주택\",\n  \"준비\",\n  \"줄거리\",\n  \"줄기\",\n  \"줄무늬\",\n  \"중간\",\n  \"중계방송\",\n  \"중국\",\n  \"중년\",\n  \"중단\",\n  \"중독\",\n  \"중반\",\n  \"중부\",\n  \"중세\",\n  \"중소기업\",\n  \"중순\",\n  \"중앙\",\n  \"중요\",\n  \"중학교\",\n  \"즉석\",\n  \"즉시\",\n  \"즐거움\",\n  \"증가\",\n  \"증거\",\n  \"증권\",\n  \"증상\",\n  \"증세\",\n  \"지각\",\n  \"지갑\",\n  \"지경\",\n  \"지극히\",\n  \"지금\",\n  \"지급\",\n  \"지능\",\n  \"지름길\",\n  \"지리산\",\n  \"지방\",\n  \"지붕\",\n  \"지식\",\n  \"지역\",\n  \"지우개\",\n  \"지원\",\n  \"지적\",\n  \"지점\",\n  \"지진\",\n  \"지출\",\n  \"직선\",\n  \"직업\",\n  \"직원\",\n  \"직장\",\n  \"진급\",\n  \"진동\",\n  \"진로\",\n  \"진료\",\n  \"진리\",\n  \"진짜\",\n  \"진찰\",\n  \"진출\",\n  \"진통\",\n  \"진행\",\n  \"질문\",\n  \"질병\",\n  \"질서\",\n  \"짐작\",\n  \"집단\",\n  \"집안\",\n  \"집중\",\n  \"짜증\",\n  \"찌꺼기\",\n  \"차남\",\n  \"차라리\",\n  \"차량\",\n  \"차림\",\n  \"차별\",\n  \"차선\",\n  \"차츰\",\n  \"착각\",\n  \"찬물\",\n  \"찬성\",\n  \"참가\",\n  \"참기름\",\n  \"참새\",\n  \"참석\",\n  \"참여\",\n  \"참외\",\n  \"참조\",\n  \"찻잔\",\n  \"창가\",\n  \"창고\",\n  \"창구\",\n  \"창문\",\n  \"창밖\",\n  \"창작\",\n  \"창조\",\n  \"채널\",\n  \"채점\",\n  \"책가방\",\n  \"책방\",\n  \"책상\",\n  \"책임\",\n  \"챔피언\",\n  \"처벌\",\n  \"처음\",\n  \"천국\",\n  \"천둥\",\n  \"천장\",\n  \"천재\",\n  \"천천히\",\n  \"철도\",\n  \"철저히\",\n  \"철학\",\n  \"첫날\",\n  \"첫째\",\n  \"청년\",\n  \"청바지\",\n  \"청소\",\n  \"청춘\",\n  \"체계\",\n  \"체력\",\n  \"체온\",\n  \"체육\",\n  \"체중\",\n  \"체험\",\n  \"초등학생\",\n  \"초반\",\n  \"초밥\",\n  \"초상화\",\n  \"초순\",\n  \"초여름\",\n  \"초원\",\n  \"초저녁\",\n  \"초점\",\n  \"초청\",\n  \"초콜릿\",\n  \"촛불\",\n  \"총각\",\n  \"총리\",\n  \"총장\",\n  \"촬영\",\n  \"최근\",\n  \"최상\",\n  \"최선\",\n  \"최신\",\n  \"최악\",\n  \"최종\",\n  \"추석\",\n  \"추억\",\n  \"추진\",\n  \"추천\",\n  \"추측\",\n  \"축구\",\n  \"축소\",\n  \"축제\",\n  \"축하\",\n  \"출근\",\n  \"출발\",\n  \"출산\",\n  \"출신\",\n  \"출연\",\n  \"출입\",\n  \"출장\",\n  \"출판\",\n  \"충격\",\n  \"충고\",\n  \"충돌\",\n  \"충분히\",\n  \"충청도\",\n  \"취업\",\n  \"취직\",\n  \"취향\",\n  \"치약\",\n  \"친구\",\n  \"친척\",\n  \"칠십\",\n  \"칠월\",\n  \"칠판\",\n  \"침대\",\n  \"침묵\",\n  \"침실\",\n  \"칫솔\",\n  \"칭찬\",\n  \"카메라\",\n  \"카운터\",\n  \"칼국수\",\n  \"캐릭터\",\n  \"캠퍼스\",\n  \"캠페인\",\n  \"커튼\",\n  \"컨디션\",\n  \"컬러\",\n  \"컴퓨터\",\n  \"코끼리\",\n  \"코미디\",\n  \"콘서트\",\n  \"콜라\",\n  \"콤플렉스\",\n  \"콩나물\",\n  \"쾌감\",\n  \"쿠데타\",\n  \"크림\",\n  \"큰길\",\n  \"큰딸\",\n  \"큰소리\",\n  \"큰아들\",\n  \"큰어머니\",\n  \"큰일\",\n  \"큰절\",\n  \"클래식\",\n  \"클럽\",\n  \"킬로\",\n  \"타입\",\n  \"타자기\",\n  \"탁구\",\n  \"탁자\",\n  \"탄생\",\n  \"태권도\",\n  \"태양\",\n  \"태풍\",\n  \"택시\",\n  \"탤런트\",\n  \"터널\",\n  \"터미널\",\n  \"테니스\",\n  \"테스트\",\n  \"테이블\",\n  \"텔레비전\",\n  \"토론\",\n  \"토마토\",\n  \"토요일\",\n  \"통계\",\n  \"통과\",\n  \"통로\",\n  \"통신\",\n  \"통역\",\n  \"통일\",\n  \"통장\",\n  \"통제\",\n  \"통증\",\n  \"통합\",\n  \"통화\",\n  \"퇴근\",\n  \"퇴원\",\n  \"퇴직금\",\n  \"튀김\",\n  \"트럭\",\n  \"특급\",\n  \"특별\",\n  \"특성\",\n  \"특수\",\n  \"특징\",\n  \"특히\",\n  \"튼튼히\",\n  \"티셔츠\",\n  \"파란색\",\n  \"파일\",\n  \"파출소\",\n  \"판결\",\n  \"판단\",\n  \"판매\",\n  \"판사\",\n  \"팔십\",\n  \"팔월\",\n  \"팝송\",\n  \"패션\",\n  \"팩스\",\n  \"팩시밀리\",\n  \"팬티\",\n  \"퍼센트\",\n  \"페인트\",\n  \"편견\",\n  \"편의\",\n  \"편지\",\n  \"편히\",\n  \"평가\",\n  \"평균\",\n  \"평생\",\n  \"평소\",\n  \"평양\",\n  \"평일\",\n  \"평화\",\n  \"포스터\",\n  \"포인트\",\n  \"포장\",\n  \"포함\",\n  \"표면\",\n  \"표정\",\n  \"표준\",\n  \"표현\",\n  \"품목\",\n  \"품질\",\n  \"풍경\",\n  \"풍속\",\n  \"풍습\",\n  \"프랑스\",\n  \"프린터\",\n  \"플라스틱\",\n  \"피곤\",\n  \"피망\",\n  \"피아노\",\n  \"필름\",\n  \"필수\",\n  \"필요\",\n  \"필자\",\n  \"필통\",\n  \"핑계\",\n  \"하느님\",\n  \"하늘\",\n  \"하드웨어\",\n  \"하룻밤\",\n  \"하반기\",\n  \"하숙집\",\n  \"하순\",\n  \"하여튼\",\n  \"하지만\",\n  \"하천\",\n  \"하품\",\n  \"하필\",\n  \"학과\",\n  \"학교\",\n  \"학급\",\n  \"학기\",\n  \"학년\",\n  \"학력\",\n  \"학번\",\n  \"학부모\",\n  \"학비\",\n  \"학생\",\n  \"학술\",\n  \"학습\",\n  \"학용품\",\n  \"학원\",\n  \"학위\",\n  \"학자\",\n  \"학점\",\n  \"한계\",\n  \"한글\",\n  \"한꺼번에\",\n  \"한낮\",\n  \"한눈\",\n  \"한동안\",\n  \"한때\",\n  \"한라산\",\n  \"한마디\",\n  \"한문\",\n  \"한번\",\n  \"한복\",\n  \"한식\",\n  \"한여름\",\n  \"한쪽\",\n  \"할머니\",\n  \"할아버지\",\n  \"할인\",\n  \"함께\",\n  \"함부로\",\n  \"합격\",\n  \"합리적\",\n  \"항공\",\n  \"항구\",\n  \"항상\",\n  \"항의\",\n  \"해결\",\n  \"해군\",\n  \"해답\",\n  \"해당\",\n  \"해물\",\n  \"해석\",\n  \"해설\",\n  \"해수욕장\",\n  \"해안\",\n  \"핵심\",\n  \"핸드백\",\n  \"햄버거\",\n  \"햇볕\",\n  \"햇살\",\n  \"행동\",\n  \"행복\",\n  \"행사\",\n  \"행운\",\n  \"행위\",\n  \"향기\",\n  \"향상\",\n  \"향수\",\n  \"허락\",\n  \"허용\",\n  \"헬기\",\n  \"현관\",\n  \"현금\",\n  \"현대\",\n  \"현상\",\n  \"현실\",\n  \"현장\",\n  \"현재\",\n  \"현지\",\n  \"혈액\",\n  \"협력\",\n  \"형부\",\n  \"형사\",\n  \"형수\",\n  \"형식\",\n  \"형제\",\n  \"형태\",\n  \"형편\",\n  \"혜택\",\n  \"호기심\",\n  \"호남\",\n  \"호랑이\",\n  \"호박\",\n  \"호텔\",\n  \"호흡\",\n  \"혹시\",\n  \"홀로\",\n  \"홈페이지\",\n  \"홍보\",\n  \"홍수\",\n  \"홍차\",\n  \"화면\",\n  \"화분\",\n  \"화살\",\n  \"화요일\",\n  \"화장\",\n  \"화학\",\n  \"확보\",\n  \"확인\",\n  \"확장\",\n  \"확정\",\n  \"환갑\",\n  \"환경\",\n  \"환영\",\n  \"환율\",\n  \"환자\",\n  \"활기\",\n  \"활동\",\n  \"활발히\",\n  \"활용\",\n  \"활짝\",\n  \"회견\",\n  \"회관\",\n  \"회복\",\n  \"회색\",\n  \"회원\",\n  \"회장\",\n  \"회전\",\n  \"횟수\",\n  \"횡단보도\",\n  \"효율적\",\n  \"후반\",\n  \"후춧가루\",\n  \"훈련\",\n  \"훨씬\",\n  \"휴식\",\n  \"휴일\",\n  \"흉내\",\n  \"흐름\",\n  \"흑백\",\n  \"흑인\",\n  \"흔적\",\n  \"흔히\",\n  \"흥미\",\n  \"흥분\",\n  \"희곡\",\n  \"희망\",\n  \"희생\",\n  \"흰색\",\n  \"힘껏\"\n]\n","module.exports=[\n  \"ábaco\",\n  \"abdomen\",\n  \"abeja\",\n  \"abierto\",\n  \"abogado\",\n  \"abono\",\n  \"aborto\",\n  \"abrazo\",\n  \"abrir\",\n  \"abuelo\",\n  \"abuso\",\n  \"acabar\",\n  \"academia\",\n  \"acceso\",\n  \"acción\",\n  \"aceite\",\n  \"acelga\",\n  \"acento\",\n  \"aceptar\",\n  \"ácido\",\n  \"aclarar\",\n  \"acné\",\n  \"acoger\",\n  \"acoso\",\n  \"activo\",\n  \"acto\",\n  \"actriz\",\n  \"actuar\",\n  \"acudir\",\n  \"acuerdo\",\n  \"acusar\",\n  \"adicto\",\n  \"admitir\",\n  \"adoptar\",\n  \"adorno\",\n  \"aduana\",\n  \"adulto\",\n  \"aéreo\",\n  \"afectar\",\n  \"afición\",\n  \"afinar\",\n  \"afirmar\",\n  \"ágil\",\n  \"agitar\",\n  \"agonía\",\n  \"agosto\",\n  \"agotar\",\n  \"agregar\",\n  \"agrio\",\n  \"agua\",\n  \"agudo\",\n  \"águila\",\n  \"aguja\",\n  \"ahogo\",\n  \"ahorro\",\n  \"aire\",\n  \"aislar\",\n  \"ajedrez\",\n  \"ajeno\",\n  \"ajuste\",\n  \"alacrán\",\n  \"alambre\",\n  \"alarma\",\n  \"alba\",\n  \"álbum\",\n  \"alcalde\",\n  \"aldea\",\n  \"alegre\",\n  \"alejar\",\n  \"alerta\",\n  \"aleta\",\n  \"alfiler\",\n  \"alga\",\n  \"algodón\",\n  \"aliado\",\n  \"aliento\",\n  \"alivio\",\n  \"alma\",\n  \"almeja\",\n  \"almíbar\",\n  \"altar\",\n  \"alteza\",\n  \"altivo\",\n  \"alto\",\n  \"altura\",\n  \"alumno\",\n  \"alzar\",\n  \"amable\",\n  \"amante\",\n  \"amapola\",\n  \"amargo\",\n  \"amasar\",\n  \"ámbar\",\n  \"ámbito\",\n  \"ameno\",\n  \"amigo\",\n  \"amistad\",\n  \"amor\",\n  \"amparo\",\n  \"amplio\",\n  \"ancho\",\n  \"anciano\",\n  \"ancla\",\n  \"andar\",\n  \"andén\",\n  \"anemia\",\n  \"ángulo\",\n  \"anillo\",\n  \"ánimo\",\n  \"anís\",\n  \"anotar\",\n  \"antena\",\n  \"antiguo\",\n  \"antojo\",\n  \"anual\",\n  \"anular\",\n  \"anuncio\",\n  \"añadir\",\n  \"añejo\",\n  \"año\",\n  \"apagar\",\n  \"aparato\",\n  \"apetito\",\n  \"apio\",\n  \"aplicar\",\n  \"apodo\",\n  \"aporte\",\n  \"apoyo\",\n  \"aprender\",\n  \"aprobar\",\n  \"apuesta\",\n  \"apuro\",\n  \"arado\",\n  \"araña\",\n  \"arar\",\n  \"árbitro\",\n  \"árbol\",\n  \"arbusto\",\n  \"archivo\",\n  \"arco\",\n  \"arder\",\n  \"ardilla\",\n  \"arduo\",\n  \"área\",\n  \"árido\",\n  \"aries\",\n  \"armonía\",\n  \"arnés\",\n  \"aroma\",\n  \"arpa\",\n  \"arpón\",\n  \"arreglo\",\n  \"arroz\",\n  \"arruga\",\n  \"arte\",\n  \"artista\",\n  \"asa\",\n  \"asado\",\n  \"asalto\",\n  \"ascenso\",\n  \"asegurar\",\n  \"aseo\",\n  \"asesor\",\n  \"asiento\",\n  \"asilo\",\n  \"asistir\",\n  \"asno\",\n  \"asombro\",\n  \"áspero\",\n  \"astilla\",\n  \"astro\",\n  \"astuto\",\n  \"asumir\",\n  \"asunto\",\n  \"atajo\",\n  \"ataque\",\n  \"atar\",\n  \"atento\",\n  \"ateo\",\n  \"ático\",\n  \"atleta\",\n  \"átomo\",\n  \"atraer\",\n  \"atroz\",\n  \"atún\",\n  \"audaz\",\n  \"audio\",\n  \"auge\",\n  \"aula\",\n  \"aumento\",\n  \"ausente\",\n  \"autor\",\n  \"aval\",\n  \"avance\",\n  \"avaro\",\n  \"ave\",\n  \"avellana\",\n  \"avena\",\n  \"avestruz\",\n  \"avión\",\n  \"aviso\",\n  \"ayer\",\n  \"ayuda\",\n  \"ayuno\",\n  \"azafrán\",\n  \"azar\",\n  \"azote\",\n  \"azúcar\",\n  \"azufre\",\n  \"azul\",\n  \"baba\",\n  \"babor\",\n  \"bache\",\n  \"bahía\",\n  \"baile\",\n  \"bajar\",\n  \"balanza\",\n  \"balcón\",\n  \"balde\",\n  \"bambú\",\n  \"banco\",\n  \"banda\",\n  \"baño\",\n  \"barba\",\n  \"barco\",\n  \"barniz\",\n  \"barro\",\n  \"báscula\",\n  \"bastón\",\n  \"basura\",\n  \"batalla\",\n  \"batería\",\n  \"batir\",\n  \"batuta\",\n  \"baúl\",\n  \"bazar\",\n  \"bebé\",\n  \"bebida\",\n  \"bello\",\n  \"besar\",\n  \"beso\",\n  \"bestia\",\n  \"bicho\",\n  \"bien\",\n  \"bingo\",\n  \"blanco\",\n  \"bloque\",\n  \"blusa\",\n  \"boa\",\n  \"bobina\",\n  \"bobo\",\n  \"boca\",\n  \"bocina\",\n  \"boda\",\n  \"bodega\",\n  \"boina\",\n  \"bola\",\n  \"bolero\",\n  \"bolsa\",\n  \"bomba\",\n  \"bondad\",\n  \"bonito\",\n  \"bono\",\n  \"bonsái\",\n  \"borde\",\n  \"borrar\",\n  \"bosque\",\n  \"bote\",\n  \"botín\",\n  \"bóveda\",\n  \"bozal\",\n  \"bravo\",\n  \"brazo\",\n  \"brecha\",\n  \"breve\",\n  \"brillo\",\n  \"brinco\",\n  \"brisa\",\n  \"broca\",\n  \"broma\",\n  \"bronce\",\n  \"brote\",\n  \"bruja\",\n  \"brusco\",\n  \"bruto\",\n  \"buceo\",\n  \"bucle\",\n  \"bueno\",\n  \"buey\",\n  \"bufanda\",\n  \"bufón\",\n  \"búho\",\n  \"buitre\",\n  \"bulto\",\n  \"burbuja\",\n  \"burla\",\n  \"burro\",\n  \"buscar\",\n  \"butaca\",\n  \"buzón\",\n  \"caballo\",\n  \"cabeza\",\n  \"cabina\",\n  \"cabra\",\n  \"cacao\",\n  \"cadáver\",\n  \"cadena\",\n  \"caer\",\n  \"café\",\n  \"caída\",\n  \"caimán\",\n  \"caja\",\n  \"cajón\",\n  \"cal\",\n  \"calamar\",\n  \"calcio\",\n  \"caldo\",\n  \"calidad\",\n  \"calle\",\n  \"calma\",\n  \"calor\",\n  \"calvo\",\n  \"cama\",\n  \"cambio\",\n  \"camello\",\n  \"camino\",\n  \"campo\",\n  \"cáncer\",\n  \"candil\",\n  \"canela\",\n  \"canguro\",\n  \"canica\",\n  \"canto\",\n  \"caña\",\n  \"cañón\",\n  \"caoba\",\n  \"caos\",\n  \"capaz\",\n  \"capitán\",\n  \"capote\",\n  \"captar\",\n  \"capucha\",\n  \"cara\",\n  \"carbón\",\n  \"cárcel\",\n  \"careta\",\n  \"carga\",\n  \"cariño\",\n  \"carne\",\n  \"carpeta\",\n  \"carro\",\n  \"carta\",\n  \"casa\",\n  \"casco\",\n  \"casero\",\n  \"caspa\",\n  \"castor\",\n  \"catorce\",\n  \"catre\",\n  \"caudal\",\n  \"causa\",\n  \"cazo\",\n  \"cebolla\",\n  \"ceder\",\n  \"cedro\",\n  \"celda\",\n  \"célebre\",\n  \"celoso\",\n  \"célula\",\n  \"cemento\",\n  \"ceniza\",\n  \"centro\",\n  \"cerca\",\n  \"cerdo\",\n  \"cereza\",\n  \"cero\",\n  \"cerrar\",\n  \"certeza\",\n  \"césped\",\n  \"cetro\",\n  \"chacal\",\n  \"chaleco\",\n  \"champú\",\n  \"chancla\",\n  \"chapa\",\n  \"charla\",\n  \"chico\",\n  \"chiste\",\n  \"chivo\",\n  \"choque\",\n  \"choza\",\n  \"chuleta\",\n  \"chupar\",\n  \"ciclón\",\n  \"ciego\",\n  \"cielo\",\n  \"cien\",\n  \"cierto\",\n  \"cifra\",\n  \"cigarro\",\n  \"cima\",\n  \"cinco\",\n  \"cine\",\n  \"cinta\",\n  \"ciprés\",\n  \"circo\",\n  \"ciruela\",\n  \"cisne\",\n  \"cita\",\n  \"ciudad\",\n  \"clamor\",\n  \"clan\",\n  \"claro\",\n  \"clase\",\n  \"clave\",\n  \"cliente\",\n  \"clima\",\n  \"clínica\",\n  \"cobre\",\n  \"cocción\",\n  \"cochino\",\n  \"cocina\",\n  \"coco\",\n  \"código\",\n  \"codo\",\n  \"cofre\",\n  \"coger\",\n  \"cohete\",\n  \"cojín\",\n  \"cojo\",\n  \"cola\",\n  \"colcha\",\n  \"colegio\",\n  \"colgar\",\n  \"colina\",\n  \"collar\",\n  \"colmo\",\n  \"columna\",\n  \"combate\",\n  \"comer\",\n  \"comida\",\n  \"cómodo\",\n  \"compra\",\n  \"conde\",\n  \"conejo\",\n  \"conga\",\n  \"conocer\",\n  \"consejo\",\n  \"contar\",\n  \"copa\",\n  \"copia\",\n  \"corazón\",\n  \"corbata\",\n  \"corcho\",\n  \"cordón\",\n  \"corona\",\n  \"correr\",\n  \"coser\",\n  \"cosmos\",\n  \"costa\",\n  \"cráneo\",\n  \"cráter\",\n  \"crear\",\n  \"crecer\",\n  \"creído\",\n  \"crema\",\n  \"cría\",\n  \"crimen\",\n  \"cripta\",\n  \"crisis\",\n  \"cromo\",\n  \"crónica\",\n  \"croqueta\",\n  \"crudo\",\n  \"cruz\",\n  \"cuadro\",\n  \"cuarto\",\n  \"cuatro\",\n  \"cubo\",\n  \"cubrir\",\n  \"cuchara\",\n  \"cuello\",\n  \"cuento\",\n  \"cuerda\",\n  \"cuesta\",\n  \"cueva\",\n  \"cuidar\",\n  \"culebra\",\n  \"culpa\",\n  \"culto\",\n  \"cumbre\",\n  \"cumplir\",\n  \"cuna\",\n  \"cuneta\",\n  \"cuota\",\n  \"cupón\",\n  \"cúpula\",\n  \"curar\",\n  \"curioso\",\n  \"curso\",\n  \"curva\",\n  \"cutis\",\n  \"dama\",\n  \"danza\",\n  \"dar\",\n  \"dardo\",\n  \"dátil\",\n  \"deber\",\n  \"débil\",\n  \"década\",\n  \"decir\",\n  \"dedo\",\n  \"defensa\",\n  \"definir\",\n  \"dejar\",\n  \"delfín\",\n  \"delgado\",\n  \"delito\",\n  \"demora\",\n  \"denso\",\n  \"dental\",\n  \"deporte\",\n  \"derecho\",\n  \"derrota\",\n  \"desayuno\",\n  \"deseo\",\n  \"desfile\",\n  \"desnudo\",\n  \"destino\",\n  \"desvío\",\n  \"detalle\",\n  \"detener\",\n  \"deuda\",\n  \"día\",\n  \"diablo\",\n  \"diadema\",\n  \"diamante\",\n  \"diana\",\n  \"diario\",\n  \"dibujo\",\n  \"dictar\",\n  \"diente\",\n  \"dieta\",\n  \"diez\",\n  \"difícil\",\n  \"digno\",\n  \"dilema\",\n  \"diluir\",\n  \"dinero\",\n  \"directo\",\n  \"dirigir\",\n  \"disco\",\n  \"diseño\",\n  \"disfraz\",\n  \"diva\",\n  \"divino\",\n  \"doble\",\n  \"doce\",\n  \"dolor\",\n  \"domingo\",\n  \"don\",\n  \"donar\",\n  \"dorado\",\n  \"dormir\",\n  \"dorso\",\n  \"dos\",\n  \"dosis\",\n  \"dragón\",\n  \"droga\",\n  \"ducha\",\n  \"duda\",\n  \"duelo\",\n  \"dueño\",\n  \"dulce\",\n  \"dúo\",\n  \"duque\",\n  \"durar\",\n  \"dureza\",\n  \"duro\",\n  \"ébano\",\n  \"ebrio\",\n  \"echar\",\n  \"eco\",\n  \"ecuador\",\n  \"edad\",\n  \"edición\",\n  \"edificio\",\n  \"editor\",\n  \"educar\",\n  \"efecto\",\n  \"eficaz\",\n  \"eje\",\n  \"ejemplo\",\n  \"elefante\",\n  \"elegir\",\n  \"elemento\",\n  \"elevar\",\n  \"elipse\",\n  \"élite\",\n  \"elixir\",\n  \"elogio\",\n  \"eludir\",\n  \"embudo\",\n  \"emitir\",\n  \"emoción\",\n  \"empate\",\n  \"empeño\",\n  \"empleo\",\n  \"empresa\",\n  \"enano\",\n  \"encargo\",\n  \"enchufe\",\n  \"encía\",\n  \"enemigo\",\n  \"enero\",\n  \"enfado\",\n  \"enfermo\",\n  \"engaño\",\n  \"enigma\",\n  \"enlace\",\n  \"enorme\",\n  \"enredo\",\n  \"ensayo\",\n  \"enseñar\",\n  \"entero\",\n  \"entrar\",\n  \"envase\",\n  \"envío\",\n  \"época\",\n  \"equipo\",\n  \"erizo\",\n  \"escala\",\n  \"escena\",\n  \"escolar\",\n  \"escribir\",\n  \"escudo\",\n  \"esencia\",\n  \"esfera\",\n  \"esfuerzo\",\n  \"espada\",\n  \"espejo\",\n  \"espía\",\n  \"esposa\",\n  \"espuma\",\n  \"esquí\",\n  \"estar\",\n  \"este\",\n  \"estilo\",\n  \"estufa\",\n  \"etapa\",\n  \"eterno\",\n  \"ética\",\n  \"etnia\",\n  \"evadir\",\n  \"evaluar\",\n  \"evento\",\n  \"evitar\",\n  \"exacto\",\n  \"examen\",\n  \"exceso\",\n  \"excusa\",\n  \"exento\",\n  \"exigir\",\n  \"exilio\",\n  \"existir\",\n  \"éxito\",\n  \"experto\",\n  \"explicar\",\n  \"exponer\",\n  \"extremo\",\n  \"fábrica\",\n  \"fábula\",\n  \"fachada\",\n  \"fácil\",\n  \"factor\",\n  \"faena\",\n  \"faja\",\n  \"falda\",\n  \"fallo\",\n  \"falso\",\n  \"faltar\",\n  \"fama\",\n  \"familia\",\n  \"famoso\",\n  \"faraón\",\n  \"farmacia\",\n  \"farol\",\n  \"farsa\",\n  \"fase\",\n  \"fatiga\",\n  \"fauna\",\n  \"favor\",\n  \"fax\",\n  \"febrero\",\n  \"fecha\",\n  \"feliz\",\n  \"feo\",\n  \"feria\",\n  \"feroz\",\n  \"fértil\",\n  \"fervor\",\n  \"festín\",\n  \"fiable\",\n  \"fianza\",\n  \"fiar\",\n  \"fibra\",\n  \"ficción\",\n  \"ficha\",\n  \"fideo\",\n  \"fiebre\",\n  \"fiel\",\n  \"fiera\",\n  \"fiesta\",\n  \"figura\",\n  \"fijar\",\n  \"fijo\",\n  \"fila\",\n  \"filete\",\n  \"filial\",\n  \"filtro\",\n  \"fin\",\n  \"finca\",\n  \"fingir\",\n  \"finito\",\n  \"firma\",\n  \"flaco\",\n  \"flauta\",\n  \"flecha\",\n  \"flor\",\n  \"flota\",\n  \"fluir\",\n  \"flujo\",\n  \"flúor\",\n  \"fobia\",\n  \"foca\",\n  \"fogata\",\n  \"fogón\",\n  \"folio\",\n  \"folleto\",\n  \"fondo\",\n  \"forma\",\n  \"forro\",\n  \"fortuna\",\n  \"forzar\",\n  \"fosa\",\n  \"foto\",\n  \"fracaso\",\n  \"frágil\",\n  \"franja\",\n  \"frase\",\n  \"fraude\",\n  \"freír\",\n  \"freno\",\n  \"fresa\",\n  \"frío\",\n  \"frito\",\n  \"fruta\",\n  \"fuego\",\n  \"fuente\",\n  \"fuerza\",\n  \"fuga\",\n  \"fumar\",\n  \"función\",\n  \"funda\",\n  \"furgón\",\n  \"furia\",\n  \"fusil\",\n  \"fútbol\",\n  \"futuro\",\n  \"gacela\",\n  \"gafas\",\n  \"gaita\",\n  \"gajo\",\n  \"gala\",\n  \"galería\",\n  \"gallo\",\n  \"gamba\",\n  \"ganar\",\n  \"gancho\",\n  \"ganga\",\n  \"ganso\",\n  \"garaje\",\n  \"garza\",\n  \"gasolina\",\n  \"gastar\",\n  \"gato\",\n  \"gavilán\",\n  \"gemelo\",\n  \"gemir\",\n  \"gen\",\n  \"género\",\n  \"genio\",\n  \"gente\",\n  \"geranio\",\n  \"gerente\",\n  \"germen\",\n  \"gesto\",\n  \"gigante\",\n  \"gimnasio\",\n  \"girar\",\n  \"giro\",\n  \"glaciar\",\n  \"globo\",\n  \"gloria\",\n  \"gol\",\n  \"golfo\",\n  \"goloso\",\n  \"golpe\",\n  \"goma\",\n  \"gordo\",\n  \"gorila\",\n  \"gorra\",\n  \"gota\",\n  \"goteo\",\n  \"gozar\",\n  \"grada\",\n  \"gráfico\",\n  \"grano\",\n  \"grasa\",\n  \"gratis\",\n  \"grave\",\n  \"grieta\",\n  \"grillo\",\n  \"gripe\",\n  \"gris\",\n  \"grito\",\n  \"grosor\",\n  \"grúa\",\n  \"grueso\",\n  \"grumo\",\n  \"grupo\",\n  \"guante\",\n  \"guapo\",\n  \"guardia\",\n  \"guerra\",\n  \"guía\",\n  \"guiño\",\n  \"guion\",\n  \"guiso\",\n  \"guitarra\",\n  \"gusano\",\n  \"gustar\",\n  \"haber\",\n  \"hábil\",\n  \"hablar\",\n  \"hacer\",\n  \"hacha\",\n  \"hada\",\n  \"hallar\",\n  \"hamaca\",\n  \"harina\",\n  \"haz\",\n  \"hazaña\",\n  \"hebilla\",\n  \"hebra\",\n  \"hecho\",\n  \"helado\",\n  \"helio\",\n  \"hembra\",\n  \"herir\",\n  \"hermano\",\n  \"héroe\",\n  \"hervir\",\n  \"hielo\",\n  \"hierro\",\n  \"hígado\",\n  \"higiene\",\n  \"hijo\",\n  \"himno\",\n  \"historia\",\n  \"hocico\",\n  \"hogar\",\n  \"hoguera\",\n  \"hoja\",\n  \"hombre\",\n  \"hongo\",\n  \"honor\",\n  \"honra\",\n  \"hora\",\n  \"hormiga\",\n  \"horno\",\n  \"hostil\",\n  \"hoyo\",\n  \"hueco\",\n  \"huelga\",\n  \"huerta\",\n  \"hueso\",\n  \"huevo\",\n  \"huida\",\n  \"huir\",\n  \"humano\",\n  \"húmedo\",\n  \"humilde\",\n  \"humo\",\n  \"hundir\",\n  \"huracán\",\n  \"hurto\",\n  \"icono\",\n  \"ideal\",\n  \"idioma\",\n  \"ídolo\",\n  \"iglesia\",\n  \"iglú\",\n  \"igual\",\n  \"ilegal\",\n  \"ilusión\",\n  \"imagen\",\n  \"imán\",\n  \"imitar\",\n  \"impar\",\n  \"imperio\",\n  \"imponer\",\n  \"impulso\",\n  \"incapaz\",\n  \"índice\",\n  \"inerte\",\n  \"infiel\",\n  \"informe\",\n  \"ingenio\",\n  \"inicio\",\n  \"inmenso\",\n  \"inmune\",\n  \"innato\",\n  \"insecto\",\n  \"instante\",\n  \"interés\",\n  \"íntimo\",\n  \"intuir\",\n  \"inútil\",\n  \"invierno\",\n  \"ira\",\n  \"iris\",\n  \"ironía\",\n  \"isla\",\n  \"islote\",\n  \"jabalí\",\n  \"jabón\",\n  \"jamón\",\n  \"jarabe\",\n  \"jardín\",\n  \"jarra\",\n  \"jaula\",\n  \"jazmín\",\n  \"jefe\",\n  \"jeringa\",\n  \"jinete\",\n  \"jornada\",\n  \"joroba\",\n  \"joven\",\n  \"joya\",\n  \"juerga\",\n  \"jueves\",\n  \"juez\",\n  \"jugador\",\n  \"jugo\",\n  \"juguete\",\n  \"juicio\",\n  \"junco\",\n  \"jungla\",\n  \"junio\",\n  \"juntar\",\n  \"júpiter\",\n  \"jurar\",\n  \"justo\",\n  \"juvenil\",\n  \"juzgar\",\n  \"kilo\",\n  \"koala\",\n  \"labio\",\n  \"lacio\",\n  \"lacra\",\n  \"lado\",\n  \"ladrón\",\n  \"lagarto\",\n  \"lágrima\",\n  \"laguna\",\n  \"laico\",\n  \"lamer\",\n  \"lámina\",\n  \"lámpara\",\n  \"lana\",\n  \"lancha\",\n  \"langosta\",\n  \"lanza\",\n  \"lápiz\",\n  \"largo\",\n  \"larva\",\n  \"lástima\",\n  \"lata\",\n  \"látex\",\n  \"latir\",\n  \"laurel\",\n  \"lavar\",\n  \"lazo\",\n  \"leal\",\n  \"lección\",\n  \"leche\",\n  \"lector\",\n  \"leer\",\n  \"legión\",\n  \"legumbre\",\n  \"lejano\",\n  \"lengua\",\n  \"lento\",\n  \"leña\",\n  \"león\",\n  \"leopardo\",\n  \"lesión\",\n  \"letal\",\n  \"letra\",\n  \"leve\",\n  \"leyenda\",\n  \"libertad\",\n  \"libro\",\n  \"licor\",\n  \"líder\",\n  \"lidiar\",\n  \"lienzo\",\n  \"liga\",\n  \"ligero\",\n  \"lima\",\n  \"límite\",\n  \"limón\",\n  \"limpio\",\n  \"lince\",\n  \"lindo\",\n  \"línea\",\n  \"lingote\",\n  \"lino\",\n  \"linterna\",\n  \"líquido\",\n  \"liso\",\n  \"lista\",\n  \"litera\",\n  \"litio\",\n  \"litro\",\n  \"llaga\",\n  \"llama\",\n  \"llanto\",\n  \"llave\",\n  \"llegar\",\n  \"llenar\",\n  \"llevar\",\n  \"llorar\",\n  \"llover\",\n  \"lluvia\",\n  \"lobo\",\n  \"loción\",\n  \"loco\",\n  \"locura\",\n  \"lógica\",\n  \"logro\",\n  \"lombriz\",\n  \"lomo\",\n  \"lonja\",\n  \"lote\",\n  \"lucha\",\n  \"lucir\",\n  \"lugar\",\n  \"lujo\",\n  \"luna\",\n  \"lunes\",\n  \"lupa\",\n  \"lustro\",\n  \"luto\",\n  \"luz\",\n  \"maceta\",\n  \"macho\",\n  \"madera\",\n  \"madre\",\n  \"maduro\",\n  \"maestro\",\n  \"mafia\",\n  \"magia\",\n  \"mago\",\n  \"maíz\",\n  \"maldad\",\n  \"maleta\",\n  \"malla\",\n  \"malo\",\n  \"mamá\",\n  \"mambo\",\n  \"mamut\",\n  \"manco\",\n  \"mando\",\n  \"manejar\",\n  \"manga\",\n  \"maniquí\",\n  \"manjar\",\n  \"mano\",\n  \"manso\",\n  \"manta\",\n  \"mañana\",\n  \"mapa\",\n  \"máquina\",\n  \"mar\",\n  \"marco\",\n  \"marea\",\n  \"marfil\",\n  \"margen\",\n  \"marido\",\n  \"mármol\",\n  \"marrón\",\n  \"martes\",\n  \"marzo\",\n  \"masa\",\n  \"máscara\",\n  \"masivo\",\n  \"matar\",\n  \"materia\",\n  \"matiz\",\n  \"matriz\",\n  \"máximo\",\n  \"mayor\",\n  \"mazorca\",\n  \"mecha\",\n  \"medalla\",\n  \"medio\",\n  \"médula\",\n  \"mejilla\",\n  \"mejor\",\n  \"melena\",\n  \"melón\",\n  \"memoria\",\n  \"menor\",\n  \"mensaje\",\n  \"mente\",\n  \"menú\",\n  \"mercado\",\n  \"merengue\",\n  \"mérito\",\n  \"mes\",\n  \"mesón\",\n  \"meta\",\n  \"meter\",\n  \"método\",\n  \"metro\",\n  \"mezcla\",\n  \"miedo\",\n  \"miel\",\n  \"miembro\",\n  \"miga\",\n  \"mil\",\n  \"milagro\",\n  \"militar\",\n  \"millón\",\n  \"mimo\",\n  \"mina\",\n  \"minero\",\n  \"mínimo\",\n  \"minuto\",\n  \"miope\",\n  \"mirar\",\n  \"misa\",\n  \"miseria\",\n  \"misil\",\n  \"mismo\",\n  \"mitad\",\n  \"mito\",\n  \"mochila\",\n  \"moción\",\n  \"moda\",\n  \"modelo\",\n  \"moho\",\n  \"mojar\",\n  \"molde\",\n  \"moler\",\n  \"molino\",\n  \"momento\",\n  \"momia\",\n  \"monarca\",\n  \"moneda\",\n  \"monja\",\n  \"monto\",\n  \"moño\",\n  \"morada\",\n  \"morder\",\n  \"moreno\",\n  \"morir\",\n  \"morro\",\n  \"morsa\",\n  \"mortal\",\n  \"mosca\",\n  \"mostrar\",\n  \"motivo\",\n  \"mover\",\n  \"móvil\",\n  \"mozo\",\n  \"mucho\",\n  \"mudar\",\n  \"mueble\",\n  \"muela\",\n  \"muerte\",\n  \"muestra\",\n  \"mugre\",\n  \"mujer\",\n  \"mula\",\n  \"muleta\",\n  \"multa\",\n  \"mundo\",\n  \"muñeca\",\n  \"mural\",\n  \"muro\",\n  \"músculo\",\n  \"museo\",\n  \"musgo\",\n  \"música\",\n  \"muslo\",\n  \"nácar\",\n  \"nación\",\n  \"nadar\",\n  \"naipe\",\n  \"naranja\",\n  \"nariz\",\n  \"narrar\",\n  \"nasal\",\n  \"natal\",\n  \"nativo\",\n  \"natural\",\n  \"náusea\",\n  \"naval\",\n  \"nave\",\n  \"navidad\",\n  \"necio\",\n  \"néctar\",\n  \"negar\",\n  \"negocio\",\n  \"negro\",\n  \"neón\",\n  \"nervio\",\n  \"neto\",\n  \"neutro\",\n  \"nevar\",\n  \"nevera\",\n  \"nicho\",\n  \"nido\",\n  \"niebla\",\n  \"nieto\",\n  \"niñez\",\n  \"niño\",\n  \"nítido\",\n  \"nivel\",\n  \"nobleza\",\n  \"noche\",\n  \"nómina\",\n  \"noria\",\n  \"norma\",\n  \"norte\",\n  \"nota\",\n  \"noticia\",\n  \"novato\",\n  \"novela\",\n  \"novio\",\n  \"nube\",\n  \"nuca\",\n  \"núcleo\",\n  \"nudillo\",\n  \"nudo\",\n  \"nuera\",\n  \"nueve\",\n  \"nuez\",\n  \"nulo\",\n  \"número\",\n  \"nutria\",\n  \"oasis\",\n  \"obeso\",\n  \"obispo\",\n  \"objeto\",\n  \"obra\",\n  \"obrero\",\n  \"observar\",\n  \"obtener\",\n  \"obvio\",\n  \"oca\",\n  \"ocaso\",\n  \"océano\",\n  \"ochenta\",\n  \"ocho\",\n  \"ocio\",\n  \"ocre\",\n  \"octavo\",\n  \"octubre\",\n  \"oculto\",\n  \"ocupar\",\n  \"ocurrir\",\n  \"odiar\",\n  \"odio\",\n  \"odisea\",\n  \"oeste\",\n  \"ofensa\",\n  \"oferta\",\n  \"oficio\",\n  \"ofrecer\",\n  \"ogro\",\n  \"oído\",\n  \"oír\",\n  \"ojo\",\n  \"ola\",\n  \"oleada\",\n  \"olfato\",\n  \"olivo\",\n  \"olla\",\n  \"olmo\",\n  \"olor\",\n  \"olvido\",\n  \"ombligo\",\n  \"onda\",\n  \"onza\",\n  \"opaco\",\n  \"opción\",\n  \"ópera\",\n  \"opinar\",\n  \"oponer\",\n  \"optar\",\n  \"óptica\",\n  \"opuesto\",\n  \"oración\",\n  \"orador\",\n  \"oral\",\n  \"órbita\",\n  \"orca\",\n  \"orden\",\n  \"oreja\",\n  \"órgano\",\n  \"orgía\",\n  \"orgullo\",\n  \"oriente\",\n  \"origen\",\n  \"orilla\",\n  \"oro\",\n  \"orquesta\",\n  \"oruga\",\n  \"osadía\",\n  \"oscuro\",\n  \"osezno\",\n  \"oso\",\n  \"ostra\",\n  \"otoño\",\n  \"otro\",\n  \"oveja\",\n  \"óvulo\",\n  \"óxido\",\n  \"oxígeno\",\n  \"oyente\",\n  \"ozono\",\n  \"pacto\",\n  \"padre\",\n  \"paella\",\n  \"página\",\n  \"pago\",\n  \"país\",\n  \"pájaro\",\n  \"palabra\",\n  \"palco\",\n  \"paleta\",\n  \"pálido\",\n  \"palma\",\n  \"paloma\",\n  \"palpar\",\n  \"pan\",\n  \"panal\",\n  \"pánico\",\n  \"pantera\",\n  \"pañuelo\",\n  \"papá\",\n  \"papel\",\n  \"papilla\",\n  \"paquete\",\n  \"parar\",\n  \"parcela\",\n  \"pared\",\n  \"parir\",\n  \"paro\",\n  \"párpado\",\n  \"parque\",\n  \"párrafo\",\n  \"parte\",\n  \"pasar\",\n  \"paseo\",\n  \"pasión\",\n  \"paso\",\n  \"pasta\",\n  \"pata\",\n  \"patio\",\n  \"patria\",\n  \"pausa\",\n  \"pauta\",\n  \"pavo\",\n  \"payaso\",\n  \"peatón\",\n  \"pecado\",\n  \"pecera\",\n  \"pecho\",\n  \"pedal\",\n  \"pedir\",\n  \"pegar\",\n  \"peine\",\n  \"pelar\",\n  \"peldaño\",\n  \"pelea\",\n  \"peligro\",\n  \"pellejo\",\n  \"pelo\",\n  \"peluca\",\n  \"pena\",\n  \"pensar\",\n  \"peñón\",\n  \"peón\",\n  \"peor\",\n  \"pepino\",\n  \"pequeño\",\n  \"pera\",\n  \"percha\",\n  \"perder\",\n  \"pereza\",\n  \"perfil\",\n  \"perico\",\n  \"perla\",\n  \"permiso\",\n  \"perro\",\n  \"persona\",\n  \"pesa\",\n  \"pesca\",\n  \"pésimo\",\n  \"pestaña\",\n  \"pétalo\",\n  \"petróleo\",\n  \"pez\",\n  \"pezuña\",\n  \"picar\",\n  \"pichón\",\n  \"pie\",\n  \"piedra\",\n  \"pierna\",\n  \"pieza\",\n  \"pijama\",\n  \"pilar\",\n  \"piloto\",\n  \"pimienta\",\n  \"pino\",\n  \"pintor\",\n  \"pinza\",\n  \"piña\",\n  \"piojo\",\n  \"pipa\",\n  \"pirata\",\n  \"pisar\",\n  \"piscina\",\n  \"piso\",\n  \"pista\",\n  \"pitón\",\n  \"pizca\",\n  \"placa\",\n  \"plan\",\n  \"plata\",\n  \"playa\",\n  \"plaza\",\n  \"pleito\",\n  \"pleno\",\n  \"plomo\",\n  \"pluma\",\n  \"plural\",\n  \"pobre\",\n  \"poco\",\n  \"poder\",\n  \"podio\",\n  \"poema\",\n  \"poesía\",\n  \"poeta\",\n  \"polen\",\n  \"policía\",\n  \"pollo\",\n  \"polvo\",\n  \"pomada\",\n  \"pomelo\",\n  \"pomo\",\n  \"pompa\",\n  \"poner\",\n  \"porción\",\n  \"portal\",\n  \"posada\",\n  \"poseer\",\n  \"posible\",\n  \"poste\",\n  \"potencia\",\n  \"potro\",\n  \"pozo\",\n  \"prado\",\n  \"precoz\",\n  \"pregunta\",\n  \"premio\",\n  \"prensa\",\n  \"preso\",\n  \"previo\",\n  \"primo\",\n  \"príncipe\",\n  \"prisión\",\n  \"privar\",\n  \"proa\",\n  \"probar\",\n  \"proceso\",\n  \"producto\",\n  \"proeza\",\n  \"profesor\",\n  \"programa\",\n  \"prole\",\n  \"promesa\",\n  \"pronto\",\n  \"propio\",\n  \"próximo\",\n  \"prueba\",\n  \"público\",\n  \"puchero\",\n  \"pudor\",\n  \"pueblo\",\n  \"puerta\",\n  \"puesto\",\n  \"pulga\",\n  \"pulir\",\n  \"pulmón\",\n  \"pulpo\",\n  \"pulso\",\n  \"puma\",\n  \"punto\",\n  \"puñal\",\n  \"puño\",\n  \"pupa\",\n  \"pupila\",\n  \"puré\",\n  \"quedar\",\n  \"queja\",\n  \"quemar\",\n  \"querer\",\n  \"queso\",\n  \"quieto\",\n  \"química\",\n  \"quince\",\n  \"quitar\",\n  \"rábano\",\n  \"rabia\",\n  \"rabo\",\n  \"ración\",\n  \"radical\",\n  \"raíz\",\n  \"rama\",\n  \"rampa\",\n  \"rancho\",\n  \"rango\",\n  \"rapaz\",\n  \"rápido\",\n  \"rapto\",\n  \"rasgo\",\n  \"raspa\",\n  \"rato\",\n  \"rayo\",\n  \"raza\",\n  \"razón\",\n  \"reacción\",\n  \"realidad\",\n  \"rebaño\",\n  \"rebote\",\n  \"recaer\",\n  \"receta\",\n  \"rechazo\",\n  \"recoger\",\n  \"recreo\",\n  \"recto\",\n  \"recurso\",\n  \"red\",\n  \"redondo\",\n  \"reducir\",\n  \"reflejo\",\n  \"reforma\",\n  \"refrán\",\n  \"refugio\",\n  \"regalo\",\n  \"regir\",\n  \"regla\",\n  \"regreso\",\n  \"rehén\",\n  \"reino\",\n  \"reír\",\n  \"reja\",\n  \"relato\",\n  \"relevo\",\n  \"relieve\",\n  \"relleno\",\n  \"reloj\",\n  \"remar\",\n  \"remedio\",\n  \"remo\",\n  \"rencor\",\n  \"rendir\",\n  \"renta\",\n  \"reparto\",\n  \"repetir\",\n  \"reposo\",\n  \"reptil\",\n  \"res\",\n  \"rescate\",\n  \"resina\",\n  \"respeto\",\n  \"resto\",\n  \"resumen\",\n  \"retiro\",\n  \"retorno\",\n  \"retrato\",\n  \"reunir\",\n  \"revés\",\n  \"revista\",\n  \"rey\",\n  \"rezar\",\n  \"rico\",\n  \"riego\",\n  \"rienda\",\n  \"riesgo\",\n  \"rifa\",\n  \"rígido\",\n  \"rigor\",\n  \"rincón\",\n  \"riñón\",\n  \"río\",\n  \"riqueza\",\n  \"risa\",\n  \"ritmo\",\n  \"rito\",\n  \"rizo\",\n  \"roble\",\n  \"roce\",\n  \"rociar\",\n  \"rodar\",\n  \"rodeo\",\n  \"rodilla\",\n  \"roer\",\n  \"rojizo\",\n  \"rojo\",\n  \"romero\",\n  \"romper\",\n  \"ron\",\n  \"ronco\",\n  \"ronda\",\n  \"ropa\",\n  \"ropero\",\n  \"rosa\",\n  \"rosca\",\n  \"rostro\",\n  \"rotar\",\n  \"rubí\",\n  \"rubor\",\n  \"rudo\",\n  \"rueda\",\n  \"rugir\",\n  \"ruido\",\n  \"ruina\",\n  \"ruleta\",\n  \"rulo\",\n  \"rumbo\",\n  \"rumor\",\n  \"ruptura\",\n  \"ruta\",\n  \"rutina\",\n  \"sábado\",\n  \"saber\",\n  \"sabio\",\n  \"sable\",\n  \"sacar\",\n  \"sagaz\",\n  \"sagrado\",\n  \"sala\",\n  \"saldo\",\n  \"salero\",\n  \"salir\",\n  \"salmón\",\n  \"salón\",\n  \"salsa\",\n  \"salto\",\n  \"salud\",\n  \"salvar\",\n  \"samba\",\n  \"sanción\",\n  \"sandía\",\n  \"sanear\",\n  \"sangre\",\n  \"sanidad\",\n  \"sano\",\n  \"santo\",\n  \"sapo\",\n  \"saque\",\n  \"sardina\",\n  \"sartén\",\n  \"sastre\",\n  \"satán\",\n  \"sauna\",\n  \"saxofón\",\n  \"sección\",\n  \"seco\",\n  \"secreto\",\n  \"secta\",\n  \"sed\",\n  \"seguir\",\n  \"seis\",\n  \"sello\",\n  \"selva\",\n  \"semana\",\n  \"semilla\",\n  \"senda\",\n  \"sensor\",\n  \"señal\",\n  \"señor\",\n  \"separar\",\n  \"sepia\",\n  \"sequía\",\n  \"ser\",\n  \"serie\",\n  \"sermón\",\n  \"servir\",\n  \"sesenta\",\n  \"sesión\",\n  \"seta\",\n  \"setenta\",\n  \"severo\",\n  \"sexo\",\n  \"sexto\",\n  \"sidra\",\n  \"siesta\",\n  \"siete\",\n  \"siglo\",\n  \"signo\",\n  \"sílaba\",\n  \"silbar\",\n  \"silencio\",\n  \"silla\",\n  \"símbolo\",\n  \"simio\",\n  \"sirena\",\n  \"sistema\",\n  \"sitio\",\n  \"situar\",\n  \"sobre\",\n  \"socio\",\n  \"sodio\",\n  \"sol\",\n  \"solapa\",\n  \"soldado\",\n  \"soledad\",\n  \"sólido\",\n  \"soltar\",\n  \"solución\",\n  \"sombra\",\n  \"sondeo\",\n  \"sonido\",\n  \"sonoro\",\n  \"sonrisa\",\n  \"sopa\",\n  \"soplar\",\n  \"soporte\",\n  \"sordo\",\n  \"sorpresa\",\n  \"sorteo\",\n  \"sostén\",\n  \"sótano\",\n  \"suave\",\n  \"subir\",\n  \"suceso\",\n  \"sudor\",\n  \"suegra\",\n  \"suelo\",\n  \"sueño\",\n  \"suerte\",\n  \"sufrir\",\n  \"sujeto\",\n  \"sultán\",\n  \"sumar\",\n  \"superar\",\n  \"suplir\",\n  \"suponer\",\n  \"supremo\",\n  \"sur\",\n  \"surco\",\n  \"sureño\",\n  \"surgir\",\n  \"susto\",\n  \"sutil\",\n  \"tabaco\",\n  \"tabique\",\n  \"tabla\",\n  \"tabú\",\n  \"taco\",\n  \"tacto\",\n  \"tajo\",\n  \"talar\",\n  \"talco\",\n  \"talento\",\n  \"talla\",\n  \"talón\",\n  \"tamaño\",\n  \"tambor\",\n  \"tango\",\n  \"tanque\",\n  \"tapa\",\n  \"tapete\",\n  \"tapia\",\n  \"tapón\",\n  \"taquilla\",\n  \"tarde\",\n  \"tarea\",\n  \"tarifa\",\n  \"tarjeta\",\n  \"tarot\",\n  \"tarro\",\n  \"tarta\",\n  \"tatuaje\",\n  \"tauro\",\n  \"taza\",\n  \"tazón\",\n  \"teatro\",\n  \"techo\",\n  \"tecla\",\n  \"técnica\",\n  \"tejado\",\n  \"tejer\",\n  \"tejido\",\n  \"tela\",\n  \"teléfono\",\n  \"tema\",\n  \"temor\",\n  \"templo\",\n  \"tenaz\",\n  \"tender\",\n  \"tener\",\n  \"tenis\",\n  \"tenso\",\n  \"teoría\",\n  \"terapia\",\n  \"terco\",\n  \"término\",\n  \"ternura\",\n  \"terror\",\n  \"tesis\",\n  \"tesoro\",\n  \"testigo\",\n  \"tetera\",\n  \"texto\",\n  \"tez\",\n  \"tibio\",\n  \"tiburón\",\n  \"tiempo\",\n  \"tienda\",\n  \"tierra\",\n  \"tieso\",\n  \"tigre\",\n  \"tijera\",\n  \"tilde\",\n  \"timbre\",\n  \"tímido\",\n  \"timo\",\n  \"tinta\",\n  \"tío\",\n  \"típico\",\n  \"tipo\",\n  \"tira\",\n  \"tirón\",\n  \"titán\",\n  \"títere\",\n  \"título\",\n  \"tiza\",\n  \"toalla\",\n  \"tobillo\",\n  \"tocar\",\n  \"tocino\",\n  \"todo\",\n  \"toga\",\n  \"toldo\",\n  \"tomar\",\n  \"tono\",\n  \"tonto\",\n  \"topar\",\n  \"tope\",\n  \"toque\",\n  \"tórax\",\n  \"torero\",\n  \"tormenta\",\n  \"torneo\",\n  \"toro\",\n  \"torpedo\",\n  \"torre\",\n  \"torso\",\n  \"tortuga\",\n  \"tos\",\n  \"tosco\",\n  \"toser\",\n  \"tóxico\",\n  \"trabajo\",\n  \"tractor\",\n  \"traer\",\n  \"tráfico\",\n  \"trago\",\n  \"traje\",\n  \"tramo\",\n  \"trance\",\n  \"trato\",\n  \"trauma\",\n  \"trazar\",\n  \"trébol\",\n  \"tregua\",\n  \"treinta\",\n  \"tren\",\n  \"trepar\",\n  \"tres\",\n  \"tribu\",\n  \"trigo\",\n  \"tripa\",\n  \"triste\",\n  \"triunfo\",\n  \"trofeo\",\n  \"trompa\",\n  \"tronco\",\n  \"tropa\",\n  \"trote\",\n  \"trozo\",\n  \"truco\",\n  \"trueno\",\n  \"trufa\",\n  \"tubería\",\n  \"tubo\",\n  \"tuerto\",\n  \"tumba\",\n  \"tumor\",\n  \"túnel\",\n  \"túnica\",\n  \"turbina\",\n  \"turismo\",\n  \"turno\",\n  \"tutor\",\n  \"ubicar\",\n  \"úlcera\",\n  \"umbral\",\n  \"unidad\",\n  \"unir\",\n  \"universo\",\n  \"uno\",\n  \"untar\",\n  \"uña\",\n  \"urbano\",\n  \"urbe\",\n  \"urgente\",\n  \"urna\",\n  \"usar\",\n  \"usuario\",\n  \"útil\",\n  \"utopía\",\n  \"uva\",\n  \"vaca\",\n  \"vacío\",\n  \"vacuna\",\n  \"vagar\",\n  \"vago\",\n  \"vaina\",\n  \"vajilla\",\n  \"vale\",\n  \"válido\",\n  \"valle\",\n  \"valor\",\n  \"válvula\",\n  \"vampiro\",\n  \"vara\",\n  \"variar\",\n  \"varón\",\n  \"vaso\",\n  \"vecino\",\n  \"vector\",\n  \"vehículo\",\n  \"veinte\",\n  \"vejez\",\n  \"vela\",\n  \"velero\",\n  \"veloz\",\n  \"vena\",\n  \"vencer\",\n  \"venda\",\n  \"veneno\",\n  \"vengar\",\n  \"venir\",\n  \"venta\",\n  \"venus\",\n  \"ver\",\n  \"verano\",\n  \"verbo\",\n  \"verde\",\n  \"vereda\",\n  \"verja\",\n  \"verso\",\n  \"verter\",\n  \"vía\",\n  \"viaje\",\n  \"vibrar\",\n  \"vicio\",\n  \"víctima\",\n  \"vida\",\n  \"vídeo\",\n  \"vidrio\",\n  \"viejo\",\n  \"viernes\",\n  \"vigor\",\n  \"vil\",\n  \"villa\",\n  \"vinagre\",\n  \"vino\",\n  \"viñedo\",\n  \"violín\",\n  \"viral\",\n  \"virgo\",\n  \"virtud\",\n  \"visor\",\n  \"víspera\",\n  \"vista\",\n  \"vitamina\",\n  \"viudo\",\n  \"vivaz\",\n  \"vivero\",\n  \"vivir\",\n  \"vivo\",\n  \"volcán\",\n  \"volumen\",\n  \"volver\",\n  \"voraz\",\n  \"votar\",\n  \"voto\",\n  \"voz\",\n  \"vuelo\",\n  \"vulgar\",\n  \"yacer\",\n  \"yate\",\n  \"yegua\",\n  \"yema\",\n  \"yerno\",\n  \"yeso\",\n  \"yodo\",\n  \"yoga\",\n  \"yogur\",\n  \"zafiro\",\n  \"zanja\",\n  \"zapato\",\n  \"zarza\",\n  \"zona\",\n  \"zorro\",\n  \"zumo\",\n  \"zurdo\"\n]\n","(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      Object.defineProperty(String.prototype, \"normalize\", {\n         enumerable: false,\n         configurable: true,\n         writable: true,\n         value: function(form) {\n            var str = \"\" + this;\n            form =  form === undefined ? \"NFC\" : form;\n            \n            if (form === \"NFC\") {\n               return unorm.nfc(str);\n            } else if (form === \"NFD\") {\n               return unorm.nfd(str);\n            } else if (form === \"NFKC\") {\n               return unorm.nfkc(str);\n            } else if (form === \"NFKD\") {\n               return unorm.nfkd(str);\n            } else {\n               throw new RangeError(\"Invalid normalization form: \" + form);\n            }\n         }\n      });\n\n      unorm.shimApplied = true;\n   }\n}(this));\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = require(\"crypto\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", { enumerable: true, get: function () { return hdkey_1.default; } });\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", { enumerable: true, get: function () { return thirdparty_1.default; } });\nvar bs58check = require('bs58check');\nvar randomBytes = require('randombytes');\nvar uuidv4 = require('uuid/v4');\nfunction validateHexString(paramName, str, length) {\n    if (str.toLowerCase().startsWith('0x')) {\n        str = str.slice(2);\n    }\n    if (!str && !length) {\n        return str;\n    }\n    if (length % 2) {\n        throw new Error(\"Invalid length argument, must be an even number\");\n    }\n    if (typeof length === 'number' && str.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n    }\n    if (!/^([0-9a-f]{2})+$/i.test(str)) {\n        var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n    }\n    return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n    if (!Buffer.isBuffer(buff)) {\n        var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n        var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n        throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n    }\n    if (typeof length === 'number' && buff.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n    }\n    return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n    var v3Defaults = {\n        cipher: 'aes-128-ctr',\n        kdf: 'scrypt',\n        salt: randomBytes(32),\n        iv: randomBytes(16),\n        uuid: randomBytes(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1,\n    };\n    if (!params) {\n        return v3Defaults;\n    }\n    if (typeof params.salt === 'string') {\n        params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n    }\n    if (typeof params.iv === 'string') {\n        params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n    }\n    if (typeof params.uuid === 'string') {\n        params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n    }\n    if (params.salt) {\n        validateBuffer('salt', params.salt);\n    }\n    if (params.iv) {\n        validateBuffer('iv', params.iv, 16);\n    }\n    if (params.uuid) {\n        validateBuffer('uuid', params.uuid, 16);\n    }\n    return __assign(__assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        c: opts.c,\n        prf: 'hmac-sha256',\n    };\n}\nfunction kdfParamsForScrypt(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        n: opts.n,\n        r: opts.r,\n        p: opts.p,\n    };\n}\n// wallet implementation\nvar Wallet = /** @class */ (function () {\n    function Wallet(privateKey, publicKey) {\n        if (publicKey === void 0) { publicKey = undefined; }\n        this.privateKey = privateKey;\n        this.publicKey = publicKey;\n        if (privateKey && publicKey) {\n            throw new Error('Cannot supply both a private and a public key to the constructor');\n        }\n        if (privateKey && !ethereumjs_util_1.isValidPrivate(privateKey)) {\n            throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n        }\n        if (publicKey && !ethereumjs_util_1.isValidPublic(publicKey)) {\n            throw new Error('Invalid public key');\n        }\n    }\n    // static methods\n    /**\n     * Create an instance based on a new random key.\n     *\n     * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n     */\n    Wallet.generate = function (icapDirect) {\n        if (icapDirect === void 0) { icapDirect = false; }\n        if (icapDirect) {\n            var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n            while (true) {\n                var privateKey = randomBytes(32);\n                if (new ethereumjs_util_1.BN(ethereumjs_util_1.privateToAddress(privateKey)).lte(max)) {\n                    return new Wallet(privateKey);\n                }\n            }\n        }\n        else {\n            return new Wallet(randomBytes(32));\n        }\n    };\n    /**\n     * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n     */\n    Wallet.generateVanityAddress = function (pattern) {\n        if (!(pattern instanceof RegExp)) {\n            pattern = new RegExp(pattern);\n        }\n        while (true) {\n            var privateKey = randomBytes(32);\n            var address = ethereumjs_util_1.privateToAddress(privateKey);\n            if (pattern.test(address.toString('hex'))) {\n                return new Wallet(privateKey);\n            }\n        }\n    };\n    /**\n     * Create an instance based on a public key (certain methods will not be available)\n     *\n     * This method only accepts uncompressed Ethereum-style public keys, unless\n     * the `nonStrict` flag is set to true.\n     */\n    Wallet.fromPublicKey = function (publicKey, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        if (nonStrict) {\n            publicKey = ethereumjs_util_1.importPublic(publicKey);\n        }\n        return new Wallet(undefined, publicKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended public key (xpub)\n     */\n    Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n        if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n            throw new Error('Not an extended public key');\n        }\n        var publicKey = bs58check.decode(extendedPublicKey).slice(45);\n        // Convert to an Ethereum public key\n        return Wallet.fromPublicKey(publicKey, true);\n    };\n    /**\n     * Create an instance based on a raw private key\n     */\n    Wallet.fromPrivateKey = function (privateKey) {\n        return new Wallet(privateKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended private key (xprv)\n     */\n    Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n        if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n            throw new Error('Not an extended private key');\n        }\n        var tmp = bs58check.decode(extendedPrivateKey);\n        if (tmp[45] !== 0) {\n            throw new Error('Invalid extended private key');\n        }\n        return Wallet.fromPrivateKey(tmp.slice(46));\n    };\n    /**\n     * Import a wallet (Version 1 of the Ethereum wallet format).\n     *\n     * @param input A JSON serialized string, or an object representing V1 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV1 = function (input, password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(input);\n                        if (json.Version !== '1') {\n                            throw new Error('Not a V1 Wallet');\n                        }\n                        if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        kdfparams = json.Crypto.KeyHeader.KdfParams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n                    case 1:\n                        derivedKey = _a.sent();\n                        ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n                        if (mac.toString('hex') !== json.Crypto.MAC) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv('aes-128-cbc', ethereumjs_util_1.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /**\n     * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n     *\n     * @param input A JSON serialized string, or an object representing V3 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV3 = function (input, password, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n                        if (json.version !== 3) {\n                            throw new Error('Not a V3 wallet');\n                        }\n                        if (!(json.crypto.kdf === 'scrypt')) return [3 /*break*/, 2];\n                        kdfparams = json.crypto.kdfparams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n                    case 1:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (json.crypto.kdf === 'pbkdf2') {\n                            kdfparams = json.crypto.kdfparams;\n                            if (kdfparams.prf !== 'hmac-sha256') {\n                                throw new Error('Unsupported parameters to PBKDF2');\n                            }\n                            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n                        }\n                        else {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        _a.label = 3;\n                    case 3:\n                        ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n                        if (mac.toString('hex') !== json.crypto.mac) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /*\n     * Import an Ethereum Pre Sale wallet.\n     * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n     * JSON fields: encseed, ethaddr, btcaddr, email\n     *\n     * @param input A JSON serialized string, or an object representing EthSale Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromEthSale = function (input, password) {\n        var json = typeof input === 'object' ? input : JSON.parse(input);\n        var encseed = Buffer.from(json.encseed, 'hex');\n        // key derivation\n        var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n        // seed decoding (IV is first 16 bytes)\n        // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n        //       see also http://stackoverflow.com/a/31614770/4964819\n        var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n        var seed = runCipherBuffer(decipher, encseed.slice(16));\n        var wallet = new Wallet(ethereumjs_util_1.keccak256(seed));\n        if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n            throw new Error('Decoded key mismatch - possibly wrong passphrase');\n        }\n        return wallet;\n    };\n    Object.defineProperty(Wallet.prototype, \"pubKey\", {\n        // private getters\n        /**\n         * Returns the wallet's public key.\n         */\n        get: function () {\n            if (!keyExists(this.publicKey)) {\n                this.publicKey = ethereumjs_util_1.privateToPublic(this.privateKey);\n            }\n            return this.publicKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"privKey\", {\n        /**\n         * Returns the wallet's private key.\n         */\n        get: function () {\n            if (!keyExists(this.privateKey)) {\n                throw new Error('This is a public key only wallet');\n            }\n            return this.privateKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // public instance methods\n    /**\n     * Returns the wallet's private key.\n     *\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPrivateKey = function () {\n        return this.privKey;\n    };\n    Wallet.prototype.getPrivateKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.privKey);\n    };\n    /**\n     * Returns the wallet's public key.\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPublicKey = function () {\n        return this.pubKey;\n    };\n    /**\n     * Returns the wallet's public key as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getPublicKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getPublicKey());\n    };\n    /**\n     * Returns the wallet's address.\n     */\n    Wallet.prototype.getAddress = function () {\n        return ethereumjs_util_1.publicToAddress(this.pubKey);\n    };\n    /**\n     * Returns the wallet's address as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getAddressString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getAddress());\n    };\n    /**\n     * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n     * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n     */\n    Wallet.prototype.getChecksumAddressString = function () {\n        return ethereumjs_util_1.toChecksumAddress(this.getAddressString());\n    };\n    /**\n     * Returns an Etherem Version 3 Keystore Format object representing the wallet\n     *\n     * @param password The password used to encrypt the Keystore.\n     * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n     */\n    Wallet.prototype.toV3 = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!keyExists(this.privateKey)) {\n                            throw new Error('This is a public key only wallet');\n                        }\n                        v3Params = mergeToV3ParamsWithDefaults(opts);\n                        _a = v3Params.kdf;\n                        switch (_a) {\n                            case \"pbkdf2\" /* PBKDF */: return [3 /*break*/, 1];\n                            case \"scrypt\" /* Scrypt */: return [3 /*break*/, 2];\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        kdfParams = kdfParamsForPBKDF(v3Params);\n                        derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n                        return [3 /*break*/, 5];\n                    case 2:\n                        kdfParams = kdfParamsForScrypt(v3Params);\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n                    case 3:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4: throw new Error('Unsupported kdf');\n                    case 5:\n                        cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n                        if (!cipher) {\n                            throw new Error('Unsupported cipher');\n                        }\n                        ciphertext = runCipherBuffer(cipher, this.privKey);\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n                        return [2 /*return*/, {\n                                version: 3,\n                                id: uuidv4({ random: v3Params.uuid }),\n                                // @ts-ignore - the official V3 keystore spec omits the address key\n                                address: this.getAddress().toString('hex'),\n                                crypto: {\n                                    ciphertext: ciphertext.toString('hex'),\n                                    cipherparams: { iv: v3Params.iv.toString('hex') },\n                                    cipher: v3Params.cipher,\n                                    kdf: v3Params.kdf,\n                                    kdfparams: __assign(__assign({}, kdfParams), { salt: kdfParams.salt.toString('hex') }),\n                                    mac: mac.toString('hex'),\n                                },\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Return the suggested filename for V3 keystores.\n     */\n    Wallet.prototype.getV3Filename = function (timestamp) {\n        /*\n         * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n         * is a pain in Javascript, everbody knows that. We could use moment.js,\n         * but decide to do it manually in order to save space.\n         *\n         * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n         * but does it really matter?\n         *\n         * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n         *\n         */\n        var ts = timestamp ? new Date(timestamp) : new Date();\n        return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n    };\n    Wallet.prototype.toV3String = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = JSON).stringify;\n                        return [4 /*yield*/, this.toV3(password, opts)];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    return Wallet;\n}());\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n    return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n    return k !== undefined && k !== null;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = require(\"crypto\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", { enumerable: true, get: function () { return hdkey_1.default; } });\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", { enumerable: true, get: function () { return thirdparty_1.default; } });\nvar bs58check = require('bs58check');\nvar randomBytes = require('randombytes');\nvar uuidv4 = require('uuid/v4');\nfunction validateHexString(paramName, str, length) {\n    if (str.toLowerCase().startsWith('0x')) {\n        str = str.slice(2);\n    }\n    if (!str && !length) {\n        return str;\n    }\n    if (length % 2) {\n        throw new Error(\"Invalid length argument, must be an even number\");\n    }\n    if (typeof length === 'number' && str.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n    }\n    if (!/^([0-9a-f]{2})+$/i.test(str)) {\n        var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n    }\n    return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n    if (!Buffer.isBuffer(buff)) {\n        var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n        var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n        throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n    }\n    if (typeof length === 'number' && buff.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n    }\n    return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n    var v3Defaults = {\n        cipher: 'aes-128-ctr',\n        kdf: 'scrypt',\n        salt: randomBytes(32),\n        iv: randomBytes(16),\n        uuid: randomBytes(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1,\n    };\n    if (!params) {\n        return v3Defaults;\n    }\n    if (typeof params.salt === 'string') {\n        params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n    }\n    if (typeof params.iv === 'string') {\n        params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n    }\n    if (typeof params.uuid === 'string') {\n        params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n    }\n    if (params.salt) {\n        validateBuffer('salt', params.salt);\n    }\n    if (params.iv) {\n        validateBuffer('iv', params.iv, 16);\n    }\n    if (params.uuid) {\n        validateBuffer('uuid', params.uuid, 16);\n    }\n    return __assign(__assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        c: opts.c,\n        prf: 'hmac-sha256',\n    };\n}\nfunction kdfParamsForScrypt(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        n: opts.n,\n        r: opts.r,\n        p: opts.p,\n    };\n}\n// wallet implementation\nvar Wallet = /** @class */ (function () {\n    function Wallet(privateKey, publicKey) {\n        if (publicKey === void 0) { publicKey = undefined; }\n        this.privateKey = privateKey;\n        this.publicKey = publicKey;\n        if (privateKey && publicKey) {\n            throw new Error('Cannot supply both a private and a public key to the constructor');\n        }\n        if (privateKey && !ethereumjs_util_1.isValidPrivate(privateKey)) {\n            throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n        }\n        if (publicKey && !ethereumjs_util_1.isValidPublic(publicKey)) {\n            throw new Error('Invalid public key');\n        }\n    }\n    // static methods\n    /**\n     * Create an instance based on a new random key.\n     *\n     * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n     */\n    Wallet.generate = function (icapDirect) {\n        if (icapDirect === void 0) { icapDirect = false; }\n        if (icapDirect) {\n            var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n            while (true) {\n                var privateKey = randomBytes(32);\n                if (new ethereumjs_util_1.BN(ethereumjs_util_1.privateToAddress(privateKey)).lte(max)) {\n                    return new Wallet(privateKey);\n                }\n            }\n        }\n        else {\n            return new Wallet(randomBytes(32));\n        }\n    };\n    /**\n     * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n     */\n    Wallet.generateVanityAddress = function (pattern) {\n        if (!(pattern instanceof RegExp)) {\n            pattern = new RegExp(pattern);\n        }\n        while (true) {\n            var privateKey = randomBytes(32);\n            var address = ethereumjs_util_1.privateToAddress(privateKey);\n            if (pattern.test(address.toString('hex'))) {\n                return new Wallet(privateKey);\n            }\n        }\n    };\n    /**\n     * Create an instance based on a public key (certain methods will not be available)\n     *\n     * This method only accepts uncompressed Ethereum-style public keys, unless\n     * the `nonStrict` flag is set to true.\n     */\n    Wallet.fromPublicKey = function (publicKey, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        if (nonStrict) {\n            publicKey = ethereumjs_util_1.importPublic(publicKey);\n        }\n        return new Wallet(undefined, publicKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended public key (xpub)\n     */\n    Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n        if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n            throw new Error('Not an extended public key');\n        }\n        var publicKey = bs58check.decode(extendedPublicKey).slice(45);\n        // Convert to an Ethereum public key\n        return Wallet.fromPublicKey(publicKey, true);\n    };\n    /**\n     * Create an instance based on a raw private key\n     */\n    Wallet.fromPrivateKey = function (privateKey) {\n        return new Wallet(privateKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended private key (xprv)\n     */\n    Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n        if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n            throw new Error('Not an extended private key');\n        }\n        var tmp = bs58check.decode(extendedPrivateKey);\n        if (tmp[45] !== 0) {\n            throw new Error('Invalid extended private key');\n        }\n        return Wallet.fromPrivateKey(tmp.slice(46));\n    };\n    /**\n     * Import a wallet (Version 1 of the Ethereum wallet format).\n     *\n     * @param input A JSON serialized string, or an object representing V1 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV1 = function (input, password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(input);\n                        if (json.Version !== '1') {\n                            throw new Error('Not a V1 Wallet');\n                        }\n                        if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        kdfparams = json.Crypto.KeyHeader.KdfParams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n                    case 1:\n                        derivedKey = _a.sent();\n                        ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n                        if (mac.toString('hex') !== json.Crypto.MAC) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv('aes-128-cbc', ethereumjs_util_1.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /**\n     * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n     *\n     * @param input A JSON serialized string, or an object representing V3 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV3 = function (input, password, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n                        if (json.version !== 3) {\n                            throw new Error('Not a V3 wallet');\n                        }\n                        if (!(json.crypto.kdf === 'scrypt')) return [3 /*break*/, 2];\n                        kdfparams = json.crypto.kdfparams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n                    case 1:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (json.crypto.kdf === 'pbkdf2') {\n                            kdfparams = json.crypto.kdfparams;\n                            if (kdfparams.prf !== 'hmac-sha256') {\n                                throw new Error('Unsupported parameters to PBKDF2');\n                            }\n                            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n                        }\n                        else {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        _a.label = 3;\n                    case 3:\n                        ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n                        if (mac.toString('hex') !== json.crypto.mac) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /*\n     * Import an Ethereum Pre Sale wallet.\n     * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n     * JSON fields: encseed, ethaddr, btcaddr, email\n     *\n     * @param input A JSON serialized string, or an object representing EthSale Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromEthSale = function (input, password) {\n        var json = typeof input === 'object' ? input : JSON.parse(input);\n        var encseed = Buffer.from(json.encseed, 'hex');\n        // key derivation\n        var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n        // seed decoding (IV is first 16 bytes)\n        // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n        //       see also http://stackoverflow.com/a/31614770/4964819\n        var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n        var seed = runCipherBuffer(decipher, encseed.slice(16));\n        var wallet = new Wallet(ethereumjs_util_1.keccak256(seed));\n        if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n            throw new Error('Decoded key mismatch - possibly wrong passphrase');\n        }\n        return wallet;\n    };\n    Object.defineProperty(Wallet.prototype, \"pubKey\", {\n        // private getters\n        /**\n         * Returns the wallet's public key.\n         */\n        get: function () {\n            if (!keyExists(this.publicKey)) {\n                this.publicKey = ethereumjs_util_1.privateToPublic(this.privateKey);\n            }\n            return this.publicKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"privKey\", {\n        /**\n         * Returns the wallet's private key.\n         */\n        get: function () {\n            if (!keyExists(this.privateKey)) {\n                throw new Error('This is a public key only wallet');\n            }\n            return this.privateKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // public instance methods\n    /**\n     * Returns the wallet's private key.\n     *\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPrivateKey = function () {\n        return this.privKey;\n    };\n    Wallet.prototype.getPrivateKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.privKey);\n    };\n    /**\n     * Returns the wallet's public key.\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPublicKey = function () {\n        return this.pubKey;\n    };\n    /**\n     * Returns the wallet's public key as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getPublicKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getPublicKey());\n    };\n    /**\n     * Returns the wallet's address.\n     */\n    Wallet.prototype.getAddress = function () {\n        return ethereumjs_util_1.publicToAddress(this.pubKey);\n    };\n    /**\n     * Returns the wallet's address as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getAddressString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getAddress());\n    };\n    /**\n     * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n     * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n     */\n    Wallet.prototype.getChecksumAddressString = function () {\n        return ethereumjs_util_1.toChecksumAddress(this.getAddressString());\n    };\n    /**\n     * Returns an Etherem Version 3 Keystore Format object representing the wallet\n     *\n     * @param password The password used to encrypt the Keystore.\n     * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n     */\n    Wallet.prototype.toV3 = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!keyExists(this.privateKey)) {\n                            throw new Error('This is a public key only wallet');\n                        }\n                        v3Params = mergeToV3ParamsWithDefaults(opts);\n                        _a = v3Params.kdf;\n                        switch (_a) {\n                            case \"pbkdf2\" /* PBKDF */: return [3 /*break*/, 1];\n                            case \"scrypt\" /* Scrypt */: return [3 /*break*/, 2];\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        kdfParams = kdfParamsForPBKDF(v3Params);\n                        derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n                        return [3 /*break*/, 5];\n                    case 2:\n                        kdfParams = kdfParamsForScrypt(v3Params);\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n                    case 3:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4: throw new Error('Unsupported kdf');\n                    case 5:\n                        cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n                        if (!cipher) {\n                            throw new Error('Unsupported cipher');\n                        }\n                        ciphertext = runCipherBuffer(cipher, this.privKey);\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n                        return [2 /*return*/, {\n                                version: 3,\n                                id: uuidv4({ random: v3Params.uuid }),\n                                // @ts-ignore - the official V3 keystore spec omits the address key\n                                address: this.getAddress().toString('hex'),\n                                crypto: {\n                                    ciphertext: ciphertext.toString('hex'),\n                                    cipherparams: { iv: v3Params.iv.toString('hex') },\n                                    cipher: v3Params.cipher,\n                                    kdf: v3Params.kdf,\n                                    kdfparams: __assign(__assign({}, kdfParams), { salt: kdfParams.salt.toString('hex') }),\n                                    mac: mac.toString('hex'),\n                                },\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Return the suggested filename for V3 keystores.\n     */\n    Wallet.prototype.getV3Filename = function (timestamp) {\n        /*\n         * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n         * is a pain in Javascript, everbody knows that. We could use moment.js,\n         * but decide to do it manually in order to save space.\n         *\n         * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n         * but does it really matter?\n         *\n         * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n         *\n         */\n        var ts = timestamp ? new Date(timestamp) : new Date();\n        return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n    };\n    Wallet.prototype.toV3String = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = JSON).stringify;\n                        return [4 /*yield*/, this.toV3(password, opts)];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    return Wallet;\n}());\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n    return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n    return k !== undefined && k !== null;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GWEI = exports.ERC1155_TOKEN_RECEIVER_INTERFACE_ID = exports.ERC1155_METADATA_URI_INTERFACE_ID = exports.ERC1155_INTERFACE_ID = exports.ERC721_ENUMERABLE_INTERFACE_ID = exports.ERC721_METADATA_INTERFACE_ID = exports.ERC721_INTERFACE_ID = exports.ERC20 = exports.ERC1155 = exports.ERC721 = exports.RINKEBY_CHAIN_ID = exports.IPFS_DEFAULT_GATEWAY_URL = exports.FALL_BACK_VS_CURRENCY = exports.RPC = exports.MAINNET = void 0;\nexports.MAINNET = 'mainnet';\nexports.RPC = 'rpc';\nexports.FALL_BACK_VS_CURRENCY = 'ETH';\nexports.IPFS_DEFAULT_GATEWAY_URL = 'https://cloudflare-ipfs.com/ipfs/';\n// NETWORKS ID\nexports.RINKEBY_CHAIN_ID = '4';\n// TOKEN STANDARDS\nexports.ERC721 = 'ERC721';\nexports.ERC1155 = 'ERC1155';\nexports.ERC20 = 'ERC20';\n// TOKEN INTERFACE IDS\nexports.ERC721_INTERFACE_ID = '0x80ac58cd';\nexports.ERC721_METADATA_INTERFACE_ID = '0x5b5e139f';\nexports.ERC721_ENUMERABLE_INTERFACE_ID = '0x780e9d63';\nexports.ERC1155_INTERFACE_ID = '0xd9b67a26';\nexports.ERC1155_METADATA_URI_INTERFACE_ID = '0x0e89341c';\nexports.ERC1155_TOKEN_RECEIVER_INTERFACE_ID = '0x4e2312e0';\n// UNITS\nexports.GWEI = 'gwei';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchExchangeRate = void 0;\nconst util_1 = require(\"../util\");\n/**\n * Get the CryptoCompare API URL for getting the conversion rate from the given native currency to\n * the given currency. Optionally, the conversion rate from the native currency to USD can also be\n * included in the response.\n *\n * @param currentCurrency - The currency to get a conversion rate for.\n * @param nativeCurrency - The native currency to convert from.\n * @param includeUSDRate - Whether or not the native currency to USD conversion rate should be\n * included in the response as well.\n * @returns The API URL for getting the conversion rate.\n */\nfunction getPricingURL(currentCurrency, nativeCurrency, includeUSDRate) {\n    return (`https://min-api.cryptocompare.com/data/price?fsym=` +\n        `${nativeCurrency.toUpperCase()}&tsyms=${currentCurrency.toUpperCase()}` +\n        `${includeUSDRate && currentCurrency.toUpperCase() !== 'USD' ? ',USD' : ''}`);\n}\n/**\n * Fetches the exchange rate for a given currency.\n *\n * @param currency - ISO 4217 currency code.\n * @param nativeCurrency - Symbol for base asset.\n * @param includeUSDRate - Whether to add the USD rate to the fetch.\n * @returns Promise resolving to exchange rate for given currency.\n */\nfunction fetchExchangeRate(currency, nativeCurrency, includeUSDRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const json = yield util_1.handleFetch(getPricingURL(currency, nativeCurrency, includeUSDRate));\n        /*\n        Example expected error response (if pair is not found)\n        {\n          Response: \"Error\",\n          Message: \"cccagg_or_exchange market does not exist for this coin pair (ETH-<NON_EXISTENT_TOKEN>)\",\n          HasWarning: false,\n        }\n        */\n        if (json.Response === 'Error') {\n            throw new Error(json.Message);\n        }\n        const conversionRate = Number(json[currency.toUpperCase()]);\n        const usdConversionRate = Number(json.USD);\n        if (!Number.isFinite(conversionRate)) {\n            throw new Error(`Invalid response for ${currency.toUpperCase()}: ${json[currency.toUpperCase()]}`);\n        }\n        if (includeUSDRate && !Number.isFinite(usdConversionRate)) {\n            throw new Error(`Invalid response for usdConversionRate: ${json.USD}`);\n        }\n        return {\n            conversionRate,\n            usdConversionRate,\n        };\n    });\n}\nexports.fetchExchangeRate = fetchExchangeRate;\n//# sourceMappingURL=crypto-compare.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageManager = void 0;\nconst events_1 = require(\"events\");\nconst BaseController_1 = require(\"../BaseController\");\n/**\n * Controller in charge of managing - storing, adding, removing, updating - Messages.\n */\nclass AbstractMessageManager extends BaseController_1.BaseController {\n    /**\n     * Creates an AbstractMessageManager instance.\n     *\n     * @param config - Initial options used to configure this controller.\n     * @param state - Initial state to set on this controller.\n     */\n    constructor(config, state) {\n        super(config, state);\n        /**\n         * EventEmitter instance used to listen to specific message events\n         */\n        this.hub = new events_1.EventEmitter();\n        /**\n         * Name of this controller used during composition\n         */\n        this.name = 'AbstractMessageManager';\n        this.defaultState = {\n            unapprovedMessages: {},\n            unapprovedMessagesCount: 0,\n        };\n        this.messages = [];\n        this.initialize();\n    }\n    /**\n     * Saves the unapproved messages, and their count to state.\n     *\n     */\n    saveMessageList() {\n        const unapprovedMessages = this.getUnapprovedMessages();\n        const unapprovedMessagesCount = this.getUnapprovedMessagesCount();\n        this.update({ unapprovedMessages, unapprovedMessagesCount });\n        this.hub.emit('updateBadge');\n    }\n    /**\n     * Updates the status of a Message in this.messages.\n     *\n     * @param messageId - The id of the Message to update.\n     * @param status - The new status of the Message.\n     */\n    setMessageStatus(messageId, status) {\n        const message = this.getMessage(messageId);\n        if (!message) {\n            throw new Error(`${this.name}: Message not found for id: ${messageId}.`);\n        }\n        message.status = status;\n        this.updateMessage(message);\n        this.hub.emit(`${messageId}:${status}`, message);\n        if (status === 'rejected' || status === 'signed' || status === 'errored') {\n            this.hub.emit(`${messageId}:finished`, message);\n        }\n    }\n    /**\n     * Sets a Message in this.messages to the passed Message if the ids are equal.\n     * Then saves the unapprovedMessage list to storage.\n     *\n     * @param message - A Message that will replace an existing Message (with the id) in this.messages.\n     */\n    updateMessage(message) {\n        const index = this.messages.findIndex((msg) => message.id === msg.id);\n        /* istanbul ignore next */\n        if (index !== -1) {\n            this.messages[index] = message;\n        }\n        this.saveMessageList();\n    }\n    /**\n     * A getter for the number of 'unapproved' Messages in this.messages.\n     *\n     * @returns The number of 'unapproved' Messages in this.messages.\n     */\n    getUnapprovedMessagesCount() {\n        return Object.keys(this.getUnapprovedMessages()).length;\n    }\n    /**\n     * A getter for the 'unapproved' Messages in state messages.\n     *\n     * @returns An index of Message ids to Messages, for all 'unapproved' Messages in this.messages.\n     */\n    getUnapprovedMessages() {\n        return this.messages\n            .filter((message) => message.status === 'unapproved')\n            .reduce((result, message) => {\n            result[message.id] = message;\n            return result;\n        }, {});\n    }\n    /**\n     * Adds a passed Message to this.messages, and calls this.saveMessageList() to save\n     * the unapproved Messages from that list to this.messages.\n     *\n     * @param message - The Message to add to this.messages.\n     */\n    addMessage(message) {\n        this.messages.push(message);\n        this.saveMessageList();\n    }\n    /**\n     * Returns a specified Message.\n     *\n     * @param messageId - The id of the Message to get.\n     * @returns The Message with the id that matches the passed messageId, or undefined\n     * if no Message has that id.\n     */\n    getMessage(messageId) {\n        return this.messages.find((message) => message.id === messageId);\n    }\n    /**\n     * Approves a Message. Sets the message status via a call to this.setMessageStatusApproved,\n     * and returns a promise with any the message params modified for proper signing.\n     *\n     * @param messageParams - The messageParams to be used when signing method is called,\n     * plus data added by MetaMask.\n     * @returns Promise resolving to the messageParams with the metamaskId property removed.\n     */\n    approveMessage(messageParams) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.setMessageStatusApproved(messageParams.metamaskId);\n        return this.prepMessageForSigning(messageParams);\n    }\n    /**\n     * Sets a Message status to 'approved' via a call to this.setMessageStatus.\n     *\n     * @param messageId - The id of the Message to approve.\n     */\n    setMessageStatusApproved(messageId) {\n        this.setMessageStatus(messageId, 'approved');\n    }\n    /**\n     * Sets a Message status to 'signed' via a call to this.setMessageStatus and updates\n     * that Message in this.messages by adding the raw signature data of the signature\n     * request to the Message.\n     *\n     * @param messageId - The id of the Message to sign.\n     * @param rawSig - The raw data of the signature request.\n     */\n    setMessageStatusSigned(messageId, rawSig) {\n        const message = this.getMessage(messageId);\n        /* istanbul ignore if */\n        if (!message) {\n            return;\n        }\n        message.rawSig = rawSig;\n        this.updateMessage(message);\n        this.setMessageStatus(messageId, 'signed');\n    }\n    /**\n     * Sets a Message status to 'rejected' via a call to this.setMessageStatus.\n     *\n     * @param messageId - The id of the Message to reject.\n     */\n    rejectMessage(messageId) {\n        this.setMessageStatus(messageId, 'rejected');\n    }\n}\nexports.AbstractMessageManager = AbstractMessageManager;\nexports.default = AbstractMessageManager;\n//# sourceMappingURL=AbstractMessageManager.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compareCollectiblesMetadata = void 0;\n/**\n * Compares collectible metadata entries to any collectible entry.\n * We need this method when comparing a new fetched collectible metadata, in case a entry changed to a defined value,\n * there's a need to update the collectible in state.\n *\n * @param newCollectibleMetadata - Collectible metadata object.\n * @param collectible - Collectible object to compare with.\n * @returns Whether there are differences.\n */\nfunction compareCollectiblesMetadata(newCollectibleMetadata, collectible) {\n    const keys = [\n        'image',\n        'backgroundColor',\n        'imagePreview',\n        'imageThumbnail',\n        'imageOriginal',\n        'animation',\n        'animationOriginal',\n        'externalLink',\n    ];\n    const differentValues = keys.reduce((value, key) => {\n        if (newCollectibleMetadata[key] &&\n            newCollectibleMetadata[key] !== collectible[key]) {\n            return value + 1;\n        }\n        return value;\n    }, 0);\n    return differentValues > 0;\n}\nexports.compareCollectiblesMetadata = compareCollectiblesMetadata;\n//# sourceMappingURL=assetsUtil.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeout = exports.Semaphore = exports.Mutex = void 0;\nvar Mutex_1 = require(\"./Mutex\");\nObject.defineProperty(exports, \"Mutex\", { enumerable: true, get: function () { return Mutex_1.default; } });\nvar Semaphore_1 = require(\"./Semaphore\");\nObject.defineProperty(exports, \"Semaphore\", { enumerable: true, get: function () { return Semaphore_1.default; } });\nvar withTimeout_1 = require(\"./withTimeout\");\nObject.defineProperty(exports, \"withTimeout\", { enumerable: true, get: function () { return withTimeout_1.withTimeout; } });\n","let { urlAlphabet } = require('./url-alphabet/index.cjs')\nif (\"production\" !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","\n'use strict'\n\nif (\"production\" === 'production') {\n  module.exports = require('./immer.cjs.production.min.js')\n} else {\n  module.exports = require('./immer.cjs.development.js')\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchTokenMetadata = exports.fetchTokenList = void 0;\nconst util_1 = require(\"../util\");\nconst END_POINT = 'https://token-api.metaswap.codefi.network';\n/**\n * Get the tokens URL for a specific network.\n *\n * @param chainId - The chain ID of the network the tokens requested are on.\n * @returns The tokens URL.\n */\nfunction getTokensURL(chainId) {\n    return `${END_POINT}/tokens/${chainId}`;\n}\n/**\n * Get the token metadata URL for the given network and token.\n *\n * @param chainId - The chain ID of the network the token is on.\n * @param tokenAddress - The token address.\n * @returns The token metadata URL.\n */\nfunction getTokenMetadataURL(chainId, tokenAddress) {\n    return `${END_POINT}/token/${chainId}?address=${tokenAddress}`;\n}\n// Token list averages 1.6 MB in size\n// timeoutFetch by default has a 500ms timeout, which will almost always timeout given the response size.\nconst timeout = 10000;\n/**\n * Fetch the list of token metadata for a given network. This request is cancellable using the\n * abort signal passed in.\n *\n * @param chainId - The chain ID of the network the requested tokens are on.\n * @param abortSignal - The abort signal used to cancel the request if necessary.\n * @returns The token list, or `undefined` if the request was cancelled.\n */\nfunction fetchTokenList(chainId, abortSignal) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const tokenURL = getTokensURL(chainId);\n        const response = yield queryApi(tokenURL, abortSignal);\n        if (response) {\n            return parseJsonResponse(response);\n        }\n        return undefined;\n    });\n}\nexports.fetchTokenList = fetchTokenList;\n/**\n * Fetch metadata for the token address provided for a given network. This request is cancellable\n * using the abort signal passed in.\n *\n * @param chainId - The chain ID of the network the token is on.\n * @param tokenAddress - The address of the token to fetch metadata for.\n * @param abortSignal - The abort signal used to cancel the request if necessary.\n * @returns The token metadata, or `undefined` if the request was cancelled.\n */\nfunction fetchTokenMetadata(chainId, tokenAddress, abortSignal) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const tokenMetadataURL = getTokenMetadataURL(chainId, tokenAddress);\n        const response = yield queryApi(tokenMetadataURL, abortSignal);\n        if (response) {\n            return parseJsonResponse(response);\n        }\n        return undefined;\n    });\n}\nexports.fetchTokenMetadata = fetchTokenMetadata;\n/**\n * Perform fetch request against the api.\n *\n * @param apiURL - The URL of the API to fetch.\n * @param abortSignal - The abort signal used to cancel the request if necessary.\n * @returns Promise resolving request response.\n */\nfunction queryApi(apiURL, abortSignal) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fetchOptions = {\n            referrer: apiURL,\n            referrerPolicy: 'no-referrer-when-downgrade',\n            method: 'GET',\n            mode: 'cors',\n            signal: abortSignal,\n            cache: 'default',\n        };\n        fetchOptions.headers = new window.Headers();\n        fetchOptions.headers.set('Content-Type', 'application/json');\n        try {\n            return yield util_1.timeoutFetch(apiURL, fetchOptions, timeout);\n        }\n        catch (err) {\n            if (err.name === 'AbortError') {\n                console.log('Request is aborted');\n            }\n        }\n        return undefined;\n    });\n}\n/**\n * Parse an API response and return the response JSON data.\n *\n * @param apiResponse - The API response to parse.\n * @returns The response JSON data.\n * @throws Will throw if the response includes an error.\n */\nfunction parseJsonResponse(apiResponse) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const responseObj = yield apiResponse.json();\n        // api may return errors as json without setting an error http status code\n        if (responseObj === null || responseObj === void 0 ? void 0 : responseObj.error) {\n            throw new Error(`TokenService Error: ${responseObj.error}`);\n        }\n        return responseObj;\n    });\n}\n//# sourceMappingURL=token-service.js.map","/*globals self, window */\n\"use strict\"\n\n/*eslint-disable @mysticatea/prettier */\nconst { AbortController } = globalThis;\n/*eslint-enable @mysticatea/prettier */\n\nmodule.exports = AbortController\n","module.exports = require('./contract-map.json')\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.abiERC1155 = exports.abiERC721 = exports.abiERC20 = void 0;\nconst abiERC20_1 = require(\"./abis/abiERC20\");\nObject.defineProperty(exports, \"abiERC20\", { enumerable: true, get: function () { return abiERC20_1.abiERC20; } });\nconst abiERC721_1 = require(\"./abis/abiERC721\");\nObject.defineProperty(exports, \"abiERC721\", { enumerable: true, get: function () { return abiERC721_1.abiERC721; } });\nconst abiERC1155_1 = require(\"./abis/abiERC1155\");\nObject.defineProperty(exports, \"abiERC1155\", { enumerable: true, get: function () { return abiERC1155_1.abiERC1155; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GasFeeController_1 = require(\"./GasFeeController\");\n/**\n * Obtains a set of max base and priority fee estimates along with time estimates so that we\n * can present them to users when they are sending transactions or making swaps.\n *\n * @param args - The arguments.\n * @param args.isEIP1559Compatible - Governs whether or not we can use an EIP-1559-only method to\n * produce estimates.\n * @param args.isLegacyGasAPICompatible - Governs whether or not we can use a non-EIP-1559 method to\n * produce estimates (for instance, testnets do not support estimates altogether).\n * @param args.fetchGasEstimates - A function that fetches gas estimates using an EIP-1559-specific\n * API.\n * @param args.fetchGasEstimatesUrl - The URL for the API we can use to obtain EIP-1559-specific\n * estimates.\n * @param args.fetchGasEstimatesViaEthFeeHistory - A function that fetches gas estimates using\n * `eth_feeHistory` (an EIP-1559 feature).\n * @param args.fetchLegacyGasPriceEstimates - A function that fetches gas estimates using an\n * non-EIP-1559-specific API.\n * @param args.fetchLegacyGasPriceEstimatesUrl - The URL for the API we can use to obtain\n * non-EIP-1559-specific estimates.\n * @param args.fetchEthGasPriceEstimate - A function that fetches gas estimates using\n * `eth_gasPrice`.\n * @param args.calculateTimeEstimate - A function that determine time estimate bounds.\n * @param args.clientId - An identifier that an API can use to know who is asking for estimates.\n * @param args.ethQuery - An EthQuery instance we can use to talk to Ethereum directly.\n * @returns The gas fee calculations.\n */\nfunction determineGasFeeCalculations({ isEIP1559Compatible, isLegacyGasAPICompatible, fetchGasEstimates, fetchGasEstimatesUrl, fetchGasEstimatesViaEthFeeHistory, fetchLegacyGasPriceEstimates, fetchLegacyGasPriceEstimatesUrl, fetchEthGasPriceEstimate, calculateTimeEstimate, clientId, ethQuery, }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            if (isEIP1559Compatible) {\n                let estimates;\n                try {\n                    estimates = yield fetchGasEstimates(fetchGasEstimatesUrl, clientId);\n                }\n                catch (_a) {\n                    estimates = yield fetchGasEstimatesViaEthFeeHistory(ethQuery);\n                }\n                const { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas, } = estimates.medium;\n                const estimatedGasFeeTimeBounds = calculateTimeEstimate(suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas, estimates);\n                return {\n                    gasFeeEstimates: estimates,\n                    estimatedGasFeeTimeBounds,\n                    gasEstimateType: GasFeeController_1.GAS_ESTIMATE_TYPES.FEE_MARKET,\n                };\n            }\n            else if (isLegacyGasAPICompatible) {\n                const estimates = yield fetchLegacyGasPriceEstimates(fetchLegacyGasPriceEstimatesUrl, clientId);\n                return {\n                    gasFeeEstimates: estimates,\n                    estimatedGasFeeTimeBounds: {},\n                    gasEstimateType: GasFeeController_1.GAS_ESTIMATE_TYPES.LEGACY,\n                };\n            }\n            throw new Error('Main gas fee/price estimation failed. Use fallback');\n        }\n        catch (_b) {\n            try {\n                const estimates = yield fetchEthGasPriceEstimate(ethQuery);\n                return {\n                    gasFeeEstimates: estimates,\n                    estimatedGasFeeTimeBounds: {},\n                    gasEstimateType: GasFeeController_1.GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n                };\n            }\n            catch (error) {\n                throw new Error(`Gas fee/price estimation failed. Message: ${error.message}`);\n            }\n        }\n    });\n}\nexports.default = determineGasFeeCalculations;\n//# sourceMappingURL=determineGasFeeCalculations.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateTimeEstimate = exports.fetchEthGasPriceEstimate = exports.fetchLegacyGasPriceEstimates = exports.fetchGasEstimates = exports.normalizeGWEIDecimalNumbers = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst util_1 = require(\"../util\");\nconst makeClientIdHeader = (clientId) => ({ 'X-Client-Id': clientId });\n/**\n * Convert a decimal GWEI value to a decimal string rounded to the nearest WEI.\n *\n * @param n - The input GWEI amount, as a decimal string or a number.\n * @returns The decimal string GWEI amount.\n */\nfunction normalizeGWEIDecimalNumbers(n) {\n    const numberAsWEIHex = util_1.gweiDecToWEIBN(n).toString(16);\n    const numberAsGWEI = util_1.weiHexToGweiDec(numberAsWEIHex).toString(10);\n    return numberAsGWEI;\n}\nexports.normalizeGWEIDecimalNumbers = normalizeGWEIDecimalNumbers;\n/**\n * Fetch gas estimates from the given URL.\n *\n * @param url - The gas estimate URL.\n * @param clientId - The client ID used to identify to the API who is asking for estimates.\n * @returns The gas estimates.\n */\nfunction fetchGasEstimates(url, clientId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const estimates = yield util_1.handleFetch(url, clientId ? { headers: makeClientIdHeader(clientId) } : undefined);\n        return {\n            low: Object.assign(Object.assign({}, estimates.low), { suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas), suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas) }),\n            medium: Object.assign(Object.assign({}, estimates.medium), { suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas), suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas) }),\n            high: Object.assign(Object.assign({}, estimates.high), { suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas), suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas) }),\n            estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n            historicalBaseFeeRange: estimates.historicalBaseFeeRange,\n            baseFeeTrend: estimates.baseFeeTrend,\n            latestPriorityFeeRange: estimates.latestPriorityFeeRange,\n            historicalPriorityFeeRange: estimates.historicalPriorityFeeRange,\n            priorityFeeTrend: estimates.priorityFeeTrend,\n            networkCongestion: estimates.networkCongestion,\n        };\n    });\n}\nexports.fetchGasEstimates = fetchGasEstimates;\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n *\n * @param url - The URL to fetch gas price estimates from.\n * @param clientId - The client ID used to identify to the API who is asking for estimates.\n * @returns The gas price estimates.\n */\nfunction fetchLegacyGasPriceEstimates(url, clientId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const result = yield util_1.handleFetch(url, {\n            referrer: url,\n            referrerPolicy: 'no-referrer-when-downgrade',\n            method: 'GET',\n            mode: 'cors',\n            headers: Object.assign({ 'Content-Type': 'application/json' }, (clientId && makeClientIdHeader(clientId))),\n        });\n        return {\n            low: result.SafeGasPrice,\n            medium: result.ProposeGasPrice,\n            high: result.FastGasPrice,\n        };\n    });\n}\nexports.fetchLegacyGasPriceEstimates = fetchLegacyGasPriceEstimates;\n/**\n * Get a gas price estimate from the network using the `eth_gasPrice` method.\n *\n * @param ethQuery - The EthQuery instance to call the network with.\n * @returns A gas price estimate.\n */\nfunction fetchEthGasPriceEstimate(ethQuery) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const gasPrice = yield util_1.query(ethQuery, 'gasPrice');\n        return {\n            gasPrice: util_1.weiHexToGweiDec(gasPrice).toString(),\n        };\n    });\n}\nexports.fetchEthGasPriceEstimate = fetchEthGasPriceEstimate;\n/**\n * Estimate the time it will take for a transaction to be confirmed.\n *\n * @param maxPriorityFeePerGas - The max priority fee per gas.\n * @param maxFeePerGas - The max fee per gas.\n * @param gasFeeEstimates - The gas fee estimates.\n * @returns The estimated lower and upper bounds for when this transaction will be confirmed.\n */\nfunction calculateTimeEstimate(maxPriorityFeePerGas, maxFeePerGas, gasFeeEstimates) {\n    const { low, medium, high, estimatedBaseFee } = gasFeeEstimates;\n    const maxPriorityFeePerGasInWEI = util_1.gweiDecToWEIBN(maxPriorityFeePerGas);\n    const maxFeePerGasInWEI = util_1.gweiDecToWEIBN(maxFeePerGas);\n    const estimatedBaseFeeInWEI = util_1.gweiDecToWEIBN(estimatedBaseFee);\n    const effectiveMaxPriorityFee = ethereumjs_util_1.BN.min(maxPriorityFeePerGasInWEI, maxFeePerGasInWEI.sub(estimatedBaseFeeInWEI));\n    const lowMaxPriorityFeeInWEI = util_1.gweiDecToWEIBN(low.suggestedMaxPriorityFeePerGas);\n    const mediumMaxPriorityFeeInWEI = util_1.gweiDecToWEIBN(medium.suggestedMaxPriorityFeePerGas);\n    const highMaxPriorityFeeInWEI = util_1.gweiDecToWEIBN(high.suggestedMaxPriorityFeePerGas);\n    let lowerTimeBound;\n    let upperTimeBound;\n    if (effectiveMaxPriorityFee.lt(lowMaxPriorityFeeInWEI)) {\n        lowerTimeBound = null;\n        upperTimeBound = 'unknown';\n    }\n    else if (effectiveMaxPriorityFee.gte(lowMaxPriorityFeeInWEI) &&\n        effectiveMaxPriorityFee.lt(mediumMaxPriorityFeeInWEI)) {\n        lowerTimeBound = low.minWaitTimeEstimate;\n        upperTimeBound = low.maxWaitTimeEstimate;\n    }\n    else if (effectiveMaxPriorityFee.gte(mediumMaxPriorityFeeInWEI) &&\n        effectiveMaxPriorityFee.lt(highMaxPriorityFeeInWEI)) {\n        lowerTimeBound = medium.minWaitTimeEstimate;\n        upperTimeBound = medium.maxWaitTimeEstimate;\n    }\n    else if (effectiveMaxPriorityFee.eq(highMaxPriorityFeeInWEI)) {\n        lowerTimeBound = high.minWaitTimeEstimate;\n        upperTimeBound = high.maxWaitTimeEstimate;\n    }\n    else {\n        lowerTimeBound = 0;\n        upperTimeBound = high.maxWaitTimeEstimate;\n    }\n    return {\n        lowerTimeBound,\n        upperTimeBound,\n    };\n}\nexports.calculateTimeEstimate = calculateTimeEstimate;\n//# sourceMappingURL=gas-util.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethjs_unit_1 = require(\"ethjs-unit\");\nconst constants_1 = require(\"../constants\");\nconst BlockFeeHistoryDatasetFetcher_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/BlockFeeHistoryDatasetFetcher\"));\nconst calculateGasFeeEstimatesForPriorityLevels_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/calculateGasFeeEstimatesForPriorityLevels\"));\nconst calculateBaseFeeRange_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/calculateBaseFeeRange\"));\nconst calculateBaseFeeTrend_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/calculateBaseFeeTrend\"));\nconst calculatePriorityFeeRange_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/calculatePriorityFeeRange\"));\nconst calculatePriorityFeeTrend_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/calculatePriorityFeeTrend\"));\nconst calculateNetworkCongestion_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/calculateNetworkCongestion\"));\nconst fetchLatestBlock_1 = __importDefault(require(\"./fetchGasEstimatesViaEthFeeHistory/fetchLatestBlock\"));\n/**\n * Generates gas fee estimates based on gas fees that have been used in the recent past so that\n * those estimates can be displayed to users.\n *\n * To produce the estimates, the last 5 blocks are read from the network, and for each block, the\n * priority fees for transactions at the 10th, 20th, and 30th percentiles are also read (here\n * \"percentile\" signifies the level at which those transactions contribute to the overall gas used\n * for the block, where higher percentiles correspond to higher fees). This information is used to\n * calculate reasonable max priority and max fees for three different priority levels (higher\n * priority = higher fee).\n *\n * @param ethQuery - An EthQuery instance.\n * @returns Base and priority fee estimates, categorized by priority level, as well as an estimate\n * for the next block's base fee.\n */\nfunction fetchGasEstimatesViaEthFeeHistory(ethQuery) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const latestBlock = yield fetchLatestBlock_1.default(ethQuery);\n        const fetcher = new BlockFeeHistoryDatasetFetcher_1.default({\n            ethQuery,\n            endBlockNumber: latestBlock.number,\n        });\n        const blocksByDataset = yield fetcher.forAll();\n        const levelSpecificEstimates = calculateGasFeeEstimatesForPriorityLevels_1.default(blocksByDataset.smallRange);\n        const estimatedBaseFee = ethjs_unit_1.fromWei(latestBlock.baseFeePerGas, constants_1.GWEI);\n        const historicalBaseFeeRange = calculateBaseFeeRange_1.default(blocksByDataset.mediumRange);\n        const baseFeeTrend = calculateBaseFeeTrend_1.default(blocksByDataset.latestWithNextBlock);\n        const latestPriorityFeeRange = calculatePriorityFeeRange_1.default(blocksByDataset.latest);\n        const historicalPriorityFeeRange = calculatePriorityFeeRange_1.default(blocksByDataset.mediumRange);\n        const priorityFeeTrend = calculatePriorityFeeTrend_1.default(blocksByDataset.tinyRange);\n        const networkCongestion = calculateNetworkCongestion_1.default(blocksByDataset.longRange);\n        return Object.assign(Object.assign({}, levelSpecificEstimates), { estimatedBaseFee,\n            historicalBaseFeeRange,\n            baseFeeTrend,\n            latestPriorityFeeRange,\n            historicalPriorityFeeRange,\n            priorityFeeTrend,\n            networkCongestion });\n    });\n}\nexports.default = fetchGasEstimatesViaEthFeeHistory;\n//# sourceMappingURL=fetchGasEstimatesViaEthFeeHistory.js.map","'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n","module.exports={\n  \"version\": 2,\n  \"tolerance\": 2,\n  \"fuzzylist\": [\n    \"metamask.io\",\n    \"maskmeta.org\",\n    \"myetherwallet.com\",\n    \"cryptokitties.co\",\n    \"localethereum.com\",\n    \"localcryptos.com\",\n    \"auctus.org\",\n    \"dfinity.org\",\n    \"hederahashgraph.com\",\n    \"etherscan.io\",\n    \"originprotocol.com\",\n    \"makerdao.com\",\n    \"makerfoundation.com\",\n    \"fulcrum.trade\",\n    \"launchpad.ethereum.org\"\n    \n  ],\n  \"whitelist\": [\n    \"nfinita.com\",\n    \"nfinita.io\",\n    \"nfinita.org\",\n    \"spi.club\",\n    \"stakespi.com\",\n    \"aucto.com\",\n    \"deficity.tech\",\n    \"deficity.app\",\n    \"arfinity.io\",\n    \"cactus.tools\",\n    \"cactus.bm\",\n    \"ascetus.com\",\n    \"mynetherwallet.io\",\n    \"metamasks.com\",\n    \"metacask.com\",\n    \"metacask.io\",\n    \"efinity.io\",\n    \"finite.ltd\",\n    \"auus.cloud\",\n    \"masternodes.online\",\n    \"makerdao.network\",\n    \"myetpwallet.com\",\n    \"fulcrum.rocks\",\n    \"mycrpro.com\",\n    \"ycryptos.com\",\n    \"mrcrypto.space\",\n    \"mrcrypto.me\",\n    \"ethscan.org\",\n    \"crypto.museum\",\n    \"qtcrypto.com\",\n    \"dcrypto.io\",\n    \"drcrypto.io\",\n    \"decrypto.in\",\n    \"mycryptonx.com\",\n    \"m3crypto.online\",\n    \"dcrypto.net\",\n    \"msncrypto.com\",\n    \"incrypto.pl\",\n    \"crypto.market\",\n    \"j-crypto.com\",\n    \"scrypto.digital\",\n    \"pmicrypto.ml\",\n    \"mecrypto.club\",\n    \"mdxcrypto.com\",\n    \"launchpad.ethereum.org\",\n    \"enledger.io\",\n    \"crypto.tt\",\n    \"badger.finance\",\n    \"enledger.com\",\n    \"ledgerx.com\",\n    \"ledgerql.com\",\n    \"fulcrum.wiki\",\n    \"aptus.hr\",\n    \"edge.network\",\n    \"actius.mx\",\n    \"ipledger.co\",\n    \"auctim.com\",\n    \"fulcrumep.com\",\n    \"definity.network\",\n    \"ledger.com\",\n    \"wax.community\",\n    \"flarum.org\",\n    \"qiswap.com\",\n    \"decrypto.finance\",\n    \"uniswap.eth\",\n    \"crypto.co\",\n    \"anyswap.exchange\",\n    \"anyswap.network\",\n    \"miniswap.org\",\n    \"anyswap.org\",\n    \"anyswap.info\",\n    \"anyswap.market\",\n    \"anyswap.net\",\n    \"uniswap.ch\",\n    \"uniswap.io\",\n    \"uniswap.ninja\",\n    \"unisocks.exchange\",\n    \"unipig.exchange\",\n    \"uniswap.vision\",\n    \"uniswap.info\",\n    \"uniswap.org\",\n    \"uniswap.exchange\",\n    \"uniswapex.io\",\n    \"auctia.io\",\n    \"sgcrypto.info\",\n    \"mr-crypto.net\",\n    \"morcrypto.net\",\n    \"dfinite.org\",\n    \"decrypto.org\",\n    \"mracrypto.com\",\n    \"etinity.net\",\n    \"crypto.games\",\n    \"crypto-games.net\",\n    \"crypto.ro\",\n    \"buycrypto.info\",\n    \"basic.international\",\n    \"actua.ca\",\n    \"bultus.nl\",\n    \"oai.io\",\n    \"pass.org\",\n    \"yasiv.com\",\n    \"tasks.org\",\n    \"audus.net\",\n    \"osris.org\",\n    \"otis.is\",\n    \"oris.ch\",\n    \"oaks.rent\",\n    \"oxis.org\",\n    \"navis.io\",\n    \"sfoasis.com\",\n    \"saxis.dk\",\n    \"marsis.tv\",\n    \"oss.kr\",\n    \"casio.com\",\n    \"pais.center\",\n    \"uchus.online\",\n    \"patis.com\",\n    \"osi.es\",\n    \"tasos.co\",\n    \"pass.camp\",\n    \"asics.com\",\n    \"omsi.edu\",\n    \"vultus.io\",\n    \"kosis.kr\",\n    \"paris.cl\",\n    \"parsis.agency\",\n    \"apis.guru\",\n    \"asi.lv\",\n    \"pasts.lv\",\n    \"oesir.com\",\n    \"avis.ca\",\n    \"oess.de\",\n    \"horasis.org\",\n    \"oazis.hu\",\n    \"zapis.kz\",\n    \"nadis.jp\",\n    \"osif.org\",\n    \"omnis.com\",\n    \"fass.se\",\n    \"tass.ru\",\n    \"sis.pt\",\n    \"3asi.es\",\n    \"iasia.co\",\n    \"okasi.me\",\n    \"wasi.dev\",\n    \"nosis.com\",\n    \"odasie.fr\",\n    \"orvis.com\",\n    \"ovis.news\",\n    \"orasio.org\",\n    \"asos.fr\",\n    \"basic.finance\",\n    \"vanis.io\",\n    \"avis.com\",\n    \"axis.li\",\n    \"nafis.co\",\n    \"trinity.pw\",\n    \"axis.com\",\n    \"oasa.co\",\n    \"apis.zone\",\n    \"otris.de\",\n    \"stasis.network\",\n    \"nais.io\",\n    \"arctis.at\",\n    \"atc.us.es\",\n    \"tasit.io\",\n    \"trinity.one\",\n    \"fasio.biz\",\n    \"fasio.org\",\n    \"fasio.net\",\n    \"fasio.yokohama\",\n    \"canis.xyz\",\n    \"oeis.org\",\n    \"paris.fr\",\n    \"basic.net\",\n    \"asus.com\",\n    \"gsis.gr\",\n    \"asos.com\",\n    \"orbis.pl\",\n    \"stasis.net\",\n    \"stasis.foundation\",\n    \"ofsys.com\",\n    \"acrypto.nl\",\n    \"gesis.org\",\n    \"orasis.tech\",\n    \"basic.fail\",\n    \"apis.mn\",\n    \"asic.to\",\n    \"kalis.me\",\n    \"mass.gov\",\n    \"stakerdao.com\",\n    \"oasis.fish\",\n    \"makerpad.co\",\n    \"vk.com\",\n    \"alis.to\",\n    \"groasis.investments\",\n    \"msn.com\",\n    \"ok.ru\",\n    \"makerdao.com\",\n    \"makerfoundation.com\",\n    \"oasis.app\",\n    \"mkr.tools\",\n    \"mlcrypt.de\",\n    \"buycrypto.work\",\n    \"metamail.app\",\n    \"finite.games\",\n    \"decrypto.fr\",\n    \"dfini.com\",\n    \"damii.usermd.net\",\n    \"etherscams.io\",\n    \"strzelcu.usermd.net\",\n    \"icrypto.media\",\n    \"ryecrypto.com\",\n    \"crypto.gy\",\n    \"pmpcrypto.com\",\n    \"ejcrypto.com\",\n    \"bccrypto.club\",\n    \"crypto.law\",\n    \"socrypto.io\",\n    \"crypto.tax\",\n    \"okcrypto.com\",\n    \"acts.ca\",\n    \"edfinity.com\",\n    \"therascan.info\",\n    \"wifinity.es\",\n    \"nfinity.com\",\n    \"ways.16mb.com\",\n    \"aucta.io\",\n    \"findity.se\",\n    \"dexinity.com\",\n    \"etherscan.com\",\n    \"arttus.net\",\n    \"arttus.art\",\n    \"crypto.garden\",\n    \"kactus.com\",\n    \"decrypto.com.ar\",\n    \"decrypto.la\",\n    \"etherscan.kr\",\n    \"updog.co\",\n    \"cryptotittiez.com\",\n    \"paycrypto.com\",\n    \"trcrypto.live\",\n    \"act4s.com\",\n    \"ecrypto.shop\",\n    \"auths.eu\",\n    \"finits.org\",\n    \"mifinity.com\",\n    \"cryptonities.com\",\n    \"crypto.center\",\n    \"autos.deals\",\n    \"abcrypto.co\",\n    \"gcrypto.media\",\n    \"paycrypto.tech\",\n    \"metamesh.com\",\n    \"cactus.app\",\n    \"lucius.fr\",\n    \"crypto.casa\",\n    \"socrypto.app\",\n    \"gocrypto.com\",\n    \"becrypto.co\",\n    \"etherstat.io\",\n    \"arcus.org\",\n    \"ubtus.com\",\n    \"metahash.tools\",\n    \"metatalk.io\",\n    \"mrcrypto.xyz\",\n    \"fixity.io\",\n    \"mycrypto.guide\",\n    \"affinity.id\",\n    \"mrcrypto.cc\",\n    \"binance.net\",\n    \"binance.cloud\",\n    \"binance.vision\",\n    \"infinity.cm\",\n    \"sccrypto.net\",\n    \"crypto.ie\",\n    \"tkcrypto.com\",\n    \"eufinity.com\",\n    \"idcrypto.fr\",\n    \"divinity.clothing\",\n    \"crypto.cards\",\n    \"encrypto.art\",\n    \"crypto.express\",\n    \"crypto.airforce\",\n    \"accrypto.io\",\n    \"ohmycrypto.news\",\n    \"aureus.cl\",\n    \"audius.de\",\n    \"ethplode.org\",\n    \"sfcrypto.co\",\n    \"alytus.lt\",\n    \"nbcrypto.eu\",\n    \"arctos.capital\",\n    \"incrypto.trade\",\n    \"skycrypto.io\",\n    \"crypto.men\",\n    \"etherean.io\",\n    \"affinity.pt\",\n    \"infinity.family\",\n    \"metamesh.life\",\n    \"metamesh.online\",\n    \"metamesh.co\",\n    \"crypto.business\",\n    \"aetherwallet.io\",\n    \"icon.community\",\n    \"ethercap.com\",\n    \"ncrypto.sale\",\n    \"scrypto.capital\",\n    \"scrypto.mt\",\n    \"lzcrypto.net\",\n    \"ezycrypto.net\",\n    \"vultus.se\",\n    \"akitus.com\",\n    \"buycrypto.today\",\n    \"coindesk-email.com\",\n    \"buycrypto.gr\",\n    \"atfinity.io\",\n    \"atfinity.de\",\n    \"finity.ch\",\n    \"atfinity.li\",\n    \"regfinity.io\",\n    \"betanet.quantstamp.com\",\n    \"modcrypto.online\",\n    \"crypto.ad\",\n    \"ctus.io\",\n    \"f5crypto.com\",\n    \"crypto.direct\",\n    \"ruckus.org\",\n    \"justus.co\",\n    \"dignity.cf\",\n    \"arctur.si\",\n    \"becrypto.fund\",\n    \"lucius.digital\",\n    \"binance.co\",\n    \"xcrypto.in\",\n    \"lucus.io\",\n    \"xfinite.io\",\n    \"xfinite.xyz\",\n    \"infinity.money\",\n    \"crypto.xyz\",\n    \"crypto.holdings\",\n    \"crypto.directory\",\n    \"bucrypto.co\",\n    \"mitcrypto.tech\",\n    \"sydcrypto.com\",\n    \"gocrypto.bet\",\n    \"scrypto.club\",\n    \"victus.gg\",\n    \"mycryptoro.com\",\n    \"infinity.black\",\n    \"nactus.com\",\n    \"crypto.tn\",\n    \"autum.com\",\n    \"alictus.com\",\n    \"justus.pw\",\n    \"etherman.app\",\n    \"ducatus.net\",\n    \"eitherscan.com\",\n    \"dmunity.com\",\n    \"cryptokitties.city\",\n    \"etherkan.com\",\n    \"aicrypto.io\",\n    \"autos.ca\",\n    \"acatus.com\",\n    \"pcrypto.io\",\n    \"metacash.online\",\n    \"metacash.it\",\n    \"trinity.edu\",\n    \"atfinity.ch\",\n    \"aptus.aero\",\n    \"odinity.com\",\n    \"buycrypto.guide\",\n    \"metalmas.com\",\n    \"vafinity.com\",\n    \"mycryp.to\",\n    \"cryptokittiesvr.co\",\n    \"token.usermd.net\",\n    \"dbcrypto.io\",\n    \"ethercat.org\",\n    \"bestrate.org\",\n    \"msgcrypto.com\",\n    \"vethorscan.io\",\n    \"mykrypto.io\",\n    \"trycrypto.net\",\n    \"trycrypto.com\",\n    \"atatus.com\",\n    \"acuitus.com\",\n    \"tradingview.com\",\n    \"coinmarketcap.com\",\n    \"crypto.fm\",\n    \"crypto.ru\",\n    \"x-crypto.com\",\n    \"mycrypto.store\",\n    \"etherwan.com\",\n    \"etherean.com\",\n    \"etherean.org\",\n    \"cactus.tv\",\n    \"victus.be\",\n    \"crypto.gratis\",\n    \"crypto.markets\",\n    \"metamath.org\",\n    \"crypto.schule\",\n    \"cactus.lu\",\n    \"arctus.io\",\n    \"lecrypto.club\",\n    \"aicrypto.blog\",\n    \"jmcrypto.org\",\n    \"tactus.dk\",\n    \"auctus.com\",\n    \"avotus.com\",\n    \"mycrypto.guru\",\n    \"cultus.com\",\n    \"actas.club\",\n    \"crypto.tube\",\n    \"aureus.nl\",\n    \"crypto.ca\",\n    \"fallin.rf.gd\",\n    \"adcrypto.io\",\n    \"wbored2.usermd.net\",\n    \"gocrypto.dk\",\n    \"etherscape.io\",\n    \"mlbcrypto.io\",\n    \"trinity.design\",\n    \"secrypto.io\",\n    \"acus.gov\",\n    \"cryptonia-dash.bitballoon.com\",\n    \"ecrypto.ro\",\n    \"cofinity.net\",\n    \"crypto.farm\",\n    \"crypto.radio\",\n    \"arcrypto.xyz\",\n    \"l-crypto.com\",\n    \"aptus.de\",\n    \"crypto.study\",\n    \"crypto.work\",\n    \"etherical.io\",\n    \"arcus.city\",\n    \"w2crypto.com\",\n    \"criptokitties.it\",\n    \"crypto.kg\",\n    \"buycrypto.ca\",\n    \"cactus.is\",\n    \"apc-us.com\",\n    \"usonline.apc.fr\",\n    \"fructus.io\",\n    \"cactus.vision\",\n    \"incrypto.io\",\n    \"actis.nl\",\n    \"nem-dns.bitballoon.com\",\n    \"ethersat.io\",\n    \"sanctus.io\",\n    \"smbr.rf.gd\",\n    \"mocrypto.io\",\n    \"mycryptos.io\",\n    \"affinity.help\",\n    \"originprotocol.com\",\n    \"kactus.io\",\n    \"apttus.com\",\n    \"aptus.be\",\n    \"ethen.market\",\n    \"encrypto.site\",\n    \"encrypto.website\",\n    \"crypto.one\",\n    \"crypto.fashion\",\n    \"megamark.fr\",\n    \"apptus.cloud\",\n    \"apptus.com\",\n    \"aucxis.gr\",\n    \"crypto.ch\",\n    \"etherplan.com\",\n    \"octus.network\",\n    \"underwear-leaderboard.bitballoon.com\",\n    \"midcrypto.com\",\n    \"meratask.com\",\n    \"arhash.xyz\",\n    \"quantstamp.com\",\n    \"app.quantstamp.com\",\n    \"tacrypto.net\",\n    \"hopeful-poitras-654e5a.bitballoon.com\",\n    \"actum.online\",\n    \"iunctus.io\",\n    \"efinity.com\",\n    \"bccrypto.org\",\n    \"mtkrypto.de\",\n    \"adoring-booth-276e15.bitballoon.com\",\n    \"actux.com\",\n    \"abcrypto.nl\",\n    \"abchus.no\",\n    \"gocrypto.tools\",\n    \"crypto.eu\",\n    \"auditus.cc\",\n    \"divinity.game\",\n    \"aditus.net\",\n    \"amatus.com\",\n    \"aureus.aero\",\n    \"aginity.com\",\n    \"aurus.io\",\n    \"afiniti.com\",\n    \"actu.fr\",\n    \"nuclus.co\",\n    \"nuclus.io\",\n    \"auctus.org\",\n    \"ncrypto.io\",\n    \"dfinery.com\",\n    \"hederahashgraph.com\",\n    \"mycrypto.education\",\n    \"metamesh.io\",\n    \"crypto.by\",\n    \"mycrypto.toys\",\n    \"hkcrypto.com\",\n    \"crypto.deals\",\n    \"crypto.quebec\",\n    \"crypto.dance\",\n    \"vncrypto.info\",\n    \"crypto.ms\",\n    \"ncrypto.com\",\n    \"mrcrypto.dk\",\n    \"nedfinity.com\",\n    \"affinity.me\",\n    \"crypto.cat\",\n    \"winity.io\",\n    \"gfinity.net\",\n    \"mycryptons.com\",\n    \"aicrypto.ai\",\n    \"azcrypto.net\",\n    \"crypto.com\",\n    \"crypto.org\",\n    \"affinity.photography\",\n    \"abcrypto.info\",\n    \"ucrypto.net\",\n    \"vscrypto.com\",\n    \"affinity.com\",\n    \"affinity.co\",\n    \"upfinity.io\",\n    \"crypto.news\",\n    \"dbcrypto.com\",\n    \"ezcrypto.guide\",\n    \"gocrypto.me\",\n    \"finity.ai\",\n    \"weffkemining.com\",\n    \"nwcrypto.com\",\n    \"cobinhood.com\",\n    \"affinity.vc\",\n    \"trinity.tech\",\n    \"metahusk.com\",\n    \"mrcrypto.fr\",\n    \"affinity.store\",\n    \"affinity.serif.com\",\n    \"xfinity.com\",\n    \"dfinity.org\",\n    \"mycrypto.website\",\n    \"pqcrypto.org\",\n    \"z-crypto.com\",\n    \"mpcrypo.com\",\n    \"localethereum.com\",\n    \"localcryptos.com\",\n    \"localbitcoins.com\",\n    \"huobipro.com\",\n    \"ncrypto.tech\",\n    \"9crypto.co\",\n    \"netmask.hu\",\n    \"cryptokittens.club\",\n    \"rucrypto.com\",\n    \"cryptocities.world\",\n    \"crypto.press\",\n    \"becrypto.xyz\",\n    \"hicrypto.io\",\n    \"crypto.nl\",\n    \"zycrypto.com\",\n    \"mmcrypto.io\",\n    \"mycrypter.com\",\n    \"crypto.tickets\",\n    \"crypto.pro\",\n    \"ocrypto.org\",\n    \"wecrypto.net\",\n    \"iccrypto.io\",\n    \"crypto.kred\",\n    \"ohmycrypto.io\",\n    \"zzcrypto.org\",\n    \"crypto.bg\",\n    \"mycrypto24.online\",\n    \"acrypto.io\",\n    \"mycrypto.ca\",\n    \"scrypto.io\",\n    \"mycrypto.dk\",\n    \"mvzcrypto.com\",\n    \"ambcrypto.com\",\n    \"crypto.bi\",\n    \"crypto.jobs\",\n    \"crypto.help\",\n    \"my.crypt.observer\",\n    \"crypt.observer\",\n    \"ucrypto.com\",\n    \"cryptojobslist.com\",\n    \"crypto.review\",\n    \"crypto.me\",\n    \"mycrypto.ninja\",\n    \"jkcrypto.com\",\n    \"crypto.cr\",\n    \"mycrypto.live\",\n    \"yocrypto.io\",\n    \"crypto.ba\",\n    \"zacrypto.info\",\n    \"mycrypto.com\",\n    \"remix.ethereum.org\",\n    \"metahash.io\",\n    \"metahash.net\",\n    \"metahash.org\",\n    \"cryptotitties.com\",\n    \"cryptocities.net\",\n    \"cryptoshitties.co\",\n    \"cryptotitties.fun\",\n    \"cryptokitties.forsale\",\n    \"cryptokitties.care\",\n    \"metamate.cc\",\n    \"metamate.io\",\n    \"metamate.com\",\n    \"metamate.one\",\n    \"metamesh.tech\",\n    \"ico.nexus.social\",\n    \"metamesh.org\",\n    \"metatask.io\",\n    \"metmask.com\",\n    \"metarasa.com\",\n    \"metapack.com\",\n    \"metacase.com\",\n    \"metafas.nl\",\n    \"metamako.com\",\n    \"metamast.com\",\n    \"metamax.ru\",\n    \"metadesk.io\",\n    \"metadisk.com\",\n    \"metallsk.ru\",\n    \"metamag.fr\",\n    \"metamaks.ru\",\n    \"metamaps.cc\",\n    \"metamats.com\",\n    \"metamax.by\",\n    \"metamax.com\",\n    \"metamax.io\",\n    \"metamuse.net\",\n    \"metamaze.eu\",\n    \"metarank.com\",\n    \"metaxas.com\",\n    \"megamas2.ru\",\n    \"metamask.io\",\n    \"myetherwallet.com\",\n    \"ethereum.org\",\n    \"myetheroll.com\",\n    \"myetherapi.com\",\n    \"ledgerwallet.com\",\n    \"databrokerdao.com\",\n    \"etherscan.io\",\n    \"etherid.org\",\n    \"ether.cards\",\n    \"etheroll.com\",\n    \"ethnews.com\",\n    \"ethex.market\",\n    \"ethereumdev.io\",\n    \"ethereumdev.kr\",\n    \"dether.io\",\n    \"ethermine.org\",\n    \"slaask.com\",\n    \"etherbtc.io\",\n    \"ethereal.capital\",\n    \"etherisc.com\",\n    \"etherecho.com\",\n    \"ethereum.os.tc\",\n    \"theethereum.wiki\",\n    \"metajack.im\",\n    \"etherhub.io\",\n    \"ethereum.network\",\n    \"ethereum.link\",\n    \"ethereum.com\",\n    \"prethereum.org\",\n    \"ethereumj.io\",\n    \"etheraus.com\",\n    \"ethereum.dev\",\n    \"1ethereum.ru\",\n    \"ethereum.nz\",\n    \"nethereum.com\",\n    \"metabank.com\",\n    \"metamas.com\",\n    \"aventus.io\",\n    \"etherdelta.com\",\n    \"cryptokitties.co\",\n    \"remme.io\",\n    \"jibrel.network\",\n    \"twinity.com\",\n    \"metabase.com\",\n    \"metabase.cc\",\n    \"metabase.one\",\n    \"metabase.network\",\n    \"decrypto.net\",\n    \"audius.co\",\n    \"audius.org\",\n    \"verasity.io\",\n    \"orionprotocol.io\",\n    \"etherspin.co\",\n    \"actua.ad\",\n    \"aditus.io\",\n    \"cass.ad\",\n    \"nabis.com\",\n    \"fscrypto.co\",\n    \"divinity.ai\",\n    \"fulcrum.trade\",\n    \"torque.loans\",\n    \"oneswap.net\",\n    \"ducatus.com\",\n    \"hedget.com\",\n    \"ladder.to\",\n    \"app.tornado.cash\",\n    \"coinbased.xyz\",\n    \"askzeta.com\",\n    \"fulcra.design\",\n    \"axle.design\",\n    \"cactus.chat\"\n  ],\n  \"blacklist\": [\n    \"polkastarter-sale.com\",\n    \"dappwalletconnects.com\",\n    \"extension.thebalichili.com\",\n    \"thebalichili.com\",\n    \"trezor.io-checkrestore.com\",\n    \"nft-opensea.com\",\n    \"connects-wallet.live\",\n    \"xn--mtamsk-sta4d.com\",\n    \"v2-uniswap.io\",\n    \"walletcloud.org\",\n    \"livewallet.org\",\n    \"metamaskcc.live\",\n    \"walletsync.tech\",\n    \"larvalab.net\",\n    \"nkbihfbeogaeaoehlefnkodbefgpgkmn.cc\",\n    \"firmware-metamask.repair\",\n    \"waletconnect.us\",\n    \"mefamahs.io\",\n    \"app.creamfinance.co\",\n    \"creamfinance.co\",\n    \"app.uniswap.org-protocol-airdrop.com\",\n    \"org-protocol-airdrop.com\",\n    \"spi.club\",\n    \"waxtokenrewards.com\",\n    \"app-uniswap-exchange.org\",\n    \"airdrop-uniswap-app.org\",\n    \"polkastarter.link\",\n    \"metamask-restores.net\",\n    \"xn--metamsk-en4c.io\",\n    \"metamaskwallet.live\",\n    \"metamaskonline.com\",\n    \"metamask-zendesk.com\",\n    \"metamaskconnects.online\",\n    \"walletmerger.net\",\n    \"xn--mtamask-bya.com\",\n    \"giveaway-app.info\",\n    \"metamask.giveaway-app.info\",\n    \"wallets-connects.support\",\n    \"xn--metamsk-30c.com\",\n    \"extensions-meta.io\",\n    \"loyaltyswap.com\",\n    \"loaltyswap.com\",\n    \"metamaskwallets.io\",\n    \"nslgives.com\",\n    \"snlday.top\",\n    \"polkastarter.click\",\n    \"thortrading.com\",\n    \"snlmusk.com\",\n    \"uniholders.com\",\n    \"walletnetworks.org\",\n    \"connectionwallet.live\",\n    \"walletconnect.to\",\n    \"opensiao.io\",\n    \"ledgerlive.com.de\",\n    \"bitgoodey.com\",\n    \"elondrop.pro\",\n    \"pancakeswap-airdropcampaign.finance\",\n    \"pancakeswap-finance-tokens-farm.site\",\n    \"pancakeswap-v1-mirror.unrekt.net\",\n    \"pancakeswapconnect.com\",\n    \"activatewallet.live\",\n    \"pancakeswapfinance.co\",\n    \"uniswap.reviews\",\n    \"pancakeswapwalletsvalidation.finance\",\n    \"walletsconnection.app\",\n    \"walletsconnectsupports.io\",\n    \"www-logins-kraken-lo.com\",\n    \"www-logins-kraken-ma.com\",\n    \"www-logins-kraken-ru.com\",\n    \"www-logins-kraken-su.com\",\n    \"inchswap.com\",\n    \"pancakebonus.com\",\n    \"ripple.gr.com\",\n    \"axieninfinity.com\",\n    \"uni-event.info\",\n    \"solstarter.app\",\n    \"coinxhash.com\",\n    \"nexus-swap.com\",\n    \"tronlink-wallet.com\",\n    \"1inch.new\",\n    \"musk-founder.com\",\n    \"terolbit.com\",\n    \"fixedwallet.org\",\n    \"polkadot-airdropcampaign.network\",\n    \"zapper.ws\",\n    \"foundatlon.app\",\n    \"trustwalletrestore.org\",\n    \"metamaskswallets.io\",\n    \"wallet-network.live\",\n    \"instadapp.work\",\n    \"myetherwallet-login-page.canadian24hourpharmacy.com\",\n    \"www-kraken-logins-te.com\",\n    \"www-kraken-logins-pe.com\",\n    \"walletconnectsupports.net\",\n    \"wallet-connection.net\",\n    \"glavebtc.com\",\n    \"elonmusk.app\",\n    \"smartwalletrestore.io\",\n    \"dodoexe.com\",\n    \"polkadotswallet.website\",\n    \"ledgerpromo.live\",\n    \"walletconnectdapp.link\",\n    \"walletsvalidation.net\",\n    \"paidnetwork.live\",\n    \"instadapp.net\",\n    \"unifreebonus.com\",\n    \"airdrop-liquidity.info\",\n    \"solidity-web3.com\",\n    \"app.uniswap.org.solidity-web3.com\",\n    \"elon-grant.com\",\n    \"uniswap-ethernode.org\",\n    \"polkadot-gift.info\",\n    \"walletrestoration.com\",\n    \"celsiuswallet.network\",\n    \"betradebit.com\",\n    \"coinrau.com\",\n    \"metamasksupport.com\",\n    \"mywalletvalidation.org\",\n    \"unitokengive.com\",\n    \"synthetixcoin.com\",\n    \"walletreconnect.info\",\n    \"app.uniswap.liquidity-holder.com\",\n    \"app.uniswap.holder-liquidity.com\",\n    \"app.uniswap.info-liquidity.com\",\n    \"app.uniswap.org-info-liquidity.com\",\n    \"liquidity-holder.com\",\n    \"holder-liquidity.com\",\n    \"info-liquidity.com\",\n    \"org-info-liquidity.com\",\n    \"uniswapv2nodes.com\",\n    \"walletconnect.biz\",\n    \"bitboxapp.xyz\",\n    \"uniswsap.com\",\n    \"ethereumgift.me\",\n    \"www-etherscan.com\",\n    \"zilliqamerits.com\",\n    \"teslagate.top\",\n    \"airdrophost.net\",\n    \"embitcoins.org\",\n    \"elonairdrop.top\",\n    \"gemini21.org\",\n    \"rpldrop.net\",\n    \"4gemini.com\",\n    \"spacexgive.net\",\n    \"kraken-com.com\",\n    \"kraken-sign-ln.com\",\n    \"www-kraken-logins-in.com\",\n    \"www-kraken-logins-pt.com\",\n    \"www-kraken-logins-tr.com\",\n    \"www-kraken-logins-us.com\",\n    \"binance4d.club\",\n    \"walletunlockconnect.com\",\n    \"walletconnect.web-unlocker.com\",\n    \"ethernity.me\",\n    \"cryptoroz.com\",\n    \"polkastater.link\",\n    \"thesmartwalletrestore.live\",\n    \"ethereumgift.net\",\n    \"exchange-rates.top\",\n    \"corebux.com\",\n    \"tesla-elonmusk.com\",\n    \"musk-donate.org\",\n    \"btcgives.org\",\n    \"btcgeneration.vip\",\n    \"nextgeneration.blog\",\n    \"zilletinfo.com\",\n    \"myetherswallet.online\",\n    \"restoresexoduswallets.online\",\n    \"bitfug.com\",\n    \"wallectconnection.info\",\n    \"trustwallets.app\",\n    \"restore-ledgerlivewallet.org\",\n    \"elonmusk6.com\",\n    \"walletsrestore.io\",\n    \"verifywallets.io\",\n    \"uniswap-event.net\",\n    \"musk-x.net\",\n    \"elonmoney.top\",\n    \"metamaskwallets.live\",\n    \"polkadotlive.network\",\n    \"binance.com12189654758511.xyz\",\n    \"com12189654758511.xyz\",\n    \"metamaskconnect.online\",\n    \"claimpolkadot.network\",\n    \"pancakeswapp.finance\",\n    \"atomicwalletsrestore.online\",\n    \"app.uniswap.org-holders-airdrop.com\",\n    \"uniswep-app.com\",\n    \"walletwebconnect.online\",\n    \"app.uniswsap.com\",\n    \"livewalletconnect.link\",\n    \"teslatw.org\",\n    \"binoroix.com\",\n    \"april.trade\",\n    \"walletbloksconnect.live\",\n    \"walletconnectbot.com\",\n    \"trezar.io\",\n    \"musk2x-event.live\",\n    \"pancakeswap-restore.finance\",\n    \"metamaskswalletsio.com\",\n    \"metamaskwallets.link\",\n    \"trustswap-airdrop.com\",\n    \"smartwalletrestore.com\",\n    \"polkastarter.ws\",\n    \"polkamon.co\",\n    \"metamaskwalletrestore.com\",\n    \"xn--bitvvo-zc8b.com\",\n    \"pancakeswap.finance.airdrop-info-protocol.com\",\n    \"airdrop-info-protocol.com\",\n    \"opencea.io\",\n    \"onxswap.com\",\n    \"walletconnectliv.org\",\n    \"metamask-restore.com\",\n    \"metamaskwallet.org\",\n    \"walletconnectionlive.live\",\n    \"tesladrop21.com\",\n    \"mercado-bitcoins-login.com\",\n    \"pancake.walletsconnections.com\",\n    \"walletsconnections.com\",\n    \"casper-tokensale.com\",\n    \"wallet.exodus.com.b37dx.sehzadelerdagitim.com\",\n    \"1nich.com\",\n    \"metamask-api.io\",\n    \"token-airdrop.com\",\n    \"app.uniswap.token-airdrop.com\",\n    \"pancakeswap-finance-rewards.site\",\n    \"polkadot-airdrop.org\",\n    \"connectionwallet-link.live\",\n    \"walletsync.site\",\n    \"webwalletsconnect.site\",\n    \"uniswap-eth-drop.org\",\n    \"coin-give.com\",\n    \"sushiswaps.org\",\n    \"pancakswap.com\",\n    \"ido-polkastarter.com\",\n    \"connectionlive-wallet.live\",\n    \"exchange-sushi.net-liquidity-rewards.site\",\n    \"net-liquidity-rewards.site\",\n    \"airdropstart.net\",\n    \"net-liquidity-rewards.pool-liquidity.site\",\n    \"pool-liquidity.site\",\n    \"walletconnectsupport.live\",\n    \"walletconnectrestore.link\",\n    \"myelonx.org\",\n    \"walletconnects.co\",\n    \"cryptodep.com\",\n    \"bittrillex.com\",\n    \"reobit.com\",\n    \"weetbit.com\",\n    \"crypexchanger.com\",\n    \"defitradecoin.com\",\n    \"coinfain.com\",\n    \"walletliveconnection.com\",\n    \"app.unimswap.com\",\n    \"unimswap.com\",\n    \"zilliqa-web.site\",\n    \"btcethdoge.cash\",\n    \"muskgiven.com\",\n    \"promo-btc.us\",\n    \"bit-coinland.uk\",\n    \"uniswup.com\",\n    \"myetherwalletm.cc\",\n    \"import-myetherwallet.com\",\n    \"walletvalidation.net\",\n    \"streamearnings.online\",\n    \"lemmeoptions.com\",\n    \"verifywallet.io\",\n    \"2021stellar.org\",\n    \"login-blockchain.com.co\",\n    \"1igch.exchange\",\n    \"trustsafeassets.com\",\n    \"maxxiscoin.net\",\n    \"pennytoken.online\",\n    \"corexbit.com\",\n    \"banesconsults.com\",\n    \"bitcoinaste.com\",\n    \"betcryptoplay.com\",\n    \"pencakeswap.finance\",\n    \"bitmarketcoins.com\",\n    \"tricoinx.com\",\n    \"liquidity-morpheus.network\",\n    \"tesla200.xyz\",\n    \"geocrypto.net\",\n    \"bittyex.com\",\n    \"validatemetamaskwallet.io\",\n    \"live-wallet-connect.com\",\n    \"royalcrypto247.com\",\n    \"bitswapex.com\",\n    \"defibitex.com\",\n    \"bitexcore.com\",\n    \"buxcoins.com\",\n    \"bitxary.com\",\n    \"bitsraise.com\",\n    \"monobtc.com\",\n    \"coinsray.com\",\n    \"bitschanger.com\",\n    \"xn--uiswap-ieb.com\",\n    \"wallet-syncing.com\",\n    \"airdropstart.com\",\n    \"auth-glthub.com\",\n    \"yeamusk.org\",\n    \"bosonprotocol.me\",\n    \"mewconnect.myetnerwallet.ru\",\n    \"cryptoebit.com\",\n    \"myethehwallet.com\",\n    \"waletconnect.com\",\n    \"trezzorr.io\",\n    \"elonspecseagreensolaris.focajo6365.repl.co\",\n    \"coindrop.club\",\n    \"bnxdrop.org\",\n    \"livewalletconnect.org\",\n    \"walletvalidation.co\",\n    \"walletsconnection.com\",\n    \"livewalletlinker.org\",\n    \"connectionlivewallet.net\",\n    \"walletrestore.online\",\n    \"walletvalidation.online\",\n    \"airmusk.net\",\n    \"casper.limited\",\n    \"teslagivecrypto.com\",\n    \"crypto-gift.deals\",\n    \"btcpromo.net\",\n    \"muskdep.com\",\n    \"musk-help.com\",\n    \"musk2x.com\",\n    \"emusktop.com\",\n    \"muskshow.com\",\n    \"geckcoin.com\",\n    \"cryptorozi.com\",\n    \"buncebit.com\",\n    \"cryptopye.com\",\n    \"elonevent.org\",\n    \"1ncih.exchange\",\n    \"uniswapnewgiveaway.com\",\n    \"adagift.me\",\n    \"uniswapv2node.online\",\n    \"wallet-syn.com\",\n    \"fantom-foundation.us\",\n    \"badgerfi.us\",\n    \"api-walletconnect.org\",\n    \"wall.prohoster.biz\",\n    \"teslab.us\",\n    \"elonmusk-gives.s3.amazonaws.com\",\n    \"newunigiveaway.com\",\n    \"teslacrypto.top\",\n    \"pancakesswap.com\",\n    \"justswap.us\",\n    \"hiveproject.us\",\n    \"ravenproject.net\",\n    \"bakeryswap.us\",\n    \"daedaluswallet.net\",\n    \"oferonrain.web.app\",\n    \"thegraph.us\",\n    \"nucypher.biz\",\n    \"musk.info\",\n    \"claim-now.me\",\n    \"smartintegration.live\",\n    \"xrp21.net\",\n    \"dodoex.live\",\n    \"ada-cardano.us\",\n    \"xn--unswaep-sfb.com\",\n    \"webwalletsconnect.link\",\n    \"sushifinance.us\",\n    \"wasabbi.eu\",\n    \"walletsconnect.net\",\n    \"uniswaep.com\",\n    \"uniswapnodev1.com\",\n    \"btcfast.vip\",\n    \"getbtc.top\",\n    \"elonmusk-giveaway.s3.amazonaws.com\",\n    \"getbtc.one\",\n    \"konomi.io\",\n    \"app.uniswap.holders-airdrop.com\",\n    \"holders-airdrop.com\",\n    \"panswapcake.com\",\n    \"krakenreward.com\",\n    \"fbc-limited.com\",\n    \"musk-in.com\",\n    \"dsdtokendrops.com\",\n    \"growmybit.com\",\n    \"thesmartintegration.com\",\n    \"stbzmerits.com\",\n    \"curvefi.us\",\n    \"airdrop-holders-uniswap.org\",\n    \"walletconnectlive.com\",\n    \"appmantradao.com\",\n    \"alphafinance.biz\",\n    \"combo-rewards.netlify.app\",\n    \"bixcap.com\",\n    \"apyswap.co\",\n    \"holders-airdrop-uniswap.org\",\n    \"zilliqa.pro\",\n    \"coinbasedonate.net\",\n    \"musk-airdrop.org\",\n    \"tesla3.space\",\n    \"tesla3.team\",\n    \"musk-e-giveaway.live\",\n    \"elon-m-giveaway.live\",\n    \"musk-elon-giveaway.me\",\n    \"gemini-transaction.fun\",\n    \"emusk4.com\",\n    \"elon-clubhouse.live\",\n    \"elon-airdrop.org\",\n    \"giveaway-elon-m.tech\",\n    \"getbtc.gift\",\n    \"elon-cryptodrop.online\",\n    \"elon2x.com\",\n    \"coin2.repl.co\",\n    \"xlmswap.com\",\n    \"elonrewards.online\",\n    \"musk-up.com\",\n    \"musk21.net\",\n    \"chamath.biz\",\n    \"chamathpayment.blogspot.com\",\n    \"chamath-lander1.blogspot.com\",\n    \"chamathpay4.blogspot.com\",\n    \"elon-claim.info\",\n    \"elonmuskcharity.blogspot.com\",\n    \"btcairdropelon.blogspot.com\",\n    \"rpl4.org\",\n    \"stellar.org.il\",\n    \"bitstampreward.com\",\n    \"elons.surge.sh\",\n    \"ethdropnow.blogspot.com\",\n    \"btcdropnow.blogspot.com\",\n    \"elonpayment16.blogspot.com\",\n    \"elonlande-r18.blogspot.com\",\n    \"bchnwallet.org\",\n    \"bchnodewallet.org\",\n    \"elonxp.github.io\",\n    \"waletconect.live\",\n    \"bndrop.org\",\n    \"scapital.biz\",\n    \"uniswapgiveaway.info\",\n    \"newuniswap.com\",\n    \"4link.one\",\n    \"ethlegit.com\",\n    \"fxopel.com\",\n    \"doge21.net\",\n    \"uniswapaddress.com\",\n    \"rocld.com\",\n    \"stellar-airdrop.com\",\n    \"uni-project.org\",\n    \"connectionlivewallets.org\",\n    \"httpsappmycryptocom.slack.com\",\n    \"claim-btc.net\",\n    \"start-gemini.blogspot.com\",\n    \"bitzchanger.com\",\n    \"dot4.top\",\n    \"xn--metamsk-en4c.com\",\n    \"wavebtc.com\",\n    \"eloninvesting.com\",\n    \"dropxtesla.com\",\n    \"elonfundx.com\",\n    \"claimbitcoin.pro\",\n    \"musk-givebtc.s3.eu-west-3.amazonaws.com\",\n    \"coindrop.vip\",\n    \"bluproducts.com\",\n    \"muskbtc.fun\",\n    \"musk-ch.com\",\n    \"coinevent.net\",\n    \"coinevents2021info.depenax769.repl.co\",\n    \"muskbit.club\",\n    \"muskgiveaway2021.blogspot.com\",\n    \"ilogivemus-2021.info\",\n    \"solanabit.com\",\n    \"btcsam.com\",\n    \"btclam.com\",\n    \"walletsconnets.com\",\n    \"coin-event.com\",\n    \"elon-portal.com\",\n    \"ewalletconnect.link\",\n    \"waveslitewallet.org\",\n    \"muskteam.ml\",\n    \"trust-wallets.info\",\n    \"cosmochange.com\",\n    \"elon-musk-medium.com\",\n    \"dodoex.us\",\n    \"elon.so\",\n    \"app.beta-v2-uniswap.org\",\n    \"app-uniswap.blogspot.com\",\n    \"elondonate.com\",\n    \"muskdrop.cc\",\n    \"elonnow.github.io\",\n    \"app.uniswap.airdrop-holders-uniswap.org\",\n    \"restorewalletsio.link\",\n    \"prime-bitgo.com\",\n    \"bitmex-withdrawal-disabled.com\",\n    \"paxful-binary.com\",\n    \"elontesla.me\",\n    \"wallet-validation.com\",\n    \"protocol-airdrop.com\",\n    \"1-icnh.finance\",\n    \"accountviewer.stellar.org.ht\",\n    \"stellar.org.ht\",\n    \"poloniex-ligin-us.com\",\n    \"amtinvestmentsptyltd.com\",\n    \"btc-drop.xyz\",\n    \"app.uniswap.org.io-erc20.work\",\n    \"io-erc20.work\",\n    \"swap-pool.site\",\n    \"bnbget.org\",\n    \"eventbinance.org\",\n    \"app-uniswap.exchange\",\n    \"lotto.fashion\",\n    \"elonmusk.help\",\n    \"uniswapv2.online\",\n    \"ada-lite.us\",\n    \"bitfinexgiveaway.com\",\n    \"1inch-airdrop.live\",\n    \"stellar.org.pl\",\n    \"accountviewer.stellar.org.pl\",\n    \"cardano-foundation.us\",\n    \"adalite.com.cm\",\n    \"zilmerits.com\",\n    \"zildrops.com\",\n    \"takeyourcrypto.info\",\n    \"tesla-musk.com\",\n    \"promo-musk.net\",\n    \"elonhelp.me\",\n    \"elonfundation.com\",\n    \"chamath-gives.site\",\n    \"musk-on.com\",\n    \"chamathsocial.com\",\n    \"ferrum.award-programs.com\",\n    \"app.uniswap.protocol-airdrop.com\",\n    \"elontrust.com\",\n    \"getbitcap.com\",\n    \"eth20staking.org\",\n    \"zapperi.finance\",\n    \"walletconect.info\",\n    \"musk.help\",\n    \"elmusk.org\",\n    \"elonx.club\",\n    \"elon-musk.life\",\n    \"elon2.club\",\n    \"elon-lander4.blogspot.com\",\n    \"elonbtcpayment9.blogspot.com\",\n    \"oneish.xyz\",\n    \"elon-start.com\",\n    \"elonbonus.club\",\n    \"musk-airdrop.net\",\n    \"musk-fund.net\",\n    \"musk-club.com\",\n    \"elonmuskgiveaway.org\",\n    \"thebitcoineraapp.com\",\n    \"btcoin-bank.com\",\n    \"btcoinfuture.com\",\n    \"firstfxoption.com\",\n    \"btcoinrevolution.com\",\n    \"btcoinera.com\",\n    \"greattouchtrade.com\",\n    \"cryptolivetrading.ltd\",\n    \"btcoinevolution.com\",\n    \"bitprofx.com\",\n    \"bitrevolution.info\",\n    \"bitcoin-evolutionpro.com\",\n    \"bitcoinscodepro.com\",\n    \"bitcoineranew.com\",\n    \"exodussupport.com\",\n    \"btcgen.cc\",\n    \"stellar-platform.com\",\n    \"etherairdrop.net\",\n    \"ada-lite.org\",\n    \"dropmuskx.ir\",\n    \"musk4.top\",\n    \"musk-airdrop.com\",\n    \"harvestfinance.co\",\n    \"wallet-validation.online\",\n    \"ada-event.life\",\n    \"cryptorevoltpro.com\",\n    \"the-bitcoin-benefit-pro.com\",\n    \"btcfuture.bitcoinbuyers.online\",\n    \"thebitqtapp.com\",\n    \"the-cryptocode-pro.com\",\n    \"the-dubailifestyle-pro.com\",\n    \"the-bitcoin-rejoin-pro.com\",\n    \"bitcoin-revivalpro.com\",\n    \"bitcoincircuitnow.com\",\n    \"next.btc-trade-app.club\",\n    \"crypto-genisus.com\",\n    \"bitcoincash-grab.com\",\n    \"the-bitcoin-millionaire.com\",\n    \"the-cryptosoft-pro.com\",\n    \"the-ai-stock-profit-pro.com\",\n    \"bitcoin-billionaire-pro.com\",\n    \"the-bitcoin-optimizer-pro.com\",\n    \"the-crypto-nationapp.com\",\n    \"the-crypt-ex-pro.com\",\n    \"the-bitcoin-futureapp.com\",\n    \"the-bitcoin-supreme.com\",\n    \"bitcointrader.ai\",\n    \"the-cryptogenius-pro.com\",\n    \"fxstocktradesoption.com\",\n    \"fxtradingassets.com\",\n    \"cryptotradeassets.com\",\n    \"fxtradeassets.com\",\n    \"crypstrade.co\",\n    \"fnxcrypto.com\",\n    \"indexcryptofx.com\",\n    \"bluewavefxc.online\",\n    \"bitcoin-evolution.co\",\n    \"bitcoin-rush.co\",\n    \"optimumtraders.live\",\n    \"dpitokendrops.com\",\n    \"uniswap-free.com\",\n    \"1inchx.exchange\",\n    \"accounts-binance-log-in.com\",\n    \"uniswapnodev2.com\",\n    \"aave.pw\",\n    \"app.unisswap.com\",\n    \"myetpwallet.000webhostapp.com\",\n    \"wsbcap.com\",\n    \"opexchange24.com\",\n    \"senduniswap.com\",\n    \"cryptogiftsgive.neocities.org\",\n    \"myetherwallet.comat.cc\",\n    \"stellar.org.ag\",\n    \"accountviewer.stellar.org.ag\",\n    \"mail4-stellar.org\",\n    \"metamask.in.net\",\n    \"adalife.io\",\n    \"adallte.io\",\n    \"adailte.io\",\n    \"adalite.pro\",\n    \"adalife.so\",\n    \"adaiite.io\",\n    \"ada-lite.io\",\n    \"adalite.so\",\n    \"adalite.org\",\n    \"yearnson.finance\",\n    \"cuvre.financial\",\n    \"swerve.fo\",\n    \"swerve.fm\",\n    \"swerve.financial\",\n    \"aavee.co\",\n    \"uniswapback.com\",\n    \"app.uniswap.org.adhef.com\",\n    \"uni2021.org\",\n    \"xn--blcokchan-d5a55g.com\",\n    \"2021uni.org\",\n    \"1icnch.exchange\",\n    \"giveawayuniswap.com\",\n    \"exodus-update.com\",\n    \"connectionlivewallet.org\",\n    \"uniswapgiveaway.com\",\n    \"sushiairdrop.net\",\n    \"coinbase.com.auth-value-token-9929929.ru\",\n    \"coinbase.com.secure-account188.ru\",\n    \"secure-account188.ru\",\n    \"auth-token-authentication-value-4782365234.ru\",\n    \"authenticate-coinbase.com\",\n    \"integratewallet.live\",\n    \"synthetix.us\",\n    \"walletsconnect.org\",\n    \"zapperi.fi\",\n    \"walletsconnect.top\",\n    \"walletsconnect.online\",\n    \"appuniswaps.org\",\n    \"metamasck.com\",\n    \"univwaps.com\",\n    \"gemini-gives.com\",\n    \"chamath-social.com\",\n    \"coinrayz.com\",\n    \"xn--ave-sgz.com\",\n    \"receiveuniswap.com\",\n    \"exodus-supports.com\",\n    \"claim-crypto.site\",\n    \"xn--accounts-bnance-epb.com\",\n    \"musk2.top\",\n    \"token-giveaway.com\",\n    \"socialcapital.page\",\n    \"bitmycap.com\",\n    \"binexor.com\",\n    \"musk-prize.com\",\n    \"elon-bonus.org\",\n    \"presearch.token-giveaway.com\",\n    \"vitalikbuterin.io\",\n    \"uniswap-coin.com\",\n    \"gemini-event.blogspot.com\",\n    \"gemini-receive.blogspot.com\",\n    \"undwaple.com\",\n    \"safety-paxful.com\",\n    \"plegal-paxful.com\",\n    \"electrumsoft.live\",\n    \"myetherwallet.comsk.org\",\n    \"gemini-bonus.blogspot.com\",\n    \"winklevoss-brothers-bonus.blogspot.com\",\n    \"winklevoss-brothers-bit.blogspot.com\",\n    \"crypto-elon.net\",\n    \"metamask.io-install.com\",\n    \"walletconnet.life\",\n    \"xmr-qr-code-generator.com\",\n    \"shadebit.com\",\n    \"app.uniswap.info-holders-airdrop.com\",\n    \"info-holders-airdrop.com\",\n    \"xn--mxer-qpa.money\",\n    \"harvestfinance.app\",\n    \"eventvb.com\",\n    \"ethergift.us\",\n    \"myentnherballet.com\",\n    \"geminibonus.us\",\n    \"musk2021.us\",\n    \"ethgift.us\",\n    \"cardanogift.us\",\n    \"eth-airdrop-uniswap.org\",\n    \"btchaze.com\",\n    \"musk-give.us\",\n    \"gemini-lander2.blogspot.com\",\n    \"gemin-payments.blogspot.com\",\n    \"metamaskconnect.net\",\n    \"airdrop-gemini.blogspot.com\",\n    \"paygemini.blogspot.com\",\n    \"lorebtc.com\",\n    \"musk-promo.net\",\n    \"musk-donates.com\",\n    \"elon-landing-prize.blogspot.com\",\n    \"elon-btc-prize.blogspot.com\",\n    \"elon-prize-eth.blogspot.com\",\n    \"xn--walltconnect-eeb.org\",\n    \"gemini-give.com\",\n    \"2fa-verify.com\",\n    \"tron-gassi.com\",\n    \"trust-ebook.com\",\n    \"pros-coinomi.com\",\n    \"winklevoss-airdrop.blogspot.com\",\n    \"gemini-giveaway-btc.blogspot.com\",\n    \"info-tokens-airdrop.com\",\n    \"app.uniswap.info-tokens-airdrop.com\",\n    \"gemimixx.com\",\n    \"airdrops-uniswap.org\",\n    \"ethbtcrelease.com\",\n    \"online.metamaslk.com\",\n    \"solitairenetwork.com\",\n    \"winklevoss-events.blogspot.com\",\n    \"justinsun.ceo\",\n    \"uniswap-aidrop.info\",\n    \"maskpmeta.com\",\n    \"airdrop-official-uniswap.org\",\n    \"exshengee.com\",\n    \"trezor-io.com\",\n    \"airdrop-uniswap.info\",\n    \"uniswapuser.com\",\n    \"securecryptowallet.app\",\n    \"gemini-airdrop.blogspot.com\",\n    \"gemini-pay.blogspot.com\",\n    \"uniswap-ico.com\",\n    \"airdrop-loopring.io\",\n    \"xn--treor-7hb.io\",\n    \"stellar.org.ro\",\n    \"stellar-term.com\",\n    \"to-stellar.org\",\n    \"yeanr.finance\",\n    \"eth-airdrop.io\",\n    \"trezor.xn--wllet-tcc.com\",\n    \"trezor-hardware-wallet.reklama-ads.com\",\n    \"trezor-hardware.reklama-ads.com\",\n    \"claim-airdrop-uniswap.org\",\n    \"www.app.uniswap.org-claim-airdrop.com\",\n    \"app-uniswap.org-v3.site\",\n    \"crryptod3423.blogspot.com\",\n    \"uniswapbalance.com\",\n    \"ethereumgift.us\",\n    \"uniswapshare.com\",\n    \"gemini-gifts-2021.blogspot.com\",\n    \"geminipayments2.blogspot.com\",\n    \"elon-free.fund\",\n    \"stellar.org.mu\",\n    \"accountviewer.stellar.org.mu\",\n    \"login-metamask.io\",\n    \"bitcoinonlinepool.com\",\n    \"etherairdrop.io\",\n    \"integrationwallet.com\",\n    \"xrphere.com\",\n    \"onxswap.online\",\n    \"zilliqa.cf\",\n    \"platform2021.000webhostapp.com\",\n    \"app.v2-uniswap.org\",\n    \"v2-uniswap.org\",\n    \"info-uniswap.org\",\n    \"myapp.fyi\",\n    \"balancerc.exchange\",\n    \"compound.fyi\",\n    \"curve.onl\",\n    \"currve.org\",\n    \"app-aave.org\",\n    \"btcfaze.com\",\n    \"gemini-giveaways2.blogspot.com\",\n    \"g34gerfge33.blogspot.com\",\n    \"meta1yearn2.blogspot.com\",\n    \"geminipayments.blogspot.com\",\n    \"musk2021.org\",\n    \"musk-free.com\",\n    \"tesla-promo.org\",\n    \"musk-crypto.fund\",\n    \"bolancer.exchange\",\n    \"bolancer.info\",\n    \"wave-airdrop.live\",\n    \"connectionlivewallet.io\",\n    \"coingccko.com\",\n    \"jxxll.fun\",\n    \"libertyjaxx.live\",\n    \"branch-trust-wallet.000webhostapp.com\",\n    \"org-appconnect.com\",\n    \"io-update.com\",\n    \"liquidity-pool-uniswap.org\",\n    \"app.liquidity-pool-uniswap.org\",\n    \"gemini-giveaways.blogspot.com\",\n    \"geminipaymewnt.blogspot.com\",\n    \"ledger-updates.com\",\n    \"polkadot-airdrop.live\",\n    \"wallet-connect.net\",\n    \"wallet-connect.org\",\n    \"xn--stellr-mta.com\",\n    \"tokens-airdrop-holders.com\",\n    \"app.uniswap.tokens-airdrop-holders.com\",\n    \"cryptfundz.com\",\n    \"tether-usdt-mixer.com\",\n    \"anonymous-tether-mixer.com\",\n    \"ethereums-mixer.com\",\n    \"ethereum-mixer.com\",\n    \"thetamaintoken.online\",\n    \"swap-uniswap.org\",\n    \"iologin.org\",\n    \"myetherwallet.comim.org\",\n    \"musk-event.org\",\n    \"elon-crypto.fund\",\n    \"bitcupcoins.com\",\n    \"xn--stllar-4ua.com\",\n    \"mailsrv-stellar.com\",\n    \"xn--stllar-cva.com\",\n    \"ripple.com.lv\",\n    \"in-ripple.com\",\n    \"s3-stellar.org\",\n    \"mybc-funds.tumblr.com\",\n    \"mybt.ga\",\n    \"mybi.ga\",\n    \"uniswaphold.com\",\n    \"elon-found.tumblr.com\",\n    \"coix.ga\",\n    \"paytopayethx.tumblr.com\",\n    \"paytopaybtcx.tumblr.com\",\n    \"bancora.network\",\n    \"uniswap-crypto.com\",\n    \"uniswap-defi.com\",\n    \"uniswapairdrop.org\",\n    \"updateuniswap.com\",\n    \"muskdrop.life\",\n    \"bitcoinfocus.xyz\",\n    \"epaymentbtc.tumblr.com\",\n    \"epaymenteth.tumblr.com\",\n    \"christmasbit.tumblr.com\",\n    \"bitn.ga\",\n    \"elonreward.info\",\n    \"login-account.app\",\n    \"nexusmutual.org\",\n    \"yearnapp.finance\",\n    \"crypto-com.app\",\n    \"ethgives.com\",\n    \"aaveapp.net\",\n    \"kyberapp.network\",\n    \"sushiswapclassic.app\",\n    \"maskmexa.com\",\n    \"metemask.io\",\n    \"maskmeia.xyz\",\n    \"metmask.com\",\n    \"uniswapps.com\",\n    \"ethgive.org\",\n    \"elongive.us\",\n    \"uniiswaap.org\",\n    \"cardano2021.us\",\n    \"newledgerweb.com\",\n    \"uniswapupdate.com\",\n    \"live-tesla.com\",\n    \"elon.fund\",\n    \"ledger-chain.co.uk\",\n    \"1inch.dev\",\n    \"uniswapsite.com\",\n    \"metamask-online-io.com\",\n    \"maskmetaa.io\",\n    \"mooniswap.app\",\n    \"1inch-exchange.com\",\n    \"fundmusk.com\",\n    \"binan.in\",\n    \"binancetwitter.com\",\n    \"extensionsmeta.com\",\n    \"live-spacex.com\",\n    \"metamaskweb.com\",\n    \"1inch.app\",\n    \"maskmeta.me\",\n    \"maskmeta.org\",\n    \"metamaskwallet.net\",\n    \"maskmera.io\",\n    \"installmetamask.org\",\n    \"maskmeta.net\",\n    \"maskmeta.biz\",\n    \"slolzfr.com\",\n    \"xrp.limited\",\n    \"ripple.promo\",\n    \"bittque.com\",\n    \"letmecrypto.com\",\n    \"xn--lectrum-s8a.org\",\n    \"coingecko.pro\",\n    \"orc-get-access.com\",\n    \"uniswap.orc-get-access.com\",\n    \"metamsk.io\",\n    \"chrome-extension.icu\",\n    \"binance2021.com\",\n    \"s1-ripple.com\",\n    \"ripple.com.so\",\n    \"muskx.online\",\n    \"metamask.online\",\n    \"mark-direct.com\",\n    \"trust-myfood.com\",\n    \"enjin-books.com\",\n    \"brigadtechnic.com\",\n    \"secure-beta.com\",\n    \"blockchainsupport.network\",\n    \"give-crypto.s3-us-west-2.amazonaws.com\",\n    \"myeterhwallet.com\",\n    \"etheruniswap.com\",\n    \"uniswap-bonus.com\",\n    \"247cryptotrade.online\",\n    \"metamaskapp.com\",\n    \"walletconnect.info\",\n    \"install-metamask-io.com\",\n    \"metamaskstart-io.com\",\n    \"astallmetamask.com\",\n    \"maskmeta.xyz\",\n    \"ripple-labs.dev\",\n    \"winklevoss-gemini.com\",\n    \"xrp2021.net\",\n    \"ethuniswap.com\",\n    \"sushiswapcoin.com\",\n    \"ledgerlive.io\",\n    \"ripple2021.com\",\n    \"register-ripple.com\",\n    \"stellarwallet.org\",\n    \"stellarwallet.net\",\n    \"stellarwallet.in\",\n    \"xn--stelar-zcb.org\",\n    \"claimxlm.com\",\n    \"xn--stelar-ycb.org\",\n    \"btcprominer.life\",\n    \"marketplace-axieinfinity.com\",\n    \"blog-ripple.com\",\n    \"xn--stellr-7za.org\",\n    \"stellarclaim.org\",\n    \"unidrop.pro\",\n    \"fund-gemini.net\",\n    \"xn--rpple-cta.com\",\n    \"unipromo.app\",\n    \"installmetamask.com\",\n    \"kayarugs.com\",\n    \"metamask.is\",\n    \"charles-hoskinson.live\",\n    \"uniswapdrop.finance\",\n    \"uniswap-airdrop.io\",\n    \"88mph.app.defi-universe.vip\",\n    \"axieinfinity.com.aave.defi-universe.vip\",\n    \"aaveapp.com\",\n    \"ripple-xrp.live\",\n    \"dropbinance.exchange\",\n    \"bithomp.work\",\n    \"ripplebonus.us\",\n    \"litecoin-event.net\",\n    \"btcminerapp.com\",\n    \"thebigdeal.clickfunnels.com\",\n    \"easyripple.claims\",\n    \"xrp-fund.live\",\n    \"coinbaseeth.org\",\n    \"geminisspaymentsd.blogspot.com\",\n    \"eosauthority.link\",\n    \"zillet.net\",\n    \"cosmostation.network\",\n    \"wallet.cosmostation.network\",\n    \"ripple-spark.info\",\n    \"installmeta.com\",\n    \"maskmeha.io\",\n    \"chainlink.click\",\n    \"uni-redirects.blogspot.com\",\n    \"afin-app.com\",\n    \"mymonero.co\",\n    \"wallet.mymonero.co\",\n    \"coinarbitrade.com\",\n    \"bitcointrader.trckoffers.xyz\",\n    \"ripple-xrp.me\",\n    \"accountts-binance.com\",\n    \"xn--lgder-6za.com\",\n    \"ledger-live.io\",\n    \"chrome-extension.info\",\n    \"takebtc.net\",\n    \"bitcoin-revolution2.cashvolume.monster\",\n    \"btc-gemini.live\",\n    \"verifyaccounts.io\",\n    \"paypal-btc.com\",\n    \"claim-airdrop-uniswap-v2.info\",\n    \"app.uniswap.claim-airdrop-uniswap-v2.info\",\n    \"login-blocklnain.top\",\n    \"uniswaps.app\",\n    \"metamaskwallet.online\",\n    \"makerdao-info.com\",\n    \"yfiget.org\",\n    \"paypalbtc.org\",\n    \"ufibit.com\",\n    \"udrop.finance\",\n    \"xrp-reward.org\",\n    \"gemini.social\",\n    \"unigive.net\",\n    \"ether-give.ceo\",\n    \"unipromotion.net\",\n    \"woodfund.info\",\n    \"celiswap.com\",\n    \"ledgerweb.digital\",\n    \"litecoingiveaway-live.com\",\n    \"yfiairdrop.com\",\n    \"eth66.blogspot.com\",\n    \"bitfuryltd.com\",\n    \"bitfurygroupltd.com\",\n    \"ethpos.org\",\n    \"geminigift.org\",\n    \"bitcoin-revolution.2020-order.monster\",\n    \"bitcoin-revolution.inestovo2020.xyz\",\n    \"bitcoin-revolution.onyxtrade.monster\",\n    \"exodus.casa\",\n    \"tesla-btc.info\",\n    \"musk-giving.com\",\n    \"coinbase2x.online\",\n    \"uni-token.com\",\n    \"xeth2.github.io\",\n    \"stellar.org.ma\",\n    \"accountviewer.stellar.org.ma\",\n    \"specialgift122.blogspot.com\",\n    \"browsermask.org\",\n    \"profit-booster.xyz\",\n    \"crypto-gives.s3.us-east-2.amazonaws.com\",\n    \"onkbit.com\",\n    \"ripple.com.pt\",\n    \"coinbase-payments.blogspot.com\",\n    \"plckle.finance\",\n    \"picklee.finance\",\n    \"tokenpocket-pro.web.app\",\n    \"metabrowser.org\",\n    \"coinzor.com\",\n    \"walletexodus.com\",\n    \"coinvoz.com\",\n    \"coinroz.com\",\n    \"wozbit.com\",\n    \"yearn-finance-gift.medium.com\",\n    \"yearnyfi.blogspot.com\",\n    \"claimocean.com\",\n    \"maticwallet.network\",\n    \"2eth.site\",\n    \"yflinkreward.com\",\n    \"polkadot-airdrop.info\",\n    \"eth-but.top\",\n    \"ethbuterin.top\",\n    \"ether-best.top\",\n    \"ether-love.top\",\n    \"ethx-buterinx.top\",\n    \"elonmuskxpro.com\",\n    \"claimuni.com\",\n    \"x2crypts.com\",\n    \"ltcminer.com\",\n    \"metaswap.dev\",\n    \"eth-found.live\",\n    \"uniswap.bid\",\n    \"app.uniswap.bid\",\n    \"curve.run\",\n    \"moz-extension.link\",\n    \"app.uniswap.ws\",\n    \"uniswap.ws\",\n    \"dropmusk.in\",\n    \"chrome-extension.link\",\n    \"money-tesla.com\",\n    \"airdrop-uniswap.com\",\n    \"metamas.io\",\n    \"oceanairdrop.info\",\n    \"eth-generator.com\",\n    \"tether-tumbler.com\",\n    \"uni-promo.net\",\n    \"stellar-info.org\",\n    \"stake-ethereum.org\",\n    \"eth67.blogspot.com\",\n    \"airdrop-ocean.com\",\n    \"musk-coins.com\",\n    \"muskprize.fun\",\n    \"getmusk.fun\",\n    \"spacexlive.top\",\n    \"elonbtcx.com\",\n    \"chain-ledger.info\",\n    \"ledger-chain.live\",\n    \"xn--ledgr-251b.com\",\n    \"xn--rpple-n4a.net\",\n    \"claim-ripple.com\",\n    \"metamask.org-swap.app\",\n    \"org-swap.app\",\n    \"airdropocean.com\",\n    \"ocean-airdrop.com\",\n    \"bestcheinge.com\",\n    \"lbestchenge.com\",\n    \"uni-airdrop.info\",\n    \"zillet.info\",\n    \"uniswapairdrop.info\",\n    \"uniswapofficial.com\",\n    \"bitcoins-gift.blogspot.com\",\n    \"eth-gift.blogspot.com\",\n    \"metamask.bonus-erc20-token.info\",\n    \"dice2win.co\",\n    \"bonus-erc20-token.info\",\n    \"yrean.finance\",\n    \"live.ledgerorigin.com\",\n    \"ledgerorigin.com\",\n    \"ledger.com-client.email\",\n    \"xn--ledgr-q51b.com\",\n    \"keepkey.app\",\n    \"ethgiveaways.me\",\n    \"ethx2.io\",\n    \"ledger.report\",\n    \"ledger.buzz\",\n    \"us-ledger.com\",\n    \"usa-ledger.com\",\n    \"ledger.us.org\",\n    \"ledger.uk.com\",\n    \"ledger.deals\",\n    \"de-ledger.com\",\n    \"fr-ledger.com\",\n    \"it-ledger.com\",\n    \"au-ledger.com\",\n    \"nl-ledger.com\",\n    \"ledger.org.pl\",\n    \"ledgersupport.pro\",\n    \"ledgersupport.online\",\n    \"ledgerconnect.stream\",\n    \"ledger-chain.info\",\n    \"connectledger.live\",\n    \"ledgir.xyz\",\n    \"lebqer.xyz\",\n    \"ledger.cam\",\n    \"xn--edger-55a.com\",\n    \"xn--ldgr-vvac.com\",\n    \"xn--ldgr-lu5ac.com\",\n    \"xn--ldger-6za.com\",\n    \"xn--ledge-9bb.com\",\n    \"xn--ledge-xbb.com\",\n    \"uniairdrop.org\",\n    \"ledger.media\",\n    \"xn--ldger-n51b.com\",\n    \"eth2020.top\",\n    \"xripplex.tumblr.com\",\n    \"btc-gift.blogspot.com\",\n    \"cryptovitalik.s3-us-west-1.amazonaws.com\",\n    \"rewards-tokens-airdrop.info\",\n    \"sellcrypto.top\",\n    \"eth.ug\",\n    \"oldmyetherwallet.com\",\n    \"gift-eth.info\",\n    \"ripple.ug\",\n    \"legder.com\",\n    \"buterin.s3.eu-west-2.amazonaws.com\",\n    \"giveawaysushi.com\",\n    \"login.blockhaln.com\",\n    \"blockhaln.com\",\n    \"wallets-tlx-blockchain.com\",\n    \"paradefi.network\",\n    \"get30bnb.live\",\n    \"pdfescape.su\",\n    \"uniswap.org.claim-tokens-airdrop.info\",\n    \"claim-tokens-airdrop.info\",\n    \"aavelend.com\",\n    \"aave-defi.com\",\n    \"app.trieaharderewa.com\",\n    \"bitcoinnow.bid\",\n    \"sushiswapclasslc.org\",\n    \"xn--bstchange-03a.net\",\n    \"bithau.com\",\n    \"elongift.s3.eu-west-2.amazonaws.com\",\n    \"bitnau.com\",\n    \"unigiv.com\",\n    \"trustwallettoken.io\",\n    \"metamaskwallet.io\",\n    \"xrp-giveaway.blogspot.com\",\n    \"uniswap.ug\",\n    \"accountviewer.stellar.org.bi\",\n    \"stellar.org.bi\",\n    \"dexuniswap.org\",\n    \"ethereum.ug\",\n    \"uniswap-paper.s3.eu-west-3.amazonaws.com\",\n    \"ethereumdownloads.com\",\n    \"get-geth.org\",\n    \"get-geth.com\",\n    \"winnerscrypto.live\",\n    \"uni-fund.info\",\n    \"ripplebonus.net\",\n    \"dexairdrop-binance.com\",\n    \"btccham.info\",\n    \"geminixfund.info\",\n    \"geminidrop.fund\",\n    \"ripplegift.ceo\",\n    \"ada-give.info\",\n    \"yearm.finance\",\n    \"stellar.org.ng\",\n    \"sushiback.com\",\n    \"ripple.supply\",\n    \"zillet.org\",\n    \"chico-ethers.com\",\n    \"login-metamask.com\",\n    \"eventuniswap.com\",\n    \"xrpceo.com\",\n    \"vechainevent.com\",\n    \"freeuniswap.com\",\n    \"10000ethgiveaway.com\",\n    \"bipcalculator.io\",\n    \"uniswap-claim.com\",\n    \"get-stellar.com\",\n    \"zilliqa-live.org\",\n    \"ryebit.com\",\n    \"unigiveaway.net\",\n    \"stellar.org.in\",\n    \"accountviewer.stellar.org.in\",\n    \"info-binance.us\",\n    \"myus-app.com\",\n    \"unigiveaway.org\",\n    \"metamask.site\",\n    \"trustwallet.in\",\n    \"etherscan.member.event.monesrg.com\",\n    \"monesrg.com\",\n    \"musk-elon.co\",\n    \"air-drop.us\",\n    \"pyebit.com\",\n    \"eth-fond.info\",\n    \"ethget.us\",\n    \"syebit.com\",\n    \"unigiveaway.com\",\n    \"accountviewer.stellar.org.za\",\n    \"stellar.org.za\",\n    \"uni-drop.org\",\n    \"un2app.com\",\n    \"fund-vechain.com\",\n    \"chico-eth.com\",\n    \"cryptogenscript.com\",\n    \"officialvbuterin.com\",\n    \"spacexfoundation.com\",\n    \"airdropsushi.com\",\n    \"vifbit.com\",\n    \"zifbit.com\",\n    \"rifbit.com\",\n    \"sushigiveaway.com\",\n    \"omg-airdrop.io\",\n    \"muskbtcx.top\",\n    \"binance-defi.net\",\n    \"binance-smart.com\",\n    \"unidrop.org\",\n    \"polkawallets.site\",\n    \"tradeintel.biz\",\n    \"sushi-gifts.blogspot.com\",\n    \"vbeth.com\",\n    \"uniairdrop.com\",\n    \"futures-binance.co\",\n    \"uni-giveaway.blogspot.com\",\n    \"genscripteth.go.yo.fr\",\n    \"diubit.com\",\n    \"teslamining.ltd\",\n    \"riubit.com\",\n    \"but-send.top\",\n    \"eth-news.com\",\n    \"swerve-finance.com\",\n    \"czbinance.co\",\n    \"crypto2xpool.com\",\n    \"sushiswap.blogspot.com\",\n    \"binance-medium.com\",\n    \"ripplebonus.events\",\n    \"xrp.ceo\",\n    \"garlinghouse.ceo\",\n    \"sushi-giveaway.blogspot.com\",\n    \"yfi-airdrops.blogspot.com\",\n    \"ethvv.com\",\n    \"ethef.com\",\n    \"ethez.com\",\n    \"ethtd.com\",\n    \"ethdf.com\",\n    \"vitalik.io\",\n    \"ethkd.com\",\n    \"ethoy.com\",\n    \"ethiy.com\",\n    \"ethfc.com\",\n    \"ethff.com\",\n    \"cryptonil.ltd\",\n    \"ledger.com.de\",\n    \"rewards-coin.000webhostapp.com\",\n    \"renairdrop.com\",\n    \"uniswapnode.com\",\n    \"app.uniswapnode.com\",\n    \"drop-eth.org\",\n    \"jdax.market\",\n    \"supportbnb.com\",\n    \"bin-crypto.com\",\n    \"exiodus.com\",\n    \"binancefound.com\",\n    \"l1nch.exchange\",\n    \"exoduz.io\",\n    \"exodus.sg\",\n    \"exodus.cm\",\n    \"atomicwllet.io\",\n    \"omisegoairdrop.info\",\n    \"siubit.com\",\n    \"linkcoinbonus.com\",\n    \"link-token.com\",\n    \"goairdrop.fun\",\n    \"goairdrop.pro\",\n    \"eth-link.site\",\n    \"airdrop-linkchain.site\",\n    \"airdropwallet.pro\",\n    \"airdropwallet.site\",\n    \"airdrop-linkchain.pro\",\n    \"tokenlink.info\",\n    \"trezor.com.se\",\n    \"restore-ledger.org\",\n    \"restore-ledgerwallet.org\",\n    \"wallet.restore-ledger.org\",\n    \"binance.oktaplatform.com\",\n    \"trustswap-rewards-programs-claims-tokens.com\",\n    \"freebitcoinmining.website\",\n    \"omgnetwork.info\",\n    \"atomicweb.network\",\n    \"wallet.atomicweb.network\",\n    \"ethfo.com\",\n    \"tether-mixer.com\",\n    \"ethereum-giveaway.network\",\n    \"chainlinksgiveaways.blogspot.com\",\n    \"stellarpay.org\",\n    \"ethbv.com\",\n    \"officialvitalik.com\",\n    \"chainlink-giveaway.blogspot.com\",\n    \"vitalikb.top\",\n    \"vitalikbb.top\",\n    \"app.xn--unswp-6qa5f.com\",\n    \"xn--unswp-6qa5f.com\",\n    \"app.xn--uniswp-0ta.com\",\n    \"xn--uniswp-0ta.com\",\n    \"app.xn--nswap-0ua70b.com\",\n    \"xn--nswap-0ua70b.com\",\n    \"morphtoken.co\",\n    \"libraglobalcoin.io\",\n    \"elon2.top\",\n    \"litecoinminer.space\",\n    \"dogecoinminer.space\",\n    \"ethereumminer.space\",\n    \"bchminer.space\",\n    \"dashcoinminer.space\",\n    \"btcminer.website\",\n    \"tozbit.com\",\n    \"stellar.org.lv\",\n    \"tesla3-bonus.com\",\n    \"defi-universe.vip\",\n    \"marketplace.axieinfinity.com.inventoryclaim.defi-universe.vip\",\n    \"brad-gift.com\",\n    \"coinaxel.com\",\n    \"eth-drop.club\",\n    \"uniswap-exchange.com\",\n    \"app.uniswap-exchange.com\",\n    \"uniswap-exchange.eu\",\n    \"app.uniswap-exchange.eu\",\n    \"appunjswap.org\",\n    \"appuniswop.link\",\n    \"ethoff.org\",\n    \"fulcrum.nu\",\n    \"eth.fulcrum.nu\",\n    \"eth-giveaway.top\",\n    \"vit-ethx.top\",\n    \"eth-vitya.top\",\n    \"airdrop-bit.top\",\n    \"cryptogifts.s3.amazonaws.com\",\n    \"xrp-event.com\",\n    \"cryptogifts.s3.us-east-2.amazonaws.com\",\n    \"xrp-funds.com\",\n    \"omisego-giveaway.blogspot.com\",\n    \"omg-giveaway.blogspot.com\",\n    \"uniswap-x.com\",\n    \"app.uniswap-x.com\",\n    \"stellar.org.im\",\n    \"accountviewer.stellar.org.im\",\n    \"cdn-stellar.org\",\n    \"go-stellar.org\",\n    \"steliar.org\",\n    \"stellar.org.sb\",\n    \"excodus.cf\",\n    \"exodus.cf\",\n    \"electrumy.org\",\n    \"app.unjswap.org\",\n    \"unjswap.org\",\n    \"uniswap-org.com\",\n    \"app.uniswap-org.com\",\n    \"xn--niswap-hq8b.com\",\n    \"app.xn--niswap-hq8b.com\",\n    \"ethevent.top\",\n    \"crypto-safe.ltd\",\n    \"elonhelp.in\",\n    \"xrp.ltda\",\n    \"bovbit.com\",\n    \"zelbit.exchange\",\n    \"tevbit.com\",\n    \"tocbit.com\",\n    \"chipmixer.app\",\n    \"app.unlswap.org\",\n    \"unlswap.org\",\n    \"coinbitmex.com\",\n    \"buterin-gold.xyz\",\n    \"etherh-vitalik.top\",\n    \"check-ledger.com\",\n    \"moonswap.exchange\",\n    \"xn--uniswp-mta.com\",\n    \"app.xn--uniswp-mta.com\",\n    \"org-connect-wallet.com\",\n    \"bizstar.icu\",\n    \"atomicwallet.website\",\n    \"cryptoiqoptions.com\",\n    \"fxpectcrypt.com\",\n    \"tradergrove.space\",\n    \"house-article.space\",\n    \"greece-platform.space\",\n    \"musk-send.top\",\n    \"btctesla.org\",\n    \"muskgive.top\",\n    \"space-elon.site\",\n    \"cutve.finance\",\n    \"appuniswop.org\",\n    \"appuniswop.site\",\n    \"unswap.site\",\n    \"btcsystem-web-app.com\",\n    \"hederabit.com\",\n    \"nivbit.com\",\n    \"kavbit.com\",\n    \"jocbit.com\",\n    \"mivbit.com\",\n    \"xn--pxfull-pta.com\",\n    \"trustwalletapp-erc-20-tokens.000webhostapp.com\",\n    \"starlinkbtc.com\",\n    \"starlinketh.com\",\n    \"xn--bitmai-nt7b.com\",\n    \"giveaway.is\",\n    \"2ethereum.org\",\n    \"spacex-eth.biz\",\n    \"spacexethereum.net\",\n    \"xn--niswap-oya.com\",\n    \"metask.website\",\n    \"wallet.metask.website\",\n    \"spacex.click\",\n    \"tesla-musk.net\",\n    \"uniswapp.site\",\n    \"altexchenge.com\",\n    \"mycosmospay.com\",\n    \"exoddus.net\",\n    \"uniswap.net\",\n    \"uniswap.eu\",\n    \"muskto.fun\",\n    \"musktop.pw\",\n    \"muskevent.org\",\n    \"huobl.ru\",\n    \"uniswap.site\",\n    \"metamask.eu\",\n    \"app.xn--unswap-4va.com\",\n    \"xn--unswap-4va.com\",\n    \"appuniswap.live\",\n    \"xn--unswap-xk8b.com\",\n    \"app.xn--unswap-xk8b.com\",\n    \"elonmuskevent.com\",\n    \"elonmusk.network\",\n    \"bitcoincomputos.com\",\n    \"dshop.originprotocol.cordpidgeon.com\",\n    \"bitfurytrade.com\",\n    \"bitfuryweb.com\",\n    \"bitfuryinvest.co\",\n    \"xn--unswap-q9a.com\",\n    \"bestchamge.ru\",\n    \"chamathcapital.com\",\n    \"cardano-page.org\",\n    \"neo-live.org\",\n    \"elonmusk.capital\",\n    \"chamath.fund\",\n    \"vet.capital\",\n    \"giveeth.com\",\n    \"appuniswap.com\",\n    \"uniswapdex.org\",\n    \"ethereumupdate.info\",\n    \"ethereumofficial.org\",\n    \"social-capital.us\",\n    \"ethereum.ltda\",\n    \"accountviewer.stellar.org.so\",\n    \"stellar.org.so\",\n    \"giveaway-eth-trustwallets.000webhostapp.com\",\n    \"app-trustwallet.erc20-airdrop.icu\",\n    \"erc20-airdrop.icu\",\n    \"assets-index-files.xyz\",\n    \"app-trustwallet.rewards-erc20-airdrop.site\",\n    \"rewards-erc20-airdrop.site\",\n    \"trustwallet.erc20-airdrop.icu\",\n    \"lk.million.money.erc20-airdrop.icu\",\n    \"maezawa-bonus.com\",\n    \"gomusk.fun\",\n    \"spacex.market\",\n    \"elondrops.com\",\n    \"elonpromo.org\",\n    \"johnpromo.com\",\n    \"tesla-bitcoin.info\",\n    \"binance.rewards-programs.org\",\n    \"rewards-programs.org\",\n    \"lcoinbase.com\",\n    \"etherscan.io.rewards-user-info.com\",\n    \"zedxe.com.rewards-user-info.com\",\n    \"rewards-user-info.com\",\n    \"multiminer.website\",\n    \"landcoinlnc.com\",\n    \"appuniswop.com\",\n    \"unisvvap.org\",\n    \"app.unisvvap.org\",\n    \"uniswapv1v2.org\",\n    \"giveawayairdrop-eth.ga\",\n    \"secretmethodsnow.com\",\n    \"airdropbat.com\",\n    \"muskx.co\",\n    \"daxxcoins.com\",\n    \"eth-event.biz\",\n    \"blockdrops.info\",\n    \"elon-blog.com\",\n    \"bonus-tesla.com\",\n    \"bitminers.store\",\n    \"unionfinance.org\",\n    \"exoduss.org\",\n    \"excodus.io\",\n    \"exsodus.io\",\n    \"elcastrum.com\",\n    \"basbit.com\",\n    \"digiminer.io\",\n    \"ia601405.us.archive.org\",\n    \"batairdrop.net\",\n    \"makerdaoweb.org\",\n    \"vitalik.top\",\n    \"ether-promo-participate-now.com\",\n    \"ether-promo.com\",\n    \"bafbit.com\",\n    \"frezor.us\",\n    \"gemini-btc.news\",\n    \"avaxsales.net\",\n    \"cryptominer.tel\",\n    \"bitcryptomania.com\",\n    \"fundusdt.com\",\n    \"v4-antpool.com\",\n    \"airdrop2020.com\",\n    \"wozbtcfunds-joinpromotion.com\",\n    \"btcxevent.com\",\n    \"cryptoforhealth.com\",\n    \"xn--binnce-kta.com\",\n    \"xn--blnnce-dd8b.com\",\n    \"node.uniswapv1v2.app\",\n    \"uniswapv1v2.app\",\n    \"uniswapexchange.online\",\n    \"xmr-wallet.com\",\n    \"uniswop.shop\",\n    \"tronairdrop.com\",\n    \"stellar-limited.com\",\n    \"verify.paxfulsupport.online\",\n    \"paxfulsupport.online\",\n    \"im-creator.com\",\n    \"bitcoinmonth-top.info\",\n    \"smartcontractbiz.com\",\n    \"link-drop.net\",\n    \"login.xn--blockchin-h2a.com\",\n    \"xn--blockchin-h2a.com\",\n    \"login.xn--blockcha-91a41g.com\",\n    \"xn--blockcha-91a41g.com\",\n    \"billgatesbtc.com\",\n    \"claimbsv.to\",\n    \"xn--bockchain-0e5h.com\",\n    \"login.xn--bockchain-0e5h.com\",\n    \"tesla3.gifts\",\n    \"musk-gifts.com\",\n    \"muskpromotion.com\",\n    \"musk-coin.com\",\n    \"cardanoevent.org\",\n    \"event-eth.com\",\n    \"adafund.pro\",\n    \"event-ada.info\",\n    \"cardano-info.us\",\n    \"ethfundx.info\",\n    \"eth-free.com\",\n    \"brainpromo.info\",\n    \"joerogan.fund\",\n    \"binancefund.org\",\n    \"brock-btc.com\",\n    \"cardano-ada.info\",\n    \"ethxevent-participate.com\",\n    \"ethuman.com\",\n    \"kanyebtc.org\",\n    \"ethermoneymachine.com\",\n    \"air-ether.top\",\n    \"trezor.li\",\n    \"xn--rezor-6db.com\",\n    \"drop-eth.info\",\n    \"coin-free-exchange.cf\",\n    \"ripple.com.vc\",\n    \"ethfree.info\",\n    \"stellar.org.vc\",\n    \"accountviewer.stellar.org.vc\",\n    \"eth-info.org\",\n    \"ada-event.info\",\n    \"cardanoevent.com\",\n    \"cardanofund.info\",\n    \"adafund.net\",\n    \"spacex-5000btc.com\",\n    \"fundgemini.com\",\n    \"ethfoundation.info\",\n    \"uniswapv3.org\",\n    \"uniswop.exchange\",\n    \"event-eth.info\",\n    \"fundsretrieve.com\",\n    \"bat-airdrop.com\",\n    \"cryptotabhack.com\",\n    \"freebitgenerator.com\",\n    \"tron-project.com\",\n    \"wwwguarda.co\",\n    \"wwwthetatoken.org\",\n    \"hetatoken.org\",\n    \"thetatoken.cn\",\n    \"tetatoken.org\",\n    \"lumiwalle.com\",\n    \"luiwallet.com\",\n    \"lumiwalet.com\",\n    \"umiwallet.com\",\n    \"lumiwallt.com\",\n    \"lumiwallet.net\",\n    \"lumwallet.com\",\n    \"wwwcoinfy.com\",\n    \"wwwlumiwallet.com\",\n    \"lumiwllet.com\",\n    \"thetaoken.org\",\n    \"thetatken.org\",\n    \"thetatoen.org\",\n    \"thetatokn.org\",\n    \"wwwwhitecoin.info\",\n    \"lmiwallet.com\",\n    \"theatoken.org\",\n    \"thetatoke.org\",\n    \"thtatoken.org\",\n    \"stock-index.space\",\n    \"finmaxbo.com\",\n    \"tesla-give.com\",\n    \"tesla-cryptos.com\",\n    \"cryptos-mask.com\",\n    \"crypto-event.com\",\n    \"geminilive.org\",\n    \"proether-fundsrelease-participate.com\",\n    \"ethmarket.info\",\n    \"geminibtc.net\",\n    \"gemini-btc.io\",\n    \"eth-info.com\",\n    \"ethdropx.info\",\n    \"bezos-amazon.top\",\n    \"mrbeastbtc.info\",\n    \"ethereumnews.pw\",\n    \"jack-btc.net\",\n    \"muskspacex.org\",\n    \"pool.balancer.dev\",\n    \"balancer.dev\",\n    \"bitcoinsearchengines.store\",\n    \"avaxweb.typeform.com\",\n    \"elonx.co\",\n    \"notall.eshost.com.ar\",\n    \"notallwallet.ml\",\n    \"bavbit.com\",\n    \"tesla-bonus.com\",\n    \"trez0r.com\",\n    \"activdarto.com\",\n    \"bit-airdrop.club\",\n    \"compoundnode.dev\",\n    \"lumiwalletapp.com\",\n    \"dashwalletapp.com\",\n    \"metamask.ltd\",\n    \"evercoinapp.com\",\n    \"samoraiwalletapp.com\",\n    \"bitpieapp.com\",\n    \"bluewalletapp.com\",\n    \"tokenpocketapp.com\",\n    \"paytomatwallet.com\",\n    \"pumapayapp.com\",\n    \"blockchainapp.ltd\",\n    \"jaxx.ltd\",\n    \"greenapp.ltd\",\n    \"exodusapp.ltd\",\n    \"coboapp.ltd\",\n    \"atomicapp.ltd\",\n    \"etorowalletapp.com\",\n    \"ripplewalletapps.com\",\n    \"crypteriumwalletapp.com\",\n    \"trezorapp.com\",\n    \"mewapp.ltd\",\n    \"vladlad.com\",\n    \"dexapis.xyz\",\n    \"arbitragecrypto.org\",\n    \"theapi.pro\",\n    \"elonevent.site\",\n    \"trustapp.ltd\",\n    \"myrthervvellanti.com\",\n    \"guadra.com\",\n    \"giveaway-bit.xyz\",\n    \"crypto-trust.co\",\n    \"dao-migrate.com\",\n    \"wintesla.net\",\n    \"0101.systems\",\n    \"bitcoinblack.cash\",\n    \"xn--rippl-8ra.com\",\n    \"blogstellar.org\",\n    \"claimstellar.com\",\n    \"xn--accountvewer-stellar-pbd.com\",\n    \"xn--troscan-mkb.org\",\n    \"xn--tellar-2ib.org\",\n    \"xn--stelar-5db.com\",\n    \"getxlm.org\",\n    \"xn--stelar-6db.org\",\n    \"accountviewer.xn--stelar-6db.org\",\n    \"getripple.org\",\n    \"xn--stllar-cpc.com\",\n    \"xn--stllar-q3a.com\",\n    \"xrp-community.com\",\n    \"bithomb.com\",\n    \"xn--bithmp-6wb.com\",\n    \"growbitcoin.co.uk\",\n    \"get2xcoin.com\",\n    \"bkexcapital.com\",\n    \"oldetherwallet.com\",\n    \"mydashwallets.com\",\n    \"myakawallet.com\",\n    \"musicoinwallet.com\",\n    \"expwallet.net\",\n    \"dbix.link\",\n    \"myubiqwallet.com\",\n    \"clowallet.network\",\n    \"myrthesrvvelltni.com\",\n    \"linkcoinairdrop.com\",\n    \"batairdrop.com\",\n    \"team-blockchain.info\",\n    \"avubit.com\",\n    \"fulcrum.plus\",\n    \"eth.fulcrum.plus\",\n    \"usdc.fulcrum.plus\",\n    \"dai.usdc.fulcrum.plus\",\n    \"xn--ripp-yva1x.com\",\n    \"ripple.com.bz\",\n    \"chainlinktoken.info\",\n    \"node-binancedex.online\",\n    \"hexnode.online\",\n    \"uniswapv2v1.org\",\n    \"paxfulc.com\",\n    \"paxful-verified.com\",\n    \"paxfuloffers.com\",\n    \"tronscan.me\",\n    \"tronscan.in\",\n    \"xn--tronsan-65a.com\",\n    \"oauth-deriv-binary.website\",\n    \"paxful-com-login.oauth-deriv-binary.website\",\n    \"electrume.org\",\n    \"fulcrum.codes\",\n    \"xn--blocchan-cib7h.com\",\n    \"coinbiz.me\",\n    \"fulcrum.repair\",\n    \"uniswap.services\",\n    \"max-maicoin-bonusbtc.000webhostapp.com\",\n    \"fxoption27.com\",\n    \"lcon.foundation\",\n    \"wallet.fantom.link\",\n    \"fantom.link\",\n    \"coinphant.com\",\n    \"thetatoken.link\",\n    \"iconfoundation.online\",\n    \"dropelon.co\",\n    \"btc-event.org\",\n    \"btcmixer.tech\",\n    \"muskevent.net\",\n    \"muskxdrop.info\",\n    \"musk-give.online\",\n    \"zilliqawallet.online\",\n    \"blockchain-auto-btc.ru\",\n    \"wallet.trxlive.network\",\n    \"trxlive.network\",\n    \"foundatlon.com\",\n    \"exodlus.io\",\n    \"litecoln.org\",\n    \"bitcolncore.org\",\n    \"exodusupdate.com\",\n    \"shrembtc.com\",\n    \"alanbtc.com\",\n    \"josephbtc.com\",\n    \"fordbtc.org\",\n    \"bransonbtc.com\",\n    \"bloombergbtc.net\",\n    \"exodus.com.swtest.ru\",\n    \"elonmuskdrop.com\",\n    \"muskbtc.us\",\n    \"metmaask.io\",\n    \"sonyxbtc.net\",\n    \"nicelhash.com\",\n    \"monnero.org\",\n    \"guimlner.org\",\n    \"bilinance.org\",\n    \"nicerhash.com\",\n    \"nlcehash.ru\",\n    \"wozniakdrop.com\",\n    \"tinkoffbtc.info\",\n    \"durovairdrop.com\",\n    \"cookbtc.com\",\n    \"pewdiepiebtc.com\",\n    \"etherairdrop.com\",\n    \"panteradrop.com\",\n    \"spacexdropx.com\",\n    \"spacexbtcdrop.com\",\n    \"billgatesfund.com\",\n    \"litecoin-tumbler.com\",\n    \"hurtrade.com\",\n    \"hubcoi.com\",\n    \"fixxcoin.com\",\n    \"muskfreebtc.com\",\n    \"ethereum-tumbler.com\",\n    \"muskreward.com\",\n    \"elongives.fun\",\n    \"gaintesla.com\",\n    \"trustwallet.claim-giveaway-airdrop.site\",\n    \"claim-giveaway-airdrop.site\",\n    \"airdrop-giveaway.xyz\",\n    \"ia801505.us.archive.org\",\n    \"ps-btc.info\",\n    \"xn--blockchin-c2d.com\",\n    \"xn--blockchn-1od4993e.com\",\n    \"xn--blocchan-g49cv1d.com\",\n    \"investbinance.com\",\n    \"myfusionwallet.net\",\n    \"btcdouble2x.site\",\n    \"coinanytime.com\",\n    \"portal.node-binance.dev\",\n    \"node-binance.dev\",\n    \"portal.synthetix.dev\",\n    \"synthetix.dev\",\n    \"portal.hex-node.network\",\n    \"hex-node.network\",\n    \"portal.uniswap.dev\",\n    \"uniswap.dev\",\n    \"portal.curvefinance.network\",\n    \"curvefinance.network\",\n    \"portal.fulcrum.network\",\n    \"fulcrum.network\",\n    \"uniswap-exchange.repair\",\n    \"teslagain.com\",\n    \"zrxairdrop.com\",\n    \"leddger.io\",\n    \"quickbtcminer.com\",\n    \"teslax.in\",\n    \"app.fulcrum.repair\",\n    \"jaxxx.io\",\n    \"zilllet.io\",\n    \"moonllet.io\",\n    \"app.moonllet.io\",\n    \"profittesla.com\",\n    \"teslapayout.com\",\n    \"givetesla.com\",\n    \"teslax.live\",\n    \"ainbit.com\",\n    \"spacexbtc.net\",\n    \"makerdao.redeem.bz\",\n    \"redeem.bz\",\n    \"sai.redeem.bz\",\n    \"btconline.io\",\n    \"xrpcontest.tumblr.com\",\n    \"fovbit.com\",\n    \"atomic.im\",\n    \"exodus.vc\",\n    \"paxful-ns.com\",\n    \"paxful-sl.com\",\n    \"my-paxful.com\",\n    \"paxful-verifier.com\",\n    \"paxful-fra.com\",\n    \"bitoprowallet.000webhostapp.com\",\n    \"ftx-com-exchange-cryptocurrency.000webhostapp.com\",\n    \"pionex-com-exchange-giveaway.000webhostapp.com\",\n    \"paxfulsecured.com\",\n    \"cryptoxluck.com\",\n    \"kucoin-info.live\",\n    \"elon.gifts\",\n    \"simpleswap.org\",\n    \"getbtcx.com\",\n    \"makerdao.redeem.fund\",\n    \"sai.redeem.fund\",\n    \"redeem.fund\",\n    \"librasale.io\",\n    \"hovbit.com\",\n    \"officiallibracoin.com\",\n    \"musk-event.online\",\n    \"musk-event.tech\",\n    \"musk-event.space\",\n    \"teslaearn.com\",\n    \"zalbit.com\",\n    \"elonx.org\",\n    \"folbit.com\",\n    \"omisego.info\",\n    \"muetherwallet.co\",\n    \"btcshower.com\",\n    \"lk.forsage.io.giveaway-token-member.com\",\n    \"giveaway-token-member.com\",\n    \"accountviewer.xn-stella-gib.org\",\n    \"xn-stella-gib.org\",\n    \"bestchanqe.ru\",\n    \"miningbase.cloud\",\n    \"accountviewer-stellar.com\",\n    \"ledgerslive.web.app\",\n    \"ledgerlivewallet.000webhostapp.com\",\n    \"teamspacex.info\",\n    \"tslamusk.me\",\n    \"roberteth.com\",\n    \"chambtc.org\",\n    \"tslabtc.me\",\n    \"brinbtc.net\",\n    \"winkbtc.com\",\n    \"brinbtc.org\",\n    \"xrp.claims\",\n    \"get-xrp-now.online\",\n    \"xrp20.org\",\n    \"barrybtc.org\",\n    \"shrembtc.org\",\n    \"takexrp.live\",\n    \"xrpdrop.me\",\n    \"xrp.work\",\n    \"xrp.bio\",\n    \"xrp20.com\",\n    \"jackmabtc.com\",\n    \"wozniak.group\",\n    \"robertki.org\",\n    \"gates.promo\",\n    \"topxrp.com\",\n    \"xrpclaim.org\",\n    \"awayxrp.org\",\n    \"xrptop.com\",\n    \"xrptake.live\",\n    \"2020xrp.org\",\n    \"claimxrp.org\",\n    \"20xrp.tech\",\n    \"giveawayseptember.com\",\n    \"receivexrp.com\",\n    \"xrpx10.org\",\n    \"xrpaway.org\",\n    \"geteth.live\",\n    \"2020xrp.net\",\n    \"claimxrp.net\",\n    \"awayxrp.net\",\n    \"myxrp.org\",\n    \"ripple.re\",\n    \"dave-btc.info\",\n    \"stevebtc.org\",\n    \"cham-btc.info\",\n    \"pantera.ltd\",\n    \"xiaomibtc.com\",\n    \"found-bin.com\",\n    \"walletgenerator.net\",\n    \"max-maicoin-claimbonusbtc.000webhostapp.com\",\n    \"lokbit.com\",\n    \"vaubit.com\",\n    \"bitcoinpaperwallet.com\",\n    \"profitmusk.com\",\n    \"elonsave.com\",\n    \"tony-btc.info\",\n    \"dentacoins.com\",\n    \"laubit.com\",\n    \"binancechange.com\",\n    \"royal-crypto.cc\",\n    \"muskprofit.com\",\n    \"etherscanner.ml\",\n    \"wozdrop.me\",\n    \"yaubit.com\",\n    \"halfbit.cc\",\n    \"bitcoinbonuswallet.com\",\n    \"bytombit.com\",\n    \"tesla.bz\",\n    \"myetherwallet-inc.com\",\n    \"etcwallet.net\",\n    \"mastercoin.top\",\n    \"ledgerwallet.xyz\",\n    \"claim-token-erc20-rewards-program.com\",\n    \"metamaks.io\",\n    \"metadb.online\",\n    \"mycrypto.ml\",\n    \"myetherwallet.keynasty.com\",\n    \"wallets.company\",\n    \"myetherwallet-erc20token.weebly.com\",\n    \"bitgen.pro\",\n    \"metarnask.io\",\n    \"giveaway.revproject.site\",\n    \"elonmusk.financial\",\n    \"ethereum-promo.site\",\n    \"spacexcash.com\",\n    \"bestchange.run\",\n    \"applegive.club\",\n    \"mycrypto.ga\",\n    \"recovermycoins.com\",\n    \"meta-mask.io\",\n    \"faobit.com\",\n    \"teslapromo.org\",\n    \"xlmget.org\",\n    \"metmamask.com\",\n    \"metamask.info\",\n    \"metamosk.info\",\n    \"metamosk.com\",\n    \"paubit.com\",\n    \"spacexgives.com\",\n    \"ethereumfond.com\",\n    \"app.fulcrum.link\",\n    \"fulcrum.link\",\n    \"ethdrop.news\",\n    \"maker.dao.migrate.claims\",\n    \"migrate.claims\",\n    \"promomusk.me\",\n    \"myehterwaltet.com\",\n    \"spacex.sale\",\n    \"piutrade.com\",\n    \"mytiethervveallet.com\",\n    \"gmsstatistics.com\",\n    \"yolbit.com\",\n    \"rewards-holders-erc20-tokens.com\",\n    \"taas.fund.rewards-holders-erc20-tokens.com\",\n    \"spacexgiveaway.com\",\n    \"ethdrop.org\",\n    \"prethbonus.com\",\n    \"ethpromo.news\",\n    \"proethevent.com\",\n    \"bezosxbt.com\",\n    \"erc-20.online\",\n    \"ethevent.us\",\n    \"ethgift.com\",\n    \"teslagives.com\",\n    \"spacex.bz\",\n    \"rewards-program-erc-20-token.com\",\n    \"glybit.com\",\n    \"aprilcontest.tumblr.com\",\n    \"bezos.xyz\",\n    \"xn--trstwallet-odb.com\",\n    \"10xbitcoin.net.deepprofitstreams.com\",\n    \"elonlive.org\",\n    \"promocoinbase.xyz\",\n    \"myelthermwallet.com\",\n    \"asset-erc-20-token.com\",\n    \"daostack.asset-erc-20-token.com\",\n    \"leakedbitcoin.excelerate.co.nz\",\n    \"nixetrade.com\",\n    \"bitcoin.cryptogenerator.live\",\n    \"cryptogenerator.live\",\n    \"ethereum.cryptogenerator.live\",\n    \"musktesla.press\",\n    \"tesladrops.info\",\n    \"spacexgifts.info\",\n    \"xrpclaim.net\",\n    \"muskfunds.info\",\n    \"proeth-april-campaign.com\",\n    \"ethnow.site\",\n    \"bestcrhange.ru\",\n    \"hofbit.com\",\n    \"elonfund.info\",\n    \"doubleyourbitcoin.com\",\n    \"bitcoinairdrop.info\",\n    \"easybitcoin.fun\",\n    \"sso-github.com\",\n    \"glthubs.info\",\n    \"githb.co\",\n    \"git-secure-service.in\",\n    \"wallet.terzcr.com\",\n    \"terzcr.com\",\n    \"muskfund.info\",\n    \"ethdrop.me\",\n    \"lifbit.com\",\n    \"teslagiving.com\",\n    \"vitalik-eth.com\",\n    \"proeth-event-april.com\",\n    \"ethventure.com\",\n    \"randomix.org\",\n    \"glt-hub.com\",\n    \"trust-wallet.me\",\n    \"trustwollet.com\",\n    \"xn--blnnce-yc8b.com\",\n    \"coinbase.fund\",\n    \"login.blcohchaln.com\",\n    \"blcohchaln.com\",\n    \"wallet.blockchaln.company\",\n    \"tifbit.com\",\n    \"ungleder.no\",\n    \"login-trezor.io\",\n    \"trezory.site\",\n    \"ethairdrops.com\",\n    \"reether.store\",\n    \"ethlive.org\",\n    \"teslamusk.online\",\n    \"teslax.tech\",\n    \"teslax.store\",\n    \"ethchain.gift\",\n    \"coinbasetoday.info\",\n    \"binance.com18954761.info\",\n    \"com18954761.info\",\n    \"ethereum-give.com\",\n    \"coinbase2x.pro\",\n    \"coinbasegive.info\",\n    \"coinbasedrop.info\",\n    \"trading-binance.com\",\n    \"coinbase.deposit-allow.com\",\n    \"deposit-allow.com\",\n    \"coinbaseverify.xyz\",\n    \"coinbase.pro-deposit.com\",\n    \"pro-deposit.com\",\n    \"coinbase2x.us\",\n    \"coinbase-bitcoin.tech\",\n    \"bitcoincode.tech\",\n    \"coinbasejoin.info\",\n    \"coinbase-assist.com\",\n    \"wallet.trczor.com\",\n    \"trczor.com\",\n    \"telegramcrypto.net\",\n    \"blokchalne.info\",\n    \"etherum.giveaway-coinbase.com\",\n    \"bitcoin.giveaway-coinbase.com\",\n    \"giveaway-coinbase.com\",\n    \"jaxxupdatesupport.com\",\n    \"trustcoin.exchange\",\n    \"doubleway.rf.gd\",\n    \"xtibit.com\",\n    \"crypto-crown.ltd\",\n    \"feex.exchange\",\n    \"musktesla.pro\",\n    \"bestchange.ru.bitcoin-sberbank.online\",\n    \"spacexmusk.info\",\n    \"musknow.info\",\n    \"zeriontrade.io\",\n    \"rozbit.com\",\n    \"myledgernano.com\",\n    \"completssl.com\",\n    \"bitcoinsystem-app.com\",\n    \"xn--ytherallet-to2e94ayr.com\",\n    \"teslamusk.pro\",\n    \"muskget.info\",\n    \"bit-coinvestor.com\",\n    \"bestchrnge.ru\",\n    \"wallet-coinomi-giveaway.000webhostapp.com\",\n    \"trustwallet.biz\",\n    \"ledgerweb.ai\",\n    \"spacex.bet\",\n    \"elonmusk.market\",\n    \"teslaevent.pro\",\n    \"gatesfree.com\",\n    \"muskgive.info\",\n    \"spacex.world\",\n    \"bestcoins.info\",\n    \"teslamusk.group\",\n    \"gateslive.tech\",\n    \"billgates.capital\",\n    \"trumpbtc.tech\",\n    \"bezosmoney.net\",\n    \"slmpleswap.site\",\n    \"bestchange.space\",\n    \"jaxx.live\",\n    \"atomicwallet.ltd\",\n    \"cryptonfx.com\",\n    \"qrcodebtc.com\",\n    \"viabtc-transaction-accelerator.com\",\n    \"bitcoins-qr-code.com\",\n    \"create-bitcoin-qr-code.com\",\n    \"login.blcokchaln.top\",\n    \"blcokchaln.top\",\n    \"bitcoingeneratorsonline.com\",\n    \"bitmusk.net\",\n    \"supportve-coinbase.icu.dreamcenterinternational.org\",\n    \"binance.com182763748.info\",\n    \"com182763748.info\",\n    \"bitcoindoubler2x.com\",\n    \"bezosbit.com\",\n    \"teslabest.info\",\n    \"bmgfevent.com\",\n    \"migrate.fund\",\n    \"maker.dao.migrate.fund\",\n    \"getnewbtc.com\",\n    \"mdl3.top\",\n    \"bitcoingenerat.online\",\n    \"binance-dex.app\",\n    \"free-bitcoin-qr-codes.com\",\n    \"bitcoinaddresstoqrcode.com\",\n    \"binanceprofit.com\",\n    \"x2bitcoin.info\",\n    \"qr-code-bitcoin.com\",\n    \"freebitcoinqrcodes.com\",\n    \"eth-to-btc-converter.com\",\n    \"bitcoin-transaction-accelerator.com\",\n    \"transaction-accelerator.com\",\n    \"btc-to-qr.com\",\n    \"bitcoin-tx-transaction-accelerator.com\",\n    \"bitcoin-barcode-generator.com\",\n    \"muskgiving.com\",\n    \"coinbase.com.nervo.co.za\",\n    \"bitcoin-electrum.me\",\n    \"bitcoinelon.com\",\n    \"bitcoinpayout.net\",\n    \"bitcoinforme.net\",\n    \"com-bitcoins.com\",\n    \"elon-musk.online\",\n    \"binance-giveeth.online\",\n    \"bitcoinelectrum.co\",\n    \"morefreebitcoin.com\",\n    \"elonxcoin.info\",\n    \"binance.com158768471.info\",\n    \"4xrp.org\",\n    \"cnipmixer.com\",\n    \"bliocklchain.com\",\n    \"login-blockchanin.com\",\n    \"eventcrypto.me\",\n    \"eventcrypto.net\",\n    \"muskgiving.info\",\n    \"bestchagne.ru\",\n    \"spacex.expert\",\n    \"eventcrypto.org\",\n    \"bitcoinminerpro.yj.fr\",\n    \"mercadobitcoin.tech\",\n    \"elonnews.online\",\n    \"thebitcoin-code.net\",\n    \"bitcoinelectrum.ws\",\n    \"bitcoin-electrum.org\",\n    \"bitcoinrising.net\",\n    \"www.login.coinbase.com-src.cgi-bin.colnbase.site\",\n    \"colnbase.site\",\n    \"bitcoingives.info\",\n    \"xn--treor-7hb.com\",\n    \"wallets-trezor.io\",\n    \"muskbitcoin.info\",\n    \"bitcoinmusk.info\",\n    \"maticbit.com\",\n    \"musk-promo.pro\",\n    \"tmdl3.space\",\n    \"spacex.press\",\n    \"spacegains.info\",\n    \"librasecure.net\",\n    \"blcokclnaln.com\",\n    \"xn--localbicoins-jcc.com\",\n    \"xn--mythrwalle-o12ej8aca.com\",\n    \"ledger-live.com\",\n    \"teslabitcoin.info\",\n    \"binance-ethpromo.tech\",\n    \"musk4.fun\",\n    \"elonteam.space\",\n    \"muskgive.org\",\n    \"spacebitcoin.info\",\n    \"muskfree.net\",\n    \"tesladrop.space\",\n    \"btcfminer.online\",\n    \"ledgerhalving.com\",\n    \"btcethtesla.info\",\n    \"muskevent.pro\",\n    \"muskbtc.net\",\n    \"gram-march.com\",\n    \"rivbit.com\",\n    \"btczeal.com\",\n    \"rafbit.com\",\n    \"lorechange.com\",\n    \"rocsbit.com\",\n    \"blerbit.com\",\n    \"btcethpromo.info\",\n    \"eloneth.org\",\n    \"btcwebminer.site\",\n    \"300dollarsdaily.com\",\n    \"ethereum-eth.info\",\n    \"4musk.top\",\n    \"elonmuskgive.net\",\n    \"muskpromo.cloud\",\n    \"login-bl0ckchain.com\",\n    \"minebitcoin.club\",\n    \"xn--locabitcoins-gcc.com\",\n    \"btcmusk.net\",\n    \"teslaevent.online\",\n    \"elonlive.com\",\n    \"btcelon.com\",\n    \"teslalive.online\",\n    \"teslagoods.info\",\n    \"musk20.com\",\n    \"grampublic.com\",\n    \"qoloniex.com\",\n    \"xn--chpmixer-31a.com\",\n    \"teslateam.net\",\n    \"teslawallet.info\",\n    \"model3.pw\",\n    \"ethereum-gift.neocities.org\",\n    \"bestcoin.ltd\",\n    \"changequick.services\",\n    \"xn--bestchng-5za62c.net\",\n    \"net24ex.club\",\n    \"idex-market.net\",\n    \"fulcrum.claims\",\n    \"elonmusk.bet\",\n    \"elonmusk.promo\",\n    \"teslagives.info\",\n    \"muskpromo.press\",\n    \"spacetesla.info\",\n    \"bitcoina.us\",\n    \"nexus-crypto.com\",\n    \"xn--bestchag-ceb20c.net\",\n    \"xn--bstchag-t8ag20c.net\",\n    \"xn--bstchage-4db90c.net\",\n    \"xn--bstchan-t8ag3h.net\",\n    \"xn--btchange-4db49d.net\",\n    \"xn--bstchag-t8ag26b.net\",\n    \"xn--bestchag-ceb26b.net\",\n    \"xn--betchang-ceb78w.net\",\n    \"eventmusk.com\",\n    \"spacedrops.info\",\n    \"moontrade.org\",\n    \"moontrade.herokuapp.com\",\n    \"btcvip.net\",\n    \"4tesla.top\",\n    \"myeheterrwallet.com\",\n    \"exodus.com.ru\",\n    \"logln-blcokchian.com\",\n    \"getlibra.cc\",\n    \"muskevent.info\",\n    \"muskpresent.com\",\n    \"ethereum-eth.ltd\",\n    \"b-promo.online\",\n    \"elon2020.online\",\n    \"musk-airdrop.online\",\n    \"xn--bstchang-b1a14b.com\",\n    \"bestchanrge.net\",\n    \"bit-exhcanger.xn--r-9ga.net\",\n    \"xn--besthage-49a.com\",\n    \"besrchange.ru\",\n    \"elon-give.online\",\n    \"spacexbonus.info\",\n    \"elonmusk.world\",\n    \"spacexdrop.info\",\n    \"bonustesla.com\",\n    \"muskdrop.com\",\n    \"teslapresent.com\",\n    \"lcgin.xn--bcokchan-6ob9076e.com\",\n    \"xn--bcokchan-6ob9076e.com\",\n    \"xn--bstcha-3ua59ard8p.net\",\n    \"changequick.network\",\n    \"24netex.life\",\n    \"signin.blockchaln.com.18secure.host\",\n    \"blockchaln.com.18secure.host\",\n    \"xn--bestchage-hxb.com\",\n    \"xn--bstchane-3cb0i.com\",\n    \"bestchange.ru4bestchange.ru\",\n    \"bestchange.ru5bestchange.ru\",\n    \"bestchanrge.com\",\n    \"xn--bestcange-4mb.com\",\n    \"air-drop-coinbase.com\",\n    \"droptesla.com\",\n    \"elonx-space.com\",\n    \"exodus.onl\",\n    \"ledger.icu\",\n    \"aragongift.live\",\n    \"vertocoins.com\",\n    \"ledger.gmbh\",\n    \"coinbase-air-drop.com\",\n    \"btcwebminer.trade\",\n    \"minebitcoin.online\",\n    \"fresh-mining.com\",\n    \"xashmining.com\",\n    \"spaceprize.info\",\n    \"elonxspace.com\",\n    \"metalfabpro.com\",\n    \"donaldcrypto.com\",\n    \"doubler.to\",\n    \"xn--bstchang-3cbh.com\",\n    \"xn--bethae-k2a2p2l5g.net\",\n    \"elonxpromo.com\",\n    \"rugggbestchange.ru\",\n    \"binanceeth.space\",\n    \"spacebonus.info\",\n    \"changequick.digital\",\n    \"coin-best.info\",\n    \"365cash.today\",\n    \"xn--etx24-7za04a.net\",\n    \"treroz.io\",\n    \"mybsvwallet.org\",\n    \"getxrp.org\",\n    \"xrp-airdrop.net\",\n    \"jaxx.ws\",\n    \"exodus-wallet.org\",\n    \"ledger.ink\",\n    \"jaxx-wallet.com\",\n    \"webledger.dev\",\n    \"ledgerwallet.life\",\n    \"bonuspacex.com\",\n    \"musksecret.info\",\n    \"eloncrypto.io\",\n    \"xn--btha-bpad1ski0ki7e.net\",\n    \"ether-binance.online\",\n    \"bestchsanges.com\",\n    \"ledger-webwallet.com\",\n    \"xrp2020.net\",\n    \"grimebit.com\",\n    \"craigsecret.com\",\n    \"ethereumpro.eu\",\n    \"earn2xethnow.com\",\n    \"teslanews.life\",\n    \"webledger.pro\",\n    \"elongiftpromo.com\",\n    \"elonpromo.net\",\n    \"elongiving.net\",\n    \"yusaku2020.org\",\n    \"elonpromo.online\",\n    \"vazebit.com\",\n    \"beldexcurrency.com\",\n    \"elonpromo.tech\",\n    \"xn--netx24-r3a.net\",\n    \"musk2020.fun\",\n    \"xn--beschange-d5b.com\",\n    \"xn--bethae-d1a0url7i.net\",\n    \"bestchange.combestchange.ru\",\n    \"tesladrop.info\",\n    \"secretmusk.com\",\n    \"cybertruck.work\",\n    \"bonusmusk.com\",\n    \"maker.dao.migrate.ltd\",\n    \"maker.migrate.tools\",\n    \"connect.maker.migrate.tools\",\n    \"swap.makerdao.guide\",\n    \"connect.maker.dao.migrate.ltd\",\n    \"migrate.makerdao.guide\",\n    \"makerdao.guide\",\n    \"makerdao.care\",\n    \"migrate.tools\",\n    \"migrate.ltd\",\n    \"ripple.gift\",\n    \"login.blcolkchaln.com\",\n    \"blcolkchaln.com\",\n    \"blcckchlen.com\",\n    \"trezor.io-wallet.com\",\n    \"io-wallet.com\",\n    \"xn--localbitcins-vcd.net\",\n    \"razebit.com\",\n    \"infinivi.io\",\n    \"bytetrade.com\",\n    \"bytetrade.io\",\n    \"cgen.fr.fo\",\n    \"cryptotabscript.online\",\n    \"cryptotabscripts.com\",\n    \"wallet.blockcnain.tech\",\n    \"blockcnain.tech\",\n    \"exodusapp.life\",\n    \"ledgerweb.life\",\n    \"airdrop-ethereum.com\",\n    \"wallet.blockcnain.biz\",\n    \"login.blockchaln.com.attp.host\",\n    \"localbitcoins.name\",\n    \"strainbit.com\",\n    \"benribit.com\",\n    \"pleinbit.com\",\n    \"elon.vip\",\n    \"elonpromogift.com\",\n    \"lazebit.com\",\n    \"elon.press\",\n    \"teslapromo.net\",\n    \"teslagive.net\",\n    \"teslagive.vip\",\n    \"elon.live\",\n    \"musk.bet\",\n    \"beldextrade.com\",\n    \"musk2020.site\",\n    \"shapeshifte.xyz\",\n    \"login.blockchaln.company\",\n    \"blockchaln.company\",\n    \"login.blockchaln.com.14secure.host\",\n    \"blockchaln.com.14secure.host\",\n    \"blockchaln.com.13secure.host\",\n    \"btcethgiveaway.com\",\n    \"muskpromo.com\",\n    \"elonxgive.online\",\n    \"teslacoins.club\",\n    \"muskgift.com\",\n    \"btc-gen.site\",\n    \"makerdao.ltd\",\n    \"xn--betchnge-dza05j.net\",\n    \"xn--etex24-vfb.net\",\n    \"seriosbit.com\",\n    \"elonbtc.info\",\n    \"makerdao.llc\",\n    \"makerdao.one\",\n    \"migrate.makerdao.one\",\n    \"makerdao.cash\",\n    \"migrate.makerdao.cash\",\n    \"maezawaotoshidama.info\",\n    \"lrezor.io\",\n    \"instant2xreward.com\",\n    \"makerdao.click\",\n    \"elonairdrop.com\",\n    \"wallet.blockchaln.llc\",\n    \"blockchaln.llc\",\n    \"login.blockchaln.com.16secure.host\",\n    \"blockchaln.com.16secure.host\",\n    \"login-blockchain-com.nl\",\n    \"beldexchange.com\",\n    \"bestchangre.ru\",\n    \"bit-changer.ru\",\n    \"vitaliketh.live\",\n    \"4musk.host\",\n    \"elonxgive.com\",\n    \"elongive.live\",\n    \"muskgiveaway.com\",\n    \"thetatoken.gq\",\n    \"elonxcrypto.com\",\n    \"xn--myetherwet-bhb64ea.com\",\n    \"myetherwallet.colu.com\",\n    \"blokchiain.com\",\n    \"vitaliketh.com\",\n    \"hoxbit.com\",\n    \"free-ethereum.io\",\n    \"elon.market\",\n    \"tmdl3.online\",\n    \"multisupport.live\",\n    \"huobiglobal.live\",\n    \"infinances.com\",\n    \"quakebit.com\",\n    \"etcagharta.org\",\n    \"wallet.etcagharta.org\",\n    \"makerdao.tools\",\n    \"tmdl3.company\",\n    \"login-blockchain.com.br\",\n    \"btcgenplus.fr.fo\",\n    \"musk.blog\",\n    \"elonxdrop.com\",\n    \"tesla.gift\",\n    \"generatorapp.cf\",\n    \"xn--beschne-pcb24tm35j.net\",\n    \"btc-pro.ru\",\n    \"xn--bsthnge-kwa3dys.net\",\n    \"cash365.me\",\n    \"xn--etex24-heb.net\",\n    \"xn--bsthnge-kwa45amf.net\",\n    \"xn--bethge-k2a78b9gm78y.net\",\n    \"cash365.cc\",\n    \"xn--bechnge-rqb88nm21m.net\",\n    \"xn--netx24-rva.net\",\n    \"365cash.cash\",\n    \"xn--betchge-4kb19p751l.net\",\n    \"best-coin.vip\",\n    \"change-quick.us\",\n    \"xn--ntex24-pva.net\",\n    \"ethdropcharity.tech\",\n    \"change-quick.vip\",\n    \"cash-i.xyz\",\n    \"coinbest.us\",\n    \"xn--trezr-yua.com\",\n    \"besrtchange.ru\",\n    \"xn--besthng-lwa45atf.net\",\n    \"coinbest.cc\",\n    \"quickchange.vip\",\n    \"365cash.us\",\n    \"xn--bethnge-kwa45a24a.net\",\n    \"xn--neex24-jmc.net\",\n    \"muskfun.info\",\n    \"elonpresent.com\",\n    \"makerdao.live\",\n    \"migrate.makerdao.live\",\n    \"beldexwallet.com\",\n    \"xn--bsthange-mbb1h.net\",\n    \"xn--beschng-lwa20cv7f.net\",\n    \"xn--bsthng-sta61azeh.net\",\n    \"coin-best.me\",\n    \"quick-change.co\",\n    \"365cash.mobi\",\n    \"i-cash.link\",\n    \"xn--etex24-9eb.net\",\n    \"bitcoinminer2x.com\",\n    \"blockchain-script.net\",\n    \"btc-gen.com\",\n    \"bitcoinmining-pro.software\",\n    \"lisane.gq\",\n    \"shitcoinwallet.co\",\n    \"erc20wallet.tk\",\n    \"capitalbitsinvestments.com\",\n    \"best-coin.world\",\n    \"elonchris.com\",\n    \"xn--bethane-74a9w0v.net\",\n    \"xn--besthag-hya43amu.net\",\n    \"xn--betchae-pcb82a7i.net\",\n    \"xn--betchage-dqb9r.net\",\n    \"eth-giveout.com\",\n    \"xn--bethage-74a38cji.net\",\n    \"xn--bethage-74a38cng.net\",\n    \"xn--bethage-74a56c3i.net\",\n    \"xn--besthane-38a7z.net\",\n    \"xn--besthnge-dza29a.net\",\n    \"xn--bsthange-28a1n.net\",\n    \"xn--bsthange-b1a61a.net\",\n    \"xn--bestchng-eza6e.net\",\n    \"xn--besthng-lwa80bye.net\",\n    \"xn--besthng-lwa9dzu.net\",\n    \"xn--betchng-lwa9d43e.net\",\n    \"xn--bsthang-l6a1gh.net\",\n    \"xn--bestchag-80a2g.net\",\n    \"xn--besthang-nbb8h.net\",\n    \"xn--besthang-v0a83c.net\",\n    \"xn--bstchag-2xa0gut.net\",\n    \"xn--bstchag-2xag2g.net\",\n    \"xn--bstchag-9za05aha.net\",\n    \"cash365.vip\",\n    \"xn--bstchage-10a9g.net\",\n    \"i-change.co\",\n    \"i-cash.cc\",\n    \"blockchainscript.net\",\n    \"cryptotabscript.com\",\n    \"multicoinminer.fund\",\n    \"xn--myeterwaet-h0bau.com\",\n    \"login.blcorkchein.com\",\n    \"blcorkchein.com\",\n    \"coinbase-xmas.com\",\n    \"xmasgive.info\",\n    \"trezor.world\",\n    \"xn--trzr-cpa7e.com\",\n    \"ripplelabs.space\",\n    \"elonchristmas.com\",\n    \"coinbasexmas.com\",\n    \"xmasbtc.com\",\n    \"xn--besthage-38a62d.net\",\n    \"xn--bethange-28a25f.net\",\n    \"i-change.online\",\n    \"change-quick.xyz\",\n    \"elonchristmas.net\",\n    \"elonxmas.net\",\n    \"lledger.io\",\n    \"leedger.io\",\n    \"mcafeechristmas.net\",\n    \"mcafee2020.xyz\",\n    \"emusk.host\",\n    \"musk.one\",\n    \"airdropxrp.com\",\n    \"bitcoinx10.cloudaccess.host\",\n    \"xrpdoubler.us\",\n    \"shopzoro.co.uk\",\n    \"xrpchristmas.com\",\n    \"trezors.io\",\n    \"blockchainsevent.claim-free-btc.com\",\n    \"airdrop-stx-blockchain.info\",\n    \"coinbase-promo.info\",\n    \"login.lblockhcoin.com\",\n    \"lblockhcoin.com\",\n    \"login-bllockchain.com\",\n    \"brestchange.ru\",\n    \"site-blockchain.jdevcloud.com\",\n    \"myehterwalltet.info\",\n    \"lastchance.tech\",\n    \"etherflyer.com.claim-tokens-erc-20.com\",\n    \"claim-tokens-erc-20.com\",\n    \"trezors-wallets.com\",\n    \"elongiftcrypto.com\",\n    \"instanbtc.site\",\n    \"freebitcoinminer.org\",\n    \"bitcoinminer-pool.com\",\n    \"bitcoinfast.xyz\",\n    \"bitcoinpoolmining.xyz\",\n    \"login.lbloclkchoin.com\",\n    \"lbloclkchoin.com\",\n    \"doublebtc3hours.com\",\n    \"multibit.app\",\n    \"freebtcminer.org\",\n    \"btcgenerator.pro\",\n    \"giveaway5000.com\",\n    \"biockchoin.info\",\n    \"block-chain-id.joomla.com\",\n    \"bittrex-yds.com\",\n    \"rnjelherwallet.com\",\n    \"btcfree.pro\",\n    \"coinbasegive.net\",\n    \"stellardrop.com\",\n    \"mercatox2xbonus.com\",\n    \"bitcoindoubler.tech\",\n    \"upgradesai2dai.com\",\n    \"xn--bstchnge-neb8176e.net\",\n    \"xn--bestchge-dqb3626e.net\",\n    \"xn--bstchane-10a01d.net\",\n    \"stellar.us.com\",\n    \"coinbase12.info\",\n    \"cash-coinbase.com\",\n    \"coinbase-cash.com\",\n    \"elonbiz.host\",\n    \"btcfastmining.xyz\",\n    \"musk-btc.com\",\n    \"elonbonus.info\",\n    \"trezgr.io\",\n    \"wallet.trrezor.com\",\n    \"trrezor.com\",\n    \"xn--bestcange-u85d.com\",\n    \"xn--bstchange-03a.com\",\n    \"xn--bestchang-83a.com\",\n    \"xn--besthnge-49a5586e.net\",\n    \"beldexcoins.com\",\n    \"mcafeegiveaway.com\",\n    \"btc-on.com\",\n    \"ripple-gifts.online\",\n    \"coinbasegrant.com\",\n    \"btc-prize.com\",\n    \"trezcor.com\",\n    \"trezor-io.co\",\n    \"wallet.trezor-io.co\",\n    \"xrp2020.com\",\n    \"mcafee2020.online\",\n    \"btc-coin.online\",\n    \"coinbasec.com\",\n    \"coinbase50m.com\",\n    \"ripple-airdrop.org\",\n    \"btcmust.com\",\n    \"elonmuskgo.com\",\n    \"bnbgift.info\",\n    \"binancegiveaway.site\",\n    \"erc-20-token.com\",\n    \"sai2dai.pro\",\n    \"musknews.info\",\n    \"wallet.trezore.io\",\n    \"trezore.io\",\n    \"coinbasego.com\",\n    \"tronnet.network\",\n    \"xrplike.com\",\n    \"zn--trezr-mua.com\",\n    \"ledqer.net\",\n    \"ledgers.com\",\n    \"xn--bestchane-xkb.com\",\n    \"givexrp.net\",\n    \"2020mcafee.info\",\n    \"upbitcoin.info\",\n    \"xn--bestchane-2lb.com\",\n    \"xn--betchange-w1b.com\",\n    \"sai2dai.link\",\n    \"xmrqrcode.com\",\n    \"bonusbtc.net\",\n    \"hitbrc.ru\",\n    \"geminieth.com\",\n    \"e-deals.online\",\n    \"btc50x.info\",\n    \"tesla-3.online\",\n    \"elonbiz.site\",\n    \"coinbaseup.com\",\n    \"login.bilockchoin.com\",\n    \"bilockchoin.com\",\n    \"bittrexthankgiving.com\",\n    \"airdropex.site\",\n    \"mychainlink.org\",\n    \"xn--betchane-dgb84d.com\",\n    \"biggest-airdrop.top\",\n    \"dai2sai.exchange\",\n    \"sai2dai.exchange\",\n    \"airdropdex.site\",\n    \"xn--treor-wib.com\",\n    \"trerzor.io\",\n    \"btcgift.pro\",\n    \"claim-stellar.info\",\n    \"coinbase5k.com\",\n    \"receipt.invoice.reward-ethereum.cf\",\n    \"reward-ethereum.cf\",\n    \"receipt.invoice.eth-referral-airdrop.ml\",\n    \"eth-referral-airdrop.ml\",\n    \"eleckctrum.org\",\n    \"dai2sai.app\",\n    \"sai-to-dai.com\",\n    \"3mdl.space\",\n    \"zilliqa-network.com\",\n    \"geminieth.live\",\n    \"freebtc-drop.live\",\n    \"xn--bestchage-1vb.net\",\n    \"xn--bstchange-0ib.net\",\n    \"xn--betchange-12b.com\",\n    \"xn--betchane-dgb84d.net\",\n    \"xn--besthange-jeb.com\",\n    \"ledgre.com\",\n    \"myetherwallet-getextratoken.000webhostapp.com\",\n    \"triezor.io\",\n    \"ldexmarket.ru.com\",\n    \"margineth.online\",\n    \"bloom.reward-programs.erc20-tokens.com\",\n    \"erc20-tokens.com\",\n    \"exchange.bnbdex.top\",\n    \"bnbdex.top\",\n    \"wallet-thetatoken-extrabonuses.000webhostapp.com\",\n    \"wallet-thetatoken-claim-extra-bonuses.000webhostapp.com\",\n    \"wallet-thetatoken-bonuses.000webhostapp.com\",\n    \"wallet-thetatoken-extrabonuses-erc20.000webhostapp.com\",\n    \"get-extra.tk\",\n    \"next.get-extra.tk\",\n    \"myetherwallet-getfreetoken.000webhostapp.com\",\n    \"get-extra.ml\",\n    \"myetherwallet.rekllama.com\",\n    \"vintage-myetherwallet.telegram-airdrop.com\",\n    \"telegram-airdrop.com\",\n    \"coinxback.com\",\n    \"cryptocloudx.com\",\n    \"saitodai.app\",\n    \"cryptoback.org\",\n    \"trezor.bz\",\n    \"wallet.trezor.bz\",\n    \"bedstchange.pp.ru\",\n    \"xn--bestchnge-51a.net\",\n    \"xn--betchange-6ld.net\",\n    \"3mdl.pw\",\n    \"trezor-info-wallet.musicfestes.com\",\n    \"muskbonus.info\",\n    \"cyber-tesla.com\",\n    \"3mdl.pro\",\n    \"ldexmarket.xyz\",\n    \"btc5k.com\",\n    \"crypto-giveaway.com\",\n    \"ldexmarket.info\",\n    \"muskgives.info\",\n    \"bitmusk.info\",\n    \"2020btc.site\",\n    \"mew-offlclal.info\",\n    \"xn--bestchage-mwb.net\",\n    \"bestchange.page\",\n    \"reward-crypto.com\",\n    \"spacexbit.net\",\n    \"spacexbit.info\",\n    \"terezor.io\",\n    \"wallet.terezor.io\",\n    \"treezor.io\",\n    \"elonmuskgift.com\",\n    \"trezor-wallets.cc\",\n    \"trrezor.io\",\n    \"trezor.promo\",\n    \"eilectum.org\",\n    \"lerger.cf\",\n    \"localbitcoins.com.0fficial-localbitcoins.website\",\n    \"0fficial-localbitcoins.website\",\n    \"official-localbjtcoins.website\",\n    \"mewmyetherwallets.com\",\n    \"official-mcafee.me\",\n    \"elonbonus.com\",\n    \"idex-market.space\",\n    \"sai2dai.com\",\n    \"wallet.trezcr.com\",\n    \"trezcr.com\",\n    \"neosmarteconomy.netlify.com\",\n    \"leedger.info\",\n    \"ovdan.com\",\n    \"legder.co\",\n    \"xn--trezr-gua.com\",\n    \"blockchain.info.rekllama.com\",\n    \"login.blockhiean.com\",\n    \"blockhiean.com\",\n    \"ehterdelta.ru.com\",\n    \"binance-cz-promo.netlify.com\",\n    \"ripple.ooo\",\n    \"chainlinktoken.net\",\n    \"chainlink-info.pro\",\n    \"claim-erc20-token-bonus.ga\",\n    \"bancor-network.ga\",\n    \"crypto-reward.com\",\n    \"intrenational.bjtftrex.com\",\n    \"bjtftrex.com\",\n    \"2xbonus.live\",\n    \"coinbaseteam.com\",\n    \"idex-market.info\",\n    \"geteth.site\",\n    \"binancefutures.online\",\n    \"crypto-generat.ml\",\n    \"myetherwallet-giveaway.000webhostapp.com\",\n    \"extra-bonuses.ga\",\n    \"official-ethers.com\",\n    \"login.bllockhaiin.com\",\n    \"bllockhaiin.com\",\n    \"idexmarket.art\",\n    \"hellogold.in\",\n    \"steemeth.com\",\n    \"beentrade.org\",\n    \"coinspin.net\",\n    \"bitlare.com\",\n    \"uni-pouch.com\",\n    \"elon-get.com\",\n    \"lite.foundation\",\n    \"ripple.expert\",\n    \"3tesla.info\",\n    \"coinsmax.live\",\n    \"4ltc.su\",\n    \"get-xrp.online\",\n    \"freebtceth.com\",\n    \"wp.locallbittcoins.net\",\n    \"locallbittcoins.net\",\n    \"myetherwallet-extra-bonuses.000webhostapp.com\",\n    \"extra-bonuses.gq\",\n    \"next.extra-bonuses.gq\",\n    \"dex-start.net\",\n    \"teslamusk.info\",\n    \"3tesla.club\",\n    \"elonmusk.tk\",\n    \"ethersaway.net\",\n    \"try-ethers.com\",\n    \"tesla3.link\",\n    \"elon-crypto.me\",\n    \"eth-get.org\",\n    \"ethplode.live\",\n    \"mygram.pro\",\n    \"gramsale.org\",\n    \"mc2020get.com\",\n    \"mcf-crypt.net\",\n    \"4tesla.biz\",\n    \"elon-crypto.online\",\n    \"tesla3-now.com\",\n    \"model3.space\",\n    \"mcafee-crypto.com\",\n    \"elon-crypto.net\",\n    \"4tesla.pro\",\n    \"elontesla.info\",\n    \"tesla3.promo\",\n    \"chianlink.io\",\n    \"wallet.chianlink.io\",\n    \"claimlink.org\",\n    \"wallet.chianlink.org\",\n    \"chianlink.org\",\n    \"wallet.xn--chainlik-o99c.com\",\n    \"xn--chainlik-o99c.com\",\n    \"earnxrp.live\",\n    \"tron-network.live\",\n    \"btc-titan.com\",\n    \"uminer.net\",\n    \"2xcoin.live\",\n    \"multicoinsminer.fund\",\n    \"claimbtc.org\",\n    \"elonspace.online\",\n    \"xrpinsights.live\",\n    \"ethaget.com\",\n    \"coinxkeep.com\",\n    \"cravetrade.com\",\n    \"investmentworld.site\",\n    \"bondinvest.site\",\n    \"lidex.market\",\n    \"binancebnbgive.com\",\n    \"eth-charity.tech\",\n    \"tonpresale.com\",\n    \"ethget.org\",\n    \"ildex.host\",\n    \"blittrex.intrenational.com\",\n    \"lcgin-blockchian.com\",\n    \"blcolchian.lcgiln.com\",\n    \"lcgiln.com\",\n    \"blocckchainn.com\",\n    \"binance.bnbnetwork.icu\",\n    \"bnbnetwork.icu\",\n    \"ethereumfreemining.com\",\n    \"exchange.jerseyrelease.services\",\n    \"jerseyrelease.services\",\n    \"binance.jerseytrade.icu\",\n    \"jerseytrade.icu\",\n    \"chianlink.com\",\n    \"wallet.chianlink.com\",\n    \"localbitcolns.net\",\n    \"binance.marketjersey.icu\",\n    \"rippleinsights.live\",\n    \"cryptogrowth.live\",\n    \"login.blolockhain.icu\",\n    \"blolockhain.icu\",\n    \"ehterdelta.host\",\n    \"thelibrasale.com\",\n    \"xn--login-blockchan-wj5h.com\",\n    \"xn--login-blockchn-dmb79a.com\",\n    \"btcgen.io\",\n    \"trx-ethgiveaway.com\",\n    \"karlken.com\",\n    \"bilttrex.intrenational.com\",\n    \"intrenational.com\",\n    \"upbitgift.com\",\n    \"xrpdrop.fun\",\n    \"rippleinsights.tech\",\n    \"login.blolckchaln.com\",\n    \"blolckchaln.com\",\n    \"blcolchian.lcgjrn.com\",\n    \"lcgjrn.com\",\n    \"xn--leder-y1a.com\",\n    \"login-blockchain.com.mx\",\n    \"quickinv.com\",\n    \"mcafee-prize.online\",\n    \"bakkt-event-start.netlify.com\",\n    \"spacexbit.com\",\n    \"unruffled-shockley-1db491.netlify.com\",\n    \"t3md.net\",\n    \"earnbros.com\",\n    \"m2020.me\",\n    \"rippleinsights.pro\",\n    \"ton-ico.com\",\n    \"claim-btc.com\",\n    \"medium-crypto.tech\",\n    \"bakktgift.info\",\n    \"chainlink.webcindario.com\",\n    \"coinbasecrypto.tech\",\n    \"xrp-promo.tech\",\n    \"bakkt-celebration.netlify.com\",\n    \"bonuscoinbase.com\",\n    \"bakkt-give.org\",\n    \"bakktget.com\",\n    \"bakkt.wz.cz\",\n    \"btcdrops.net\",\n    \"promobakkt.com\",\n    \"bakktlaunch.com\",\n    \"bololckhain.com\",\n    \"login-bloclknainn.com\",\n    \"newcryptogift.com\",\n    \"dex-get.net\",\n    \"extra-rewards-bonus.com\",\n    \"muskbit.com\",\n    \"blockchain5th.com\",\n    \"ltdex.market\",\n    \"dogechain.org\",\n    \"exodus.icu\",\n    \"ton-telegram.net\",\n    \"freebakkt.com\",\n    \"libratokensale.com\",\n    \"getbabb-claims.exclusive-extra-bonuses.com\",\n    \"exclusive-extra-bonuses.com\",\n    \"claims-token-erc20.exclusive-extra-bonuses.com\",\n    \"xrpcompetition.live\",\n    \"bithumb.live\",\n    \"spacexfree.com\",\n    \"cryptogood.000webhostapp.com\",\n    \"delltrade.com\",\n    \"yobit.website\",\n    \"netexcoins.com\",\n    \"highcoin.net\",\n    \"coinbascet.com\",\n    \"chartrade.com\",\n    \"tradeberry.org\",\n    \"billaxy.com\",\n    \"cryptonex.uk\",\n    \"hyptrade.com\",\n    \"wintraders.net\",\n    \"coinrexo.com\",\n    \"exmofit.com\",\n    \"xn--stllar-cva.org\",\n    \"xn--mdium-n51b.com\",\n    \"claimlumens.org\",\n    \"xn--stllr-6wa7j.org\",\n    \"ledger-live.co\",\n    \"ledger-ad.com\",\n    \"wallet.my-trezor.com\",\n    \"my-trezor.com\",\n    \"snegir-shop.ru\",\n    \"tokenairdrops.net\",\n    \"idexmarket.info\",\n    \"xn--localitcoins-bh4f.net\",\n    \"ddexbit.com\",\n    \"secure-ledger.com\",\n    \"ethereumatlantis.network\",\n    \"btcethgift.com\",\n    \"blockkchain.ru\",\n    \"login.bllocklnain.com\",\n    \"bllocklnain.com\",\n    \"mcf2020.net\",\n    \"tmdl.info\",\n    \"xn--stellr-tta.org\",\n    \"xrpgift.live\",\n    \"login.blogchain.icu\",\n    \"blogchain.icu\",\n    \"login.bllcoklnain.com\",\n    \"bllcoklnain.com\",\n    \"yourlibra.net\",\n    \"atlantis-wallet.com\",\n    \"go-testnet.com\",\n    \"info-dex.com\",\n    \"biboxgive.com\",\n    \"toreovonline.uk\",\n    \"blockcchain.ru\",\n    \"ethereumclassic.bonus-programs.com\",\n    \"bonus-programs.com\",\n    \"myetherwallet.com-wallet-transactions.host\",\n    \"com-wallet-transactions.host\",\n    \"trezor.blog\",\n    \"doubleinv.com\",\n    \"medium-crypto.xyz\",\n    \"idtex.market\",\n    \"hitbtc.su\",\n    \"blcckchian.com\",\n    \"ethereumboston.com\",\n    \"5000-btc.com\",\n    \"loqin.blcakchian.com\",\n    \"blcakchian.com\",\n    \"blockchailn.biz\",\n    \"exchange.bnbmx.services\",\n    \"event.exchangemarket.services\",\n    \"coinbase-promo.net\",\n    \"drop-crypto.org\",\n    \"libra-coin.cc\",\n    \"thevidbit.com\",\n    \"binance.launch-usa.net\",\n    \"launch-usa.net\",\n    \"coinbase-bonus.net\",\n    \"bitcoingenerator.com.ru\",\n    \"b-lockchian.com\",\n    \"ehterdetla.com\",\n    \"btc10.org\",\n    \"tornado.best\",\n    \"binance-test.org\",\n    \"vintage.myethewallet.online\",\n    \"myethewallet.online\",\n    \"login.blackchair.info\",\n    \"blackchair.info\",\n    \"linkairdrop.com\",\n    \"vipmagija.com\",\n    \"kungmedia.com\",\n    \"btcandeth.com\",\n    \"dropkraken.com\",\n    \"binance-get.org\",\n    \"project2019.services\",\n    \"bloclkchain.net\",\n    \"coinbase-prize.com\",\n    \"idex.net.ru\",\n    \"gram-chain.com\",\n    \"etherdelta.net.ru\",\n    \"win-coinbase.com\",\n    \"tokengiveaway.in\",\n    \"finalgiveaway.com\",\n    \"coinbasewin.com\",\n    \"coinbase-reward.com\",\n    \"bttfinex.ru\",\n    \"bitdegree-claims.bonus-client.com\",\n    \"bonus-client.com\",\n    \"cryptousd.host\",\n    \"earncrypto.xyz\",\n    \"cryptxbit.pro\",\n    \"btcjob.pw\",\n    \"cryptoex.icu\",\n    \"cryptocoin24.site\",\n    \"musk.ml\",\n    \"crypto-airdrop.org\",\n    \"coinbasegiveaway.com\",\n    \"lucky-binance.com\",\n    \"exchange.bnbdexevent.services\",\n    \"bnbdexevent.services\",\n    \"bin-us.com\",\n    \"bitshumb.com\",\n    \"bnbmarket.services\",\n    \"exchange.bnbmarket.services\",\n    \"event.exchangejersey.top\",\n    \"exchangejersey.top\",\n    \"exchange.webjersey.top\",\n    \"webjersey.top\",\n    \"binance.marketlaunch.site\",\n    \"marketlaunch.site\",\n    \"exchange.projectdex.top\",\n    \"projectdex.top\",\n    \"wwwelectrum.org\",\n    \"blcokchian.licgin.com\",\n    \"licgin.com\",\n    \"idex.ru.net\",\n    \"bitmartgive.com\",\n    \"freecryptoevent.com\",\n    \"muskgive.com\",\n    \"xn--stllar-x4a.org\",\n    \"lauchesevent.services\",\n    \"tronetwork.live\",\n    \"cryptobridges.com\",\n    \"eth-drop.org\",\n    \"get-back.site\",\n    \"bcash-promo.org\",\n    \"coinbasepromotion.com\",\n    \"mytethwellet.com\",\n    \"kutixtoken.com\",\n    \"myaetherwellat.com\",\n    \"ktx.typeform.com\",\n    \"ideex.pw\",\n    \"btc-coinbase.com\",\n    \"gwayaugust.blogspot.com\",\n    \"intenrational.bfttrex.com\",\n    \"litecoingiveaway.info\",\n    \"bfttrex.com\",\n    \"ethberlin.org\",\n    \"coinbasegive.com\",\n    \"muskelon.ga\",\n    \"rippleairdrop.club\",\n    \"myetherwallet.signtransaction.co\",\n    \"signtransaction.co\",\n    \"zendesk-news.com\",\n    \"litecoinairdrop.club\",\n    \"bllockchain.ga\",\n    \"5000-coinbase.com\",\n    \"binance-airdro.online\",\n    \"ltccontest.com\",\n    \"litecoin-giveaway.org\",\n    \"satoshi-litecoin.netlify.com\",\n    \"top-coinbase.com\",\n    \"pultegive.com\",\n    \"ethereum-bounty.live\",\n    \"ripplebounty.live\",\n    \"ripple-give.net\",\n    \"medium.xrpairdrop.website\",\n    \"xrpairdrop.website\",\n    \"best-event.host\",\n    \"mcafee2020-airdrop.netlify.com\",\n    \"charlieleedrop.net\",\n    \"ltc-give.org\",\n    \"2019giveaway.net\",\n    \"ctoken.info\",\n    \"binance.newproject.site\",\n    \"newproject.site\",\n    \"zendesk-binanc.com\",\n    \"binancekyc.com\",\n    \"coinkanon.com\",\n    \"bit7880.com\",\n    \"bitcoin-address-cracker.bit7880.com\",\n    \"www-ideex.market\",\n    \"idleax.market\",\n    \"bitmex-blog.info\",\n    \"eth-send.tech\",\n    \"blcokchian.lcgljn.com\",\n    \"lcgljn.com\",\n    \"dropcoinbase.com\",\n    \"augustcontest.blogspot.com\",\n    \"xn--localbitcons-jfbf.net\",\n    \"airdrop-mcafee.tech\",\n    \"crypto-promo.store\",\n    \"ethereumprize.pro\",\n    \"plus-ethers.com\",\n    \"kucoin.live\",\n    \"b-nance.com\",\n    \"coinbase.gifts\",\n    \"www-idaex.market\",\n    \"btc-drop.com\",\n    \"promo-coinbase.com\",\n    \"get-mcafee.me\",\n    \"mcafeegiveaway.net\",\n    \"mcafeetoday.com\",\n    \"john-mcafee-events.com\",\n    \"get-mcafee.press\",\n    \"cryptofans2019.com\",\n    \"coinbase-promotion.com\",\n    \"coinbase-news.com\",\n    \"btc-bonus.com\",\n    \"myetherverify.com\",\n    \"forkdelta.id\",\n    \"forkdelta.co.uk\",\n    \"forkdelta.club\",\n    \"ethereum-mixer.org\",\n    \"feathercoin.top\",\n    \"myethdex.com\",\n    \"ethcombo.com\",\n    \"locaibitcoins.net\",\n    \"giveaway-transfer.com\",\n    \"decentralized-exchange.info\",\n    \"mcafeenow.net\",\n    \"www-ldax.market\",\n    \"dveryirazdvyzhniesystemy.com\",\n    \"binance.dexmx.site\",\n    \"www-idlex.market\",\n    \"idexmarket.live\",\n    \"mcafeedrop.com\",\n    \"airdrop-mcafee.online\",\n    \"get-mcafee.space\",\n    \"mcafeegroup.org\",\n    \"xn--localbtcoins-jfbb.net\",\n    \"blonckhian.com\",\n    \"perlin.in\",\n    \"trezor.team\",\n    \"brave-bounty.com\",\n    \"5000crypto.com\",\n    \"exchange.eventsolutions.top\",\n    \"coinbasegives.com\",\n    \"coinbasegold.com\",\n    \"coinbase-5000.com\",\n    \"coinbase-drop.com\",\n    \"teamofbinance.com\",\n    \"neoaugust.blogspot.com\",\n    \"binance.jerseyexchange.site\",\n    \"jerseyexchange.site\",\n    \"litecoinpromo.netlify.com\",\n    \"exchange.webdexlaunch.top\",\n    \"webdexlaunch.top\",\n    \"ethereum-airdrop.netlify.com\",\n    \"get-binance.org\",\n    \"get3tesla.space\",\n    \"calibra-ico.info\",\n    \"binancefree2018.droppages.com\",\n    \"binance.newrelease.site\",\n    \"5000coinbase.com\",\n    \"coinbasebtc.atspace.cc\",\n    \"coinbasebonus.net\",\n    \"coinbasegift.epizy.com\",\n    \"transaction-verification.tech\",\n    \"coinbase-team.com\",\n    \"btc-generator.club\",\n    \"idekx.market\",\n    \"vip.kelireqa.xyz\",\n    \"muskelon547776.webcindario.com\",\n    \"muskelon.net\",\n    \"airdrop-crypto.com\",\n    \"promotion-crypto.com\",\n    \"coinbasegift.net\",\n    \"ethereum4th.org\",\n    \"drop-crypto.com\",\n    \"coinbasetop.com\",\n    \"coinbase.promo\",\n    \"100kbtc.com\",\n    \"binance10x.epizy.com\",\n    \"ethereumpromo.epizy.com\",\n    \"2019giveaway.com\",\n    \"gram-net.org\",\n    \"5000btc.gift\",\n    \"promo-binance.netlify.com\",\n    \"btc.wz.sk\",\n    \"myellthevwaallet.com\",\n    \"mcafeebtc.net\",\n    \"buterineth.net\",\n    \"fastprofitableoptiontrade.com\",\n    \"ethereum4th.com\",\n    \"conn-view-wallet.info\",\n    \"myetherwallet.conn-view-wallet.info\",\n    \"top-binance.com\",\n    \"news-bnb.org\",\n    \"neofoundation.blogspot.com\",\n    \"eventbinance.com\",\n    \"xn--blockcain-lmb.com\",\n    \"hiverzone.com\",\n    \"elonmuskcrypto.webcindario.com\",\n    \"binance-margin-launch.com\",\n    \"anycoins.club\",\n    \"mcafees-redemption.netlify.com\",\n    \"calibra-token.info\",\n    \"now5000.com\",\n    \"crypto-drop.org\",\n    \"crypto-promo.net\",\n    \"cryptoextravaganza.online\",\n    \"donalt.livetrades.vip\",\n    \"biitmrt.com\",\n    \"coinbasepromo.epizy.com\",\n    \"win-binance.com\",\n    \"crypto-extravaganza.store\",\n    \"drop-binance.com\",\n    \"gift-binance.com\",\n    \"huobipartners.com\",\n    \"mn-r.store\",\n    \"token-1.com\",\n    \"coinbase.token-1.com\",\n    \"huobiglobal.ltd\",\n    \"zendesk.huobiglobal.ltd\",\n    \"binancebtc.epizy.com\",\n    \"upbit.sale\",\n    \"binance-updates.com\",\n    \"btc5000.epizy.com\",\n    \"promobinance.net\",\n    \"30f3000f-5f1f-4dee-af2d-0b7a6159f4c0.htmlpasta.com\",\n    \"3365cad5-455b-4ed0-a944-2b9bd0191501.htmlpasta.com\",\n    \"0978f655-465b-4434-99fb-f8357c7bca4b.htmlpasta.com\",\n    \"airdrop2.com\",\n    \"get-crypto.tech\",\n    \"dietologicheskoepit.space\",\n    \"binance5000.epizy.com\",\n    \"btcfast.net\",\n    \"transaction-sends.tech\",\n    \"btc-drop.net\",\n    \"coinbasepromo.net\",\n    \"mgctoken.biz\",\n    \"mgctoken.org\",\n    \"binance5000.info\",\n    \"bigpromo.net\",\n    \"5000btc.org\",\n    \"calibra-token.com\",\n    \"calibraico.com\",\n    \"calibra-ico.com\",\n    \"bakkt-btc-event.netlify.com\",\n    \"buylibracoins.com\",\n    \"mcafee-official.net\",\n    \"mcafee-eth.netlify.com\",\n    \"mcafee-btc.netlify.com\",\n    \"calibra-ico.net\",\n    \"tron-official-btc-promo.netlify.com\",\n    \"crypto-promo-get.tech\",\n    \"tron-foundation-redeem.netlify.com\",\n    \"5000giveaway.com\",\n    \"coinbasegift.com\",\n    \"binance-margin-new.com\",\n    \"5000get.com\",\n    \"get3tesla.org\",\n    \"litenet.ltd\",\n    \"5000promo.net\",\n    \"cryptoclub247.com\",\n    \"btcpresent.net\",\n    \"binancevisit.net\",\n    \"thecryptobonus.com\",\n    \"mdl3.org\",\n    \"easybinance.com\",\n    \"crypto-promotion-get.online\",\n    \"tesla-promo.netlify.com\",\n    \"binancegiveaway.top\",\n    \"binancebegin.com\",\n    \"binancefeast.org\",\n    \"drop5000.com\",\n    \"crypto-promotion-get.tech\",\n    \"5000btc.net\",\n    \"blockchain-exploit.site\",\n    \"btc10x.org\",\n    \"binance2019.com\",\n    \"binancefeast.net\",\n    \"2binance.com\",\n    \"binance2yo.com\",\n    \"mybinance.net\",\n    \"localbitcoins.com.digicerts.live\",\n    \"20eth.org\",\n    \"binclic.com\",\n    \"binancepro.epizy.com\",\n    \"mcafee-official-comeback.netlify.com\",\n    \"official-service.online\",\n    \"binancefunds.com\",\n    \"binancetoday.net\",\n    \"julyneo.blogspot.com\",\n    \"innovamine.ltd\",\n    \"cryptoplay.world\",\n    \"binancegiveaway.net\",\n    \"20btc.net\",\n    \"binance-gift.pro\",\n    \"binancewin.com\",\n    \"20eth.com\",\n    \"crypto-event.host\",\n    \"dropbinance.com\",\n    \"xrpx2july.blogspot.co.ke\",\n    \"giftbinance.com\",\n    \"anniversary-eth.com\",\n    \"dropfestextravaganza.tech\",\n    \"fly-promo.online\",\n    \"binpromo.net\",\n    \"cbn-project.com\",\n    \"biltmain.com\",\n    \"binance-team.com\",\n    \"binanceteams.net\",\n    \"binance2.epizy.com\",\n    \"xrpx2july.blogspot.com\",\n    \"binance-gives.com\",\n    \"binance2.vip\",\n    \"5000drop.com\",\n    \"getpromo.me\",\n    \"anniversary-binance.com\",\n    \"dothereumwallet.net\",\n    \"gramton.pw\",\n    \"getbuterin.org\",\n    \"binance20.org\",\n    \"binan-marginal.com\",\n    \"idnex.market\",\n    \"promo-extravaganzza.tech\",\n    \"binancegift.org\",\n    \"win-giveaway.com\",\n    \"crypto-extravaganza.tech\",\n    \"livebinance.com\",\n    \"btcfast.org\",\n    \"binancesuper.net\",\n    \"bitcoindrop.org\",\n    \"eth10.top\",\n    \"binancefree.net\",\n    \"official-drop.club\",\n    \"binancepromo.epizy.com\",\n    \"airdropbtc.epizy.com\",\n    \"binanceclub.rf.gd\",\n    \"crypto-promo.com\",\n    \"giveaway-btc.net\",\n    \"promocrypto.net\",\n    \"binancev2.live\",\n    \"binance-btc.neocities.org\",\n    \"eth30.org\",\n    \"binance-promo.netlify.com\",\n    \"x2neojuly.blogspot.com\",\n    \"celebration-binance.netlify.com\",\n    \"bitcoingift.net\",\n    \"elon-musk.xyz\",\n    \"bllockchain.tk\",\n    \"hiltbtc.com\",\n    \"login.bilockcnain.com\",\n    \"bilockcnain.com\",\n    \"starkdex.net\",\n    \"mew.starkapp.net\",\n    \"starkapp.net\",\n    \"dextestnet.info\",\n    \"eth20.org\",\n    \"binance-bit.net\",\n    \"extravaganza-event.website\",\n    \"teslapromo.info\",\n    \"xn--githu-k90b.com\",\n    \"ethbuterin.com\",\n    \"best-event.site\",\n    \"airdrop.best-event.site\",\n    \"xn--medum-1sa.com\",\n    \"binannce.net\",\n    \"news.binannce.net\",\n    \"myetherewallet.io\",\n    \"giveaway-crypto.tech\",\n    \"binancepromo-now.online\",\n    \"bitcoindrop.net\",\n    \"binance-claims.netlify.com\",\n    \"eth-btcpromotion.online\",\n    \"ethcharity.net\",\n    \"ethprize.net\",\n    \"mcafee.airdrop-event.fun\",\n    \"airdrop-event.fun\",\n    \"doubleethereum.cc\",\n    \"hitbtc.co.ua\",\n    \"coinbasepro10000.webcindario.com\",\n    \"neojulyx2.blogspot.com\",\n    \"ethdrop.net\",\n    \"eth.gift\",\n    \"eth-link.info\",\n    \"chainlink.pro\",\n    \"claimwallet.org\",\n    \"gram-ton.com\",\n    \"ripplesupport.org\",\n    \"6602c412-67f3-4725-92eb-5c2ebb2c6166.htmlpasta.com\",\n    \"d6513d71-ee0e-41c3-8bda-83587ac4e863.htmlpasta.com\",\n    \"johns20190gift.tumblr.com\",\n    \"zendesk-bnb.org\",\n    \"login.blodchain.com\",\n    \"blodchain.com\",\n    \"ethereum-verify.website\",\n    \"login.blocickchairn.com\",\n    \"blocickchairn.com\",\n    \"mew.starkwallet.org\",\n    \"starkwallet.org\",\n    \"bip39.info\",\n    \"bip39tools.com\",\n    \"electrum.org-secure.app\",\n    \"claimlink.online\",\n    \"org-secure.app\",\n    \"refereum.com.erc-20.claims\",\n    \"erc-20.claims\",\n    \"bigdrop.pro\",\n    \"medium.exchange-promo.fun\",\n    \"exchange-promo.fun\",\n    \"pompliano-promo.netlify.com\",\n    \"coinbase.getforge.io\",\n    \"more-getback.site\",\n    \"dothereum-polkadot.net\",\n    \"ripplecompetition.com\",\n    \"junecoinsx2.blogspot.com\",\n    \"cryptexplatform.com\",\n    \"coineplus.com\",\n    \"ecptoken.com\",\n    \"zendesk-bnb.com\",\n    \"vitalik-gives.website\",\n    \"stopp.com.au\",\n    \"promo-from-buterin.site\",\n    \"bnb-zendesk.com\",\n    \"neojunex2.blogspot.com\",\n    \"e3c01d47-32d5-417d-86a5-6484412fd477.htmlpasta.com\",\n    \"xn--calbra-yva.com\",\n    \"zilliqa.tech\",\n    \"cryptosupport.live\",\n    \"idax-market.ru\",\n    \"myeltherewallet.com\",\n    \"blockchairnew.info\",\n    \"starcoine.com\",\n    \"cryptohype.world\",\n    \"eths.gift\",\n    \"mcafee.airdrop-promotion.host\",\n    \"airdrop-promotion.host\",\n    \"apompliano.netlify.com\",\n    \"now-ethers.com\",\n    \"official-promo.pw\",\n    \"official-promo.pro\",\n    \"tesla-promo.epizy.com\",\n    \"airdrop-sale.online\",\n    \"airdrop-main.info\",\n    \"bitfinex.click\",\n    \"official-events.site\",\n    \"myelthwaltter.com\",\n    \"bigclaim.pro\",\n    \"electrumus.com\",\n    \"blog.decentralized-exchange.org\",\n    \"decentralized-exchange.org\",\n    \"neojune.blogspot.com\",\n    \"medium.bitcoin-gain.org\",\n    \"bitcoin-gain.org\",\n    \"sf520pk.com\",\n    \"lianjiedu.com\",\n    \"coinexminer.site\",\n    \"bit-donor.com\",\n    \"bnb-launch.com\",\n    \"mediumcdn.today\",\n    \"mcafee.crypto-airdrop.space\",\n    \"crypto-airdrop.space\",\n    \"teslamusk.tech\",\n    \"58b48d07-110c-487e-8a77-938cfaa8af18.htmlpasta.com\",\n    \"mcafee-promo.com\",\n    \"mcafee-crypto.tech\",\n    \"coin2coin.co\",\n    \"receive-ethereum.website\",\n    \"com-eth.top\",\n    \"binance.com-eth.top\",\n    \"binance-trade.com\",\n    \"musk-event.info\",\n    \"binance-presents.fund\",\n    \"airdrop.center\",\n    \"get-eth-free.com\",\n    \"brave-browser.info\",\n    \"mcafee.site\",\n    \"john.mcafee.getforge.io\",\n    \"binance-app.org\",\n    \"news.binance-app.org\",\n    \"mythwalter.com\",\n    \"logn.life\",\n    \"poloniex.com-account-login.logn.life\",\n    \"com-account-login.logn.life\",\n    \"margin-bintestnet.com\",\n    \"mcafee.getforge.io\",\n    \"newetherewallets.com\",\n    \"ether-return.com\",\n    \"elon-musk.getforge.io\",\n    \"coinexplorer.tech\",\n    \"www-myethenrwallet.com\",\n    \"rnewetherwallet.com\",\n    \"rrryehlerewvallet.com\",\n    \"ildexmarket.pw\",\n    \"news-bnb.com\",\n    \"origin.foundation\",\n    \"cloudtokenexchange.com\",\n    \"blockchaincomexplorer.z13.web.core.windows.net\",\n    \"cryptotronx.com\",\n    \"xn--coinbse-dwa.com\",\n    \"no-replycoinbase.com\",\n    \"hmrcmeclaim.com\",\n    \"mycrypto-wallet.info\",\n    \"dogepay.info\",\n    \"iddex.pw\",\n    \"localbilcolns.net\",\n    \"bnb-testnet.org\",\n    \"jerseylaunches.icu\",\n    \"dexcompetition.site\",\n    \"cryptoxglobal.com\",\n    \"buyeth70.jdevcloud.com\",\n    \"xcoinback.com\",\n    \"eth.elon-musk-tesla.space\",\n    \"elon-musk-tesla.space\",\n    \"btc.elon-musk-tesla.space\",\n    \"tortoken.io\",\n    \"secure.globalsec.icu\",\n    \"doublebitcoin.ga\",\n    \"globalsec.icu\",\n    \"lldex.pw\",\n    \"id-ex.pw\",\n    \"binance-client.com\",\n    \"reddit-securepage-hdsjhg3jh5gjasged32h4i2349803434553.secglobal.icu\",\n    \"secglobal.icu\",\n    \"reddit-securepage-hdsjhg3jh5gjasged32h4i23496jhgh677u.secglobal.icu\",\n    \"blackchoin.info\",\n    \"myrlherwallet.com\",\n    \"iidex.pw\",\n    \"myethirwailets.co\",\n    \"binance-margin.com\",\n    \"cryptogiveaways.top\",\n    \"lidex.pw\",\n    \"tokensmarket.online\",\n    \"telos-fundation.io\",\n    \"mycofterwallet.com\",\n    \"xn--blokchan-u0a8d.com\",\n    \"myethherewallet.com\",\n    \"promo-tesla.store\",\n    \"ldexmarket.pw\",\n    \"eth.elonmusk-tesla.space\",\n    \"elonmusk-tesla.space\",\n    \"teslastore-giveaway.online\",\n    \"buy7btc.online\",\n    \"buy7btc.pro\",\n    \"tenocrypt.com\",\n    \"elon-spacex.promo\",\n    \"elon-spacex.com\",\n    \"elon-spacex.online\",\n    \"elon-spacex.store\",\n    \"giveawaytesla.me\",\n    \"vwv-binance.com\",\n    \"tebestina.info\",\n    \"elon-tesla.info\",\n    \"walletgenerator.org\",\n    \"bnb-binance.com\",\n    \"www-vntage-myetherwallet.com\",\n    \"www-vintage-myetherwallet.com\",\n    \"www-vintaqe-myetherwallet.com\",\n    \"www-vnitage-myetherwallet.com\",\n    \"www1-vintage-myetherwallet.com\",\n    \"ldex.pw\",\n    \"blcckchian.lcgjn.com\",\n    \"lcgjn.com\",\n    \"blodkchian.com\",\n    \"giveaway-tesla.club\",\n    \"cointo.us\",\n    \"launchpadbinance.com\",\n    \"launchpad-binance.com\",\n    \"crypto-mult.io\",\n    \"btc.crypto-mult.io\",\n    \"ltc.crypto-mult.io\",\n    \"doge.crypto-mult.io\",\n    \"xeppwallet.io\",\n    \"dextestnet-binance.com\",\n    \"dexbinance.in\",\n    \"myehtervallet.com\",\n    \"receive-ethereum.com\",\n    \"goxtrade.com\",\n    \"etbcwallet.com\",\n    \"ildex.pw\",\n    \"blockchainxyz.000webhostapp.com\",\n    \"blockchainhacker.net\",\n    \"binance-zendesk.net\",\n    \"cashbit.world\",\n    \"miningbanking.com\",\n    \"constantinople.site\",\n    \"transfer-btc.website\",\n    \"tesla-gift.club\",\n    \"medium.return-btc.com\",\n    \"return-btc.com\",\n    \"trezor-official.link\",\n    \"giveaway-xrp.com\",\n    \"idex-market.pw\",\n    \"xn--polonex-cza.com\",\n    \"xcryptofunds.com\",\n    \"buy7000btc.online\",\n    \"idexmarket.pw\",\n    \"exodus-wallet.net\",\n    \"trezor-wallet.la\",\n    \"cometcrypt.com\",\n    \"ethmarket.store\",\n    \"btc-pro.co\",\n    \"platform-bitmex.com\",\n    \"constantinoplehardfork.cf\",\n    \"elon-gifting.website\",\n    \"tesla3.org\",\n    \"ethnocrypt.com\",\n    \"cashadd.org\",\n    \"exmo.in.ua\",\n    \"tesla-gift.space\",\n    \"idexx.pw\",\n    \"official-elon.space\",\n    \"idexmartk.net\",\n    \"airdrop-running.info\",\n    \"mybitcoinqrcode.com\",\n    \"client-tezbox.com\",\n    \"binance.bintestnet.com\",\n    \"bintestnet.com\",\n    \"ico-samsung.org\",\n    \"btcdaily.info\",\n    \"chance.services\",\n    \"biockchainn.com\",\n    \"supermining.website\",\n    \"binance-dex.cf\",\n    \"electrum.mx\",\n    \"l-jaxx.io\",\n    \"xn----itbjab7adkacocegb9etd2c.xn--p1ai\",\n    \"ripplegiveaway.net\",\n    \"i-dex.pw\",\n    \"bithomp.info\",\n    \"coinpromo.fund\",\n    \"bitcoin-btc-qr-code-generator.com\",\n    \"thundercore.space\",\n    \"xn--mrcatox-bya.com\",\n    \"trustswallet.xyz\",\n    \"electrum.la\",\n    \"idex.pw\",\n    \"btc-gift.com\",\n    \"bin-testnet.com\",\n    \"4-xrp.com\",\n    \"live-ethers.com\",\n    \"coinmining.website\",\n    \"coinpromo.icu\",\n    \"bithumb.cf\",\n    \"xrpbullish.blogspot.com\",\n    \"bitlhomp.com\",\n    \"ripple-infogiveaway.com\",\n    \"bonusmonthly.blogspot.com\",\n    \"dex-launch.net\",\n    \"xrp.earth\",\n    \"microtestdigitalagency.host\",\n    \"bitcoin-doubler.us\",\n    \"atomicwallet.tech\",\n    \"idex.cash\",\n    \"ripplebounty.blogspot.com\",\n    \"satoshilite.promo\",\n    \"bitmex-airdrop.com\",\n    \"localbitcoins-verify.com\",\n    \"coindecker.com\",\n    \"everex.cash.events-erc-20.com\",\n    \"events-erc-20.com\",\n    \"tokenstore.store\",\n    \"bountyxrp.blogspot.am\",\n    \"bountyxrp.blogspot.com\",\n    \"ico-matic.network\",\n    \"wallet-trezor.io-backup-online.info\",\n    \"io-backup-online.info\",\n    \"exoduswallet.io\",\n    \"matic.live\",\n    \"buterin-promo.info\",\n    \"ethgift.blogspot.com\",\n    \"binance.bilttly.com\",\n    \"bitlvy.com\",\n    \"binance.bitlvy.com\",\n    \"binance.bnbcryptofiat.com\",\n    \"bnbcryptofiat.com\",\n    \"xrp-ripple.org\",\n    \"idex.dev\",\n    \"get-ltc-now.online\",\n    \"hellogoldcontract.com\",\n    \"the-spectrumnetwork.com\",\n    \"paxfuiverify.info\",\n    \"besetchange.org.ru\",\n    \"blockchai-w.info\",\n    \"bestmixer.info\",\n    \"bin-dex.club\",\n    \"claim-token-dgtx.com\",\n    \"digitexfutures.com.claim-token-dgtx.com\",\n    \"dex-launch.com\",\n    \"dexbetalaunchcampaign.com\",\n    \"bitcoin-btc-adder.com\",\n    \"constantinopleplus.tech\",\n    \"tokensico.online\",\n    \"official-binance.space\",\n    \"rnuetherewallet.com\",\n    \"myeterewalliet.com\",\n    \"gruzovyespecavtovesy.online\",\n    \"gdax.us\",\n    \"hillstrade.net\",\n    \"decentralized-launch.com\",\n    \"binancebnb-dex.net\",\n    \"xn--lgin-blockchain-dl5h.com\",\n    \"xn--logn-blockchan-2lbk.com\",\n    \"blockchain-0158275.info\",\n    \"blockchain-0174628.info\",\n    \"blockchain-0182719.info\",\n    \"blockchain-0193765.info\",\n    \"blockchain-0289488.info\",\n    \"blockchain-10358.info\",\n    \"blockchain-1561.info\",\n    \"blockchain-199372.info\",\n    \"blockchain-401988.info\",\n    \"blockchain-901742.info\",\n    \"blockchain-918425.info\",\n    \"blockchain-9501.info\",\n    \"myetherwallet.com-eth.network\",\n    \"com-eth.network\",\n    \"bnb-launch.eu\",\n    \"electrum.bz\",\n    \"bnb-testnet.com\",\n    \"matic-network.com\",\n    \"fortunejack.cc\",\n    \"dex.binance.org.nz\",\n    \"binance.org.nz\",\n    \"rnyatharwellat.com\",\n    \"get-xlm-stellar.org\",\n    \"kartiy.com\",\n    \"dextestnet.com\",\n    \"drep-wallet.com\",\n    \"updatebinance.com\",\n    \"myetherwallet-admin.com\",\n    \"xn--myetherwalle-4k5f.com\",\n    \"xn--myetherwlet-3kb80f.com\",\n    \"blockchnain.info\",\n    \"blochchai.info\",\n    \"blochchaim.info\",\n    \"blocichain.com\",\n    \"blocickchain.com\",\n    \"bittrexi.online\",\n    \"xn--intenational-bittrex-65g.com\",\n    \"xn--intrnational-bittrex-yyg.com\",\n    \"blockholn.com\",\n    \"blockinchain.pl\",\n    \"bloclkchain.com\",\n    \"paxfulupdate.com\",\n    \"xn--bittrx-tva.com\",\n    \"xn--bttrex-b9a.com\",\n    \"https-blocckchain.com\",\n    \"yobit-wallet.com\",\n    \"hittbtc.net\",\n    \"rnyeatlerwaitet.com\",\n    \"backxcoin.com\",\n    \"admaeto.com\",\n    \"verify-bloch-chain.com\",\n    \"blockhchain.info\",\n    \"blokcihain.com\",\n    \"xn--blckchain-66a.com\",\n    \"verify-coinbase.com\",\n    \"blockchaiiin.com\",\n    \"coinbase.pro-xa.com\",\n    \"pro-xa.com\",\n    \"blockcihain.com\",\n    \"medium.wiki\",\n    \"ethers.today\",\n    \"bitcoinru-wallet.site\",\n    \"bitcoin24-wallet.site\",\n    \"bitcoin-walletru.site\",\n    \"blokhchian-wallet.xyz\",\n    \"bloclkchaln.online\",\n    \"blockchainwalletoffical.com\",\n    \"www---binance.com\",\n    \"xn--intrnational-bittrex-yuc.com\",\n    \"binance-testnet.net\",\n    \"myethervvallet.co.uk\",\n    \"paxful-es.com\",\n    \"xn--bittrx-7h8b.com\",\n    \"xn--bttrx-q51bme.com\",\n    \"blockchain-251.ru\",\n    \"blockchain-252.ru\",\n    \"blockchain-253.ru\",\n    \"blockchain-254.ru\",\n    \"blockchain-255.ru\",\n    \"blockchain-256.ru\",\n    \"blockchain-257.ru\",\n    \"blockchain-258.ru\",\n    \"blockchain-259.ru\",\n    \"blockchain-260.ru\",\n    \"xn--eectrum-9hb.org\",\n    \"xn--eletrum-45a.com\",\n    \"xn--internatinal-bittrex-4nh.com\",\n    \"xn--internatinal-bittrex-q86k.com\",\n    \"xn--internatonalbittrex-71c.com\",\n    \"gram.one\",\n    \"bittrexverifymeplease.com\",\n    \"interneational-bittrex.com\",\n    \"loginbittrex.com\",\n    \"myethervvallet.vip\",\n    \"xn--bittex-lkc.com\",\n    \"xn--btstamp-eeb.net\",\n    \"zollo.io\",\n    \"tde.zollo.io\",\n    \"zilliqablog.com\",\n    \"register.zollo.io\",\n    \"xn--nternational-bittrex-966k.com\",\n    \"hitbtc.com.pl\",\n    \"blcokchain.lloqin.com\",\n    \"lloqin.com\",\n    \"ldax.market\",\n    \"idexcorp.com\",\n    \"idexcorp.comgg.gg\",\n    \"investment2x.online\",\n    \"electrumsecuredownload.com\",\n    \"myetherwallet-claim.com\",\n    \"myetherwallet-claim.net\",\n    \"myetherwallet-claim.org\",\n    \"myethoverwalluet.site\",\n    \"myethsonemallvet.site\",\n    \"myethsonewallret.icu\",\n    \"myethschoolclass.pw\",\n    \"kucoin-activity.com\",\n    \"mtc-ico.online\",\n    \"ethereum2.online\",\n    \"cryptoempireinc.co\",\n    \"ripplebonus.blogspot.com\",\n    \"idexx.site\",\n    \"myethantiwallcafe.club\",\n    \"coinbase-getcrypto.890m.com\",\n    \"bithextrade.com\",\n    \"matic.work\",\n    \"xn--bttrx-y3a5604c.com\",\n    \"blockchain-130.ru\",\n    \"binance-testnet.host\",\n    \"binance-testnet.fun\",\n    \"binance-dextestnet.site\",\n    \"rnuathervatlet.com\",\n    \"myetherwallet-bonus.info\",\n    \"exodus-support.com\",\n    \"myetherwallet-bonus.net\",\n    \"myetherwallet-bonus.org\",\n    \"bitcoinru-org.site\",\n    \"coinapult-login.com\",\n    \"blogbibox.com\",\n    \"binance-testnet.com\",\n    \"earnfreebitcoins.org\",\n    \"myethyogawallclass.icu\",\n    \"wowx.io\",\n    \"coinbtcbot.com\",\n    \"catbot.ru\",\n    \"paraetherwallet.com\",\n    \"binancecz.blogspot.com\",\n    \"bttorent.com\",\n    \"xn--coinbse-en4c.com\",\n    \"your-btc.co.uk\",\n    \"cryptotis.com\",\n    \"btcldn.com\",\n    \"ildexmarket.info\",\n    \"bitcoin-gold-blockchain.info\",\n    \"international-bittrex-login.com\",\n    \"internation-bittrex.com\",\n    \"internatlonal-bittrex.com\",\n    \"international-bittrex-a.com\",\n    \"100x-mlt-btc.com\",\n    \"constantinopleplus.io\",\n    \"official-trezor.cc\",\n    \"usddex.io\",\n    \"mithril.pro\",\n    \"cryptoxfan.website\",\n    \"wbscoins.com\",\n    \"neotracker.me\",\n    \"gift-wallet-stellar.org\",\n    \"eth.elon-musk.space\",\n    \"btc.elon-musk.space\",\n    \"elon-musk.space\",\n    \"rnuathervaltet.com\",\n    \"rnyetherwaliet.com\",\n    \"celer.work\",\n    \"electrumproject.org\",\n    \"idex.money\",\n    \"celerc.network\",\n    \"kraken-com.ga\",\n    \"exoduswallet.online\",\n    \"bitcoinarmory.tech\",\n    \"celer.today\",\n    \"celer.site\",\n    \"coinbase-app.ga\",\n    \"ripplenet.limited\",\n    \"gram-network.org\",\n    \"xyogift.network\",\n    \"blockchein.lpgirn.com\",\n    \"lpgirn.com\",\n    \"thewayhere.accesshealthautism.com.au\",\n    \"hmqfoundation.com\",\n    \"onixcrypt.com\",\n    \"ldexmarket.pro\",\n    \"vintage-metherwallet.co\",\n    \"bitcoinvest.tech\",\n    \"bestcdanje.org.ru\",\n    \"kraken-login.ml\",\n    \"kraken-login.ga\",\n    \"gram-network.net\",\n    \"ethersale.online\",\n    \"huobiairdrop.com\",\n    \"get-gift-stellar.org\",\n    \"ethers-live.com\",\n    \"forexetoro.com\",\n    \"huobi-airdrop.org\",\n    \"huobiairdrop.co\",\n    \"electrumcircle.com\",\n    \"l-electrum.org\",\n    \"paxful-dashboard.com\",\n    \"paxfuluser.com\",\n    \"vlntage-myethereswallet.com\",\n    \"rmyetherewallet.com\",\n    \"idexxonline.com\",\n    \"mycrypto.kr\",\n    \"p-eos.io\",\n    \"btc24ex.pro\",\n    \"get-10000-xlm.org\",\n    \"blockckchain.info\",\n    \"gift-lumens-stellar.org\",\n    \"myelevenwallsen.site\",\n    \"dexlaunch-testnet.space\",\n    \"moyblogspor.blogspot.com\",\n    \"bounty-platform.website\",\n    \"celer.space\",\n    \"launchpad.celer.space\",\n    \"wallet.elitetreum.com\",\n    \"elitetreum.com\",\n    \"dogx.dog\",\n    \"cryptoxinvest.com\",\n    \"paxfulconfirmation.com\",\n    \"p-eos.one\",\n    \"idex.website\",\n    \"x-crypto.info\",\n    \"npxs.pro\",\n    \"ethereum-constantinople.com\",\n    \"gift7500xlm.org\",\n    \"azbit.org\",\n    \"bittorent.site\",\n    \"dex-binances.info\",\n    \"exodus-wallet.info\",\n    \"idexxmarket.website\",\n    \"locaibltcoins.ru\",\n    \"myethcwallet.com\",\n    \"myetherwallet-vintage.co\",\n    \"official-trezor.org\",\n    \"paxful-login.id\",\n    \"paxfulhelp.com\",\n    \"paxfultrade.ml\",\n    \"paxllful.com\",\n    \"vlntage-myetherewallet.com\",\n    \"xn--myeterwallt-nl8ey3e.com\",\n    \"xn--myetherwllt-jfe8916g.com\",\n    \"xn--myterwallet-ml8eq3e.com\",\n    \"ltcgiveaway.online\",\n    \"electrex.info\",\n    \"binance-bonus.online\",\n    \"binance-support.home.blog\",\n    \"binance.com1615873261.ga\",\n    \"binance.com1983762161.ml\",\n    \"binance.music.blog\",\n    \"binancecustomersupport18883023444.home.blog\",\n    \"binances.site\",\n    \"binancesupport.home.blog\",\n    \"cm-coinmaster.home.blog\",\n    \"coinbasexrp.blogspot.com\",\n    \"coinbaze.online\",\n    \"coinindex.tech\",\n    \"cpanel.myietherwallet.com\",\n    \"imageonline.ga\",\n    \"ldexmarket.site\",\n    \"licalbitcoins.org\",\n    \"localbitcoihs.ru\",\n    \"localbitcoind.icu\",\n    \"localbitcoind.mobi\",\n    \"localbitcoins-rus.ru\",\n    \"localbitcoinss.info\",\n    \"localbitconis.info\",\n    \"localbitcouins.mobi\",\n    \"localbitcouins.pro\",\n    \"localnitcoins.info\",\n    \"localvitcoins.info\",\n    \"locslbitcoins.icu\",\n    \"lokalbitcons.com\",\n    \"mail.bittrex1.com\",\n    \"myelhereswallet.com\",\n    \"myelherwalicet.com\",\n    \"myeterwollet.com\",\n    \"myethelwallet.com\",\n    \"myethermwallet.com\",\n    \"myietherwallet.com\",\n    \"mypaxful.com\",\n    \"paxful.gq\",\n    \"paxful.vip\",\n    \"paxfulsupports.com\",\n    \"paxfulverify.website\",\n    \"signin-coinbase.com\",\n    \"telosfundation.io\",\n    \"trezor-sale.com\",\n    \"trezor-shop.website\",\n    \"vintage-myetherewallet.com\",\n    \"vintage.myetherewallet.com\",\n    \"vintaqe-myetherewallet.com\",\n    \"xn--bance-3l1b03b.com\",\n    \"xn--myetherwalt-crb49b.com\",\n    \"xn--mytherwalle-jb9ey9a.com\",\n    \"binance-testnet.site\",\n    \"monero-rings.org\",\n    \"myxrmwallet.com\",\n    \"rnyuthewallet.xyz\",\n    \"heuvellandcatering.com\",\n    \"vlntage-myetherwallet.com\",\n    \"idex-market-com.info\",\n    \"binaripple.blogspot.com\",\n    \"binafeb.blogspot.com\",\n    \"fetchai.net\",\n    \"binance-support-number.com\",\n    \"httpsmyetherwallet.com\",\n    \"deltafork.app\",\n    \"yobitex-ru.net\",\n    \"paxfultrade.xyz\",\n    \"fetchai.eu\",\n    \"bitcoin-update.info\",\n    \"brad-promo.info\",\n    \"rnyuthevvallet.com\",\n    \"bttairdrop.com\",\n    \"electrum.org.uk\",\n    \"rnyuthevallet.xyz\",\n    \"fetch-ai.net\",\n    \"paxfull.ga\",\n    \"musk.center\",\n    \"telegram.systems\",\n    \"fetchai.co\",\n    \"fetchai.org\",\n    \"electrumhome.org\",\n    \"xn--myethewalt-zmb75bgl.com\",\n    \"vintaqe-myetherwallet.com\",\n    \"login-blockchaain.com\",\n    \"loqin-blockchain.com\",\n    \"loqin-blockchaln.com\",\n    \"vintagemyetherwallet.com\",\n    \"xn--medum-85a.com\",\n    \"rntherwallet.icu\",\n    \"myethrewallet.xyz\",\n    \"myetherwalletcom.xyz\",\n    \"myetherwalletcom.website\",\n    \"wwwmyetherwallet.shop\",\n    \"wwwmyetherwallet.icu\",\n    \"etherwallets.info\",\n    \"mydogechains.info\",\n    \"rntherwallet.xyz\",\n    \"xrpbinan.blogspot.com\",\n    \"musk.credit\",\n    \"musk.fyi\",\n    \"binanceee.blogspot.com\",\n    \"binanceee.blogspot.lt\",\n    \"binanceee.blogspot.com.mt\",\n    \"paxful.log-iin.com\",\n    \"log-iin.com\",\n    \"myehlerwal.com\",\n    \"atomcwallet.com\",\n    \"atomcwallet.club\",\n    \"atomswallet.co\",\n    \"atomswallet.me\",\n    \"atomswallet.org\",\n    \"atomcwallet.biz\",\n    \"bittrex-login.inter-cliente.online\",\n    \"inter-cliente.online\",\n    \"store-trezor.com\",\n    \"store-trezor.org\",\n    \"storetrezor.com\",\n    \"trezor-wallet.info\",\n    \"wallet-trezor.info\",\n    \"trezor-shops.com\",\n    \"wallets-trezor.ltd\",\n    \"store-trezor.eu\",\n    \"myelhitorwailct.com\",\n    \"vintage-myethereswallet.com\",\n    \"bitcoin-mixer.tk\",\n    \"46.226.108.171\",\n    \"bancor.network.sign-in-by-wallet.event-distributors.com\",\n    \"bancor.network.sign-in-by-wallet.members-gift.com\",\n    \"blogbinanc.blogspot.com\",\n    \"coinbase.com-9da7a204-544e-53d1-9a12-61176c4d4cd8.site\",\n    \"coinbase.com-9da7a204-544e-5fd1-9a12-61176c5d4cd8.com\",\n    \"coinbase.com-9da7a204-544e-63d1-4a12-61176c4d4cd8.site\",\n    \"coinbase.com-9da7a204-544e-63d1-4a12-61176c4d4cd8.su\",\n    \"coinbasebitbank.com\",\n    \"coinbasehelpdesk.com\",\n    \"coindesk.link.16640.aqq.ru\",\n    \"coindesk.name.16640.aqq.ru\",\n    \"coindeskjapan.net\",\n    \"coinlbase.com-7da7a204-744e-63d1-64b12-61176c4d4cd7.site\",\n    \"coinlbase.space\",\n    \"cojnbase.com\",\n    \"dexlaunch-binance.com\",\n    \"trezor-wallet.shop\",\n    \"idex-market-com.com\",\n    \"idexmarket.pro\",\n    \"idexmarket.store\",\n    \"indadax.com\",\n    \"ipaxful.us\",\n    \"kyber.network.sign-in.user-bonus-tokens.com\",\n    \"lacalbitcoins.ru\",\n    \"lcalbitcoins.ru\",\n    \"licalbitcoins.ru\",\n    \"loalbitcoins.ru\",\n    \"localbicoins.com\",\n    \"localbircoins.ru\",\n    \"localbitcoim.com\",\n    \"localbitcoims.pro\",\n    \"localbitcoin.com.paxfulreport.online\",\n    \"localbitcoina.ru\",\n    \"localbitcoind.ru\",\n    \"localbitcoins.technology.16640.aqq.ru\",\n    \"localbitcouins.ru\",\n    \"localbitcouns.ru\",\n    \"localbiticoins.com\",\n    \"localbitocin.com\",\n    \"localethereum.biz.16640.aqq.ru\",\n    \"localethereum.cc.16640.aqq.ru\",\n    \"localethereum.club.16640.aqq.ru\",\n    \"localethereum.co.16640.aqq.ru\",\n    \"localethereum.company.16640.aqq.ru\",\n    \"localethereum.me.16640.aqq.ru\",\n    \"localethereum.name.16640.aqq.ru\",\n    \"localethereum.technology.16640.aqq.ru\",\n    \"localethereum.today.16640.aqq.ru\",\n    \"localibitcons.com\",\n    \"localnitcoins.ru\",\n    \"localvitcoins.ru\",\n    \"locialbitcoins.com\",\n    \"locoibitcoin.com\",\n    \"locslbitcoins.pro\",\n    \"loculbitcoins.com\",\n    \"lokalbitcoin.net\",\n    \"lokalbitcoin.top\",\n    \"lokalbitkoins.com\",\n    \"lovalbitcoins.ru\",\n    \"loxalbitcoin.com\",\n    \"my.paxfulcheck.xyz\",\n    \"myathereswallet.com\",\n    \"myatherewallet.com\",\n    \"myehterwoailet.com\",\n    \"myelherevallet.com\",\n    \"myelherewallet.com\",\n    \"myelherswaltet.com\",\n    \"myelherwaflet.com\",\n    \"myelherwalfet.com\",\n    \"myelherwaltet.com\",\n    \"myelherwollet.com\",\n    \"myesererwallet.com\",\n    \"myetherecvallet.com\",\n    \"myetherecwallet.com\",\n    \"myetherewaiiet.com\",\n    \"myetherewallef.com\",\n    \"myetherewaltyt.com\",\n    \"myetheruomwallet.com\",\n    \"myetherwalet.ru\",\n    \"myetherwalets.ru\",\n    \"myetherwallet-payment.com\",\n    \"myetherwallet.com-7da3a790-214a-51c7-14g19-87531g0f4co9.site\",\n    \"myetherwallet.com-7da3a790-214u-23c1-14a19-87536g0f4ca1.site\",\n    \"myetherwallet.com-7da3a890-214u-23c1-14a19-87536g0f4cc3.site\",\n    \"myetherwallet.com-7da3a890-214u-23c1-14a19-87536g0f4ce5.site\",\n    \"myetherwallet.com-7da3a890-214u-23c1-14a19-87536g0f4cf6.site\",\n    \"myetherwallet.com-7da3a890-214u-23c1-14a19-87536g0f4cg7.site\",\n    \"myetherwallet.com.ether-send.info\",\n    \"myetherwallet.com.ether-transactions.info\",\n    \"myetherwallet.com.ethers-transaction.info\",\n    \"myetherwallet.com.node-ethereum.info\",\n    \"myetherwallet.com.sen-transaction.info\",\n    \"myetherwallets.ru\",\n    \"myetherweltet.com\",\n    \"myethewaliet-login.site\",\n    \"myethrernwallet.com\",\n    \"myetllerwallet.com\",\n    \"myetnerwalet.ru\",\n    \"myetnerwallet.com.load-transaction.info\",\n    \"myetnerwallet.com.seth-transaction.info\",\n    \"myetnerwallets.ru\",\n    \"myetserwallet.com\",\n    \"myiethereswallet.com\",\n    \"mythetawallet.com\",\n    \"ocalbitcoins.ru\",\n    \"paxful.com.loolic.ga\",\n    \"paxfulcheck.xyz\",\n    \"paxfulreport.online\",\n    \"paxfulreverify.com\",\n    \"paxfulverify.online\",\n    \"remitano.trade\",\n    \"rnuetherwallet.com\",\n    \"rnyethereurnwallet.com\",\n    \"rnyethrewallet.com\",\n    \"shop-trezor.info\",\n    \"trezor-ship.biz\",\n    \"trezor-shop.biz\",\n    \"trezor-wallet.eu\",\n    \"trezor-wallet.live\",\n    \"trustwallet.com.erc-20-gift.com\",\n    \"vvww-coinbase.com\",\n    \"vww-coinbase.com\",\n    \"vww.myetnerwallet.com.node-send.info\",\n    \"wallets-trezor.eu\",\n    \"wallets-trezor.org\",\n    \"wvw-coinbase.com\",\n    \"www-ldex.market\",\n    \"xn--conbase-hza.com\",\n    \"xn--medum-g81b.com\",\n    \"xn--myetherwllet-ncb.com.status-send.info\",\n    \"xn--myetherwllt-3kb0v.com\",\n    \"xn--myetherwllt-3kb8699g.com\",\n    \"xn--pxful-93b.com\",\n    \"xn--trezor-wllet-59a.com\",\n    \"rnuethervvallet.com\",\n    \"electrumupdate.com\",\n    \"electrumweb.net\",\n    \"vintage-myetherwallet.com\",\n    \"wedderbergen.com\",\n    \"myetherwallet.com.access-wallet.info\",\n    \"access-wallet.info\",\n    \"electrumfix.com\",\n    \"electrumsource.org\",\n    \"bltaddress.org\",\n    \"cryptoxcash.com\",\n    \"cryptonback.com\",\n    \"binannn.blogspot.com\",\n    \"binanxrp.blogspot.com\",\n    \"unfreeze-paxful.com\",\n    \"rnuetharwallet.com\",\n    \"bintrx.blogspot.com\",\n    \"bin-ance.blogspot.com.tr\",\n    \"binaxrp.blogspot.com\",\n    \"itubeonline.com\",\n    \"enjin.pro\",\n    \"tronxwallet.com\",\n    \"tronxcash.com\",\n    \"electrumupgrade.org\",\n    \"wwwmycrypto.com\",\n    \"coindesk.me.16640.aqq.ru\",\n    \"electrumdownload.com\",\n    \"ldexmarket.com\",\n    \"bittrex-m.com\",\n    \"rnuathervvalfet.com\",\n    \"spacex.promo\",\n    \"paxful.com.ru\",\n    \"electrumbase.com\",\n    \"electrumcore.net\",\n    \"electrumapps.com\",\n    \"xn--blckchin-eza9o.com\",\n    \"idexxmarket.site\",\n    \"idexmarkt.store\",\n    \"get2802lumens.online\",\n    \"electrumofficial.com\",\n    \"privatstuff.store\",\n    \"ttrxtrx.blogspot.com\",\n    \"xrpxrp.blogspot.com\",\n    \"ldex-market.pro\",\n    \"bittorrent.pro\",\n    \"doublebitcoin.io\",\n    \"lucalbltcoins.com\",\n    \"xn--hitbt-8xa.com\",\n    \"idexmarket.space\",\n    \"bakktplatform.io\",\n    \"btcdev.us\",\n    \"myetherwallet.com-7da3a890-214u-23c1-14a19-87536g0f4cd4.site\",\n    \"myetherwallet.com-7da3a890-214u-23c1-14a19-87536g0f4cb2.site\",\n    \"bittorrent.foundation\",\n    \"getfree-neo.blogspot.my\",\n    \"getfree-neo.blogspot.com\",\n    \"binjerseygbpeur.com\",\n    \"get-freecrypto.blogspot.com\",\n    \"eth4free.com\",\n    \"giveaway-x.blogspot.com\",\n    \"etherchange.tech\",\n    \"claim-xyotokens.com\",\n    \"bitcoin4future.club\",\n    \"dexbetalaunch.com\",\n    \"airdropxneo.blogspot.com\",\n    \"myetheresswallet.com\",\n    \"bitaeon.top\",\n    \"btrmartgve.com\",\n    \"stellar-lightning.org\",\n    \"xllwallet.com\",\n    \"idexmarket.website\",\n    \"cryptoexcoins.com\",\n    \"bitcoin-generator.network\",\n    \"ethtokens.store\",\n    \"xn--bttorrent-54a.com\",\n    \"btcaim.com\",\n    \"bizzilion.com\",\n    \"seth-transaction.info\",\n    \"cryptocreditfoundation.com\",\n    \"circlemix.io\",\n    \"jancrypto.blogspot.com\",\n    \"wallet-support.com\",\n    \"airdropxrp.blogspot.com\",\n    \"cryptoback.top\",\n    \"cryptogene.net\",\n    \"buteringift.com\",\n    \"quick2xbtc.com\",\n    \"doublecrypto.ml\",\n    \"doubleinvestment.cf\",\n    \"doublebitco.in\",\n    \"bitcoin-pro.club\",\n    \"idexgroup.online\",\n    \"bttpromotion.github.io\",\n    \"telos-foundation.io\",\n    \"binancegive.com\",\n    \"ethereum-advanced.com\",\n    \"investmentdoubler.online\",\n    \"bttpromo.github.io\",\n    \"bittorrentpromo.github.io\",\n    \"binancedexg.com\",\n    \"isecurecoinbase.live\",\n    \"meyhterwailet.com\",\n    \"mycfherwallet.com\",\n    \"myctherwailet.com\",\n    \"myctherwalet.com\",\n    \"myefhervvailet.com\",\n    \"myefhervvaliet.com\",\n    \"myefhervvellet.com\",\n    \"myefherwalet.com\",\n    \"myefherwellet.com\",\n    \"myefterwallet.com\",\n    \"myehtervvallet.com\",\n    \"myetfervvallet.com\",\n    \"myetfervvellet.com\",\n    \"myetferwaillet.com\",\n    \"myethervellet.com\",\n    \"myethervvallct.com\",\n    \"myethervveilet.com\",\n    \"myethervveliet.com\",\n    \"myethervvellet.org\",\n    \"myetherwalfet.com\",\n    \"myetherwallet.com.ether-transaction.info\",\n    \"myetherweilet.com\",\n    \"myetherweliet.com\",\n    \"myetherwellct.com\",\n    \"myethrwallet.ru\",\n    \"myetnerwallet.ru\",\n    \"mythervvallet.com\",\n    \"paxful.ml\",\n    \"www-paxful.com\",\n    \"xn--dx-qbb4240a.market\",\n    \"xn--myethrwllet-q7a1340h.com\",\n    \"xn--trzor-7za.net\",\n    \"xn--trzor-csa.com\",\n    \"toke.online\",\n    \"binancexrpjan.blogspot.com\",\n    \"ethercontest.com\",\n    \"escobarsbr.com\",\n    \"myesereswallet.com\",\n    \"myeromahousit.com\",\n    \"binancegiveaways.com\",\n    \"eloncity.sale\",\n    \"mana-gift.com\",\n    \"digitexfutures.site\",\n    \"localbitcoins.com.support-ticket-report.com\",\n    \"paxful.co.in\",\n    \"paxfulwallets.com\",\n    \"trezor-official.org\",\n    \"xn--myetherwalt-15b4719g.com\",\n    \"xn--myetherwalt-o4b6229g.com\",\n    \"xn--myetherwat-mybx6229g.com\",\n    \"xn--mythrwllet-jj3enkc.com\",\n    \"localbltcoins.com\",\n    \"meytherwalet.com\",\n    \"myctherwallet.icu\",\n    \"myetherwallet.com.et-transaction.info\",\n    \"myetherwallet.com.send-etransaction.info\",\n    \"myetherwallet.com.view-chain.info\",\n    \"myetherwattet.com\",\n    \"paxful.to\",\n    \"paxfull.club\",\n    \"support-ticket-report.com\",\n    \"localethereum.com.support-ticket-report.com\",\n    \"doublebitcoin.cc\",\n    \"double2btc.top\",\n    \"trondiscount.com\",\n    \"hydrowallet.io\",\n    \"ltcpro.live\",\n    \"ltcgiveaway.com\",\n    \"ltcpro.xyz\",\n    \"dexchainlaunchpad.com\",\n    \"ethgws.com\",\n    \"xpro.icu\",\n    \"airdropcampaign.com\",\n    \"bttlaunchpad.com\",\n    \"client-wavesx.com\",\n    \"btc-promo.net\",\n    \"waves-x.com\",\n    \"etcv-wallet.co\",\n    \"faceusd.com\",\n    \"tokenshops.online\",\n    \"janbinancexrp.blogspot.com\",\n    \"janbinance.blogspot.com\",\n    \"coinbit24.site\",\n    \"idex-market.live\",\n    \"x10eth.com\",\n    \"betabindex.com\",\n    \"bitmrtpro.com\",\n    \"bonus-stellarterm.com\",\n    \"coinbvse.com\",\n    \"dex-hbiglobal.info\",\n    \"xn--wvww-krakn-5q3e.com\",\n    \"bancor.network.xbancor.online\",\n    \"binancegift.online\",\n    \"bitcoincoinbase.top\",\n    \"coimbase.top\",\n    \"coinbase-airdrop.xyz\",\n    \"coinbase-btc.top\",\n    \"coinbase-btcairdrop.top\",\n    \"coinbase-competition.top\",\n    \"coinbase-crypto.top\",\n    \"coinbase-give.top\",\n    \"coinbase-gives.top\",\n    \"coinbase-prize.top\",\n    \"coinbase.army\",\n    \"coinbaseair.coinbaseairdrops.info\",\n    \"coinbaseair.info\",\n    \"coinbasebitcoin.coinbaseairdrops.info\",\n    \"coinbasebtcairdrop.coinbaseairdrops.info\",\n    \"coinbasebtcairdrop.info\",\n    \"coinbasebtcdrop.coinbaseairdrops.info\",\n    \"coinbased.top\",\n    \"coinbased.xyz\",\n    \"coinbasedex.top\",\n    \"coinbasedexdrop.coinbaseairdrops.info\",\n    \"coinbasedexx.coinbaseairdrops.info\",\n    \"coinbasedx.coinbaseairdrops.info\",\n    \"coinbasee.coinbaseairdrops.info\",\n    \"coinbasee.info\",\n    \"coinbaseio.top\",\n    \"coinbaserx.coinbaseairdrops.info\",\n    \"coinbaserx.top\",\n    \"coinbasevert.network\",\n    \"coinbasevertnetwork.coinbaseairdrops.info\",\n    \"coinbasex.top\",\n    \"coinbasexx.coinbaseairdrops.info\",\n    \"colnbase.top\",\n    \"cpanel.bitcoincoinbase.top\",\n    \"cpanel.coinbase-airdrop.top\",\n    \"cpanel.coinbase-airdrop.xyz\",\n    \"cpanel.coinbase-btc.top\",\n    \"cpanel.coinbase-btc.xyz\",\n    \"cpanel.coinbase-btcairdrop.top\",\n    \"cpanel.coinbase-competition.top\",\n    \"cpanel.coinbase-crypto.top\",\n    \"cpanel.coinbase-give.top\",\n    \"cpanel.coinbase-gives.top\",\n    \"cpanel.coinbase-prize.top\",\n    \"cpanel.coinbaseair.info\",\n    \"cpanel.coinbaseairdrops.info\",\n    \"cpanel.coinbasebtcairdrop.info\",\n    \"cpanel.coinbasebtcdrop.info\",\n    \"cpanel.coinbasecampaign.online\",\n    \"cpanel.coinbased.top\",\n    \"cpanel.coinbased.xyz\",\n    \"cpanel.coinbasedex.top\",\n    \"cpanel.coinbasedexdrop.info\",\n    \"cpanel.coinbasedexio.online\",\n    \"cpanel.coinbasee.info\",\n    \"cpanel.coinbasegiveaway.online\",\n    \"cpanel.coinbasegives.top\",\n    \"cpanel.coinbaseio.top\",\n    \"cpanel.coinbaserx.top\",\n    \"cpanel.coinbasex.top\",\n    \"cpanel.myetherwallet-dec.space\",\n    \"lccalbtlcoins.com\",\n    \"mail.coinbase.army\",\n    \"myetherwallet-ye.space\",\n    \"xn--myethrwalt-zxb6271g.com\",\n    \"xn--mytherwllt-kj3emkia.com\",\n    \"idex-market.website\",\n    \"forkdelta.space\",\n    \"big-gift.ga\",\n    \"doubleinvest.online\",\n    \"ebitservices.com\",\n    \"btcexcelinvest.com\",\n    \"electrum.one\",\n    \"e-xodus.com\",\n    \"myetcvwallet.com\",\n    \"wallet.hydroproject.io\",\n    \"hydroprotocol.tech\",\n    \"etcv-wallet.com\",\n    \"tesla-promo.tech\",\n    \"binancejan.blogspot.com\",\n    \"ethereumcv.io\",\n    \"ethereumcv.info\",\n    \"ethnowawallet.com\",\n    \"myetherwallet-dfz.space\",\n    \"sdf34myetherwallet.site\",\n    \"wallet.bancor.network.xbancor.online\",\n    \"xbancor.online\",\n    \"23423myetherwallet.site\",\n    \"33333myetherwallet.site\",\n    \"44332myetherwallet.site\",\n    \"binancepromo.com\",\n    \"coinbase-airdrop.com\",\n    \"jhfjmyetherwallet.site\",\n    \"bitmartpro.live\",\n    \"etcvwallet.com\",\n    \"coinibase.pro\",\n    \"myetherwallet-ne.space\",\n    \"trezor-sales.online\",\n    \"karatbars-affiliate-bonus.com\",\n    \"idex.ru.com\",\n    \"2fa-myetherwallet.com\",\n    \"blocktower.info\",\n    \"myetherwallet-eb.space\",\n    \"trezor-shop.org\",\n    \"hydroproject.io\",\n    \"rnyetherwallet.site\",\n    \"xn--mythrwllt-576dqjcf.com\",\n    \"en.coinbase-coupon.com\",\n    \"localbiitcoinz.club\",\n    \"myethereswallet.com\",\n    \"myethreiwallet.com\",\n    \"online-localbitcoins-th.co\",\n    \"test.tdstraf.ru\",\n    \"vwww-coinbase.com\",\n    \"xn--binnce-dh8b.com\",\n    \"xn--bnnce-c51bsf.com\",\n    \"xn--vww-krakn-2f7d.com\",\n    \"xn--wvw-krakn-2f7d.com\",\n    \"gowincoin.com\",\n    \"delta.money\",\n    \"coinsupergive.live\",\n    \"ethers-claim.com\",\n    \"binanceevent.net\",\n    \"huobilive.icu\",\n    \"cryptocashback.org\",\n    \"cryptocashback.info\",\n    \"cryptoback.one\",\n    \"newyearcrypto.blogspot.com\",\n    \"newyearneo.blogspot.com\",\n    \"cryptobridge.su\",\n    \"xrp-giveaway.com\",\n    \"biboxpr.icu\",\n    \"myetheresvallet.com\",\n    \"paxfu1.com.mx\",\n    \"paxfui.com\",\n    \"paxful-pp.com\",\n    \"xn--coinbas-xs4c.com\",\n    \"xn--myethrwllt-kj3epkf.com\",\n    \"com-1a7d1kf3i5786dghba88.site\",\n    \"coinbasegiveaway.info\",\n    \"coinbasegiveaway.online\",\n    \"ethnowa-wallet.com\",\n    \"crystal-profit.com\",\n    \"bancor.store\",\n    \"binance-competition.info\",\n    \"binancel.ru\",\n    \"bithumbs.com\",\n    \"coinlbase.coinbase.cloud\",\n    \"lccalbltcoins.com\",\n    \"myetherevvallet.com\",\n    \"myetlnerwallet.com\",\n    \"posmyetherwallet.com\",\n    \"rnythervvallet.com\",\n    \"xn--coinbse-ixa.com\",\n    \"xn--wvw-krken-576d.com\",\n    \"xn--wwv-krken-576d.com\",\n    \"cash-bitcoin.online\",\n    \"yobitex.info\",\n    \"yobit-admin.net\",\n    \"yobit--net.com\",\n    \"supportyobit.net\",\n    \"xn--ybit-gra.net\",\n    \"xn--yobt-sya.net\",\n    \"bankcor.network\",\n    \"bankor.network\",\n    \"binance-tr.com\",\n    \"binancebch.com\",\n    \"coinbasecanada.com\",\n    \"coinbasegives.top\",\n    \"coinbaseofficials.com\",\n    \"https-trezor.com\",\n    \"localbtlcoins.com\",\n    \"trezor.site\",\n    \"xn--bitfinx-v9a.com\",\n    \"xn--bitrex-rkb.com\",\n    \"xn--vww-krken-576d.com\",\n    \"xn--www-kaken-u0b.com\",\n    \"xn--www-krake-3vb.com\",\n    \"xn--www-krakn-2f7d.com\",\n    \"xn--www-krken-576d.com\",\n    \"binance-competition.net\",\n    \"excdus.org\",\n    \"xn--myethrwalt-yxb2271gfa.com\",\n    \"giveawayxneo.blogspot.com\",\n    \"ethtokens.online\",\n    \"okexpro.icu\",\n    \"poetairdrop.com\",\n    \"coinbankatm.com\",\n    \"coinbasedex.online\",\n    \"coinsbankcom.com\",\n    \"form-coinbase.com\",\n    \"kraken.fr\",\n    \"mercoatox.com\",\n    \"mwww-kraken.com\",\n    \"myetherwallel.pro\",\n    \"poloniexbch.com\",\n    \"swww-kraken.com\",\n    \"coinbase-airdrop.top\",\n    \"coinbase-btc.xyz\",\n    \"kucoindectrx.blogspot.com\",\n    \"jaxx.im\",\n    \"jaxx.ru.com\",\n    \"coinbasedexio.online\",\n    \"myetherwallet-ico.space\",\n    \"myetherwallet-xo.space\",\n    \"myetherwellet.cc\",\n    \"trezor.ltd\",\n    \"user.paxfulreports.com\",\n    \"crypto-positive.club\",\n    \"erc-20-tokens-gift.com\",\n    \"trustwallet.com.erc-20-tokens-gift.com\",\n    \"binance-dex.pro\",\n    \"binance.bid\",\n    \"binancebtc.com\",\n    \"binancecashback.com\",\n    \"binancemobile.app\",\n    \"medlum.org\",\n    \"trezor.vozp.cz\",\n    \"xn--myethrwalet-92b.com\",\n    \"xn--myethrwalt-yxb7271g.com\",\n    \"xn--myethrwlet-xxb7341g.com\",\n    \"binance.fit\",\n    \"coinbasebonus.org\",\n    \"coinbasediscount.com\",\n    \"localbitcoins.vip\",\n    \"myetherwallet.ilogirn.com\",\n    \"trezor-wallet.online\",\n    \"xn--myeerwallet-vic8676g.com\",\n    \"bittlrex.com\",\n    \"xn--binnce-rhc.com\",\n    \"binance.exchange2018.support\",\n    \"exchange2018.support\",\n    \"binancehelpdesk.com\",\n    \"binancetwofactorauthentication.com\",\n    \"pumapay.io.giveaway-user.com\",\n    \"ether-contest.com\",\n    \"dex-huobiglo.info\",\n    \"xn--myetherllet-hoc47z.com\",\n    \"xn--myethewllet-hdc193a.com\",\n    \"airgiveaway.typeform.com\",\n    \"bitcashsv.org\",\n    \"bitlry.info\",\n    \"coinbasse.com198637829761.ml\",\n    \"myethevvallel.com\",\n    \"myetnerwalel.com\",\n    \"xn--myeterwalle-wc9exr.com\",\n    \"xn--pxful-j11b.com\",\n    \"etherdelta.pro\",\n    \"quarkairdrop.com\",\n    \"crypterium.site\",\n    \"bittfinex.com\",\n    \"bittrex.mobi\",\n    \"bittrexbtc.com\",\n    \"bonus-coinbase.com\",\n    \"coinbase-giveaway.com\",\n    \"coinbaseearn.com\",\n    \"krakenonline.com\",\n    \"coinbasedexdrop.info\",\n    \"coinbebase.com\",\n    \"localbitcoins-info.ru\",\n    \"localbitcoins-ru.ru\",\n    \"muyetherwaliet.com\",\n    \"myelherwaliet.com\",\n    \"myetherevallet.com\",\n    \"myetherwallet.lcgirn.com\",\n    \"myethevalet.com\",\n    \"trezor-wallet.net\",\n    \"xn--hobi-08a.com\",\n    \"xn--huob-tpa.com\",\n    \"xn--myetherwat-zxba7729g.com\",\n    \"xn--myethrwalet-92b3729g.com\",\n    \"xn--mytherwalet-3qb20c.com\",\n    \"xn--mythrwalet-xxb0271g.com\",\n    \"xn--yeterwalle-ue2e3nrs.com\",\n    \"support-coinbase.info\",\n    \"meduim.online\",\n    \"myeltherwaliet.com\",\n    \"myetherwallet-tgt.space\",\n    \"binance.com.au\",\n    \"bitbankmoney.com\",\n    \"bithumbjapan.com\",\n    \"bithumbus.com\",\n    \"ckraken.com\",\n    \"coinbasebtcdrop.info\",\n    \"coindesk.vip\",\n    \"huobipro.tk\",\n    \"indodcx.com\",\n    \"xn--myethrwalt-zxb1271gfa.com\",\n    \"xn--eoscorearbitratio-l6c.io\",\n    \"basicattentiontoken.website\",\n    \"myetherwallet.96.lt\",\n    \"dec-kucoin.blogspot.com\",\n    \"trx-kucoin.blogspot.com\",\n    \"neo-kucoin.blogspot.com\",\n    \"cryptobountymco.com\",\n    \"tokensic.online\",\n    \"encrypex.online\",\n    \"myetherwallet.890m.com\",\n    \"freebitcobot.top\",\n    \"biftinex.com\",\n    \"binance-beta.info\",\n    \"binance.bnblaunch.com\",\n    \"bithumbloan.com\",\n    \"bittrex.com158987679.ga\",\n    \"coinbaseairdrops.info\",\n    \"iwww-kraken.com\",\n    \"kraken.world\",\n    \"localbitcoins.cash\",\n    \"localbitlcoins.com\",\n    \"msetherwallet.com\",\n    \"mycrypto.faith\",\n    \"myetheswaiiet.info\",\n    \"myethevvallet.biz\",\n    \"myethevvallet.org\",\n    \"myethevwallet.org\",\n    \"myietherwallet.pro\",\n    \"paxfulusers.com\",\n    \"pr-hitbtc.com\",\n    \"trezor-wallets.net\",\n    \"wvvw-kraken.com\",\n    \"wwvv-kraken.com\",\n    \"wwwbittrex.com\",\n    \"xn--hubi-hx5a.com\",\n    \"xn--hubi-w0b.com\",\n    \"xn--idx-lra.market\",\n    \"xn--myetherwalt-c3b7729g.com\",\n    \"xn--myethrwalet-b3b2729g.com\",\n    \"binancedexairdrop.net\",\n    \"giveaway2018.org\",\n    \"bullrun2018.com\",\n    \"doublecoinio.jdevcloud.com\",\n    \"mediium.org\",\n    \"myetherwallet-be.space\",\n    \"binance-dexbeta.net\",\n    \"bittrex-rf.com\",\n    \"bittrex-rx.com\",\n    \"coinbase-zendesk.com\",\n    \"coinbasedexnews.info\",\n    \"coinbasehub.com\",\n    \"coinbaseth.info\",\n    \"mycryptoa.gq\",\n    \"myetervallient.info\",\n    \"myethirwalde.info\",\n    \"trezor-wallets.org\",\n    \"vwv-kraken.com\",\n    \"vwvw-kraken.com\",\n    \"wvww-kraken.com\",\n    \"xn--kaken-17b.com\",\n    \"xn--kaken-e8b.com\",\n    \"xn--krakn-25b.com\",\n    \"xn--krakn-8cc.com\",\n    \"xn--krakn-f6b.com\",\n    \"coinbase.pro-xca.com\",\n    \"pro-xca.com\",\n    \"awx-ly.store\",\n    \"binance-dex.life\",\n    \"binance-dex.live\",\n    \"binance-dexonline.info\",\n    \"binance.fan\",\n    \"binancedexbeta.com\",\n    \"bit-thumb.com\",\n    \"coinbasedexx.info\",\n    \"kraken.vip\",\n    \"localbatcoins.com\",\n    \"localbcoins.ru\",\n    \"localbikcoins.com\",\n    \"localbimcoins.com\",\n    \"localbitcains.com\",\n    \"localbitcoims.info\",\n    \"localbitcoin.cash\",\n    \"localbitcoines.info\",\n    \"localbitcolins.info\",\n    \"localbitloins.com\",\n    \"localbitscoins.info\",\n    \"localsitcoins.com\",\n    \"locslbitcoins.info\",\n    \"lojalbitcoins.com\",\n    \"lokalbitcoin.info\",\n    \"metamaskhelp.com\",\n    \"myethdwalliet.info\",\n    \"myetherwellet.info\",\n    \"myethieswallep.info\",\n    \"myethlerwalliet.info\",\n    \"myethrwaillet.info\",\n    \"poloniex.cloud\",\n    \"poloniexs.com\",\n    \"shop-trezor.io\",\n    \"stcoinbase.com\",\n    \"trezor-wallets.store\",\n    \"tupbit.com\",\n    \"wwvw-kraken.com\",\n    \"xn--conbas-xva87a.com\",\n    \"xn--myetherwalt-b3b4039g.com\",\n    \"coinbase.prows-ax.com\",\n    \"prows-ax.com\",\n    \"otx-ca.com\",\n    \"av-za.com\",\n    \"cla-pro.com\",\n    \"bitcointoolmining.com\",\n    \"idexethereum.online\",\n    \"bbxotc.tech\",\n    \"btc-gifts.net\",\n    \"biitfiinex.com\",\n    \"binance-dexbounty.info\",\n    \"binance-download.com\",\n    \"binancebtcairdrop.net\",\n    \"bitbank.fund\",\n    \"bittrexx.win\",\n    \"careerbittrex.com\",\n    \"coinbase-ripple.org\",\n    \"coinbase-vip.com\",\n    \"coinbaseairdrop.com\",\n    \"coinbaseairdrop.info\",\n    \"coinbasecash.com\",\n    \"coinbasedex.info\",\n    \"coinmarketcap.ovh\",\n    \"hitbtc.se\",\n    \"international-binance.com\",\n    \"international.bittrex.com781236781.gq\",\n    \"krakezn.com\",\n    \"locambitcoins.com\",\n    \"lohalbitcoins.com\",\n    \"lolalbitcoins.com\",\n    \"meythermallet.com\",\n    \"mycthcrwallct.com\",\n    \"myehtcrwallct.com\",\n    \"myehtervvaillet.com\",\n    \"myethernwallet.info\",\n    \"myetherswajllet.info\",\n    \"myetherwallet-es.space\",\n    \"myetherwallet-get.space\",\n    \"myetherwalletl.info\",\n    \"myetherwolet.com\",\n    \"myethrenwallet.com\",\n    \"myethwallet.info\",\n    \"myetlherwallet.online\",\n    \"myetrhewallet.com\",\n    \"paxful.co\",\n    \"polonlex.com\",\n    \"vww-kraken.com\",\n    \"webimage.ml\",\n    \"wwv-kraken.com\",\n    \"www-coinsbank.com\",\n    \"wwwhuobi.pro\",\n    \"xn--huob-yw5a.com\",\n    \"xn--krke-moa40d.com\",\n    \"xn--krken-4qa.com\",\n    \"xn--krken-c51b.com\",\n    \"xn--krken-n41b.com\",\n    \"xn--krkn-6na9c.com\",\n    \"xn--methrwllet-umb0681g94a.com\",\n    \"xn--myethewallet-9d5f.com\",\n    \"xn--rezor-q9b.com\",\n    \"xn--trzor-7za.com\",\n    \"xn--trzor-vza.com\",\n    \"xn--uphld-wob.com\",\n    \"xn--bibo-eo5a.com\",\n    \"paxfulldashboard.com\",\n    \"info.paxfulverify.com\",\n    \"paxfulverify.com\",\n    \"myetherwallet-xyo.space\",\n    \"view-statys.info\",\n    \"xn--myetherwllet-59a.com.view-statys.info\",\n    \"myethwalchellet.site\",\n    \"applyer.info\",\n    \"xn--pxful-3qa.com\",\n    \"tronkucoin.blogspot.com\",\n    \"huobiglo.com\",\n    \"cryptokucoin.blogspot.com\",\n    \"neokucoin.blogspot.com\",\n    \"blockchain-update.bounceme.net\",\n    \"coinbene.net\",\n    \"hitbtcwalet.com\",\n    \"musk.claims\",\n    \"spacex.gives\",\n    \"musk.click\",\n    \"ethnew.store\",\n    \"coinbase.pro-cax.com\",\n    \"pro-cax.com\",\n    \"cbs-pro.com\",\n    \"txa-aso.com\",\n    \"zas-pro.com\",\n    \"blockchiarn.net\",\n    \"poloniexneo.blogspot.com\",\n    \"binance.eth-win.com\",\n    \"eth-win.com\",\n    \"huobiglob.live\",\n    \"mediumpost.top\",\n    \"pundix.site\",\n    \"dexhuobi.com\",\n    \"binance-dev.online\",\n    \"aabithub.com\",\n    \"binance-airdrop.hol.es\",\n    \"binance-gift.com\",\n    \"binance.accountant\",\n    \"binance.date\",\n    \"binance.men\",\n    \"binance.science\",\n    \"binance.webcam\",\n    \"binancebnb.online\",\n    \"binances.club\",\n    \"bitfiles.ml\",\n    \"coiinbase.com\",\n    \"design.localbitcoinsx.com\",\n    \"i1.localbitcoinsx.com\",\n    \"i2.localbitcois.org\",\n    \"kraken.com.se\",\n    \"lcalbitcoins.biz\",\n    \"licalbitcoins.club\",\n    \"localbipcoins.com\",\n    \"localbircoins.club\",\n    \"localbircoins.top\",\n    \"localbitcoin.asia\",\n    \"localbitcoina.club\",\n    \"localbitcoina.top\",\n    \"localbitcoind.club\",\n    \"localbitcoind.net.ru\",\n    \"localbitcoines.top\",\n    \"localbitcoins.ooo\",\n    \"localbitcoins.ru.net\",\n    \"localbitcolins.com\",\n    \"localbitcouns.club\",\n    \"localbitkoins.com.ru\",\n    \"localbitkoins.net.ru\",\n    \"localbitocins.club\",\n    \"localbitscoins.com\",\n    \"localbitscoins.net.ru\",\n    \"localbutcoins.asia\",\n    \"localbutcoins.net\",\n    \"localbutcoins.net.ru\",\n    \"localnitcoins.club\",\n    \"localnitcoins.top\",\n    \"localsbitcoins.net\",\n    \"localvitcoins.club\",\n    \"loclbitcoins.com.ru\",\n    \"loclbitcoins.net.ru\",\n    \"locslbitcoins.club\",\n    \"lokalbitcins.com\",\n    \"lokalbitcoins.com.ru\",\n    \"lokalbitcoins.gdn\",\n    \"lokalbitcoins.net.ru\",\n    \"lokalbitcoins.org.ru\",\n    \"lokalbitcoins.pl\",\n    \"lokalbitcoint.com\",\n    \"lovalbitcoins.club\",\n    \"lovalbitcoins.top\",\n    \"manage-applesupport-verification.com\",\n    \"meythervvallet.net\",\n    \"meythervvallet.org\",\n    \"meytherwellet.info\",\n    \"meytherwellet.net\",\n    \"mnyetlherwbllet.com\",\n    \"mnyetnherwailet.com\",\n    \"mycthervvellet.com\",\n    \"myctherwellet.com\",\n    \"myefherwailet.com\",\n    \"myehtervvallct.com\",\n    \"myehterwellete.com\",\n    \"myetherwallet-de.space\",\n    \"myetherwallnet.com\",\n    \"myscreen.ml\",\n    \"poloniex.online\",\n    \"rnyethervallel.com\",\n    \"terms-paxful.com\",\n    \"xn--bitfnex-2ya.com\",\n    \"xn--huob-8w5a.com\",\n    \"cryptophonesupport.com\",\n    \"keepstake.github.io\",\n    \"msg.xn--metherwllt-zmb5581g94a.com\",\n    \"xn--metherwllt-zmb5581g94a.com\",\n    \"international.bittrex.com8917321.ga\",\n    \"com8917321.ga\",\n    \"spacex.delivery\",\n    \"bibolx.com\",\n    \"xn--metherwllt-f2d4888f9va.com\",\n    \"myetherwallet-ue.space\",\n    \"get-eth-now.online\",\n    \"xn--tro-rwa.net\",\n    \"erc-20.myetherwallet.bonus.tokens-mew.com\",\n    \"tokens-mew.com\",\n    \"binance-home-app.com\",\n    \"binance-il.com\",\n    \"binance.cricket\",\n    \"binance.loan\",\n    \"binancedex.center\",\n    \"binancel.com\",\n    \"binances.win\",\n    \"binancesto.org\",\n    \"coinbase-usdc.info\",\n    \"coindesk.hu\",\n    \"design.localbitcoin.download\",\n    \"design.localbitcoin.online\",\n    \"design.localbitcoin.review\",\n    \"design.localbitcoin.us\",\n    \"design.localbitcoin.website\",\n    \"design.localbitcoin.win\",\n    \"design.localbitcoins.date\",\n    \"design.localbitcoins.gdn\",\n    \"design.localbitcoins.racing\",\n    \"design.localbitcoins.review\",\n    \"design.localbitcoins.science\",\n    \"design.localbitcoins.webcam\",\n    \"design.localbitcoinsa.com\",\n    \"design.localbitcoinsd.com\",\n    \"design.localbitcoinst.com\",\n    \"design.localbitcoinxs.com\",\n    \"design.markethot24.ru\",\n    \"dexbinance.center\",\n    \"dexbinance.info\",\n    \"hitbtc.info\",\n    \"hitbtc.org\",\n    \"hitbtc.ru\",\n    \"hitbtc.site\",\n    \"hitbtc.space\",\n    \"hitbtc.tech\",\n    \"hitbtc.us\",\n    \"hitbtx.com\",\n    \"hittbtc.com\",\n    \"i1.localbitcoin.bid\",\n    \"i1.localbitcoin.online\",\n    \"i1.localbitcoin.review\",\n    \"i1.localbitcoin.stream\",\n    \"i1.localbitcoin.top\",\n    \"i1.localbitcoin.win\",\n    \"i1.localbitcoins.review\",\n    \"i1.localbitcoins.science\",\n    \"i1.localbitcoins.webcam\",\n    \"i1.localbitcoinsd.com\",\n    \"i1.localbitcoinst.com\",\n    \"i1.localbitcois.biz\",\n    \"i1.localbitcois.org\",\n    \"i2.klocalbitcoins.com\",\n    \"i2.localbitcoin.download\",\n    \"i2.localbitcoin.online\",\n    \"i2.localbitcoin.review\",\n    \"i2.localbitcoin.top\",\n    \"i2.localbitcoin.us\",\n    \"i2.localbitcoin.website\",\n    \"i2.localbitcoind.com\",\n    \"i2.localbitcoins.date\",\n    \"i2.localbitcoins.gdn\",\n    \"i2.localbitcoins.review\",\n    \"i2.localbitcoins.science\",\n    \"i2.localbitcoins.su\",\n    \"i2.localbitcoins.webcam\",\n    \"i2.localbitcoinsd.com\",\n    \"i2.localbitcoinsx.com\",\n    \"i2.localbitcois.biz\",\n    \"i2.localbitcois.info\",\n    \"i3.localbitcoin.bid\",\n    \"i3.localbitcoin.review\",\n    \"i3.localbitcoin.top\",\n    \"i3.localbitcoin.us\",\n    \"i3.localbitcoin.website\",\n    \"i3.localbitcois.org\",\n    \"i4.localbitcoin.review\",\n    \"indodax1.com\",\n    \"indodaxc.com\",\n    \"info-mercatox.com\",\n    \"l9calbitcoins.com\",\n    \"lcalbitcoins.club\",\n    \"lcalbitcoins.org\",\n    \"ldex.space\",\n    \"lecalbitcoins.com\",\n    \"liocalbitcoins.com\",\n    \"loaclbitcoins.com\",\n    \"loaclbitcoins.net\",\n    \"loaclbitcoins.org\",\n    \"loaclbitcoins.us\",\n    \"loalbitcoins.biz\",\n    \"loalbitcoins.club\",\n    \"loalbitcoins.loan\",\n    \"loalbitcoins.mobi\",\n    \"loalbitcoins.net\",\n    \"loalbitcoins.org\",\n    \"loalbitcoins.us\",\n    \"loalbitcoins.win\",\n    \"locabitcoins.top\",\n    \"locabitcoins.trade\",\n    \"locabitcoins.win\",\n    \"localb9tcoins.com\",\n    \"localbbitcoins.net\",\n    \"localbeetcoins.com\",\n    \"localbi6coins.com\",\n    \"localbicoins.bid\",\n    \"localbicoins.biz\",\n    \"localbicoins.club\",\n    \"localbicoins.loan\",\n    \"localbicoins.org\",\n    \"localbicoins.top\",\n    \"localbicoins.trade\",\n    \"localbicoins.us\",\n    \"localbicoins.win\",\n    \"localbictoins.net\",\n    \"localbikoins.com\",\n    \"localbiktcoins.com\",\n    \"localbillcoins.ru\",\n    \"localbincoins.com\",\n    \"localbircoins.com\",\n    \"localbircoins.us\",\n    \"localbiscoins.com\",\n    \"localbitc0ins.com\",\n    \"localbitcdoins.com\",\n    \"localbitcfoins.com\",\n    \"localbitcins.club\",\n    \"localbitcins.loan\",\n    \"localbitcins.men\",\n    \"localbitcins.trade\",\n    \"localbitcins.win\",\n    \"localbitckoins.com\",\n    \"localbitclins.com\",\n    \"localbitcloins.com\",\n    \"localbitco8ns.com\",\n    \"localbitco9ns.com\",\n    \"localbitcoens.com\",\n    \"localbitcoibns.com\",\n    \"localbitcoihs.com\",\n    \"localbitcoimns.com\",\n    \"localbitcoin.cricket\",\n    \"localbitcoin.gdn\",\n    \"localbitcoin.host\",\n    \"localbitcoin.house\",\n    \"localbitcoin.link\",\n    \"localbitcoin.loan\",\n    \"localbitcoin.nl\",\n    \"localbitcoin.org.ru\",\n    \"localbitcoin.party\",\n    \"localbitcoin.pro\",\n    \"localbitcoin.racing\",\n    \"localbitcoin.review\",\n    \"localbitcoin.science\",\n    \"localbitcoin.site\",\n    \"localbitcoin.space\",\n    \"localbitcoin.top\",\n    \"localbitcoin.webcam\",\n    \"localbitcoin.website\",\n    \"localbitcoin.win\",\n    \"localbitcoina.org\",\n    \"localbitcoina.us\",\n    \"localbitcoind.top\",\n    \"localbitcoind.win\",\n    \"localbitcoines.bid\",\n    \"localbitcoines.trade\",\n    \"localbitcoines.win\",\n    \"localbitcoins.accountant\",\n    \"localbitcoins.com.ru\",\n    \"localbitcoins.cz\",\n    \"localbitcoins.design\",\n    \"localbitcoins.gdn\",\n    \"localbitcoins.kim\",\n    \"localbitcoins.life\",\n    \"localbitcoins.net.ru\",\n    \"localbitcoins.site\",\n    \"localbitcoins.space\",\n    \"localbitcoins.top\",\n    \"localbitcoins.webcam\",\n    \"localbitcoins.world\",\n    \"localbitcoins2v.com\",\n    \"localbitcoinsa.com\",\n    \"localbitcoinsd.com\",\n    \"localbitcoinse.com\",\n    \"localbitcoinsforo.net\",\n    \"localbitcoinss.com\",\n    \"localbitcoinss.net\",\n    \"localbitcoinsw.com\",\n    \"localbitcoint.bid\",\n    \"localbitcoint.loan\",\n    \"localbitcoint.top\",\n    \"localbitcoinw.com\",\n    \"localbitcoinx.com\",\n    \"localbitcois.biz\",\n    \"localbitcois.info\",\n    \"localbitcois.loan\",\n    \"localbitcois.men\",\n    \"localbitcois.org\",\n    \"localbitcois.ru\",\n    \"localbitcois.trade\",\n    \"localbitcois.us\",\n    \"localbitcois.win\",\n    \"localbitcoisn.net\",\n    \"localbitcoiuns.com\",\n    \"localbitcoiyns.com\",\n    \"localbitcojins.com\",\n    \"localbitcolns.info\",\n    \"localbitconis.biz\",\n    \"localbitconis.com\",\n    \"localbitconis.net\",\n    \"localbitconis.org\",\n    \"localbitconis.top\",\n    \"localbitcons.bid\",\n    \"localbitcons.biz\",\n    \"localbitcons.info\",\n    \"localbitcons.net\",\n    \"localbitcons.ru\",\n    \"localbitcons.space\",\n    \"localbitcons.us\",\n    \"localbitcons.win\",\n    \"localbitcouins.club\",\n    \"localbitcouins.com\",\n    \"localbitcouins.net\",\n    \"localbitcouins.net.ru\",\n    \"localbitcouins.site\",\n    \"localbitcouins.website\",\n    \"localbitcouins.xyz\",\n    \"localbitcouns.biz\",\n    \"localbitcouns.us\",\n    \"localbitcpins.us\",\n    \"localbitcpoins.com\",\n    \"localbitcxoins.com\",\n    \"localbitdcoins.com\",\n    \"localbitfcoins.com\",\n    \"localbitkoin.com\",\n    \"localbitkoins.bid\",\n    \"localbitkoins.club\",\n    \"localbitkoins.co\",\n    \"localbitkoins.com\",\n    \"localbitkoins.download\",\n    \"localbitkoins.faith\",\n    \"localbitkoins.loan\",\n    \"localbitkoins.men\",\n    \"localbitkoins.pro\",\n    \"localbitkoins.ru\",\n    \"localbitkoins.site\",\n    \"localbitkoins.top\",\n    \"localbitkoins.trade\",\n    \"localbitkoins.us\",\n    \"localbitkoins.win\",\n    \"localbitocins.org\",\n    \"localbitoins.bid\",\n    \"localbitoins.biz\",\n    \"localbitoins.club\",\n    \"localbitoins.info\",\n    \"localbitoins.loan\",\n    \"localbitoins.org\",\n    \"localbitoins.ru\",\n    \"localbitoins.trade\",\n    \"localbitoins.us\",\n    \"localbitoins.win\",\n    \"localbitqoins.com\",\n    \"localbitscoins.bid\",\n    \"localbitscoins.club\",\n    \"localbitscoins.faith\",\n    \"localbitscoins.men\",\n    \"localbitscoins.org\",\n    \"localbitscoins.top\",\n    \"localbitscoins.us\",\n    \"localbitscoins.win\",\n    \"localbitsoins.com\",\n    \"localbitvoins.com\",\n    \"localbiutcoins.com\",\n    \"localbiycoins.com\",\n    \"localbjtcoins.com\",\n    \"localbotcoins.top\",\n    \"localbotcoins.trade\",\n    \"localbtcoins.biz\",\n    \"localbtcoins.men\",\n    \"localbtcoins.org\",\n    \"localbtcoins.win\",\n    \"localbttcoins.ru\",\n    \"localbuitcoins.com\",\n    \"localbutcoins.bid\",\n    \"localbutcoins.faith\",\n    \"localbutcoins.info\",\n    \"localbutcoins.men\",\n    \"localbutcoins.win\",\n    \"localbutscoins.com\",\n    \"localbvitcoins.com\",\n    \"localgbitcoins.com\",\n    \"localgitcoins.com\",\n    \"localhitcoins.com\",\n    \"localibtcoins.com\",\n    \"localitcoins.bid\",\n    \"localitcoins.biz\",\n    \"localitcoins.club\",\n    \"localitcoins.info\",\n    \"localitcoins.men\",\n    \"localitcoins.org\",\n    \"localitcoins.top\",\n    \"localitcoins.us\",\n    \"localkbitcoins.com\",\n    \"localnitcoins.biz\",\n    \"localnitcoins.com\",\n    \"localnitcoins.us\",\n    \"localpitcoins.com\",\n    \"localsbitcoins.info\",\n    \"localsbitcoins.ru\",\n    \"localsbitcoins.top\",\n    \"localsbitcoins.us\",\n    \"localsbitcoins.win\",\n    \"localsbitscoins.com\",\n    \"localvitcoins.xyz\",\n    \"localvitscoins.com\",\n    \"localybitcoins.com\",\n    \"locaslbitcoins.org\",\n    \"locazlbitcoins.com\",\n    \"locfalbitcoins.com\",\n    \"loclabitcoins.net\",\n    \"loclabitcoins.us\",\n    \"loclbitcoins.accountant\",\n    \"loclbitcoins.asia\",\n    \"loclbitcoins.club\",\n    \"loclbitcoins.cricket\",\n    \"loclbitcoins.date\",\n    \"loclbitcoins.download\",\n    \"loclbitcoins.faith\",\n    \"loclbitcoins.loan\",\n    \"loclbitcoins.org\",\n    \"loclbitcoins.party\",\n    \"loclbitcoins.pro\",\n    \"loclbitcoins.racing\",\n    \"loclbitcoins.review\",\n    \"loclbitcoins.science\",\n    \"loclbitcoins.site\",\n    \"loclbitcoins.space\",\n    \"loclbitcoins.top\",\n    \"loclbitcoins.trade\",\n    \"loclbitcoins.website\",\n    \"loclbitcoins.win\",\n    \"locqlbitcoins.com\",\n    \"loczlbitcoins.com\",\n    \"lodcalbitcoins.com\",\n    \"logalbitcoins.com\",\n    \"loicalbitcoins.com\",\n    \"lokalbicoins.com\",\n    \"lokalbitcoin.com\",\n    \"lokalbitcoins.bid\",\n    \"lokalbitcoins.club\",\n    \"lokalbitcoins.date\",\n    \"lokalbitcoins.host\",\n    \"lokalbitcoins.me\",\n    \"lokalbitcoins.men\",\n    \"lokalbitcoins.mobi\",\n    \"lokalbitcoins.online\",\n    \"lokalbitcoins.racing\",\n    \"lokalbitcoins.review\",\n    \"lokalbitcoins.science\",\n    \"lokalbitcoins.site\",\n    \"lokalbitcoins.space\",\n    \"lokalbitcoins.stream\",\n    \"lokalbitcoins.top\",\n    \"lokalbitcoins.us\",\n    \"lokalbitcoins.win\",\n    \"lokalbitscoins.com\",\n    \"lokalbutcoins.com\",\n    \"lokalsbitcoins.com\",\n    \"lokcalbitcoins.com\",\n    \"loqalbitcoins.com\",\n    \"lovalbitcoins.biz\",\n    \"lpcalbitcoins.com\",\n    \"lpocalbitcoins.com\",\n    \"luocalbitcoins.com\",\n    \"mercaotx.com\",\n    \"mercatoox.com\",\n    \"mercatox.market\",\n    \"mercattox.com\",\n    \"mervatox.com\",\n    \"myeterwallet.su\",\n    \"myethereum-wallet-com.com\",\n    \"myethereum-wallet-com.info\",\n    \"myethereum-wallet-com.site\",\n    \"myetherwallet-drop.space\",\n    \"myetherwallet-em.space\",\n    \"myetherwallet-eu.space\",\n    \"myetherwallet-msgsign.space\",\n    \"myetherwallet.claim.erc-20.bonus.tokens-mew.com\",\n    \"myethiwallet.com\",\n    \"myethwachltet.com\",\n    \"myethwatchlet.com\",\n    \"myethwatchllet.com\",\n    \"myselherwallel.com\",\n    \"ocalbitcoins.net\",\n    \"olcalbitcoins.com\",\n    \"v-kraken.com\",\n    \"www-binance.online\",\n    \"xn--binnc-5wa6l.com\",\n    \"xn--huob-oza.com\",\n    \"xn--krake-wm1b.com\",\n    \"xn--krakn-f61b.com\",\n    \"xn--krken-yqa.com\",\n    \"xn--krkn-cta9976b.com\",\n    \"medium-ether.com\",\n    \"gift-btc.net\",\n    \"myetnerwallet.com.application-send.info\",\n    \"application-send.info\",\n    \"mediumz.top\",\n    \"giveawayether.net\",\n    \"drgnairdrop.com\",\n    \"huobiglo.live\",\n    \"getmusk.space\",\n    \"poloniextron.blogspot.com\",\n    \"btc-promo.info\",\n    \"myetherwallet.16mb.com\",\n    \"blog.0xproject.co\",\n    \"0xproject.co\",\n    \"wallet.pollux.network\",\n    \"pollux.network\",\n    \"mvelnerwallet.com\",\n    \"multplatforlex.asia\",\n    \"cryptoblackfriday.blogspot.com\",\n    \"freecryptogift.org\",\n    \"tronblackfriday.blogspot.com\",\n    \"btc-gift.tech\",\n    \"neoblackfriday.blogspot.com\",\n    \"ayetherwallet.com\",\n    \"binance.faith\",\n    \"binance.racing\",\n    \"binances.top\",\n    \"design.klocalbitcoins.com\",\n    \"design.localbitcoin.stream\",\n    \"design.localbitcoin.top\",\n    \"design.localbitcoind.com\",\n    \"design.localbitcoinjs.com\",\n    \"design.localbitcoins.su\",\n    \"design.localbitcoinw.com\",\n    \"design.localbitcoinzs.com\",\n    \"hitbtc.bid\",\n    \"hitbtc.biz\",\n    \"hitbtc.club\",\n    \"hitbtc.link\",\n    \"hitbtc.loan\",\n    \"hitbtc.online\",\n    \"hitbtc.press\",\n    \"hitbtc.top\",\n    \"hitbtc.trade\",\n    \"hitbtc.win\",\n    \"hitbttc.com\",\n    \"huobi.press\",\n    \"i1.klocalbitcoins.com\",\n    \"i1.localbitcoin.download\",\n    \"i1.localbitcoin.us\",\n    \"i1.localbitcoin.website\",\n    \"i1.localbitcoind.com\",\n    \"i1.localbitcoinjs.com\",\n    \"i1.localbitcoins.date\",\n    \"i1.localbitcoins.gdn\",\n    \"i1.localbitcoins.su\",\n    \"i1.localbitcoinsa.com\",\n    \"i1.localbitcoinw.com\",\n    \"i1.localbitcoinzs.com\",\n    \"i1.localbitcois.info\",\n    \"i2.localbitcoin.bid\",\n    \"i2.localbitcoinjs.com\",\n    \"i2.localbitcoinsa.com\",\n    \"i2.localbitcoinw.com\",\n    \"i2.localbitcoinzs.com\",\n    \"klocalbitcoins.com\",\n    \"lacalbitcoins.com\",\n    \"lcalbitcoins.info\",\n    \"lcalbitcoins.net\",\n    \"licalbitcoins.com\",\n    \"lkcalbitcoins.com\",\n    \"lkocalbitcoins.com\",\n    \"llcalbitcoins.com\",\n    \"loalbitcoins.bid\",\n    \"loalbitcoins.info\",\n    \"loalbitcoins.pro\",\n    \"locabitcoins.bid\",\n    \"locabitcoins.biz\",\n    \"locabitcoins.club\",\n    \"locabitcoins.info\",\n    \"locabitcoins.loan\",\n    \"locabitcoins.org\",\n    \"locabitcoins.ru\",\n    \"locabitcoins.us\",\n    \"locablitcoins.net\",\n    \"locakbitcoins.com\",\n    \"locaklbitcoins.com\",\n    \"localb8tcoins.com\",\n    \"localbaytcoins.com\",\n    \"localbgitcoins.com\",\n    \"localbhitcoins.com\",\n    \"localbi5coins.com\",\n    \"localbicoins.men\",\n    \"localbidcoins.com\",\n    \"localbifcoins.com\",\n    \"localbiftcoins.com\",\n    \"localbigcoins.com\",\n    \"localbigtcoins.com\",\n    \"localbiitcoins.net\",\n    \"localbijtcoins.com\",\n    \"localbircoins.info\",\n    \"localbirtcoins.com\",\n    \"localbitc9ins.com\",\n    \"localbitciins.com\",\n    \"localbitcins.bid\",\n    \"localbitcins.ru\",\n    \"localbitco9ins.com\",\n    \"localbitcoibs.com\",\n    \"localbitcoihns.com\",\n    \"localbitcoiins.com\",\n    \"localbitcoijns.com\",\n    \"localbitcoijs.com\",\n    \"localbitcoikns.com\",\n    \"localbitcoin.accountant\",\n    \"localbitcoin.click\",\n    \"localbitcoin.club\",\n    \"localbitcoin.com.ru\",\n    \"localbitcoin.date\",\n    \"localbitcoin.download\",\n    \"localbitcoin.faith\",\n    \"localbitcoin.icu\",\n    \"localbitcoin.me\",\n    \"localbitcoin.men\",\n    \"localbitcoin.mobi\",\n    \"localbitcoin.net.ru\",\n    \"localbitcoin.online\",\n    \"localbitcoin.stream\",\n    \"localbitcoin.us\",\n    \"localbitcoina.com\",\n    \"localbitcoina.info\",\n    \"localbitcoina.xyz\",\n    \"localbitcoinas.com\",\n    \"localbitcoind.com\",\n    \"localbitcoind.info\",\n    \"localbitcoind.net\",\n    \"localbitcoind.us\",\n    \"localbitcoinds.com\",\n    \"localbitcoines.loan\",\n    \"localbitcoines.space\",\n    \"localbitcoines.us\",\n    \"localbitcoinhs.com\",\n    \"localbitcoinjs.com\",\n    \"localbitcoinms.com\",\n    \"localbitcoinns.com\",\n    \"localbitcoins.agency\",\n    \"localbitcoins.asia\",\n    \"localbitcoins.bid\",\n    \"localbitcoins.cricket\",\n    \"localbitcoins.date\",\n    \"localbitcoins.faith\",\n    \"localbitcoins.host\",\n    \"localbitcoins.house\",\n    \"localbitcoins.men\",\n    \"localbitcoins.mobi\",\n    \"localbitcoins.party\",\n    \"localbitcoins.press\",\n    \"localbitcoins.pro\",\n    \"localbitcoins.racing\",\n    \"localbitcoins.red\",\n    \"localbitcoins.review\",\n    \"localbitcoins.rocks\",\n    \"localbitcoins.science\",\n    \"localbitcoins.store\",\n    \"localbitcoins.su\",\n    \"localbitcoins.trade\",\n    \"localbitcoins.win\",\n    \"localbitcoins.work\",\n    \"localbitcoins.xyz\",\n    \"localbitcoinsl.com\",\n    \"localbitcoinst.com\",\n    \"localbitcoinsx.com\",\n    \"localbitcoinsz.com\",\n    \"localbitcoint.trade\",\n    \"localbitcoint.win\",\n    \"localbitcoinws.com\",\n    \"localbitcoinxs.com\",\n    \"localbitcoinzs.com\",\n    \"localbitcois.bid\",\n    \"localbitcois.space\",\n    \"localbitcoisn.com\",\n    \"localbitcojns.com\",\n    \"localbitcokins.com\",\n    \"localbitcokns.com\",\n    \"localbitcons.loan\",\n    \"localbitcons.men\",\n    \"localbitcons.trade\",\n    \"localbitcooins.com\",\n    \"localbitcoons.com\",\n    \"localbitcopins.com\",\n    \"localbitcouins.info\",\n    \"localbitcouins.space\",\n    \"localbitcouns.com\",\n    \"localbitcoyns.com\",\n    \"localbitcpins.com\",\n    \"localbitcuins.com\",\n    \"localbitcvoins.com\",\n    \"localbitdoins.com\",\n    \"localbitfoins.com\",\n    \"localbitgcoins.com\",\n    \"localbitkoins.date\",\n    \"localbitkoins.info\",\n    \"localbitkoins.mobi\",\n    \"localbitkoins.net\",\n    \"localbitkoins.org\",\n    \"localbitkoins.space\",\n    \"localbitocins.com\",\n    \"localbitocins.info\",\n    \"localbitocins.xyz\",\n    \"localbitoins.net\",\n    \"localbitrcoins.com\",\n    \"localbitscoin.com\",\n    \"localbitscoins.download\",\n    \"localbitscoins.net\",\n    \"localbitscoins.ru\",\n    \"localbitskoins.com\",\n    \"localbittcoins.com\",\n    \"localbitvcoins.com\",\n    \"localbitxcoins.com\",\n    \"localbitxoins.com\",\n    \"localbitycoins.com\",\n    \"localbiytcoins.com\",\n    \"localbjitcoins.com\",\n    \"localbkitcoins.com\",\n    \"localbktcoins.com\",\n    \"localbnitcoins.com\",\n    \"localboitcoins.com\",\n    \"localbotcoins.info\",\n    \"localbtcoins.info\",\n    \"localbtcoins.loan\",\n    \"localbtcoins.trade\",\n    \"localbticoins.net\",\n    \"localbutcoins.biz\",\n    \"localbutcoins.club\",\n    \"localbutcoins.com\",\n    \"localbutcoins.ru\",\n    \"localbutcoins.space\",\n    \"localbutcoins.top\",\n    \"localbutcoins.trade\",\n    \"localbutcoins.us\",\n    \"localbutcoins.xyz\",\n    \"localbutkoins.com\",\n    \"localbytcoins.com\",\n    \"localbytecoins.com\",\n    \"localhbitcoins.com\",\n    \"localitcoins.loan\",\n    \"localitcoins.ru\",\n    \"localitcoins.trade\",\n    \"localitcoins.win\",\n    \"localnbitcoins.com\",\n    \"localnitcoins.org\",\n    \"localnitscoins.com\",\n    \"localpbitcoins.com\",\n    \"localsbitcoins.loan\",\n    \"localsbitkoins.com\",\n    \"localvbitcoins.com\",\n    \"localvitcoins.com\",\n    \"locanbitcoins.com\",\n    \"locaobitcoins.com\",\n    \"locapbitcoins.com\",\n    \"locaqlbitcoins.com\",\n    \"locawlbitcoins.com\",\n    \"loccalbitcoins.com\",\n    \"locdalbitcoins.com\",\n    \"locelbitcoins.com\",\n    \"loclabitcoins.com\",\n    \"loclbitcoins.bid\",\n    \"loclbitcoins.host\",\n    \"loclbitcoins.info\",\n    \"loclbitcoins.men\",\n    \"loclbitcoins.press\",\n    \"loclbitcoins.ru\",\n    \"loclbitcoins.stream\",\n    \"loclbitcoins.webcam\",\n    \"loclbitscoins.com\",\n    \"locqalbitcoins.com\",\n    \"locslbitcoins.com\",\n    \"locvalbitcoins.com\",\n    \"locwalbitcoins.com\",\n    \"locwlbitcoins.com\",\n    \"locxalbitcoins.com\",\n    \"loczalbitcoins.com\",\n    \"lodalbitcoins.com\",\n    \"lofcalbitcoins.com\",\n    \"login.localbitcoins.com.localbitcoinns.com\",\n    \"lokalbitcoins.biz\",\n    \"lokalbitcoins.co\",\n    \"lokalbitcoins.download\",\n    \"lokalbitcoins.loan\",\n    \"lokalbitcoins.org\",\n    \"lokalbitcoins.pro\",\n    \"lokalbitcoins.ru\",\n    \"lokalbitcoins.website\",\n    \"lokalbitcoints.com\",\n    \"lokalbitscoin.com\",\n    \"loklbitcoins.com\",\n    \"lolcalbitcoins.com\",\n    \"loocalbitcoins.com\",\n    \"losalbitcoins.com\",\n    \"loucalbitcoins.com\",\n    \"lovalbitcoins.com\",\n    \"lovcalbitcoins.com\",\n    \"loxalbitcoins.com\",\n    \"loxcalbitcoins.com\",\n    \"mercarox.com\",\n    \"merrcatox.com\",\n    \"myetherwallet-eng.space\",\n    \"myetheywallet.com\",\n    \"paxful-recrutement.com\",\n    \"st.localbitcoin.review\",\n    \"wmyetherwallet.com\",\n    \"binance-dex.top\",\n    \"binance.com1278623.cf\",\n    \"binance.com136347135.ml\",\n    \"binance.com1378623.ga\",\n    \"binance.com16324.ml\",\n    \"binance.com987574.ml\",\n    \"coinbaseoffer.com\",\n    \"coindesk.online\",\n    \"ldex.host\",\n    \"localbitcoins.loan\",\n    \"lopcalbitcoins.com\",\n    \"mail.wallet-trezor.io\",\n    \"myetherwallet-en.space\",\n    \"myetherwallet.logiln.com\",\n    \"myetherwallet.rlogin.co\",\n    \"myetherwelet.com\",\n    \"paxful.com.tubulk.ga\",\n    \"huobiairdrop.info\",\n    \"huobiairdrop.org\",\n    \"huobiairdrop.top\",\n    \"lcgin.com\",\n    \"rlogin.co\",\n    \"blockchain.lcgiin.com\",\n    \"blockchain.llogin.co\",\n    \"blcokchain.llogin.co\",\n    \"blockchain.logirn.com\",\n    \"blockchein.logirn.com\",\n    \"blockchain.lcgin.com\",\n    \"empowr.com\",\n    \"bnbeth.net\",\n    \"dex-bnb.net\",\n    \"paxos-bounty.com\",\n    \"blackfridayneo.blogspot.com\",\n    \"blackfridayetc.blogspot.com\",\n    \"blackfridaycrypto.blogspot.com\",\n    \"btc-gift.live\",\n    \"btc-gift.us\",\n    \"huobiairdrop.net\",\n    \"tesla-crypto.info\",\n    \"bnb-ethcompetition.com\",\n    \"eth.binancegift.pro\",\n    \"binancegift.pro\",\n    \"idex.com.ru\",\n    \"ibex.cc\",\n    \"t-btc.net\",\n    \"etherdelta.com.ru\",\n    \"binance-mmx.com\",\n    \"binance-tx.com\",\n    \"binance-xm.com\",\n    \"binance.com762367321.ml\",\n    \"binance0.com\",\n    \"binance88.com\",\n    \"bitffinnex.com\",\n    \"bitfinexlogin.com\",\n    \"bittrexl.uk.l-lws.com\",\n    \"coinbase-com.cloud\",\n    \"coinbase-com.info\",\n    \"coinbase-com.org\",\n    \"coinbase-com.site\",\n    \"coinbase.fans\",\n    \"giftauroradao.com\",\n    \"localbicoins.ru\",\n    \"localbilcoins.ru\",\n    \"localbitcoins.ltd\",\n    \"localbitcoins.org.ru\",\n    \"localbitcoinsv.com\",\n    \"lofalbitcoins.com\",\n    \"lucalbitcoins.com\",\n    \"wallet-trezor.io\",\n    \"miyetherwallet.pw\",\n    \"myetherwallet-msg.space\",\n    \"myetherwallet.llogin.co\",\n    \"paxful067.000webhostapp.com\",\n    \"paxfulcoins.com\",\n    \"paxiiful.com\",\n    \"polonienx.com\",\n    \"tokens-tronscan.org\",\n    \"xn--bttrx-esar.com\",\n    \"xn--hittc-3jb.com\",\n    \"xn--oinbase-txa.com\",\n    \"stellar-term.store\",\n    \"binance-giveaways.com\",\n    \"btc-verified.com\",\n    \"crypto-giveaways.com\",\n    \"elon-official-giveaway.com\",\n    \"elon-official-promo.com\",\n    \"elon-party.com\",\n    \"elon-presents.com\",\n    \"elon-promotion.com\",\n    \"elon-surprise.com\",\n    \"ethereums-giveaway.com\",\n    \"gainbtc.org\",\n    \"get-btcs-now.com\",\n    \"get-eths-now.com\",\n    \"giftbtc.org\",\n    \"giveaway-official.org\",\n    \"grab-btc.com\",\n    \"limited-promo.org\",\n    \"limited-promotion.com\",\n    \"limited-promotion.org\",\n    \"musk-gives.com\",\n    \"musk-presents.com\",\n    \"musk-promotion.com\",\n    \"musk-surprise.com\",\n    \"treats-from-elon.blogspot.com\",\n    \"official-giveaway.org\",\n    \"promo-official.com\",\n    \"promo-official.org\",\n    \"promotion-official.com\",\n    \"promotion-official.org\",\n    \"binances.pro\",\n    \"bittrex.management\",\n    \"bittrex.promo\",\n    \"idexmarket.host\",\n    \"kraken--login.com\",\n    \"meercatox.com\",\n    \"mercaatox.com\",\n    \"myetherwallet-pdtt.host\",\n    \"myetherwallet-signcoin.top.md-56.webhostbox.net\",\n    \"myetherwallet-toh.host\",\n    \"online-image.ml\",\n    \"spaxful.com\",\n    \"xn--bitfnexs-wkb.com\",\n    \"xn--phod-xpa08i.com\",\n    \"dexairdropevent.com\",\n    \"eth.tronnetwork.pw\",\n    \"btc.tronnetwork.pw\",\n    \"tronnetwork.pw\",\n    \"pool-neo.blogspot.com\",\n    \"lbexm.com\",\n    \"lbexmarnet.com\",\n    \"lbexmet.com\",\n    \"ldcxmanket.com\",\n    \"binance-beta.net\",\n    \"binance.best-org.mx\",\n    \"binance.com169823623.gq\",\n    \"binance.space\",\n    \"binancex.club\",\n    \"binancex.org\",\n    \"coinbase-pro.net\",\n    \"coinbase-pro.org\",\n    \"coinbase.group\",\n    \"coinbasesto.com\",\n    \"locabitcoins.mobi\",\n    \"locabitcoins.pro\",\n    \"localbicoins.mobi\",\n    \"localbicoins.pro\",\n    \"localbitcois.pro\",\n    \"localbitcons.mobi\",\n    \"localbitcons.pro\",\n    \"localbitcooins.ru\",\n    \"localbitoins.mobi\",\n    \"localbitoins.pro\",\n    \"localbtcoins.mobi\",\n    \"localbtcoins.pro\",\n    \"localitcoins.mobi\",\n    \"localitcoins.pro\",\n    \"my-etherwallet.online\",\n    \"myether-wallet.online\",\n    \"myethermallet.online\",\n    \"myetherwailet.club\",\n    \"myetherwallet-pdt.host\",\n    \"myetherwallet.com.noreply.group\",\n    \"rnyetharwallet.com\",\n    \"rnyetherwellet.com\",\n    \"trezor-shop.com\",\n    \"trezor-store.com\",\n    \"xn--aken-f0a6q.com\",\n    \"xn--bitfnex-ufb.com\",\n    \"xn--coinbac-xs4c.com\",\n    \"xn--hibtc-s9b.com\",\n    \"xn--kaen-h0a4q.com\",\n    \"xn--myetherwalt-b3b8729g.com\",\n    \"xn--mytherwllet-ife0916g.com\",\n    \"xn--phold-erb.com\",\n    \"dexbnb.net\",\n    \"xn--bockchan-81a78e.com\",\n    \"ico.karatgold.io.bonus.wallet-crypto-member.com\",\n    \"wallet-crypto-member.com\",\n    \"btc-gift.net\",\n    \"xfreecrypto.blogspot.co.nz\",\n    \"xfreeneo.blogspot.com\",\n    \"e1contest.blogspot.com\",\n    \"dexbinancebeta.org\",\n    \"dcontestd.blogspot.com\",\n    \"fastcryptogiveaway.website\",\n    \"bcryptob.blogspot.com\",\n    \"acontesta.blogspot.com\",\n    \"elon.gift\",\n    \"xn--dex-klz.market\",\n    \"contestc.blogspot.com\",\n    \"ethereum-generator.cf\",\n    \"0xproject.org\",\n    \"pollux.ai\",\n    \"wallet.pollux.ai\",\n    \"get-10000-ethereum.org\",\n    \"crypto-giveaway.org\",\n    \"btc-crypto.me\",\n    \"crypto-return.online\",\n    \"crypto-share.online\",\n    \"tesla-gift.com\",\n    \"tesla-promo.top\",\n    \"ldex-market.host\",\n    \"xn--blocchn-4ya8tls.com\",\n    \"xn--myeterwaliet-fs4f.com\",\n    \"xn--blockhan-w0a6d.com\",\n    \"xn--bockhain-v0a06f.com\",\n    \"xn--bockcha-eza81eld.com\",\n    \"login.xn--bockcha-eza81eld.com\",\n    \"shapeshitf.io\",\n    \"shapehift.io\",\n    \"coinbase.xm-login2.com\",\n    \"am-ov.store\",\n    \"xm-login2.com\",\n    \"etherdesk.co\",\n    \"immigrationpoint.co.uk\",\n    \"ldcxmarket.com\",\n    \"ldcxmarket.info\",\n    \"ldexmark.com\",\n    \"ldexmark.info\",\n    \"myetherwallet-sing.top.md-66.webhostbox.net\",\n    \"xn--localbitcoi-ix8e.com\",\n    \"xn--phod-21a07d.com\",\n    \"binance-inc.com\",\n    \"binance.com185665.cf\",\n    \"bithumb.biz\",\n    \"coinbase.team\",\n    \"coingase.com\",\n    \"idex-market.fun\",\n    \"idex-market.host\",\n    \"localbitcoins-signup.com\",\n    \"localbotcoins.com\",\n    \"m30-coinbase.com\",\n    \"myetherrwallets.club\",\n    \"xn--myetherwalet-m8b.com\",\n    \"xn--myetherwalt-kbb19h.com\",\n    \"xn--myethrwall-b22ep7afa.com\",\n    \"xn--phod-kra55b.com\",\n    \"zzuc.coinbasez.com\",\n    \"bittrex.live\",\n    \"coinbase-giveaway.site\",\n    \"localbicoins.info\",\n    \"localbitcoints.net\",\n    \"localbitcoints.ru\",\n    \"localebitcoins.ru\",\n    \"loccalbitcoins.ru\",\n    \"myetherwallet-msgsign.top.md-86.webhostbox.net\",\n    \"myethirwalet.com\",\n    \"upholld.com\",\n    \"xn--dx-h7s6c.market\",\n    \"xn--idx-kjz.market\",\n    \"xn--mythrwalet-yq3ec1v.com\",\n    \"xn--phod-21a6v.com\",\n    \"xn--phod-zra73b.com\",\n    \"coinbasedomain.club\",\n    \"coinbasehelp.com\",\n    \"coinbasesm.com\",\n    \"myetherrwallets.icu\",\n    \"xn--conbase-8ya.com\",\n    \"xn--myethrwallt-crb6279g.com\",\n    \"bancor-network.com\",\n    \"bancor.ltd\",\n    \"lbittrex.com\",\n    \"myetherrwallets.pw\",\n    \"myetherwallet-admin.xyz\",\n    \"paxfulj.com\",\n    \"xn--dex-1ta.etherdetta.com\",\n    \"xn--dex-1ta.market\",\n    \"xn--dex-1ub.market\",\n    \"xn--dex-6jb.market\",\n    \"xn--dex-iua.market\",\n    \"xn--dex-lta.market\",\n    \"xn--dex-odb.market\",\n    \"cutduct.com\",\n    \"myetherwallett.tech\",\n    \"mymonero.me\",\n    \"xn--dex-fkb.market\",\n    \"xn--myetherwale-z3b32c.com\",\n    \"binance-dx.org\",\n    \"coinbase.markets\",\n    \"localbitcoins-4f.com\",\n    \"localbitcoins.cloud\",\n    \"myethereum-login.com\",\n    \"rnyethervwallet.com\",\n    \"steambalance.info\",\n    \"xn--dex-clz.market\",\n    \"xn--myetherwalet-n8b.com\",\n    \"xn--myetherwalt-0rb76b.com\",\n    \"xn--mytherwalet-15b5619g.com\",\n    \"xn--mythrwalet-8k2ep1dca.com\",\n    \"xn--upold-y2a.com\",\n    \"amazonbalance.com\",\n    \"emeyetherweallet.com\",\n    \"ld-hitbtc.com\",\n    \"localbircoins.biz\",\n    \"localbitcins.biz\",\n    \"localbitcoind.biz\",\n    \"localbitconis.ru\",\n    \"localbitcouins.biz\",\n    \"localbitscoins.biz\",\n    \"meetherwallet.website\",\n    \"meyetherwallct.com\",\n    \"meytferwallet.com\",\n    \"meytherwallet.co\",\n    \"meytherwallet.org\",\n    \"my-etherwalletcorp.com\",\n    \"mycryptoethwallet.com\",\n    \"mycthcrwallet.com\",\n    \"myeetherwallet.space\",\n    \"myehterwallet.us\",\n    \"myertherewallet.com\",\n    \"myeterwallet.info\",\n    \"myetheawllet.com\",\n    \"myethedwallet.info\",\n    \"myetheerwallet.space\",\n    \"myetheerwallet.top\",\n    \"myetheerwallet.website\",\n    \"myethefwallet.info\",\n    \"myether-walletcorp.com\",\n    \"myetherawallet.info\",\n    \"myetherewallet.biz\",\n    \"myethertwallet.online\",\n    \"myetherwafllet.com\",\n    \"myetherwal11et.com\",\n    \"myetherwalel.com\",\n    \"myetherwallelet.com\",\n    \"myetherwallet-blnance.space\",\n    \"myetherwallet-bnb.space\",\n    \"myetherwallet-checks.space\",\n    \"myetherwallet-coin.space\",\n    \"myetherwallet-coinhydro.top\",\n    \"myetherwallet-coinss.top\",\n    \"myetherwallet-cps.space\",\n    \"myetherwallet-cripto.space\",\n    \"myetherwallet-dec.space\",\n    \"myetherwallet-ecta.space\",\n    \"myetherwallet-hydrocoin.top\",\n    \"myetherwallet-hydrogen.space\",\n    \"myetherwallet-hydrosmg.space\",\n    \"myetherwallet-hydrotokens.space\",\n    \"myetherwallet-ign.space\",\n    \"myetherwallet-kep.space\",\n    \"myetherwallet-knd.space\",\n    \"myetherwallet-knp.space\",\n    \"myetherwallet-log.space\",\n    \"myetherwallet-login.space\",\n    \"myetherwallet-logincoin.space\",\n    \"myetherwallet-lvt.space\",\n    \"myetherwallet-mpcx.space\",\n    \"myetherwallet-nobs.space\",\n    \"myetherwallet-rix.space\",\n    \"myetherwallet-sgn.top\",\n    \"myetherwallet-shlt.space\",\n    \"myetherwallet-sig.space\",\n    \"myetherwallet-siggn.space\",\n    \"myetherwallet-sigin.space\",\n    \"myetherwallet-sigl.space\",\n    \"myetherwallet-sign.space\",\n    \"myetherwallet-signcoins.space\",\n    \"myetherwallet-signcoins.top\",\n    \"myetherwallet-signhydro.space\",\n    \"myetherwallet-signin.space\",\n    \"myetherwallet-signl.space\",\n    \"myetherwallet-signlog.space\",\n    \"myetherwallet-signmsg.space\",\n    \"myetherwallet-signn.space\",\n    \"myetherwallet-signt.space\",\n    \"myetherwallet-sit.space\",\n    \"myetherwallet-tix.space\",\n    \"myetherwallet-token.space\",\n    \"myetherwallet-tokens.space\",\n    \"myetherwallet-wabsign.space\",\n    \"myetherwallet-xcmd.space\",\n    \"myetherwallet.bplaced.net\",\n    \"myetherwallet.com.login-status.info\",\n    \"myetherwallet.net.ru\",\n    \"myetherwdllet.com\",\n    \"myetherwealletr.com\",\n    \"myethewallets.com\",\n    \"myethierwaliet.net\",\n    \"myethirewallet.com\",\n    \"myethrswallet.com\",\n    \"myethrwallet.info\",\n    \"myettherwaellet.com\",\n    \"myettherwallet.website\",\n    \"mytherwallet.news\",\n    \"mytherwallet.site\",\n    \"mytherwellet.com\",\n    \"myyetherwallet.space\",\n    \"paxful.com.jobora.ml\",\n    \"private-myetherwallet.quanta.im\",\n    \"rnyethervwallet.info\",\n    \"xn--binnce-yoc.com\",\n    \"xn--btrx-dpap16f.com\",\n    \"xn--bttex-cta85e.com\",\n    \"xn--htbt-3oa2b.com\",\n    \"xn--metherwalet-ms8eq4b.com\",\n    \"xn--myeterwalle-3ic6876g.com\",\n    \"xn--myetherallet-wt5f.com\",\n    \"xn--myethewallt-738eu8b.com\",\n    \"xn--myethrwllet-q7a31e.com.com\",\n    \"xn--myetrwallet-5qb7087g.com\",\n    \"xn--mytherwallt-019eia.com\",\n    \"xn--mythrwalet-c7ac57i.com\",\n    \"xn--phod-21a40a.com\",\n    \"xn--ploniex-90a.com\",\n    \"xn--poloex-6va52e.com\",\n    \"xn--poloiex-nkb.com\",\n    \"bennychophouse.com\",\n    \"www-idex.market\",\n    \"xn--mytherwallt-3qbi.com\",\n    \"xn--uphod-n7a.com\",\n    \"binance-dex.club\",\n    \"binance.efilum.de\",\n    \"binances.com\",\n    \"bitfinex.ltd\",\n    \"bittrex.com.qdgcx.com\",\n    \"bittrexi.bid\",\n    \"bnbbinance.com\",\n    \"coinbaseapp.com\",\n    \"dexbinance.club\",\n    \"idexi.market\",\n    \"m-paxful.com\",\n    \"mail.myetherrwaliet.com.cp-19.webhostbox.net\",\n    \"myetherrwaliet.com.cp-19.webhostbox.net\",\n    \"myetherwallet-c.space\",\n    \"myetherwallet-distribution.space\",\n    \"myetherwalletsolutions.com\",\n    \"paxfulreport.com\",\n    \"stobithumb.com\",\n    \"uphold.cf\",\n    \"xn--coinsbnk-nza.com\",\n    \"xn--paxfl-4ua.com\",\n    \"xn--pxful-gra.com\",\n    \"spacex.to\",\n    \"xlm-wallet.com\",\n    \"getpetrocoin.com\",\n    \"paxosbounty.com\",\n    \"etoro-exchange.com\",\n    \"musk.plus\",\n    \"spacex.plus\",\n    \"elongift.space\",\n    \"musk.fund\",\n    \"c-crypto.me\",\n    \"p-crypto.pw\",\n    \"c-crypto.pw\",\n    \"elonbtc.me\",\n    \"p-crypto.me\",\n    \"elonmusk.gift\",\n    \"bcrypto.pro\",\n    \"bcrypto.pw\",\n    \"coinbase.plus\",\n    \"bcrypto.live\",\n    \"ehitbtc.com.viptempobetgirisi.com\",\n    \"hit-blentf-com.blogspot.com\",\n    \"paxful.com.autaro.tk\",\n    \"autaro.tk\",\n    \"ethereum-giveaway.net\",\n    \"bonus.ethereum-giveaway.net\",\n    \"go.ethereum-giveaway.net\",\n    \"enter.ethereum-giveaway.net\",\n    \"join-eth-promotion.ethereum-giveaway.net\",\n    \"participate.ethereum-giveaway.net\",\n    \"etherdelta.ru\",\n    \"ethereumgifting.com\",\n    \"bithumb.today\",\n    \"coinbasehotelcard.com\",\n    \"coinbasepromo.us\",\n    \"cox.com-6159368de39251d7a-login.id-107sbtd9cbhsbtd5d80a13c0db1f546757jnq9j5754675782500416.kylelierman.com\",\n    \"etherwallet.it\",\n    \"etherwallet.shop\",\n    \"etherwallet.world\",\n    \"eyetherwallet.com\",\n    \"iyetherwallet.com\",\n    \"jyetherwallet.com\",\n    \"lhitlbtc.com\",\n    \"lyetherwallet.com\",\n    \"m.yetherwallet.com\",\n    \"myetherwallet5.com\",\n    \"myetherwalleta.com\",\n    \"myetherwalletb.com\",\n    \"myetherwalletc.com\",\n    \"myetherwalletd.com\",\n    \"myetherwallete.com\",\n    \"myetherwalletf.com\",\n    \"myetherwalletg.com\",\n    \"myetherwalleth.com\",\n    \"myetherwalleti.com\",\n    \"myetherwalletie.com\",\n    \"myetherwalletip.com\",\n    \"myetherwalletiy.com\",\n    \"myetherwalletj.com\",\n    \"myetherwalletk.com\",\n    \"myetherwalletm.com\",\n    \"myetherwalletn.com\",\n    \"myetherwalletntw.com\",\n    \"myetherwalleto.com\",\n    \"myetherwalletp.com\",\n    \"myetherwalletq.com\",\n    \"myetherwalletr.com\",\n    \"myetherwallets.cc\",\n    \"myetherwallets.co\",\n    \"myetherwallets.us\",\n    \"myetherwalletto.com\",\n    \"myetherwalletu.com\",\n    \"myetherwalletv.com\",\n    \"myetherwalletw.com\",\n    \"myetherwalletws.com\",\n    \"myetherwalletx.com\",\n    \"myetherwallety.com\",\n    \"myetherwalletz.com\",\n    \"myetherwalleu.com\",\n    \"myetherwallev.com\",\n    \"myetherwallewt.com\",\n    \"myetherwalley.com\",\n    \"myetherwalleyt.com\",\n    \"myetherwallez.com\",\n    \"myetherwallezt.com\",\n    \"myetherwallgt.com\",\n    \"myetherwallit.com\",\n    \"myetherwallket.com\",\n    \"myetherwallmet.com\",\n    \"myetherwallmt.com\",\n    \"myetherwalloet.com\",\n    \"myetherwallot.com\",\n    \"myetherwallpet.com\",\n    \"myetherwallrt.com\",\n    \"myetherwallset.com\",\n    \"myetherwallst.com\",\n    \"myetherwallut.com\",\n    \"myetherwallzet.com\",\n    \"myetherwalnet.com\",\n    \"myetherwaloet.com\",\n    \"myetherwalolet.com\",\n    \"myetherwalpet.com\",\n    \"myetherwalplet.com\",\n    \"myetherwamlet.com\",\n    \"myetherwamllet.com\",\n    \"myetherwanlet.com\",\n    \"myetherwaolet.com\",\n    \"myetherwaollet.com\",\n    \"myetherwaplet.com\",\n    \"myetherwapllet.com\",\n    \"myetherwaqllet.com\",\n    \"myetherwasllet.com\",\n    \"myetherwawllet.com\",\n    \"myetherwazllet.com\",\n    \"myetherwcllet.com\",\n    \"myetherweallet.com\",\n    \"myetherwiallet.com\",\n    \"myetherwillet.com\",\n    \"myetherwlalet.com\",\n    \"myetherwlallet.com\",\n    \"myetherwqallet.com\",\n    \"myetherwqllet.com\",\n    \"myetherwsallet.com\",\n    \"myetherwsllet.com\",\n    \"myetherwullet.com\",\n    \"myetherwwallet.com\",\n    \"myetherwwllet.com\",\n    \"myetherwxallet.com\",\n    \"myetherwyallet.com\",\n    \"myetherwyllet.com\",\n    \"myetherwzallet.com\",\n    \"myetherwzllet.com\",\n    \"myetherxwallet.com\",\n    \"myethesrwallet.com\",\n    \"myethetrwallet.com\",\n    \"myethewallet.com\",\n    \"myethewallet.net\",\n    \"myethewrallet.com\",\n    \"myethewrwallet.com\",\n    \"myethezrwallet.com\",\n    \"myethezwallet.com\",\n    \"myethgerwallet.com\",\n    \"myethgrwallet.com\",\n    \"myethjerwallet.com\",\n    \"myethmrwallet.com\",\n    \"myethnerwallet.com\",\n    \"myethorwallet.com\",\n    \"myethrrwallet.com\",\n    \"myethserwallet.com\",\n    \"myethsrwallet.com\",\n    \"myethuerwallet.com\",\n    \"myethwallct.com\",\n    \"myethwallet.net\",\n    \"myethwallet.uk\",\n    \"myethwerwallet.com\",\n    \"myethwrwallet.com\",\n    \"myethyerwallet.com\",\n    \"myethzerwallet.com\",\n    \"myethzrwallet.com\",\n    \"myetierwallet.com\",\n    \"myetjherwallet.com\",\n    \"myetnerwallet.com\",\n    \"myetnherwallet.com\",\n    \"myetterrwallet.com\",\n    \"myettherwallet.com\",\n    \"myetuerwallet.com\",\n    \"myetuherwallet.com\",\n    \"myetxerwallet.com\",\n    \"myetyerwallet.com\",\n    \"myetyherwallet.com\",\n    \"myetzherwallet.com\",\n    \"myeuherwallet.com\",\n    \"myevherwallet.com\",\n    \"myewtherwallet.com\",\n    \"myeyherwallet.com\",\n    \"myeytherwallet.com\",\n    \"myezherwallet.com\",\n    \"myeztherwallet.com\",\n    \"mygtherwallet.com\",\n    \"myhetherwallet.com\",\n    \"myitherwallet.com\",\n    \"mymtherwallet.com\",\n    \"myotherwallet.com\",\n    \"myretherwallet.com\",\n    \"myrtherwallet.com\",\n    \"mysetherwallet.com\",\n    \"mystherwallet.com\",\n    \"mytetherwallet.com\",\n    \"myuetherwallet.com\",\n    \"myutherwallet.com\",\n    \"mywetherwallet.com\",\n    \"mywtherwallet.com\",\n    \"myxetherwallet.com\",\n    \"myyetherwallet.com\",\n    \"myzetherwallet.com\",\n    \"myztherwallet.com\",\n    \"nnyetherwallet.com\",\n    \"nyetherwallet.com\",\n    \"oyetherwallet.com\",\n    \"poloniex-login.account2fa-login.com\",\n    \"pro-coinbase.online\",\n    \"promobittrex.site\",\n    \"rnyetherwallet.pw\",\n    \"rryetherwallet.com\",\n    \"shapeshifter.gr\",\n    \"sign.xn--mytherwalet-3qb10c.com\",\n    \"trezire.com\",\n    \"uphold.gq\",\n    \"wwmyetherwallet.com\",\n    \"xn--myetherwalet-lcc.net\",\n    \"xn--myethrwalle-3bb60n.com\",\n    \"xn--mytherwallt-qpbi.com\",\n    \"yetherwallet.com\",\n    \"ymetherwallet.com\",\n    \"binance-exchange.space\",\n    \"binancekp.com\",\n    \"coinbesebtc.com\",\n    \"getnaij.altervista.org\",\n    \"mobile3490-coinbase.com\",\n    \"mobile3490-coinbase.site\",\n    \"myetherlogin.com\",\n    \"myetherwallet-trade.space\",\n    \"myetherwalletmsg.com\",\n    \"myethwatchlett.com\",\n    \"pafxulcom.000webhostapp.com\",\n    \"parxful.com\",\n    \"pro4-coinbase.space\",\n    \"xn--kaken-5bb.com\",\n    \"xn--kaken-icb.com\",\n    \"xn--blokchain-login-20b.com\",\n    \"xn--login-blockchai-7uc.com\",\n    \"xn--www-blockchan-m9b.com\",\n    \"wallet.paxfulassist.com\",\n    \"paxfulassist.com\",\n    \"paxful.w3schoolsonline.com\",\n    \"paxful.com.leverk.cf\",\n    \"leverk.cf\",\n    \"appbittrex.com\",\n    \"account-bittrex.com\",\n    \"bittrex-es.com\",\n    \"security-bittrex.com\",\n    \"en-coinbase.com\",\n    \"bd-bitfinex.com\",\n    \"bitfniex.com\",\n    \"bittrex.online\",\n    \"coinbasesupportnumbers.com\",\n    \"myetherwallet-binance.space\",\n    \"myetherwallet-check.space\",\n    \"myetherwallet-ether.space\",\n    \"myetherwallet-mi.space\",\n    \"pax-ful.com\",\n    \"paxful1.com\",\n    \"shapeshifit.me\",\n    \"shapeshifted.net\",\n    \"stobinance.com\",\n    \"xn--idx-tra.market\",\n    \"xn--raen-k0ac.com\",\n    \"bittrex.net.security-login2fa.com\",\n    \"bittrexi.men\",\n    \"paxful.com.joiery.cf\",\n    \"hitbtc.pratiktlyukleme.com\",\n    \"xn--mercaox-rrb.com\",\n    \"xn--phld-rqa7a.com\",\n    \"xn--uphod-e4a.com\",\n    \"xn--uhol-bsa9h.com\",\n    \"xn--uphod-95a.com\",\n    \"xn--hold-pray.com\",\n    \"xn--phold-kfb.com\",\n    \"xn--phold-0ua.com\",\n    \"elherscan.host\",\n    \"claim-ethers.com\",\n    \"givetrx.blogspot.com.au\",\n    \"ethergiffcrypto.webcindario.com\",\n    \"zen-smartgives.space\",\n    \"win-give-away.club\",\n    \"coinbasepromo.webcindario.com\",\n    \"mediun-blog-coinbasepro1.tumblr.com\",\n    \"ethwalletbonus.com\",\n    \"crypton-exchange.com\",\n    \"omisego-network.io\",\n    \"easy-ethers.com\",\n    \"dexxlaunch.com\",\n    \"airdrop.systems\",\n    \"simbatools.com\",\n    \"nextbitcoinwallet.com\",\n    \"dentairdrop.com\",\n    \"get-smartsend.website\",\n    \"bigcoingift.club\",\n    \"cryptogive.rf.gd\",\n    \"verify.xn--myethrwllet-xt9e3k.com\",\n    \"musk-cryptocurrency.info\",\n    \"dexchainevent.info\",\n    \"karatgold.io.bonus.award.wallet-token-member.com\",\n    \"wallet-token-member.com\",\n    \"cryponium.info\",\n    \"neogive.blogspot.ie\",\n    \"promocrypt.com\",\n    \"get-smartcontract.website\",\n    \"transfer.getmore.host\",\n    \"give-neo.blogspot.com\",\n    \"give-neo.blogspot.ro\",\n    \"elongives.tech\",\n    \"iost-airdrop.com\",\n    \"bin-launch.com\",\n    \"givecrypto.website\",\n    \"freecrypto-x.blogspot.com\",\n    \"binance-shb.com\",\n    \"binance.cash\",\n    \"bitbank.group\",\n    \"bithumbsto.com\",\n    \"bittrex-login.oficial-homepage.com\",\n    \"bittrex.com.oficial-homepage.com\",\n    \"coinbasemining.biz\",\n    \"coinsbank365.com\",\n    \"huobi.loans\",\n    \"kraken.gq\",\n    \"krakenni.com\",\n    \"myetherwallet-eth.space\",\n    \"myetherwallet-hydr.space\",\n    \"myetherwallet-idap.space\",\n    \"paxful.trade\",\n    \"paxfulj.trade\",\n    \"paxfulrectify.com\",\n    \"paxfulsecureteam.com\",\n    \"paxfulsecurity.com\",\n    \"paxfulvalidate.com\",\n    \"paxfulverified.com\",\n    \"poloniex-fr.com\",\n    \"xn--iex-vyy.market\",\n    \"xn--myethewllet-2kb87h.com\",\n    \"binance.com1235723786.cf\",\n    \"binance.com1762378235.cf\",\n    \"binance.tax\",\n    \"binancealtcoin.com\",\n    \"bithumb.center\",\n    \"bittrex-rm.com\",\n    \"bwidthherop.herokuapp.com\",\n    \"coinbase.company\",\n    \"coinbase.gold\",\n    \"coinbase.institute\",\n    \"coinbase.market\",\n    \"coinbase.network\",\n    \"coinbase.page\",\n    \"coinbase.pizza\",\n    \"coinbase.properties\",\n    \"coinbase.rip\",\n    \"coinbase.software\",\n    \"coinbasepromo.com\",\n    \"coinbases.fr\",\n    \"freecoinbase.com\",\n    \"idex.services\",\n    \"kraken.tools\",\n    \"mercatox.net\",\n    \"myethereurnwallet.com\",\n    \"myetherrwallet.icu\",\n    \"myetheruemwallet.com\",\n    \"myetherwallet-stars.space\",\n    \"myetherwallet.team\",\n    \"myethierwallet.tech\",\n    \"myethirwallet.online\",\n    \"poloniex-rm.com\",\n    \"poloniexsign.com\",\n    \"poloniexsignup.com\",\n    \"rnyethervallet.com\",\n    \"widgets.www.ibexofmark.com\",\n    \"xn--binane-f1a.com\",\n    \"xn--bttrexx-gza.com\",\n    \"xn--coinxchange-2bb.com\",\n    \"xn--htbt-vpa3n.com\",\n    \"xn--htbt-vpa5o.com\",\n    \"xn--login-blockchan-okc.com\",\n    \"xn--mercaox-brb.com\",\n    \"binanceholding.com\",\n    \"binanceholdings.com\",\n    \"binancesgp.com\",\n    \"coinbahis8.com\",\n    \"ethfinex.net\",\n    \"indodax-sdr.com\",\n    \"isidorian-knobs.000webhostapp.com\",\n    \"myetheruim.com\",\n    \"myetherwallet-lot.space\",\n    \"myetherwallt.net\",\n    \"myethrwllet.com\",\n    \"paxful-com.com\",\n    \"paxful.ink\",\n    \"trustwallet.co.uk\",\n    \"binance-event.com\",\n    \"binance-labs.com\",\n    \"binance.com986213.ga\",\n    \"binnance24.com\",\n    \"bittrex-login.accountt-apps.com\",\n    \"bittrex.com.tradinglending.com\",\n    \"coinbase.aa-gg.com\",\n    \"exchange-coindesk.com\",\n    \"mnyelherwallel.com\",\n    \"myetheruimwallet.com\",\n    \"myethervvallet.us\",\n    \"myetherwaliet.space\",\n    \"myetherwallet-bing.space\",\n    \"myetherwallet-ken.space\",\n    \"myetherwallet-me.space\",\n    \"myetherwallet-mr.space\",\n    \"myetherwallet-my.space\",\n    \"myetherwallet-sam.space\",\n    \"myetherwallet-se.space\",\n    \"myetherwallet.airdropmew.com\",\n    \"myetherwallet.com.signin.message.dolphinexplorer.sg\",\n    \"sign.xn--myethrwllet-ife3916g.com\",\n    \"wkraken.com\",\n    \"xn--myeterwallt-cm8e02e.com\",\n    \"biinancelab.com\",\n    \"binance-zendesk.com\",\n    \"binance.com198367236.ml\",\n    \"binanclogin.com\",\n    \"bithumbex.com\",\n    \"coinbasepromocode.com\",\n    \"com12334567736789854.ml\",\n    \"com124487897653274.ga\",\n    \"com164795623564456654.ml\",\n    \"com188565235654846.ml\",\n    \"ethfinix.com\",\n    \"huoobi.pro\",\n    \"ibinance.com\",\n    \"idex.agency\",\n    \"idex.company\",\n    \"localethereum.app\",\n    \"my-ether-wallet.com\",\n    \"myetharwellat.com\",\n    \"myetherwallet.co.uk\",\n    \"paxfullogin.us\",\n    \"poloniexchina.com\",\n    \"rnelherwallel.com\",\n    \"rnyelherwallel.com\",\n    \"sign-in.coinbase.com.puracosmetica.pt\",\n    \"trade-indodax.com\",\n    \"web-binance.com.ru\",\n    \"xn--binne-hwa5e.net\",\n    \"xn--bockchain-gsb.com\",\n    \"xn--coinexchang-xbb.com\",\n    \"xn--coinxchange-qbb.com\",\n    \"xn--dex-uma.com\",\n    \"xn--dx-bjao.market\",\n    \"xn--myethrwllet-xt9e3k.com\",\n    \"xn--mytherwalliet-4o2g.com\",\n    \"xn--mytherwallt-79ae.com\",\n    \"xn--mytherwllt-smb383ayq9k.com\",\n    \"binance.com13897234.gq\",\n    \"binanceusa.com\",\n    \"coinbase-eth.org\",\n    \"hitbtcvip.com\",\n    \"idexj.market\",\n    \"ios-icloud.us\",\n    \"plooniex.com\",\n    \"xn--biinanc-z8a.net\",\n    \"xn--binace-zeb.net\",\n    \"xn--binanc-n4a.net\",\n    \"xn--binane-0ua.net\",\n    \"xn--bnance-bwa.net\",\n    \"xn--myeherwallt-crb6378g.com\",\n    \"ildex.space\",\n    \"1coinbase.com\",\n    \"8idex.market\",\n    \"9idex.market\",\n    \"binance-get.fund\",\n    \"binance-official.fund\",\n    \"binance.com17268923.ml\",\n    \"binance.com18976231.gq\",\n    \"binancest.com\",\n    \"binanecisecurity-com.com\",\n    \"bitcoinspoloniexchange.com\",\n    \"bitfinexvip.com\",\n    \"bithumbvip.com\",\n    \"bittrex.club\",\n    \"coinbase-pro.com\",\n    \"coinbasevip.com\",\n    \"hitdtc.online\",\n    \"hltbtc.online\",\n    \"idax.market\",\n    \"idexa.market\",\n    \"idexc.market\",\n    \"idexx.space\",\n    \"idexz.market\",\n    \"kidex.market\",\n    \"mgetherwallat.com\",\n    \"mycrypt0.com\",\n    \"myetharwolet.com\",\n    \"myethermwalet.com\",\n    \"myetherumallet.com\",\n    \"myetherumawllet.com\",\n    \"myetherumqallet.com\",\n    \"myetherumwalket.com\",\n    \"myetherumwallett.com\",\n    \"myetherumwalllet.com\",\n    \"myetherumwallt.com\",\n    \"myetherumwallte.com\",\n    \"myetherumwllet.com\",\n    \"myethorwalllet.com\",\n    \"oidex.market\",\n    \"poloniex.bid\",\n    \"post-binance.com\",\n    \"uidex.market\",\n    \"wwwlidex.market\",\n    \"xn--binne-hwa5e.com\",\n    \"xn--dex-9ta.market\",\n    \"xn--hitbt-lya.com\",\n    \"xn--myehrwallet-bb9e99a.com\",\n    \"xn--myethrwllet-ife3916g.com\",\n    \"account-myetherwallet.club\",\n    \"account-myetherwallet.info\",\n    \"account-myetherwallet.online\",\n    \"acctxcoinbase.com\",\n    \"binance-airdrops.com\",\n    \"binance.com1125459345.cf\",\n    \"binancesto.com\",\n    \"binancewebsite.accountant\",\n    \"bitfinexsto.com\",\n    \"coimbase.online\",\n    \"coinbase247.com\",\n    \"idex-maket.info\",\n    \"idexi-login.com\",\n    \"idexmarketjoin.com\",\n    \"kraken.email\",\n    \"musicequipment.site\",\n    \"myerhetwaller.com\",\n    \"poloniexwallet.com\",\n    \"poloniwallet.com\",\n    \"restore-coinbase.com\",\n    \"shapeshift.cash\",\n    \"verifypaxful.com\",\n    \"teslacoin.space\",\n    \"officialairdrop.tech\",\n    \"teslacoin.tumblr.com\",\n    \"supportbinance.890m.com\",\n    \"890m.com\",\n    \"kralken.co\",\n    \"bilttrex.co\",\n    \"bimanrce.com\",\n    \"exrno.eu\",\n    \"polroneix.com\",\n    \"bloclkchain.co\",\n    \"hitlbtc.co\",\n    \"yobitr.net\",\n    \"yobilt.net\",\n    \"xgivex.blogspot.com\",\n    \"populous.network\",\n    \"bianace.online\",\n    \"blockchain-exchange.online\",\n    \"bitterx.online\",\n    \"blftinex.com\",\n    \"bltmian.com\",\n    \"cryptnoator.com\",\n    \"cryptopla.online\",\n    \"exwo.online\",\n    \"kuckion.com\",\n    \"logintwitter.ga\",\n    \"myethecwallet.com\",\n    \"myetherwallet-fix.space\",\n    \"myetherwallet-rlx.space\",\n    \"polnoiex.site\",\n    \"twittergiris.gq\",\n    \"twitterlockeding.ga\",\n    \"twitterlogins.gq\",\n    \"xn--poloiex-kqc.com\",\n    \"xn--myethrewalle-9me.com\",\n    \"xn--myethrewalet-k4b.com\",\n    \"xn--myetherwalet-j4b.com\",\n    \"xn--kuoin-zra.com\",\n    \"xn--bitman-f9a.com\",\n    \"dexlauncch.com\",\n    \"line-crypto.com\",\n    \"etherdelta.icu\",\n    \"xtrony.blogspot.com\",\n    \"bithumbvietnam.com\",\n    \"bithumbvietnam.info\",\n    \"coinbasebonus.co.uk\",\n    \"coinbasebonus.thehostrunner.co.uk\",\n    \"eth-binance.ru\",\n    \"idex-market.ru\",\n    \"idexmarket.ru\",\n    \"mercatox.info\",\n    \"myetherwallet.red\",\n    \"xn--coinx-q51b.com\",\n    \"biinance.online\",\n    \"binance-login.com\",\n    \"binarrce.com\",\n    \"myelherwolett.info\",\n    \"poloniexadvanced.com\",\n    \"poloniexlogin.trade\",\n    \"binance-token.com\",\n    \"binance.com7812686236.space\",\n    \"binance.page\",\n    \"bitlttrex.com\",\n    \"coinsbaseexchange.com\",\n    \"hitbtlc.com\",\n    \"hjjtbtc.com\",\n    \"kraken.site\",\n    \"krarcken.com\",\n    \"myerhetwallet.com\",\n    \"paxfull.com.yontsk.tk\",\n    \"poloniex.com.zandei.online\",\n    \"polonnix.com\",\n    \"polonnix.site\",\n    \"poloniex.com135i478847258477.ml\",\n    \"com135i478847258477.ml\",\n    \"mnyicthervvalliet.com\",\n    \"dexchainevent.com\",\n    \"myethereumwalket.com\",\n    \"bnbdexchaincompetition.com\",\n    \"bnbdexchaincompetition.info\",\n    \"bnbethairdropp.com\",\n    \"dexchaincampaign.com\",\n    \"mniyehtcwallict.com\",\n    \"okexcampaign.info\",\n    \"okexspecialcampaign.info\",\n    \"bnbchaincompetition.info\",\n    \"bnbetherairdropp.com\",\n    \"dexchaincompetition.info\",\n    \"okexspecialcampaign.com\",\n    \"okexcampaign.com\",\n    \"binacampaign.com\",\n    \"dexchaincampaign.info\",\n    \"ethereum-corporation.org\",\n    \"myvolt.site\",\n    \"coindesk-login.com\",\n    \"wwwcoindesk.com\",\n    \"xn--condesk-gw4c.com\",\n    \"coinbase-codepromo.com\",\n    \"coinbase-customer-support.online\",\n    \"coinbase-helpdesk.info\",\n    \"coinbase-support.net\",\n    \"coinbasecustomersupport.info\",\n    \"coinbaseesupport.club\",\n    \"coinbaseesupportservices.club\",\n    \"coinbaselogin.support\",\n    \"coinbasesupport.co.uk\",\n    \"coinbasesupport.online\",\n    \"coinbasesupportnumber.com\",\n    \"localethereum-account.com\",\n    \"myetherwallet.byethost11.com\",\n    \"googl-access.com\",\n    \"binance.com13867347.ml\",\n    \"com13867347.ml\",\n    \"com1735835.gq\",\n    \"binance.com1735835.gq\",\n    \"com56457.ml\",\n    \"binance.com56457.ml\",\n    \"myetherwallet.notextbook.net\",\n    \"sslsecure-verifyid.tk\",\n    \"coinsender.tech\",\n    \"walmartleaf.com\",\n    \"1dex.market\",\n    \"birhumb.com\",\n    \"bitmex1.info\",\n    \"bittrex-io.com\",\n    \"bittrex-oo.com\",\n    \"coinbase-promo.com\",\n    \"coinbasepropromos.com\",\n    \"com12786312634.space\",\n    \"form-myetherwallet.com\",\n    \"hitbtc8.com\",\n    \"hitsbtc.club\",\n    \"loginmicrosoftexcel-online.com\",\n    \"mercatox.club\",\n    \"myetlrewallet.com\",\n    \"poloniex-tm.com\",\n    \"poloniex-x.com\",\n    \"wallet-blockchian.info\",\n    \"wvw-bittrex.com\",\n    \"xn--blockchai-owb.com\",\n    \"xn--blockchin-r2a.com\",\n    \"xn--krake-d8a.com\",\n    \"xn--krken-ucc.com\",\n    \"xn--metherwllet-ife3465g.com\",\n    \"xn--yetherwllet-tv8ex8b.com\",\n    \"giftforfans.website\",\n    \"etherium.org.payment.7t27-srv.site\",\n    \"7t27-srv.site\",\n    \"giveawey.tumblr.com\",\n    \"johnmcaffe.tumblr.com\",\n    \"medium.com.7t27-srv.site\",\n    \"winplatform.pro\",\n    \"icon.cash\",\n    \"xn--dex-uma.market\",\n    \"polonniex.online\",\n    \"polonniex.top\",\n    \"niceihash.com\",\n    \"nicenhash.space\",\n    \"b-crypto.me\",\n    \"apexone.online\",\n    \"moyluchshiyremont.top\",\n    \"pizzaobaldinidostavka.site\",\n    \"binanse.ch\",\n    \"bittrex-web.com\",\n    \"bittrex-ydd.com\",\n    \"hitbtc.website\",\n    \"scris.club\",\n    \"electrun.org\",\n    \"xn--mythwallet-n7ac.com\",\n    \"hitloek.info\",\n    \"myetherwallet-xbmc.space\",\n    \"ethiz.blogspot.com\",\n    \"gi-ve.blogspot.com\",\n    \"elonmuskairdrop.tech\",\n    \"binance.com1367347.ml\",\n    \"binance.com71623781.ga\",\n    \"binance.com76237831.gq\",\n    \"inbox-redirect-binance.com1367347.ml\",\n    \"com1367347.ml\",\n    \"com76237831.gq\",\n    \"com71623781.ga\",\n    \"binance.com1897623.ga\",\n    \"binance.com7816623.gq\",\n    \"binanceexchange.us\",\n    \"binancevietnam.net\",\n    \"cors01.binanceview.com\",\n    \"paxful.support\",\n    \"promobittrex.website\",\n    \"wwv-bittrex.com\",\n    \"wwv-bittrex.com.cp-34.webhostbox.net\",\n    \"xn--biinanc-z8a.com\",\n    \"binancelogin.org\",\n    \"idex.auroradapp.market\",\n    \"auroradapp.market\",\n    \"roadgridequipment.pw\",\n    \"binance.com1786236.ml\",\n    \"binance.com197623462.ml\",\n    \"binanceix.com\",\n    \"meyethcrwallet.com\",\n    \"meyfherwallet.com\",\n    \"meyfherwellet.com\",\n    \"meyhferwellet.com\",\n    \"meythrewellet.com\",\n    \"meythrowallet.com\",\n    \"mychtervvallet.com\",\n    \"mychterwellet.com\",\n    \"shapeshiift.xyz\",\n    \"paxful.com-bitcoin-wallet-trade-escrow.paxfulsecure.com\",\n    \"paxfulsecure.com\",\n    \"mnyicthervallict.com\",\n    \"mnyidthewalliot.com\",\n    \"binchaincampaign.com\",\n    \"binachaincompetition.info\",\n    \"binachaincompetition.com\",\n    \"binacompetition.com\",\n    \"binacompetition.info\",\n    \"firstcrypt.info\",\n    \"binance.com6537261.ml\",\n    \"binance.com762381.cf\",\n    \"com762381.cf\",\n    \"com6537261.ml\",\n    \"com13734.space\",\n    \"vitalik-campaign.xyz\",\n    \"getgift.tech\",\n    \"elongift.com\",\n    \"muskmars.tech\",\n    \"binance.com12754825.ml\",\n    \"binance.com128236.ml\",\n    \"vietnamese-binance.com\",\n    \"vietnam-login-binance.com\",\n    \"vietnam-binance.com\",\n    \"loginviet-binance.com\",\n    \"binance-login-vn.online\",\n    \"com12754825.ml\",\n    \"com12786312634\",\n    \"com1865236.ga\",\n    \"com763271231.gq\",\n    \"com128236.ml\",\n    \"com723781231.online\",\n    \"elon-share.info\",\n    \"ethereum-giveaway.ru\",\n    \"login-blnance.space\",\n    \"send-gift.website\",\n    \"etherium.org.payment.7t24-srv.site\",\n    \"7t24-srv.site\",\n    \"airdrops.technology\",\n    \"myetherwallet-cpt.space\",\n    \"tron-network.info\",\n    \"electrumwallet.org\",\n    \"medium.com.7t23-srv.site\",\n    \"7t23-srv.site\",\n    \"etherium.org.payment.7t23-srv.site\",\n    \"firecrypto.info\",\n    \"bitbakocffice.site\",\n    \"santechstroywalker.site\",\n    \"airdrop-event.com\",\n    \"sgivex.blogspot.com\",\n    \"myetherwallet-shl.space\",\n    \"get.fastcryptogift.com\",\n    \"fastcryptogift.com\",\n    \"poloniex.com.account2fa-login.com\",\n    \"account2fa-login.com\",\n    \"bittrex-login.account2fa-login.com\",\n    \"g-ive.blogspot.com\",\n    \"cryptopromo.justsharedthis.info\",\n    \"btcgive.kissr.com\",\n    \"binan-ceh.com\",\n    \"ibcexofmarket.com\",\n    \"ibexofmark.com\",\n    \"icexofmark.com\",\n    \"iclexmarket.com\",\n    \"iclexofmarket\",\n    \"iclexofmarket.com\",\n    \"widgets.ibexofmark.com\",\n    \"wighfghfh.ibexofmark.com\",\n    \"idex.auroradao.market\",\n    \"auroradao.market\",\n    \"bnbdecentralizedcompetition.com\",\n    \"bnbdecentralizedcompetition.info\",\n    \"bnbdecentralizedevent.info\",\n    \"bnbethairdropp.info\",\n    \"bnbethereumairdropp.com\",\n    \"bnbethereumairdroppevent.com\",\n    \"bortnarnce.com\",\n    \"check1.pw\",\n    \"decentralizedspecialevent.info\",\n    \"mniyehtcwalliot.com\",\n    \"mnyicthervallat.com\",\n    \"mnyicthervvallet.com\",\n    \"mnyicthervwvallct.com\",\n    \"getyourcoins.org\",\n    \"binance-giveaway.webcindario.com\",\n    \"gift-today.website\",\n    \"cryptopromo.kissr.com\",\n    \"etherium.org.payment.7t21-srv.site\",\n    \"7t21-srv.site\",\n    \"top-deals.pro\",\n    \"medium.com.7t21-srv.site\",\n    \"decentralizedbitcoincampaign.info\",\n    \"bittrexl.in.us.bix-l.com\",\n    \"bix-l.com\",\n    \"binance.com18363462.ml\",\n    \"binancebtcspecial.com\",\n    \"brivnarnce.com\",\n    \"brovinamce.com\",\n    \"brovnarnce.com\",\n    \"brtvnarnce.com\",\n    \"cpanel.bittrex1.com\",\n    \"decentralizedspecialcampaign.com\",\n    \"decentralizedspecialevent.com\",\n    \"hitbtc.com.co\",\n    \"mietherwallet.com\",\n    \"myeitherwallett.com\",\n    \"myencryptwallet.com\",\n    \"myetherwellet.com\",\n    \"myethewallert.com\",\n    \"shapeshift.biz\",\n    \"bjttrex.com\",\n    \"id-ex.market\",\n    \"iidex-market.eu\",\n    \"myetherwallet.biz\",\n    \"myetherwallet.auth.slgnmsg.info\",\n    \"slgnmsg.info\",\n    \"spectrocoinlog-in.com\",\n    \"giftethnow.website\",\n    \"etherium.org.payment.7t20-srv.site\",\n    \"7t20-srv.site\",\n    \"x-gives.blogspot.com\",\n    \"ethgive.kissr.com\",\n    \"ico-neon.exchange\",\n    \"myetherairdrop.com\",\n    \"myetnerwallet.com.send-status.info\",\n    \"send-status.info\",\n    \"paxful.com.pl\",\n    \"myetherwallet-id.space\",\n    \"eth-databasecontract.website\",\n    \"geteos.eu\",\n    \"binance-campaign.info\",\n    \"binance-campaign.site\",\n    \"binance-exchange.cricket\",\n    \"binance-exchange.fun\",\n    \"binance-https.com\",\n    \"binance.com-log-in.googl-access.com\",\n    \"bittrex-log-in.com\",\n    \"bittrex-login.asset2fa-exchange.com\",\n    \"bittrex.asset2fa-exchange.com\",\n    \"bittrex.com.asset2fa-exchange.com\",\n    \"conidase.com\",\n    \"mjetherwattet.com\",\n    \"us.bittrex.asset2fa-exchange.com\",\n    \"us.bittrex.com.asset2fa-exchange.com\",\n    \"3dayprofits.info\",\n    \"etherium.org.payment.7d19-srv.site\",\n    \"7d19-srv.site\",\n    \"atmbtc.biz\",\n    \"best-gift.website\",\n    \"airdrop.com.de\",\n    \"vitalikpromo.eu\",\n    \"medium.byethost10.com\",\n    \"medium.com.7d19-srv.site\",\n    \"promo2.etherbonus.top\",\n    \"etherbonus.top\",\n    \"xn--hibtc-leb.com\",\n    \"hitbtc-eu.com\",\n    \"hitbtc.cam\",\n    \"get-5k-promo.website\",\n    \"freshbonus.eu\",\n    \"e-gives.blogspot.com\",\n    \"etherium.org.payment.7d18-srv.site\",\n    \"7d18-srv.site\",\n    \"airdrops.life\",\n    \"binance-com-clud.webcindario.com\",\n    \"go7.giftether.top\",\n    \"hitbtc.li\",\n    \"xn--spectroconn-7zb.com\",\n    \"paxfullwallet.com\",\n    \"user.paxfulpolicy.com\",\n    \"paxfulpolicy.com\",\n    \"paxful.com.balums.gq\",\n    \"forkdeilta.app\",\n    \"xn--dex-tta.market\",\n    \"verify.xn--mytherwalet-3qb10c.com\",\n    \"getfreeethhh.blogspot.com\",\n    \"getfreebitcoin.network\",\n    \"coinaction.xyz\",\n    \"cryptoxfan.info\",\n    \"go6.giftether.top\",\n    \"binance-giveawaypromo.banance.xyz\",\n    \"banance.xyz\",\n    \"mega-airdrop.website\",\n    \"joinnow.info\",\n    \"binance-campaign.com\",\n    \"binance-eth.club\",\n    \"binanceeth-campaign.com\",\n    \"binanceeth-competition.com\",\n    \"binanceethergiveaway.com\",\n    \"binanco.live\",\n    \"ethervvallet.com\",\n    \"myctherwallet.net\",\n    \"go5.giftether.top\",\n    \"etherium.org.payment.7d17-srv.site\",\n    \"7d17-srv.site\",\n    \"bigbonus.eu\",\n    \"medium.com.7d17-srv.site\",\n    \"getnowcrypto.com\",\n    \"bittcrex.com\",\n    \"myetherwallet-knt.space\",\n    \"myetherwallet-knc.space\",\n    \"etherdelta.press\",\n    \"xn--paxfl-nva.com\",\n    \"goodaction.eu\",\n    \"coinpromo.xyz\",\n    \"september-bonus.us\",\n    \"getbonus.eu\",\n    \"airdrop-gift.website\",\n    \"muskonline.tech\",\n    \"cryptogivng.blogspot.com\",\n    \"today-eth.pw\",\n    \"binance-bonus.club\",\n    \"binance-bonus.net\",\n    \"binance-promo.org\",\n    \"binance-t.com\",\n    \"binanceethereumairdroppevent.info\",\n    \"binancepromos.live\",\n    \"blockchain-secure.info\",\n    \"bonusbinance.org\",\n    \"i-dex.market\",\n    \"idex-rnarket.info\",\n    \"idex.markel.transactions-wallet.info\",\n    \"myetlherwallelt.com\",\n    \"mymanero.com\",\n    \"gramnetwork.net\",\n    \"topcryptogift.org\",\n    \"payetherer20.000webhostapp.com\",\n    \"vggs.info\",\n    \"go4.giftether.top\",\n    \"etherium.org.payment.7d16-srv.site\",\n    \"payment.7d16-srv.site\",\n    \"givingsaway.blogspot.com\",\n    \"msg.xn--mytherwalet-3qb10c.com\",\n    \"myetherwallet.auth.sgnmsg.com\",\n    \"sgnmsg.com\",\n    \"hitbtcspace.herokuapp.com\",\n    \"2fa-paxful.com\",\n    \"eherpro.tumblr.com\",\n    \"smart-gift.website\",\n    \"coinshare.xyz\",\n    \"buterintoday.eu\",\n    \"tronics.tech\",\n    \"giveaway-medium.top\",\n    \"tesla-giveaway.live\",\n    \"myetherwallet-knb.space\",\n    \"wallets-crypto-bridge.org\",\n    \"coinbaseblogiveawayhg.tumblr.com\",\n    \"binance-ethpromo.org\",\n    \"binance.fail\",\n    \"binancevault.com\",\n    \"get-btc-binance.com\",\n    \"get-eth-binance.com\",\n    \"myetherwallet-sign.fun\",\n    \"teammyetherwallet.com\",\n    \"xn--dex-yma.market\",\n    \"trxgold.io\",\n    \"signature.xn--mytherwalet-3qb10c.com\",\n    \"blockchian-login.info\",\n    \"login-blokchain.com\",\n    \"login-blockchian.net\",\n    \"blockchian-wallets.com\",\n    \"blockchian.ca\",\n    \"blockchian-wallet.com\",\n    \"blockchian-login.com\",\n    \"idex-market.pro\",\n    \"biboyx.com\",\n    \"bnb-ethcampaign.com\",\n    \"cryptobtc.club\",\n    \"perlin.global\",\n    \"tesla-giveaways.space\",\n    \"top-ethereum.info\",\n    \"mnaxy.blogspot.com\",\n    \"go3.giftether.top\",\n    \"etherium.org.payment.promoaction.site\",\n    \"promoaction.site\",\n    \"airdropbtc.tech\",\n    \"secure.topcoinsgift.com\",\n    \"topcoinsgift.com\",\n    \"musk-crypto.info\",\n    \"5k-gift.website\",\n    \"platform-give.com\",\n    \"ethgiveaway.co.uk\",\n    \"bi-nancer.com\",\n    \"binance-eth-competition.com\",\n    \"binance-ether.club\",\n    \"binance-ethereum.com\",\n    \"binance-ethereum.info\",\n    \"binance-ethereum.tech\",\n    \"binance-ethevent.net\",\n    \"binance-ethevent.org\",\n    \"binance-x.club\",\n    \"binancebonus.net\",\n    \"binancebonus.org\",\n    \"binanceeth.club\",\n    \"binanceethcompetition.com\",\n    \"binanceether.club\",\n    \"binanceethereum.club\",\n    \"binancepromo.club\",\n    \"binancespecialcompetition.com\",\n    \"binancespecialethcompetition.com\",\n    \"binanceth.club\",\n    \"binancether.club\",\n    \"binancethereum.club\",\n    \"eth-binance.club\",\n    \"ethbinance.club\",\n    \"ethcompetitionbinance.com\",\n    \"ether-binance.club\",\n    \"etherbinance.club\",\n    \"myetherwallet.com.ip13.icu\",\n    \"myetherwelet.net\",\n    \"myetherwolllet.com\",\n    \"myethswallet.club\",\n    \"suportbinance.com\",\n    \"tokens.myetherwailet.cf\",\n    \"medium-coinbaseblog.tumblr.com\",\n    \"safe.geteasycrypto.com\",\n    \"geteasycrypto.com\",\n    \"lixozy.blogspot.com\",\n    \"eloncrypto.info\",\n    \"mediumcoinbase.tumblr.com\",\n    \"cryptoeth.live\",\n    \"crypto-win.club\",\n    \"crypto-medium.com\",\n    \"getairdrop.eu\",\n    \"sending-smartcontract.website\",\n    \"idex-market.exchange\",\n    \"protect.minedcoins.online\",\n    \"minedcoins.online\",\n    \"go2.giftether.top\",\n    \"contract-verify.space\",\n    \"cryptogift.cn\",\n    \"ethergifts.top\",\n    \"medium-gifts.top\",\n    \"get.officialcryptogiveaway.com\",\n    \"officialcryptogiveaway.com\",\n    \"cvifex.blogspot.com\",\n    \"ethereum-ltd.net\",\n    \"giveaway.ether-prize.com\",\n    \"titan-g.pro\",\n    \"coinbaseblogiveawaynews.tumblr.com\",\n    \"eth-gift.wixsite.com\",\n    \"btc-gift.wixsite.com\",\n    \"rpmson-ethcampaign.com\",\n    \"444eth.ml\",\n    \"give-th.blogspot.com\",\n    \"applex1.com\",\n    \"riklex.blogspot.com\",\n    \"ethpromo.xyz\",\n    \"bitblender.me\",\n    \"safe.paynowcoins.com\",\n    \"paynowcoins.com\",\n    \"go1.giftether.top\",\n    \"enjoy.topcryptogift.com\",\n    \"topcryptogift.com\",\n    \"bigdrop.cn\",\n    \"sekakux.blogspot.com\",\n    \"4ever.fun\",\n    \"thetrey.net\",\n    \"myeclientsidewallet.com\",\n    \"bnbethercompetitionlaunch.com\",\n    \"ethereum-corporation.com\",\n    \"binan-ce.com\",\n    \"binance.security\",\n    \"binoance.com\",\n    \"ethereum-binance.club\",\n    \"etheventbinance.org\",\n    \"idex.center\",\n    \"mmyethereumwallet.com\",\n    \"myethereumwaller.com\",\n    \"myethereumwwallet.com\",\n    \"myethereuumwallet.com\",\n    \"myethereymwallet.com\",\n    \"myetherreumwallet.com\",\n    \"myetherrumwallet.com\",\n    \"myetherumeallet.com\",\n    \"myetherummwallet.com\",\n    \"myetherumwaallet.com\",\n    \"myetherumwaklet.com\",\n    \"myetherumwalelt.com\",\n    \"myetherumwalle.com\",\n    \"myetherumwalleet.com\",\n    \"myetherumwaller.com\",\n    \"myetherumwalley.com\",\n    \"myetherumwallrt.com\",\n    \"myetherumwallwt.com\",\n    \"myetherumwlalet.com\",\n    \"myetherumwsllet.com\",\n    \"myetherumwwallet.com\",\n    \"myetherunwallet.com\",\n    \"myetheruumwallet.com\",\n    \"myetheruwmallet.com\",\n    \"myetherymwallet.com\",\n    \"myetheteumwallet.com\",\n    \"myethetumwallet.com\",\n    \"myetheumwallet.com\",\n    \"myetheurmwallet.com\",\n    \"myethhereumwallet.com\",\n    \"myethherumwallet.com\",\n    \"myethrrumwallet.com\",\n    \"myethrumwallet.com\",\n    \"myetterwalet.com\",\n    \"myetthereumwallet.com\",\n    \"verify-binance.com\",\n    \"earn.dailydivs.com\",\n    \"safe.minedtokens.com\",\n    \"smartsend-5000.website\",\n    \"airdropeth.tech\",\n    \"imyetherbonus.com\",\n    \"minedtokens.com\",\n    \"crypto-promo.org\",\n    \"coinbasesecuritytokens.com\",\n    \"coinbasepay.info\",\n    \"hitbtcrecovery.com\",\n    \"hitbtc-adv.com\",\n    \"gemini-wallet.com\",\n    \"gemini2fa.com\",\n    \"geminiaccount.com\",\n    \"binantlabsinfo.com\",\n    \"binanetlabsinfo.com\",\n    \"mymonerocom.com\",\n    \"binantrustwaiiet.com\",\n    \"binantrustwailet.com\",\n    \"binantrustwaliet.com\",\n    \"binancetrustwaiiet.com\",\n    \"binancetrustwailet.com\",\n    \"binancetrustwaliet.com\",\n    \"binanctlabsinfo.com\",\n    \"binanctrustwaiiet.com\",\n    \"binanctrustwailet.com\",\n    \"binanctrustwaliet.com\",\n    \"binance-accounts.com\",\n    \"binatrustwaiiet.com\",\n    \"binatrustwailet.com\",\n    \"binatrustwaliet.com\",\n    \"bintrustwaiiet.com\",\n    \"bintrustwailet.com\",\n    \"bintrustwaliet.com\",\n    \"ubex.us\",\n    \"bnbdex-ethcampaign.com\",\n    \"binance-ether.online\",\n    \"binance.win\",\n    \"binanceethevent.net\",\n    \"etheventbinance.net\",\n    \"metherumwallet.com\",\n    \"mmyetherumwallet.com\",\n    \"mtetherumwallet.com\",\n    \"muetherumwallet.com\",\n    \"myeethereumwallet.com\",\n    \"myeherumwallet.com\",\n    \"myerherumwallet.com\",\n    \"myeterumwallet.com\",\n    \"myetgerumwallet.com\",\n    \"myetheeeumwallet.com\",\n    \"myetheereumwallet.com\",\n    \"myetheerumwallet.com\",\n    \"myethereeumwallet.com\",\n    \"myethereimwallet.com\",\n    \"myethereumeallet.com\",\n    \"myethereummwallet.com\",\n    \"myethereumqallet.com\",\n    \"myethereumwaallet.com\",\n    \"myetherimwallet.com\",\n    \"myethermuwallet.com\",\n    \"myetheswallets.org\",\n    \"myethwrumwallet.com\",\n    \"myetjerumwallet.com\",\n    \"myetnerwallet-com.review\",\n    \"myetterwelllet.com\",\n    \"myettherumwallet.com\",\n    \"myeyherumwallet.com\",\n    \"myrtherumwallet.com\",\n    \"mytherumwallet.com\",\n    \"mywtherumwallet.com\",\n    \"myyetherumwallet.com\",\n    \"nyethereumwallet.com\",\n    \"nyetherumwallet.com\",\n    \"ymetherumwallet.com\",\n    \"airdrops-exchange.com\",\n    \"buterindrop.eu\",\n    \"campaign.etheraction.in\",\n    \"etheraction.in\",\n    \"ethtake.icu\",\n    \"cryptocurrency-giveaway.com\",\n    \"mcafee.coolpage.biz\",\n    \"september-event.us\",\n    \"september-promo.us\",\n    \"freeethereum500.000webhostapp.com\",\n    \"myetherwallet.com.webwallet-view.info\",\n    \"webwallet-view.info\",\n    \"binance-eth.net\",\n    \"binance-ether.net\",\n    \"binance-n.com\",\n    \"binanceeth.org\",\n    \"eth-binance.net\",\n    \"ethereumwallets.tech\",\n    \"meytherwallet.net\",\n    \"myetheforwallet.com\",\n    \"myetherwallet.com.update.privatekey.wallet-crypto-member.com\",\n    \"myetherwallet.update.system.crypto-wallet-member.com\",\n    \"myethswallet.net\",\n    \"myethswallet.top\",\n    \"myettwallet.bid\",\n    \"myyetherwallet.online\",\n    \"bnbethspecialcampaigns.com\",\n    \"bnbchaineth.com\",\n    \"bnbethchain.com\",\n    \"bnbdexethlaunch.com\",\n    \"bnbethpromotion.com\",\n    \"binanethpromotion.com\",\n    \"bnbpromotion.com\",\n    \"bnbspecialcampaign.com\",\n    \"bnbdexcampaign.com\",\n    \"bnbexchangedex.com\",\n    \"bnbexchangespecialcampaign.com\",\n    \"bnbexchangespecial.com\",\n    \"bnbdexethcampaign.com\",\n    \"bnbexchangeethspecialcampaign.com\",\n    \"bnbexchangespecialethcampaign.com\",\n    \"bnbethexchangespecial.com\",\n    \"bonus.client-stellarterm.com\",\n    \"client-stellarterm.com\",\n    \"mixprize.cn\",\n    \"medium-secure.com\",\n    \"ginexis.blogspot.com\",\n    \"giftsatoshi.space\",\n    \"myethcrwallet.net\",\n    \"myetherewa11ets.com\",\n    \"mvyetherwallet.com\",\n    \"myehterwallets.xyz\",\n    \"xn--meherwallet-yb9eup.com\",\n    \"login-blockchain.top\",\n    \"login-blockchain.gq\",\n    \"eosauthority-accountpolicy.omastral.org\",\n    \"claim.paysafecoins.com\",\n    \"paysafecoins.com\",\n    \"gooddrop.cn\",\n    \"giveaway-eth-btc.euweb.cz\",\n    \"eth4312left.pw\",\n    \"secure.topcoingift.com\",\n    \"topcoingift.com\",\n    \"ethgold.pro\",\n    \"send-smartcontract.space\",\n    \"getyoureth.network\",\n    \"geteth.pro\",\n    \"lopixy.blogspot.com\",\n    \"zilliqagold.co\",\n    \"xn--tesl-tzb.com\",\n    \"litecoinone.org\",\n    \"medium-mcafee.top\",\n    \"binanceth.net\",\n    \"tesla-giveaways.org\",\n    \"september-bonuss.com\",\n    \"ethersclaim.blogspot.com\",\n    \"free.giftether.top\",\n    \"giftether.top\",\n    \"get-bonus.online\",\n    \"getether.eu\",\n    \"easydrop.pro\",\n    \"claim-event-eth.org.uk\",\n    \"vecimax.blogspot.com\",\n    \"ethpromo-binance.org\",\n    \"myetherbonus.net\",\n    \"get.safepaycoin.com\",\n    \"safepaycoin.com\",\n    \"ethereum4ever.com\",\n    \"contagion.cf\",\n    \"september-bonus.com\",\n    \"ethereum-airdrop.tumblr.com\",\n    \"giveaway.at.ua\",\n    \"myeth-claim.com\",\n    \"ethereumvert.com\",\n    \"mediumposting.vip\",\n    \"give-away.co.uk\",\n    \"eth4323left.pw\",\n    \"safe.coinspaynow.com\",\n    \"coinspaynow.com\",\n    \"mixgift.top\",\n    \"blog-medium.com\",\n    \"etherdelta.website\",\n    \"blockhaine.blogspot.com\",\n    \"geteth.cn\",\n    \"medium.com.7a4c7b234069.site\",\n    \"etherium.org.7a4c7b234069.site\",\n    \"7a4c7b234069.site\",\n    \"elctrurn.org\",\n    \"jaxx.one\",\n    \"lkraken.xbtxv.com\",\n    \"bestbuildercompany.pw\",\n    \"i-idexmarket.com\",\n    \"myetherewallet.ga\",\n    \"myetherwallet.com.signmessage.info\",\n    \"myethrewallet.services\",\n    \"toptireshop.pw\",\n    \"indexmarx.com\",\n    \"myetherewallet.online\",\n    \"myetherrwallet.com\",\n    \"myetherrwallet.signmessage.xyz\",\n    \"myetherwallet-hydro.space\",\n    \"myetherwallet.com.verifiy.icu\",\n    \"myetherwallett.mining24.info\",\n    \"myetherwallwet.com\",\n    \"myethherwallet.com\",\n    \"myethrwallet.com\",\n    \"musk-prize.info\",\n    \"medium-io.site\",\n    \"claim.safepaycoins.com\",\n    \"safepaycoins.com\",\n    \"airdrop-exchange.com\",\n    \"secure.eth-claim.online\",\n    \"eth-claim.online\",\n    \"airdrops.investments\",\n    \"medium.in.net\",\n    \"eth5321left.pw\",\n    \"send-transaction.online\",\n    \"medium-smartcontract.space\",\n    \"access-myetherwallet.com\",\n    \"mew-myetherwallet.com\",\n    \"meythereumwallet.com\",\n    \"mineetherwallet.com\",\n    \"myehtereumwallet.com\",\n    \"myetehreumwallet.com\",\n    \"myetheremuwallet.com\",\n    \"myethereumwallte.com\",\n    \"myethereuwmallet.com\",\n    \"myetherwailet.online\",\n    \"myetherwallats.xyz\",\n    \"myetherwallet.com.signmessage.xyz\",\n    \"myetherwallet.wiki\",\n    \"myetherwallwt.com\",\n    \"myethetwallet.com\",\n    \"mytehereumwallet.com\",\n    \"wallet-myetherwallet.com\",\n    \"login-coinone-co-kr.com\",\n    \"pumpkinpro.co\",\n    \"panemicav2.rf.gd\",\n    \"ethbonus.live\",\n    \"ethactive.online\",\n    \"eth-take.com\",\n    \"crypto-giveaway.xyz\",\n    \"ether-prize.com\",\n    \"smart-contract.space\",\n    \"safe.justgetcrypto.com\",\n    \"justgetcrypto.com\",\n    \"september-event.com\",\n    \"home-myether.top\",\n    \"ethcoindesk.blogspot.com\",\n    \"medium-airdrop.net\",\n    \"airdrop.updog.co\",\n    \"send.secureth.host\",\n    \"secureth.host\",\n    \"mixdrop.eu\",\n    \"giveaway-btc.com\",\n    \"binmeds.blogspot.com\",\n    \"jidex.market\",\n    \"mljetherwallet.com\",\n    \"myehtermallert.com\",\n    \"myetheeumwallet.com\",\n    \"myethereumallet.com\",\n    \"myethereumwalet.com\",\n    \"myethereumwalle.com\",\n    \"myethereumwallet.co\",\n    \"myethereumwallt.com\",\n    \"myethereumwllet.com\",\n    \"myetheriwallet.online\",\n    \"myetherrwallet.mining24.info\",\n    \"myetherrwallnet.com\",\n    \"myetherrwallnet.mining24.info\",\n    \"myetherwalets.site\",\n    \"myetherwallats.club\",\n    \"myetherwallats.online\",\n    \"myetherwalle-t.com\",\n    \"myetherwalle-t.ve-ry.club\",\n    \"myetherwallet-gram.website\",\n    \"myetherwallet.com.gpg.services\",\n    \"myetherwallet.signgpgmessage.co\",\n    \"myethrewallet.club\",\n    \"myettherwalet.net\",\n    \"mythereumwallet.com\",\n    \"youretherwallet.io\",\n    \"ethmixdrop.pro\",\n    \"axibovs.blogspot.com\",\n    \"send.ethparty.us\",\n    \"ethparty.us\",\n    \"ethaway.000webhostapp.com\",\n    \"blognance.blogspot.com\",\n    \"september-promo.com\",\n    \"cryptoairdrop.center\",\n    \"air-drop.website\",\n    \"tezbox.net\",\n    \"wetimox.blogspot.com\",\n    \"buterinpromo.cn\",\n    \"eth24win.co.nf\",\n    \"airdrop-portal.com\",\n    \"give-eth.biz\",\n    \"medium-promos.xyz\",\n    \"buterinpromo.live\",\n    \"ethclaim.online\",\n    \"mywindorwallert.site\",\n    \"binancegiveaway.com\",\n    \"myethervvellet.co\",\n    \"myethherwalletr.top\",\n    \"xn--myethrewalle-xoc.com\",\n    \"xn--myethrewaet-z3ba.com\",\n    \"mevetherwalletr.site\",\n    \"mvetnerwalletr.website\",\n    \"mevetherwalletr.com\",\n    \"myvetherwallets.com\",\n    \"pumpkinpro.io\",\n    \"binancethereum.com\",\n    \"mailbinance.com\",\n    \"btc-bonus-live2-binance.com\",\n    \"monero-my.com\",\n    \"eth4123left.pw\",\n    \"xlblogz.blogspot.com\",\n    \"eth-promo.borec.cz\",\n    \"ether-take.org\",\n    \"ethergot.xyz\",\n    \"crypto-giveaway.net\",\n    \"etherprize.net\",\n    \"ethpromzone.space\",\n    \"myetherwallet.com.ip14.icu\",\n    \"ip14.icu\",\n    \"statusico.com\",\n    \"redeem-myetherwallet.pw\",\n    \"omisegogold.io\",\n    \"claim-wallet.com\",\n    \"bhaskar.dx.am\",\n    \"ethertoken.online\",\n    \"mywindorwallert.space\",\n    \"binance-ether.org\",\n    \"neostracker.com\",\n    \"elonmusk.ltd\",\n    \"elonmusk.fund\",\n    \"loginbinance-com.umbler.net\",\n    \"selleth.io\",\n    \"blokclnain.com\",\n    \"giftreturn.mysteria.cz\",\n    \"ethdrop.cn\",\n    \"giveaways24.info\",\n    \"airdrop-live.com\",\n    \"grijub.blogspot.com\",\n    \"etherdrop.space\",\n    \"infoclaimeth.ucoz.org\",\n    \"secure.ethaccess.online\",\n    \"ethaccess.online\",\n    \"tesla.center\",\n    \"go.payeth.online\",\n    \"payeth.online\",\n    \"crypto-exchange.ro\",\n    \"ethbonus.cn\",\n    \"claim-here.com\",\n    \"hizytox.blogspot.com\",\n    \"claim-event-eth.biz\",\n    \"localethereum-support.com\",\n    \"zilliqa.plus\",\n    \"claim-giftwaves.com\",\n    \"pandemica.online\",\n    \"btcdrop.cn\",\n    \"eth-bonus-live-binance.com\",\n    \"ethbinance.org\",\n    \"xn--bockchain-0sb.com\",\n    \"myetherwalllet.xyz\",\n    \"myetherswallet.website\",\n    \"blockchalh.com\",\n    \"blokclhain.com\",\n    \"blokclnaln.com\",\n    \"blockchaijn.com\",\n    \"blockchatn.com\",\n    \"xn--blockchai-3vb.com\",\n    \"xn--blockchai-t6a.com\",\n    \"blockclhain.in\",\n    \"blockchallns.info\",\n    \"claim-nowgift.com\",\n    \"air-drop-ethmark.website\",\n    \"ethboom.eu\",\n    \"dontmiss.info\",\n    \"top-ethereum.net\",\n    \"airdrops.services\",\n    \"ethereum-award.club\",\n    \"cryptocurrency-gift.tumblr.com\",\n    \"secure.getcryptogift.com\",\n    \"getcryptogift.com\",\n    \"ethboom.io\",\n    \"ethbinance.blogspot.com\",\n    \"ether-airdrop-promo.info\",\n    \"medium-ether-airdrop.net\",\n    \"iost.gift\",\n    \"ethactivate.com\",\n    \"medium-promo.xyz\",\n    \"access.eth-access.com\",\n    \"eth-access.com\",\n    \"secure.btcethgoldmine.com\",\n    \"btcethgoldmine.com\",\n    \"claim.ethsx.space\",\n    \"ethsx.space\",\n    \"asktollfree.com\",\n    \"binance-exchange.online\",\n    \"binance-exchange.xyz\",\n    \"myetherwallet-wab.space\",\n    \"myetherwallet.review\",\n    \"myethrewallel.com\",\n    \"binance-lgin.com\",\n    \"ibx-l.com\",\n    \"mvetnerwalletr.online\",\n    \"mvetnerwalletr.site\",\n    \"mvyetherwallett.online\",\n    \"xn--methewallet-v48e1x.com\",\n    \"info-myetherwallet.com\",\n    \"xn--myeherwllet-wte7564g.com\",\n    \"enternow.info\",\n    \"claim-event-eth.com\",\n    \"claim-giveaway.club\",\n    \"binabins.blogspot.com\",\n    \"medium-ethereum-promo.info\",\n    \"ethereum-bonus.info\",\n    \"ethereum-event-promotion.org.uk\",\n    \"jblagz.blogspot.com\",\n    \"event-eth.biz\",\n    \"ethereumbonus.ru\",\n    \"xn--cryptonaor-hcc.com\",\n    \"poloni-ex.com\",\n    \"xn--binanc-gpc.com\",\n    \"accountlogin2fa.com\",\n    \"ethpromo10.000webhostapp.com\",\n    \"digitalasset-app.com\",\n    \"log-in-binance.com\",\n    \"myetherwallat.club\",\n    \"myetherwallet.co.nz\",\n    \"myethforkwallet.com.ru\",\n    \"myethherwalletr.com\",\n    \"ww25.myethereum.info\",\n    \"myethswalet.com\",\n    \"xn--myethrewallt-fwb.com\",\n    \"view-webwallet.info\",\n    \"myetnerwallet.com.view-webwallet.info\",\n    \"lbitmex-in.com\",\n    \"myetalonwindow.info\",\n    \"bitmex-in.co\",\n    \"airdrop-eth.website\",\n    \"ethereumpromo.io\",\n    \"ethreturn.euweb.cz\",\n    \"bonus-claim.xf.cz\",\n    \"eth-claim.info\",\n    \"access.ethsupply.com\",\n    \"ethsupply.com\",\n    \"ethactive.com\",\n    \"ltc-event-now.xyz\",\n    \"biltmex.com\",\n    \"lbtsx.com\",\n    \"xn--bimex-leb.com\",\n    \"bitmex-login.com\",\n    \"binanblog.blogspot.com\",\n    \"etherfast.eu\",\n    \"ethreum.ru\",\n    \"eth-official.fund\",\n    \"bonuseth.top\",\n    \"binance-eth-giveaways.online\",\n    \"returneth.webz.cz\",\n    \"exchange-airdrop.com\",\n    \"ether-reward.info\",\n    \"medium-airdrop.website\",\n    \"eth-miner.info\",\n    \"tron-event.network\",\n    \"ether5000.in\",\n    \"efiriumgiveaway.tk\",\n    \"tedjang68.wixsite.com\",\n    \"ethgivewayofficial.info\",\n    \"giveawaybinance.com\",\n    \"promoeth.000webhostapp.com\",\n    \"imdex.market\",\n    \"official-give-away.tumblr.com\",\n    \"twgram.info\",\n    \"ether-claim.net\",\n    \"airdropvert.info\",\n    \"bigcryptogift.net\",\n    \"eth-give.io\",\n    \"mcafeepromo.xyz\",\n    \"crypto-gifts.ml\",\n    \"amazing-smartcontract.space\",\n    \"elon-shares.info\",\n    \"blogsbina.blogspot.com\",\n    \"medium-com.website\",\n    \"big-giveaway.xf.cz\",\n    \"cryptodrop.eu\",\n    \"binc-blog.blogspot.com\",\n    \"ethfreegiveaway.ga\",\n    \"app-1524336311.000webhostapp.com\",\n    \"etherium-com.site\",\n    \"bonuseth10.000webhostapp.com\",\n    \"medium-ethereum-promo.biz\",\n    \"tokensale.ws\",\n    \"google.com.tokensale.ws\",\n    \"google-coin.io\",\n    \"airdrop-binance.com\",\n    \"auroradao.co.uk\",\n    \"binanceethereum.com\",\n    \"etherwalletlogin.club\",\n    \"etherwalletlogin.online\",\n    \"httpsmyetherwallet.pw\",\n    \"idex.marketing\",\n    \"myelherwallet.co\",\n    \"myetherlwaliet.info\",\n    \"myetherswallet.site\",\n    \"myetherwalletly.com\",\n    \"myetherwallets.live\",\n    \"myethrwallet.com.co\",\n    \"idexmark.online\",\n    \"eth-gifting.com\",\n    \"ethereum-bonus.biz\",\n    \"bigcryptogift.borec.cz\",\n    \"website-events.website\",\n    \"satoshilite-eth.tumblr.com\",\n    \"stellarterm.org\",\n    \"giftseth10.000webhostapp.com\",\n    \"promoeth10.000webhostapp.com\",\n    \"xn--myethrewllet-jbb.com\",\n    \"xls-log.com\",\n    \"hitbtc1.website\",\n    \"promo-giving.ga\",\n    \"mediumlast.ml\",\n    \"ethereumbonus.net\",\n    \"secure-eth.info\",\n    \"ethfs.blogspot.com\",\n    \"bloggercom.info\",\n    \"nblogiz.blogspot.com\",\n    \"secure2.ethrewarding.com\",\n    \"bigcryptogift.org\",\n    \"mudium.xyz\",\n    \"ethereum-gift.site\",\n    \"claimeth.info\",\n    \"go.ethsec.us\",\n    \"ethsec.us\",\n    \"eth-claim.pw\",\n    \"xn--tronscn-mwa.com\",\n    \"tron-scan.info\",\n    \"ethereum-foundation.info\",\n    \"bigcryptogift.info\",\n    \"claim-binance.com\",\n    \"bitcashout.wixsite.com\",\n    \"get.safepaycrypto.com\",\n    \"safepaycrypto.com\",\n    \"aeternity.click\",\n    \"airdrop-event.website\",\n    \"claimeth10.000webhostapp.com\",\n    \"cryptoprize.in\",\n    \"coinbase.tx-pr0.com\",\n    \"tx-pr0.com\",\n    \"exploretransactions.info\",\n    \"binahce.net\",\n    \"blockcnalh.com\",\n    \"blockcnaln.com\",\n    \"bihahce.net\",\n    \"biockchain.co\",\n    \"blt-mex.com\",\n    \"kueoin.com\",\n    \"bittreq.com\",\n    \"bjockchain.com\",\n    \"blockcham.com\",\n    \"blockclnam.com\",\n    \"maytherwallet.com\",\n    \"bjockchajn.com\",\n    \"exmiu.com\",\n    \"kuqoin.com\",\n    \"nyethermallet.com\",\n    \"poionlex.com\",\n    \"blttinex.com\",\n    \"myetnermallet.com\",\n    \"bietmex.com\",\n    \"kucoien.com\",\n    \"kucoein.com\",\n    \"verify.10000eth.pro\",\n    \"10000eth.pro\",\n    \"eth-twitter.com\",\n    \"ethcap.info\",\n    \"gift-promo.wz.cz\",\n    \"vitd1.info\",\n    \"reblogiz.blogspot.com\",\n    \"promo-ether.org\",\n    \"ethereum-promo.net\",\n    \"ethereumpromo.eu\",\n    \"get.bigcryptogift.com\",\n    \"bigcryptogift.com\",\n    \"exchanges.claims\",\n    \"btc-promo.xf.cz\",\n    \"ethpromogiving.com\",\n    \"ethpromogiving.net\",\n    \"ethpromosend.net\",\n    \"ethpromodonate.com\",\n    \"ethpromogive.info\",\n    \"ethpromoget.info\",\n    \"ethpromotake.info\",\n    \"ethpromogivenow.info\",\n    \"theethpromogive.info\",\n    \"ethpromogiving.info\",\n    \"ethpromo-give.org\",\n    \"ethpromogive.org\",\n    \"ethpromoget.org\",\n    \"ethtw.info\",\n    \"ethertake.org\",\n    \"ethereum-giveaway.czweb.org\",\n    \"ethshift.website\",\n    \"gathereth.com\",\n    \"hugedrop.eu\",\n    \"ethpromo-give.info\",\n    \"elonmusk.racing\",\n    \"hitbtc.cc\",\n    \"hitb-tco.com\",\n    \"myethervvallet.pw\",\n    \"myetherwallet.co.za\",\n    \"myetherwallett.fhapp.xyz\",\n    \"web-binance.com\",\n    \"xn--bittrxx-vya.com\",\n    \"memonero.co\",\n    \"walletverify.info\",\n    \"myetherwallet.com.walletverify.info\",\n    \"myetherwwllet.github.io\",\n    \"eth-secure.top\",\n    \"freetokens.online\",\n    \"ether-promo.biz\",\n    \"medium-ether-blog.info\",\n    \"eth-return-now.borec.cz\",\n    \"etheasydrop.eu\",\n    \"new-myethewallet-1a.com\",\n    \"mewewallet.info\",\n    \"electrumwallet.io\",\n    \"binance-com.online\",\n    \"shapeshiflt.com\",\n    \"biffrex.com\",\n    \"bittrexn.com\",\n    \"shapeshifteu.com\",\n    \"ethermywallet.com\",\n    \"home-myetherwallat.com\",\n    \"home-myetherwallat.top\",\n    \"idex.space\",\n    \"ildex.market\",\n    \"mail.myetheforwallet.com\",\n    \"mjeherwallet.com\",\n    \"myeltherwallet.pw\",\n    \"myethereumwallet.net\",\n    \"myetherwallet-sigen.space\",\n    \"myetherwallet.com-omisego.com\",\n    \"myetnelwallet.com\",\n    \"myetnelwallet.online\",\n    \"wallet.idex.space\",\n    \"webmail.myeltherwallet.pw\",\n    \"xn--dex-mma.market\",\n    \"bestchagne.com\",\n    \"biftinex.org\",\n    \"myehterwellet.org\",\n    \"ethclaim.top\",\n    \"bittrex-n.com\",\n    \"eth-airdrop.biz\",\n    \"ethfs.info\",\n    \"ether-give-binance.com\",\n    \"take.realcryptogift.com\",\n    \"realcryptogift.com\",\n    \"ether-airdrop.info\",\n    \"ethereumaction.eu\",\n    \"ether-airdrop.biz\",\n    \"medium-ether-blog.biz\",\n    \"info-live-binance.com\",\n    \"wusd.cf\",\n    \"binamedium.blogspot.com\",\n    \"myethervvellet.net\",\n    \"coinbase-news.tumblr.com\",\n    \"exchangeth.online\",\n    \"home-myetherwallat.info\",\n    \"ethgetbonus.eu\",\n    \"eth-official.claims\",\n    \"ethresults.info\",\n    \"ethereumdrop.eu\",\n    \"go.ethgft.party\",\n    \"ethgft.party\",\n    \"safesclaim.info\",\n    \"ethereum-airdrop.biz\",\n    \"give-away.win\",\n    \"giveaway-coinbase.club\",\n    \"etherscan.space\",\n    \"binmedium.blogspot.com\",\n    \"ethereum-claim.ru\",\n    \"coinbase-gift.tumblr.com\",\n    \"medium-news.blogspot.com\",\n    \"musk-air.org\",\n    \"safe-claims.info\",\n    \"bitstamp.pw\",\n    \"binance-web.com\",\n    \"eth-club.club\",\n    \"ethgiving.000webhostapp.com\",\n    \"mediumapp.org\",\n    \"ethpromosend.com\",\n    \"eth5000.in\",\n    \"coinmyethers.ooo\",\n    \"binance-exchange.updog.co\",\n    \"xn--yetherallet-tv8es7a.com\",\n    \"ethbonus.eu\",\n    \"omiseqo.network\",\n    \"smartcontract-5000.space\",\n    \"medium-blog-airdrop.info\",\n    \"airdrop-eth.net\",\n    \"blog-coinbase.tumblr.com\",\n    \"giveaway-coinbase.top\",\n    \"elon-musk.team\",\n    \"musk-share.info\",\n    \"crypto-promo.czweb.org\",\n    \"coinbas-esignin.com\",\n    \"ee-myetherwallet-un.com\",\n    \"myehterwallete.com\",\n    \"myethervvalllett.com\",\n    \"myetherwallet.api20.icu\",\n    \"myethforkwallet.com\",\n    \"myethirwaliet.info\",\n    \"bittrex-sigin.com\",\n    \"safe.justgeteth.com\",\n    \"promotion-eth.net\",\n    \"eth-airdrop.info\",\n    \"mediurn.press\",\n    \"ethereum10000.press\",\n    \"site-binance.co\",\n    \"bittrexup.com\",\n    \"giveaway-ethereum.top\",\n    \"smartsent.space\",\n    \"giveaway-eth.tumblr.com\",\n    \"medium-eth.net\",\n    \"ether-giveaway.top\",\n    \"airdrop.credit\",\n    \"musk-share.com\",\n    \"muethwaitt.info\",\n    \"giveaway.xf.cz\",\n    \"bittrex-br.com\",\n    \"accounts-blockchain.info\",\n    \"binance.com87654897.ml\",\n    \"com87654897.ml\",\n    \"binance-in.com\",\n    \"nectracker.co\",\n    \"myethervvallet.org\",\n    \"ethereum10000.website\",\n    \"xn--dx-ejao.market\",\n    \"ethchange.online\",\n    \"idex-logiin.com\",\n    \"myetherwelliet.net\",\n    \"mytherwailet.info\",\n    \"myehtervvalliet.com\",\n    \"myetherwellet.org\",\n    \"kraken-tr.com\",\n    \"kraken-logn.com\",\n    \"kraken-sigin.com.ru\",\n    \"api-binance.co\",\n    \"binance.com.eth-bonus.me\",\n    \"eth-bonus.me\",\n    \"elon-musk.company\",\n    \"safe-eth.info\",\n    \"promotion-eth.com\",\n    \"tronics.updog.co\",\n    \"binance.updog.co\",\n    \"airdrop-ether.info\",\n    \"medium-blog-ethereum.org\",\n    \"go.ethpays.us\",\n    \"coinbasespromo.tumblr.com\",\n    \"ethereum-award.top\",\n    \"cryptoyodas.tumblr.com\",\n    \"promo.ethx.site\",\n    \"ethx.site\",\n    \"send.tokenpromo.site\",\n    \"tokenpromo.site\",\n    \"ethereumprize.eu\",\n    \"5000ethereum.in\",\n    \"ethbinance.info\",\n    \"ethofficial.000webhostapp.com\",\n    \"medium-eth.com\",\n    \"promotion-eth.info\",\n    \"coinbaseboggether.tumblr.com\",\n    \"promo.ethgft.us\",\n    \"beethpromogive.com\",\n    \"safe.confirmeth.com\",\n    \"confirmeth.com\",\n    \"promo.tokenpromo.site\",\n    \"arkblock.net\",\n    \"cbase-pro.com\",\n    \"ethereumprize.io\",\n    \"airdropsvert.xyz\",\n    \"etherium.host\",\n    \"claimeth.top\",\n    \"medium.com.ru\",\n    \"etherium.pro\",\n    \"tesla.myetherget.info\",\n    \"myetherget.info\",\n    \"ethsecure.top\",\n    \"coinsdrop.org\",\n    \"blogmediums.blogspot.com\",\n    \"ethereumprize.art\",\n    \"getethereum200.000webhostapp.com\",\n    \"safe.sharingeth.com\",\n    \"sharingeth.com\",\n    \"medium-blog-ethereum.net\",\n    \"ethereum-airdrop.net\",\n    \"eth-bonus-binance.com\",\n    \"czofficial.site\",\n    \"ethico.info\",\n    \"elon-surprise.site\",\n    \"xn--yetherallet-tv8eu6a.com\",\n    \"eth-safe.info\",\n    \"elon-musk.site\",\n    \"ethofficial.site\",\n    \"bestpromo.online\",\n    \"crypto-giveaway.top\",\n    \"airdrop-ether.com\",\n    \"medium-blog-ethereum.info\",\n    \"ethpromogivegroup.net\",\n    \"idexwall.online\",\n    \"muytherwallet.info\",\n    \"myetherywallet.com\",\n    \"myethirwalie.info\",\n    \"myethirwalie.xyz\",\n    \"myethwallet.com\",\n    \"xn--omiseg-ul8b.com\",\n    \"xn--myethrwalle-6qb4278g.com\",\n    \"myehterwelliet.com\",\n    \"mail.myewtherwallet.pw\",\n    \"myetherwallet.com.ip11.icu\",\n    \"ip11.icu\",\n    \"ethcoin.store\",\n    \"kralkem.com\",\n    \"blockchalim.info\",\n    \"neo-tracler.co\",\n    \"app-bittrex.com\",\n    \"myethereumwallet.org\",\n    \"myethervvallet.net\",\n    \"wmyetherwallet.pw\",\n    \"xn--bnanc-r51bze.com\",\n    \"ycbit.net\",\n    \"kuccin.com\",\n    \"lnitbtc.com\",\n    \"www-nycryqto.com\",\n    \"www-nycryptos.com\",\n    \"go.ethers.pw\",\n    \"ethers.pw\",\n    \"airdropbox.site\",\n    \"etherescan.net\",\n    \"transaction.status-eth.top\",\n    \"mediumblog.today\",\n    \"ethereum-giveaway.top\",\n    \"ethereum-airdop.com\",\n    \"medium-blogpost.info\",\n    \"bonus.status-eth.top\",\n    \"status-eth.top\",\n    \"ethereum.smart.contract.myeltherwallet.ml\",\n    \"myeltherwallet.ml\",\n    \"lelectrum.com\",\n    \"get.10keth.com\",\n    \"10keth.com\",\n    \"airdrop-token.website\",\n    \"ethvent.net\",\n    \"ethclaim.live\",\n    \"claim.status-eth.top\",\n    \"gcox086.com\",\n    \"gcoxkorea.com\",\n    \"my-followers.ml\",\n    \"market-idex.com\",\n    \"myetherwallet.com.verification.mvkcaterer.com\",\n    \"binancepromos.typeform.com\",\n    \"bliovnarnce.com\",\n    \"meyhferwallet.com\",\n    \"ethereum-giveaway.tech\",\n    \"bingmonces.com\",\n    \"ethclaim.info\",\n    \"ethgiftonline.com\",\n    \"ether.blogmedium.top\",\n    \"bnb.medium-air.org\",\n    \"medium-air.org\",\n    \"ether-airdrop.website\",\n    \"giveaway.ether-claim.org\",\n    \"ether-claim.org\",\n    \"giftsforyou.online\",\n    \"coinsprize.org\",\n    \"ethereumwin.in\",\n    \"smart-eth-contract.site\",\n    \"safec41944.nichost.ru\",\n    \"ide-x.market\",\n    \"idex-market.com\",\n    \"idex.network\",\n    \"idexchange.info\",\n    \"idexcorp.download\",\n    \"idlex.market\",\n    \"idwx.market\",\n    \"iibex.market\",\n    \"iidex.market\",\n    \"myetherwalet.ga\",\n    \"myetherwallet-info.com\",\n    \"myetherwallet-tokens.com\",\n    \"myetherwolet.gq\",\n    \"omg-myetherwallet.com\",\n    \"stickamgfs.com\",\n    \"safeclaims.space\",\n    \"safeclaims.net\",\n    \"myethgift.net\",\n    \"official.ethx10.com\",\n    \"ethx10.com\",\n    \"ether-airdrop.org\",\n    \"elon-giveaway.org\",\n    \"myehterwaillet.com\",\n    \"tron-gift.blogspot.com\",\n    \"dubai-oilcorp.company\",\n    \"xn--yetherallet-iw8ew5a.com\",\n    \"bjlttrex.com\",\n    \"blocrkchein.com\",\n    \"login.blocrkchein.com\",\n    \"blrockchein.com\",\n    \"login.blrockchein.com\",\n    \"exrno.su\",\n    \"gaterhub.net\",\n    \"signin.gaterhub.net\",\n    \"kuciorn.com\",\n    \"lhitdtc.com\",\n    \"lkralken.com\",\n    \"polonreix.com\",\n    \"yobirt.net\",\n    \"forkdelta.biz\",\n    \"https-myetherwallet.net\",\n    \"etherdeita.top\",\n    \"etherdeita.site\",\n    \"myethervvallet.ru\",\n    \"myethervvallet.top\",\n    \"myethierwalet.com\",\n    \"myethpromogive.com\",\n    \"myethirvvale.info\",\n    \"lbinanrce.com\",\n    \"medeum-airdrop-news.com\",\n    \"ethereum-transfer.net\",\n    \"safeclaim.info\",\n    \"tesla-giveaway.getforge.io\",\n    \"eth.getforge.io\",\n    \"elon-musk.fun\",\n    \"getethfree.com\",\n    \"airdrop-event.site\",\n    \"xn--methewallet-638e95e.com\",\n    \"bigethereum.org\",\n    \"giftofeth.info\",\n    \"crypto-promo.website\",\n    \"ethdrop.in\",\n    \"ethinvesting.info\",\n    \"newsmedium.info\",\n    \"bnb.newsmedium.info\",\n    \"mediumvert.xyz\",\n    \"getethernow.top\",\n    \"vechainx.net\",\n    \"hadica.com\",\n    \"goastra.ga\",\n    \"jax-x.com\",\n    \"mfoundation.cf\",\n    \"myetheatrwallet.com\",\n    \"myethertawallet.com\",\n    \"myetherwallet.com.api12.icu\",\n    \"api12.icu\",\n    \"xn--etereum-yt3c.com\",\n    \"myetheruwlleet.site\",\n    \"myetherwallet.com.signmsg.api11.icu\",\n    \"api11.icu\",\n    \"myetzwallet.com\",\n    \"aronum.com\",\n    \"vechainx.io\",\n    \"etherdrop.top\",\n    \"btcdrop.in\",\n    \"promo-claims.org\",\n    \"myetherwallet.com.api10.icu\",\n    \"api10.icu\",\n    \"ether-gather.com\",\n    \"safeclaims.info\",\n    \"ethverify.info\",\n    \"elon-musk.org\",\n    \"ethereumfast.io\",\n    \"tron-gifts.blogspot.com\",\n    \"ethereumswallet.com\",\n    \"ethereumwallets.com\",\n    \"myelherwallel.info\",\n    \"myetheruwalleet.site\",\n    \"myetheruwlleet.website\",\n    \"myetherwallet.com.api11.icu\",\n    \"myetherwallet.com.api8.icu\",\n    \"myetherwallet.com.api9.icu\",\n    \"myetherwallet.tv\",\n    \"myetherwelleit.com\",\n    \"myetherwelliet.com\",\n    \"ethereum-promotion.org\",\n    \"ethmore.io\",\n    \"official-promotion.org\",\n    \"airdropseth.info\",\n    \"medium-airdrop-promo.com\",\n    \"ethereum-airdrop.org\",\n    \"air-drop.org\",\n    \"ethereum-return.top\",\n    \"ethereum-promotion.website\",\n    \"kraken-ixz.com\",\n    \"kraken-check.com\",\n    \"airdrops.delivery\",\n    \"buzovacoin.io\",\n    \"buz-coin.io\",\n    \"buzcoinio.com\",\n    \"clubeth.live\",\n    \"clubbtc.live\",\n    \"binance-official.com\",\n    \"shapeshift-exchange.io\",\n    \"myethgift.com\",\n    \"view-wallel.info\",\n    \"carliftcatalog.site\",\n    \"hvmoecjpxn.info\",\n    \"idex.im\",\n    \"idex.site\",\n    \"ldex.su\",\n    \"ldexchange.info\",\n    \"myeherwallel.info\",\n    \"myetheruvvalleet.com\",\n    \"myetheruvvalleet.site\",\n    \"myetheruvvalleet.website\",\n    \"myetheruvvalleet.xyz\",\n    \"myethervvalle.info\",\n    \"myethervvalle.top\",\n    \"muethereswallet.com\",\n    \"myeetherwallets.com\",\n    \"myetherwallet.com.verification.cohencues.com\",\n    \"myetherwallet.company\",\n    \"myetherwolet.us\",\n    \"mytherwallet.com\",\n    \"topbit.info\",\n    \"giveaway-promo.net\",\n    \"eth-pro.co.nf\",\n    \"blokckchian.com\",\n    \"coinbaselogin.com.ru\",\n    \"hub.xn--myterwallet-3qb9087g.com\",\n    \"binconarnce.com\",\n    \"binconamce.com\",\n    \"hitbtc.mobi\",\n    \"kraken-portal.com\",\n    \"kraken-validation.com\",\n    \"grabeth.cf\",\n    \"eos-airdrop.info\",\n    \"ether-claim.com\",\n    \"myethervallet.000webhostapp.com\",\n    \"myetheruvvalet.com\",\n    \"mail.mynetherwallet.site\",\n    \"mycryrptto.com\",\n    \"myetherwallet.com.api7.icu\",\n    \"myetherwllaet.com\",\n    \"mynetherwallet.mining24.info\",\n    \"mynetherwallet.site\",\n    \"xn--idex-upa.market\",\n    \"fantom-foundation.de\",\n    \"bincomance.com\",\n    \"kraken-authentication.com\",\n    \"kraken-we.com\",\n    \"kraken-ix.com\",\n    \"kraken-on.com\",\n    \"binance-validation.com\",\n    \"ethersdrop.online\",\n    \"ethdrop.top\",\n    \"elon-musk.promo\",\n    \"cryptocandies.updog.co\",\n    \"elon-gift.club\",\n    \"elon-gift.info\",\n    \"ether-free.tech\",\n    \"myetherwallet-coins.space\",\n    \"tron-presents.blogspot.com\",\n    \"airdropeth.info\",\n    \"myetherwallet-coinss.space\",\n    \"blovrnance.com\",\n    \"bingmancol.com\",\n    \"bnbnews.org\",\n    \"btcdrop.top\",\n    \"johnmcafee.promo\",\n    \"safe.getbesteth.com\",\n    \"getbesteth.com\",\n    \"mediumblogsot.top\",\n    \"biflnex.com\",\n    \"blfinex.com\",\n    \"binance-app.com\",\n    \"binance-club.com\",\n    \"binance-coins.com\",\n    \"binance-daytrading.com\",\n    \"binance-ethh.com\",\n    \"binance-market.com\",\n    \"binancep.com\",\n    \"https-binance.com\",\n    \"m-binance.com\",\n    \"pay-binance.com\",\n    \"site-binance.com\",\n    \"xn--idex-vpa.market\",\n    \"eth-giveaway.space\",\n    \"claimprize.xyz\",\n    \"ethereum-transfer.com\",\n    \"ethfast.top\",\n    \"medium-promo.com\",\n    \"betaclient-wbtcgwap.cf\",\n    \"ethbonus-binance.com\",\n    \"fast.getether.xyz\",\n    \"getether.xyz\",\n    \"btcbonus-binance.com\",\n    \"my-cry-pto.com\",\n    \"myerthewallet.com\",\n    \"myerthewallet.hosstinger.info\",\n    \"myethaewallet.com\",\n    \"myethaewallet1.hosstinger.info\",\n    \"my-crypto.com\",\n    \"kuciorn.hosstinger.info\",\n    \"lhitlbtc.hosstinger.info\",\n    \"shapeshift-exchange.online\",\n    \"shapeshlft.net\",\n    \"fgcoin.io\",\n    \"evotrustllc.com\",\n    \"john-mcafee.com\",\n    \"amazy-eth.com\",\n    \"eth-drop.io\",\n    \"ethermone.info\",\n    \"ethpromos.info\",\n    \"mycyrptto.com\",\n    \"blgem.blogspot.com\",\n    \"airdrop.delivery\",\n    \"giveawayofficial.info\",\n    \"eth-binance.com\",\n    \"ethgoldmin.com\",\n    \"take-eth.website\",\n    \"safe.earnethnow.com\",\n    \"earnethnow.com\",\n    \"myetnerwallet.com.checkbalance.info\",\n    \"checkbalance.info\",\n    \"autodiscover.myetherwailet.cf\",\n    \"binance-home.com\",\n    \"binance.delivery\",\n    \"bitfilinex.com\",\n    \"bitfinex.me.uk\",\n    \"cpanel.myetherwailet.cf\",\n    \"mail.myetherwailet.cf\",\n    \"mail.myetherwallet.icu\",\n    \"myetherwailet.cf\",\n    \"myetherwalet.watchfullmovie.download\",\n    \"myetherwallert.org\",\n    \"myetherwallet-click.date\",\n    \"myetherwallet-click.loan\",\n    \"myetherwallet-online.download\",\n    \"myetherwallet.icu\",\n    \"myetherwallet.mining24.info\",\n    \"webdisk.myetherwailet.cf\",\n    \"webmail.myetherwailet.cf\",\n    \"ethcryptocomp.cx\",\n    \"ethpromoui.com\",\n    \"ethpromonow.com\",\n    \"eth-give-away-promo.com\",\n    \"eth-promo-give-away.com\",\n    \"eth-pronogive.com\",\n    \"eth-promosgivex.com\",\n    \"ethpramengive.com\",\n    \"et-gi.net\",\n    \"getethereumforfree.com\",\n    \"idex-market.biz.pl\",\n    \"medium-hitbtc.tumblr.com\",\n    \"ethereum-return.com\",\n    \"btc-binance.com\",\n    \"descentx.com\",\n    \"eth-away.com\",\n    \"theethpromogive.net\",\n    \"ethpromotake.net\",\n    \"ethpromogivenow.net\",\n    \"ethpromoget.net\",\n    \"ethpromogivecare.com\",\n    \"ethnewpromo.com\",\n    \"aethpromogive.com\",\n    \"receiveethpromo.cx\",\n    \"eth-promosgive.com\",\n    \"eth-promoui.com\",\n    \"elon-musk.me\",\n    \"eth-promo-awayx.com\",\n    \"ethpromo-give.com\",\n    \"eth-pronosgive.com\",\n    \"receiveethfree.cx\",\n    \"ethpoolcompet.cx\",\n    \"coinleft.org\",\n    \"blogmedium.tk\",\n    \"209.159.154.156\",\n    \"idex-market.trade\",\n    \"justinsun.promo\",\n    \"ettereum.info\",\n    \"binanace.sizemedium.top\",\n    \"sizemedium.top\",\n    \"etherwallet.adamluvshis.com\",\n    \"myelherwaltet.info\",\n    \"myetheiwallett.com\",\n    \"myether-vvallet.com\",\n    \"myethereumswallet.com\",\n    \"myetherwalleet.org\",\n    \"myetherwalletv.org\",\n    \"mymoneero.com\",\n    \"mysetherwalled.club\",\n    \"totaly-myetherwallet.com\",\n    \"youretherwallet.net\",\n    \"myetherwallet-hydrosign.space\",\n    \"dailycurrency.promo\",\n    \"claimsafe.org\",\n    \"musk-present.blogspot.com\",\n    \"binance-get.claims\",\n    \"dodoflyer.com\",\n    \"eth-transfer.com\",\n    \"savetoken.org\",\n    \"followers-special.ml\",\n    \"giveaway.ethereum-promo.com\",\n    \"claimprize.org\",\n    \"eosgas.net\",\n    \"myetherwallet.com.api6.icu\",\n    \"api6.icu\",\n    \"api7.icu\",\n    \"api8.icu\",\n    \"api9.icu\",\n    \"api10.uicu\",\n    \"myetherwallet.com.api5.icu\",\n    \"api5.icu\",\n    \"nuetheriumllet.com\",\n    \"myelhervvalet.com\",\n    \"seositesworld.online\",\n    \"get-ethereum.net\",\n    \"eosgas.co\",\n    \"api4.icu\",\n    \"airdrops.promo\",\n    \"binance.claims\",\n    \"verify.mediumpromos.top\",\n    \"mediumpromos.top\",\n    \"safecrypt.net\",\n    \"binance-claims.com\",\n    \"medium-promotions.com\",\n    \"prize-eth.com\",\n    \"ethsafe.promo\",\n    \"ethpresent.io\",\n    \"givecoins.info\",\n    \"musk-official-promo.com\",\n    \"coinsair.org\",\n    \"myetherwallet.com.api.root3.icu\",\n    \"myetherwallet.com.api3.icu\",\n    \"myetherwallet.com.api4.icu\",\n    \"myetherwallet.com.root4.icu\",\n    \"myetherwallet.com.signinverication.karaokekiralama.club\",\n    \"myethrwelllet.net\",\n    \"xn--mycypto-xld.com\",\n    \"xn--mycrpto-8i4c.com\",\n    \"xn--mcrypto-5i4c.com\",\n    \"xn--c1arhhdidc.com\",\n    \"xn--ycrypto-uz3c.com\",\n    \"xn--myetherwale-jb9e.com\",\n    \"promo.etherpay.site\",\n    \"etherpay.site\",\n    \"bnb-token.org\",\n    \"blog.mediumpromo.top\",\n    \"medium-promotion.com\",\n    \"eosgas.io\",\n    \"internationalstudy.online\",\n    \"myetherwallet.com.root5.icu\",\n    \"root5.icu\",\n    \"ideix.market\",\n    \"idex-free.online\",\n    \"idexwallet.com\",\n    \"meytherwalett.com\",\n    \"myefheerwallet.com\",\n    \"myefherwallett.com\",\n    \"myehtcrwallett.com\",\n    \"myelherwalet.info\",\n    \"myetferwallett.com\",\n    \"myetharwallett.com\",\n    \"myetheerwalet.com\",\n    \"myetheirwallett.com\",\n    \"myetherwallet.com.signinverication.signmessage.karaokekiralama.info\",\n    \"myetherwallet.com.verification.karaokesepeti.com\",\n    \"myetherwallet.com.walletverification.kardeslergunu.com\",\n    \"myetherwallet.men\",\n    \"myetherwayllet.com\",\n    \"myethrawallett.com\",\n    \"myethrevvallet.com\",\n    \"bitfanex.com\",\n    \"idex-market.ph\",\n    \"idex-market.com.ru\",\n    \"idex.com.ua\",\n    \"idex-markef.org\",\n    \"idexx-corpcom.com.ph\",\n    \"idex-markef.io\",\n    \"idex-market.ch\",\n    \"idex-market.club\",\n    \"idex-market.biz\",\n    \"idexhub.market\",\n    \"idexmarkt.de\",\n    \"idex-app.store\",\n    \"giveaway-binance.com\",\n    \"myetherwallet-coinin.top\",\n    \"medium-promo.top\",\n    \"ethereumclaim.net\",\n    \"ethescan.info\",\n    \"verify.getbigeth.com\",\n    \"getbigeth.com\",\n    \"binance.bnb-token.sale\",\n    \"bnb-token.sale\",\n    \"okexgiveaway.com\",\n    \"hitbtc.stream\",\n    \"promohitbtc.website\",\n    \"hitbtc.ltd\",\n    \"en-hitbtc.com\",\n    \"hitbtc.icu\",\n    \"hitbtc.ooo\",\n    \"hitbtcsupport.co\",\n    \"hitbtc.at\",\n    \"hitbtcchain.com\",\n    \"hitbtcsupport.site\",\n    \"hitbtc-ads.com\",\n    \"hitbtc-il.com\",\n    \"hitbtc-on.com\",\n    \"hitbt.co\",\n    \"black-wallet.co\",\n    \"dailycurrency.ml\",\n    \"ethgivewaypromo.info\",\n    \"xn--etherem-y24c.com\",\n    \"stellar-w.com\",\n    \"bitfinex.im\",\n    \"idex-markt-roosen-gmbh.com\",\n    \"idex-market.me\",\n    \"iclex-market.com\",\n    \"xn--dex-market-58a.com\",\n    \"idex-markett.com\",\n    \"verify.ethereumnow.top\",\n    \"ethereumnow.top\",\n    \"sociall.ooo\",\n    \"ether-gift.website\",\n    \"authorize-transfer.droppages.com\",\n    \"login-binance.com\",\n    \"authhitbtc.com\",\n    \"hltbtc.cam\",\n    \"hiitdtc.com\",\n    \"getethernow.org\",\n    \"binance-acess.com\",\n    \"officialairdrop.com\",\n    \"eth-event.com\",\n    \"ethclose.info\",\n    \"freecoindrop.com\",\n    \"myeetherwallet.ga\",\n    \"myehtlerwallet.com\",\n    \"myetherrwallet.ga\",\n    \"myetherswalleit.top\",\n    \"myetherwallet-coinsign.top\",\n    \"myetherwallet.party\",\n    \"myetherwallet.win-eth.org\",\n    \"myethrerewallet.com\",\n    \"myethrwallet.top\",\n    \"myletherwalletes.com\",\n    \"myletherwallets.com\",\n    \"coinssafe.org\",\n    \"idex.group\",\n    \"mcafee.promo\",\n    \"eth60.top\",\n    \"getfree-eth.org\",\n    \"vaxx.co\",\n    \"cryptoether.info\",\n    \"coincapitals.org\",\n    \"bonancre.com\",\n    \"login.blockchaim.co\",\n    \"blockchaim.co\",\n    \"transactionlist.info\",\n    \"idexx-corpcom.com\",\n    \"metherwallet.info\",\n    \"meytherwallete.com\",\n    \"myertherwwellet.com\",\n    \"myetferwallete.com\",\n    \"myetferwalllet.com\",\n    \"myetherwallet-coinl.top\",\n    \"myetherwallet-signcoin.top\",\n    \"myettheriwallet.win\",\n    \"myheriwallet.trade\",\n    \"mymoenero.com\",\n    \"blocokchain.top\",\n    \"xn--binanc-n4a.exchange\",\n    \"idex.market.transactlon.info\",\n    \"transactlon.info\",\n    \"go.ether10000.win\",\n    \"eth10000.win\",\n    \"bdinamce.com\",\n    \"buterinfree.org\",\n    \"satoshi-giveaway.org\",\n    \"event-eth-giveaway.com\",\n    \"ethzerdelta.com\",\n    \"forkdelta.su\",\n    \"forkdeltagithub.info\",\n    \"myethrewallett.com\",\n    \"dxchain.eu\",\n    \"www-bitfinex.com\",\n    \"blvonance.com\",\n    \"airdrop-event.info\",\n    \"currency.promo\",\n    \"czgive.site\",\n    \"verify.bonuseth.info\",\n    \"bonuseth.info\",\n    \"get.bigethgift.com\",\n    \"bigethgift.com\",\n    \"ethsafe.info\",\n    \"ethnewpromoaway.com\",\n    \"btcgiveaway.org\",\n    \"btcpromogivegroup.com\",\n    \"metamaskpro.io\",\n    \"idexchange.pro\",\n    \"mye1herwallet.co\",\n    \"myetherswalet.com\",\n    \"myetherwalles.net\",\n    \"myetherwallet-rebl.top\",\n    \"myetlherwalle.com\",\n    \"myetlherwalle.myettherrwallett.com\",\n    \"myletherwalletest.com\",\n    \"myletherwalletest.myettherrwallett.com\",\n    \"myletherwallets.info\",\n    \"myvetherwallet.com\",\n    \"ether-event.com\",\n    \"w-eos.com\",\n    \"idexmarket.me\",\n    \"johnmcafee.ethgivings.net\",\n    \"ethpays99.top\",\n    \"idex.press\",\n    \"tronics.promo\",\n    \"ethgiveawaygift.info\",\n    \"blockchaingiveaway.biz\",\n    \"ether-bonus.net\",\n    \"vitalikgiveaway.com\",\n    \"ethergiftnow.com\",\n    \"ethtwitter.org\",\n    \"elon-bounty.blogspot.com\",\n    \"bounty-eth.com\",\n    \"bounty-btc.com\",\n    \"eth60.getmyeth.top\",\n    \"getmyeth.top\",\n    \"musk-official-giveaway.com\",\n    \"secure.ethgivings.net\",\n    \"myeltherwalleet.com\",\n    \"myerherwellet.com\",\n    \"myertherwwellet.online\",\n    \"myertherwwellet.site\",\n    \"myertherwwellet.space\",\n    \"myethervalet.cf\",\n    \"myethervuallet.cf\",\n    \"myetherwelet.ga\",\n    \"myetherwellet.ml\",\n    \"myethrerwaellet.com\",\n    \"myettherrwallett.com\",\n    \"myewhterallet.com\",\n    \"myewhterallet.info\",\n    \"myewhterallet.net\",\n    \"myewhterallet.pw\",\n    \"mywtherwaliet.com\",\n    \"index-markett-network.com\",\n    \"idexmarkketslogin.com\",\n    \"ideeweb1.com\",\n    \"myetherwalle.net\",\n    \"myetherwallet-send.top\",\n    \"myetherwallet.com.verify.apisign.me\",\n    \"elonmusk.ethgivings.net\",\n    \"ethgivings.net\",\n    \"refundcontract-etherwallet.net\",\n    \"idexr.market\",\n    \"autodiscover.mvetherwallet.ml\",\n    \"etherwallet.ethsign.icu\",\n    \"mvetherwallet.ml\",\n    \"myetherwalled.us\",\n    \"myetherwalles.com\",\n    \"myetherwallet-coins.top\",\n    \"myetherwallet-sigen.top\",\n    \"myetherwallet-singmsg.top\",\n    \"myetherwallet.cn.com\",\n    \"myetherwallet.com.apisign.me\",\n    \"myetherwallet.com.eos-bounty.com\",\n    \"mymonoro.com\",\n    \"webdisk.mvetherwallet.ml\",\n    \"walletico.com\",\n    \"idixmarket.info\",\n    \"coinbaise.com\",\n    \"neotracler.co\",\n    \"brimance.com\",\n    \"brilmance.com\",\n    \"blirmance.com\",\n    \"brinonce.com\",\n    \"cashaaprivate.com\",\n    \"signcontract-etherwallet.net\",\n    \"ether-idex.online\",\n    \"mediumpost.ga\",\n    \"ocntoken.com\",\n    \"rootsign.icu\",\n    \"ether4free.com\",\n    \"givefreecoin.com\",\n    \"giveusether.com\",\n    \"giveusethereum.com\",\n    \"promoethermnew.com\",\n    \"newethpromo.com\",\n    \"eth-giveavvay.com\",\n    \"instant-ethaway.com\",\n    \"ethpromoget.com\",\n    \"theethpromogive.com\",\n    \"ethpromogivenow.com\",\n    \"ethpromo-give-away.com\",\n    \"ethpramengyve.com\",\n    \"ethpromotake.com\",\n    \"ethpromo-give.net\",\n    \"ethpromogivegroup.com\",\n    \"ethpromogive.net\",\n    \"ethpromogiveback.com\",\n    \"mgetherwalllat.com\",\n    \"myaetherwallet.org\",\n    \"myelherwallet.us\",\n    \"myerherwalllet.com\",\n    \"myethedwalliet.info\",\n    \"myetherwaliet.io\",\n    \"myetherwalled.club\",\n    \"myetherwallet-kr.info\",\n    \"myetherwallet-sinng.top\",\n    \"myetherwallet-ssign.top\",\n    \"myetherwallet.com.api.myetherwallet.com.verifymsg.icu\",\n    \"myetherwallet.com.rootsign.icu\",\n    \"myettheriwalleti.men\",\n    \"mytherwalet.com\",\n    \"token-emrify.com\",\n    \"myethwallofficiiall.com\",\n    \"myetherwallet-hydrogen.top\",\n    \"myetherwallet.com.apisign.icu\",\n    \"apisign.icu\",\n    \"hydrogen-platform.com\",\n    \"bitpayng.typeform.com\",\n    \"myetherwalletverification.signmsg.services\",\n    \"signmsg.services\",\n    \"myetherwallet.com.signapi.icu\",\n    \"signapi.icu\",\n    \"idexd.market\",\n    \"ethbounty.info\",\n    \"eosbounty.co\",\n    \"ethpromotion.info\",\n    \"secure.ethgiftnow.com\",\n    \"btcpromotion.info\",\n    \"betaclient-rzcoinwaps.cf\",\n    \"ethmore.live\",\n    \"myehtewallet.com\",\n    \"meyehterwallet.com\",\n    \"indexmarkket-site.com\",\n    \"idexnetone.com\",\n    \"myetherwallet.com.verifymsg.icu\",\n    \"verifymsg.icu\",\n    \"ethcontracts.org\",\n    \"ethdrop.co\",\n    \"twittethpromo.cx\",\n    \"ethaway-instant.com\",\n    \"trx.promo\",\n    \"ethcompet.cx\",\n    \"ethrewards.cx\",\n    \"claimyour-eth.org\",\n    \"ethcomprules.cx\",\n    \"ethereumpromo.win\",\n    \"safe.ethgiftnow.com\",\n    \"ethgiftnow.com\",\n    \"claimyour-btc.org\",\n    \"btcpromo.win\",\n    \"ettheriwallet.trade\",\n    \"getherwallet.com\",\n    \"mail.myethierwallet.com\",\n    \"meyetherwealletr.space\",\n    \"mjetherwellet.com\",\n    \"my-etherwallet.site\",\n    \"myetherwalle.online\",\n    \"myetherwalle.top\",\n    \"myetherwalle.xyz\",\n    \"myetherwallet-coin.top\",\n    \"myetherwallet.com.api.signmsgs.icu\",\n    \"myetherwallet.com.astrofun.co.il\",\n    \"myetherwallet.signmsg.services\",\n    \"myethlrwallet.com\",\n    \"myettheriwallet.com\",\n    \"myettherwallet.win\",\n    \"mytherwallets.com\",\n    \"5000eth-giving.online\",\n    \"hydrogen-raindrop.bitballoon.com\",\n    \"airtoken.typeform.com\",\n    \"myetherwallet.ethersignmsg.services\",\n    \"ethersignmsg.services\",\n    \"idex.xyz\",\n    \"teslagifts.tumblr.com\",\n    \"brinannce.com\",\n    \"bittrexl.com\",\n    \"getethtoday.com\",\n    \"safe.getethtoday.com\",\n    \"elon-fun.blogspot.com\",\n    \"cryptolinknet.com\",\n    \"zilliqa.name\",\n    \"jenniferaustin.typeform.com\",\n    \"omisegoclassic.com\",\n    \"xn--myetherwalet-yk6f.com\",\n    \"myethierwallet.com\",\n    \"miyetherwallet.com\",\n    \"signmsgs.icu\",\n    \"myehtrerwallett.com\",\n    \"1e-myetherwallet-zn.com\",\n    \"anetherwallet.com\",\n    \"asia-binance.com\",\n    \"client-crypto-bridge.com\",\n    \"cpanel.client-crypto-bridge.com\",\n    \"ethereumwallet.gdn\",\n    \"eu-binance.com\",\n    \"lmyetherwalletr.com\",\n    \"localetherwallet.net\",\n    \"mail.client-crypto-bridge.com\",\n    \"mail.myetherwalilet.com\",\n    \"mail.myetherwallets.io\",\n    \"meyetherwealletr.online\",\n    \"meyhterwallett.com\",\n    \"mjetherwalet.com\",\n    \"mjetherwelllet.com\",\n    \"mvetherwallet.com\",\n    \"my-etherwallet.trade\",\n    \"my-monerc.com\",\n    \"myaetherwalet.com\",\n    \"mycryipto.com\",\n    \"myeatherwaliet.com\",\n    \"myecterwallet.com\",\n    \"myectherwallet.com\",\n    \"myehtcrwallet.com\",\n    \"myehtearwallet.com\",\n    \"myehteswallet.com\",\n    \"myeithierwllet.info\",\n    \"myeithierwllet.net\",\n    \"myelfherwallet.com\",\n    \"myelherwallet.site\",\n    \"myendtherwallet.info\",\n    \"myeteherwallet.info\",\n    \"myeteherwallet.net\",\n    \"myeteherwellet.com\",\n    \"myeterewalled.com\",\n    \"myeterwalled.com\",\n    \"myetharwallet.ml\",\n    \"myetharwollet.com\",\n    \"myetharwolllet.com\",\n    \"myethdwallet.info\",\n    \"myethenrwallet.com\",\n    \"myethererwallet.com\",\n    \"myethereumwallet-v.com\",\n    \"myetherewalet.info\",\n    \"myetherewalet.net\",\n    \"myetherewalled.com\",\n    \"myetherewallets.com\",\n    \"myetheriwalet.date\",\n    \"myetheriwallet.club\",\n    \"myetherrwallat.co\",\n    \"myetherrwallet.club\",\n    \"myetherumwallet.com\",\n    \"myethervalet.us\",\n    \"myethervallet.net\",\n    \"myethervellet.us\",\n    \"myethervualet.us\",\n    \"myethervuallet.pw\",\n    \"myetherwalet.pw\",\n    \"myetherwalet.space\",\n    \"myetherwalie.com\",\n    \"myetherwalle.org\",\n    \"myetherwalle.su\",\n    \"myetherwalled.cf\",\n    \"myetherwallet-click.download\",\n    \"myetherwallet-free.download\",\n    \"myetherwallet-hydro.top\",\n    \"myetherwallet-mgs.top\",\n    \"myetherwallet-msg.com\",\n    \"myetherwallet-msg.top\",\n    \"myetherwallet-msgsign.top\",\n    \"myetherwallet-open.top\",\n    \"myetherwallet-opensign.top\",\n    \"myetherwallet-oppen.top\",\n    \"myetherwallet-signi.top\",\n    \"myetherwallet-signmsq.top\",\n    \"myetherwallet-signn.top\",\n    \"myetherwallet-signopen.top\",\n    \"myetherwallet-sing.top\",\n    \"myetherwallet-singg.top\",\n    \"myetherwallet-ver.top\",\n    \"myetherwallet-veriffication.top\",\n    \"myetherwallet-verification.top\",\n    \"myetherwallet-verify.top\",\n    \"myetherwallet-verrification.top\",\n    \"myetherwallet.com.signinverication.claimtokens.nesekaraarslan.com\",\n    \"myetherwallet.com.signinverication.signmessage.mesutkaraarslan.com\",\n    \"myetherwallet.com.signmsgs.icu\",\n    \"myetherwallet.re\",\n    \"myetherwallet.schneimi.de\",\n    \"myetherwallet.systems\",\n    \"myetherwalletk.org\",\n    \"myetherwallets.io\",\n    \"myetherwallets.site\",\n    \"myetherwallett.club\",\n    \"myetherwalllets.com\",\n    \"myetherwaullet.com\",\n    \"myetherwelet.pw\",\n    \"myetherwellet.club\",\n    \"myetherwellet.net\",\n    \"myetherwellet.press\",\n    \"myetherwelllet.net\",\n    \"myetherwollet.ga\",\n    \"myetherwollet.us\",\n    \"myetherwolllot.com\",\n    \"myetheswallet.com\",\n    \"myethherwwllet.space\",\n    \"myethrewallet.de.com\",\n    \"myethrwaliet.info\",\n    \"myethrwalt.com\",\n    \"myethrwelet.com\",\n    \"myethrwelet.net\",\n    \"myethrwellet.com\",\n    \"myethrwellet.net\",\n    \"myethrwelllet.com\",\n    \"myethswallet.org\",\n    \"myetiherwallet.com\",\n    \"myetnerwailet.info\",\n    \"myetrherwallett.com\",\n    \"myetshewallet.info\",\n    \"myettearwallet.com\",\n    \"myetterwalllet.com\",\n    \"myetterwellet.com\",\n    \"myettheriwallett.bid\",\n    \"myettheriwalletti.men\",\n    \"myettherwallet.trade\",\n    \"myletherwallet.com\",\n    \"mymonaro.com\",\n    \"mymonerc.com\",\n    \"mymonero.eu\",\n    \"mymonero.in\",\n    \"mymorero.com\",\n    \"mymornero.com\",\n    \"mymornero.net\",\n    \"mypcrypto.com\",\n    \"myterwallet.info\",\n    \"wallet.crypto-bridge.top\",\n    \"webdisk.client-crypto-bridge.com\",\n    \"webmail.client-crypto-bridge.com\",\n    \"wwwidex.market\",\n    \"myetherwalilet.com\",\n    \"ethereumpromote.wixsite.com\",\n    \"ethgive.club\",\n    \"etherclaims22.top\",\n    \"officialmcafee.github.io\",\n    \"eth10000.org\",\n    \"safe.eth10000.org\",\n    \"gift-eth.org\",\n    \"ethonline.io\",\n    \"meyetherwealletr.site\",\n    \"myetherwa1et.com\",\n    \"myetherwallet-virificationsign.top\",\n    \"forkdeltas.net\",\n    \"idexairdrop.com\",\n    \"secure.ethsoffer.com\",\n    \"ethsoffer.com\",\n    \"ethpromo-giveaway.atspace.cc\",\n    \"meyetherwealletr.com\",\n    \"myerhterwallett.com\",\n    \"ethcryptopromos.com\",\n    \"ether-foundation.website\",\n    \"ethofficial.net\",\n    \"medium.ethereumfoundation.top\",\n    \"ethereumfoundation.top\",\n    \"bittrcex.com\",\n    \"binance.promoting.world\",\n    \"promoting.world\",\n    \"ether-promotion.info\",\n    \"eventeth.com\",\n    \"btcpromofree.com\",\n    \"ethbonus.me\",\n    \"idex.ga\",\n    \"binanyce.com\",\n    \"login-binance.net\",\n    \"admin.safe-eth.top\",\n    \"myetherwallet.com.signmessage.icu\",\n    \"signmessage.icu\",\n    \"riseeth.com\",\n    \"pokerbox.io\",\n    \"pokerboxairdrop1.typeform.com\",\n    \"myetherwallet.com.apis.icu\",\n    \"apis.icu\",\n    \"official-promo.org\",\n    \"mmyetlherwallett.com\",\n    \"mychterwallet.com\",\n    \"ethmore.net\",\n    \"electrunn.org\",\n    \"myehterwallct.com\",\n    \"get.lotsofeth.com\",\n    \"lotsofeth.com\",\n    \"ethcountdown.ga\",\n    \"ethpromofree.com\",\n    \"sparkster.com.de\",\n    \"buterineth.org\",\n    \"ethereum-promo.website\",\n    \"myertnerwalletr.com\",\n    \"myetherweallett.com\",\n    \"idex.su\",\n    \"myetherwallet-msgg.top\",\n    \"tokenaway.com\",\n    \"trontoken.tk\",\n    \"bitcryptonex.com\",\n    \"satoshilitegift.tumblr.com\",\n    \"yoniex.com\",\n    \"get.ethinwallet.com\",\n    \"lizstarkgift.tumblr.com\",\n    \"secure.ethoffers.net\",\n    \"ethoffers.net\",\n    \"etherdeltha.info\",\n    \"forcdelta.com\",\n    \"ethereumfoundationgift.tumblr.com\",\n    \"btcpramengyve.com\",\n    \"claim-btc.org\",\n    \"btcbig.org\",\n    \"btcbonus.win\",\n    \"btcpromogiveback.com\",\n    \"btcpromoget.com\",\n    \"bit-airdrop.com\",\n    \"giveaway.claimeth.net\",\n    \"claimeth.net\",\n    \"encoreofficial.com\",\n    \"ethcompetitionrules.cx\",\n    \"offer.supporteth.com\",\n    \"supporteth.com\",\n    \"safe.ethdeliver.com\",\n    \"ethdeliver.com\",\n    \"claimeth.org\",\n    \"instantethpromotion.cx\",\n    \"ethpromotionnow.cx\",\n    \"ethvert.com\",\n    \"event-eth-ada.uk\",\n    \"myeleherwaret.com\",\n    \"meytherwellat.com\",\n    \"btc-giveaway.info\",\n    \"node82.btc-giveaway.info\",\n    \"texacon-verify-547fcd.bitballoon.com\",\n    \"kinetictokenforms.typeform.com\",\n    \"etherclaim.org\",\n    \"xatrainvest.com\",\n    \"xn--myethrwalt-f7a07c4r.com\",\n    \"trx.claims\",\n    \"coinscrypto.info\",\n    \"giveaway.eth-safe.net\",\n    \"eth-safe.net\",\n    \"bonus-ethereum.com\",\n    \"myetherwalletverification.signmsg.work\",\n    \"signmsg.work\",\n    \"xn--con-vta.site\",\n    \"xn--ethrdelta-iib.com\",\n    \"ethergiveaway.site\",\n    \"eosclassic.network\",\n    \"eosauthority-kyc.com\",\n    \"eoscountdown.network\",\n    \"petraforbinance.com\",\n    \"idex.market.xn--con-vta.site\",\n    \"ethbig.net\",\n    \"vechain-platform.org\",\n    \"vechain-block.com\",\n    \"eosauthority.com.globatalent.network\",\n    \"globatalent.network\",\n    \"eth-gift.club\",\n    \"buterin-giveaway.org\",\n    \"freegiveaway-eth.com\",\n    \"support.eth3rdyear.io\",\n    \"eth3rdyear.io\",\n    \"daily-free-eth.net\",\n    \"eth-news.co\",\n    \"ethpromogive.com\",\n    \"eth-give.net\",\n    \"xrp-address.org\",\n    \"hitbtc-login.com\",\n    \"promobinance.com\",\n    \"bittrex-ix.com\",\n    \"bittrex-app.com\",\n    \"bittrecx.com\",\n    \"pumphash.com\",\n    \"tronplay.network\",\n    \"xn--mytherwalet-srb35c.com\",\n    \"eosauthority.bitballoon.com\",\n    \"better-hash.com\",\n    \"promo.ethtake.com\",\n    \"myetherwallet-sign.top\",\n    \"hederahashgraph.publictoken.icu\",\n    \"publictoken.icu\",\n    \"safepayeth.org\",\n    \"eth2018.ethtoeth.com\",\n    \"bitfainex.com\",\n    \"ethinwallet.com\",\n    \"secure.ethinwallet.com\",\n    \"ethereumpro.net\",\n    \"giveawaycrypto.info\",\n    \"dapp.doubledouble.io\",\n    \"doubledouble.io\",\n    \"bitcoinvest.cc\",\n    \"celebration-eth.com\",\n    \"ethers444.online\",\n    \"eth5000.io\",\n    \"ethtoeth.com\",\n    \"cryptoseth.top\",\n    \"ethsfor.top\",\n    \"walleteth.top\",\n    \"ethair.top\",\n    \"wineth.top\",\n    \"ethgive.credit\",\n    \"wineths.top\",\n    \"eosauthority.website\",\n    \"yobit.tilda.ws\",\n    \"eth2018.net\",\n    \"ethtwitter.com\",\n    \"ethereumstash.org\",\n    \"idext.market\",\n    \"etherdelta.com.ua\",\n    \"etzerdelta.com\",\n    \"forkdelta.co\",\n    \"myeftervvellet.com\",\n    \"teslaforfree.wordpress.com\",\n    \"go.ethtake.com\",\n    \"ethtake.com\",\n    \"eossauthorithy.com\",\n    \"electrum.ink\",\n    \"electrumwallet.ml\",\n    \"myethenrwallet.site\",\n    \"myetherium.ru\",\n    \"myetherwalleft.ru\",\n    \"myethrewallets.com\",\n    \"myethrwalet.com\",\n    \"myethswallets.info\",\n    \"myetherwallet-singmgs.top\",\n    \"safe.ethincrease.com\",\n    \"ethincrease.com\",\n    \"myetherwall-et.com\",\n    \"myethre-wallet.com\",\n    \"myether-wallet.com\",\n    \"m-yetherwallet.com\",\n    \"myehferwallet.com\",\n    \"myetherwallet-signmgs.top\",\n    \"eosauthorithy.info\",\n    \"ankr-network.tech\",\n    \"ankr-network.com.de\",\n    \"validbtc.com\",\n    \"ethcelebration.io\",\n    \"crsafepay.com\",\n    \"ethgoldmine.com\",\n    \"verify.ethgoldmine.com\",\n    \"ethcompetition.cx\",\n    \"officialgiveaway.info\",\n    \"ethercontest.site\",\n    \"btcdrop.org\",\n    \"eosauthorithy.com\",\n    \"ethereumanniversary.org\",\n    \"xn--eosauthorty-jzb.com\",\n    \"xn--eosuthority-m7a.com\",\n    \"xn--eosauthorty-kcb.com\",\n    \"tronbonus.network\",\n    \"ethaway.com\",\n    \"eth-gift.net\",\n    \"eosdark.com\",\n    \"xn--mytherwaet-y7a46ha.com\",\n    \"freepromoeth.com\",\n    \"wallet.eostoolkits.io\",\n    \"eostoolkits.io\",\n    \"chanfelly.com\",\n    \"idiex.market\",\n    \"ethtransfer.online\",\n    \"telegram.market\",\n    \"ethgift.net\",\n    \"ethfortune.com\",\n    \"ethereumdrop.info\",\n    \"ethpays.info\",\n    \"eth-give-away.com\",\n    \"safe.ethpaynet.com\",\n    \"ethpaynet.com\",\n    \"getyoureths.com\",\n    \"eth.fanclub.rocks\",\n    \"fanclub.rocks\",\n    \"get-bitcoins-now.com\",\n    \"ethsc32821.nichost.ru\",\n    \"gelepo.com\",\n    \"musk-shares.com\",\n    \"elon-gift.com\",\n    \"elon-gifts.com\",\n    \"elon-giveaways.com\",\n    \"valideth.com\",\n    \"eth-verified.com\",\n    \"grab-eth.com\",\n    \"mediumdotcom.top\",\n    \"eos-authority.com\",\n    \"myethrawallet.com\",\n    \"freeethpromo.com\",\n    \"ethereum-event.com\",\n    \"ethereum-giveaway.safe-eth.top\",\n    \"safe-eth.top\",\n    \"myautocentmarks.com\",\n    \"io-tron.com\",\n    \"ethereum-platform.org\",\n    \"w-tron.org\",\n    \"bonus.eth-promo.org\",\n    \"eth-promo.org\",\n    \"binance-eth.github.io\",\n    \"5000eth.io\",\n    \"twitterpromo.info\",\n    \"promo-binance.site\",\n    \"wallet-top-up.org\",\n    \"binance-btc.github.io\",\n    \"ethextra.net\",\n    \"ethofficialpage.us\",\n    \"ethers-free.org\",\n    \"claimethers.org\",\n    \"myetherwalett.000webhostapp.com\",\n    \"giveaway.ethsafe.net\",\n    \"ethereum-promo.info\",\n    \"myetherwallet.com.signmsg.icu\",\n    \"signmsg.icu\",\n    \"anatomia.io\",\n    \"anatomiaairdrop.typeform.com\",\n    \"give-ethprize.com\",\n    \"odyssey.center\",\n    \"world-market.online\",\n    \"ethereum.odyssey.center\",\n    \"xn--eosauthorty-wcb.com\",\n    \"etherfree.info\",\n    \"free-ethers.org\",\n    \"myeostrust.com\",\n    \"eosdrop.xn--mythrwallt-c7a86c5a.com\",\n    \"eth-claim.net\",\n    \"ethfreegift.org\",\n    \"myenterworlld.com\",\n    \"localetherwallet.info\",\n    \"ethsupport.net\",\n    \"newsair.info\",\n    \"officialgiveaway.org\",\n    \"collectionseth.com\",\n    \"airdropeos.com\",\n    \"neo-x.info\",\n    \"myetherplace.com\",\n    \"ether-give.live\",\n    \"btc-give.org\",\n    \"ethgpromo.com\",\n    \"eosauthority.info\",\n    \"eosauthority.unstake.xyz\",\n    \"unstake.xyz\",\n    \"xn--mythrwalet-c7a29cyq.com\",\n    \"ethgivers.com\",\n    \"secure.ethgivers.com\",\n    \"ethergift.io\",\n    \"suretytoken.com\",\n    \"getethers.org\",\n    \"indexmaker-network.com\",\n    \"idexmarket-corp.com\",\n    \"idexontime.com\",\n    \"idexmarketcorp.com\",\n    \"idex-marketssite.com\",\n    \"idexmarket-llc.com\",\n    \"eth-air-com.1gb.ru\",\n    \"idexxsoftload.com\",\n    \"idexmarket-corps.com\",\n    \"eos-platform.net\",\n    \"btcfast.io\",\n    \"giveawaypromo.org\",\n    \"event-eth.org\",\n    \"ethaction.io\",\n    \"24h.szakdoga.net\",\n    \"luno-help-desk-update.weebly.com\",\n    \"airdropform900.typeform.com\",\n    \"myetherwallet.com.api.root.signmsg.me\",\n    \"myetherwallet.token.signmsg.network\",\n    \"signmsg.me\",\n    \"signmsg.network\",\n    \"idexmarketllc.com\",\n    \"idexwebaa.com\",\n    \"ethfast.io\",\n    \"givewaypromo.org\",\n    \"ethereum-givaway.social\",\n    \"personaleth.com\",\n    \"indexmarket-inc.com\",\n    \"mnyctervailliet.com\",\n    \"mnyidthewallot.com\",\n    \"c-kamowski.fr\",\n    \"eosprivate.io\",\n    \"signmessage.me\",\n    \"myetherwallet.com.api.signmessage.me\",\n    \"shapeshiftv.com\",\n    \"get-ether-now.com\",\n    \"waves-platform.net\",\n    \"myefherwaliet.com\",\n    \"ethsafe.net\",\n    \"xn--coinbas-z8a.tk\",\n    \"ethshare.org\",\n    \"ethergive.info\",\n    \"myetherwalet.heliohost.org\",\n    \"keyfundairdrop.typeform.com\",\n    \"eosdash.io\",\n    \"ethereum-claim.org\",\n    \"safesteth.com\",\n    \"ethscan.us\",\n    \"get.perfecteth.com\",\n    \"perfecteth.com\",\n    \"newsair.org\",\n    \"top-ethereum.com\",\n    \"s-msg-myetherwallet.com\",\n    \"elon-shares.com\",\n    \"xn--myeterwallet-o0b.com\",\n    \"myetherwallett.net\",\n    \"magntech.tk\",\n    \"ico.metronome.bz\",\n    \"metronome.bz\",\n    \"metronome.foundation\",\n    \"ethereum-prize.com\",\n    \"etherbonus.live\",\n    \"fantom-foundation.tech\",\n    \"sparkster.site\",\n    \"idex-exchange.market\",\n    \"idex-narket.com\",\n    \"idexmarket-inc.com\",\n    \"idexmarket-incs.com\",\n    \"indexmarkett-corp.com\",\n    \"giveth.ws\",\n    \"giveeth.org\",\n    \"ethereum.org.give-eth.today\",\n    \"give-eth.today\",\n    \"collect-ethaway.com\",\n    \"aireth.today\",\n    \"index-marker.com\",\n    \"iddexmarket.com\",\n    \"iddexmark.et.com\",\n    \"iddexma.rket.com\",\n    \"ideexmarket.com\",\n    \"idexmarket.com\",\n    \"myetherwalllet.online\",\n    \"odyssey.plus\",\n    \"ethereumgw.org\",\n    \"epromo.cc\",\n    \"index-marketz.com\",\n    \"68.168.123.85\",\n    \"eth-promos.org\",\n    \"ethxinfo.com\",\n    \"ethereumpromo.org\",\n    \"eth-giveaway.surge.sh\",\n    \"10000ethereum.com\",\n    \"ethcrypto.info\",\n    \"huobitalk.ga\",\n    \"verified.myethergift.com\",\n    \"myethergift.com\",\n    \"ethairdrop.org\",\n    \"claim.ethairdrop.org\",\n    \"bitcoin-promo.club\",\n    \"today-ethereum.com\",\n    \"ethnow.org\",\n    \"eoscountdown.co\",\n    \"xn--mythrwalet-smb0a05c.com\",\n    \"go.boosteth.com\",\n    \"boosteth.com\",\n    \"claims.payeth.promo\",\n    \"payeth.promo\",\n    \"get-eth-now.com\",\n    \"ethpromo.win\",\n    \"ethereumgift.org\",\n    \"get-btc-now.com\",\n    \"ethpays.org\",\n    \"safe.ethpaynow.com\",\n    \"ethpaynow.com\",\n    \"elon-gives.com\",\n    \"index-markels.com\",\n    \"etherbonus.win\",\n    \"getethpro.com\",\n    \"event-ethereum.org.uk\",\n    \"xn--myethrwllt-y4a7gf.com\",\n    \"giveawaypromo.byethost14.com\",\n    \"ploloneix.com\",\n    \"porloneix1.domen-hosting.org\",\n    \"porloneix.com\",\n    \"polroniex.com\",\n    \"porloniex.com\",\n    \"porloniex1.domen-hosting.org\",\n    \"getbigdeals.org\",\n    \"ethpromotions.org\",\n    \"wincheck.org\",\n    \"ethfor.info\",\n    \"hederahashgraph.tokenico.me\",\n    \"tokenico.me\",\n    \"secure.ethxchanges.com\",\n    \"ethgift.io\",\n    \"verify.officialeth.com\",\n    \"officialeth.com\",\n    \"welcome.promotionaleth.com\",\n    \"promotionaleth.com\",\n    \"binance-giveaway.com\",\n    \"walleteos.io\",\n    \"myefhervvallet.com\",\n    \"sparkster.be\",\n    \"etherguide.info\",\n    \"app-myethervvaiiet.com\",\n    \"myethehearwallet.com\",\n    \"myethervellet.gq\",\n    \"myetherwallek.org\",\n    \"myetherwallet.gifts\",\n    \"myethewalle.com\",\n    \"myethrewallet.net\",\n    \"myethwallet.top\",\n    \"xn--myethrrwallet-m0b.net\",\n    \"gonetvvork.com\",\n    \"airtake.info\",\n    \"ethergive.net\",\n    \"idix-market.info\",\n    \"icon-block.org\",\n    \"masterthecrypto.org\",\n    \"xn--myetherwllet-ncb.org\",\n    \"ethpromoaction.com\",\n    \"ethinfo.org\",\n    \"airgws.org\",\n    \"eth.blogmedium.top\",\n    \"blogmedium.top\",\n    \"eosregistry.site\",\n    \"giveethers.info\",\n    \"creteprint-driveways.co.uk\",\n    \"ethype.org\",\n    \"etherpromotion.org\",\n    \"idexs.market\",\n    \"itex.market\",\n    \"ideh.market\",\n    \"xn--idx-kma.market\",\n    \"xn--idx-cma.market\",\n    \"iclex.market\",\n    \"xn--idx-4qa.market\",\n    \"xn--dex-qma.market\",\n    \"xn--idx-gma.market\",\n    \"iddex.market\",\n    \"eteclum.org\",\n    \"myighther.net\",\n    \"ethpubs.com\",\n    \"binancegiveaway.org\",\n    \"ethgws.org\",\n    \"ethereumreturns.com\",\n    \"takeeth.org\",\n    \"idex-market.at\",\n    \"wallet-idex.net\",\n    \"bittrex-id.com\",\n    \"putty-portal.com\",\n    \"arweave.pw\",\n    \"xn--myethrwalt-inbe64c.com\",\n    \"kentra.tech\",\n    \"xn--myetherwalle-mm5f.com\",\n    \"xn--myeherwallet-4j5f.net\",\n    \"xn--myethrwllet-q7a5h.com\",\n    \"xn--dexmarket-98d.com\",\n    \"xn--mythrwalet-smb0a15c.com\",\n    \"signmsg.info\",\n    \"myetherwallet.com.signmsg.info\",\n    \"oracon.io\",\n    \"eth-bonus.org\",\n    \"piscorealestate.com\",\n    \"myethrwatt.info\",\n    \"defraggler-code.com\",\n    \"ethbonus.io\",\n    \"ethxpromo.com\",\n    \"omise-go.info\",\n    \"xn--myetherrwalet-5hc.net\",\n    \"idice.epizy.com\",\n    \"gene.network\",\n    \"bahs.edu.tt\",\n    \"etheroll.io\",\n    \"meta-mask.com\",\n    \"metamaskwallet.com\",\n    \"myethertrust.com\",\n    \"academiconswap.typeform.com\",\n    \"zillowblockchain.org\",\n    \"myetherwallet.signmsg.online\",\n    \"signmsg.online\",\n    \"falconswap.typeform.com\",\n    \"idex-market.co\",\n    \"sparkster.pro\",\n    \"viberate.bettermost.net\",\n    \"bettermost.net\",\n    \"quarkchain.typeform.com\",\n    \"myetherwalletprize.top\",\n    \"rebellious-airdrop.top\",\n    \"mvyetherwallet.top\",\n    \"kycverification.typeform.com\",\n    \"xn--myetherwalett-5hc.net\",\n    \"xn--mytherallet-3qb2119g.com\",\n    \"xn--myethewllet-738en7a.com\",\n    \"myetferwellet.com\",\n    \"myetherethwallet.com\",\n    \"myethervualet.gq\",\n    \"myetherwallea.org\",\n    \"myetherwallee.org\",\n    \"myetherwalletl.org\",\n    \"myetherwalleu.org\",\n    \"xn--myethrwalett-8vb19c.net\",\n    \"free-ethereum.us\",\n    \"tron-mainnet.network\",\n    \"receive-crypto.com\",\n    \"receive-eth.com\",\n    \"receive-ether.com\",\n    \"ton.vu\",\n    \"etherfree.org\",\n    \"ethgain.org\",\n    \"gifteth.org\",\n    \"myeatherwalletr2.domen-hosting.org\",\n    \"domen-hosting.org\",\n    \"myethearwellet.com\",\n    \"myeatherwalletr.com\",\n    \"myeatherwallert.com\",\n    \"myethearrwallet5.domen-hosting.org\",\n    \"myetherwallet1.domen-hosting.org\",\n    \"myethearrwallet.com\",\n    \"xn--myetherwllt-f7a13e.com\",\n    \"ethspace.promo\",\n    \"ethexchans.com\",\n    \"safe.ethxchanges.com\",\n    \"ethxchanges.com\",\n    \"xn--mythrwalet-c7ac47i.com\",\n    \"xn--mythrwallt-c7a86c5a.com\",\n    \"cryptoaway.org\",\n    \"ethdeals.org\",\n    \"ethgiveaway.io\",\n    \"claimeth.me\",\n    \"ethereumgiveaway.typeform.com\",\n    \"xn--myetherwalett-4hc.net\",\n    \"zecblock.info\",\n    \"litecoin-chain.info\",\n    \"ripple-chain.org\",\n    \"online-stellar.info\",\n    \"coin-monero.org\",\n    \"myethrwatt.com\",\n    \"ether-share.com\",\n    \"btcs-share.com\",\n    \"etherepromo.win\",\n    \"ethtowallet.com\",\n    \"ethsclaim.com\",\n    \"ethaward.com\",\n    \"airdrop24.com\",\n    \"eth.mediumblog.top\",\n    \"mediumblog.top\",\n    \"dropeth.org\",\n    \"get.ethpublic.com\",\n    \"ethpublic.com\",\n    \"ethereum-get.org\",\n    \"ethereum.website.tk\",\n    \"ethereum-bonus.com\",\n    \"blttrex.us\",\n    \"myetherwallat.co\",\n    \"xn--mythrwalet-umbv35c.com\",\n    \"helbiz-token.trade\",\n    \"eostoken-eos-io.typeform.com\",\n    \"switcheo-login.com\",\n    \"switchee.exchange\",\n    \"falconetwork.de\",\n    \"xn--myetherwaett-lcca.net\",\n    \"secure.ethtogive.com\",\n    \"ethtogive.com\",\n    \"fantom.pub\",\n    \"kucroin.com\",\n    \"fantoms.foundation\",\n    \"etherskan.io\",\n    \"etherscan.ltd\",\n    \"myiteher.com\",\n    \"musk-giveaway.com\",\n    \"get-ether.cash\",\n    \"free-ethers.com\",\n    \"ethershares.blogspot.nl\",\n    \"ripple-gives-eth.com\",\n    \"telegram.vu\",\n    \"mydeliverycv.com\",\n    \"ethereumbonus.org\",\n    \"ether-giveaway.online\",\n    \"idex-market.io\",\n    \"xn--mytherwalt-smb5a54c.com\",\n    \"xn--myethrwalet-vrb15c.com\",\n    \"xn--metherwallt-5hb16a.com\",\n    \"get-ethers.net\",\n    \"ethfreebie.icu\",\n    \"gather-gift.com\",\n    \"swdwd.etherget22.zone\",\n    \"etherget22.zone\",\n    \"giveaway.neocities.org\",\n    \"etherdrop.org\",\n    \"safepay-eth.org\",\n    \"electrocoin.typeform.com\",\n    \"myetherwalllet.trade\",\n    \"btcoin.vu\",\n    \"btc-giveaway.com\",\n    \"btcofficial.info\",\n    \"collect.bestethgift.com\",\n    \"bestethgift.com\",\n    \"idek.io\",\n    \"idex24.io\",\n    \"eth-get.com\",\n    \"giveaway-ether.info\",\n    \"ether-give.club\",\n    \"eth.promo-etherum.com\",\n    \"promo-etherum.com\",\n    \"winplatform.io\",\n    \"index-macro.com\",\n    \"185.156.173.87\",\n    \"eos-paperwallet.com\",\n    \"promotoeth.org\",\n    \"ethpromo.cc\",\n    \"idex-market.eu\",\n    \"idex-login.net\",\n    \"eos-swap.com\",\n    \"keyfund.io\",\n    \"ethereum-promo.xf.cz\",\n    \"myetherwallet.comsigninverication.signmessage.crocweb.online\",\n    \"crocweb.online\",\n    \"myeosdac.top\",\n    \"ethofficial.info\",\n    \"getsomeeth.com\",\n    \"giveawaycrypto.org\",\n    \"idexmarket.io\",\n    \"myetehrewallet.com\",\n    \"lbex.market\",\n    \"idex-info.net\",\n    \"get-eth.win\",\n    \"eth-claim.org\",\n    \"eth-givebacknow.tumblr.com\",\n    \"ethfreebie.com\",\n    \"ethpayethers.com\",\n    \"kinetictokenform.typeform.com\",\n    \"kinetictoken.net\",\n    \"xn--myetherwllt-r7a44e.com\",\n    \"saferpayether.com\",\n    \"ethgive.global\",\n    \"ethpromo.info\",\n    \"ethereum-promo.org\",\n    \"crypto-claims.org\",\n    \"getethnow.com\",\n    \"tron.gg\",\n    \"tronfoundation.cc\",\n    \"tronfoundation.gift\",\n    \"ethn.gift\",\n    \"geth.fyi\",\n    \"ethc.live\",\n    \"eths.fyi\",\n    \"shr.st\",\n    \"gate1.eths.vu\",\n    \"ethc.cash\",\n    \"ethn.li\",\n    \"ethc.cc\",\n    \"ethn.pw\",\n    \"get-eth.top\",\n    \"ethgw.info\",\n    \"ethbigpromo-com.1gb.ru\",\n    \"claimcrypto.org\",\n    \"ethpromo.io\",\n    \"verifcaon.site\",\n    \"myetherwallet.com.signinverication.verifcaon.site\",\n    \"verifywallet.typeform.com\",\n    \"xn--myethewallet-4nf.net\",\n    \"xn--myetherwllt-f7a75e.com\",\n    \"ethgive.me\",\n    \"ethgives.me\",\n    \"promaestros.co.uk\",\n    \"ethaddress.neocities.org\",\n    \"changellyico.bitballoon.com\",\n    \"etherfaucet.tech\",\n    \"transaction-authorization.droppages.com\",\n    \"bitcoinbravado.io\",\n    \"coin-secure-transaction.com\",\n    \"ethereum-pay.com\",\n    \"ethereumgiveaway.win\",\n    \"calchain.net\",\n    \"ethpays.me\",\n    \"idex-info.com\",\n    \"idex-market.org\",\n    \"myetherewallete.com\",\n    \"xn--myetherwlet-37a36j.com\",\n    \"xn--myetherwllt-37a50e.com\",\n    \"rnyetheswallet.com\",\n    \"meymonerro.com\",\n    \"myenterwellet.com\",\n    \"myetnerwellet.top\",\n    \"waillbtc.com\",\n    \"myeltherwalletr.com\",\n    \"myerhterwellet.com\",\n    \"meyetherwalllet.com\",\n    \"meytherwallent.com\",\n    \"meytherwallret.com\",\n    \"etherbonus.net\",\n    \"ethtopromo.org\",\n    \"register-eos.io\",\n    \"ethereum-get.info\",\n    \"xn--myethrwaet-inb90ca.com\",\n    \"myetherwallet.com.token.signinverication.signmessage.carpediem.legal\",\n    \"carpediem.legal\",\n    \"myetherwailet.pw\",\n    \"xn--myethrallet-ol9e8v.com\",\n    \"keytron.io\",\n    \"xn--mytherwalt-smbh17c.com\",\n    \"bitcointalk.to\",\n    \"bitcointolk.org\",\n    \"sebiltv.com.tr\",\n    \"ethbonus.net\",\n    \"etherspromo.org\",\n    \"ethergiving.org\",\n    \"ethn.cc\",\n    \"xn--myethrwalt-zmbt05c.com\",\n    \"eth.share-coin.net\",\n    \"share-coin.net\",\n    \"safe.ethgiver.com\",\n    \"ethgiver.com\",\n    \"ethereumup.top\",\n    \"idexmarkets-official.com\",\n    \"idex-marketsin.com\",\n    \"xn--myetherwlet-r7a67j.com\",\n    \"sparkster.tech\",\n    \"flashblocks.io\",\n    \"ethnow.me\",\n    \"quarkchain.supply\",\n    \"fastethget.com\",\n    \"securepeth.club\",\n    \"tron-online.info\",\n    \"anatomia.co\",\n    \"xn--myethrwalt-vmbe17c.com\",\n    \"myetherwallet.com.verification.atlaserbil.com\",\n    \"myetherwalleti.org\",\n    \"myetherwallatt.com\",\n    \"idex-marketslogin.com\",\n    \"iedx.market\",\n    \"myetherwallet.com.signinverication.signmessage.karaokesepeti.com\",\n    \"more-eth.com\",\n    \"myetherwallet.com.signinverication.signmessage.wbaa.co\",\n    \"tubig.co\",\n    \"myetherwallet.com.signinverication.signmessage.carpediem.legal\",\n    \"sentinel-protocol.com\",\n    \"xn--myetherwalt-kbb96i.com\",\n    \"dfinitydrop.ml\",\n    \"coinbaseverifier.com\",\n    \"ether-giveaway.net\",\n    \"ethget.me\",\n    \"ethbonus.org\",\n    \"eth-give.me\",\n    \"ethgetnow.com\",\n    \"ethnowpromo.org\",\n    \"ethergifting.com\",\n    \"ethgrab.com\",\n    \"ethg.me\",\n    \"jdex.market\",\n    \"idex-myaccount.com\",\n    \"index-markct.com\",\n    \"ldox.market\",\n    \"10000eth.net\",\n    \"eoslaunch.io\",\n    \"coinbase.pro-fork.com\",\n    \"pro-fork.com\",\n    \"ethgiveaway.zkr.kr\",\n    \"eth-promo.wixsite.com\",\n    \"calchain.io\",\n    \"air-eos.com\",\n    \"got-eth.com\",\n    \"geteth.online\",\n    \"get.etherofficial.com\",\n    \"etherofficial.com\",\n    \"tomochain.tech\",\n    \"xn--ehterdeta-wd6d.com\",\n    \"mycryiptowaliet.com\",\n    \"lendium.tech\",\n    \"xn--myethrwalet-vrb05c.com\",\n    \"kineticairdrop.typeform.com\",\n    \"elon-gives-eth.paperplane.io\",\n    \"rebl984.9999eth.com\",\n    \"9999eth.com\",\n    \"ethclaimer.byethost32.com\",\n    \"essentialairdrop.typeform.com\",\n    \"myetherwallets-official.com\",\n    \"udex.market\",\n    \"icex.market\",\n    \"idexx.market\",\n    \"starkware.online\",\n    \"myetherwalleta.org\",\n    \"myetherwalleto.org\",\n    \"myetherwallett.org\",\n    \"onemew.online\",\n    \"myethervvalet.io\",\n    \"eth-request.org\",\n    \"eths.space\",\n    \"btc-gift.org\",\n    \"eth-free.github.io\",\n    \"ethergiveme.com\",\n    \"ether-give.com\",\n    \"eth-share.org\",\n    \"myerherwallet.tk\",\n    \"myetherwallet.news\",\n    \"myetherwalletz.org\",\n    \"myethrwallet.org\",\n    \"myrvnwallet.com\",\n    \"myetherwanllet.com\",\n    \"myetherwellat.com\",\n    \"myetherwellets.com\",\n    \"xn--myetherwalt-crb17c.com\",\n    \"quarkchain.pub\",\n    \"claim-eth.com\",\n    \"send.ethergot.com\",\n    \"ethergot.com\",\n    \"securepay-eth.org\",\n    \"gift-10000eth.com\",\n    \"my-etherwallsecure.com\",\n    \"secure375446884521.safeethpay.com\",\n    \"safeethpay.com\",\n    \"quarkchain.in\",\n    \"rnyetherwallel.com\",\n    \"xn--methrwallet-uib92a.com\",\n    \"domain501dom.com\",\n    \"myethwalllet.info\",\n    \"secure75405732935.safethpay.com\",\n    \"wallets-ether.com\",\n    \"brm.10000eth-gift.com\",\n    \"ethsecure.info\",\n    \"get.ico-eth.net\",\n    \"ico-eth.net\",\n    \"collectmyethers.org\",\n    \"givefree-eth.com\",\n    \"now-5000ether.paperplane.io\",\n    \"eth-give.info\",\n    \"xn--mytherwallet-fvb.net\",\n    \"xn--myethewllet-ife2794g.com\",\n    \"xn--metherwallt-crb6719g.com\",\n    \"xn--myeterwllet-nl8er2d.com\",\n    \"xn--metherallet-ol9e03c.com\",\n    \"xn--mytherwalet-srb45c.com\",\n    \"xn--myetherwlet-48a42j.com\",\n    \"xn--myetherwllt-s8a7g.com\",\n    \"xn--myethrwaet-mlb18ca.com\",\n    \"xn--metherwalle-uib05k.com\",\n    \"xn--mytherwalet-obb56i.com\",\n    \"xn--myethrwalet-6qb77c.com\",\n    \"xn--myetherwallt-fwb.net\",\n    \"ethgive.net\",\n    \"tron-block.com\",\n    \"idex-market.site\",\n    \"eth4everyone.com\",\n    \"mew-ehterwallat.com\",\n    \"94.100.18.96\",\n    \"get.it-now-eth.com\",\n    \"it-now-eth.com\",\n    \"give.promoeth.net\",\n    \"promoeth.net\",\n    \"etherkickstart.com\",\n    \"eth-hype.com\",\n    \"instant-ether.com\",\n    \"pay.ethwitheth.com\",\n    \"ethwitheth.com\",\n    \"10000eth-gift.com\",\n    \"klareol5.ru\",\n    \"20000.paperplane.io\",\n    \"secure093555613.safethpay.com\",\n    \"get.ico-eth.org\",\n    \"ico-eth.org\",\n    \"payment-ethereum.online\",\n    \"tron-block.info\",\n    \"neo-online.info\",\n    \"ethconfirm.info\",\n    \"offer.ethsn.com\",\n    \"ethsn.com\",\n    \"hydroraindrop.typeform.com\",\n    \"ethgift.org\",\n    \"etherdelta.githiub.io\",\n    \"githiub.io\",\n    \"ether-promo.org\",\n    \"atn437.ethgiveeth.com\",\n    \"ethgiveeth.com\",\n    \"5000eth-promo.com\",\n    \"myetherofficial.com\",\n    \"myetherwallat.online\",\n    \"myetherwalletw.org\",\n    \"myetherwallte.net\",\n    \"myetherwalret.ru\",\n    \"xn--metherwalet-uib39f.com\",\n    \"myetlherwallet.pro\",\n    \"bittrexa.com\",\n    \"xn--bttrx-7ra5a.com\",\n    \"bittrexr.com\",\n    \"bittrex-account-verification.com\",\n    \"bittrex-login.com\",\n    \"biitbay.com\",\n    \"kcucoin.com\",\n    \"vvallbtc.com\",\n    \"eth-promo.net\",\n    \"tdex.market\",\n    \"login-myetherwallets.com\",\n    \"claimeth.epizy.com\",\n    \"walleteos.org\",\n    \"nathanielpopper.promo-eths.com\",\n    \"promo-eths.com\",\n    \"pay.ethconfirm.com\",\n    \"ethconfirm.com\",\n    \"eth-share.com\",\n    \"eth-gift.com.paperplane.io\",\n    \"iidexmarket.com\",\n    \"ebtweinfinance.com\",\n    \"cardanoethereum.com\",\n    \"ethergiveaway.website\",\n    \"get-ethereum.info\",\n    \"get-event-ethereum.info\",\n    \"give-eth.news\",\n    \"eth-box.xf.cz\",\n    \"ethersforme.net\",\n    \"giftethers.com\",\n    \"m342edium.ethersforme.net\",\n    \"10000-eth.com\",\n    \"icostarex.mipropia.com\",\n    \"ethsgive.com\",\n    \"giveaway-ether.com\",\n    \"bonus.giftethers.com\",\n    \"get-eths.com\",\n    \"get-ethereum.site\",\n    \"cryptos-promos.com\",\n    \"safethpay.com\",\n    \"paygiveaway.com\",\n    \"tokenpublicsales.com\",\n    \"ethgive.online\",\n    \"ether.vu\",\n    \"getnoweth.com\",\n    \"waves-ethereum-eth.org\",\n    \"ethereum-eth.life\",\n    \"mycrypto-com.com\",\n    \"quarkchain.pl\",\n    \"get-5001-ethereum.com\",\n    \"get-5000-ethereum.com\",\n    \"myetzerwallet.com\",\n    \"promobtc.win\",\n    \"tokenairdrop.typeform.com\",\n    \"transfer.saferpayeth.com\",\n    \"saferpayeth.com\",\n    \"r5.ms\",\n    \"xn--mytherwalet-3qb97c.com\",\n    \"xn--myethrwllet-pjb5u.com\",\n    \"xn--myetherwalt-0rb64c.com\",\n    \"cryptofaze.com\",\n    \"hederaheshgraph.com\",\n    \"ethergift.org\",\n    \"myetheerwallet.pw\",\n    \"secure-give-eth.com\",\n    \"kann.io\",\n    \"pundix.tech\",\n    \"quarkchains.io\",\n    \"ethcollection.paperplane.io\",\n    \"hydroggenplatform.com\",\n    \"ldcx.market\",\n    \"eth-airdrop.com\",\n    \"ether-promo.unas.cz\",\n    \"xn--tbtc-zpa34a.com\",\n    \"xn--myetherwalt-crb27c.com\",\n    \"hydroplatform.org\",\n    \"eth-giveaway.today\",\n    \"etherget.online\",\n    \"ethplatform.org\",\n    \"mycrypton.net\",\n    \"5000ethereum.online\",\n    \"hederahashgaph.com\",\n    \"5000-eth.paperplane.io\",\n    \"zilliqablockchain.org\",\n    \"idec.market\",\n    \"ihex.market\",\n    \"zclassiccoins.com\",\n    \"omisegowallet.network\",\n    \"musk.vu\",\n    \"quarkchain-presale.io\",\n    \"ethairdrop.live\",\n    \"ethgiveavvay.site\",\n    \"etherums-givingaway.atspace.tv\",\n    \"etherfree.tech\",\n    \"secure-ethereum.tw1.su\",\n    \"phantasma-ico.io\",\n    \"sentinelprotocol.pw\",\n    \"24h.infora.hu\",\n    \"eth-securepay.com\",\n    \"secureceth.com\",\n    \"eth-giving.ga\",\n    \"free-eths.paperplane.io\",\n    \"nexotoken.org\",\n    \"quarkchain-tokens.io\",\n    \"giveavvay-10000eth.online\",\n    \"ethpromo.org\",\n    \"i-dexmarkets.com\",\n    \"edenchain.site\",\n    \"xn--mytherwallet-5vb.net\",\n    \"i-dexmarket.com\",\n    \"bi-ttrex.com\",\n    \"www-bittrex.com\",\n    \"xn--bifinex-fb4c.com\",\n    \"xn--blockcain-g95d.com\",\n    \"xn--coinbas-z8a.info\",\n    \"xn--htbt-3oa0a.com\",\n    \"xn--myethewallt-crb9748g.com\",\n    \"xn--polonix-17a.com\",\n    \"xn--tro-k5y.com\",\n    \"privcoin.io\",\n    \"free-eth.paperplane.io\",\n    \"ihcx.market\",\n    \"helbizcoin.net\",\n    \"telegram-token.io\",\n    \"icostats.io\",\n    \"musk-party-gifts.updog.co\",\n    \"yobittrading.net\",\n    \"yobit-trading.net\",\n    \"securetransfer.ethpromotion.com\",\n    \"ethpromotion.com\",\n    \"brickblockio.info\",\n    \"collect.ethforyou.com\",\n    \"ethforyou.com\",\n    \"getmyetho.paperplane.io\",\n    \"xn--myetherwallt-ovb.net\",\n    \"idexmarkets.com\",\n    \"ethsafepay.net\",\n    \"presale.getmyethers.net\",\n    \"getmyethers.net\",\n    \"xn--tbtc-upa94a.com\",\n    \"xn--itbtc-9g1b.com\",\n    \"myetherwalleth.org\",\n    \"brickblocks.io\",\n    \"zilliqanetwork.com\",\n    \"brickblock.cc\",\n    \"quarkchain.de\",\n    \"promo-give-ethereum.org\",\n    \"give-ethereum.org\",\n    \"ethereum-giveaway.site\",\n    \"forkdelta.net\",\n    \"i-idex.market\",\n    \"kinecosystem.io\",\n    \"quark-chain.io\",\n    \"quarkchain.org\",\n    \"quarkchaln.io\",\n    \"quarkchain.website\",\n    \"get-ethereum.ml\",\n    \"5000eth.net\",\n    \"claim.payeths.com\",\n    \"payeths.com\",\n    \"gameofdeception.get-5000-eth.com\",\n    \"zilliqablockchain.com\",\n    \"ethgiveavvay.com\",\n    \"rebellios.com\",\n    \"kinecosystems.org\",\n    \"zilliqa.online\",\n    \"mycrypto.get-5000-eth.com\",\n    \"get-5000-eth.com\",\n    \"eden-chain.io\",\n    \"coinbtcnews.com\",\n    \"xn--polomex-cza.com\",\n    \"helpcoinbase.com\",\n    \"account-coinbase.com\",\n    \"coinbase-eth-giveaway.com\",\n    \"free-eth.news\",\n    \"forkdeltas.com\",\n    \"elon-giveaway.com\",\n    \"myetherwallet.secure.access-checker.com\",\n    \"access-checker.com\",\n    \"etherget.us\",\n    \"freecoingifts.com\",\n    \"quick.payeths.com\",\n    \"take-eth.online\",\n    \"ether-giveaway.tech\",\n    \"xn--shapeshft-c5a.com\",\n    \"xn--mycrpto-k64c.com\",\n    \"orchidprotocols.com\",\n    \"hadeplatform.net\",\n    \"quarkchain.tech\",\n    \"hederahashgraph.store\",\n    \"myetherwallet.access-checker.com\",\n    \"freeeth.info\",\n    \"coinbasle.com\",\n    \"eth-payment.online\",\n    \"ethereum5000.com\",\n    \"get-eth.us\",\n    \"ethsecurepay.com\",\n    \"bonus.ethergives.com\",\n    \"ethergives.com\",\n    \"ocoins.tech\",\n    \"hederahashgraph.online\",\n    \"5000.ethereumgive.com\",\n    \"ethereumgive.com\",\n    \"ethergive.000webhostapp.com\",\n    \"verifiedeth.com\",\n    \"eth-giveaway.co.nf\",\n    \"giveavvay10000eth.host\",\n    \"5000eth.org\",\n    \"eth-giveaway.updog.co\",\n    \"gift-ether.com\",\n    \"bonus.gift-ether.com\",\n    \"mycrypto.cm\",\n    \"tronlabsnetwork.com\",\n    \"cdnsfiles.com\",\n    \"xn--conbase-cfb.com\",\n    \"blockschajn.info\",\n    \"blockchajns.info\",\n    \"blockchaljn.info\",\n    \"xn--myeherwallet-fcc.com\",\n    \"xn--myetherwlle-3kb01f.com\",\n    \"blocks-chains.info\",\n    \"blockschaln.info\",\n    \"xn--blockchaj-3vb.info\",\n    \"blokclnain.info\",\n    \"blokclnaln.info\",\n    \"xn--myetherwllet-edb.com\",\n    \"xn--blockchln-hdb.info\",\n    \"xn--blockchln-c3a.info\",\n    \"xn--blockchln-61a.info\",\n    \"xn--blckchaln-c6a.info\",\n    \"xn--blckchaln-66a.info\",\n    \"xn--blockhai-48a72d.info\",\n    \"cken.site\",\n    \"blockchaihs.info\",\n    \"ethereum.vu\",\n    \"myetherewallet.net\",\n    \"myetharwallet.stream\",\n    \"meythcrrwallet.ru.com\",\n    \"get-ethereum.org\",\n    \"axpire.tech\",\n    \"eth-givea-way.com\",\n    \"eosreward.io\",\n    \"bitfinex.eu\",\n    \"www-mycryptos.com\",\n    \"www-mycryqto.com\",\n    \"mycrypto4cash.com\",\n    \"mycrylto.com\",\n    \"mycrypt9.com\",\n    \"mycryptoc.com\",\n    \"giveaway-eth.com\",\n    \"quarkchain-ico.io\",\n    \"eth-24h.com\",\n    \"ethgiveaways.net\",\n    \"myetherwallet-start.download\",\n    \"myethereumwalletpro.com\",\n    \"myehretewallet.com\",\n    \"myetherwallet-cash.download\",\n    \"myetherwallet-official.download\",\n    \"myetrhrerwallet.com\",\n    \"mynerthwallet.com\",\n    \"mynethwallet.com\",\n    \"mynetwalleteth.com\",\n    \"mynewalleteth.com\",\n    \"bancatoken.org\",\n    \"zilliqa.site\",\n    \"free-give-eth.com\",\n    \"iconfoundaton.com\",\n    \"geteths.live\",\n    \"etherdrops.com\",\n    \"ethereumdrop.batcave.net\",\n    \"batcave.net\",\n    \"eth-platform.com\",\n    \"main-myetherwallet.com\",\n    \"eth-get.online\",\n    \"collecteth.com\",\n    \"promo-ether.com\",\n    \"ethereumwalletgenerator.com\",\n    \"ethereums.live\",\n    \"ethpromo.net\",\n    \"gift-5000eth.org\",\n    \"promotioneth.com\",\n    \"bonus.gift-ethers.com\",\n    \"gift-ethers.com\",\n    \"gram-token-sale.com\",\n    \"myetherwalt.com\",\n    \"nnycrypto.com\",\n    \"myrcrypto.com\",\n    \"myerypto.com\",\n    \"mrycrypto.com\",\n    \"mycryrpto.com\",\n    \"mycrypto.ltd\",\n    \"mycrypto.group\",\n    \"mycrypto.ink\",\n    \"mycrypto.promo\",\n    \"eth-reward.com\",\n    \"give-eth.online\",\n    \"mvmonero.co\",\n    \"5000ethgift.com\",\n    \"quarkchain-tokensale.io\",\n    \"ethereumgiveaway5000.com\",\n    \"get-5000eth.com\",\n    \"take5000eth.com\",\n    \"ether_promo.kissr.com\",\n    \"kissr.com\",\n    \"eth-giveavvay.online\",\n    \"ethereums.cloud\",\n    \"ico-telegram.net\",\n    \"icotelegramgroup.com\",\n    \"ico-telegram.is\",\n    \"ico-telegramcoin.com\",\n    \"ico-telegram.cc\",\n    \"tokentelegram.info\",\n    \"tokentelegram.live\",\n    \"letherwindows.com\",\n    \"5000eth-gift.com\",\n    \"get-ethereum.gift\",\n    \"ethereum-give.czweb.org\",\n    \"czweb.org\",\n    \"5000eth-giveaway.com\",\n    \"ether-giveaway.atspace.eu\",\n    \"atspace.eu\",\n    \"eth-airdrop.online\",\n    \"polymath-network.com\",\n    \"securepayeth.com\",\n    \"gift5000eth.com\",\n    \"localetherieum.com\",\n    \"give-5000eth.org\",\n    \"bonus.ethersgifts.com\",\n    \"ethersgifts.com\",\n    \"myoknawell.com\",\n    \"myletherwarlet.com\",\n    \"mywindorwallet.com\",\n    \"tron-coin.org\",\n    \"gift-5000eth.com\",\n    \"daostack-ico.io\",\n    \"xn--myethewalet-ms8erq.com\",\n    \"xn--mythewallet-3qb3158g.com\",\n    \"xn--myeerwallet-ml8el7a.com\",\n    \"xn--mythrwallet-5qbx.com\",\n    \"xn--myethewallt-crb5058g.com\",\n    \"xn--meherwallet-998e27d.com\",\n    \"xn--mytherwllet-xt9e0k.com\",\n    \"xn--myetherwlle-jb9e0y.com\",\n    \"xn--myeterallet-cm8eo0c.com\",\n    \"xn--myehewalle-iw2e1gi.com\",\n    \"xn--mycypto-c63c.com\",\n    \"xn--myeterwallt-crb1087g.com\",\n    \"xn--myterwallet-3qb9087g.com\",\n    \"xn--myeherwae-xd6da13dia.com\",\n    \"xn--ytherwallet-2qb6918g.com\",\n    \"xn--mytherwalet-ms8e53d.com\",\n    \"eosrewards.io\",\n    \"tron-network.org\",\n    \"bonus.ethersgift.com\",\n    \"ethersgift.com\",\n    \"quarkchain-token.io\",\n    \"gift5000-eth.com\",\n    \"myetherwallet-xn1.com\",\n    \"xn--htbtc-q81b.com\",\n    \"hittbte.com\",\n    \"hitlbtc.com\",\n    \"poloneix.co\",\n    \"polomeix.co\",\n    \"myetherwallet0.com\",\n    \"myehterwallet-ht.com\",\n    \"clo-airdrop.info\",\n    \"freecoiners.com\",\n    \"get-ethereum.cc\",\n    \"nmyetlerwailet.com\",\n    \"eth-promo.webz.cz\",\n    \"etherclaims.rf.gd\",\n    \"5000eth.rf.gd\",\n    \"eth-promo.kissr.com\",\n    \"nmyetlerwaiiet.com\",\n    \"getyoureth.com\",\n    \"eth-today.rf.gd\",\n    \"ethereum.org-giveaway.live\",\n    \"bonus.ether-gift.com\",\n    \"ether-gift.com\",\n    \"eth-givingaway.com\",\n    \"ethgiveaway.live\",\n    \"ethgiveaway.org\",\n    \"get5000eth.com\",\n    \"5000eth-giveaway.getforge.io\",\n    \"shapeslhift.io\",\n    \"shapeskift.io\",\n    \"bonus.eth-gifts.com\",\n    \"eth-gifts.com\",\n    \"offpromoeth.com\",\n    \"ethpromoverge.com\",\n    \"poloniex-withdrawals.bitballoon.com\",\n    \"gether-gift.com\",\n    \"get-ether.fund\",\n    \"eth-airdrop.live\",\n    \"classicetherwallt.com\",\n    \"hederahashgraph.infotokensale.com\",\n    \"nmyetlerwaliet.com\",\n    \"eth-drop.com\",\n    \"mnycryptoethwallet.com\",\n    \"bonus.ether-gives.com\",\n    \"ether-gives.com\",\n    \"ethforeth.com\",\n    \"ethereumpomo.online\",\n    \"mnyetnherwaliet.com\",\n    \"eth-foundation.github.io\",\n    \"forkdeltagithub.io\",\n    \"wwwetherdelta.com\",\n    \"xn--etherdlta-lib.com\",\n    \"xn--etherdelt-876d.com\",\n    \"xn--etherdela-ss6d.com\",\n    \"xn--therdelta-uf7d.com\",\n    \"xn--etherwallet-tv8eq7f.com\",\n    \"xn--meherwalle-212ei17o.com\",\n    \"xn--myetewallet-4dc4796g.com\",\n    \"xn--myetherallt-0k9ejx.com\",\n    \"xn--eterelta-ou9c9h.com\",\n    \"wallet-mew.com\",\n    \"xn--etherelta-u05d.com\",\n    \"xn--mcrypto-rpd.com\",\n    \"give-5000eth.com\",\n    \"bonus.ether-gifts.com\",\n    \"give5000-eth.com\",\n    \"5000ethgive.com\",\n    \"xn--myethrwalet-ns8e73d.com\",\n    \"aelftoken.com\",\n    \"dfinity.ml\",\n    \"myethverwallet.com\",\n    \"mithriltoken.tech\",\n    \"win-eth.org\",\n    \"eth-today.epizy.com\",\n    \"give5000eth.com\",\n    \"ethhit.org\",\n    \"nkn-token.io\",\n    \"get-ether.me\",\n    \"xn--myetherwalle-occ.com\",\n    \"xn--myethewllet-w48ep6a.com\",\n    \"promo.ethereumbonus.online\",\n    \"ethereumbonus.online\",\n    \"ethtoget.com\",\n    \"myetherwalletru.com\",\n    \"i-myetherwallet.com\",\n    \"eos-candy.com\",\n    \"neonexchange.website\",\n    \"get-ether.gift\",\n    \"etherscan.tech\",\n    \"xn--myethewllet-ife6494g.com\",\n    \"ncashtoken.org\",\n    \"eth.kissr.com\",\n    \"ethtransaction.ezyro.com\",\n    \"eth-give.org\",\n    \"ethtotrade.com\",\n    \"tokentelegram.net\",\n    \"eth-private-key.webz.cz\",\n    \"collect-eth.com\",\n    \"myetherwallet.lt\",\n    \"myetherwallet-register.com\",\n    \"eth-promotion.getforge.io\",\n    \"btc-gifts.info\",\n    \"eos-dac.com\",\n    \"localetherwallet.com\",\n    \"free5000eth.com\",\n    \"ethpaysafe.com\",\n    \"ico-telegram.co\",\n    \"eth-giving.com\",\n    \"xn--conbas-gva1a.com\",\n    \"www-colnbase.com\",\n    \"5000eth-giveaway.online\",\n    \"givefreeeth.com\",\n    \"ether-promo.getforge.io\",\n    \"gether.fund\",\n    \"ethereum-giveaway.tekcities.com\",\n    \"tron-airdrop.info\",\n    \"ethn.cash\",\n    \"eos-airdrop.com\",\n    \"xn--medim-9d2b.com\",\n    \"xn--myethrallet-zk9e6w.com\",\n    \"ethereums-2018-give-away.bitballoon.com\",\n    \"givingawayeth.com\",\n    \"ethereum-giveaway.com\",\n    \"ethsafe.trade\",\n    \"check-ethpayments1.kissr.com\",\n    \"ethereum-giveaway.kissr.com\",\n    \"smartolinks.com\",\n    \"livivid.com\",\n    \"clickmoneysystem1.com\",\n    \"ethereum-give.byethost16.com\",\n    \"givingawayethereum.com\",\n    \"ethereum.czweb.org\",\n    \"ethc.fund\",\n    \"eth-giveaway.trade\",\n    \"gram-ico.io\",\n    \"etherscans.net\",\n    \"io-eos.com\",\n    \"telegram-ico.tech\",\n    \"ico-telegram.money\",\n    \"icontoken.foundation\",\n    \"eth-give-away.webz.cz\",\n    \"5000eth.info\",\n    \"authorize.live\",\n    \"azone-web.com\",\n    \"binance-giveaway.firebaseapp.com\",\n    \"bitwelfare.biz\",\n    \"cryptocurrencies-bitcoin.com\",\n    \"eth-freesharing.com\",\n    \"eth-gives.com\",\n    \"eth-private.com\",\n    \"eth-trans.bitballoon.com\",\n    \"eth-transactions.com\",\n    \"ether-giveaway.com\",\n    \"ether-transfer.online\",\n    \"etherblessings.com\",\n    \"etherclaims.byethost8.com\",\n    \"ethereumdrop.com\",\n    \"ethereumdrop.org\",\n    \"ethereumone.info\",\n    \"ethergiveaway.win\",\n    \"ethergiveaways.tumblr.com\",\n    \"etheriumairdrop.com\",\n    \"etherum.site123.me\",\n    \"ethf.bid\",\n    \"ethgive.info\",\n    \"ethgiveaway.online\",\n    \"ethsend.online\",\n    \"ethtransaction.unaux.com\",\n    \"get-ethers.com.cp-32.webhostbox.net\",\n    \"give-binance.party\",\n    \"ip222.ip-54-38-120.eu\",\n    \"myetherpromo.com\",\n    \"neonexchange.online\",\n    \"tokencrowdsale.info\",\n    \"ethergiftwallet.com\",\n    \"ethpromo.gift\",\n    \"giveaway-ethereum.com\",\n    \"giveawayether.com\",\n    \"ethereumpromo.info\",\n    \"ethhit.com\",\n    \"free-5000eth.com\",\n    \"ethc.gift\",\n    \"dfnity.org\",\n    \"coinbase.droppages.com\",\n    \"meythapvettal.com\",\n    \"get-ethers.com\",\n    \"gramfoundation.io\",\n    \"check-ethpayments.kissr.com\",\n    \"centratoken.site\",\n    \"gramtokenico.com\",\n    \"eth-gifting.site\",\n    \"ethereums-promo.bitballoon.com\",\n    \"ethereum-promo2018.bitballoon.com\",\n    \"ethpromo.com\",\n    \"free-ethereum.czweb.org\",\n    \"ethn.vu\",\n    \"etherpromo.org\",\n    \"ethpay.site\",\n    \"ethgift.info\",\n    \"tokenpublicsale.com\",\n    \"etherpromo.online\",\n    \"tron-nextlevel.bitballoon.com\",\n    \"mycrypto.company\",\n    \"myetherapywaillet.com\",\n    \"myetherapywalilet.com\",\n    \"myetherapywallet.com\",\n    \"myetherapywalliet.com\",\n    \"mybethernvwallet.com\",\n    \"myotherapywallet.com\",\n    \"myuuetheraswallet.com\",\n    \"nnyctncrwalliet.com\",\n    \"nnyctncrvvallet.com\",\n    \"myetheurwallet.com\",\n    \"ico-telegram-ton.com.ru\",\n    \"ton-ico.ga\",\n    \"mailingserver2.com\",\n    \"gram-token.org\",\n    \"lco-telegram.org\",\n    \"tonogram.org\",\n    \"eth-give.kissr.com\",\n    \"myegethercowwallet.com\",\n    \"tron-giveavay-weeklyreport.bitballoon.com\",\n    \"ethdropnew.ml\",\n    \"cryptoplus.be\",\n    \"dfinity.org.in\",\n    \"payforfees.online\",\n    \"nnyctncrwaillet.com\",\n    \"myunetherhawallet.com\",\n    \"airdrop-bluzelle.com\",\n    \"tronfoundation.tech\",\n    \"safely-transfer.com\",\n    \"eth.vu\",\n    \"xn--myeterallet-nl8eo0c.com\",\n    \"get-eth.pl\",\n    \"cz-binance.com\",\n    \"signalsx.com\",\n    \"eth-gift.tw1.su\",\n    \"myetnarvellat.com\",\n    \"mynbethernvwallet.com\",\n    \"myehcrwalilet.com\",\n    \"gdaxsupport.com\",\n    \"coinbaseexchange.org\",\n    \"coinbasehelp.info\",\n    \"coinbaseassist.info\",\n    \"kinecosystem.net\",\n    \"telegramtoken.global\",\n    \"telcoinairdrop.com\",\n    \"xn--mytherwalet-3qb10c.com\",\n    \"ethgiveaway.club\",\n    \"coinnbase.com\",\n    \"dailyinequality.org\",\n    \"ethg.cz\",\n    \"crypto-payout.tk\",\n    \"vechain-ven.com\",\n    \"tokensale-telegram.com\",\n    \"ethr.cc\",\n    \"nnyecthenwellat.com\",\n    \"nnyiicteherwailiatt.com\",\n    \"themisnetwork.org\",\n    \"www-myetherwellet.com\",\n    \"eth-today.com\",\n    \"ethg.gift\",\n    \"ether-zero.info\",\n    \"ethgiveaway.info\",\n    \"bonus.ethersgive.com\",\n    \"ethersgive.com\",\n    \"tronfoundation.me\",\n    \"eths.li\",\n    \"auctus.network\",\n    \"auctuss.org\",\n    \"auctus.org.in\",\n    \"auctus-ico.network\",\n    \"xn--aucts-1gb.org\",\n    \"coinmakerbot.com\",\n    \"blnnance.com\",\n    \"myetherwallet.heliohost.org\",\n    \"ton-telegram.com\",\n    \"tonpublic.org\",\n    \"claim.ethdeal.info\",\n    \"telegram.trade\",\n    \"telegram-coin.org\",\n    \"nnyiictehervvailiatt.com\",\n    \"eths.vu\",\n    \"shivoms.io\",\n    \"telegramsale.com\",\n    \"hederashashgraph.com\",\n    \"eth-transaction.site44.com\",\n    \"xn--metherwllet-ln9eqi.com\",\n    \"xn--bitcointlk-85a.org\",\n    \"coinbaase.cf\",\n    \"coinnbase.ml\",\n    \"coinnbase.tk\",\n    \"binaance.ga\",\n    \"binaance.cf\",\n    \"binancce.cf\",\n    \"binancce.ml\",\n    \"xn--myetlherallet-341g.com\",\n    \"paveldurov.bitballoon.com\",\n    \"secure-eth-transactions.bitballoon.com\",\n    \"giveaway-ethereum.org\",\n    \"ethpayd.com\",\n    \"ethdrop.info\",\n    \"i-myetherwalnet.com\",\n    \"metronome-token.io\",\n    \"coin-zc.com\",\n    \"xn--bitcon-mwa.com\",\n    \"myettherwallet.xyz\",\n    \"ethpayment.bitballoon.com\",\n    \"ethopen.com\",\n    \"telegramnetwork.org\",\n    \"geth.cc\",\n    \"telegram.ceo\",\n    \"etherscan-giveaway.epizy.com\",\n    \"eths.bz\",\n    \"swaapy.network\",\n    \"binance.ethdeal.info\",\n    \"ethdeal.info\",\n    \"gramnetwork.org\",\n    \"galaxy-es0lutions.com\",\n    \"eth.altervista.org\",\n    \"musk.gift\",\n    \"mycrypto.bz\",\n    \"eth.vg\",\n    \"eth-giveaway-vote.bitballoon.com\",\n    \"eth-promo.com\",\n    \"work.nelsconsult.com.ng\",\n    \"etherfreegive.com\",\n    \"secure-s28h3h2j54jehdh43jh3k5h42l4h23hk6l49sjxvsatoshilite.bitballoon.com\",\n    \"giveaway-payment-add.bitballoon.com\",\n    \"big-promo-march.tumblr.com\",\n    \"ethgive.github.io\",\n    \"myetherwalletradeico.blogspot.de\",\n    \"owainpritchard.co.uk\",\n    \"et.gl\",\n    \"xn--condesk-ww4c.com\",\n    \"xn--myethrwllet-6qb2249g.com\",\n    \"airdrop-ether.bitballoon.com\",\n    \"info-transaction.com\",\n    \"eth.hn\",\n    \"binance-promo.net\",\n    \"trust-cryptopayment.com\",\n    \"ethereum-transfer.online\",\n    \"icotonsale.com\",\n    \"etherbonuses.com\",\n    \"ethfreeget.com\",\n    \"tongram.me\",\n    \"funfaircoin.org\",\n    \"coinbase-secure-a2k34j.bitballoon.com\",\n    \"ethereumtrans.com\",\n    \"xn--condes-8bb1661d.com\",\n    \"ethergiveawaytweet.tk\",\n    \"eth-giveaway.gq\",\n    \"nnyettiervwallat.com\",\n    \"nnyettiervwallet.com\",\n    \"eth.vote\",\n    \"eth-promo.bitballoon.com\",\n    \"ethfreepay.com\",\n    \"promo-trx.tk\",\n    \"paymentaddress.tumblr.com\",\n    \"cryptongram.org\",\n    \"campaigntoken.blogspot.de\",\n    \"coin-promos.com\",\n    \"xn--ytherwallet-iw8ex8c.com\",\n    \"smartexchangecenter.tk\",\n    \"xn--oindesk-15a.com\",\n    \"eth-transaction.secure.kissr.com\",\n    \"otoeveryday.info\",\n    \"ethfreecandy.bitballoon.com\",\n    \"etherscanio.github.io\",\n    \"ico-gram.net\",\n    \"gramtoken.network\",\n    \"ethfreegive.com\",\n    \"ether-promo.bitballoon.com\",\n    \"xn--cindesk-cx4c.com\",\n    \"theadsleader.000webhostapp.com\",\n    \"myetherwalletico.blogspot.de\",\n    \"eth-giveaway.info\",\n    \"syncfab.eu\",\n    \"eth-giveaway.com\",\n    \"icoeth.tk\",\n    \"eth-giveaway-706.htmlcomponentservice.com\",\n    \"mybinance.info\",\n    \"xn--myethewallet-kjc.com\",\n    \"polyswamr.io\",\n    \"polyswarm.me\",\n    \"polyswarms.io\",\n    \"eth4free.ml\",\n    \"ico-telegram-ton.com\",\n    \"telegram.tw\",\n    \"gramton.info\",\n    \"gramsap.enterprises\",\n    \"ico-telegram.club\",\n    \"telegram.one\",\n    \"etharscan.io\",\n    \"xn--coindes-jhb.com\",\n    \"blocikchair.info\",\n    \"eth-cz-319.htmlcomponentservice.com\",\n    \"xn--myetherwaet-0t8ea.com\",\n    \"eth-giveaway-514.htmlcomponentservice.com\",\n    \"xn--mtherwallet-z19ex1a.com\",\n    \"xn--eo-e9a.com\",\n    \"cosss.io\",\n    \"callistonetwork.tech\",\n    \"xn--metherwallt-819eo1a.com\",\n    \"ethfreepays.com\",\n    \"nnyettiervwailet.com\",\n    \"xn--hapehift-oh0de.com\",\n    \"gram.vc\",\n    \"bonus.etherpayout.com\",\n    \"etherpayout.com\",\n    \"ethereum-giveaway.info\",\n    \"xn--bnanc-fsax.com\",\n    \"xn--binnce-y0a.com\",\n    \"eth-giveaway-209.statichtmlapp.com\",\n    \"binance.bitballoon.com\",\n    \"binance-give.com\",\n    \"ilil.pw\",\n    \"myetherwallet.com.send-transaction_8hlg6z8mgt6zyg.ilil.pw\",\n    \"telegram.site\",\n    \"telegram.auction\",\n    \"miroskii.com\",\n    \"eth-transactions.neocities.org\",\n    \"online-eos.org\",\n    \"data-token.org\",\n    \"eth953883.htmlcomponentservice.com\",\n    \"reeveclancy.wixsite.com\",\n    \"transfer-eth.neocities.org\",\n    \"eth.secure-transactionssecure.com\",\n    \"secure-transactionssecure.com\",\n    \"nnyiictehervvailiat.com\",\n    \"odachi.neocities.org\",\n    \"bittrex-give.com\",\n    \"policypal.info\",\n    \"changlley.org\",\n    \"rnyertherwallet.com\",\n    \"xn--thabyss-u8a.com\",\n    \"callisto-airdrop.com\",\n    \"telegramfoundation.org\",\n    \"polymathnetwork.org\",\n    \"ethereum-promo.bitballoon.com\",\n    \"dfintty.org\",\n    \"dftnity.org\",\n    \"usermd.net\",\n    \"xn--gemn-nzab.com\",\n    \"xn--bnance-3va.com\",\n    \"xn--binnce-yc8b.com\",\n    \"xn--bnance-p9a.com\",\n    \"xn--binane-0ua.com\",\n    \"binalce.com\",\n    \"binince.com\",\n    \"xn--conbase-pza.com\",\n    \"xn--conbase-sfb.com\",\n    \"xn--coinbas-xya.com\",\n    \"xn--coinbas-z8a.com\",\n    \"xn--coinbse-9wa.com\",\n    \"xn--coinbse-lwa.com\",\n    \"xn--polonex-vfb.com\",\n    \"xn--ploniex-l0a.com\",\n    \"xn--plniex-bxab.com\",\n    \"xn--havvn-9za.io\",\n    \"havvenio.com\",\n    \"nucelus.vision\",\n    \"metronometoken.io\",\n    \"meganfoxloveyou.com\",\n    \"xn--yetherwalle-iw8e1s.com\",\n    \"tron-online.org\",\n    \"myenthereumwallet.com\",\n    \"myetherwallet-team.com\",\n    \"myetherwallet.usermd.net\",\n    \"xn--yetherwalle-tv8ezt.com\",\n    \"xn--coindek-873c.com\",\n    \"dflinity.org\",\n    \"ipsx.promo\",\n    \"havven-sale.com\",\n    \"tokensale-adhive.com\",\n    \"ataritoken.ltd\",\n    \"transfer-address-confirmation.droppages.com\",\n    \"dfinlty.org\",\n    \"poloniex.work\",\n    \"tokensale-havven.in\",\n    \"ico-havven.org\",\n    \"secure.poloniex.work\",\n    \"vechain-foundation.org\",\n    \"telegram.tokyo\",\n    \"forkdelta.io\",\n    \"ton-sale.com\",\n    \"ico-telegram.online\",\n    \"telegramtoken.io\",\n    \"gonetwork-airdrop.co\",\n    \"secure-transaction-confirmation.droppages.com\",\n    \"neonexchanges.org\",\n    \"eth-transact.secure.droppages.com\",\n    \"6khb.payment-checker-ethereum-id-bslyftexjuwcgv8.filesusr.com\",\n    \"akasha-world.com\",\n    \"address-transfer-confirmation.droppages.com\",\n    \"b5z.net\",\n    \"p.b5z.net\",\n    \"tokensale.xn--havve-7l1b.com\",\n    \"xn--coindes-bx3c.com\",\n    \"xn--coindek-s73c.com\",\n    \"locaeltherum.com\",\n    \"myetherwallet.tokenimport.com\",\n    \"tokenimport.com\",\n    \"leadscoin.network\",\n    \"localethereom.com\",\n    \"havvens.win\",\n    \"xn--metherwalle-jb9ejq.com\",\n    \"xn--myetheralle-jb9exm.com\",\n    \"tefood.me\",\n    \"havventoken.com\",\n    \"havven.cc\",\n    \"havven.eu\",\n    \"havven.top\",\n    \"mywalletether.com\",\n    \"myetherwallett.site\",\n    \"xn--myethewalle-w48erh.com\",\n    \"el-petro-coin.com\",\n    \"xn--yeterwallet-bm8eym.com\",\n    \"sale-orchid.com\",\n    \"electrify-asia.info\",\n    \"tron-foundation.org\",\n    \"dflnlty.org\",\n    \"polyswarm.tech\",\n    \"tokensale.polyswarm.tech\",\n    \"polyswarm.ru\",\n    \"dock.click\",\n    \"leadcoins.network\",\n    \"dock-tokensale.eu\",\n    \"polyswarm.pw\",\n    \"dock-io.org\",\n    \"heavven.io\",\n    \"havven.live\",\n    \"havven.sale\",\n    \"havven.info\",\n    \"dock.network\",\n    \"blocklancer.me\",\n    \"tokensale-havven.io\",\n    \"havven.pro\",\n    \"tokentelegram.com\",\n    \"ico-telegram.me\",\n    \"myetherzero.com\",\n    \"seele-token.pro\",\n    \"tokensale-havven.com\",\n    \"polyswarm.in\",\n    \"sale-dock.com\",\n    \"polyswarm.co\",\n    \"polyswarm.bid\",\n    \"ton.fund\",\n    \"forkdeita.github.io\",\n    \"xn--binnce-5nf.com\",\n    \"xn--biace-4l1bb.com\",\n    \"jiocoins.io\",\n    \"xn--polonx-0va26t.com\",\n    \"myetlherewallet.org\",\n    \"myeithereiuwallet.com\",\n    \"fin-trux.com\",\n    \"finetrux.com\",\n    \"telcoin.pro\",\n    \"xn--es-8bb.com\",\n    \"xn--myetherallt-pl9elw.com\",\n    \"ico-dock.org\",\n    \"dock.io-bonus.online\",\n    \"docks.site\",\n    \"dock-ico.pro\",\n    \"dock-ico.eu\",\n    \"dock.su\",\n    \"tokensale-dock.io\",\n    \"dock-ico.site\",\n    \"openplatform.tech\",\n    \"rightmesh.in\",\n    \"waxtoken.in\",\n    \"metamaskgiveaway.xyz\",\n    \"nebulastoken.in\",\n    \"vechain-foundation.com\",\n    \"icotoken-current.top\",\n    \"xn--myethrwalle-jb9e19a.com\",\n    \"xn--myetheralle-7b9ezl.com\",\n    \"iconfoundation.co\",\n    \"fundrequest.info\",\n    \"xn--myetherwale-os8e7x.com\",\n    \"remme-ico.eu\",\n    \"gonetwork.live\",\n    \"token.gonetwork.pro\",\n    \"gonetwork.pro\",\n    \"gonetwork.eu\",\n    \"nucleus-vision.cc\",\n    \"jibreltoken.in\",\n    \"dock.so\",\n    \"dock.promo\",\n    \"xn--mycrypt-r0a.com\",\n    \"xn--mycrypt-g1a.com\",\n    \"xn--mycrpto-y2a.com\",\n    \"ethexploit.org\",\n    \"remme.in\",\n    \"remme.ws\",\n    \"remme.com.ng\",\n    \"nyeitthervvallet.com\",\n    \"xn--myeerhwailet-ooc.com\",\n    \"myeterhwaliot.com\",\n    \"remme.live\",\n    \"xn--yethewalle-to2exkhi.com\",\n    \"myetherwallet.custom-token.com\",\n    \"custom-token.com\",\n    \"sale-earn.com\",\n    \"bankera.live\",\n    \"originprotocol.io\",\n    \"originprotocol.online\",\n    \"originprotocols.com\",\n    \"origirprotocol.com\",\n    \"originprotocol.tokenpublicsales.com\",\n    \"originprotocol.typeform.com\",\n    \"originprofocol.com\",\n    \"hcepro.com\",\n    \"trx.foundation\",\n    \"tokensale.adhive.net\",\n    \"adhive.net\",\n    \"decentral.market\",\n    \"cryptoexploite.com\",\n    \"blockclain.net\",\n    \"xn--blckchin-5za9o.info\",\n    \"xn--blkhain-m0a4pb.info\",\n    \"xn--blocchal-gmb8m.info\",\n    \"xn--blocchaln-orb.info\",\n    \"xn--blocchan-gmb7c.info\",\n    \"xn--blockaden-lsen-5pb.com\",\n    \"xn--blockchai-3vb.info\",\n    \"xn--blockchai-jvb.info\",\n    \"xn--blockchal-3vb.info\",\n    \"xn--blockcham-ipb.info\",\n    \"xn--blockchan-2pb.com\",\n    \"xn--blockchan-75a.com\",\n    \"xn--blockchan-7sb.info\",\n    \"xn--blockchan-d5a.net\",\n    \"xn--blockchan-dob.info\",\n    \"xn--blockchan-ipb.com\",\n    \"xn--blockchan-ipb.info\",\n    \"xn--blockchan-nk7d.com\",\n    \"xn--blockchan-xub.info\",\n    \"xn--blockchann-4ub.com\",\n    \"xn--blockchi-n7a50e.info\",\n    \"xn--blockchi-o8a54d.info\",\n    \"xn--blockchi-p99co8a.com\",\n    \"xn--blockchim-hdb.info\",\n    \"xn--blockchin-1xb.info\",\n    \"xn--blockchin-61a.info\",\n    \"xn--blockchin-61a.net\",\n    \"xn--blockchin-6ib.info\",\n    \"xn--blockchin-ccb.info\",\n    \"xn--blockchin-h4a.com\",\n    \"xn--blockchin-h4a.info\",\n    \"xn--blockchin-hdb.info\",\n    \"xn--blockchin-hhb.info\",\n    \"xn--blockchin-mib.net\",\n    \"xn--blockchin-wcb.com\",\n    \"xn--blockchn-fza4j.com\",\n    \"xn--blockchn-fza4j.info\",\n    \"xn--blockchn-n7a43b.info\",\n    \"xn--blockchn-p0a.info\",\n    \"xn--blockchn-tx0d4p.com\",\n    \"xn--blockclai-3vb.info\",\n    \"xn--blockclin-hdb.com\",\n    \"xn--blockclin-hdb.info\",\n    \"xn--blockclin-hdb.org\",\n    \"xn--blockflte-kirchrode-w6b.de\",\n    \"xn--blockfltenquartett-windspiel-81c.de\",\n    \"xn--blockhai-obb78c.info\",\n    \"xn--blockhain-4eb.com\",\n    \"xn--blockhain-pfb.com\",\n    \"xn--blockhain-pfb.info\",\n    \"xn--blockhain-zdb.info\",\n    \"xn--blockhan-obb65a.info\",\n    \"xn--blockhas-d6a.com\",\n    \"xn--blockwallt-j7a.com\",\n    \"xn--blokchai-fqb.info\",\n    \"xn--blokchain-nfb.info\",\n    \"xn--blokhain-28ab.info\",\n    \"xn--bockclnain-eyb.info\",\n    \"xn--mymoeo-zt7bzf.com\",\n    \"xn--mymoer-nqc1368c.com\",\n    \"xn--mymoero-c13c.com\",\n    \"xn--mymoero-s13c.com\",\n    \"xn--mymoneo-f63c.com\",\n    \"xn--mymoneo-v63c.com\",\n    \"xn--mymoneo-y53c.com\",\n    \"xn--mymoner-j0a.com\",\n    \"xn--mymoner-j5b.com\",\n    \"xn--mymoner-r0a.com\",\n    \"xn--mymoner-z0a.com\",\n    \"xn--mymoner-z2c.com\",\n    \"xn--mymonro-fya.com\",\n    \"xn--mymonro-x8a.com\",\n    \"xn--myetheallet-l58emu.com\",\n    \"xn--myetheraet-9k2ea77h.com\",\n    \"xn--myetheralet-ms8e21b.com\",\n    \"xn--myetheralle-7b9exm.com\",\n    \"xn--myetherallet-5s5f.com\",\n    \"xn--myetherallet-fs5f.com\",\n    \"xn--myetherewalle-1t1g.com\",\n    \"xn--myetherllet-pl9e6k.com\",\n    \"xn--myethervvalle-8vc.com\",\n    \"xn--myetherwaet-61ea.com\",\n    \"xn--myetherwaet-8eda.com\",\n    \"xn--myetherwaet-ns8ea.com\",\n    \"xn--myetherwale-ns8e8x.com\",\n    \"xn--myetherwalet-0fb.com\",\n    \"xn--myetherwalet-0z4f.com\",\n    \"xn--myetherwalet-814f.com\",\n    \"xn--myetherwalet-d9b.com\",\n    \"xn--myetherwalet-h14f.com\",\n    \"xn--myetherwalle-9me.com\",\n    \"xn--myetherwalle-ek5f.com\",\n    \"xn--myetherwalle-fqc.com\",\n    \"xn--myetherwalle-opc.com\",\n    \"xn--myetherwalle-q05f.com\",\n    \"xn--myetherwllet-wob.com\",\n    \"xn--myetherwllt-r7a0i.com\",\n    \"xn--myethewaliet-9d5f.com\",\n    \"xn--myethewalle-3ic0947g.com\",\n    \"xn--myethewallet-0e5f.com\",\n    \"xn--myethewallet-1kc.com\",\n    \"xn--myethewallet-bkc.com\",\n    \"xn--myethewallet-vof.com\",\n    \"xn--myethewalliet-nm1g.com\",\n    \"xn--myethewallt-kbb3019g.com\",\n    \"xn--myethewallt-w48ew7b.com\",\n    \"xn--myethrwalet-6qb6408g.com\",\n    \"xn--myethrwalet-ms8e83d.com\",\n    \"xn--myethrwallet-1db.com\",\n    \"xn--myethrwallt-29af.com\",\n    \"xn--myethrwallt-29as.com\",\n    \"xn--myethrwllet-q7a31e.com\",\n    \"xn--myethrwllet-r8a3c.com\",\n    \"fintrux.eu\",\n    \"refereum-ico.eu\",\n    \"arcblock-ico.org\",\n    \"xn--fuson-1sa.org\",\n    \"refereum-token.com\",\n    \"fintrux.co\",\n    \"ico-ton.org\",\n    \"xn--mytherwallt-cbbv.com\",\n    \"xmoneta.co\",\n    \"data-wallet.co\",\n    \"tokensale.data-wallet.co\",\n    \"xn--myeerhwallot-ooc.com\",\n    \"xn--myeterwalet-cm8epi.com\",\n    \"xn--myeterwalle-cm8ev6a.com\",\n    \"rnyetherumwallet.com\",\n    \"republic-protocol.net\",\n    \"nyeihitervvallatt.com\",\n    \"arcblock.eu\",\n    \"republicprotocol.eu\",\n    \"tokensale-fusion.com\",\n    \"myetherwalletjoin.com\",\n    \"medicalchian.com\",\n    \"myeahteirwaliet.com\",\n    \"myenhtersvvailct.com\",\n    \"trinity-token.com\",\n    \"xn--eo-yzs.com\",\n    \"zilliqa.in\",\n    \"sparc.pro\",\n    \"myetherwallet.import-tokens.com\",\n    \"token-gram.org\",\n    \"xn--shapshift-e4a.com\",\n    \"xn--shapshift-y4a.com\",\n    \"xn--shpeshift-c2a.com\",\n    \"xn--shpeshift-r1a.com\",\n    \"xn--shapshift-o4a.com\",\n    \"xn--shpeshift-w2a.com\",\n    \"xn--shapeshft-w5a.com\",\n    \"tokensale-fusion.org\",\n    \"fusion-ico.com\",\n    \"beetolen.com\",\n    \"tokencrowdsale.online\",\n    \"fusion.tokencrowdsale.online\",\n    \"beetokem.com\",\n    \"block.chaiins.in\",\n    \"origintrail.in\",\n    \"bit-z.ru\",\n    \"xn--myetherallet-nu5f.com\",\n    \"xn--mytherwalet-3qb08c.com\",\n    \"xn--myeterwllet-cm8et1d.com\",\n    \"xn--mytherwllet-q7a01e.com\",\n    \"xn--biance-xt7b.com\",\n    \"xn--bnance-wic.com\",\n    \"xn--biance-jeb.com\",\n    \"xn--bttrx-9za8334c.com\",\n    \"wwwkodakcoin.com\",\n    \"myetherwallet.uk.com\",\n    \"kodakone.cc\",\n    \"nyeihitervvallet.com\",\n    \"xn--myeterwalet-cm8eoi.com\",\n    \"nucleus.foundation\",\n    \"beetoken-ico.com\",\n    \"data-token.com\",\n    \"tron-labs.com\",\n    \"ocoin.tech\",\n    \"aionfoundation.com\",\n    \"ico-telegram.org\",\n    \"nyeihitervvallat.com\",\n    \"telegramcoin.us\",\n    \"daddi.cloud\",\n    \"daditoken.com\",\n    \"blockarray.org\",\n    \"dadi-cloud.net\",\n    \"wanchainfunding.org\",\n    \"ico-telegram.io\",\n    \"iconfoundation.site\",\n    \"iost.co\",\n    \"beetoken-ico.eu\",\n    \"cindicator.network\",\n    \"wanchainetwork.org\",\n    \"wamchain.org\",\n    \"wanchainltd.org\",\n    \"wanchainalliance.org\",\n    \"nucleus-vision.net\",\n    \"ledgerwallet.by\",\n    \"nucleuss.vision\",\n    \"myenhterswailct.com\",\n    \"cobin-hood.com\",\n    \"wanchainfoundation.org\",\n    \"xn--polniex-ex4c.com\",\n    \"xn--polniex-s1a.com\",\n    \"xn--polonex-ieb.com\",\n    \"xn--polonex-sza.com\",\n    \"xn--polonex-zw4c.com\",\n    \"xn--polonix-ws4c.com\",\n    \"xn--polonix-y8a.com\",\n    \"xn--pooniex-ojb.com\",\n    \"gramico.info\",\n    \"dimnsions.network\",\n    \"www-gemini.com\",\n    \"login-kucoin.net\",\n    \"venchain.foundation\",\n    \"grampreico.com\",\n    \"tgram.cc\",\n    \"ton-gramico.com\",\n    \"wwwpaywithink.com\",\n    \"coniomi.com\",\n    \"paywithnk.com\",\n    \"paywithlnk.com\",\n    \"iluminatto.com.br\",\n    \"pundix.eu\",\n    \"xn--bttrx-esay.com\",\n    \"xn--bttrex-w8a.com\",\n    \"xn--bnance-bwa.com\",\n    \"xn--shpeshift-11a.com\",\n    \"xn--shapeshif-ts6d.com\",\n    \"xn--shapshift-yf7d.com\",\n    \"wwwbluzelle.com\",\n    \"bluzelie.com\",\n    \"nucleus-vision.org\",\n    \"omisegonetwork.site\",\n    \"etlherzero.com\",\n    \"etlherdelta.com\",\n    \"xn--condesk-0ya.com\",\n    \"xn--condesk-sfb.com\",\n    \"xn--coindsk-vs4c.com\",\n    \"iexecplatform.com\",\n    \"tongramico.com\",\n    \"nucleus-vision.eu\",\n    \"intchain.network\",\n    \"wanchain.cloud\",\n    \"bluzelle-ico.com\",\n    \"ethzero-wallet.com\",\n    \"xn--metherwalle-jb9et7d.com\",\n    \"xn--coinesk-jo3c.com\",\n    \"venchainfoundation.com\",\n    \"myenhtersvvailot.com\",\n    \"ether-zero.net\",\n    \"ins.foundation\",\n    \"nastoken.org\",\n    \"telcointoken.com\",\n    \"ether0.org\",\n    \"eterzero.org\",\n    \"bluzelle-ico.eu\",\n    \"bleuzelle.com\",\n    \"appcoinstoken.org\",\n    \"xn--quanstamp-8s6d.com\",\n    \"myehntersvvailct.com\",\n    \"myeherwalllet.com\",\n    \"ico-bluzelle.com\",\n    \"bluzelle.im\",\n    \"bluzelle.one\",\n    \"bluzele.sale\",\n    \"bluzele.co\",\n    \"sether.ws\",\n    \"xn--myetherwalet-6gf.com\",\n    \"xn--rnyethewaliet-om1g.com\",\n    \"rnyethervailet.com\",\n    \"mvetherwaliet.com\",\n    \"rnyetherwailet.com\",\n    \"myethervaliet.com\",\n    \"rnyethervaliet.com\",\n    \"mvetherwalilet.com\",\n    \"xn--myethewalie-3ic0947g.com\",\n    \"xn--mthrwallet-z6ac3y.com\",\n    \"xn--myeherwalie-vici.com\",\n    \"xn--myethervvalie-8vc.com\",\n    \"xn--mythrwallt-06acf.com\",\n    \"xn--mtherwallet-y9a6y.com\",\n    \"myetherwallet.applytoken.tk\",\n    \"ethereum-zero.com\",\n    \"quanstamptoken.tk\",\n    \"bluzelle.network\",\n    \"ether-wallet.org\",\n    \"tron-wallet.info\",\n    \"appcoinsproject.com\",\n    \"vechain.foundation\",\n    \"tronlab.site\",\n    \"tronlabs.network\",\n    \"bluzelle.cc\",\n    \"ethblender.com\",\n    \"ethpaperwallet.net\",\n    \"waltontoken.org\",\n    \"icoselfkey.org\",\n    \"etherzeroclaim.com\",\n    \"etherzero.promo\",\n    \"bluzelle.pro\",\n    \"token-selfkey.org\",\n    \"xn--etherdlta-0f7d.com\",\n    \"sether.in\",\n    \"xn--ttrex-ysa9423c.com\",\n    \"bluzelle.eu\",\n    \"bluzelle.site\",\n    \"gifto.tech\",\n    \"xn--os-g7s.com\",\n    \"selfkey.co\",\n    \"xn--myeherwalet-ns8exy.com\",\n    \"xn--coinelegraph-wk5f.com\",\n    \"dai-stablecoin.com\",\n    \"eos-token.org\",\n    \"venchain.org\",\n    \"gatcoins.io\",\n    \"deepbrainchain.co\",\n    \"myetherwalililet.info\",\n    \"myehvterwallet.com\",\n    \"myehterumswallet.com\",\n    \"nucleusico.com\",\n    \"tronlab.tech\",\n    \"0x-project.com\",\n    \"gift-token-events.mywebcommunity.org\",\n    \"funfairtoken.org\",\n    \"breadtokenapp.com\",\n    \"cloudpetstore.com\",\n    \"myethwalilet.com\",\n    \"selfkeys.org\",\n    \"wallet-ethereum.com\",\n    \"xn--methrwallt-26ar0z.com\",\n    \"xn--mytherwllet-r8a0c.com\",\n    \"bluzelle.promo\",\n    \"tokensale.bluzelle.promo\",\n    \"cedarlake.org\",\n    \"marketingleads4u.com\",\n    \"cashaa.co\",\n    \"xn--inance-hrb.com\",\n    \"wanchain.tech\",\n    \"zenprolocol.com\",\n    \"ethscan.io\",\n    \"etherscan.in\",\n    \"props-project.com\",\n    \"zilliaq.com\",\n    \"reqestnetwork.com\",\n    \"etherdelta.pw\",\n    \"ethereum-giveaway.org\",\n    \"mysimpletoken.org\",\n    \"binancc.com\",\n    \"blnance.org\",\n    \"elherdelta.io\",\n    \"xn--hapeshit-ez9c2y.com\",\n    \"tenxwallet.co\",\n    \"singularitynet.info\",\n    \"mytlherwaliet.info\",\n    \"iconmainnet.ml\",\n    \"tokenselfkey.org\",\n    \"xn--myetewallet-cm8e5y.com\",\n    \"envione.org\",\n    \"myetherwalletet.com\",\n    \"claimbcd.com\",\n    \"ripiocreditnetwork.in\",\n    \"xn--yeterwallet-ml8euo.com\",\n    \"ethclassicwallet.info\",\n    \"myltherwallet.ru.com\",\n    \"etherdella.com\",\n    \"xn--yeterwallet-bm8ewn.com\",\n    \"singularty.net\",\n    \"cloudkitties.co\",\n    \"iconfoundation.io\",\n    \"kittystat.com\",\n    \"gatscoin.io\",\n    \"singularitynet.in\",\n    \"sale.canay.io\",\n    \"canay.io\",\n    \"wabicoin.co\",\n    \"envion.top\",\n    \"sirinslabs.com\",\n    \"tronlab.co\",\n    \"paxful.com.ng\",\n    \"changellyli.com\",\n    \"ethereum-code.com\",\n    \"xn--plonex-6va6c.com\",\n    \"envion.co\",\n    \"envion.cc\",\n    \"envion.site\",\n    \"ethereumchain.info\",\n    \"xn--envon-1sa.org\",\n    \"xn--btstamp-rfb.net\",\n    \"envlon.org\",\n    \"envion-ico.org\",\n    \"spectivvr.org\",\n    \"sirinlbs.com\",\n    \"ethereumdoubler.life\",\n    \"xn--myetherwllet-fnb.com\",\n    \"sirin-labs.com\",\n    \"sirin-labs.org\",\n    \"envion.one\",\n    \"envion.live\",\n    \"propsproject.org\",\n    \"propsprojects.com\",\n    \"decentralland.org\",\n    \"xn--metherwalet-ns8ep4b.com\",\n    \"redpulsetoken.co\",\n    \"propsproject.tech\",\n    \"xn--myeterwalet-nl8emj.com\",\n    \"powrerledger.com\",\n    \"cryptokitties.com\",\n    \"sirinlabs.pro\",\n    \"sirinlabs.co\",\n    \"sirnlabs.com\",\n    \"superbitcoin-blockchain.info\",\n    \"hellobloom.me\",\n    \"mobus.network\",\n    \"powrrledger.com\",\n    \"xn--myeherwalet-ms8eyy.com\",\n    \"qlink-ico.com\",\n    \"gatcoin.in\",\n    \"tokensale.gamefllp.com\",\n    \"gamefllp.com\",\n    \"xn--myeherwalle-vici.com\",\n    \"xn--myetherwalet-39b.com\",\n    \"xn--polonex-ffb.com\",\n    \"xn--birex-leba.com\",\n    \"raiden-network.org\",\n    \"sirintabs.com\",\n    \"xn--metherwallt-79a30a.com\",\n    \"xn--myethrwllet-2kb3p.com\",\n    \"myethlerwallet.eu\",\n    \"xn--btrex-b4a.com\",\n    \"powerrledger.com\",\n    \"xn--cointeegraph-wz4f.com\",\n    \"myerherwalet.com\",\n    \"qauntstanp.com\",\n    \"myetherermwallet.com\",\n    \"xn--myethewalet-ns8eqq.com\",\n    \"xn--nvion-hza.org\",\n    \"nnyetherwallelt.ru.com\",\n    \"ico-wacoin.com\",\n    \"xn--myeterwalet-nl8enj.com\",\n    \"bitcoinsilver.io\",\n    \"t0zero.com\",\n    \"tokensale.gizer.in\",\n    \"gizer.in\",\n    \"wabitoken.com\",\n    \"gladius.ws\",\n    \"xn--metherwallt-8bb4w.com\",\n    \"quanttstamp.com\",\n    \"gladius.im\",\n    \"ethereumstorage.net\",\n    \"powerledgerr.com\",\n    \"xn--myeherwallet-4j5f.com\",\n    \"quamtstamp.com\",\n    \"quntstamp.com\",\n    \"xn--changely-j59c.com\",\n    \"shapeshlft.com\",\n    \"coinbasenews.co.uk\",\n    \"xn--metherwallet-hmb.com\",\n    \"envoin.org\",\n    \"powerledger.com\",\n    \"bitstannp.net\",\n    \"xn--myetherallet-4k5fwn.com\",\n    \"xn--coinbas-pya.com\",\n    \"requestt.network\",\n    \"oracls.network\",\n    \"sirinlabs.website\",\n    \"powrledger.io\",\n    \"slackconfirm.com\",\n    \"shape-shift.io\",\n    \"oracles-network.org\",\n    \"xn--myeherwalle-zb9eia.com\",\n    \"blockstack.one\",\n    \"urtust.io\",\n    \"bittrex.one\",\n    \"t0-ico.com\",\n    \"xn--cinbase-90a.com\",\n    \"xn--metherwalet-ns8ez1g.com\",\n    \"tzero-ico.com\",\n    \"tzero.su\",\n    \"tzero.website\",\n    \"blockstack.network\",\n    \"ico-tzero.com\",\n    \"spectre.site\",\n    \"tzero.pw\",\n    \"spectre-ai.net\",\n    \"xn--waxtokn-y8a.com\",\n    \"dmarket.pro\",\n    \"bittrex.com11648724328774.cf\",\n    \"bittrex.com1987465798.ga\",\n    \"autcus.org\",\n    \"t-zero.org\",\n    \"xn--zero-zxb.com\",\n    \"myetherwalletfork.com\",\n    \"blokclbain.info\",\n    \"datum.sale\",\n    \"spectre-ai.org\",\n    \"powerledgr.com\",\n    \"simpletoken.live\",\n    \"sale.simpletoken.live\",\n    \"qauntstamp.com\",\n    \"raiden-network.com\",\n    \"metalpayme.com\",\n    \"quantstamp-ico.com\",\n    \"myetherwailetclient.com\",\n    \"biockchain.biz\",\n    \"wallets-blockchain.com\",\n    \"golemairdrop.com\",\n    \"omisegoairdrop.net\",\n    \"blodkchainwallet.info\",\n    \"walton-chain.org\",\n    \"elite888-ico.com\",\n    \"bitflyerjp.com\",\n    \"chainlinksmartcontract.com\",\n    \"stormtoken.eu\",\n    \"omise-go.tech\",\n    \"saltending.com\",\n    \"stormltoken.com\",\n    \"xn--quanttamp-42b.com\",\n    \"stormtoken.co\",\n    \"storntoken.com\",\n    \"stromtoken.com\",\n    \"storm-token.com\",\n    \"stormtokens.io\",\n    \"ether-delta.com\",\n    \"ethconnect.live\",\n    \"ethconnect.trade\",\n    \"xn--bttrex-3va.net\",\n    \"quantstamp.com.co\",\n    \"wancha.in\",\n    \"augur-network.com\",\n    \"quantstamp.com.ua\",\n    \"myetherwalletmew.com\",\n    \"myetherumwalletts.com\",\n    \"xn--quanstamp-tmd.com\",\n    \"quantsstamps.com\",\n    \"changellyl.net\",\n    \"xn--myetherwalet-1fb.com\",\n    \"myethereumwallets.com\",\n    \"xn--myetherwalet-e9b.com\",\n    \"quantslamp.com\",\n    \"metelpay.com\",\n    \"xn--eterdelta-m75d.com\",\n    \"linksmartcontract.com\",\n    \"myetherwalletaccess.com\",\n    \"myetherwalletcheck.com\",\n    \"myetherwalletcheck.info\",\n    \"myetherwalletconf.com\",\n    \"myetherwalleteal.com\",\n    \"myetherwalletec.com\",\n    \"myetherwalletgeth.com\",\n    \"myetherwalletmetamask.com\",\n    \"myetherwalletmm.com\",\n    \"myetherwalletmy.com\",\n    \"myetherwalletnh.com\",\n    \"myetherwalletnod.com\",\n    \"myetherwalletrr.com\",\n    \"myetherwalletrty.com\",\n    \"myetherwalletsec.com\",\n    \"myetherwalletsecure.com\",\n    \"myetherwalletutc.com\",\n    \"myetherwalletver.info\",\n    \"myetherwalletview.com\",\n    \"myetherwalletview.info\",\n    \"myetherwalletvrf.com\",\n    \"myetherwalletmist.com\",\n    \"myetherwalletext.com\",\n    \"myetherwalletjson.com\",\n    \"mettalpay.com\",\n    \"bricklblock.io\",\n    \"bittrexy.com\",\n    \"utrust.so\",\n    \"myethierwallet.org\",\n    \"metallpay.com\",\n    \"kraken-wallet.com\",\n    \"dmarkt.io\",\n    \"etherdeltla.com\",\n    \"unlversa.io\",\n    \"universa.sale\",\n    \"mercuryprotocol.live\",\n    \"ripiocredlt.network\",\n    \"myetlherwa11et.com\",\n    \"dentacoin.in\",\n    \"rdrtg.com\",\n    \"myetherwallet.com.rdrgh.com\",\n    \"rdrgh.com\",\n    \"ripiocreditnetwork.co\",\n    \"riaden.network\",\n    \"hydrominer.biz\",\n    \"rdrblock.com\",\n    \"reqest.network\",\n    \"senstoken.com\",\n    \"myetherwallat.services\",\n    \"ripiocredit.net\",\n    \"xn--metherwallet-c06f.com\",\n    \"ico.ripiocredits.com\",\n    \"ripiocredits.com\",\n    \"raidens.network\",\n    \"artoken.co\",\n    \"myetherwalletlgn.com\",\n    \"etherblog.click\",\n    \"stormtoken.site\",\n    \"httpmyetherwallet.com\",\n    \"myetherwalletverify.com\",\n    \"byzantiumfork.com\",\n    \"myetherwallet.com.byzantiumfork.com\",\n    \"www-myethervvallet.com\",\n    \"ether24.info\",\n    \"block-v.io\",\n    \"bittrex.cash\",\n    \"shapishift.io\",\n    \"ripiocerdit.network\",\n    \"rnyetherwa11et.com\",\n    \"claimether.com\",\n    \"enigmatokensale.com\",\n    \"ethereum-org.com\",\n    \"mvetnerwallet.com\",\n    \"myctherwallet.com\",\n    \"myetherwaltet.com\",\n    \"myetherwatlet.com\",\n    \"privatix.me\",\n    \"myetherwalletcnf.com\",\n    \"myetherwalletver.com\",\n    \"privatix.top\",\n    \"privatix.pro\",\n    \"stormtoken.cc\",\n    \"raiden.online\",\n    \"stormstoken.com\",\n    \"myetereumwallet.com\",\n    \"stormtokens.net\",\n    \"myetherwalletconf.info\",\n    \"storrntoken.com\",\n    \"worldofbattles.io\",\n    \"ico.worldofbattles.io\",\n    \"privatix.live\",\n    \"riden.network\",\n    \"raidan.network\",\n    \"ralden.network\",\n    \"mymyetherwallet.com\",\n    \"myetherwallets.net\",\n    \"myetherwalletverify.info\",\n    \"stormxtoken.com\",\n    \"myethereum-wallet.com\",\n    \"myetherwallet-forkprep.pagedemo.co\",\n    \"myetnerwailet.com\",\n    \"www-mvetherwallet.com\",\n    \"etheirdelta.com\",\n    \"myetherwalletiu.com\",\n    \"myetherwaiiett.com\",\n    \"xn--mytherwalet-cbb87i.com\",\n    \"xn--myethrwallet-ivb.co\",\n    \"xn--myeterwallet-f1b.com\",\n    \"myehterwaliet.com\",\n    \"omegaone.co\",\n    \"myetherwaiietw.com\",\n    \"slack.com.ru\",\n    \"polkodot.network\",\n    \"request-network.net\",\n    \"requestnetwork.live\",\n    \"binancie.com\",\n    \"first-eth.info\",\n    \"myewerthwalliet.com\",\n    \"enjincoin.pw\",\n    \"xn--bitrex-k17b.com\",\n    \"alrswap.io\",\n    \"www-request.network\",\n    \"myetnenwallet.com\",\n    \"www-enigma.co\",\n    \"cryptoinsidenews.com\",\n    \"air-swap.tech\",\n    \"launch.airswap.cc\",\n    \"airswap.cc\",\n    \"airswaptoken.com\",\n    \"launch.airswap.in\",\n    \"airswap.in\",\n    \"security-steemit.com.mx\",\n    \"blockchalnwallet.com\",\n    \"blodkchainwallet.com\",\n    \"blodkchaln.com\",\n    \"myethereumwaiiet.com\",\n    \"myethereumwaliet.com\",\n    \"myethereumwalilet.com\",\n    \"myetherswailet.com\",\n    \"myetherswaliet.com\",\n    \"myetherswalilet.com\",\n    \"myetherwalilett.com\",\n    \"myetherwalletl.com\",\n    \"myetherwalletww.com\",\n    \"myethereunwallet.com\",\n    \"myethereumwallct.com\",\n    \"myetherwaiieti.com\",\n    \"myetherwaiiete.com\",\n    \"upfirng.com\",\n    \"paypie.net\",\n    \"paypie.tech\",\n    \"soam.co\",\n    \"myetherwaiict.com\",\n    \"numerai-token.com\",\n    \"www-bankera.com\",\n    \"vvanchain.org\",\n    \"omisegoairdrop.com\",\n    \"xn--enjncoin-41a.io\",\n    \"suncontract.su\",\n    \"myetherwaiietr.com\",\n    \"shapeshiff.io\",\n    \"warchain.org\",\n    \"myethwallett.com\",\n    \"myethervvaliet.com\",\n    \"wanchains.org\",\n    \"etherparty.in\",\n    \"enjincoin.me\",\n    \"etiam.io\",\n    \"invest.smartlands.tech\",\n    \"smartlands.tech\",\n    \"enijncoin.io\",\n    \"wanchain.network\",\n    \"nimiq.su\",\n    \"enjincoin.sale\",\n    \"tenxwallet.io\",\n    \"golem-network.net\",\n    \"myyethwallet.ml\",\n    \"mywetherwailiet.com\",\n    \"omg-omise.com\",\n    \"district0x.tech\",\n    \"centra-token.com\",\n    \"etherdetla.com\",\n    \"etnerparty.io\",\n    \"etherdelta.su\",\n    \"myetherwallett.neocities.org\",\n    \"myetherwallet-secure.com\",\n    \"myethereumwalletntw.info\",\n    \"real-markets.io\",\n    \"wallet-ethereum.org\",\n    \"request-network.com\",\n    \"shapeshifth.io\",\n    \"shiapeshift.in\",\n    \"coin.red-puise.com\",\n    \"ibittreix.com\",\n    \"coinkbase.com\",\n    \"cindicator.pro\",\n    \"myetherwallet.com.ailogin.me\",\n    \"eventchain.co\",\n    \"kinkik.in\",\n    \"myetherumwalletview.com\",\n    \"protostokenhub.com\",\n    \"coinrbase.com\",\n    \"myetherwalletlogin.com\",\n    \"omisegotoken.com\",\n    \"myethereumwalletntw.com\",\n    \"reall.markets\",\n    \"cobinhood.org\",\n    \"cobinhood.io\",\n    \"happy-coin.org\",\n    \"bitfinex.com.co\",\n    \"bitfienex.com\",\n    \"iconn.foundation\",\n    \"centra.vip\",\n    \"smartcontract.live\",\n    \"air-token.com\",\n    \"centra.credit\",\n    \"myetherwallet-singin.com\",\n    \"smartcontractlink.com\",\n    \"shapesshift.io\",\n    \"0xtoken.io\",\n    \"augurproject.co\",\n    \"ethereumus.one\",\n    \"myetherumwalet.com\",\n    \"myetherwalletsignin.com\",\n    \"change-bank.org\",\n    \"charge-bank.com\",\n    \"myetherwalletsingin.com\",\n    \"myetherwalletcontract.com\",\n    \"change-bank.io\",\n    \"chainlink.tech\",\n    \"myetherwallet-confirm.com\",\n    \"tokensale.kybernet.network\",\n    \"kybernet.network\",\n    \"kyberr.network\",\n    \"kybernetwork.io\",\n    \"myetherwalletconfirm.com\",\n    \"kvnuke.github.io\",\n    \"kin.kikpro.co\",\n    \"myethereumwallet.co.uk\",\n    \"tokensale-kyber.network\",\n    \"kyber-network.co\",\n    \"tokensale.kyber-network.co\",\n    \"pyro0.github.io\",\n    \"tokensale.kyber.digital\",\n    \"kyber.digital\",\n    \"omise-go.me\",\n    \"my.etherwallet.com.de\",\n    \"bepartof.change-bank.co\",\n    \"change-bank.co\",\n    \"enigma-tokens.co\",\n    \"coinbase.com.eslogin.co\",\n    \"xn--bittrx-mva.com\",\n    \"ethrdelta.github.io\",\n    \"etherdellta.com\",\n    \"ico-nexus.social\",\n    \"red-pulse.tech\",\n    \"bitj0b.io\",\n    \"xn--bttrex-bwa.com\",\n    \"kin-klk.com\",\n    \"kin-crowdsale.com\",\n    \"ethedelta.com\",\n    \"coindash.su\",\n    \"myethwallet.co.uk\",\n    \"swarm.credit\",\n    \"myethereumwallet.uk\",\n    \"iconexu.social\",\n    \"wanchain.co\",\n    \"enigrna.co\",\n    \"linknetwork.co\",\n    \"qtum-token.com\",\n    \"omisego.com.co\",\n    \"rivetzintl.org\",\n    \"etherdelta.one\",\n    \"the-ether.pro\",\n    \"etherdelta.gitnub.io\",\n    \"kirkik.com\",\n    \"monetha.ltd\",\n    \"vlberate.io\",\n    \"ethereumwallet-kr.info\",\n    \"omise-go.org\",\n    \"iconexus.social\",\n    \"bittirrex.com\",\n    \"aventus.pro\",\n    \"atlant.solutions\",\n    \"aventus.group\",\n    \"metamak.io\",\n    \"omise.com.co\",\n    \"herotokens.io\",\n    \"starbase.pro\",\n    \"etherdelta.githulb.io\",\n    \"herotoken.co\",\n    \"kinico.net\",\n    \"dmarket.ltd\",\n    \"etherdelta.gilthub.io\",\n    \"golem-network.com\",\n    \"etnerscan.io\",\n    \"bllttriex.com\",\n    \"monetha.me\",\n    \"monetha.co\",\n    \"monetha-crowdsale.com\",\n    \"starbase.tech\",\n    \"aventus-crowdsale.com\",\n    \"shapeshift.pro\",\n    \"bllttrex.com\",\n    \"kickico.co\",\n    \"statustoken.im\",\n    \"bilttrex.com\",\n    \"tenxpay.io\",\n    \"bittrex.ltd\",\n    \"metalpay.im\",\n    \"aragon.im\",\n    \"coindash.tech\",\n    \"decentraland.tech\",\n    \"decentraland.pro\",\n    \"status-token.com\",\n    \"bittrex.cam\",\n    \"enigmatoken.com\",\n    \"unocoin.company\",\n    \"unocoin.fund\",\n    \"0xproject.io\",\n    \"0xtoken.com\",\n    \"numerai.tech\",\n    \"decentraiand.org\",\n    \"blockcrein.info\",\n    \"blockchealn.info\",\n    \"bllookchain.info\",\n    \"blockcbhain.info\",\n    \"myetherwallet.com.ethpromonodes.com\",\n    \"mettamask.io\",\n    \"tokenswap.org\",\n    \"netherum.com\",\n    \"etherexx.org\",\n    \"etherume.io\",\n    \"ethereum.plus\",\n    \"ehtereum.org\",\n    \"etereurm.org\",\n    \"etheream.com\",\n    \"ethererum.org\",\n    \"ethereum.io\",\n    \"etherdelta-glthub.com\",\n    \"cryptoalliance.herokuapp.com\",\n    \"bitspark2.com\",\n    \"indorsetoken.com\",\n    \"iconexus.tk\",\n    \"iconexus.ml\",\n    \"iconexus.ga\",\n    \"iconexus.cf\",\n    \"etherwallet.online\",\n    \"wallet-ethereum.net\",\n    \"bitsdigit.com\",\n    \"etherswap.org\",\n    \"eos.ac\",\n    \"uasfwallet.com\",\n    \"ziber.io\",\n    \"multiply-ethereum.info\",\n    \"bittrex.comze.com\",\n    \"karbon.vacau.com\",\n    \"etherdelta.gitlhub.io\",\n    \"etherdelta.glthub.io\",\n    \"digitaldevelopersfund.vacau.com\",\n    \"district-0x.io\",\n    \"coin-dash.com\",\n    \"coindash.ru\",\n    \"district0x.net\",\n    \"aragonproject.io\",\n    \"coin-wallet.info\",\n    \"coinswallet.info\",\n    \"contribute-status.im\",\n    \"ether-api.com\",\n    \"ether-wall.com\",\n    \"mycoinwallet.net\",\n    \"ethereumchamber.com\",\n    \"ethereumchamber.net\",\n    \"ethereumchest.com\",\n    \"ethewallet.com\",\n    \"myetherwallet.com.vc\",\n    \"myetherwallet.com.pe\",\n    \"myetherwallet.us.com\",\n    \"myetherwallet.com.u0387831.cp.regruhosting.ru\",\n    \"myethereumwallet.su\",\n    \"myetherweb.com.de\",\n    \"myetherieumwallet.com\",\n    \"myetehrwallet.com\",\n    \"myeterwalet.com\",\n    \"myetherwaiiet.com\",\n    \"myetherwallet.info\",\n    \"myetherwallet.ch\",\n    \"myetherwallet.om\",\n    \"myethervallet.com\",\n    \"myetherwallet.com.cm\",\n    \"myetherwallet.com.co\",\n    \"myetherwallet.com.de\",\n    \"myetherwallet.com.gl\",\n    \"myetherwallet.com.im\",\n    \"myetherwallet.com.ua\",\n    \"secure-myetherwallet.com\",\n    \"update-myetherwallet.com\",\n    \"wwwmyetherwallet.com\",\n    \"myeatherwallet.com\",\n    \"myetharwallet.com\",\n    \"myelherwallel.com\",\n    \"myetherwaillet.com\",\n    \"myetherwaliet.com\",\n    \"myetherwallel.com\",\n    \"myetherwallet.cam\",\n    \"myetherwallet.cc\",\n    \"myetherwallet.co\",\n    \"myetherwallet.cm\",\n    \"myetherwallet.cz\",\n    \"myetherwallet.org\",\n    \"myetherwallet.tech\",\n    \"myetherwallet.top\",\n    \"myetherwallet.net\",\n    \"myetherwallet.ru.com\",\n    \"myetherwallet.com.ru\",\n    \"metherwallet.com\",\n    \"myetrerwallet.com\",\n    \"myetlerwallet.com\",\n    \"myethterwallet.com\",\n    \"myethwallet.io\",\n    \"myethterwallet.co\",\n    \"myehterwallet.co\",\n    \"myaetherwallet.com\",\n    \"myetthterwallet.com\",\n    \"myetherwallet.one\",\n    \"myelterwallet.com\",\n    \"myetherwallet.gdn\",\n    \"myetherwallt.com\",\n    \"myeterwallet.com\",\n    \"myeteherwallet.com\",\n    \"myethearwailet.com\",\n    \"myetherwallelt.com\",\n    \"myetherwallett.com\",\n    \"etherwallet.org\",\n    \"myetherewallet.com\",\n    \"myeherwallet.com\",\n    \"myethcrwallet.com\",\n    \"myetherwallet.link\",\n    \"myetherwallets.com\",\n    \"myethearwaillet.com\",\n    \"myethearwallet.com\",\n    \"myetherawllet.com\",\n    \"myethereallet.com\",\n    \"myetherswallet.com\",\n    \"myetherwalet.com\",\n    \"myetherwaller.com\",\n    \"myetherwalliet.com\",\n    \"myetherwllet.com\",\n    \"etherwallet.io\",\n    \"myetherwallet.ca\",\n    \"myetherwallet.me\",\n    \"myetherwallet.ru\",\n    \"myetherwallet.xyz\",\n    \"myetherwallte.com\",\n    \"myethirwallet.com\",\n    \"myethrewallet.com\",\n    \"etherwallet.net\",\n    \"maetherwallet.com\",\n    \"meyetherwallet.com\",\n    \"my.ether-wallet.pw\",\n    \"myehterwallet.com\",\n    \"myeitherwallet.com\",\n    \"myelherwallet.com\",\n    \"myeltherwallet.com\",\n    \"myerherwallet.com\",\n    \"myethearwalet.com\",\n    \"myetherewalle.com\",\n    \"myethervvallet.com\",\n    \"myetherwallent.com\",\n    \"myetherwallet.fm\",\n    \"myetherwalllet.com\",\n    \"myetherwalltet.com\",\n    \"myetherwollet.com\",\n    \"myetlherwalet.com\",\n    \"myetlherwallet.com\",\n    \"rnyetherwallet.com\",\n    \"etherclassicwallet.com\",\n    \"omg-omise.co\",\n    \"omise-go.com\",\n    \"omise-go.net\",\n    \"omise-omg.com\",\n    \"omise-go.io\",\n    \"tenx-tech.com\",\n    \"bitclaive.com\",\n    \"tokensale-tenx.tech\",\n    \"ubiqcoin.org\",\n    \"metamask.com\",\n    \"ethtrade.io\",\n    \"myetcwallet.com\",\n    \"account-kigo.net\",\n    \"bitcoin-wallet.net\",\n    \"blocklichan.info\",\n    \"bloclkicihan.info\",\n    \"coindash.ml\",\n    \"eos-bonus.com\",\n    \"eos-io.info\",\n    \"ether-wallet.net\",\n    \"ethereum-wallet.info\",\n    \"ethereum-wallet.net\",\n    \"ethereumchest.net\",\n    \"reservations-kigo.net\",\n    \"reservations-lodgix.com\",\n    \"secure-liverez.com\",\n    \"secure-onerooftop.com\",\n    \"settings-liverez.com\",\n    \"software-liverez.com\",\n    \"software-lodgix.com\",\n    \"unhackableetherwallets.com\",\n    \"www-myetherwallet.com\",\n    \"etherwallet.co.za\",\n    \"etherwalletchain.com\",\n    \"etherwallets.net\",\n    \"etherwallets.nl\",\n    \"my-ethwallet.com\",\n    \"my.ether-wallet.co\",\n    \"myetherwallet.com.am\",\n    \"myetherwallet.com.ht\",\n    \"myetherwalletcom.com\",\n    \"myehterwailet.com\",\n    \"xn--myetherwalle-xoc.com\",\n    \"xn--myetherwalle-44i.com\",\n    \"xn--myetherwalle-xhk.com\",\n    \"xn--myetherwallt-cfb.com\",\n    \"xn--myetherwallt-6tb.com\",\n    \"xn--myetherwallt-xub.com\",\n    \"xn--myetherwallt-ovb.com\",\n    \"xn--myetherwallt-fwb.com\",\n    \"xn--myetherwallt-5wb.com\",\n    \"xn--myetherwallt-jzi.com\",\n    \"xn--myetherwallt-2ck.com\",\n    \"xn--myetherwallt-lok.com\",\n    \"xn--myetherwallt-lsl.com\",\n    \"xn--myetherwallt-ce6f.com\",\n    \"xn--myetherwalet-mcc.com\",\n    \"xn--myetherwalet-xhf.com\",\n    \"xn--myetherwalet-lcc.com\",\n    \"xn--myetherwaet-15ba.com\",\n    \"xn--myetherwalet-whf.com\",\n    \"xn--myetherwaet-v2ea.com\",\n    \"xn--myetherwllet-59a.com\",\n    \"xn--myetherwllet-jbb.com\",\n    \"xn--myetherwllet-wbb.com\",\n    \"xn--myetherwllet-9bb.com\",\n    \"xn--myetherwllet-ncb.com\",\n    \"xn--myetherwllet-0cb.com\",\n    \"xn--myetherwllet-5nb.com\",\n    \"xn--myetherwllet-ktd.com\",\n    \"xn--myetherwllet-mre.com\",\n    \"xn--myetherwllet-76e.com\",\n    \"xn--myetherwllet-o0l.com\",\n    \"xn--myetherwllet-c45f.com\",\n    \"xn--myetherallet-ejn.com\",\n    \"xn--myethewallet-4nf.com\",\n    \"xn--myethewallet-iof.com\",\n    \"xn--myethewallet-mpf.com\",\n    \"xn--myethewallet-6bk.com\",\n    \"xn--myethewallet-i31f.com\",\n    \"xn--myethrwallet-feb.com\",\n    \"xn--myethrwallt-fbbf.com\",\n    \"xn--myethrwallet-seb.com\",\n    \"xn--myethrwallt-rbbf.com\",\n    \"xn--myethrwallet-5eb.com\",\n    \"xn--myethrwallt-3bbf.com\",\n    \"xn--myethrwallet-0tb.com\",\n    \"xn--myethrwallt-tpbf.com\",\n    \"xn--myethrwallet-rub.com\",\n    \"xn--myethrwallt-iqbf.com\",\n    \"xn--myethrwallet-ivb.com\",\n    \"xn--myethrwallt-6qbf.com\",\n    \"xn--myethrwallet-8vb.com\",\n    \"xn--myethrwallt-vrbf.com\",\n    \"xn--myethrwallet-zwb.com\",\n    \"xn--myethrwallt-ksbf.com\",\n    \"xn--myethrwallet-dzi.com\",\n    \"xn--myethrwallt-wbif.com\",\n    \"xn--myethrwallet-wck.com\",\n    \"xn--myethrwallt-skjf.com\",\n    \"xn--myethrwallet-fok.com\",\n    \"xn--myethrwallt-fvjf.com\",\n    \"xn--myethrwallet-fsl.com\",\n    \"xn--myethrwallt-fwkf.com\",\n    \"xn--myethrwallet-5d6f.com\",\n    \"xn--myethrwallt-319ef.com\",\n    \"xn--myeterwallet-ufk.com\",\n    \"xn--myeterwallet-nrl.com\",\n    \"xn--myeterwallet-von.com\",\n    \"xn--myeterwallet-jl6c.com\",\n    \"xn--myeherwallet-ooc.com\",\n    \"xn--myeherwalle-6hci.com\",\n    \"xn--myeherwallet-v4i.com\",\n    \"xn--myeherwalle-zgii.com\",\n    \"xn--myeherwallet-ohk.com\",\n    \"xn--myeherwalle-6oji.com\",\n    \"xn--mytherwallet-ceb.com\",\n    \"xn--mythrwallet-cbbc.com\",\n    \"xn--mythrwallt-c7acf.com\",\n    \"xn--mytherwallet-peb.com\",\n    \"xn--mythrwallet-obbc.com\",\n    \"xn--mythrwallt-n7acf.com\",\n    \"xn--mytherwallet-2eb.com\",\n    \"xn--mythrwallet-0bbc.com\",\n    \"xn--mythrwallt-y7acf.com\",\n    \"xn--mytherwallet-xtb.com\",\n    \"xn--mythrwallet-qpbc.com\",\n    \"xn--mythrwallt-jlbcf.com\",\n    \"xn--mytherwallet-oub.com\",\n    \"xn--mythrwallet-fqbc.com\",\n    \"xn--mythrwallt-5lbcf.com\",\n    \"xn--mythrwallet-3qbc.com\",\n    \"xn--mythrwallt-smbcf.com\",\n    \"xn--mytherwallet-5vb.com\",\n    \"xn--mythrwallet-srbc.com\",\n    \"xn--mythrwallt-fnbcf.com\",\n    \"xn--mytherwallet-wwb.com\",\n    \"xn--mythrwallet-hsbc.com\",\n    \"xn--mythrwallt-1nbcf.com\",\n    \"xn--mytherwallet-9yi.com\",\n    \"xn--mythrwallet-tbic.com\",\n    \"xn--mythrwallt-dnhcf.com\",\n    \"xn--mytherwallet-tck.com\",\n    \"xn--mythrwallet-pkjc.com\",\n    \"xn--mythrwallt-lsicf.com\",\n    \"xn--mytherwallet-cok.com\",\n    \"xn--mythrwallet-cvjc.com\",\n    \"xn--mythrwallt-c2icf.com\",\n    \"xn--mytherwallet-csl.com\",\n    \"xn--mythrwallet-cwkc.com\",\n    \"xn--mythrwallt-c0jcf.com\",\n    \"xn--mytherwallet-2d6f.com\",\n    \"xn--mythrwallet-019ec.com\",\n    \"xn--mythrwallt-yq3ecf.com\",\n    \"xn--metherwallet-qlb.com\",\n    \"xn--metherwallet-1uf.com\",\n    \"xn--metherwallet-iyi.com\",\n    \"xn--metherwallet-zhk.com\",\n    \"xn--metherwallet-3ml.com\",\n    \"xn--mytherwallet-fvb.com\",\n    \"xn--myetherwallt-7db.com\",\n    \"xn--myetherwallt-leb.com\",\n    \"xn--myetherwallt-yeb.com\",\n    \"xn--yetherwallet-vjf.com\",\n    \"xn--yetherwallet-dfk.com\",\n    \"xn--yetherwallet-1t1f.com\",\n    \"xn--yetherwallet-634f.com\",\n    \"xn--myeherwallet-fpc.com\",\n    \"xn--myethewallt-crb.com\",\n    \"xn--metherwallet-1vc.com\",\n    \"xn--myeherwallt-kbb8039g.com\",\n    \"xn--myeherwallet-vk5f.com\",\n    \"xn--yethewallet-iw8ejl.com\",\n    \"xn--bittrx-th8b.com\",\n    \"xn--polniex-n0a.com\",\n    \"thekey.vin\",\n    \"thekey-vip.com\",\n    \"digitexftures.com\",\n    \"ethzero-wallet.org\",\n    \"zeepln.io\",\n    \"wepowers.network\",\n    \"wepower.vision\",\n    \"seele.promo\",\n    \"seele-ico.eu\",\n    \"seele-ico.pro\",\n    \"syncfab.tech\",\n    \"tokensale.syncfab.tech\",\n    \"havven.promo\",\n    \"havven-ico.com\",\n    \"havven-ico.eu\",\n    \"hawen.io\",\n    \"havven.xyz\",\n    \"tomo-coin.io\",\n    \"tomocoln.io\",\n    \"docai.science\",\n    \"tomocoin.network\",\n    \"celsius-ico.network\",\n    \"celsiuss.network\",\n    \"coti.cf\",\n    \"xn--mercadobtcon-mfbd.com\",\n    \"quantstump.com\",\n    \"quantstampcoin.com\",\n    \"quantistamp.com\",\n    \"electrum.com\",\n    \"tronfoundation.us\",\n    \"dav-network.io\",\n    \"pyapay.co\",\n    \"daostack-token.io\",\n    \"icolist.sale\",\n    \"shivom.sale\",\n    \"daostack.onuniverse.com\",\n    \"dav.icocrowdsale.io\",\n    \"myethcrwallet-f.com\",\n    \"myethcrwallet-g.com\",\n    \"myetherewallet.cf\",\n    \"myetherwallet-i.com\",\n    \"myetherwalletc.org\",\n    \"myeterwallct-p.com\",\n    \"myethcrwallct-a.com\",\n    \"myethcrwallet-b.com\",\n    \"myethcrwallet-c.com\",\n    \"myethcrwallet-d.com\",\n    \"myethervvallet.win\",\n    \"myetherwallat.date\",\n    \"myetherwallet.accountant\",\n    \"quarkchain.live\",\n    \"verasiity.co\",\n    \"monerozero.trade\",\n    \"dav.systems\",\n    \"eth.mediumblog.org\",\n    \"ethe.mediumblog.top\",\n    \"claim.ether33.online\",\n    \"any.ether33.online\",\n    \"mediumblog.org\",\n    \"swswd.ether33.online\",\n    \"swdwd.ethers444.online\",\n    \"eth22.mediumblog.top\",\n    \"etoroglobal.com\",\n    \"bcrypto.club\",\n    \"airdrop-bitnational.com\",\n    \"wasabibitcoinwallet.org\",\n    \"xeniumx.com\",\n    \"idex-claim.su\",\n    \"fulcrum.click\",\n    \"bitbank.guru\",\n    \"bitbank.land\",\n    \"fulcrum.run\",\n    \"curve.fm\",\n    \"curve.frl\",\n    \"curve.fyi\",\n    \"curves.fi\",\n    \"curves.exchange\",\n    \"xn--ledgr-9za.com\",\n    \"xn--ledgr-esa.com\",\n    \"xn--leder-b3b.com\",\n    \"xn--ldger-j0a.com\",\n    \"xn--ledgr-7ra.com\",\n    \"xn--ldgr-bpac.com\",\n    \"xn--ledr-xva3d.com\",\n    \"xn--leder-b2a.com\",\n    \"xn--leder-k0b.com\",\n    \"xn--edger-i6a.com\",\n    \"xn--edger-j7a.com\",\n    \"xn--ldger-bsa.app\",\n    \"xn--edger-u6a.com\",\n    \"xn--ledger-bla.com\",\n    \"xn--edger-mnb.com\",\n    \"xn--edger-dqb.com\",\n    \"xn--edger-0ec.com\",\n    \"xn--edger-cj1b.com\",\n    \"xn--edger-oj1b.com\",\n    \"xn--edger-dk1b.com\",\n    \"xn--edger-fe3s.com\",\n    \"xn--edger-sl3s.com\",\n    \"xn--ldger-4ra.com\",\n    \"xn--ldger-hsa.com\",\n    \"xn--ldger-iza.com\",\n    \"xn--ldger-v0a.com\",\n    \"xn--ldger-c6b.com\",\n    \"xn--ldger-bic.com\",\n    \"xn--ldger-vd1b.com\",\n    \"xn--ldger-ke1b.com\",\n    \"xn--ldger-c61b.com\",\n    \"xn--ldger-061b.com\",\n    \"xn--ldger-p71b.com\",\n    \"xn--ldger-we9c.com\",\n    \"xn--leger-6ya.com\",\n    \"xn--leger-9kb.com\",\n    \"xn--leger-tbc.com\",\n    \"xn--leger-6b1b.com\",\n    \"xn--leger-vc1b.com\",\n    \"xn--leger-ol3s.com\",\n    \"xn--leder-m1a.com\",\n    \"xn--leder-nf1b.com\",\n    \"xn--ledgr-ksa.com\",\n    \"xn--ledgr-lza.com\",\n    \"xn--ledgr-m0a.com\",\n    \"xn--ledgr-25b.com\",\n    \"xn--ledgr-8cc.com\",\n    \"xn--ledgr-md1b.com\",\n    \"xn--ledgr-be1b.com\",\n    \"xn--ledgr-ze1b.com\",\n    \"xn--ledgr-f61b.com\",\n    \"xn--ledgr-361b.com\",\n    \"xn--ledgr-s71b.com\",\n    \"xn--ledgr-ze9c.com\",\n    \"xn--ledge-57b.com\",\n    \"xn--ledge-gjc.com\",\n    \"xn--ledge-np1b.com\",\n    \"xn--ledge-cq1b.com\",\n    \"xn--ledge-gm3s.com\",\n    \"xn--ledge-6o3s.com\",\n    \"xn--ldgr-vva2366b.com\",\n    \"xn--ldgr-xva7266b.com\",\n    \"xn--lder-vva5d.com\",\n    \"xn--ldr-krab3d.com\",\n    \"xn--ledqr-9za.com\",\n    \"ledgersupport.io\",\n    \"loldevs.com\",\n    \"curve.si\",\n    \"curve.so\",\n    \"curvefi.io\",\n    \"curwe.fi\",\n    \"lecdger.com\",\n    \"ledcger.com\",\n    \"ledqer.cc\",\n    \"ledgerwalletrestore.com\",\n    \"ledlqer.com\",\n    \"labger.com\",\n    \"xn--edgr-z1a5736b.com\",\n    \"xn--ledger-mcb.com\",\n    \"ledger.com-device.id73457.app\",\n    \"ledger.com-device.id45663.app\",\n    \"ledger.com-device.id46267.app\",\n    \"xn--ledr-dxa0756b.com\",\n    \"ledger-live.org\",\n    \"ledger.com.634644.app\",\n    \"ledger.com.837729.app\",\n    \"ledger.com.565333.app\",\n    \"ledger.com.453455.app\",\n    \"ledger.com.342344.app\",\n    \"ledger.com.device.id.837729.app\",\n    \"ledger.com.device.id.634644.app\",\n    \"ledger.com.device.id.565333.app\",\n    \"ledger.com.device.id.453455.app\",\n    \"ledger.com.device.id.342344.app\",\n    \"ledger.com.device.id.756728.app\",\n    \"ledger.com.device.id.727783.app\",\n    \"ledger.com.device.id.657377.app\",\n    \"ledger.com.device.id.893900.app\",\n    \"ledger.com.device.id.745583.app\",\n    \"ledger.com.device.id.688338.app\",\n    \"ledger.com.device.id.883882.app\",\n    \"ledger.com.device-u23-verification.app\",\n    \"ledger.com.device-e72-verification.app\",\n    \"ledger.com.verification-login-s61.app\",\n    \"ledger.com.acc-verification-login.app\",\n    \"ledger.com.device.id.7537472.app\",\n    \"ledger.com.hardware.id.54656346.app\",\n    \"ledger.com.device.id.6567288.app\",\n    \"ledger.com.hardware.id.953781832.app\",\n    \"xn--ldr-qsa2998aca.com\",\n    \"ledger.com-settings.device-id-45682.app\",\n    \"xn--lede-dxa93a.com\",\n    \"xn--ledr-xva5e.com\",\n    \"ledger.com-settings.device-id-68399.app\",\n    \"xn--lder-vva7e.com\",\n    \"xn--eder-mxa9k.com\",\n    \"ledger.com134678976581.info\",\n    \"ledger.com.login-wallet.app\",\n    \"ledger.com.verification-login.app\",\n    \"ledger.com-login-authorization.app\",\n    \"ledger.com-login-verification.app\",\n    \"balanscer.exchange\",\n    \"xn--ldr-krab5e.com\",\n    \"xn--ledr-nxa8556b.com\",\n    \"ledger.com.login-account.app\",\n    \"ledger.com.wallet-login.app\",\n    \"ledger.com.login-verification.app\",\n    \"ledger.com-login-account.app\",\n    \"ledger.com-login-activity.app\",\n    \"xn--lder-cxa8656b.com\",\n    \"ledger.com1628.support\",\n    \"ledger.com17266548295643.info\",\n    \"ledger.com-login-wallet.app\",\n    \"ledger.com-login-secure.app\",\n    \"ledger.com-activity-login.app\",\n    \"ledger.com-account-login.app\",\n    \"ledger.com-authorization-login.app\",\n    \"ledger.com-verification-login.app\",\n    \"ledger.com1927572.info\",\n    \"ledger.com1829582.info\",\n    \"ledger.com401.support\",\n    \"ledger.com172.support\",\n    \"ledgdr.com\",\n    \"lelger.com\",\n    \"www-ledger.com\",\n    \"ledgerrecovery.com\",\n    \"ledger.com-viewaccount.com\",\n    \"walletconnects.org\",\n    \"walletconnect.com.se\",\n    \"tornadocash.org\",\n    \"login.xn--bockchaln-vpb.com\",\n    \"www.lblhblockchain.com\",\n    \"walletconnecl.org\",\n    \"walletsconnect.host\",\n    \"walletsconnectapp.com\",\n    \"walletsconnect.dev\",\n    \"walletconnectlive.vip\",\n    \"dropelon.io\",\n    \"givemusk.space\",\n    \"muskx.digital\",\n    \"muskfree.com\",\n    \"muskx.io\",\n    \"uni2021.com\",\n    \"uniaward.net\",\n    \"unipromo.org\",\n    \"unireward.org\",\n    \"uniswap.supply\",\n    \"tlp-invest.com\",\n    \"coinwoz.com\",\n    \"btcdire.com\",\n    \"btcshade.com\",\n    \"lemmexrp.com\",\n    \"smellbit.com\",\n    \"uniwsap.io\",\n    \"uniswnap.io\",\n    \"uniwsap.com\",\n    \"uniswnap.com\",\n    \"app.uniswap.airdrop-token-holder.com\",\n    \"app.uniswap.token-protocol-airdrop.com\",\n    \"uniswap-v3.org\",\n    \"uniswapv2node.net\",\n    \"uniswapv2v1.network\",\n    \"lirbit.com\",\n    \"peetdecentralized.finance\",\n    \"coinmik.com\",\n    \"bitzau.com\",\n    \"yfinew.com\",\n    \"metamaskrestores.link\",\n    \"hohbit.com\"\n  ]\n}\n","const levenshtein = require('fast-levenshtein')\nconst DEFAULT_TOLERANCE = 3\n\nclass PhishingDetector {\n\n  constructor (opts) {\n    this.whitelist = processDomainList(opts.whitelist || [])\n    this.blacklist = processDomainList(opts.blacklist || [])\n    this.fuzzylist = processDomainList(opts.fuzzylist || [])\n    this.tolerance = ('tolerance' in opts) ? opts.tolerance : DEFAULT_TOLERANCE\n  }\n\n  check (domain) {\n    const source = domainToParts(domain)\n\n    // if source matches whitelist domain (or subdomain thereof), PASS\n    const whitelistMatch = matchPartsAgainstList(source, this.whitelist)\n    if (whitelistMatch) return { type: 'whitelist', result: false }\n\n    // if source matches blacklist domain (or subdomain thereof), FAIL\n    const blacklistMatch = matchPartsAgainstList(source, this.blacklist)\n    if (blacklistMatch) return { type: 'blacklist', result: true }\n\n    if (this.tolerance > 0) {\n      // check if near-match of whitelist domain, FAIL\n      let fuzzyForm = domainPartsToFuzzyForm(source)\n      // strip www\n      fuzzyForm = fuzzyForm.replace('www.', '')\n      // check against fuzzylist\n      const levenshteinMatched = this.fuzzylist.find((targetParts) => {\n        const fuzzyTarget = domainPartsToFuzzyForm(targetParts)\n        const distance = levenshtein.get(fuzzyForm, fuzzyTarget)\n        return distance <= this.tolerance\n      })\n      if (levenshteinMatched) {\n        const match = domainPartsToDomain(levenshteinMatched)\n        return { type: 'fuzzy', result: true, match }\n      }\n    }\n\n    // matched nothing, PASS\n    return { type: 'all', result: false }\n  }\n\n}\n\nmodule.exports = PhishingDetector\n\n// util\n\nfunction processDomainList (list) {\n  return list.map(domainToParts)\n}\n\nfunction domainToParts (domain) {\n  return domain.split('.').reverse()\n}\n\nfunction domainPartsToDomain(domainParts) {\n  return domainParts.slice().reverse().join('.')\n}\n\n// for fuzzy search, drop TLD and re-stringify\nfunction domainPartsToFuzzyForm(domainParts) {\n  return domainParts.slice(1).reverse().join('.')\n}\n\n// match the target parts, ignoring extra subdomains on source\n//   source: [io, metamask, xyz]\n//   target: [io, metamask]\n//   result: PASS\nfunction matchPartsAgainstList(source, list) {\n  return list.some((target) => {\n    // target domain has more parts than source, fail\n    if (target.length > source.length) return false\n    // source matches target or (is deeper subdomain)\n    return target.every((part, index) => source[index] === part)\n  })\n}","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = require(\"crypto\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", { enumerable: true, get: function () { return hdkey_1.default; } });\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", { enumerable: true, get: function () { return thirdparty_1.default; } });\nvar bs58check = require('bs58check');\nvar randomBytes = require('randombytes');\nvar uuidv4 = require('uuid/v4');\nfunction validateHexString(paramName, str, length) {\n    if (str.toLowerCase().startsWith('0x')) {\n        str = str.slice(2);\n    }\n    if (!str && !length) {\n        return str;\n    }\n    if (length % 2) {\n        throw new Error(\"Invalid length argument, must be an even number\");\n    }\n    if (typeof length === 'number' && str.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n    }\n    if (!/^([0-9a-f]{2})+$/i.test(str)) {\n        var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n    }\n    return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n    if (!Buffer.isBuffer(buff)) {\n        var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n        var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n        throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n    }\n    if (typeof length === 'number' && buff.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n    }\n    return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n    var v3Defaults = {\n        cipher: 'aes-128-ctr',\n        kdf: 'scrypt',\n        salt: randomBytes(32),\n        iv: randomBytes(16),\n        uuid: randomBytes(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1,\n    };\n    if (!params) {\n        return v3Defaults;\n    }\n    if (typeof params.salt === 'string') {\n        params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n    }\n    if (typeof params.iv === 'string') {\n        params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n    }\n    if (typeof params.uuid === 'string') {\n        params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n    }\n    if (params.salt) {\n        validateBuffer('salt', params.salt);\n    }\n    if (params.iv) {\n        validateBuffer('iv', params.iv, 16);\n    }\n    if (params.uuid) {\n        validateBuffer('uuid', params.uuid, 16);\n    }\n    return __assign(__assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        c: opts.c,\n        prf: 'hmac-sha256',\n    };\n}\nfunction kdfParamsForScrypt(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        n: opts.n,\n        r: opts.r,\n        p: opts.p,\n    };\n}\n// wallet implementation\nvar Wallet = /** @class */ (function () {\n    function Wallet(privateKey, publicKey) {\n        if (publicKey === void 0) { publicKey = undefined; }\n        this.privateKey = privateKey;\n        this.publicKey = publicKey;\n        if (privateKey && publicKey) {\n            throw new Error('Cannot supply both a private and a public key to the constructor');\n        }\n        if (privateKey && !ethereumjs_util_1.isValidPrivate(privateKey)) {\n            throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n        }\n        if (publicKey && !ethereumjs_util_1.isValidPublic(publicKey)) {\n            throw new Error('Invalid public key');\n        }\n    }\n    // static methods\n    /**\n     * Create an instance based on a new random key.\n     *\n     * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n     */\n    Wallet.generate = function (icapDirect) {\n        if (icapDirect === void 0) { icapDirect = false; }\n        if (icapDirect) {\n            var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n            while (true) {\n                var privateKey = randomBytes(32);\n                if (new ethereumjs_util_1.BN(ethereumjs_util_1.privateToAddress(privateKey)).lte(max)) {\n                    return new Wallet(privateKey);\n                }\n            }\n        }\n        else {\n            return new Wallet(randomBytes(32));\n        }\n    };\n    /**\n     * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n     */\n    Wallet.generateVanityAddress = function (pattern) {\n        if (!(pattern instanceof RegExp)) {\n            pattern = new RegExp(pattern);\n        }\n        while (true) {\n            var privateKey = randomBytes(32);\n            var address = ethereumjs_util_1.privateToAddress(privateKey);\n            if (pattern.test(address.toString('hex'))) {\n                return new Wallet(privateKey);\n            }\n        }\n    };\n    /**\n     * Create an instance based on a public key (certain methods will not be available)\n     *\n     * This method only accepts uncompressed Ethereum-style public keys, unless\n     * the `nonStrict` flag is set to true.\n     */\n    Wallet.fromPublicKey = function (publicKey, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        if (nonStrict) {\n            publicKey = ethereumjs_util_1.importPublic(publicKey);\n        }\n        return new Wallet(undefined, publicKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended public key (xpub)\n     */\n    Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n        if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n            throw new Error('Not an extended public key');\n        }\n        var publicKey = bs58check.decode(extendedPublicKey).slice(45);\n        // Convert to an Ethereum public key\n        return Wallet.fromPublicKey(publicKey, true);\n    };\n    /**\n     * Create an instance based on a raw private key\n     */\n    Wallet.fromPrivateKey = function (privateKey) {\n        return new Wallet(privateKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended private key (xprv)\n     */\n    Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n        if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n            throw new Error('Not an extended private key');\n        }\n        var tmp = bs58check.decode(extendedPrivateKey);\n        if (tmp[45] !== 0) {\n            throw new Error('Invalid extended private key');\n        }\n        return Wallet.fromPrivateKey(tmp.slice(46));\n    };\n    /**\n     * Import a wallet (Version 1 of the Ethereum wallet format).\n     *\n     * @param input A JSON serialized string, or an object representing V1 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV1 = function (input, password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(input);\n                        if (json.Version !== '1') {\n                            throw new Error('Not a V1 Wallet');\n                        }\n                        if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        kdfparams = json.Crypto.KeyHeader.KdfParams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n                    case 1:\n                        derivedKey = _a.sent();\n                        ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n                        if (mac.toString('hex') !== json.Crypto.MAC) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv('aes-128-cbc', ethereumjs_util_1.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /**\n     * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n     *\n     * @param input A JSON serialized string, or an object representing V3 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV3 = function (input, password, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n                        if (json.version !== 3) {\n                            throw new Error('Not a V3 wallet');\n                        }\n                        if (!(json.crypto.kdf === 'scrypt')) return [3 /*break*/, 2];\n                        kdfparams = json.crypto.kdfparams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n                    case 1:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (json.crypto.kdf === 'pbkdf2') {\n                            kdfparams = json.crypto.kdfparams;\n                            if (kdfparams.prf !== 'hmac-sha256') {\n                                throw new Error('Unsupported parameters to PBKDF2');\n                            }\n                            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n                        }\n                        else {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        _a.label = 3;\n                    case 3:\n                        ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n                        if (mac.toString('hex') !== json.crypto.mac) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /*\n     * Import an Ethereum Pre Sale wallet.\n     * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n     * JSON fields: encseed, ethaddr, btcaddr, email\n     *\n     * @param input A JSON serialized string, or an object representing EthSale Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromEthSale = function (input, password) {\n        var json = typeof input === 'object' ? input : JSON.parse(input);\n        var encseed = Buffer.from(json.encseed, 'hex');\n        // key derivation\n        var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n        // seed decoding (IV is first 16 bytes)\n        // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n        //       see also http://stackoverflow.com/a/31614770/4964819\n        var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n        var seed = runCipherBuffer(decipher, encseed.slice(16));\n        var wallet = new Wallet(ethereumjs_util_1.keccak256(seed));\n        if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n            throw new Error('Decoded key mismatch - possibly wrong passphrase');\n        }\n        return wallet;\n    };\n    Object.defineProperty(Wallet.prototype, \"pubKey\", {\n        // private getters\n        /**\n         * Returns the wallet's public key.\n         */\n        get: function () {\n            if (!keyExists(this.publicKey)) {\n                this.publicKey = ethereumjs_util_1.privateToPublic(this.privateKey);\n            }\n            return this.publicKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"privKey\", {\n        /**\n         * Returns the wallet's private key.\n         */\n        get: function () {\n            if (!keyExists(this.privateKey)) {\n                throw new Error('This is a public key only wallet');\n            }\n            return this.privateKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // public instance methods\n    /**\n     * Returns the wallet's private key.\n     *\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPrivateKey = function () {\n        return this.privKey;\n    };\n    Wallet.prototype.getPrivateKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.privKey);\n    };\n    /**\n     * Returns the wallet's public key.\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPublicKey = function () {\n        return this.pubKey;\n    };\n    /**\n     * Returns the wallet's public key as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getPublicKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getPublicKey());\n    };\n    /**\n     * Returns the wallet's address.\n     */\n    Wallet.prototype.getAddress = function () {\n        return ethereumjs_util_1.publicToAddress(this.pubKey);\n    };\n    /**\n     * Returns the wallet's address as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getAddressString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getAddress());\n    };\n    /**\n     * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n     * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n     */\n    Wallet.prototype.getChecksumAddressString = function () {\n        return ethereumjs_util_1.toChecksumAddress(this.getAddressString());\n    };\n    /**\n     * Returns an Etherem Version 3 Keystore Format object representing the wallet\n     *\n     * @param password The password used to encrypt the Keystore.\n     * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n     */\n    Wallet.prototype.toV3 = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!keyExists(this.privateKey)) {\n                            throw new Error('This is a public key only wallet');\n                        }\n                        v3Params = mergeToV3ParamsWithDefaults(opts);\n                        _a = v3Params.kdf;\n                        switch (_a) {\n                            case \"pbkdf2\" /* PBKDF */: return [3 /*break*/, 1];\n                            case \"scrypt\" /* Scrypt */: return [3 /*break*/, 2];\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        kdfParams = kdfParamsForPBKDF(v3Params);\n                        derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n                        return [3 /*break*/, 5];\n                    case 2:\n                        kdfParams = kdfParamsForScrypt(v3Params);\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n                    case 3:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4: throw new Error('Unsupported kdf');\n                    case 5:\n                        cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n                        if (!cipher) {\n                            throw new Error('Unsupported cipher');\n                        }\n                        ciphertext = runCipherBuffer(cipher, this.privKey);\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n                        return [2 /*return*/, {\n                                version: 3,\n                                id: uuidv4({ random: v3Params.uuid }),\n                                // @ts-ignore - the official V3 keystore spec omits the address key\n                                address: this.getAddress().toString('hex'),\n                                crypto: {\n                                    ciphertext: ciphertext.toString('hex'),\n                                    cipherparams: { iv: v3Params.iv.toString('hex') },\n                                    cipher: v3Params.cipher,\n                                    kdf: v3Params.kdf,\n                                    kdfparams: __assign(__assign({}, kdfParams), { salt: kdfParams.salt.toString('hex') }),\n                                    mac: mac.toString('hex'),\n                                },\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Return the suggested filename for V3 keystores.\n     */\n    Wallet.prototype.getV3Filename = function (timestamp) {\n        /*\n         * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n         * is a pain in Javascript, everbody knows that. We could use moment.js,\n         * but decide to do it manually in order to save space.\n         *\n         * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n         * but does it really matter?\n         *\n         * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n         *\n         */\n        var ts = timestamp ? new Date(timestamp) : new Date();\n        return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n    };\n    Wallet.prototype.toV3String = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = JSON).stringify;\n                        return [4 /*yield*/, this.toV3(password, opts)];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    return Wallet;\n}());\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n    return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n    return k !== undefined && k !== null;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20Standard = void 0;\nconst metamask_eth_abis_1 = require(\"@metamask/metamask-eth-abis\");\nconst constants_1 = require(\"../../constants\");\nclass ERC20Standard {\n    constructor(web3) {\n        this.web3 = web3;\n    }\n    /**\n     * Get balance or count for current account on specific asset contract.\n     *\n     * @param address - Asset ERC20 contract address.\n     * @param selectedAddress - Current account public address.\n     * @returns Promise resolving to BN object containing balance for current account on specific asset contract.\n     */\n    getBalanceOf(address, selectedAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC20).at(address);\n            return new Promise((resolve, reject) => {\n                contract.balanceOf(selectedAddress, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n    }\n    /**\n     * Query for the decimals for a given ERC20 asset.\n     *\n     * @param address - ERC20 asset contract string.\n     * @returns Promise resolving to the 'decimals'.\n     */\n    getTokenDecimals(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC20).at(address);\n            return new Promise((resolve, reject) => {\n                contract.decimals((error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n    }\n    /**\n     * Query for symbol for a given ERC20 asset.\n     *\n     * @param address - ERC20 asset contract address.\n     * @returns Promise resolving to the 'symbol'.\n     */\n    getTokenSymbol(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC20).at(address);\n            return new Promise((resolve, reject) => {\n                contract.symbol((error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n    }\n    /**\n     * Query if a contract implements an interface.\n     *\n     * @param address - Asset contract address.\n     * @param userAddress - The public address for the currently active user's account.\n     * @returns Promise resolving an object containing the standard, decimals, symbol and balance of the given contract/userAddress pair.\n     */\n    getDetails(address, userAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [decimals, symbol] = yield Promise.all([\n                this.getTokenDecimals(address),\n                this.getTokenSymbol(address),\n            ]);\n            let balance;\n            if (userAddress) {\n                balance = yield this.getBalanceOf(address, userAddress);\n            }\n            return {\n                decimals,\n                symbol,\n                balance,\n                standard: constants_1.ERC20,\n            };\n        });\n    }\n}\nexports.ERC20Standard = ERC20Standard;\n//# sourceMappingURL=ERC20Standard.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC1155Standard = void 0;\nconst metamask_eth_abis_1 = require(\"@metamask/metamask-eth-abis\");\nconst constants_1 = require(\"../../../../constants\");\nclass ERC1155Standard {\n    constructor(web3) {\n        /**\n         * Query if contract implements ERC1155 URI Metadata interface.\n         *\n         * @param address - ERC1155 asset contract address.\n         * @returns Promise resolving to whether the contract implements ERC1155 URI Metadata interface.\n         */\n        this.contractSupportsURIMetadataInterface = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this.contractSupportsInterface(address, constants_1.ERC1155_METADATA_URI_INTERFACE_ID);\n        });\n        /**\n         * Query if contract implements ERC1155 Token Receiver interface.\n         *\n         * @param address - ERC1155 asset contract address.\n         * @returns Promise resolving to whether the contract implements ERC1155 Token Receiver interface.\n         */\n        this.contractSupportsTokenReceiverInterface = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this.contractSupportsInterface(address, constants_1.ERC1155_TOKEN_RECEIVER_INTERFACE_ID);\n        });\n        /**\n         * Query if contract implements ERC1155 interface.\n         *\n         * @param address - ERC1155 asset contract address.\n         * @returns Promise resolving to whether the contract implements the base ERC1155 interface.\n         */\n        this.contractSupportsBase1155Interface = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this.contractSupportsInterface(address, constants_1.ERC1155_INTERFACE_ID);\n        });\n        /**\n         * Query for tokenURI for a given asset.\n         *\n         * @param address - ERC1155 asset contract address.\n         * @param tokenId - ERC1155 asset identifier.\n         * @returns Promise resolving to the 'tokenURI'.\n         */\n        this.getTokenURI = (address, tokenId) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC1155).at(address);\n            return new Promise((resolve, reject) => {\n                contract.uri(tokenId, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query for balance of a given ERC1155 token.\n         *\n         * @param contractAddress - ERC1155 asset contract address.\n         * @param address - Wallet public address.\n         * @param tokenId - ERC1155 asset identifier.\n         * @returns Promise resolving to the 'balanceOf'.\n         */\n        this.getBalanceOf = (contractAddress, address, tokenId) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC1155).at(contractAddress);\n            return new Promise((resolve, reject) => {\n                contract.balanceOf(address, tokenId, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Transfer single ERC1155 token.\n         * When minting/creating tokens, the from arg MUST be set to 0x0 (i.e. zero address).\n         * When burning/destroying tokens, the to arg MUST be set to 0x0 (i.e. zero address).\n         *\n         * @param operator - ERC1155 token address.\n         * @param from - ERC1155 token holder.\n         * @param to - ERC1155 token recipient.\n         * @param id - ERC1155 token id.\n         * @param value - Number of tokens to be sent.\n         * @returns Promise resolving to the 'transferSingle'.\n         */\n        this.transferSingle = (operator, from, to, id, value) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC1155).at(operator);\n            return new Promise((resolve, reject) => {\n                contract.transferSingle(operator, from, to, id, value, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query if a contract implements an interface.\n         *\n         * @param address - ERC1155 asset contract address.\n         * @param interfaceId - Interface identifier.\n         * @returns Promise resolving to whether the contract implements `interfaceID`.\n         */\n        this.contractSupportsInterface = (address, interfaceId) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC1155).at(address);\n            return new Promise((resolve, reject) => {\n                contract.supportsInterface(interfaceId, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query if a contract implements an interface.\n         *\n         * @param address - Asset contract address.\n         * @param tokenId - tokenId of a given token in the contract.\n         * @returns Promise resolving an object containing the standard, tokenURI, symbol and name of the given contract/tokenId pair.\n         */\n        this.getDetails = (address, tokenId) => __awaiter(this, void 0, void 0, function* () {\n            const isERC1155 = yield this.contractSupportsBase1155Interface(address);\n            let tokenURI;\n            if (tokenId) {\n                tokenURI = yield this.getTokenURI(address, tokenId);\n            }\n            // TODO consider querying to the metadata to get name.\n            if (isERC1155) {\n                return {\n                    standard: constants_1.ERC1155,\n                    tokenURI,\n                };\n            }\n            throw new Error(\"This isn't a valid ERC1155 contract\");\n        });\n        this.web3 = web3;\n    }\n}\nexports.ERC1155Standard = ERC1155Standard;\n//# sourceMappingURL=ERC1155Standard.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC721Standard = void 0;\nconst metamask_eth_abis_1 = require(\"@metamask/metamask-eth-abis\");\nconst constants_1 = require(\"../../../../constants\");\nclass ERC721Standard {\n    constructor(web3) {\n        /**\n         * Query if contract implements ERC721Metadata interface.\n         *\n         * @param address - ERC721 asset contract address.\n         * @returns Promise resolving to whether the contract implements ERC721Metadata interface.\n         */\n        this.contractSupportsMetadataInterface = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this.contractSupportsInterface(address, constants_1.ERC721_METADATA_INTERFACE_ID);\n        });\n        /**\n         * Query if contract implements ERC721Enumerable interface.\n         *\n         * @param address - ERC721 asset contract address.\n         * @returns Promise resolving to whether the contract implements ERC721Enumerable interface.\n         */\n        this.contractSupportsEnumerableInterface = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this.contractSupportsInterface(address, constants_1.ERC721_ENUMERABLE_INTERFACE_ID);\n        });\n        /**\n         * Query if contract implements ERC721 interface.\n         *\n         * @param address - ERC721 asset contract address.\n         * @returns Promise resolving to whether the contract implements ERC721 interface.\n         */\n        this.contractSupportsBase721Interface = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this.contractSupportsInterface(address, constants_1.ERC721_INTERFACE_ID);\n        });\n        /**\n         * Enumerate assets assigned to an owner.\n         *\n         * @param address - ERC721 asset contract address.\n         * @param selectedAddress - Current account public address.\n         * @param index - A collectible counter less than `balanceOf(selectedAddress)`.\n         * @returns Promise resolving to token identifier for the 'index'th asset assigned to 'selectedAddress'.\n         */\n        this.getCollectibleTokenId = (address, selectedAddress, index) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC721).at(address);\n            return new Promise((resolve, reject) => {\n                contract.tokenOfOwnerByIndex(selectedAddress, index, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query for tokenURI for a given asset.\n         *\n         * @param address - ERC721 asset contract address.\n         * @param tokenId - ERC721 asset identifier.\n         * @returns Promise resolving to the 'tokenURI'.\n         */\n        this.getTokenURI = (address, tokenId) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC721).at(address);\n            const supportsMetadata = yield this.contractSupportsMetadataInterface(address);\n            if (!supportsMetadata) {\n                throw new Error('Contract does not support ERC721 metadata interface.');\n            }\n            return new Promise((resolve, reject) => {\n                contract.tokenURI(tokenId, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query for name for a given asset.\n         *\n         * @param address - ERC721 asset contract address.\n         * @returns Promise resolving to the 'name'.\n         */\n        this.getAssetName = (address) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC721).at(address);\n            return new Promise((resolve, reject) => {\n                contract.name((error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query for symbol for a given asset.\n         *\n         * @param address - ERC721 asset contract address.\n         * @returns Promise resolving to the 'symbol'.\n         */\n        this.getAssetSymbol = (address) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC721).at(address);\n            return new Promise((resolve, reject) => {\n                contract.symbol((error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query if a contract implements an interface.\n         *\n         * @param address - Asset contract address.\n         * @param interfaceId - Interface identifier.\n         * @returns Promise resolving to whether the contract implements `interfaceID`.\n         */\n        this.contractSupportsInterface = (address, interfaceId) => __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC721).at(address);\n            return new Promise((resolve, reject) => {\n                contract.supportsInterface(interfaceId, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n        /**\n         * Query if a contract implements an interface.\n         *\n         * @param address - Asset contract address.\n         * @param tokenId - tokenId of a given token in the contract.\n         * @returns Promise resolving an object containing the standard, tokenURI, symbol and name of the given contract/tokenId pair.\n         */\n        this.getDetails = (address, tokenId) => __awaiter(this, void 0, void 0, function* () {\n            const [isERC721, supportsMetadata] = yield Promise.all([\n                this.contractSupportsBase721Interface(address),\n                this.contractSupportsMetadataInterface(address),\n            ]);\n            let tokenURI, symbol, name;\n            if (supportsMetadata) {\n                [symbol, name] = yield Promise.all([\n                    this.getAssetSymbol(address),\n                    this.getAssetName(address),\n                ]);\n                if (tokenId) {\n                    tokenURI = yield this.getTokenURI(address, tokenId);\n                }\n            }\n            if (isERC721) {\n                return {\n                    standard: constants_1.ERC721,\n                    tokenURI,\n                    symbol,\n                    name,\n                };\n            }\n            throw new Error(\"This isn't a valid ERC721 contract\");\n        });\n        this.web3 = web3;\n    }\n    /**\n     * Query for owner for a given ERC721 asset.\n     *\n     * @param address - ERC721 asset contract address.\n     * @param tokenId - ERC721 asset identifier.\n     * @returns Promise resolving to the owner address.\n     */\n    getOwnerOf(address, tokenId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contract = this.web3.eth.contract(metamask_eth_abis_1.abiERC721).at(address);\n            return new Promise((resolve, reject) => {\n                contract.ownerOf(tokenId, (error, result) => {\n                    /* istanbul ignore if */\n                    if (error) {\n                        reject(error);\n                        return;\n                    }\n                    resolve(result);\n                });\n            });\n        });\n    }\n}\nexports.ERC721Standard = ERC721Standard;\n//# sourceMappingURL=ERC721Standard.js.map","const inherits = require('util').inherits\nconst Subprovider = require('./subprovider.js')\n\n// wraps a provider in a subprovider interface\n\nmodule.exports = ProviderSubprovider\n\ninherits(ProviderSubprovider, Subprovider)\n\nfunction ProviderSubprovider(provider){\n  if (!provider) throw new Error('ProviderSubprovider - no provider specified')\n  if (!provider.sendAsync) throw new Error('ProviderSubprovider - specified provider does not have a sendAsync method')\n  this.provider = provider\n}\n\nProviderSubprovider.prototype.handleRequest = function(payload, next, end){\n  this.provider.sendAsync(payload, function(err, response) {\n    if (err) return end(err)\n    if (response.error) return end(new Error(response.error.message))\n    end(null, response.result)\n  })\n}\n","const RpcEngine = require('json-rpc-engine')\nconst providerFromEngine = require('eth-json-rpc-middleware/providerFromEngine')\nconst createInfuraMiddleware = require('.')\n\nmodule.exports = createProvider\n\nfunction createProvider (opts) {\n  const engine = new RpcEngine()\n  engine.push(createInfuraMiddleware(opts))\n  return providerFromEngine(engine)\n}\n","const ProviderEngine = require('./index.js')\nconst DefaultFixture = require('./subproviders/default-fixture.js')\nconst NonceTrackerSubprovider = require('./subproviders/nonce-tracker.js')\nconst CacheSubprovider = require('./subproviders/cache.js')\nconst FilterSubprovider = require('./subproviders/filters')\nconst SubscriptionSubprovider = require('./subproviders/subscriptions')\nconst InflightCacheSubprovider = require('./subproviders/inflight-cache')\nconst HookedWalletSubprovider = require('./subproviders/hooked-wallet.js')\nconst SanitizingSubprovider = require('./subproviders/sanitizer.js')\nconst InfuraSubprovider = require('./subproviders/infura.js')\nconst FetchSubprovider = require('./subproviders/fetch.js')\nconst WebSocketSubprovider = require('./subproviders/websocket.js')\n\n\nmodule.exports = ZeroClientProvider\n\n\nfunction ZeroClientProvider(opts = {}){\n  const connectionType = getConnectionType(opts)\n\n  const engine = new ProviderEngine(opts.engineParams)\n\n  // static\n  const staticSubprovider = new DefaultFixture(opts.static)\n  engine.addProvider(staticSubprovider)\n\n  // nonce tracker\n  engine.addProvider(new NonceTrackerSubprovider())\n\n  // sanitization\n  const sanitizer = new SanitizingSubprovider()\n  engine.addProvider(sanitizer)\n\n  // cache layer\n  const cacheSubprovider = new CacheSubprovider()\n  engine.addProvider(cacheSubprovider)\n\n  // filters + subscriptions\n  // only polyfill if not websockets\n  if (connectionType !== 'ws') {\n    engine.addProvider(new SubscriptionSubprovider())\n    engine.addProvider(new FilterSubprovider())\n  }\n\n  // inflight cache\n  const inflightCache = new InflightCacheSubprovider()\n  engine.addProvider(inflightCache)\n\n  // id mgmt\n  const idmgmtSubprovider = new HookedWalletSubprovider({\n    // accounts\n    getAccounts: opts.getAccounts,\n    // transactions\n    processTransaction: opts.processTransaction,\n    approveTransaction: opts.approveTransaction,\n    signTransaction: opts.signTransaction,\n    publishTransaction: opts.publishTransaction,\n    // messages\n    // old eth_sign\n    processMessage: opts.processMessage,\n    approveMessage: opts.approveMessage,\n    signMessage: opts.signMessage,\n    // new personal_sign\n    processPersonalMessage: opts.processPersonalMessage,\n    processTypedMessage: opts.processTypedMessage,\n    approvePersonalMessage: opts.approvePersonalMessage,\n    approveTypedMessage: opts.approveTypedMessage,\n    signPersonalMessage: opts.signPersonalMessage,\n    signTypedMessage: opts.signTypedMessage,\n    personalRecoverSigner: opts.personalRecoverSigner,\n  })\n  engine.addProvider(idmgmtSubprovider)\n\n  // data source\n  const dataSubprovider = opts.dataSubprovider || createDataSubprovider(connectionType, opts)\n  engine.addProvider(dataSubprovider)\n\n  // start polling\n  if (!opts.stopped) {\n    engine.start()\n  }\n\n  return engine\n\n}\n\nfunction createDataSubprovider(connectionType, opts) {\n  const { rpcUrl, debug } = opts\n\n  // default to infura\n  if (!connectionType) {\n    return new InfuraSubprovider()\n  }\n  if (connectionType === 'http') {\n    return new FetchSubprovider({ rpcUrl, debug })\n  }\n  if (connectionType === 'ws') {\n    return new WebSocketSubprovider({ rpcUrl, debug })\n  }\n\n  throw new Error(`ProviderEngine - unrecognized connectionType \"${connectionType}\"`)\n}\n\nfunction getConnectionType({ rpcUrl }) {\n  if (!rpcUrl) return undefined\n\n  const protocol = rpcUrl.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'http':\n    case 'https':\n      return 'http'\n    case 'ws':\n    case 'wss':\n      return 'ws'\n    default:\n      throw new Error(`ProviderEngine - unrecognized protocol in \"${rpcUrl}\"`)\n  }\n}\n","const Eth = require('ethjs')\nconst registryMap = require('./registry-map.json')\nconst abi = require('./abi')\n\nclass MethodRegistry {\n\n  constructor (opts = {}) {\n    this.provider = opts.provider ||\n      new Eth.HttpProvider('https://mainnet.infura.io/eth-contract-registry')\n    this.eth = new Eth(this.provider)\n    const address = registryMap[opts.network || '1']\n\n    if (!address) {\n      throw new Error('No method registry found on the requested network.')\n    }\n\n    this.registry = this.eth.contract(abi).at(address)\n  }\n\n  async lookup (bytes) {\n    const result = await this.registry.entries(bytes)\n    return result[0]\n  }\n\n  parse (signature) {\n    let name = signature.match(/^.+(?=\\()/)\n    \n    if (name) {\n      name = name[0].charAt(0).toUpperCase() + name[0].slice(1).split(/(?=[A-Z])/).join(' ')\n    } else {\n      name = ''\n    }\n\n    const match = signature.match(/\\(.+\\)/)\n    let args = [];\n    if (match) {\n      args = match[0].slice(1, -1).split(',').map((arg) => { return {type: arg}})\n    }\n  \n    return {\n      name,\n      args\n    }\n  }\n\n}\n\nmodule.exports = MethodRegistry\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = require(\"regenerator-runtime\");\n","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","module.exports={\n  \"methods\": {\n    \"web3_clientVersion\": [[], \"S\"],\n    \"web3_sha3\": [[\"S\"], \"D\", 1],\n    \"net_version\": [[], \"S\"],\n    \"net_peerCount\": [[], \"Q\"],\n    \"net_listening\": [[], \"B\"],\n    \"personal_sign\": [[\"D\", \"D20\", \"S\"], \"D\", 2],\n    \"personal_ecRecover\": [[\"D\", \"D\"], \"D20\", 2],\n    \"eth_protocolVersion\": [[], \"S\"],\n    \"eth_syncing\": [[], \"B|EthSyncing\"],\n    \"eth_coinbase\": [[], \"D20\"],\n    \"eth_mining\": [[], \"B\"],\n    \"eth_hashrate\": [[], \"Q\"],\n    \"eth_gasPrice\": [[], \"Q\"],\n    \"eth_accounts\": [[], [\"D20\"]],\n    \"eth_blockNumber\": [[], \"Q\"],\n    \"eth_getBalance\": [[\"D20\", \"Q|T\"], \"Q\", 1, 2],\n    \"eth_getStorageAt\": [[\"D20\", \"Q\", \"Q|T\"], \"D\", 2, 2],\n    \"eth_getTransactionCount\": [[\"D20\", \"Q|T\"], \"Q\", 1, 2],\n    \"eth_getBlockTransactionCountByHash\": [[\"D32\"], \"Q\", 1],\n    \"eth_getBlockTransactionCountByNumber\": [[\"Q|T\"], \"Q\", 1],\n    \"eth_getUncleCountByBlockHash\": [[\"D32\"], \"Q\", 1],\n    \"eth_getUncleCountByBlockNumber\": [[\"Q\"], \"Q\", 1],\n    \"eth_getCode\": [[\"D20\", \"Q|T\"], \"D\", 1, 2],\n    \"eth_sign\": [[\"D20\", \"D\"], \"D\", 2],\n    \"eth_signTypedData\": [[\"Array|DATA\", \"D20\"], \"D\", 1],\n    \"eth_sendTransaction\": [[\"SendTransaction\"], \"D\", 1],\n    \"eth_sendRawTransaction\": [[\"D\"], \"D32\", 1],\n    \"eth_call\": [[\"CallTransaction\", \"Q|T\"], \"D\", 1, 2],\n    \"eth_estimateGas\": [[\"EstimateTransaction\", \"Q|T\"], \"Q\", 1],\n    \"eth_getBlockByHash\": [[\"D32\", \"B\"], \"Block\", 2],\n    \"eth_getBlockByNumber\": [[\"Q|T\", \"B\"], \"Block\", 2],\n    \"eth_getTransactionByHash\": [[\"D32\"], \"Transaction\", 1],\n    \"eth_getTransactionByBlockHashAndIndex\": [[\"D32\", \"Q\"], \"Transaction\", 2],\n    \"eth_getTransactionByBlockNumberAndIndex\": [[\"Q|T\", \"Q\"], \"Transaction\", 2],\n    \"eth_getTransactionReceipt\": [[\"D32\"], \"Receipt\", 1],\n    \"eth_getUncleByBlockHashAndIndex\": [[\"D32\", \"Q\"], \"Block\", 1],\n    \"eth_getUncleByBlockNumberAndIndex\": [[\"Q|T\", \"Q\"], \"Block\", 2],\n    \"eth_getCompilers\": [[], [\"S\"]],\n    \"eth_compileLLL\": [[\"S\"], \"D\", 1],\n    \"eth_compileSolidity\": [[\"S\"], \"D\", 1],\n    \"eth_compileSerpent\": [[\"S\"], \"D\", 1],\n    \"eth_newFilter\": [[\"Filter\"], \"Q\", 1],\n    \"eth_newBlockFilter\": [[], \"Q\"],\n    \"eth_newPendingTransactionFilter\": [[], \"Q\"],\n    \"eth_uninstallFilter\": [[\"QP\"], \"B\", 1],\n    \"eth_getFilterChanges\": [[\"QP\"], [\"FilterChange\"], 1],\n    \"eth_getFilterLogs\": [[\"QP\"], [\"FilterChange\"], 1],\n    \"eth_getLogs\": [[\"Filter\"], [\"FilterChange\"], 1],\n    \"eth_getWork\": [[], [\"D\"]],\n    \"eth_submitWork\": [[\"D\", \"D32\", \"D32\"], \"B\", 3],\n    \"eth_submitHashrate\": [[\"D\", \"D\"], \"B\", 2],\n    \"db_putString\": [[\"S\", \"S\", \"S\"], \"B\", 2],\n    \"db_getString\": [[\"S\", \"S\"], \"S\", 2],\n    \"db_putHex\": [[\"S\", \"S\", \"D\"], \"B\", 2],\n    \"db_getHex\": [[\"S\", \"S\"], \"D\", 2],\n    \"shh_post\": [[\"SHHPost\"], \"B\", 1],\n    \"shh_version\": [[], \"S\"],\n    \"shh_newIdentity\": [[], \"D\"],\n    \"shh_hasIdentity\": [[\"D\"], \"B\"],\n    \"shh_newGroup\": [[], \"D\"],\n    \"shh_addToGroup\": [[\"D\"], \"B\", 1],\n    \"shh_newFilter\": [[\"SHHFilter\"], \"Q\", 1],\n    \"shh_uninstallFilter\": [[\"Q\"], \"B\", 1],\n    \"shh_getFilterChanges\": [[\"Q\"], [\"SHHFilterChange\"], 1],\n    \"shh_getMessages\": [[\"Q\"], [\"SHHFilterChange\"], 1]\n  },\n  \"tags\": [\"latest\", \"earliest\", \"pending\"],\n  \"objects\": {\n    \"EthSyncing\": {\n      \"__required\": [],\n      \"startingBlock\": \"Q\",\n      \"currentBlock\": \"Q\",\n      \"highestBlock\": \"Q\"\n    },\n    \"SendTransaction\": {\n      \"__required\": [\"from\", \"data\"],\n      \"from\": \"D20\",\n      \"to\": \"D20\",\n      \"gas\": \"Q\",\n      \"gasPrice\": \"Q\",\n      \"value\": \"Q\",\n      \"data\": \"D\",\n      \"nonce\": \"Q\"\n    },\n    \"EstimateTransaction\": {\n      \"__required\": [],\n      \"from\": \"D20\",\n      \"to\": \"D20\",\n      \"gas\": \"Q\",\n      \"gasPrice\": \"Q\",\n      \"value\": \"Q\",\n      \"data\": \"D\",\n      \"nonce\": \"Q\"\n    },\n    \"CallTransaction\": {\n      \"__required\": [\"to\"],\n      \"from\": \"D20\",\n      \"to\": \"D20\",\n      \"gas\": \"Q\",\n      \"gasPrice\": \"Q\",\n      \"value\": \"Q\",\n      \"data\": \"D\",\n      \"nonce\": \"Q\"\n    },\n    \"Block\": {\n      \"__required\": [],\n      \"number\": \"Q\",\n      \"hash\": \"D32\",\n      \"parentHash\": \"D32\",\n      \"nonce\": \"D\",\n      \"sha3Uncles\": \"D\",\n      \"logsBloom\": \"D\",\n      \"transactionsRoot\": \"D\",\n      \"stateRoot\": \"D\",\n      \"receiptsRoot\": \"D\",\n      \"miner\": \"D\",\n      \"difficulty\": \"Q\",\n      \"totalDifficulty\": \"Q\",\n      \"extraData\": \"D\",\n      \"size\": \"Q\",\n      \"gasLimit\": \"Q\",\n      \"gasUsed\": \"Q\",\n      \"timestamp\": \"Q\",\n      \"transactions\": [\"DATA|Transaction\"],\n      \"uncles\": [\"D\"]\n    },\n    \"Transaction\": {\n      \"__required\": [],\n      \"hash\": \"D32\",\n      \"nonce\": \"Q\",\n      \"blockHash\": \"D32\",\n      \"blockNumber\": \"Q\",\n      \"transactionIndex\": \"Q\",\n      \"from\": \"D20\",\n      \"to\": \"D20\",\n      \"value\": \"Q\",\n      \"gasPrice\": \"Q\",\n      \"gas\": \"Q\",\n      \"input\": \"D\"\n    },\n    \"Receipt\": {\n      \"__required\": [],\n      \"transactionHash\": \"D32\",\n      \"transactionIndex\": \"Q\",\n      \"blockHash\": \"D32\",\n      \"blockNumber\": \"Q\",\n      \"cumulativeGasUsed\": \"Q\",\n      \"gasUsed\": \"Q\",\n      \"contractAddress\": \"D20\",\n      \"logs\": [\"FilterChange\"]\n    },\n    \"Filter\": {\n      \"__required\": [],\n      \"fromBlock\": \"Q|T\",\n      \"toBlock\": \"Q|T\",\n      \"address\": \"D20\",\n      \"topics\": [\"D\"]\n    },\n    \"FilterChange\": {\n      \"__required\": [],\n      \"removed\": \"B\",\n      \"logIndex\": \"Q\",\n      \"transactionIndex\": \"Q\",\n      \"transactionHash\": \"D32\",\n      \"blockHash\": \"D32\",\n      \"blockNumber\": \"Q\",\n      \"address\": \"D20\",\n      \"data\": \"Array|DATA\",\n      \"topics\": [\"D\"]\n    },\n    \"SHHPost\": {\n      \"__required\": [\"topics\", \"payload\", \"priority\", \"ttl\"],\n      \"from\": \"D\",\n      \"to\": \"D\",\n      \"topics\": [\"D\"],\n      \"payload\": \"D\",\n      \"priority\": \"Q\",\n      \"ttl\": \"Q\"\n    },\n    \"SHHFilter\": {\n      \"__required\": [\"topics\"],\n      \"to\": \"D\",\n      \"topics\": [\"D\"]\n    },\n    \"SHHFilterChange\": {\n      \"__required\": [],\n      \"hash\": \"D\",\n      \"from\": \"D\",\n      \"to\": \"D\",\n      \"expiry\": \"Q\",\n      \"ttl\": \"Q\",\n      \"sent\": \"Q\",\n      \"topics\": [\"D\"],\n      \"payload\": \"D\",\n      \"workProved\": \"Q\"\n    },\n    \"SHHMessage\": {\n      \"__required\": [],\n      \"hash\": \"D\",\n      \"from\": \"D\",\n      \"to\": \"D\",\n      \"expiry\": \"Q\",\n      \"ttl\": \"Q\",\n      \"sent\": \"Q\",\n      \"topics\": [\"D\"],\n      \"payload\": \"D\",\n      \"workProved\": \"Q\"\n    }\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar keccak256 = require('js-sha3').keccak_256;\n\n// from ethereumjs-util\nfunction stripZeros(aInput) {\n  var a = aInput; // eslint-disable-line\n  var first = a[0]; // eslint-disable-line\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n  return a;\n}\n\nfunction bnToBuffer(bnInput) {\n  var bn = bnInput; // eslint-disable-line\n  var hex = bn.toString(16); // eslint-disable-line\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n  return stripZeros(new Buffer(hex, 'hex'));\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n  return true;\n}\n\nfunction hexOrBuffer(valueInput, name) {\n  var value = valueInput; // eslint-disable-line\n  if (!Buffer.isBuffer(value)) {\n    if (!isHexString(value)) {\n      var error = new Error(name ? '[ethjs-abi] invalid ' + name : '[ethjs-abi] invalid hex or buffer, must be a prefixed alphanumeric even length hex string');\n      error.reason = '[ethjs-abi] invalid hex string, hex must be prefixed and alphanumeric (e.g. 0x023..)';\n      error.value = value;\n      throw error;\n    }\n\n    value = value.substring(2);\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n    value = new Buffer(value, 'hex');\n  }\n\n  return value;\n}\n\nfunction hexlify(value) {\n  if (typeof value === 'number') {\n    return '0x' + bnToBuffer(new BN(value)).toString('hex');\n  } else if (value.mod || value.modulo) {\n    return '0x' + bnToBuffer(value).toString('hex');\n  } else {\n    // eslint-disable-line\n    return '0x' + hexOrBuffer(value).toString('hex');\n  }\n}\n\n// getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\nfunction getKeys(params, key, allowEmpty) {\n  var result = []; // eslint-disable-line\n\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-abi] while getting keys, invalid params value ' + JSON.stringify(params));\n  }\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('[ethjs-abi] while getKeys found invalid ABI data structure, type value not string');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction coderNumber(size, signed) {\n  return {\n    encode: function encodeNumber(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      if (typeof value === 'object' && value.toString && (value.toTwos || value.dividedToIntegerBy)) {\n        value = value.toString(10).split('.')[0];\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        value = String(value).split('.')[0];\n      }\n\n      value = numberToBN(value);\n      value = value.toTwos(size * 8).maskn(size * 8);\n      if (signed) {\n        value = value.fromTwos(size * 8).toTwos(256);\n      }\n      return value.toArrayLike(Buffer, 'be', 32);\n    },\n    decode: function decodeNumber(data, offset) {\n      var junkLength = 32 - size; // eslint-disable-line\n      var value = new BN(data.slice(offset + junkLength, offset + 32)); // eslint-disable-line\n      if (signed) {\n        value = value.fromTwos(size * 8);\n      } else {\n        value = value.maskn(size * 8);\n      }\n      return {\n        consumed: 32,\n        value: new BN(value.toString(10))\n      };\n    }\n  };\n}\nvar uint256Coder = coderNumber(32, false);\n\nvar coderBoolean = {\n  encode: function encodeBoolean(value) {\n    return uint256Coder.encode(value ? 1 : 0);\n  },\n  decode: function decodeBoolean(data, offset) {\n    var result = uint256Coder.decode(data, offset); // eslint-disable-line\n    return {\n      consumed: result.consumed,\n      value: !result.value.isZero()\n    };\n  }\n};\n\nfunction coderFixedBytes(length) {\n  return {\n    encode: function encodeFixedBytes(valueInput) {\n      var value = valueInput; // eslint-disable-line\n      value = hexOrBuffer(value);\n\n      if (value.length === 32) {\n        return value;\n      }\n\n      var result = new Buffer(32); // eslint-disable-line\n      result.fill(0);\n      value.copy(result);\n      return result;\n    },\n    decode: function decodeFixedBytes(data, offset) {\n      if (data.length !== 0 && data.length < offset + 32) {\n        throw new Error('[ethjs-abi] while decoding fixed bytes, invalid bytes data length: ' + length);\n      }\n\n      return {\n        consumed: 32,\n        value: '0x' + data.slice(offset, offset + length).toString('hex')\n      };\n    }\n  };\n}\n\nvar coderAddress = {\n  encode: function encodeAddress(valueInput) {\n    var value = valueInput; // eslint-disable-line\n    var result = new Buffer(32); // eslint-disable-line\n    if (!isHexString(value, 20)) {\n      throw new Error('[ethjs-abi] while encoding address, invalid address value, not alphanumeric 20 byte hex string');\n    }\n    value = hexOrBuffer(value);\n    result.fill(0);\n    value.copy(result, 12);\n    return result;\n  },\n  decode: function decodeAddress(data, offset) {\n    if (data.length === 0) {\n      return {\n        consumed: 32,\n        value: '0x'\n      };\n    }\n    if (data.length !== 0 && data.length < offset + 32) {\n      throw new Error('[ethjs-abi] while decoding address data, invalid address data, invalid byte length ' + data.length);\n    }\n    return {\n      consumed: 32,\n      value: '0x' + data.slice(offset + 12, offset + 32).toString('hex')\n    };\n  }\n};\n\nfunction encodeDynamicBytesHelper(value) {\n  var dataLength = parseInt(32 * Math.ceil(value.length / 32)); // eslint-disable-line\n  var padding = new Buffer(dataLength - value.length); // eslint-disable-line\n  padding.fill(0);\n\n  return Buffer.concat([uint256Coder.encode(value.length), value, padding]);\n}\n\nfunction decodeDynamicBytesHelper(data, offset) {\n  if (data.length !== 0 && data.length < offset + 32) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32));\n  }\n\n  var length = uint256Coder.decode(data, offset).value; // eslint-disable-line\n  length = length.toNumber();\n  if (data.length !== 0 && data.length < offset + 32 + length) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32 + length));\n  }\n\n  return {\n    consumed: parseInt(32 + 32 * Math.ceil(length / 32), 10),\n    value: data.slice(offset + 32, offset + 32 + length)\n  };\n}\n\nvar coderDynamicBytes = {\n  encode: function encodeDynamicBytes(value) {\n    return encodeDynamicBytesHelper(hexOrBuffer(value));\n  },\n  decode: function decodeDynamicBytes(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n    result.value = '0x' + result.value.toString('hex');\n    return result;\n  },\n  dynamic: true\n};\n\nvar coderString = {\n  encode: function encodeString(value) {\n    return encodeDynamicBytesHelper(new Buffer(value, 'utf8'));\n  },\n  decode: function decodeString(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n    result.value = result.value.toString('utf8');\n    return result;\n  },\n  dynamic: true\n};\n\nfunction coderArray(coder, lengthInput) {\n  return {\n    encode: function encodeArray(value) {\n      var result = new Buffer(0); // eslint-disable-line\n      var length = lengthInput; // eslint-disable-line\n\n      if (!Array.isArray(value)) {\n        throw new Error('[ethjs-abi] while encoding array, invalid array data, not type Object (Array)');\n      }\n\n      if (length === -1) {\n        length = value.length;\n        result = uint256Coder.encode(length);\n      }\n\n      if (length !== value.length) {\n        throw new Error('[ethjs-abi] while encoding array, size mismatch array length ' + length + ' does not equal ' + value.length);\n      }\n\n      value.forEach(function (resultValue) {\n        result = Buffer.concat([result, coder.encode(resultValue)]);\n      });\n\n      return result;\n    },\n    decode: function decodeArray(data, offsetInput) {\n      var length = lengthInput; // eslint-disable-line\n      var offset = offsetInput; // eslint-disable-line\n      // @TODO:\n      // if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n      var consumed = 0; // eslint-disable-line\n      var decodeResult; // eslint-disable-line\n\n      if (length === -1) {\n        decodeResult = uint256Coder.decode(data, offset);\n        length = decodeResult.value.toNumber();\n        consumed += decodeResult.consumed;\n        offset += decodeResult.consumed;\n      }\n\n      var value = []; // eslint-disable-line\n\n      for (var i = 0; i < length; i++) {\n        // eslint-disable-line\n        var loopResult = coder.decode(data, offset);\n        consumed += loopResult.consumed;\n        offset += loopResult.consumed;\n        value.push(loopResult.value);\n      }\n\n      return {\n        consumed: consumed,\n        value: value\n      };\n    },\n    dynamic: lengthInput === -1\n  };\n}\n\n// Break the type up into [staticType][staticArray]*[dynamicArray]? | [dynamicType] and\n// build the coder up from its parts\nvar paramTypePart = new RegExp(/^((u?int|bytes)([0-9]*)|(address|bool|string)|(\\[([0-9]*)\\]))/);\n\nfunction getParamCoder(typeInput) {\n  var type = typeInput; // eslint-disable-line\n  var coder = null; // eslint-disable-line\n  var invalidTypeErrorMessage = '[ethjs-abi] while getting param coder (getParamCoder) type value ' + JSON.stringify(type) + ' is either invalid or unsupported by ethjs-abi.';\n\n  while (type) {\n    var part = type.match(paramTypePart); // eslint-disable-line\n    if (!part) {\n      throw new Error(invalidTypeErrorMessage);\n    }\n    type = type.substring(part[0].length);\n\n    var prefix = part[2] || part[4] || part[5]; // eslint-disable-line\n    switch (prefix) {\n      case 'int':case 'uint':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        var intSize = parseInt(part[3] || 256); // eslint-disable-line\n        if (intSize === 0 || intSize > 256 || intSize % 8 !== 0) {\n          throw new Error('[ethjs-abi] while getting param coder for type ' + type + ', invalid ' + prefix + '<N> width: ' + type);\n        }\n\n        coder = coderNumber(intSize / 8, prefix === 'int');\n        break;\n\n      case 'bool':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderBoolean;\n        break;\n\n      case 'string':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderString;\n        break;\n\n      case 'bytes':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        if (part[3]) {\n          var size = parseInt(part[3]); // eslint-disable-line\n          if (size === 0 || size > 32) {\n            throw new Error('[ethjs-abi] while getting param coder for prefix bytes, invalid type ' + type + ', size ' + size + ' should be 0 or greater than 32');\n          }\n          coder = coderFixedBytes(size);\n        } else {\n          coder = coderDynamicBytes;\n        }\n        break;\n\n      case 'address':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderAddress;\n        break;\n\n      case '[]':\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        coder = coderArray(coder, -1);\n        break;\n\n      // \"[0-9+]\"\n      default:\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n        var defaultSize = parseInt(part[6]); // eslint-disable-line\n        coder = coderArray(coder, defaultSize);\n    }\n  }\n\n  if (!coder) {\n    throw new Error(invalidTypeErrorMessage);\n  }\n  return coder;\n}\n\nmodule.exports = {\n  BN: BN,\n  bnToBuffer: bnToBuffer,\n  isHexString: isHexString,\n  hexOrBuffer: hexOrBuffer,\n  hexlify: hexlify,\n  stripZeros: stripZeros,\n\n  keccak256: keccak256,\n\n  getKeys: getKeys,\n  numberToBN: numberToBN,\n  coderNumber: coderNumber,\n  uint256Coder: uint256Coder,\n  coderBoolean: coderBoolean,\n  coderFixedBytes: coderFixedBytes,\n  coderAddress: coderAddress,\n  coderDynamicBytes: coderDynamicBytes,\n  coderString: coderString,\n  coderArray: coderArray,\n  paramTypePart: paramTypePart,\n  getParamCoder: getParamCoder\n};","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/_core').Object.assign;\n","module.exports = require(\"regenerator-runtime\");\n","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };","\"use strict\";\n\nexports.__esModule = true;\n\nvar _promise = require(\"../core-js/promise\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","/* This file is generated from the Unicode IDNA table, using\n   the build-unicode-tables.py script. Please edit that\n   script instead of this file. */\n\n/* istanbul ignore next */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () { return factory(); });\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.uts46_map = factory();\n  }\n}(this, function () {\nvar blocks = [\n  new Uint32Array([2157250,2157314,2157378,2157442,2157506,2157570,2157634,0,2157698,2157762,2157826,2157890,2157954,0,2158018,0]),\n  new Uint32Array([2179041,6291456,2179073,6291456,2179105,6291456,2179137,6291456,2179169,6291456,2179201,6291456,2179233,6291456,2179265,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([0,2113729,2197345,2197377,2113825,2197409,2197441,2113921,2197473,2114017,2197505,2197537,2197569,2197601,2197633,2197665]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,23068672,23068672,23068672,0,0,0,0,23068672]),\n  new Uint32Array([14680064,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064]),\n  new Uint32Array([2196001,2196033,2196065,2196097,2196129,2196161,2196193,2196225,2196257,2196289,2196321,2196353,2196385,2196417,2196449,2196481]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,6291456,0,0,0,0,0]),\n  new Uint32Array([2097281,2105921,2097729,2106081,0,2097601,2162337,2106017,2133281,2097505,2105889,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2177025,6291456,2177057,6291456,2177089,6291456,2177121,6291456,2177153,6291456,2177185,6291456,2177217,6291456,2177249,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456]),\n  new Uint32Array([2134435,2134531,2134627,2134723,2134723,2134819,2134819,2134915,2134915,2135011,2105987,2135107,2135203,2135299,2131587,2135395]),\n  new Uint32Array([0,0,0,0,0,0,0,6291456,2168673,2169249,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2147906,2147970,2148034,2148098,2148162,2148226,2148290,2148354,2147906,2147970,2148034,2148098,2148162,2148226,2148290,2148354]),\n  new Uint32Array([2125219,2125315,2152834,2152898,2125411,2152962,2153026,2125506,2125507,2125603,2153090,2153154,2153218,2153282,2153346,2105348]),\n  new Uint32Array([2203393,6291456,2203425,6291456,2203457,6291456,2203489,6291456,6291456,6291456,6291456,2203521,6291456,2181281,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,6291456,2145538,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,6291456]),\n  new Uint32Array([2139426,2160834,2160898,2160962,2134242,2161026,2161090,2161154,2161218,2161282,2161346,2161410,2138658,2161474,2161538,2134722]),\n  new Uint32Array([2119939,2124930,2125026,2106658,2125218,2128962,2129058,2129154,2129250,2129346,2129442,2108866,2108770,2150466,2150530,2150594]),\n  new Uint32Array([2201601,6291456,2201633,6291456,2201665,6291456,2201697,6291456,2201729,6291456,2201761,6291456,2201793,6291456,2201825,6291456]),\n  new Uint32Array([2193537,2193569,2193601,2193633,2193665,2193697,2193729,2193761,2193793,2193825,2193857,2193889,2193921,2193953,2193985,2194017]),\n  new Uint32Array([6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2190561,6291456,2190593,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2190625,6291456,2190657,6291456,23068672]),\n  new Uint32Array([2215905,2215937,2215969,2216001,2216033,2216065,2216097,2216129,2216161,2216193,2216225,2216257,2105441,2216289,2216321,2216353]),\n  new Uint32Array([23068672,18884130,23068672,23068672,23068672,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2191233,2191265,2191297,2191329,2191361,2191393,2191425,2117377,2191457,2191489,2191521,2191553,2191585,2191617,2191649,2117953]),\n  new Uint32Array([2132227,2132323,2132419,2132419,2132515,2132515,2132611,2132707,2132707,2132803,2132899,2132899,2132995,2132995,2133091,2133187]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,0,0]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,10609889,10610785,10609921,10610817,2222241]),\n  new Uint32Array([6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0]),\n  new Uint32Array([2219969,2157121,2157441,2157505,2157889,2157953,2220001,2158465,2158529,10575617,2156994,2157058,2129923,2130019,2157122,2157186]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2185249,6291456,2185281,6291456,2185313,6291456,2185345,6291456,2185377,6291456,2185409,6291456,2185441,6291456,2185473,6291456]),\n  new Uint32Array([0,0,0,0,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,0,0,23068672,23068672,23068672,6291456,0]),\n  new Uint32Array([2183361,6291456,2183393,6291456,2183425,6291456,2183457,6291456,2183489,6291456,2183521,6291456,2183553,6291456,2183585,6291456]),\n  new Uint32Array([2192161,2192193,2192225,2192257,2192289,2192321,2192353,2192385,2192417,2192449,2192481,2192513,2192545,2192577,2192609,2192641]),\n  new Uint32Array([2212001,2212033,2212065,2212097,2212129,2212161,2212193,2212225,2212257,2212289,2212321,2212353,2212385,2212417,2212449,2207265]),\n  new Uint32Array([2249825,2249857,2249889,2249921,2249954,2250018,2250082,2250145,2250177,2250209,2250241,2250274,2250337,2250370,2250433,2250465]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2147905,2147969,2148033,2148097,2148161,2148225,2148289,2148353]),\n  new Uint32Array([10485857,6291456,2197217,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,23068672,23068672]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2180353,2180385,2144033,2180417,2180449,2180481,2180513,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,10610209,10610465,10610241,10610753,10609857]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0]),\n  new Uint32Array([2223842,2223906,2223970,2224034,2224098,2224162,2224226,2224290,2224354,2224418,2224482,2224546,2224610,2224674,2224738,2224802]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([23068672,23068672,23068672,18923650,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,18923714,23068672,23068672]),\n  new Uint32Array([2126179,2125538,2126275,2126371,2126467,2125634,2126563,2105603,2105604,2125346,2126659,2126755,2126851,2098179,2098181,2098182]),\n  new Uint32Array([2227426,2227490,2227554,2227618,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2192353,2240642,2240642,2240705,2240737,2240737,2240769,2240802,2240866,2240929,2240961,2240993,2241025,2241057,2241089,2241121]),\n  new Uint32Array([6291456,2170881,2170913,2170945,6291456,2170977,6291456,2171009,2171041,6291456,6291456,6291456,2171073,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2132226,2132514,2163586,2132610,2160386,2133090,2133186,2160450,2160514,2160578,2133570,2106178,2160642,2133858,2160706,2160770]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10532162,10532226,10532290,10532354,10532418,10532482,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672]),\n  new Uint32Array([2098209,2108353,2108193,2108481,2170241,2111713,2105473,2105569,2105601,2112289,2112481,2098305,2108321,0,0,0]),\n  new Uint32Array([2209121,2209153,2209185,2209217,2209249,2209281,2209313,2209345,2209377,2209409,2209441,2209473,2207265,2209505,2209537,2209569]),\n  new Uint32Array([2189025,6291456,2189057,6291456,2189089,6291456,2189121,6291456,2189153,6291456,2189185,6291456,2189217,6291456,2189249,6291456]),\n  new Uint32Array([2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2165764,2140004]),\n  new Uint32Array([2215105,6291456,2215137,6291456,6291456,2215169,2215201,6291456,6291456,6291456,2215233,2215265,2215297,2215329,2215361,2215393]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,23068672,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([10505091,10505187,10505283,10505379,10505475,10505571,10505667,10505763,10505859,10505955,10506051,10506147,10506243,10506339,10506435,10506531]),\n  new Uint32Array([2229730,2229794,2229858,2229922,2229986,2230050,2230114,2230178,2230242,2230306,2230370,2230434,2230498,2230562,2230626,2230690]),\n  new Uint32Array([2105505,2098241,2108353,2108417,2105825,0,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177]),\n  new Uint32Array([6291456,6291456,6291456,6291456,10502115,10502178,10502211,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2190305,6291456,2190337,6291456,2190369,6291456,2190401,6291456,2190433,6291456,2190465,6291456,2190497,6291456,2190529,6291456]),\n  new Uint32Array([2173793,2173985,2174017,6291456,2173761,2173697,6291456,2174689,6291456,2174017,2174721,6291456,6291456,2174753,2174785,2174817]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2099521,2099105,2120705,2098369,2120801,2103361,2097985,2098433,2121377,2121473,2099169,2099873,2098401,2099393,2152609,2100033]),\n  new Uint32Array([2132898,2163842,2163906,2133282,2132034,2131938,2137410,2132802,2132706,2164866,2133282,2160578,2165186,2165186,6291456,6291456]),\n  new Uint32Array([10500003,10500099,10500195,10500291,10500387,10500483,10500579,10500675,10500771,10500867,10500963,10501059,10501155,10501251,10501347,10501443]),\n  new Uint32Array([2163458,2130978,2131074,2131266,2131362,2163522,2160130,2132066,2131010,2131106,2106018,2131618,2131298,2132034,2131938,2137410]),\n  new Uint32Array([2212961,2116993,2212993,2213025,2213057,2213089,2213121,2213153,2213185,2213217,2213249,2209633,2213281,2213313,2213345,2213377]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2113729,2113825,2113921,2114017,2114113,2114209,2114305,2114401,2114497,2114593,2114689,2114785,2114881,2114977,2115073,2115169]),\n  new Uint32Array([2238177,2238209,2238241,2238273,2238305,2238337,2238337,2217537,2238369,2238401,2238433,2238465,2215649,2238497,2238529,2238561]),\n  new Uint32Array([2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905]),\n  new Uint32Array([6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,0]),\n  new Uint32Array([6291456,0,6291456,2145026,0,6291456,2145090,0,6291456,6291456,0,0,23068672,0,23068672,23068672]),\n  new Uint32Array([2099233,2122017,2200673,2098113,2121537,2103201,2200705,2104033,2121857,2121953,2122401,2099649,2099969,2123009,2100129,2100289]),\n  new Uint32Array([6291456,23068672,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0]),\n  new Uint32Array([2187681,2187713,2187745,2187777,2187809,2187841,2187873,2187905,2187937,2187969,2188001,2188033,2188065,2188097,2188129,2188161]),\n  new Uint32Array([0,10554498,10554562,10554626,10554690,10554754,10554818,10554882,10554946,10555010,10555074,6291456,6291456,0,0,0]),\n  new Uint32Array([2235170,2235234,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0]),\n  new Uint32Array([2181153,6291456,2188897,6291456,6291456,2188929,6291456,6291456,6291456,6291456,6291456,6291456,2111905,2100865,2188961,2188993]),\n  new Uint32Array([2100833,2100897,0,0,2101569,2101697,2101825,2101953,2102081,2102209,10575617,2187041,10502177,10489601,10489697,2112289]),\n  new Uint32Array([6291456,2172833,6291456,2172865,2172897,2172929,2172961,6291456,2172993,6291456,2173025,6291456,2173057,6291456,2173089,6291456]),\n  new Uint32Array([6291456,0,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,2190721]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,6291456,6291456]),\n  new Uint32Array([2184993,6291456,2185025,6291456,2185057,6291456,2185089,6291456,2185121,6291456,2185153,6291456,2185185,6291456,2185217,6291456]),\n  new Uint32Array([2115265,2115361,2115457,2115553,2115649,2115745,2115841,2115937,2116033,2116129,2116225,2116321,2150658,2150722,2200225,6291456]),\n  new Uint32Array([2168321,6291456,2168353,6291456,2168385,6291456,2168417,6291456,2168449,6291456,2168481,6291456,2168513,6291456,2168545,6291456]),\n  new Uint32Array([23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,0,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,2186625,0,0,6291456,6291456,2186657,2186689,2186721,2173505,0,10496067,10496163,10496259]),\n  new Uint32Array([2178785,6291456,2178817,6291456,2178849,6291456,2178881,6291456,2178913,6291456,2178945,6291456,2178977,6291456,2179009,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2097152,0,0,0,2097152,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,2197857,2197889,2197921,2197953,2197985,2198017,0,0,2198049,2198081,2198113,2198145,2198177,2198209]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2098209,2167297,2111137,6291456]),\n  new Uint32Array([2171393,6291456,2171425,6291456,2171457,6291456,2171489,6291456,2171521,6291456,2171553,6291456,2171585,6291456,2171617,6291456]),\n  new Uint32Array([2206753,2206785,2195457,2206817,2206849,2206881,2206913,2197153,2197153,2206945,2117857,2206977,2207009,2207041,2207073,2207105]),\n  new Uint32Array([0,0,0,0,0,0,0,23068672,0,0,0,0,2144834,2144898,0,2144962]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672]),\n  new Uint32Array([2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,0,2105505,2098241]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,2202049,6291456,2202081,6291456,2202113,6291456,2202145,6291456,2202177,6291456,2202209,6291456,2202241,6291456]),\n  new Uint32Array([10501155,10501251,10501347,10501443,10501539,10501635,10501731,10501827,10501923,10502019,2141731,2105505,2098177,2155586,2166530,0]),\n  new Uint32Array([2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441]),\n  new Uint32Array([2146882,2146946,2147010,2147074,2147138,2147202,2147266,2147330,2146882,2146946,2147010,2147074,2147138,2147202,2147266,2147330]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([10502307,10502403,10502499,10502595,10502691,10502787,10502883,10502979,10503075,10503171,10503267,10503363,10503459,10503555,10503651,10503747]),\n  new Uint32Array([2179937,2179969,2180001,2180033,2156545,2180065,2156577,2180097,2180129,2180161,2180193,2180225,2180257,2180289,2156737,2180321]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,0,0,0,6291456,0,0,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0]),\n  new Uint32Array([2227682,2227746,2227810,2227874,2227938,2228002,2228066,2228130,2228194,2228258,2228322,2228386,2228450,2228514,2228578,2228642]),\n  new Uint32Array([2105601,2169121,2108193,2170049,2181025,2181057,2112481,2108321,2108289,2181089,2170497,2100865,2181121,2173601,2173633,2173665]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2180641,6291456,6291456,6291456]),\n  new Uint32Array([0,6291456,6291456,6291456,0,6291456,0,6291456,0,0,6291456,6291456,0,6291456,6291456,6291456]),\n  new Uint32Array([2178273,6291456,2178305,6291456,2178337,6291456,2178369,6291456,2178401,6291456,2178433,6291456,2178465,6291456,2178497,6291456]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456]),\n  new Uint32Array([2237377,2237409,2236225,2237441,2237473,2217441,2215521,2215553,2217473,2237505,2237537,2209697,2237569,2215585,2237601,2237633]),\n  new Uint32Array([2221985,2165601,2165601,2165665,2165665,2222017,2222017,2165729,2165729,2158913,2158913,2158913,2158913,2097281,2097281,2105921]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2149634,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2176897,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,2176929,6291456,2176961,6291456,2176993,6291456]),\n  new Uint32Array([2172641,6291456,2172673,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2172705,2172737,6291456,2172769,2172801,6291456]),\n  new Uint32Array([2099173,2104196,2121667,2099395,2121763,2152258,2152322,2098946,2152386,2121859,2121955,2099333,2122051,2104324,2099493,2122147]),\n  new Uint32Array([6291456,6291456,6291456,2145794,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,2145858,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,0,0,6291456,0]),\n  new Uint32Array([0,2105921,2097729,0,2097377,0,0,2106017,0,2097505,2105889,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2239074,2239138,2239201,2239233,2239265,2239297,2239329,2239361,0,2239393,2239425,2239425,2239458,2239521,2239553,2209569]),\n  new Uint32Array([14680064,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,6291456,23068672]),\n  new Uint32Array([2108321,2108289,2113153,2098209,2180897,2180929,2180961,2111137,2098241,2108353,2170241,2170273,2180993,2105825,6291456,2105473]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2146114,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([2105921,2105921,2105921,2222049,2222049,2130977,2130977,2130977,2130977,2160065,2160065,2160065,2160065,2097729,2097729,2097729]),\n  new Uint32Array([2218145,2214785,2207937,2218177,2218209,2192993,2210113,2212769,2218241,2218273,2216129,2218305,2216161,2218337,2218369,2218401]),\n  new Uint32Array([0,0,0,2156546,2156610,2156674,2156738,2156802,0,0,0,0,0,2156866,23068672,2156930]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,0,23068672,23068672,0,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2213409,2213441,2213473,2213505,2213537,2213569,2213601,2213633,2213665,2195681,2213697,2213729,2213761,2213793,2213825,2213857]),\n  new Uint32Array([2100033,2099233,2122017,2200673,2098113,2121537,2103201,2200705,2104033,2121857,2121953,2122401,2099649,2099969,2123009,2100129]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2201857,6291456,2201889,6291456,2201921,6291456,2201953,6291456,2201985,6291456,2202017,6291456,2176193,2176257,23068672,23068672]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2188193,2188225,2188257,2188289,2188321,2188353,2188385,2188417,2188449,2188481,2188513,2188545,2188577,2188609,2188641,0]),\n  new Uint32Array([10554529,2221089,0,10502113,10562017,10537921,10538049,2221121,2221153,0,0,0,0,0,0,0]),\n  new Uint32Array([2213889,2213921,2213953,2213985,2214017,2214049,2214081,2194177,2214113,2214145,2214177,2214209,2214241,2214273,2214305,2214337]),\n  new Uint32Array([2166978,2167042,2099169,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2180545,6291456,6291456,6291456]),\n  new Uint32Array([10518915,10519011,10519107,10519203,2162242,2162306,2159554,2162370,2159362,2159618,2105922,2162434,2159746,2162498,2159810,2159874]),\n  new Uint32Array([2161730,2161794,2135586,2161858,2161922,2137186,2131810,2160290,2135170,2161986,2137954,2162050,2162114,2162178,10518723,10518819]),\n  new Uint32Array([10506627,10506723,10506819,10506915,10507011,10507107,10507203,10507299,10507395,10507491,10507587,10507683,10507779,10507875,10507971,10508067]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,23068672,23068672,0,0,0,0,0,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2175873,2175905,2175937,2175969,2176001,2176033,2176065,2176097,2176129,2176161,2176193,2176225,2176257,2176289,2176321,2176353]),\n  new Uint32Array([2140006,2140198,2140390,2140582,2140774,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,23068672,23068672,23068672]),\n  new Uint32Array([2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241]),\n  new Uint32Array([0,23068672,0,0,0,0,0,0,0,2145154,2145218,2145282,6291456,0,2145346,0]),\n  new Uint32Array([0,0,0,0,10531458,10495395,2148545,2143201,2173473,2148865,2173505,0,2173537,0,2173569,2149121]),\n  new Uint32Array([10537282,10495683,2148738,2148802,2148866,0,6291456,2148930,2186593,2173473,2148737,2148865,2148802,10495779,10495875,10495971]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2215425,2215457,2215489,2215521,2215553,2215585,2215617,2215649,2215681,2215713,2215745,2215777,2192033,2215809,2215841,2215873]),\n  new Uint32Array([2242049,2242081,2242113,2242145,2242177,2242209,2242241,2242273,2215937,2242305,2242338,2242401,2242433,2242465,2242497,2216001]),\n  new Uint32Array([10554529,2221089,0,0,10562017,10502113,10538049,10537921,2221185,10489601,10489697,10609889,10609921,2141729,2141793,10610273]),\n  new Uint32Array([2141923,2142019,2142115,2142211,2142307,2142403,2142499,2142595,2142691,0,0,0,0,0,0,0]),\n  new Uint32Array([0,2221185,2221217,10609857,10609857,10489601,10489697,10609889,10609921,2141729,2141793,2221345,2221377,2221409,2221441,2187105]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,18923970,23068672,23068672,23068672,0,6291456,6291456]),\n  new Uint32Array([2183105,6291456,2183137,6291456,2183169,6291456,2183201,6291456,2183233,6291456,2183265,6291456,2183297,6291456,2183329,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2134434,2134818,2097666,2097186,2097474,2097698,2105986,2131586,2132450,2131874,2131778,2135970,2135778,2161602,2136162,2161666]),\n  new Uint32Array([2236865,2236897,2236930,2236993,2237025,2235681,2237058,2237121,2237153,2237185,2237217,2217281,2237250,2191233,2237313,2237345]),\n  new Uint32Array([2190049,6291456,2190081,6291456,2190113,6291456,2190145,6291456,2190177,6291456,2190209,6291456,2190241,6291456,2190273,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2101922,2102050,2102178,2102306,10498755,10498851,10498947,10499043,10499139,10499235,10499331,10499427,10499523,10489604,10489732,10489860]),\n  new Uint32Array([2166914,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2181601,2170561,2181633,2181665,2170753,2181697,2172897,2170881,2181729,2170913,2172929,2113441,2181761,2181793,2171009,2173761]),\n  new Uint32Array([0,2105921,2097729,2106081,0,2097601,2162337,2106017,2133281,2097505,0,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2248001,2248033,2248066,2248130,2248193,2248226,2248289,2248322,2248385,2248417,2216673,2248450,2248514,2248577,2248610,2248673]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([2169729,6291456,2169761,6291456,2169793,6291456,2169825,6291456,2169857,2169889,6291456,2169921,6291456,2143329,6291456,2098305]),\n  new Uint32Array([2162178,2163202,2163266,2135170,2136226,2161986,2137954,2159426,2159490,2163330,2159554,2163394,2159682,2139522,2136450,2159746]),\n  new Uint32Array([2173953,2173985,0,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2174209,2174241,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,4271169,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2174273]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,6291456,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,2190785,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2189793,6291456,2189825,6291456,2189857,6291456,2189889,6291456,2189921,6291456,2189953,6291456,2189985,6291456,2190017,6291456]),\n  new Uint32Array([2105601,2112289,2108193,2112481,2112577,0,2098305,2108321,2108289,2100865,2113153,2108481,2113345,0,2098209,2111137]),\n  new Uint32Array([2172129,6291456,2172161,6291456,2172193,6291456,2172225,6291456,2172257,6291456,2172289,6291456,2172321,6291456,2172353,6291456]),\n  new Uint32Array([2214753,6291456,2214785,6291456,6291456,2214817,2214849,2214881,2214913,2214945,2214977,2215009,2215041,2215073,2194401,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,0,0,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([10610305,10610337,10575617,2221761,10610401,10610433,10502177,0,10610465,10610497,10610529,10610561,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,23068672,0,0,0,0,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2187105,2187137,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2199393,2199425,2199457,2199489,2199521,2199553,2199585,2199617,2199649,2199681,2199713,2199745,2199777,2199809,2199841,0]),\n  new Uint32Array([2217249,2217281,2217313,2217345,2217377,2217409,2217441,2217473,2215617,2217505,2217537,2217569,2214753,2217601,2217633,2217665]),\n  new Uint32Array([2170273,2170305,6291456,2170337,2170369,6291456,2170401,2170433,2170465,6291456,6291456,6291456,2170497,2170529,6291456,2170561]),\n  new Uint32Array([2188673,6291456,2188705,2188737,2188769,6291456,6291456,2188801,6291456,2188833,6291456,2188865,6291456,2180929,2181505,2180897]),\n  new Uint32Array([10489988,10490116,10490244,10490372,10490500,10490628,10490756,10490884,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2147393,2147457,2147521,2147585,2147649,2147713,2147777,2147841]),\n  new Uint32Array([23068672,23068672,0,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2241153,2241185,2241217,2215809,2241250,2241313,2241345,2241377,2217921,2241377,2241409,2215873,2241441,2241473,2241505,2241537]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220417,2220417,2220449,2220449,2220481,2220481,2220513,2220513,2220545,2220545,2220577,2220577,2220609,2220609,2220641,2220641]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,2144002,0,6291456,6291456,0,0,6291456,6291456,6291456]),\n  new Uint32Array([2167105,2167137,2167169,2167201,2167233,2167265,2167297,2167329,2167361,2167393,2167425,2167457,2167489,2167521,2167553,2167585]),\n  new Uint32Array([10575521,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([2234146,2234210,2234274,2234338,2234402,2234466,2234530,2234594,2234658,2234722,2234786,2234850,2234914,2234978,2235042,2235106]),\n  new Uint32Array([0,0,0,0,0,0,0,2180577,0,0,0,0,0,2180609,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456]),\n  new Uint32Array([2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2242529,2242561,2242593,2242625,2242657,2242689,2242721,2242753,2207937,2218177,2242785,2242817,2242849,2242882,2242945,2242977]),\n  new Uint32Array([2118049,2105345,2118241,2105441,2118433,2118529,2118625,2118721,2118817,2200257,2200289,2191809,2200321,2200353,2200385,2200417]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2185505,6291456,2185537,6291456,2185569,6291456,2185601,6291456,2185633,6291456,2185665,6291456,2185697,6291456,2185729,6291456]),\n  new Uint32Array([2231970,2232034,2232098,2232162,2232226,2232290,2232354,2232418,2232482,2232546,2232610,2232674,2232738,2232802,2232866,2232930]),\n  new Uint32Array([2218625,2246402,2246466,2246530,2246594,2246657,2246689,2246689,2218657,2219681,2246721,2246753,2246785,2246818,2246881,2208481]),\n  new Uint32Array([2197025,2197057,2197089,2197121,2197153,2197185,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2219137,2216961,2219169,2219201,2219233,2219265,2219297,2217025,2215041,2219329,2217057,2219361,2217089,2219393,2197153,2219426]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713]),\n  new Uint32Array([2243522,2243585,2243617,2243649,2243681,2210113,2243713,2243746,2243810,2243874,2243937,2243970,2244033,2244065,2244097,2244129]),\n  new Uint32Array([2178017,6291456,2178049,6291456,2178081,6291456,2178113,6291456,2178145,6291456,2178177,6291456,2178209,6291456,2178241,6291456]),\n  new Uint32Array([10553858,2165314,10518722,6291456,10518818,0,10518914,2130690,10519010,2130786,10519106,2130882,10519202,2165378,10554050,2165506]),\n  new Uint32Array([0,0,2135491,2135587,2135683,2135779,2135875,2135971,2135971,2136067,2136163,2136259,2136355,2136355,2136451,2136547]),\n  new Uint32Array([23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2220033,2220033,2220065,2220065,2220065,2220065,2220097,2220097,2220097,2220097,2220129,2220129,2220129,2220129,2220161,2220161]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2100897,2100898,2100899,2150018,2100865,2100866,2100867,2100868,2150082,2108481,2109858,2109859,2105569,2105505,2098241,2105601]),\n  new Uint32Array([2097217,2097505,2097505,2097505,2097505,2165570,2165570,2165634,2165634,2165698,2165698,2097858,2097858,0,0,2097152]),\n  new Uint32Array([23068672,6291456,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([10503843,10503939,10504035,10504131,10504227,10504323,10504419,10504515,10504611,10504707,10504803,10504899,10504995,10491140,10491268,0]),\n  new Uint32Array([2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2134145,2097153,2134241,2105953,2132705,2130977,2160065,2131297,2162049,2133089,2160577,2133857,2235297,2220769,2235329,2235361]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2222401,2222433,2222465,10531394,2222497,2222529,2222561,0,2222593,2222625,2222657,2222689,2222721,2222753,2222785,0]),\n  new Uint32Array([2184481,6291456,2184513,6291456,2184545,6291456,2184577,6291456,2184609,6291456,2184641,6291456,2184673,6291456,2184705,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2105570,2156034,2126947,2156098,2153666,2127043,2127139,2156162,0,2127235,2156226,2156290,2156354,2156418,2127331,2127427]),\n  new Uint32Array([2215905,2207041,2153185,2241569,2241601,2241633,2241665,2241697,2241730,2241793,2241825,2241857,2241889,2241921,2241954,2242017]),\n  new Uint32Array([2203777,6291456,2203809,6291456,2203841,6291456,2203873,6291456,2203905,6291456,2173121,2180993,2181249,2203937,2181313,0]),\n  new Uint32Array([2168577,6291456,2168609,6291456,2168641,6291456,2168673,6291456,2168705,6291456,2168737,6291456,2168769,6291456,2168801,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,23068672,23068672,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2210113,2195521,2210145,2210177,2210209,2210241,2210273,2210305,2210337,2210369,2210401,2210433,2210465,2210497,2210529,2210561]),\n  new Uint32Array([6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([2228706,2228770,2228834,2228898,2228962,2229026,2229090,2229154,2229218,2229282,2229346,2229410,2229474,2229538,2229602,2229666]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,18874368,18874368,18874368,0,0]),\n  new Uint32Array([2133089,2133281,2133281,2133281,2133281,2160577,2160577,2160577,2160577,2097441,2097441,2097441,2097441,2133857,2133857,2133857]),\n  new Uint32Array([6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089]),\n  new Uint32Array([2178529,6291456,2178561,6291456,2178593,6291456,2178625,6291456,2178657,6291456,2178689,6291456,2178721,6291456,2178753,6291456]),\n  new Uint32Array([2221025,2221025,2221057,2221057,2159329,2159329,2159329,2159329,2097217,2097217,2158914,2158914,2158978,2158978,2159042,2159042]),\n  new Uint32Array([2208161,2208193,2208225,2208257,2194433,2208289,2208321,2208353,2208385,2208417,2208449,2208481,2208513,2208545,2208577,2208609]),\n  new Uint32Array([2169217,6291456,2169249,6291456,2169281,6291456,2169313,6291456,2169345,6291456,2169377,6291456,2169409,6291456,2169441,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2133187,2133283,2133283,2133379,2133475,2133571,2133667,2133667,2133763,2133859,2133955,2134051,2134147,2134147,2134243,2134339]),\n  new Uint32Array([2197697,2114113,2114209,2197729,2197761,2114305,2197793,2114401,2114497,2197825,2114593,2114689,2114785,2114881,2114977,0]),\n  new Uint32Array([2193089,2193121,2193153,2193185,2117665,2117569,2193217,2193249,2193281,2193313,2193345,2193377,2193409,2193441,2193473,2193505]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2184225,6291456,2184257,6291456,2184289,6291456,2184321,6291456,2184353,6291456,2184385,6291456,2184417,6291456,2184449,6291456]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2100833,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2098657,2098049,2200737,2123489,2123681,2200769,2098625,2100321,2098145,2100449,2098017,2098753,2200801,2200833,2200865,0]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,0,2098241,2108353,2108417,2105825,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2181153,2105505,2181185,2167617,2180993]),\n  new Uint32Array([2160002,2160066,2160130,2160194,2160258,2132066,2131010,2131106,2106018,2131618,2160322,2131298,2132034,2131938,2137410,2132226]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([2183617,6291456,2183649,6291456,2183681,6291456,2183713,6291456,2183745,6291456,2183777,6291456,2183809,6291456,2183841,6291456]),\n  new Uint32Array([0,6291456,6291456,0,6291456,0,0,6291456,6291456,0,6291456,0,0,6291456,0,0]),\n  new Uint32Array([2250977,2251009,2251041,2251073,2195009,2251106,2251169,2251201,2251233,2251265,2251297,2251330,2251394,2251457,2251489,2251521]),\n  new Uint32Array([2205729,2205761,2205793,2205825,2205857,2205889,2205921,2205953,2205985,2206017,2206049,2206081,2206113,2206145,2206177,2206209]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2143170,2168993,6291456,2169025,6291456,2169057,6291456,2169089,6291456,2143234,2169121,6291456,2169153,6291456,2169185,6291456]),\n  new Uint32Array([23068672,23068672,2190689,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2248706,2248769,2248801,2248833,2248865,2248897,2248929,2248962,2249026,2249090,2249154,2240705,2249217,2249249,2249281,2249313]),\n  new Uint32Array([10485857,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10495394,6291456,2098209,6291456,6291456,2097152,6291456,10531394]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([14680064,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2173985,2173953,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889]),\n  new Uint32Array([6291456,2186977,6291456,6291456,6291456,6291456,6291456,10537858,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2209601,2209633,2209665,2209697,2209729,2209761,2209793,2209825,2209857,2209889,2209921,2209953,2209985,2210017,2210049,2210081]),\n  new Uint32Array([10501539,10501635,10501731,10501827,10501923,10502019,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905]),\n  new Uint32Array([2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2194561,2194593,2194625,2119777,2119873,2194657,2194689,2194721,2194753,2194785,2194817,2194849,2194881,2194913,2194945,2194977]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569]),\n  new Uint32Array([2222818,2222882,2222946,2223010,2223074,2223138,2223202,2223266,2223330,2223394,2223458,2223522,2223586,2223650,2223714,2223778]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672]),\n  new Uint32Array([0,2179553,2179585,2179617,2179649,2144001,2179681,2179713,2179745,2179777,2179809,2156705,2179841,2156833,2179873,2179905]),\n  new Uint32Array([6291456,23068672,6291456,2145602,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,6291456,0,0]),\n  new Uint32Array([2196513,2196545,2196577,2196609,2196641,2196673,2196705,2196737,2196769,2196801,2196833,2196865,2196897,2196929,2196961,2196993]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2177281,6291456,2177313,6291456,2177345,6291456,2177377,6291456,2177409,6291456,2177441,6291456,2177473,6291456,2177505,6291456]),\n  new Uint32Array([2187137,2221473,2221505,2221537,2221569,6291456,6291456,10610209,10610241,10537986,10537986,10537986,10537986,10609857,10609857,10609857]),\n  new Uint32Array([2243009,2243041,2216033,2243074,2243137,2243169,2243201,2219617,2243233,2243265,2243297,2243329,2243362,2243425,2243457,2243489]),\n  new Uint32Array([10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,2097152,4194304,4194304,0,0]),\n  new Uint32Array([2143042,6291456,2143106,2143106,2168833,6291456,2168865,6291456,6291456,2168897,6291456,2168929,6291456,2168961,6291456,2143170]),\n  new Uint32Array([6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2204193,2204225,2204257,2204289,2204321,2204353,2204385,2204417,2204449,2204481,2204513,2204545,2204577,2204609,2204641,2204673]),\n  new Uint32Array([2202753,6291456,2202785,6291456,2202817,6291456,2202849,6291456,2202881,6291456,2202913,6291456,2202945,6291456,2202977,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321]),\n  new Uint32Array([2147394,2147458,2147522,2147586,2147650,2147714,2147778,2147842,2147394,2147458,2147522,2147586,2147650,2147714,2147778,2147842]),\n  new Uint32Array([2253313,2253346,2253409,2253441,2253473,2253505,2253537,2253569,2253601,2253634,2219393,2253697,2253729,2253761,2253793,2253825]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([2162562,2162626,2131362,2162690,2159938,2160002,2162754,2162818,2160130,2162882,2160194,2160258,2160834,2160898,2161026,2161090]),\n  new Uint32Array([2175361,2175393,2175425,2175457,2175489,2175521,2175553,2175585,2175617,2175649,2175681,2175713,2175745,2175777,2175809,2175841]),\n  new Uint32Array([2253858,2253921,2253954,2254018,2254082,2196737,2254145,2196865,2254177,2254209,2254241,2254273,2197025,2254306,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2202113,2204129,2188705,2204161]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953]),\n  new Uint32Array([2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209]),\n  new Uint32Array([2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,0,2108417,0,2111713,2100897,2111905]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2175425,2175489,2175809,2175905,2175937,2175937,2176193,2176417,2180865,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,2143298,2143298,2143298,2143362,2143362,2143362,2143426,2143426,2143426,2171105,6291456,2171137]),\n  new Uint32Array([2120162,2120258,2151618,2151682,2151746,2151810,2151874,2151938,2152002,2120035,2120131,2120227,2152066,2120323,2152130,2120419]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2195361,2142433,2236065,2236097,2236129,2236161,2118241,2117473,2236193,2236225,2236257,2236289,0,0,0,0]),\n  new Uint32Array([2189281,6291456,2189313,6291456,2189345,6291456,2189377,6291456,2189409,6291456,2189441,6291456,2189473,6291456,2189505,6291456]),\n  new Uint32Array([6291456,6291456,2145922,6291456,6291456,6291456,6291456,2145986,6291456,6291456,6291456,6291456,2146050,6291456,6291456,6291456]),\n  new Uint32Array([2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,10502113,10562017,10610401,10502177,10610433,10538049]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,2186401,0,2186433,0,2186465,0,2186497]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,23068672,23068672,23068672]),\n  new Uint32Array([0,0,2198241,2198273,2198305,2198337,2198369,2198401,0,0,2198433,2198465,2198497,0,0,0]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,6291456,0,23068672,23068672,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([0,2105921,2097729,0,2097377,0,0,2106017,2133281,2097505,2105889,0,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2197889,2197921,2197953,2197985,2198017,2198049,2198081,2198113,2198145,2198177,2198209,2198241,2198273,2198305,2198337,2198369]),\n  new Uint32Array([2132514,2132610,2160386,2133090,2133186,2160450,2160514,2133282,2160578,2133570,2106178,2160642,2133858,2160706,2160770,2134146]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,6291456,23068672,23068672,6291456,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2184737,6291456,2184769,6291456,2184801,6291456,2184833,6291456,2184865,6291456,2184897,6291456,2184929,6291456,2184961,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,2186753,6291456,6291456,6291456,6291456,2186785,2186817,2186849,2173569,2186881,10496355,10495395,10575521]),\n  new Uint32Array([0,0,2097729,0,0,0,0,2106017,0,2097505,0,2097185,0,2135777,2097633,2097441]),\n  new Uint32Array([2189537,6291456,2189569,6291456,2189601,6291456,2189633,6291456,2189665,6291456,2189697,6291456,2189729,6291456,2189761,6291456]),\n  new Uint32Array([2202497,6291456,2202529,6291456,2202561,6291456,2202593,6291456,2202625,6291456,2202657,6291456,2202689,6291456,2202721,6291456]),\n  new Uint32Array([2245217,2218369,2245249,2245282,2245345,2245377,2245410,2245474,2245537,2245569,2245601,2245633,2245665,2245665,2245697,2245729]),\n  new Uint32Array([6291456,0,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,0,0,0,0,0,0,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,6291456,23068672,6291456,23068672,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2097281,2105921,2097729,2106081,2097377,2097601,2162337,2106017,2133281,2097505,0,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2176641,6291456,2176673,6291456,2176705,6291456,2176737,6291456,2176769,6291456,2176801,6291456,2176833,6291456,2176865,6291456]),\n  new Uint32Array([2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953,2174369,2174369,0,0,2100833,2100737]),\n  new Uint32Array([2116513,2190817,2190849,2190881,2190913,2190945,2116609,2190977,2191009,2191041,2191073,2117185,2191105,2191137,2191169,2191201]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456]),\n  new Uint32Array([2167617,2167649,2167681,2167713,2167745,2167777,2167809,6291456,2167841,2167873,2167905,2167937,2167969,2168001,2168033,4240130]),\n  new Uint32Array([2165122,2163970,2164034,2164098,2164162,2164226,2164290,2164354,2164418,2164482,2164546,2133122,2134562,2132162,2132834,2136866]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2186209,2186241,2186273,2186305,2186337,2186369,0,0]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([0,0,23068672,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([0,10537921,10610689,10610273,10610497,10610529,10610305,10610721,10489601,10489697,10610337,10575617,10554529,2221761,2197217,10496577]),\n  new Uint32Array([2105473,2105569,2105601,2112289,0,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441]),\n  new Uint32Array([2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481]),\n  new Uint32Array([2125346,2153410,2153474,2127394,2153538,2153602,2153666,2153730,2105507,2105476,2153794,2153858,2153922,2153986,2154050,2105794]),\n  new Uint32Array([2200449,2119681,2200481,2153313,2199873,2199905,2199937,2200513,2200545,2200577,2200609,2119105,2119201,2119297,2119393,2119489]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2175777,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2222273,2197217,2221473,2221505,2221089,2222305,2200865,2099681,2104481,2222337,2099905,2120737,2222369,2103713,2100225,2098785]),\n  new Uint32Array([2201377,6291456,2201409,6291456,2201441,6291456,2201473,6291456,2201505,6291456,2201537,6291456,2201569,6291456,6291456,23068672]),\n  new Uint32Array([2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793]),\n  new Uint32Array([2200897,6291456,2200929,6291456,2200961,6291456,2200993,6291456,2201025,6291456,2180865,6291456,2201057,6291456,2201089,6291456]),\n  new Uint32Array([0,0,0,0,0,23068672,23068672,0,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2161154,2161410,2138658,2161474,2161538,2097666,2097186,2097474,2162946,2132450,2163010,2163074,2136162,2163138,2161666,2161730]),\n  new Uint32Array([2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953]),\n  new Uint32Array([0,0,0,0,0,0,23068672,23068672,0,0,0,0,2145410,2145474,0,6291456]),\n  new Uint32Array([2244161,2216065,2212769,2244193,2244225,2244257,2244290,2244353,2244385,2244417,2244449,2218273,2244481,2244514,2244577,2244609]),\n  new Uint32Array([2125730,2125699,2125795,2125891,2125987,2154114,2154178,2154242,2154306,2154370,2154434,2154498,2126082,2126178,2126274,2126083]),\n  new Uint32Array([2237665,2237697,2237697,2237697,2237730,2237793,2237825,2237857,2237890,2237953,2237985,2238017,2238049,2238081,2238113,2238145]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2150146,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,0,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2214369,2238593,2238625,2238657,2238689,2238721,2238753,2238785,2238817,2238850,2238913,2238945,2238977,2235457,2239009,2239041]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([2252066,2252130,2252193,2252225,2252257,2252290,2252353,2252385,2252417,2252449,2252481,2252513,2252545,2252578,2252641,2252673]),\n  new Uint32Array([2197697,2114113,2114209,2197729,2197761,2114305,2197793,2114401,2114497,2197825,2114593,2114689,2114785,2114881,2114977,2197857]),\n  new Uint32Array([2224866,2224930,2224994,2225058,2225122,2225186,2225250,2225314,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2219490,2219554,2219617,2219649,2219681,2219714,2219778,2219842,2219905,2219937,0,0,0,0,0,0]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289]),\n  new Uint32Array([2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953,2148481,2173601,2173633,2173665]),\n  new Uint32Array([2220161,2220161,2220193,2220193,2220193,2220193,2220225,2220225,2220225,2220225,2220257,2220257,2220257,2220257,2220289,2220289]),\n  new Uint32Array([2192673,2192705,2192737,2192769,2192801,2192833,2192865,2118049,2192897,2117473,2117761,2192929,2192961,2192993,2193025,2193057]),\n  new Uint32Array([2179297,6291456,2179329,6291456,2179361,6291456,2179393,6291456,2179425,6291456,2179457,6291456,2179489,6291456,2179521,6291456]),\n  new Uint32Array([6291456,6291456,6291456,23068672,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2235745,2235777,2193633,2235809,2235841,2235873,2235905,2235937,2235969,2116513,2116705,2236001,2200513,2199905,2200545,2236033]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2232993,2233025,0,0,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761]),\n  new Uint32Array([2170593,6291456,2170625,6291456,2170657,6291456,2170689,2170721,6291456,2170753,6291456,6291456,2170785,6291456,2170817,2170849]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2166786,2166850,0,0,0,0]),\n  new Uint32Array([23068672,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,10575617,2187041,10502177,10489601,10489697,0]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2134562,2132162,2132834,2136866,2136482,2164610,2164674,2164738,2164802,2132802,2132706,2164866,2132898,2164930,2164994,2165058]),\n  new Uint32Array([6291456,6291456,2098337,2101441,10531458,2153473,6291456,6291456,10531522,2100737,2108193,6291456,2106499,2106595,2106691,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2233122,2233186,2233250,2233314,2233378,2233442,2233506,2233570,2233634,2233698,2233762,2233826,2233890,2233954,2234018,2234082]),\n  new Uint32Array([23068672,6291456,23068672,23068672,23068672,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2205217,2205249,2205281,2205313,2205345,2205377,2205409,2205441,2205473,2205505,2205537,2205569,2205601,2205633,2205665,2205697]),\n  new Uint32Array([6291456,0,6291456,0,0,0,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([2173601,2173761,2174081,2173569,2174241,2174113,2173953,6291456,2174305,6291456,2174337,6291456,2174369,6291456,2174401,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2152450,2152514,2099653,2104452,2099813,2122243,2099973,2152578,2122339,2122435,2122531,2122627,2122723,2104580,2122819,2152642]),\n  new Uint32Array([2236385,2236417,2236449,2236482,2236545,2215425,2236577,2236609,2236641,2236673,2215457,2236705,2236737,2236770,2215489,2236833]),\n  new Uint32Array([2163394,2159746,2163458,2131362,2163522,2160130,2163778,2132226,2163842,2132898,2163906,2161410,2138658,2097666,2136162,2163650]),\n  new Uint32Array([2218721,2246913,2246946,2216385,2247010,2247074,2215009,2247137,2247169,2216481,2247201,2247233,2247266,2247330,2247330,0]),\n  new Uint32Array([2129730,2129762,2129858,2129731,2129827,2156482,2156482,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,0,0,0,0,6291456,0,0]),\n  new Uint32Array([2203969,2204001,2181377,2204033,2204065,6291456,2204097,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2169473,6291456,2169505,6291456,2169537,6291456,2169569,6291456,2169601,6291456,2169633,6291456,2169665,6291456,2169697,6291456]),\n  new Uint32Array([2141542,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220801,2220801,2220801,2220801,2220833,2220833,2220865,2220865,2220865,2220865,2220897,2220897,2220897,2220897,2139873,2139873]),\n  new Uint32Array([0,0,0,0,0,23068672,23068672,0,0,0,0,0,0,0,6291456,0]),\n  new Uint32Array([2214849,2218433,2218465,2218497,2218529,2218561,2214881,2218593,2218625,2218657,2218689,2218721,2218753,2216545,2218785,2218817]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([2136482,2164610,2164674,2164738,2164802,2132802,2132706,2164866,2132898,2164930,2164994,2165058,2165122,2132802,2132706,2164866]),\n  new Uint32Array([2207649,2207681,2207713,2207745,2207777,2207809,2207841,2207873,2207905,2207937,2207969,2208001,2208033,2208065,2208097,2208129]),\n  new Uint32Array([2123683,2105092,2152706,2123779,2105220,2152770,2100453,2098755,2123906,2124002,2124098,2124194,2124290,2124386,2124482,2124578]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,6291456,0,0,0,0,0,0,0,10485857]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([10508163,10508259,10508355,10508451,2200129,2200161,2192737,2200193,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2203553,6291456,2203585,6291456,6291456,6291456,2203617,6291456,2203649,6291456,2203681,6291456,2203713,6291456,2203745,6291456]),\n  new Uint32Array([18884449,18884065,23068672,18884417,18884034,18921185,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,18874368]),\n  new Uint32Array([2247393,2247426,2247489,2247521,2247553,2247586,2247649,2247681,2247713,2247745,2247777,2247810,2247873,2247905,2247937,2247969]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672]),\n  new Uint32Array([2134145,2097153,2134241,0,2132705,2130977,2160065,2131297,0,2133089,2160577,2133857,2235297,0,2235329,0]),\n  new Uint32Array([2182593,6291456,2182625,6291456,2182657,6291456,2182689,6291456,2182721,6291456,2182753,6291456,2182785,6291456,2182817,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2102402,2102403,6291456,2110050]),\n  new Uint32Array([2149890,2108323,2149954,6291456,2113441,6291456,2149057,6291456,2113441,6291456,2105473,2167265,2111137,2105505,6291456,2108353]),\n  new Uint32Array([2219105,2219137,2195233,2251554,2251617,2251649,2251681,2251713,2251746,2251810,2251873,2251905,2251937,2251970,2252033,2219169]),\n  new Uint32Array([2203009,6291456,2203041,6291456,2203073,6291456,2203105,6291456,2203137,6291456,2203169,6291456,2203201,6291456,2203233,6291456]),\n  new Uint32Array([2128195,2128291,2128387,2128483,2128579,2128675,2128771,2128867,2128963,2129059,2129155,2129251,2129347,2129443,2129539,2129635]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2140964,2141156,2140966,2141158,2141350]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2225378,2225442,2225506,2225570,2225634,2225698,2225762,2225826,2225890,2225954,2226018,2226082,2226146,2226210,2226274,2226338]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417]),\n  new Uint32Array([2108353,2108417,0,2105601,2108193,2157121,2157313,2157377,2157441,2100897,6291456,2108419,2173953,2173633,2173633,2173953]),\n  new Uint32Array([2111713,2173121,2111905,2098177,2173153,2173185,2173217,2113153,2113345,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,2190753]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,2197249,6291456,2117377,2197281,2197313,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,0,0,0,0,0,0,23068672,0,0,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,23068672,23068672,23068672]),\n  new Uint32Array([2173281,6291456,2173313,6291456,2173345,6291456,2173377,6291456,0,0,10532546,6291456,6291456,6291456,10562017,2173441]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0]),\n  new Uint32Array([23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2159426,2159490,2159554,2159362,2159618,2159682,2139522,2136450,2159746,2159810,2159874,2130978,2131074,2131266,2131362,2159938]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2203233,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2203265,6291456,2203297,6291456,2203329,2203361,6291456]),\n  new Uint32Array([6291456,6291456,2148418,2148482,2148546,0,6291456,2148610,2186529,2186561,2148417,2148545,2148482,10495778,2143969,10495778]),\n  new Uint32Array([2134146,2139426,2160962,2134242,2161218,2161282,2161346,2161410,2138658,2134722,2134434,2134818,2097666,2097346,2097698,2105986]),\n  new Uint32Array([2198881,2198913,2198945,2198977,2199009,2199041,2199073,2199105,2199137,2199169,2199201,2199233,2199265,2199297,2199329,2199361]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([10610561,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([2183873,6291456,2183905,6291456,2183937,6291456,2183969,6291456,2184001,6291456,2184033,6291456,2184065,6291456,2184097,6291456]),\n  new Uint32Array([2244642,2244706,2244769,2244801,2218305,2244833,2244865,2244897,2244929,2244961,2244993,2245026,2245089,2245122,2245185,0]),\n  new Uint32Array([6291456,6291456,2116513,2116609,2116705,2116801,2199873,2199905,2199937,2199969,2190913,2200001,2200033,2200065,2200097,2191009]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2180673,2180705,2180737,2180769,2180801,2180833,0,0]),\n  new Uint32Array([2098081,2099521,2099105,2120705,2098369,2120801,2103361,2097985,2098433,2121377,2121473,2099169,2099873,2098401,2099393,2152609]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2150402]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,2145666,2145730,6291456,6291456]),\n  new Uint32Array([2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665]),\n  new Uint32Array([2187073,6291456,6291456,6291456,6291456,2098241,2098241,2108353,2100897,2111905,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2102404,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,2100612,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10485857]),\n  new Uint32Array([2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889]),\n  new Uint32Array([2217697,2217729,2217761,2217793,2217825,2217857,2217889,2217921,2217953,2215873,2217985,2215905,2218017,2218049,2218081,2218113]),\n  new Uint32Array([2211233,2218849,2216673,2218881,2218913,2218945,2218977,2219009,2216833,2219041,2215137,2219073,2216865,2209505,2219105,2216897]),\n  new Uint32Array([2240097,2240129,2240161,2240193,2240225,2240257,2240289,2240321,2240353,2240386,2240449,2240481,2240513,2240545,2207905,2240578]),\n  new Uint32Array([6291456,6291456,2202273,6291456,2202305,6291456,2202337,6291456,2202369,6291456,2202401,6291456,2202433,6291456,2202465,6291456]),\n  new Uint32Array([0,23068672,23068672,18923394,23068672,18923458,18923522,18884099,18923586,18884195,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2201121,6291456,2201153,6291456,2201185,6291456,2201217,6291456,2201249,6291456,2201281,6291456,2201313,6291456,2201345,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([2211041,2211073,2211105,2211137,2211169,2211201,2211233,2211265,2211297,2211329,2211361,2211393,2211425,2211457,2211489,2211521]),\n  new Uint32Array([2181825,6291456,2181857,6291456,2181889,6291456,2181921,6291456,2181953,6291456,2181985,6291456,2182017,6291456,2182049,6291456]),\n  new Uint32Array([2162337,2097633,2097633,2097633,2097633,2132705,2132705,2132705,2132705,2097153,2097153,2097153,2097153,2133089,2133089,2133089]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,2148545,6291456,2173473,6291456,2148865,6291456,2173505,6291456,2173537,6291456,2173569,6291456,2149121,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2207137,2207169,2207201,2207233,2207265,2207297,2207329,2207361,2207393,2207425,2207457,2207489,2207521,2207553,2207585,2207617]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,23068672,23068672,0,0,0,0,0,0]),\n  new Uint32Array([2198401,2198433,2198465,2198497,0,2198529,2198561,2198593,2198625,2198657,2198689,2198721,2198753,2198785,2198817,2198849]),\n  new Uint32Array([2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0]),\n  new Uint32Array([2216385,2118721,2216417,2216449,2216481,2216513,2216545,2211233,2216577,2216609,2216641,2216673,2216705,2216737,2216737,2216769]),\n  new Uint32Array([2216801,2216833,2216865,2216897,2216929,2216961,2216993,2215169,2217025,2217057,2217089,2217121,2217154,2217217,0,0]),\n  new Uint32Array([2210593,2191809,2210625,2210657,2210689,2210721,2210753,2210785,2210817,2210849,2191297,2210881,2210913,2210945,2210977,2211009]),\n  new Uint32Array([0,0,2105825,0,0,2111905,2105473,0,0,2112289,2108193,2112481,2112577,0,2098305,2108321]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,2097153,2134241,0,2132705,0,0,2131297,0,2133089,0,2133857,0,2220769,0,2235361]),\n  new Uint32Array([14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,6291456,6291456,14680064]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2171873,6291456,2171905,6291456,2171937,6291456,2171969,6291456,2172001,6291456,2172033,6291456,2172065,6291456,2172097,6291456]),\n  new Uint32Array([2220929,2220929,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2133857,2134145,2134145,2134145,2134145,2134241,2134241,2134241,2134241,2105889,2105889,2105889,2105889,2097185,2097185,2097185]),\n  new Uint32Array([2173697,2173761,2173793,2174113,2173985,2173953,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,10499619,10499715,10499811,10499907]),\n  new Uint32Array([0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,0,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,2144322,2144386,2144450,2144514,2144578,2144642,2144706,2144770]),\n  new Uint32Array([23068672,23068672,23068672,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2098209,2111137,0,2098241,2108353,2108417,2105825,0,0,2111905,2105473,2105569]),\n  new Uint32Array([2236321,2236353,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2152194,2121283,2103684,2103812,2097986,2098533,2097990,2098693,2098595,2098853,2099013,2103940,2121379,2121475,2121571,2104068]),\n  new Uint32Array([2206241,2206273,2206305,2206337,2206369,2206401,2206433,2206465,2206497,2206529,2206561,2206593,2206625,2206657,2206689,2206721]),\n  new Uint32Array([6291456,6291456,6291456,6291456,16777216,16777216,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,23068672,23068672,10538818,10538882,6291456,6291456,2150338]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2214369,2214401,2214433,2214465,2214497,2214529,2214561,2214593,2194977,2214625,2195073,2214657,2214689,2214721,6291456,6291456]),\n  new Uint32Array([2097152,2097152,2097152,2097152,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2182081,6291456,2182113,6291456,2182145,6291456,2182177,6291456,2182209,6291456,2182241,6291456,2182273,6291456,2182305,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2146881,2146945,2147009,2147073,2147137,2147201,2147265,2147329]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,23068672,23068672]),\n  new Uint32Array([0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2122915,2123011,2123107,2104708,2123203,2123299,2123395,2100133,2104836,2100290,2100293,2104962,2104964,2098052,2123491,2123587]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([6291456,2171169,6291456,2171201,6291456,2171233,6291456,2171265,6291456,2171297,6291456,2171329,6291456,6291456,2171361,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,2148994,2149058,2149122,0,6291456,2149186,2186945,2173537,2148993,2149121,2149058,10531458,10496066,0]),\n  new Uint32Array([2195009,2195041,2195073,2195105,2195137,2195169,2195201,2195233,2195265,2195297,2195329,2195361,2195393,2195425,2195457,2195489]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,0,0,6291456,6291456]),\n  new Uint32Array([2182849,6291456,2182881,6291456,2182913,6291456,2182945,6291456,2182977,6291456,2183009,6291456,2183041,6291456,2183073,6291456]),\n  new Uint32Array([2211553,2210081,2211585,2211617,2211649,2211681,2211713,2211745,2211777,2211809,2209569,2211841,2211873,2211905,2211937,2211969]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2166594,2127298,2166658,2142978,2141827,2166722]),\n  new Uint32Array([2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2185761,2185793,2185825,2185857,2185889,2185921,0,0]),\n  new Uint32Array([6291456,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,6291456]),\n  new Uint32Array([0,0,0,2220961,2220961,2220961,2220961,2144193,2144193,2159201,2159201,2159265,2159265,2144194,2220993,2220993]),\n  new Uint32Array([2192641,2235393,2235425,2152257,2116609,2235457,2235489,2200065,2235521,2235553,2235585,2212449,2235617,2235649,2235681,2235713]),\n  new Uint32Array([2194049,2194081,2194113,2194145,2194177,2194209,2194241,2194273,2194305,2194337,2194369,2194401,2194433,2194465,2194497,2194529]),\n  new Uint32Array([2196673,2208641,2208673,2208705,2208737,2208769,2208801,2208833,2208865,2208897,2208929,2208961,2208993,2209025,2209057,2209089]),\n  new Uint32Array([2191681,2191713,2191745,2191777,2153281,2191809,2191841,2191873,2191905,2191937,2191969,2192001,2192033,2192065,2192097,2192129]),\n  new Uint32Array([2230946,2231010,2231074,2231138,2231202,2231266,2231330,2231394,2231458,2231522,2231586,2231650,2231714,2231778,2231842,2231906]),\n  new Uint32Array([14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2185953,2185985,2186017,2186049,2186081,2186113,2186145,2186177]),\n  new Uint32Array([2139811,2139907,2097284,2105860,2105988,2106116,2106244,2097444,2097604,2097155,10485778,10486344,2106372,6291456,0,0]),\n  new Uint32Array([2110051,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2172385,6291456,2172417,6291456,2172449,6291456,2172481,6291456,2172513,6291456,2172545,6291456,2172577,6291456,2172609,6291456]),\n  new Uint32Array([0,0,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2249345,2249377,2249409,2249441,2249473,2249505,2249537,2249570,2210209,2249633,2249665,2249697,2249729,2249761,2249793,2216769]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2187169,2187201,2187233,2187265,2187297,2187329,2187361,2187393,2187425,2187457,2187489,2187521,2187553,2187585,2187617,2187649]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,6291456,6291456,0,0,0,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([2182337,6291456,2182369,6291456,2182401,6291456,2182433,6291456,2182465,6291456,2182497,6291456,2182529,6291456,2182561,6291456]),\n  new Uint32Array([2138179,2138275,2138371,2138467,2134243,2134435,2138563,2138659,2138755,2138851,2138947,2139043,2138947,2138755,2139139,2139235]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2250498,2250562,2250625,2250657,2208321,2250689,2250721,2250753,2250785,2250817,2250849,2218945,2250881,2250913,2250945,0]),\n  new Uint32Array([2170369,2105569,2098305,2108481,2173249,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2100897,2111905,2105473,2105569,2105601,0,2108193,0,0,0,2098305,2108321,2108289,2100865,2113153,2108481]),\n  new Uint32Array([2100897,2100897,2105569,2105569,6291456,2112289,2149826,6291456,6291456,2112481,2112577,2098177,2098177,2098177,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456,6291456]),\n  new Uint32Array([6291456,2169953,2169985,6291456,2170017,6291456,2170049,2170081,6291456,2170113,2170145,2170177,6291456,6291456,2170209,2170241]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220641,2220641,2220673,2220673,2220673,2220673,2220705,2220705,2220705,2220705,2220737,2220737,2220737,2220737,2220769,2220769]),\n  new Uint32Array([2127650,2127746,2127842,2127938,2128034,2128130,2128226,2128322,2128418,2127523,2127619,2127715,2127811,2127907,2128003,2128099]),\n  new Uint32Array([2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177]),\n  new Uint32Array([0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2204705,2204737,2204769,2204801,2204833,2204865,2204897,2204929,2204961,2204993,2205025,2205057,2205089,2205121,2205153,2205185]),\n  new Uint32Array([2176385,6291456,2176417,6291456,2176449,6291456,2176481,6291456,2176513,6291456,2176545,6291456,2176577,6291456,2176609,6291456]),\n  new Uint32Array([2195521,2195553,2195585,2195617,2195649,2195681,2117857,2195713,2195745,2195777,2195809,2195841,2195873,2195905,2195937,2195969]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456]),\n  new Uint32Array([2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113]),\n  new Uint32Array([2131586,2132450,2135970,2135778,2161602,2136162,2163650,2161794,2135586,2163714,2137186,2131810,2160290,2135170,2097506,2159554]),\n  new Uint32Array([2134145,2097153,2134241,2105953,2132705,2130977,2160065,2131297,2162049,2133089,2160577,2133857,0,0,0,0]),\n  new Uint32Array([2116513,2116609,2116705,2116801,2116897,2116993,2117089,2117185,2117281,2117377,2117473,2117569,2117665,2117761,2117857,2117953]),\n  new Uint32Array([2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100802,2101154,2101282,2101410,2101538,2101666,2101794]),\n  new Uint32Array([2100289,2098657,2098049,2200737,2123489,2123681,2200769,2098625,2100321,2098145,2100449,2098017,2098753,2098977,2150241,2150305]),\n  new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,2109955,6291456,6291456,0,0,0,0]),\n  new Uint32Array([18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,0,0]),\n  new Uint32Array([2130979,2131075,2131075,2131171,2131267,2131363,2131459,2131555,2131651,2131651,2131747,2131843,2131939,2132035,2132131,2132227]),\n  new Uint32Array([0,2177793,6291456,2177825,6291456,2177857,6291456,2177889,6291456,2177921,6291456,2177953,6291456,2177985,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2113345,0,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289]),\n  new Uint32Array([2136643,2136739,2136835,2136931,2137027,2137123,2137219,2137315,2137411,2137507,2137603,2137699,2137795,2137891,2137987,2138083]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([2174433,6291456,2174465,6291456,2174497,6291456,2174529,6291456,2174561,6291456,2174593,6291456,2174625,6291456,2174657,6291456]),\n  new Uint32Array([0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441]),\n  new Uint32Array([10496547,10496643,2105505,2149698,6291456,10496739,10496835,2170273,6291456,2149762,2105825,2111713,2111713,2111713,2111713,2168673]),\n  new Uint32Array([6291456,2143490,2143490,2143490,2171649,6291456,2171681,2171713,2171745,6291456,2171777,6291456,2171809,6291456,2171841,6291456]),\n  new Uint32Array([2159106,2159106,2159170,2159170,2159234,2159234,2159298,2159298,2159298,2159362,2159362,2159362,2106401,2106401,2106401,2106401]),\n  new Uint32Array([2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137]),\n  new Uint32Array([2108417,2181217,2181249,2181281,2170433,2170401,2181313,2181345,2181377,2181409,2181441,2181473,2181505,2181537,2170529,2181569]),\n  new Uint32Array([2218433,2245761,2245793,2245825,2245857,2245890,2245953,2245986,2209665,2246050,2246113,2246146,2246210,2246274,2246337,2246369]),\n  new Uint32Array([2230754,2230818,2230882,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2184129,6291456,2184161,6291456,2184193,6291456,6291456,6291456,6291456,6291456,2146818,2183361,6291456,6291456,2142978,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2135170,2097506,2130691,2130787,2130883,2163970,2164034,2164098,2164162,2164226,2164290,2164354,2164418,2164482,2164546,2133122]),\n  new Uint32Array([2108515,2108611,2100740,2108707,2108803,2108899,2108995,2109091,2109187,2109283,2109379,2109475,2109571,2109667,2109763,2100738]),\n  new Uint32Array([2102788,2102916,2103044,2120515,2103172,2120611,2120707,2098373,2103300,2120803,2120899,2120995,2103428,2103556,2121091,2121187]),\n  new Uint32Array([2158082,2158146,0,2158210,2158274,0,2158338,2158402,2158466,2129922,2158530,2158594,2158658,2158722,2158786,2158850]),\n  new Uint32Array([10499619,10499715,10499811,10499907,10500003,10500099,10500195,10500291,10500387,10500483,10500579,10500675,10500771,10500867,10500963,10501059]),\n  new Uint32Array([2239585,2239618,2239681,2239713,0,2191969,2239745,2239777,2192033,2239809,2239841,2239874,2239937,2239970,2240033,2240065]),\n  new Uint32Array([2252705,2252738,2252801,2252833,2252865,2252897,2252930,2252994,2253057,2253089,2253121,2253154,2253217,2253250,2219361,2219361]),\n  new Uint32Array([2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,10538050,10538114,10538178,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2226402,2226466,2226530,2226594,2226658,2226722,2226786,2226850,2226914,2226978,2227042,2227106,2227170,2227234,2227298,2227362]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,2144066,2144130,2144194,2144258,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2124674,2124770,2123875,2123971,2124067,2124163,2124259,2124355,2124451,2124547,2124643,2124739,2124835,2124931,2125027,2125123]),\n  new Uint32Array([2168065,6291456,2168097,6291456,2168129,6291456,2168161,6291456,2168193,6291456,2168225,6291456,2168257,6291456,2168289,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,2100610,2100611,6291456,2107842,2107843,6291456,6291456,6291456,6291456,10537922,6291456,10537986,6291456]),\n  new Uint32Array([2174849,2174881,2174913,2174945,2174977,2175009,2175041,2175073,2175105,2175137,2175169,2175201,2175233,2175265,2175297,2175329]),\n  new Uint32Array([2154562,2154626,2154690,2154754,2141858,2154818,2154882,2127298,2154946,2127298,2155010,2155074,2155138,2155202,2155266,2155202]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0]),\n  new Uint32Array([2200641,2150786,2150850,2150914,2150978,2151042,2106562,2151106,2150562,2151170,2151234,2151298,2151362,2151426,2151490,2151554]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456]),\n  new Uint32Array([2220289,2220289,2220321,2220321,2220321,2220321,2220353,2220353,2220353,2220353,2220385,2220385,2220385,2220385,2220417,2220417]),\n  new Uint32Array([2155330,2155394,0,2155458,2155522,2155586,2105732,0,2155650,2155714,2155778,2125314,2155842,2155906,2126274,2155970]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0]),\n  new Uint32Array([2097729,2106017,2106017,2106017,2106017,2131297,2131297,2131297,2131297,2106081,2106081,2162049,2162049,2105953,2105953,2162337]),\n  new Uint32Array([2097185,2097697,2097697,2097697,2097697,2135777,2135777,2135777,2135777,2097377,2097377,2097377,2097377,2097601,2097601,2097217]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),\n  new Uint32Array([2139331,2139427,2139523,2139043,2133571,2132611,2139619,2139715,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2174113,2174145,2100897,2098177,2108289,2100865,2173601,2173633,2173985,2174113,2174145,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,23068672,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,18923778,23068672,23068672,23068672,23068672,18923842,23068672,23068672,23068672,23068672,18923906,23068672,23068672,23068672]),\n  new Uint32Array([2134145,2097153,2134241,0,2132705,2130977,2160065,2131297,0,2133089,0,2133857,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2177537,6291456,2177569,6291456,2177601,6291456,2177633,6291456,2177665,6291456,2177697,6291456,2177729,6291456,2177761,6291456]),\n  new Uint32Array([2212481,2212513,2212545,2212577,2197121,2212609,2212641,2212673,2212705,2212737,2212769,2212801,2212833,2212865,2212897,2212929]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2098241,2108353,2170209,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,6291456,2108193,2172417,2112481,2098177]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n];\nvar blockIdxes = new Uint16Array([616,616,565,147,161,411,330,2,131,131,328,454,241,408,86,86,696,113,285,350,325,301,473,214,639,232,447,64,369,598,124,672,567,223,621,154,107,86,86,86,86,86,86,505,86,68,634,86,218,218,218,218,486,218,218,513,188,608,216,86,217,463,668,85,700,360,184,86,86,86,647,402,153,10,346,718,662,260,145,298,117,1,443,342,138,54,563,86,240,572,218,70,387,86,118,460,641,602,86,86,306,218,86,692,86,86,86,86,86,162,707,86,458,26,86,218,638,86,86,86,86,86,65,449,86,86,306,183,86,58,391,667,86,157,131,131,131,131,86,433,131,406,31,218,247,86,86,693,218,581,351,86,438,295,69,462,45,126,173,650,14,295,69,97,168,187,641,78,523,390,69,108,287,664,173,219,83,295,69,108,431,426,173,694,412,115,628,52,257,398,641,118,501,121,69,579,151,423,173,620,464,121,69,382,151,476,173,27,53,121,86,594,578,226,173,86,632,130,86,96,228,268,641,622,563,86,86,21,148,650,131,131,321,43,144,343,381,531,131,131,178,20,86,399,156,375,164,541,30,60,715,198,92,118,131,131,86,86,306,407,86,280,457,196,488,358,131,131,244,86,86,143,86,86,86,86,86,667,563,86,86,86,86,86,86,86,86,86,86,86,86,86,336,363,86,86,336,86,86,380,678,67,86,86,86,678,86,86,86,512,86,307,86,708,86,86,86,86,86,528,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,563,307,86,86,86,86,86,104,450,337,86,720,86,32,450,397,86,86,86,587,218,558,708,708,293,708,86,86,86,86,86,694,205,86,8,86,86,86,86,549,86,667,697,697,679,86,458,460,86,86,650,86,708,543,86,86,86,245,86,86,86,140,218,127,708,708,458,197,131,131,131,131,500,86,86,483,251,86,306,510,515,86,722,86,86,86,65,201,86,86,483,580,470,86,86,86,368,131,131,131,694,114,110,555,86,86,123,721,163,142,713,418,86,317,675,209,218,218,218,371,545,592,629,490,603,199,46,320,525,680,310,279,388,111,42,252,593,607,235,617,410,377,50,548,135,356,17,520,189,116,392,600,349,332,482,699,690,535,119,106,451,71,152,667,131,218,218,265,671,637,492,504,533,683,269,269,658,86,86,86,86,86,86,86,86,86,491,619,86,86,6,86,86,86,86,86,86,86,86,86,86,86,229,86,86,86,86,86,86,86,86,86,86,86,86,667,86,86,171,131,118,131,656,206,234,571,89,334,670,246,311,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,534,86,86,86,86,86,86,82,86,86,86,86,86,430,86,86,86,86,86,86,86,86,86,599,86,324,86,470,69,640,264,131,626,101,174,86,86,667,233,105,73,374,394,221,204,84,28,326,86,86,471,86,86,86,109,573,86,171,200,200,200,200,218,218,86,86,86,86,460,131,131,131,86,506,86,86,86,86,86,220,404,34,614,47,442,305,25,612,338,601,648,7,344,255,131,131,51,86,312,507,563,86,86,86,86,588,86,86,86,86,86,530,511,86,458,3,435,384,556,522,230,527,86,118,86,86,717,86,137,273,79,181,484,23,93,112,655,249,417,703,370,87,98,313,684,585,155,465,596,481,695,18,416,428,61,701,706,282,643,495,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,307,86,86,86,171,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,650,131,422,542,420,263,24,172,86,86,86,86,86,566,86,86,132,540,395,353,494,519,19,485,284,472,131,131,131,16,714,86,211,708,86,86,86,694,698,86,86,483,704,708,218,272,86,86,120,86,159,478,86,307,247,86,86,663,597,459,627,667,86,86,277,455,39,302,86,250,86,86,86,271,99,452,306,281,329,400,200,86,86,362,549,352,646,461,323,586,86,86,4,708,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,717,86,518,86,86,650,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,125,554,480,300,613,72,333,288,561,544,604,48,719,91,169,176,590,224,76,191,29,559,560,231,537,166,477,538,256,437,131,131,469,167,40,0,685,266,441,705,239,642,475,568,640,610,299,673,517,318,385,22,202,180,179,359,424,215,90,66,521,653,467,682,453,409,479,88,131,661,35,303,15,262,666,630,712,131,131,618,659,175,218,195,347,193,227,261,150,165,709,546,294,569,710,270,413,376,524,55,242,38,419,529,170,657,3,304,122,379,278,131,651,86,67,576,458,458,131,131,86,86,86,86,86,86,86,118,309,86,86,547,86,86,86,86,667,650,664,131,131,86,86,56,131,131,131,131,131,131,131,131,86,307,86,86,86,664,238,650,86,86,717,86,118,86,86,315,86,59,86,86,574,549,131,131,340,57,436,86,86,86,86,86,86,458,708,499,691,62,86,650,86,86,694,86,86,86,319,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,86,549,694,131,131,131,131,131,131,131,131,131,77,86,86,139,86,502,86,86,86,667,595,131,131,131,86,12,86,13,86,609,131,131,131,131,86,86,86,625,86,669,86,86,182,129,86,5,694,104,86,86,86,86,131,131,86,86,386,171,86,86,86,345,86,324,86,589,86,213,36,131,131,131,131,131,86,86,86,86,104,131,131,131,141,290,80,677,86,86,86,267,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,667,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,515,86,86,33,136,669,86,711,515,86,86,550,640,86,104,708,515,86,159,372,717,86,86,444,515,86,86,663,37,86,563,460,86,390,624,702,131,131,131,131,389,59,708,86,86,341,208,708,635,295,69,108,431,508,100,190,131,131,131,131,131,131,131,131,86,86,86,649,516,660,131,131,86,86,86,218,631,708,131,131,131,131,131,131,131,131,131,131,86,86,341,575,238,514,131,131,86,86,86,218,291,708,307,131,86,86,306,367,708,131,131,131,86,378,697,86,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,615,253,86,86,86,292,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,104,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,69,86,341,553,549,86,307,86,86,645,275,455,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,708,131,131,131,131,131,131,86,86,86,86,86,86,667,460,86,86,86,86,86,86,86,86,86,86,86,86,717,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,667,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,104,86,667,459,131,131,131,131,131,131,86,458,225,86,86,86,516,549,11,390,405,86,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,460,44,218,197,711,515,131,131,131,131,664,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,307,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,308,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,118,307,104,286,591,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,86,86,681,86,86,75,185,314,582,86,358,496,474,86,104,131,86,86,86,86,146,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,171,86,640,131,131,131,131,131,131,131,131,246,503,689,339,674,81,258,415,439,128,562,366,414,246,503,689,583,222,557,316,636,665,186,355,95,670,246,503,689,339,674,557,258,415,439,186,355,95,670,246,503,689,446,644,536,652,331,532,335,440,274,421,297,570,74,425,364,425,606,552,403,509,134,365,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,218,218,218,498,218,218,577,627,551,497,572,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,553,354,236,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,296,455,131,131,456,243,103,86,41,459,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,9,276,158,716,393,564,383,489,401,654,210,654,131,131,131,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,650,86,86,86,86,86,86,717,667,563,563,563,86,549,102,686,133,246,605,86,448,86,86,207,307,131,131,131,641,86,177,611,445,373,194,584,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,308,307,171,86,86,86,86,86,86,86,717,86,86,86,86,86,460,131,131,650,86,86,86,694,708,86,86,694,86,458,131,131,131,131,131,131,667,694,289,650,667,131,131,86,640,131,131,664,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,460,86,86,86,86,86,86,86,86,86,86,86,86,86,458,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,466,203,149,429,94,432,160,687,539,63,237,283,192,248,348,259,427,526,396,676,254,468,487,212,327,623,49,633,322,493,434,688,357,361,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131]);\nvar mappingStr = \"صلى الله عليه وسلمجل جلالهキロメートルrad∕s2エスクードキログラムキロワットグラムトンクルゼイロサンチームパーセントピアストルファラッドブッシェルヘクタールマンションミリバールレントゲン′′′′1⁄10viii(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)∫∫∫∫(오전)(오후)アパートアルファアンペアイニングエーカーカラットカロリーキュリーギルダークローネサイクルシリングバーレルフィートポイントマイクロミクロンメガトンリットルルーブル株式会社kcalm∕s2c∕kgاكبرمحمدصلعمرسولریال1⁄41⁄23⁄4 ̈́ྲཱྀླཱྀ ̈͂ ̓̀ ̓́ ̓͂ ̔̀ ̔́ ̔͂ ̈̀‵‵‵a/ca/sc/oc/utelfax1⁄71⁄91⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄8xii0⁄3∮∮∮(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::====(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)pte10月11月12月ergltdアールインチウォンオンスオームカイリガロンガンマギニーケースコルナコーポセンチダースノットハイツパーツピクルフランペニヒヘルツペンスページベータボルトポンドホールホーンマイルマッハマルクヤードヤールユアンルピー10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpabardm2dm3khzmhzghzthzmm2cm2km2mm3cm3km3kpampagpalogmilmolppmv∕ma∕m10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galffifflשּׁשּׂ ٌّ ٍّ َّ ُّ ِّ ّٰـَّـُّـِّتجمتحجتحمتخمتمجتمحتمخجمححميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحيمجحمجممخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييحييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلے𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯〔s〕ppv〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕 ̄ ́ ̧ssi̇ijl·ʼndžljnjdz ̆ ̇ ̊ ̨ ̃ ̋ ιեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມགྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀླྀྒྷྜྷྡྷྦྷྫྷྐྵaʾἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶι ͂ὴιηιήιῆιὼιωιώιῶι ̳!! ̅???!!?rs°c°fnosmtmivix⫝̸ ゙ ゚よりコト333435참고주의363738394042444546474849503月4月5月6月7月8月9月hgevギガデシドルナノピコビルペソホンリラレムdaauovpciu平成昭和大正明治naμakakbmbgbpfnfμfμgmgμlmldlklfmnmμmpsnsμsmsnvμvkvpwnwμwmwkwkωmωbqcccddbgyhainkkktlnlxphprsrsvwbstմնմեմիվնմխיִײַשׁשׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּתּוֹבֿכֿפֿאלئائەئوئۇئۆئۈئېئىئجئحئمئيبجبمبىبيتىتيثجثمثىثيخحضجضمطحظمغجفجفحفىفيقحقىقيكاكجكحكخكلكىكينخنىنيهجهىهييىذٰرٰىٰئرئزئنبزبنترتزتنثرثزثنمانرنزننيريزئخئهبهتهصخنههٰثهسهشهطىطيعىعيغىغيسىسيشىشيصىصيضىضيشخشرسرصرضراً ًـًـّ ْـْلآلألإ𝅗𝅥0,1,2,3,4,5,6,7,8,9,wzhvsdwcmcmddjほかココàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĵķĺļľłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁʕͱͳʹͷ;ϳέίόύβγδεζθκλνξοπρστυφχψϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդզէըթժլծկհձղճյշոչպջռստրցփքօֆ་ⴧⴭნᏰᏱᏲᏳᏴᏵꙋɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἐἑἒἓἔἕἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗᾰᾱὲΐῐῑὶΰῠῡὺῥ`ὸ‐+−∑〈〉ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟丨丶丿乙亅亠人儿入冂冖冫几凵刀力勹匕匚匸卜卩厂厶又口囗士夂夊夕女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无曰欠止歹殳毋比毛氏气爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅ᄁᆪᆬᆭᄄᆰᆱᆲᆳᆴᆵᄚᄈᄡᄊ짜ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ上中下甲丙丁天地問幼箏우秘男適優印注項写左右医宗夜テヌモヨヰヱヲꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꬷꭒᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵令囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵𤋮舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒𢡊𢡄𣏕㮝䀘䀹𥉉𥳐𧻓齃龎עםٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھۓڭۋۅۉ、〖〗—–_{}【】《》「」『』[]#&*-<>\\\\$%@ءؤة\\\"'^|~⦅⦆・ゥャ¢£¬¦¥₩│←↑→↓■○𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟ıȷ∇∂𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃ٮڡٯ字双多解交映無前後再新初終販声吹演投捕遊指禁空合満申割営配得可丽丸乁𠄢你侻倂偺備像㒞𠘺兔兤具𠔜㒹內𠕋冗冤仌冬𩇟刃㓟刻剆剷㔕包匆卉博即卽卿𠨬灰及叟𠭣叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬𡓤売壷夆夢奢𡚨𡛪姬娛娧姘婦㛮嬈嬾𡧈寃寘寳𡬘寿将㞁屠峀岍𡷤嵃𡷦嵮嵫嵼巡巢㠯巽帨帽幩㡢𢆃㡼庰庳庶𪎒𢌱舁弢㣇𣊸𦇚形彫㣣徚忍志忹悁㤺㤜𢛔惇慈慌慺憲憤憯懞戛扝抱拔捐𢬌挽拼捨掃揤𢯱搢揅掩㨮摩摾撝摷㩬敬𣀊旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓𣏃㭉柺枅桒𣑭梎栟椔楂榣槪檨𣚣櫛㰘次𣢧歔㱎歲殟殻𣪍𡴋𣫺汎𣲼沿泍汧洖派浩浸涅𣴞洴港湮㴳滇𣻑淹潮𣽞𣾎濆瀹瀛㶖灊災灷炭𠔥煅𤉣熜爨牐𤘈犀犕𤜵𤠔獺王㺬玥㺸瑇瑜璅瓊㼛甤𤰶甾𤲒𢆟瘐𤾡𤾸𥁄㿼䀈𥃳𥃲𥄙𥄳眞真瞋䁆䂖𥐝硎䃣𥘦𥚚𥛅秫䄯穊穏𥥼𥪧䈂𥮫篆築䈧𥲀糒䊠糨糣紀𥾆絣䌁緇縂繅䌴𦈨𦉇䍙𦋙罺𦌾羕翺𦓚𦔣聠𦖨聰𣍟䏕育脃䐋脾媵𦞧𦞵𣎓𣎜舄辞䑫芑芋芝劳花芳芽苦𦬼茝荣莭茣莽菧荓菊菌菜𦰶𦵫𦳕䔫蓱蓳蔖𧏊蕤𦼬䕝䕡𦾱𧃒䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠𧙧裗裞䘵裺㒻𧢮𧥦䚾䛇誠𧲨貫賁贛起𧼯𠠄跋趼跰𠣞軔𨗒𨗭邔郱鄑𨜮鄛鈸鋗鋘鉼鏹鐕𨯺開䦕閷𨵷䧦雃嶲霣𩅅𩈚䩮䩶韠𩐊䪲𩒖頩𩖶飢䬳餩馧駂駾䯎𩬰鱀鳽䳎䳭鵧𪃎䳸𪄅𪈎𪊑䵖黾鼅鼏鼖𪘀\";\n\nfunction mapChar(codePoint) {\n  if (codePoint >= 0x30000) {\n    // High planes are special cased.\n    if (codePoint >= 0xE0100 && codePoint <= 0xE01EF)\n      return 18874368;\n    return 0;\n  }\n  return blocks[blockIdxes[codePoint >> 4]][codePoint & 15];\n}\n\nreturn {\n  mapStr: mappingStr,\n  mapChar: mapChar\n};\n}));\n","import {\n  INITIALIZE_CREATE_PASSWORD_ROUTE,\n  INITIALIZE_IMPORT_WITH_SEED_PHRASE_ROUTE,\n  DEFAULT_ROUTE,\n  ONBOARDING_CREATE_PASSWORD_ROUTE,\n  ONBOARDING_IMPORT_WITH_SRP_ROUTE,\n} from '../helpers/constants/routes';\n\nexport function getFirstTimeFlowTypeRoute(state) {\n  const { firstTimeFlowType } = state.metamask;\n\n  let nextRoute;\n  if (firstTimeFlowType === 'create') {\n    nextRoute = process.env.ONBOARDING_V2\n      ? ONBOARDING_CREATE_PASSWORD_ROUTE\n      : INITIALIZE_CREATE_PASSWORD_ROUTE;\n  } else if (firstTimeFlowType === 'import') {\n    nextRoute = process.env.ONBOARDING_V2\n      ? ONBOARDING_IMPORT_WITH_SRP_ROUTE\n      : INITIALIZE_IMPORT_WITH_SEED_PHRASE_ROUTE;\n  } else {\n    nextRoute = DEFAULT_ROUTE;\n  }\n\n  return nextRoute;\n}\n\nexport const getFirstTimeFlowType = (state) => {\n  return state.metamask.firstTimeFlowType;\n};\n\nexport const getOnboardingInitiator = (state) => {\n  const { onboardingTabs } = state.metamask;\n\n  if (!onboardingTabs || Object.keys(onboardingTabs).length !== 1) {\n    return null;\n  }\n\n  const location = Object.keys(onboardingTabs)[0];\n  const tabId = onboardingTabs[location];\n  return {\n    location,\n    tabId,\n  };\n};\n","import { addHexPrefix } from '../../app/scripts/lib/util';\nimport {\n  conversionUtil,\n  conversionGreaterThan,\n} from '../../shared/modules/conversion.utils';\nimport { formatCurrency } from '../helpers/utils/confirm-tx.util';\nimport { decEthToConvertedCurrency as ethTotalToConvertedCurrency } from '../helpers/utils/conversions.util';\nimport { formatETHFee } from '../helpers/utils/formatters';\nimport { calcGasTotal } from '../pages/send/send.utils';\n\nimport { getGasPrice } from '../ducks/send';\nimport {\n  GAS_ESTIMATE_TYPES as GAS_FEE_CONTROLLER_ESTIMATE_TYPES,\n  GAS_LIMITS,\n} from '../../shared/constants/gas';\nimport {\n  getGasEstimateType,\n  getGasFeeEstimates,\n  isEIP1559Network,\n} from '../ducks/metamask/metamask';\nimport { GAS_ESTIMATE_TYPES } from '../helpers/constants/common';\nimport { getCurrentCurrency, getIsMainnet, getShouldShowFiat } from '.';\n\nconst NUMBER_OF_DECIMALS_SM_BTNS = 5;\n\nexport function getCustomGasLimit(state) {\n  return state.gas.customData.limit;\n}\n\nexport function getCustomGasPrice(state) {\n  return state.gas.customData.price;\n}\n\nexport function getBasicGasEstimateLoadingStatus(state) {\n  return getIsGasEstimatesFetched(state) === false;\n}\n\nexport function getAveragePriceEstimateInHexWEI(state) {\n  const averagePriceEstimate = getAverageEstimate(state);\n\n  return getGasPriceInHexWei(averagePriceEstimate);\n}\n\nexport function getFastPriceEstimateInHexWEI(state) {\n  const fastPriceEstimate = getFastPriceEstimate(state);\n  return getGasPriceInHexWei(fastPriceEstimate || '0x0');\n}\n\nexport function getDefaultActiveButtonIndex(\n  gasButtonInfo,\n  customGasPriceInHex,\n  gasPrice,\n) {\n  return gasButtonInfo\n    .map(({ priceInHexWei }) => priceInHexWei)\n    .lastIndexOf(addHexPrefix(customGasPriceInHex || gasPrice));\n}\n\nexport function getSafeLowEstimate(state) {\n  const gasFeeEstimates = getGasFeeEstimates(state);\n  const gasEstimateType = getGasEstimateType(state);\n\n  return gasEstimateType === GAS_FEE_CONTROLLER_ESTIMATE_TYPES.LEGACY\n    ? gasFeeEstimates?.low\n    : null;\n}\n\nexport function getAverageEstimate(state) {\n  const gasFeeEstimates = getGasFeeEstimates(state);\n  const gasEstimateType = getGasEstimateType(state);\n\n  return gasEstimateType === GAS_FEE_CONTROLLER_ESTIMATE_TYPES.LEGACY\n    ? gasFeeEstimates?.medium\n    : null;\n}\n\nexport function getFastPriceEstimate(state) {\n  const gasFeeEstimates = getGasFeeEstimates(state);\n\n  const gasEstimateType = getGasEstimateType(state);\n\n  return gasEstimateType === GAS_FEE_CONTROLLER_ESTIMATE_TYPES.LEGACY\n    ? gasFeeEstimates?.high\n    : null;\n}\n\nexport function isCustomPriceSafe(state) {\n  const safeLow = getSafeLowEstimate(state);\n\n  const customGasPrice = getCustomGasPrice(state);\n\n  if (!customGasPrice) {\n    return true;\n  }\n\n  if (!safeLow) {\n    return false;\n  }\n\n  const customPriceSafe = conversionGreaterThan(\n    {\n      value: customGasPrice,\n      fromNumericBase: 'hex',\n      fromDenomination: 'WEI',\n      toDenomination: 'GWEI',\n    },\n    { value: safeLow, fromNumericBase: 'dec' },\n  );\n\n  return customPriceSafe;\n}\n\nexport function isCustomPriceSafeForCustomNetwork(state) {\n  const estimatedPrice = getAverageEstimate(state);\n\n  const customGasPrice = getCustomGasPrice(state);\n\n  if (!customGasPrice) {\n    return true;\n  }\n\n  if (!estimatedPrice) {\n    return false;\n  }\n\n  const customPriceSafe = conversionGreaterThan(\n    {\n      value: customGasPrice,\n      fromNumericBase: 'hex',\n      fromDenomination: 'WEI',\n      toDenomination: 'GWEI',\n    },\n    { value: estimatedPrice, fromNumericBase: 'dec' },\n  );\n\n  return customPriceSafe;\n}\n\nexport function isCustomPriceExcessive(state, checkSend = false) {\n  const customPrice = checkSend ? getGasPrice(state) : getCustomGasPrice(state);\n  const fastPrice = getFastPriceEstimate(state);\n\n  if (!customPrice || !fastPrice) {\n    return false;\n  }\n\n  // Custom gas should be considered excessive when it is 1.5 times greater than the fastest estimate.\n  const customPriceExcessive = conversionGreaterThan(\n    {\n      value: customPrice,\n      fromNumericBase: 'hex',\n      fromDenomination: 'WEI',\n      toDenomination: 'GWEI',\n    },\n    {\n      fromNumericBase: 'dec',\n      value: Math.floor(fastPrice * 1.5),\n    },\n  );\n\n  return customPriceExcessive;\n}\n\nexport function basicPriceEstimateToETHTotal(\n  estimate,\n  gasLimit,\n  numberOfDecimals = 9,\n) {\n  return conversionUtil(calcGasTotal(gasLimit, estimate), {\n    fromNumericBase: 'hex',\n    toNumericBase: 'dec',\n    fromDenomination: 'GWEI',\n    numberOfDecimals,\n  });\n}\n\nexport function getRenderableEthFee(\n  estimate,\n  gasLimit,\n  numberOfDecimals = 9,\n  nativeCurrency = 'ETH',\n) {\n  const value = conversionUtil(estimate, {\n    fromNumericBase: 'dec',\n    toNumericBase: 'hex',\n  });\n  const fee = basicPriceEstimateToETHTotal(value, gasLimit, numberOfDecimals);\n  return formatETHFee(fee, nativeCurrency);\n}\n\nexport function getRenderableConvertedCurrencyFee(\n  estimate,\n  gasLimit,\n  convertedCurrency,\n  conversionRate,\n) {\n  const value = conversionUtil(estimate, {\n    fromNumericBase: 'dec',\n    toNumericBase: 'hex',\n  });\n  const fee = basicPriceEstimateToETHTotal(value, gasLimit);\n  const feeInCurrency = ethTotalToConvertedCurrency(\n    fee,\n    convertedCurrency,\n    conversionRate,\n  );\n  return formatCurrency(feeInCurrency, convertedCurrency);\n}\n\nexport function priceEstimateToWei(priceEstimate) {\n  return conversionUtil(priceEstimate, {\n    fromNumericBase: 'hex',\n    toNumericBase: 'hex',\n    fromDenomination: 'GWEI',\n    toDenomination: 'WEI',\n    numberOfDecimals: 9,\n  });\n}\n\nexport function getGasPriceInHexWei(price) {\n  const value = conversionUtil(price, {\n    fromNumericBase: 'dec',\n    toNumericBase: 'hex',\n  });\n  return addHexPrefix(priceEstimateToWei(value));\n}\n\nexport function getRenderableGasButtonData(\n  estimates,\n  gasLimit,\n  showFiat,\n  conversionRate,\n  currentCurrency,\n  nativeCurrency,\n) {\n  const { low, medium, high } = estimates;\n\n  const slowEstimateData = {\n    gasEstimateType: GAS_ESTIMATE_TYPES.SLOW,\n    feeInPrimaryCurrency: getRenderableEthFee(low, gasLimit, 9, nativeCurrency),\n    feeInSecondaryCurrency: showFiat\n      ? getRenderableConvertedCurrencyFee(\n          low,\n          gasLimit,\n          currentCurrency,\n          conversionRate,\n        )\n      : '',\n    priceInHexWei: getGasPriceInHexWei(low),\n  };\n  const averageEstimateData = {\n    gasEstimateType: GAS_ESTIMATE_TYPES.AVERAGE,\n    feeInPrimaryCurrency: getRenderableEthFee(\n      medium,\n      gasLimit,\n      9,\n      nativeCurrency,\n    ),\n    feeInSecondaryCurrency: showFiat\n      ? getRenderableConvertedCurrencyFee(\n          medium,\n          gasLimit,\n          currentCurrency,\n          conversionRate,\n        )\n      : '',\n    priceInHexWei: getGasPriceInHexWei(medium),\n  };\n  const fastEstimateData = {\n    gasEstimateType: GAS_ESTIMATE_TYPES.FAST,\n    feeInPrimaryCurrency: getRenderableEthFee(\n      high,\n      gasLimit,\n      9,\n      nativeCurrency,\n    ),\n    feeInSecondaryCurrency: showFiat\n      ? getRenderableConvertedCurrencyFee(\n          high,\n          gasLimit,\n          currentCurrency,\n          conversionRate,\n        )\n      : '',\n    priceInHexWei: getGasPriceInHexWei(high),\n  };\n\n  return {\n    slowEstimateData,\n    averageEstimateData,\n    fastEstimateData,\n  };\n}\n\nexport function getRenderableBasicEstimateData(state, gasLimit) {\n  if (getBasicGasEstimateLoadingStatus(state)) {\n    return [];\n  }\n\n  const showFiat = getShouldShowFiat(state);\n  const { conversionRate } = state.metamask;\n  const currentCurrency = getCurrentCurrency(state);\n\n  const {\n    slowEstimateData,\n    averageEstimateData,\n    fastEstimateData,\n  } = getRenderableGasButtonData(\n    getGasFeeEstimates(state),\n    gasLimit,\n    showFiat,\n    conversionRate,\n    currentCurrency,\n  );\n\n  return [slowEstimateData, averageEstimateData, fastEstimateData];\n}\n\nexport function getRenderableEstimateDataForSmallButtonsFromGWEI(state) {\n  if (getIsGasEstimatesFetched(state) === false) {\n    return [];\n  }\n  const showFiat = getShouldShowFiat(state);\n  const gasLimit =\n    state.send.gas.gasLimit || getCustomGasLimit(state) || GAS_LIMITS.SIMPLE;\n  const { conversionRate } = state.metamask;\n  const currentCurrency = getCurrentCurrency(state);\n  const gasFeeEstimates = getGasFeeEstimates(state);\n\n  return [\n    {\n      gasEstimateType: GAS_ESTIMATE_TYPES.SLOW,\n      feeInSecondaryCurrency: showFiat\n        ? getRenderableConvertedCurrencyFee(\n            gasFeeEstimates.low,\n            gasLimit,\n            currentCurrency,\n            conversionRate,\n          )\n        : '',\n      feeInPrimaryCurrency: getRenderableEthFee(\n        gasFeeEstimates.low,\n        gasLimit,\n        NUMBER_OF_DECIMALS_SM_BTNS,\n      ),\n      priceInHexWei: getGasPriceInHexWei(gasFeeEstimates.low, true),\n    },\n    {\n      gasEstimateType: GAS_ESTIMATE_TYPES.AVERAGE,\n      feeInSecondaryCurrency: showFiat\n        ? getRenderableConvertedCurrencyFee(\n            gasFeeEstimates.medium,\n            gasLimit,\n            currentCurrency,\n            conversionRate,\n          )\n        : '',\n      feeInPrimaryCurrency: getRenderableEthFee(\n        gasFeeEstimates.medium,\n        gasLimit,\n        NUMBER_OF_DECIMALS_SM_BTNS,\n      ),\n      priceInHexWei: getGasPriceInHexWei(gasFeeEstimates.medium, true),\n    },\n    {\n      gasEstimateType: GAS_ESTIMATE_TYPES.FAST,\n      feeInSecondaryCurrency: showFiat\n        ? getRenderableConvertedCurrencyFee(\n            gasFeeEstimates.high,\n            gasLimit,\n            currentCurrency,\n            conversionRate,\n          )\n        : '',\n      feeInPrimaryCurrency: getRenderableEthFee(\n        gasFeeEstimates.high,\n        gasLimit,\n        NUMBER_OF_DECIMALS_SM_BTNS,\n      ),\n      priceInHexWei: getGasPriceInHexWei(gasFeeEstimates.high, true),\n    },\n  ];\n}\n\nexport function getIsEthGasPriceFetched(state) {\n  const gasEstimateType = getGasEstimateType(state);\n  return (\n    gasEstimateType === GAS_FEE_CONTROLLER_ESTIMATE_TYPES.ETH_GASPRICE &&\n    getIsMainnet(state)\n  );\n}\n\nexport function getIsCustomNetworkGasPriceFetched(state) {\n  const gasEstimateType = getGasEstimateType(state);\n  return (\n    gasEstimateType === GAS_FEE_CONTROLLER_ESTIMATE_TYPES.ETH_GASPRICE &&\n    !getIsMainnet(state)\n  );\n}\n\nexport function getNoGasPriceFetched(state) {\n  const gasEstimateType = getGasEstimateType(state);\n  return gasEstimateType === GAS_FEE_CONTROLLER_ESTIMATE_TYPES.NONE;\n}\n\nexport function getIsGasEstimatesFetched(state) {\n  const gasEstimateType = getGasEstimateType(state);\n  if (isEIP1559Network(state)) {\n    return false;\n  }\n  return gasEstimateType !== GAS_FEE_CONTROLLER_ESTIMATE_TYPES.NONE;\n}\n","import { createSelector } from 'reselect';\n\nexport const selectFragments = (state) => state.metamask.fragments;\n\nexport const selectFragmentBySuccessEvent = createSelector(\n  selectFragments,\n  (_, fragmentOptions) => fragmentOptions,\n  (fragments, fragmentOptions) => {\n    if (fragmentOptions.persist) {\n      return Object.values(fragments).find(\n        (fragment) => fragment.successEvent === fragmentOptions.successEvent,\n      );\n    }\n    return undefined;\n  },\n);\n\nexport const selectFragmentById = createSelector(\n  selectFragments,\n  (_, fragmentId) => fragmentId,\n  (fragments, fragmentId) => {\n    // A valid existing fragment must exist in state.\n    // If these conditions are not meant we will create a new fragment.\n    if (fragmentId && fragments?.[fragmentId]) {\n      return fragments[fragmentId];\n    }\n    return undefined;\n  },\n);\n\nexport const selectMatchingFragment = createSelector(\n  (state, params) =>\n    selectFragmentBySuccessEvent(state, params.fragmentOptions),\n  (state, params) => selectFragmentById(state, params.existingId),\n  (matchedBySuccessEvent, matchedById) => matchedById ?? matchedBySuccessEvent,\n);\n","import { createSelector } from 'reselect';\nimport {\n  PRIORITY_STATUS_HASH,\n  PENDING_STATUS_HASH,\n} from '../helpers/constants/transactions';\nimport { hexToDecimal } from '../helpers/utils/conversions.util';\nimport txHelper from '../helpers/utils/tx-helper';\nimport {\n  TRANSACTION_STATUSES,\n  TRANSACTION_TYPES,\n  SMART_TRANSACTION_STATUSES,\n} from '../../shared/constants/transaction';\nimport { transactionMatchesNetwork } from '../../shared/modules/transaction.utils';\nimport {\n  getCurrentChainId,\n  deprecatedGetCurrentNetworkId,\n  getSelectedAddress,\n} from './selectors';\n\nexport const incomingTxListSelector = (state) => {\n  const { showIncomingTransactions } = state.metamask.featureFlags;\n  if (!showIncomingTransactions) {\n    return [];\n  }\n\n  const {\n    network,\n    provider: { chainId },\n  } = state.metamask;\n  const selectedAddress = getSelectedAddress(state);\n  return Object.values(state.metamask.incomingTransactions).filter(\n    (tx) =>\n      tx.txParams.to === selectedAddress &&\n      transactionMatchesNetwork(tx, chainId, network),\n  );\n};\nexport const unapprovedMsgsSelector = (state) => state.metamask.unapprovedMsgs;\nexport const currentNetworkTxListSelector = (state) =>\n  state.metamask.currentNetworkTxList;\nexport const unapprovedPersonalMsgsSelector = (state) =>\n  state.metamask.unapprovedPersonalMsgs;\nexport const unapprovedDecryptMsgsSelector = (state) =>\n  state.metamask.unapprovedDecryptMsgs;\nexport const unapprovedEncryptionPublicKeyMsgsSelector = (state) =>\n  state.metamask.unapprovedEncryptionPublicKeyMsgs;\nexport const unapprovedTypedMessagesSelector = (state) =>\n  state.metamask.unapprovedTypedMessages;\n\nexport const smartTransactionsListSelector = (state) =>\n  state.metamask.smartTransactionsState?.smartTransactions?.[\n    getCurrentChainId(state)\n  ]\n    ?.filter((stx) => !stx.confirmed)\n    .map((stx) => ({\n      ...stx,\n      transactionType: TRANSACTION_TYPES.SMART,\n      status: stx.status?.startsWith('cancelled')\n        ? SMART_TRANSACTION_STATUSES.CANCELLED\n        : stx.status,\n    }));\n\nexport const selectedAddressTxListSelector = createSelector(\n  getSelectedAddress,\n  currentNetworkTxListSelector,\n  smartTransactionsListSelector,\n  (selectedAddress, transactions = [], smTransactions = []) => {\n    return transactions\n      .filter(({ txParams }) => txParams.from === selectedAddress)\n      .concat(smTransactions);\n  },\n);\n\nexport const unapprovedMessagesSelector = createSelector(\n  unapprovedMsgsSelector,\n  unapprovedPersonalMsgsSelector,\n  unapprovedDecryptMsgsSelector,\n  unapprovedEncryptionPublicKeyMsgsSelector,\n  unapprovedTypedMessagesSelector,\n  deprecatedGetCurrentNetworkId,\n  getCurrentChainId,\n  (\n    unapprovedMsgs = {},\n    unapprovedPersonalMsgs = {},\n    unapprovedDecryptMsgs = {},\n    unapprovedEncryptionPublicKeyMsgs = {},\n    unapprovedTypedMessages = {},\n    network,\n    chainId,\n  ) =>\n    txHelper(\n      {},\n      unapprovedMsgs,\n      unapprovedPersonalMsgs,\n      unapprovedDecryptMsgs,\n      unapprovedEncryptionPublicKeyMsgs,\n      unapprovedTypedMessages,\n      network,\n      chainId,\n    ) || [],\n);\n\nexport const transactionSubSelector = createSelector(\n  unapprovedMessagesSelector,\n  incomingTxListSelector,\n  (unapprovedMessages = [], incomingTxList = []) => {\n    return unapprovedMessages.concat(incomingTxList);\n  },\n);\n\nexport const transactionsSelector = createSelector(\n  transactionSubSelector,\n  selectedAddressTxListSelector,\n  (subSelectorTxList = [], selectedAddressTxList = []) => {\n    const txsToRender = selectedAddressTxList.concat(subSelectorTxList);\n\n    return txsToRender.sort((a, b) => b.time - a.time);\n  },\n);\n\n/**\n * @name insertOrderedNonce\n * @private\n * @description Inserts (mutates) a nonce into an array of ordered nonces, sorted in ascending\n * order.\n * @param {string[]} nonces - Array of nonce strings in hex\n * @param {string} nonceToInsert - Nonce string in hex to be inserted into the array of nonces.\n */\nconst insertOrderedNonce = (nonces, nonceToInsert) => {\n  let insertIndex = nonces.length;\n\n  for (let i = 0; i < nonces.length; i++) {\n    const nonce = nonces[i];\n\n    if (Number(hexToDecimal(nonce)) > Number(hexToDecimal(nonceToInsert))) {\n      insertIndex = i;\n      break;\n    }\n  }\n\n  nonces.splice(insertIndex, 0, nonceToInsert);\n};\n\n/**\n * @name insertTransactionByTime\n * @private\n * @description Inserts (mutates) a transaction object into an array of ordered transactions, sorted\n * in ascending order by time.\n * @param {Object[]} transactions - Array of transaction objects.\n * @param {Object} transaction - Transaction object to be inserted into the array of transactions.\n */\nconst insertTransactionByTime = (transactions, transaction) => {\n  const { time } = transaction;\n\n  let insertIndex = transactions.length;\n\n  for (let i = 0; i < transactions.length; i++) {\n    const tx = transactions[i];\n\n    if (tx.time > time) {\n      insertIndex = i;\n      break;\n    }\n  }\n\n  transactions.splice(insertIndex, 0, transaction);\n};\n\n/**\n * Contains transactions and properties associated with those transactions of the same nonce.\n *\n * @typedef {Object} transactionGroup\n * @property {string} nonce - The nonce that the transactions within this transactionGroup share.\n * @property {Object[]} transactions - An array of transaction (txMeta) objects.\n * @property {Object} initialTransaction - The transaction (txMeta) with the lowest \"time\".\n * @property {Object} primaryTransaction - Either the latest transaction or the confirmed\n * transaction.\n * @property {boolean} hasRetried - True if a transaction in the group was a retry transaction.\n * @property {boolean} hasCancelled - True if a transaction in the group was a cancel transaction.\n */\n\n/**\n * @name insertTransactionGroupByTime\n * @private\n * @description Inserts (mutates) a transactionGroup object into an array of ordered\n * transactionGroups, sorted in ascending order by nonce.\n * @param {transactionGroup[]} transactionGroups - Array of transactionGroup objects.\n * @param {transactionGroup} transactionGroup - transactionGroup object to be inserted into the\n * array of transactionGroups.\n */\nconst insertTransactionGroupByTime = (transactionGroups, transactionGroup) => {\n  const {\n    primaryTransaction: { time: groupToInsertTime } = {},\n  } = transactionGroup;\n\n  let insertIndex = transactionGroups.length;\n\n  for (let i = 0; i < transactionGroups.length; i++) {\n    const txGroup = transactionGroups[i];\n    const { primaryTransaction: { time } = {} } = txGroup;\n\n    if (time > groupToInsertTime) {\n      insertIndex = i;\n      break;\n    }\n  }\n\n  transactionGroups.splice(insertIndex, 0, transactionGroup);\n};\n\n/**\n * @name mergeNonNonceTransactionGroups\n * @private\n * @description Inserts (mutates) transactionGroups that are not to be ordered by nonce into an array\n * of nonce-ordered transactionGroups by time.\n * @param {transactionGroup[]} orderedTransactionGroups - Array of transactionGroups ordered by\n * nonce.\n * @param {transactionGroup[]} nonNonceTransactionGroups - Array of transactionGroups not intended to be ordered by nonce,\n * but intended to be ordered by timestamp\n */\nconst mergeNonNonceTransactionGroups = (\n  orderedTransactionGroups,\n  nonNonceTransactionGroups,\n) => {\n  nonNonceTransactionGroups.forEach((transactionGroup) => {\n    insertTransactionGroupByTime(orderedTransactionGroups, transactionGroup);\n  });\n};\n\n/**\n * @name nonceSortedTransactionsSelector\n * @description Returns an array of transactionGroups sorted by nonce in ascending order.\n * @returns {transactionGroup[]}\n */\nexport const nonceSortedTransactionsSelector = createSelector(\n  transactionsSelector,\n  (transactions = []) => {\n    const unapprovedTransactionGroups = [];\n    const incomingTransactionGroups = [];\n    const orderedNonces = [];\n    const nonceToTransactionsMap = {};\n\n    transactions.forEach((transaction) => {\n      const {\n        txParams: { nonce } = {},\n        status,\n        type,\n        time: txTime,\n      } = transaction;\n\n      if (typeof nonce === 'undefined' || type === TRANSACTION_TYPES.INCOMING) {\n        const transactionGroup = {\n          transactions: [transaction],\n          initialTransaction: transaction,\n          primaryTransaction: transaction,\n          hasRetried: false,\n          hasCancelled: false,\n        };\n\n        if (type === TRANSACTION_TYPES.INCOMING) {\n          incomingTransactionGroups.push(transactionGroup);\n        } else {\n          insertTransactionGroupByTime(\n            unapprovedTransactionGroups,\n            transactionGroup,\n          );\n        }\n      } else if (nonce in nonceToTransactionsMap) {\n        const nonceProps = nonceToTransactionsMap[nonce];\n        insertTransactionByTime(nonceProps.transactions, transaction);\n\n        const {\n          primaryTransaction: { time: primaryTxTime = 0 } = {},\n        } = nonceProps;\n\n        const previousPrimaryIsNetworkFailure =\n          nonceProps.primaryTransaction.status ===\n            TRANSACTION_STATUSES.FAILED &&\n          nonceProps.primaryTransaction?.txReceipt?.status !== '0x0';\n        const currentTransactionIsOnChainFailure =\n          transaction?.txReceipt?.status === '0x0';\n\n        if (\n          status === TRANSACTION_STATUSES.CONFIRMED ||\n          currentTransactionIsOnChainFailure ||\n          previousPrimaryIsNetworkFailure ||\n          (txTime > primaryTxTime && status in PRIORITY_STATUS_HASH)\n        ) {\n          nonceProps.primaryTransaction = transaction;\n        }\n\n        const {\n          initialTransaction: { time: initialTxTime = 0 } = {},\n        } = nonceProps;\n\n        // Used to display the transaction action, since we don't want to overwrite the action if\n        // it was replaced with a cancel attempt transaction.\n        if (txTime < initialTxTime) {\n          nonceProps.initialTransaction = transaction;\n        }\n\n        if (\n          type === TRANSACTION_TYPES.RETRY &&\n          status in PRIORITY_STATUS_HASH\n        ) {\n          nonceProps.hasRetried = true;\n        }\n\n        if (\n          type === TRANSACTION_TYPES.CANCEL &&\n          status in PRIORITY_STATUS_HASH\n        ) {\n          nonceProps.hasCancelled = true;\n        }\n      } else {\n        nonceToTransactionsMap[nonce] = {\n          nonce,\n          transactions: [transaction],\n          initialTransaction: transaction,\n          primaryTransaction: transaction,\n          hasRetried:\n            transaction.type === TRANSACTION_TYPES.RETRY &&\n            transaction.status in PRIORITY_STATUS_HASH,\n          hasCancelled:\n            transaction.type === TRANSACTION_TYPES.CANCEL &&\n            transaction.status in PRIORITY_STATUS_HASH,\n        };\n\n        insertOrderedNonce(orderedNonces, nonce);\n      }\n    });\n\n    const orderedTransactionGroups = orderedNonces.map(\n      (nonce) => nonceToTransactionsMap[nonce],\n    );\n    mergeNonNonceTransactionGroups(\n      orderedTransactionGroups,\n      incomingTransactionGroups,\n    );\n    return unapprovedTransactionGroups.concat(orderedTransactionGroups);\n  },\n);\n\n/**\n * @name nonceSortedPendingTransactionsSelector\n * @description Returns an array of transactionGroups where transactions are still pending sorted by\n * nonce in descending order.\n * @returns {transactionGroup[]}\n */\nexport const nonceSortedPendingTransactionsSelector = createSelector(\n  nonceSortedTransactionsSelector,\n  (transactions = []) =>\n    transactions.filter(\n      ({ primaryTransaction }) =>\n        primaryTransaction.status in PENDING_STATUS_HASH,\n    ),\n);\n\n/**\n * @name nonceSortedCompletedTransactionsSelector\n * @description Returns an array of transactionGroups where transactions are confirmed sorted by\n * nonce in descending order.\n * @returns {transactionGroup[]}\n */\nexport const nonceSortedCompletedTransactionsSelector = createSelector(\n  nonceSortedTransactionsSelector,\n  (transactions = []) =>\n    transactions\n      .filter(\n        ({ primaryTransaction }) =>\n          !(primaryTransaction.status in PENDING_STATUS_HASH),\n      )\n      .reverse(),\n);\n\nexport const submittedPendingTransactionsSelector = createSelector(\n  transactionsSelector,\n  (transactions = []) =>\n    transactions.filter(\n      (transaction) => transaction.status === TRANSACTION_STATUSES.SUBMITTED,\n    ),\n);\n","import { CaveatTypes } from '../../shared/constants/permissions';\nimport {\n  getMetaMaskAccountsOrdered,\n  getOriginOfCurrentTab,\n  getSelectedAddress,\n  getSubjectMetadata,\n  getTargetSubjectMetadata,\n} from '.';\n\n// selectors\n\n/**\n * Get the permission subjects object.\n *\n * @param {Object} state - The current state.\n * @returns {Object} The permissions subjects object.\n */\nexport function getPermissionSubjects(state) {\n  return state.metamask.subjects || {};\n}\n\n/**\n * Selects the permitted accounts from the eth_accounts permission given state\n * and an origin.\n *\n * @param {Object} state - The current state.\n * @param {string} origin - The origin/subject to get the permitted accounts for.\n * @returns {Array<string>} An empty array or an array of accounts.\n */\nexport function getPermittedAccounts(state, origin) {\n  return getAccountsFromPermission(\n    getAccountsPermissionFromSubject(subjectSelector(state, origin)),\n  );\n}\n\n/**\n * Selects the permitted accounts from the eth_accounts permission for the\n * origin of the current tab.\n *\n * @param {Object} state - The current state.\n * @returns {Array<string>} An empty array or an array of accounts.\n */\nexport function getPermittedAccountsForCurrentTab(state) {\n  return getPermittedAccounts(state, getOriginOfCurrentTab(state));\n}\n\n/**\n * Returns a map of permitted accounts by origin for all origins.\n *\n * @param {Object} state - The current state.\n * @returns {Object} Permitted accounts by origin.\n */\nexport function getPermittedAccountsByOrigin(state) {\n  const subjects = getPermissionSubjects(state);\n  return Object.keys(subjects).reduce((acc, subjectKey) => {\n    const accounts = getAccountsFromSubject(subjects[subjectKey]);\n    if (accounts.length > 0) {\n      acc[subjectKey] = accounts;\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Returns an array of connected subject objects, with the following properties:\n * - extensionId\n * - key (i.e. origin)\n * - name\n * - icon\n *\n * @param {Object} state - The current state.\n * @returns {Array<Object>} An array of connected subject objects.\n */\nexport function getConnectedSubjectsForSelectedAddress(state) {\n  const { selectedAddress } = state.metamask;\n  const subjects = getPermissionSubjects(state);\n  const subjectMetadata = getSubjectMetadata(state);\n\n  const connectedSubjects = [];\n\n  Object.entries(subjects).forEach(([subjectKey, subjectValue]) => {\n    const exposedAccounts = getAccountsFromSubject(subjectValue);\n    if (!exposedAccounts.includes(selectedAddress)) {\n      return;\n    }\n\n    const { extensionId, name, iconUrl } = subjectMetadata[subjectKey] || {};\n\n    connectedSubjects.push({\n      extensionId,\n      origin: subjectKey,\n      name,\n      iconUrl,\n    });\n  });\n\n  return connectedSubjects;\n}\n\nexport function getSubjectsWithPermission(state, permissionName) {\n  const subjects = getPermissionSubjects(state);\n\n  const connectedSubjects = [];\n\n  Object.entries(subjects).forEach(([origin, { permissions }]) => {\n    if (permissions[permissionName]) {\n      const { extensionId, name, iconUrl } =\n        getTargetSubjectMetadata(state, origin) || {};\n\n      connectedSubjects.push({\n        extensionId,\n        origin,\n        name,\n        iconUrl,\n      });\n    }\n  });\n  return connectedSubjects;\n}\n\n/**\n * Returns an object mapping addresses to objects mapping origins to connected\n * subject info. Subject info objects have the following properties:\n * - iconUrl\n * - name\n *\n * @param {Object} state - The current state.\n * @returns {Object} A mapping of addresses to a mapping of origins to\n * connected subject info.\n */\nexport function getAddressConnectedSubjectMap(state) {\n  const subjectMetadata = getSubjectMetadata(state);\n  const accountsMap = getPermittedAccountsByOrigin(state);\n  const addressConnectedIconMap = {};\n\n  Object.keys(accountsMap).forEach((subjectKey) => {\n    const { iconUrl, name } = subjectMetadata[subjectKey] || {};\n\n    accountsMap[subjectKey].forEach((address) => {\n      const nameToRender = name || subjectKey;\n\n      addressConnectedIconMap[address] = addressConnectedIconMap[address]\n        ? {\n            ...addressConnectedIconMap[address],\n            [subjectKey]: { iconUrl, name: nameToRender },\n          }\n        : { [subjectKey]: { iconUrl, name: nameToRender } };\n    });\n  });\n\n  return addressConnectedIconMap;\n}\n\n// selector helpers\n\nfunction getAccountsFromSubject(subject) {\n  return getAccountsFromPermission(getAccountsPermissionFromSubject(subject));\n}\n\nfunction getAccountsPermissionFromSubject(subject = {}) {\n  return subject.permissions?.eth_accounts || {};\n}\n\nfunction getAccountsFromPermission(accountsPermission) {\n  const accountsCaveat = getAccountsCaveatFromPermission(accountsPermission);\n  return accountsCaveat && Array.isArray(accountsCaveat.value)\n    ? accountsCaveat.value\n    : [];\n}\n\nfunction getAccountsCaveatFromPermission(accountsPermission = {}) {\n  return (\n    Array.isArray(accountsPermission.caveats) &&\n    accountsPermission.caveats.find(\n      (caveat) => caveat.type === CaveatTypes.restrictReturnedAccounts,\n    )\n  );\n}\n\nfunction subjectSelector(state, origin) {\n  return origin && state.metamask.subjects?.[origin];\n}\n\nexport function getAccountToConnectToActiveTab(state) {\n  const selectedAddress = getSelectedAddress(state);\n  const connectedAccounts = getPermittedAccountsForCurrentTab(state);\n\n  const {\n    metamask: { identities },\n  } = state;\n  const numberOfAccounts = Object.keys(identities).length;\n\n  if (\n    connectedAccounts.length &&\n    connectedAccounts.length !== numberOfAccounts\n  ) {\n    if (\n      connectedAccounts.findIndex((address) => address === selectedAddress) ===\n      -1\n    ) {\n      return identities[selectedAddress];\n    }\n  }\n\n  return undefined;\n}\n\nexport function getOrderedConnectedAccountsForActiveTab(state) {\n  const {\n    activeTab,\n    metamask: { permissionHistory },\n  } = state;\n\n  const permissionHistoryByAccount =\n    // eslint-disable-next-line camelcase\n    permissionHistory[activeTab.origin]?.eth_accounts?.accounts;\n  const orderedAccounts = getMetaMaskAccountsOrdered(state);\n  const connectedAccounts = getPermittedAccountsForCurrentTab(state);\n\n  return orderedAccounts\n    .filter((account) => connectedAccounts.includes(account.address))\n    .map((account) => ({\n      ...account,\n      lastActive: permissionHistoryByAccount?.[account.address],\n    }))\n    .sort(\n      ({ lastSelected: lastSelectedA }, { lastSelected: lastSelectedB }) => {\n        if (lastSelectedA === lastSelectedB) {\n          return 0;\n        } else if (lastSelectedA === undefined) {\n          return 1;\n        } else if (lastSelectedB === undefined) {\n          return -1;\n        }\n\n        return lastSelectedB - lastSelectedA;\n      },\n    );\n}\n\nexport function getPermissionsForActiveTab(state) {\n  const { activeTab, metamask } = state;\n  const { subjects = {} } = metamask;\n\n  return Object.keys(subjects[activeTab.origin]?.permissions || {}).map(\n    (parentCapability) => {\n      return {\n        key: parentCapability,\n      };\n    },\n  );\n}\n\nexport function activeTabHasPermissions(state) {\n  const { activeTab, metamask } = state;\n  const { subjects = {} } = metamask;\n\n  return Boolean(\n    Object.keys(subjects[activeTab.origin]?.permissions || {}).length > 0,\n  );\n}\n\n/**\n * Get the connected accounts history for all origins.\n *\n * @param {Record<string, unknown>} state - The MetaMask state.\n * @returns {Record<string, { accounts: Record<string, number> }>} An object\n * with account connection histories by origin.\n */\nexport function getLastConnectedInfo(state) {\n  const { permissionHistory = {} } = state.metamask;\n  return Object.keys(permissionHistory).reduce((lastConnectedInfo, origin) => {\n    if (permissionHistory[origin].eth_accounts) {\n      lastConnectedInfo[origin] = JSON.parse(\n        JSON.stringify(permissionHistory[origin].eth_accounts),\n      );\n    }\n\n    return lastConnectedInfo;\n  }, {});\n}\n\nexport function getPermissionsRequests(state) {\n  return Object.values(state.metamask.pendingApprovals)\n    .filter(({ type }) => type === 'wallet_requestPermissions')\n    .map(({ requestData }) => requestData);\n}\n\nexport function getFirstPermissionRequest(state) {\n  const requests = getPermissionsRequests(state);\n  return requests && requests[0] ? requests[0] : null;\n}\n","import { createSelector } from 'reselect';\nimport txHelper from '../helpers/utils/tx-helper';\nimport { calcTokenAmount } from '../helpers/utils/token-util';\nimport {\n  roundExponential,\n  getValueFromWeiHex,\n  getTransactionFee,\n  addFiat,\n  addEth,\n} from '../helpers/utils/confirm-tx.util';\nimport { sumHexes } from '../helpers/utils/transactions.util';\nimport { transactionMatchesNetwork } from '../../shared/modules/transaction.utils';\nimport {\n  getGasEstimateType,\n  getGasFeeEstimates,\n  getNativeCurrency,\n} from '../ducks/metamask/metamask';\nimport { TRANSACTION_ENVELOPE_TYPES } from '../../shared/constants/transaction';\nimport { decGWEIToHexWEI } from '../helpers/utils/conversions.util';\nimport {\n  GAS_ESTIMATE_TYPES,\n  CUSTOM_GAS_ESTIMATE,\n} from '../../shared/constants/gas';\nimport {\n  getMaximumGasTotalInHexWei,\n  getMinimumGasTotalInHexWei,\n} from '../../shared/modules/gas.utils';\nimport { isEqualCaseInsensitive } from '../helpers/utils/util';\nimport { getAveragePriceEstimateInHexWEI } from './custom-gas';\nimport { getCurrentChainId, deprecatedGetCurrentNetworkId } from './selectors';\nimport { checkNetworkAndAccountSupports1559 } from '.';\n\nconst unapprovedTxsSelector = (state) => state.metamask.unapprovedTxs;\nconst unapprovedMsgsSelector = (state) => state.metamask.unapprovedMsgs;\nconst unapprovedPersonalMsgsSelector = (state) =>\n  state.metamask.unapprovedPersonalMsgs;\nconst unapprovedDecryptMsgsSelector = (state) =>\n  state.metamask.unapprovedDecryptMsgs;\nconst unapprovedEncryptionPublicKeyMsgsSelector = (state) =>\n  state.metamask.unapprovedEncryptionPublicKeyMsgs;\nconst unapprovedTypedMessagesSelector = (state) =>\n  state.metamask.unapprovedTypedMessages;\n\nexport const unconfirmedTransactionsListSelector = createSelector(\n  unapprovedTxsSelector,\n  unapprovedMsgsSelector,\n  unapprovedPersonalMsgsSelector,\n  unapprovedDecryptMsgsSelector,\n  unapprovedEncryptionPublicKeyMsgsSelector,\n  unapprovedTypedMessagesSelector,\n  deprecatedGetCurrentNetworkId,\n  getCurrentChainId,\n  (\n    unapprovedTxs = {},\n    unapprovedMsgs = {},\n    unapprovedPersonalMsgs = {},\n    unapprovedDecryptMsgs = {},\n    unapprovedEncryptionPublicKeyMsgs = {},\n    unapprovedTypedMessages = {},\n    network,\n    chainId,\n  ) =>\n    txHelper(\n      unapprovedTxs,\n      unapprovedMsgs,\n      unapprovedPersonalMsgs,\n      unapprovedDecryptMsgs,\n      unapprovedEncryptionPublicKeyMsgs,\n      unapprovedTypedMessages,\n      network,\n      chainId,\n    ) || [],\n);\n\nexport const unconfirmedTransactionsHashSelector = createSelector(\n  unapprovedTxsSelector,\n  unapprovedMsgsSelector,\n  unapprovedPersonalMsgsSelector,\n  unapprovedDecryptMsgsSelector,\n  unapprovedEncryptionPublicKeyMsgsSelector,\n  unapprovedTypedMessagesSelector,\n  deprecatedGetCurrentNetworkId,\n  getCurrentChainId,\n  (\n    unapprovedTxs = {},\n    unapprovedMsgs = {},\n    unapprovedPersonalMsgs = {},\n    unapprovedDecryptMsgs = {},\n    unapprovedEncryptionPublicKeyMsgs = {},\n    unapprovedTypedMessages = {},\n    network,\n    chainId,\n  ) => {\n    const filteredUnapprovedTxs = Object.keys(unapprovedTxs).reduce(\n      (acc, address) => {\n        const transactions = { ...acc };\n\n        if (\n          transactionMatchesNetwork(unapprovedTxs[address], chainId, network)\n        ) {\n          transactions[address] = unapprovedTxs[address];\n        }\n\n        return transactions;\n      },\n      {},\n    );\n\n    return {\n      ...filteredUnapprovedTxs,\n      ...unapprovedMsgs,\n      ...unapprovedPersonalMsgs,\n      ...unapprovedDecryptMsgs,\n      ...unapprovedEncryptionPublicKeyMsgs,\n      ...unapprovedTypedMessages,\n    };\n  },\n);\n\nconst unapprovedMsgCountSelector = (state) => state.metamask.unapprovedMsgCount;\nconst unapprovedPersonalMsgCountSelector = (state) =>\n  state.metamask.unapprovedPersonalMsgCount;\nconst unapprovedDecryptMsgCountSelector = (state) =>\n  state.metamask.unapprovedDecryptMsgCount;\nconst unapprovedEncryptionPublicKeyMsgCountSelector = (state) =>\n  state.metamask.unapprovedEncryptionPublicKeyMsgCount;\nconst unapprovedTypedMessagesCountSelector = (state) =>\n  state.metamask.unapprovedTypedMessagesCount;\n\nexport const unconfirmedTransactionsCountSelector = createSelector(\n  unapprovedTxsSelector,\n  unapprovedMsgCountSelector,\n  unapprovedPersonalMsgCountSelector,\n  unapprovedDecryptMsgCountSelector,\n  unapprovedEncryptionPublicKeyMsgCountSelector,\n  unapprovedTypedMessagesCountSelector,\n  deprecatedGetCurrentNetworkId,\n  getCurrentChainId,\n  (\n    unapprovedTxs = {},\n    unapprovedMsgCount = 0,\n    unapprovedPersonalMsgCount = 0,\n    unapprovedDecryptMsgCount = 0,\n    unapprovedEncryptionPublicKeyMsgCount = 0,\n    unapprovedTypedMessagesCount = 0,\n    network,\n    chainId,\n  ) => {\n    const filteredUnapprovedTxIds = Object.keys(unapprovedTxs).filter((txId) =>\n      transactionMatchesNetwork(unapprovedTxs[txId], chainId, network),\n    );\n\n    return (\n      filteredUnapprovedTxIds.length +\n      unapprovedTypedMessagesCount +\n      unapprovedMsgCount +\n      unapprovedPersonalMsgCount +\n      unapprovedDecryptMsgCount +\n      unapprovedEncryptionPublicKeyMsgCount\n    );\n  },\n);\n\nexport const currentCurrencySelector = (state) =>\n  state.metamask.currentCurrency;\nexport const conversionRateSelector = (state) => state.metamask.conversionRate;\n\nexport const txDataSelector = (state) => state.confirmTransaction.txData;\nconst tokenDataSelector = (state) => state.confirmTransaction.tokenData;\nconst tokenPropsSelector = (state) => state.confirmTransaction.tokenProps;\n\nconst contractExchangeRatesSelector = (state) =>\n  state.metamask.contractExchangeRates;\n\nconst tokenDecimalsSelector = createSelector(\n  tokenPropsSelector,\n  (tokenProps) => tokenProps && tokenProps.decimals,\n);\n\nconst tokenDataArgsSelector = createSelector(\n  tokenDataSelector,\n  (tokenData) => (tokenData && tokenData.args) || [],\n);\n\nconst txParamsSelector = createSelector(\n  txDataSelector,\n  (txData) => (txData && txData.txParams) || {},\n);\n\nexport const tokenAddressSelector = createSelector(\n  txParamsSelector,\n  (txParams) => txParams && txParams.to,\n);\n\nconst TOKEN_PARAM_TO = '_to';\nconst TOKEN_PARAM_VALUE = '_value';\n\nexport const sendTokenTokenAmountAndToAddressSelector = createSelector(\n  tokenDataArgsSelector,\n  tokenDecimalsSelector,\n  (args, tokenDecimals) => {\n    let toAddress = '';\n    let tokenAmount = '0';\n\n    // Token params here are ethers BigNumbers, which have a different\n    // interface than bignumber.js\n    if (args && args.length) {\n      toAddress = args[TOKEN_PARAM_TO];\n      let value = args[TOKEN_PARAM_VALUE].toString();\n\n      if (tokenDecimals) {\n        // bignumber.js return value\n        value = calcTokenAmount(value, tokenDecimals).toFixed();\n      }\n\n      tokenAmount = roundExponential(value);\n    }\n\n    return {\n      toAddress,\n      tokenAmount,\n    };\n  },\n);\n\nexport const contractExchangeRateSelector = createSelector(\n  contractExchangeRatesSelector,\n  tokenAddressSelector,\n  (contractExchangeRates, tokenAddress) =>\n    contractExchangeRates[\n      Object.keys(contractExchangeRates).find((address) =>\n        isEqualCaseInsensitive(address, tokenAddress),\n      )\n    ],\n);\n\nexport const transactionFeeSelector = function (state, txData) {\n  const currentCurrency = currentCurrencySelector(state);\n  const conversionRate = conversionRateSelector(state);\n  const nativeCurrency = getNativeCurrency(state);\n  const gasFeeEstimates = getGasFeeEstimates(state) || {};\n  const gasEstimateType = getGasEstimateType(state);\n  const networkAndAccountSupportsEIP1559 = checkNetworkAndAccountSupports1559(\n    state,\n  );\n\n  const gasEstimationObject = {\n    gasLimit: txData.txParams?.gas ?? '0x0',\n  };\n\n  if (networkAndAccountSupportsEIP1559) {\n    const { gasPrice = '0' } = gasFeeEstimates;\n    const selectedGasEstimates = gasFeeEstimates[txData.userFeeLevel] || {};\n    if (txData.txParams?.type === TRANSACTION_ENVELOPE_TYPES.LEGACY) {\n      gasEstimationObject.gasPrice =\n        txData.txParams?.gasPrice ?? decGWEIToHexWEI(gasPrice);\n    } else {\n      const {\n        suggestedMaxPriorityFeePerGas,\n        suggestedMaxFeePerGas,\n      } = selectedGasEstimates;\n      gasEstimationObject.maxFeePerGas =\n        txData.txParams?.maxFeePerGas &&\n        (txData.userFeeLevel === CUSTOM_GAS_ESTIMATE || !suggestedMaxFeePerGas)\n          ? txData.txParams?.maxFeePerGas\n          : decGWEIToHexWEI(suggestedMaxFeePerGas || gasPrice);\n      gasEstimationObject.maxPriorityFeePerGas =\n        txData.txParams?.maxPriorityFeePerGas &&\n        (txData.userFeeLevel === CUSTOM_GAS_ESTIMATE ||\n          !suggestedMaxPriorityFeePerGas)\n          ? txData.txParams?.maxPriorityFeePerGas\n          : (suggestedMaxPriorityFeePerGas &&\n              decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)) ||\n            gasEstimationObject.maxFeePerGas;\n      gasEstimationObject.baseFeePerGas = decGWEIToHexWEI(\n        gasFeeEstimates.estimatedBaseFee,\n      );\n    }\n  } else {\n    switch (gasEstimateType) {\n      case GAS_ESTIMATE_TYPES.NONE:\n        gasEstimationObject.gasPrice = txData.txParams?.gasPrice ?? '0x0';\n        break;\n      case GAS_ESTIMATE_TYPES.ETH_GASPRICE:\n        gasEstimationObject.gasPrice =\n          txData.txParams?.gasPrice ??\n          decGWEIToHexWEI(gasFeeEstimates.gasPrice);\n        break;\n      case GAS_ESTIMATE_TYPES.LEGACY:\n        gasEstimationObject.gasPrice =\n          txData.txParams?.gasPrice ?? getAveragePriceEstimateInHexWEI(state);\n        break;\n      case GAS_ESTIMATE_TYPES.FEE_MARKET:\n        break;\n      default:\n        break;\n    }\n  }\n\n  const { txParams: { value = '0x0' } = {} } = txData;\n\n  const fiatTransactionAmount = getValueFromWeiHex({\n    value,\n    fromCurrency: nativeCurrency,\n    toCurrency: currentCurrency,\n    conversionRate,\n    numberOfDecimals: 2,\n  });\n  const ethTransactionAmount = getValueFromWeiHex({\n    value,\n    fromCurrency: nativeCurrency,\n    toCurrency: nativeCurrency,\n    conversionRate,\n    numberOfDecimals: 6,\n  });\n\n  const hexMinimumTransactionFee = getMinimumGasTotalInHexWei(\n    gasEstimationObject,\n  );\n  const hexMaximumTransactionFee = getMaximumGasTotalInHexWei(\n    gasEstimationObject,\n  );\n\n  const fiatMinimumTransactionFee = getTransactionFee({\n    value: hexMinimumTransactionFee,\n    fromCurrency: nativeCurrency,\n    toCurrency: currentCurrency,\n    numberOfDecimals: 2,\n    conversionRate,\n  });\n\n  const fiatMaximumTransactionFee = getTransactionFee({\n    value: hexMaximumTransactionFee,\n    fromCurrency: nativeCurrency,\n    toCurrency: currentCurrency,\n    numberOfDecimals: 2,\n    conversionRate,\n  });\n\n  const ethTransactionFee = getTransactionFee({\n    value: hexMinimumTransactionFee,\n    fromCurrency: nativeCurrency,\n    toCurrency: nativeCurrency,\n    numberOfDecimals: 6,\n    conversionRate,\n  });\n\n  const fiatTransactionTotal = addFiat(\n    fiatMinimumTransactionFee,\n    fiatTransactionAmount,\n  );\n  const ethTransactionTotal = addEth(ethTransactionFee, ethTransactionAmount);\n  const hexTransactionTotal = sumHexes(value, hexMinimumTransactionFee);\n\n  return {\n    hexTransactionAmount: value,\n    fiatTransactionAmount,\n    ethTransactionAmount,\n    hexMinimumTransactionFee,\n    fiatMinimumTransactionFee,\n    hexMaximumTransactionFee,\n    fiatMaximumTransactionFee,\n    ethTransactionFee,\n    fiatTransactionTotal,\n    ethTransactionTotal,\n    hexTransactionTotal,\n    gasEstimationObject,\n  };\n};\n","import { createSelector } from 'reselect';\nimport { addHexPrefix } from '../../app/scripts/lib/util';\nimport {\n  MAINNET_CHAIN_ID,\n  TEST_CHAINS,\n  NETWORK_TYPE_RPC,\n  NATIVE_CURRENCY_TOKEN_IMAGE_MAP,\n  OPTIMISM_CHAIN_ID,\n  OPTIMISM_TESTNET_CHAIN_ID,\n  BUYABLE_CHAINS_MAP,\n} from '../../shared/constants/network';\nimport {\n  KEYRING_TYPES,\n  WEBHID_CONNECTED_STATUSES,\n  LEDGER_TRANSPORT_TYPES,\n  TRANSPORT_STATES,\n} from '../../shared/constants/hardware-wallets';\n\nimport {\n  MESSAGE_TYPE,\n} from '../../shared/constants/app';\n\nimport { TRUNCATED_NAME_CHAR_LIMIT } from '../../shared/constants/labels';\n\nimport {\n  SWAPS_CHAINID_DEFAULT_TOKEN_MAP,\n  ALLOWED_SWAPS_CHAIN_IDS,\n} from '../../shared/constants/swaps';\n\nimport {\n  shortenAddress,\n  getAccountByAddress,\n  isEqualCaseInsensitive,\n} from '../helpers/utils/util';\nimport {\n  getValueFromWeiHex,\n  hexToDecimal,\n} from '../helpers/utils/conversions.util';\n\nimport { TEMPLATED_CONFIRMATION_MESSAGE_TYPES } from '../pages/confirmation/templates';\n\nimport { toChecksumHexAddress } from '../../shared/modules/hexstring-utils';\nimport { DAY } from '../../shared/constants/time';\nimport {\n  getNativeCurrency,\n  getConversionRate,\n  isNotEIP1559Network,\n  isEIP1559Network,\n  getLedgerTransportType,\n  isAddressLedger,\n  findKeyringForAddress,\n} from '../ducks/metamask/metamask';\nimport {\n  getLedgerWebHidConnectedStatus,\n  getLedgerTransportStatus,\n} from '../ducks/app/app';\n\n/**\n * One of the only remaining valid uses of selecting the network subkey of the\n * metamask state tree is to determine if the network is currently 'loading'.\n *\n * This will be used for all cases where this state key is accessed only for that\n * purpose.\n *\n * @param {Object} state - redux state object\n */\nexport function isNetworkLoading(state) {\n  return state.metamask.network === 'loading';\n}\n\nexport function getNetworkIdentifier(state) {\n  const {\n    metamask: {\n      provider: { type, nickname, rpcUrl },\n    },\n  } = state;\n\n  return nickname || rpcUrl || type;\n}\n\nexport function getMetricsNetworkIdentifier(state) {\n  const { provider } = state.metamask;\n  return provider.type === NETWORK_TYPE_RPC ? provider.rpcUrl : provider.type;\n}\n\nexport function getCurrentChainId(state) {\n  const { chainId } = state.metamask.provider;\n  return chainId;\n}\n\nexport function getCurrentQRHardwareState(state) {\n  const { qrHardware } = state.metamask;\n  return qrHardware || {};\n}\n\nexport function hasUnsignedQRHardwareTransaction(state) {\n  const { txParams } = state.confirmTransaction.txData;\n  if (!txParams) {\n    return false;\n  }\n  const { from } = txParams;\n  const { keyrings } = state.metamask;\n  const qrKeyring = keyrings.find((kr) => kr.type === KEYRING_TYPES.QR);\n  if (!qrKeyring) {\n    return false;\n  }\n  return Boolean(\n    qrKeyring.accounts.find(\n      (account) => account.toLowerCase() === from.toLowerCase(),\n    ),\n  );\n}\n\nexport function hasUnsignedQRHardwareMessage(state) {\n  const { type, msgParams } = state.confirmTransaction.txData;\n  if (!type || !msgParams) {\n    return false;\n  }\n  const { from } = msgParams;\n  const { keyrings } = state.metamask;\n  const qrKeyring = keyrings.find((kr) => kr.type === KEYRING_TYPES.QR);\n  if (!qrKeyring) {\n    return false;\n  }\n  switch (type) {\n    case MESSAGE_TYPE.ETH_SIGN_TYPED_DATA:\n    case MESSAGE_TYPE.ETH_SIGN:\n    case MESSAGE_TYPE.PERSONAL_SIGN:\n      return Boolean(\n        qrKeyring.accounts.find(\n          (account) => account.toLowerCase() === from.toLowerCase(),\n        ),\n      );\n    default:\n      return false;\n  }\n}\n\nexport function getCurrentKeyring(state) {\n  const identity = getSelectedIdentity(state);\n\n  if (!identity) {\n    return null;\n  }\n\n  const keyring = findKeyringForAddress(state, identity.address);\n\n  return keyring;\n}\n\nexport function getParticipateInMetaMetrics(state) {\n  return Boolean(state.metamask.participateInMetaMetrics);\n}\n\nexport function isEIP1559Account() {\n  return true;\n}\n\n/**\n * The function returns true if network and account details are fetched and\n * both of them support EIP-1559.\n *\n * @param state\n */\nexport function checkNetworkAndAccountSupports1559(state) {\n  const networkSupports1559 = isEIP1559Network(state);\n  const accountSupports1559 = isEIP1559Account(state);\n\n  return networkSupports1559 && accountSupports1559;\n}\n\n/**\n * The function returns true if network and account details are fetched and\n * either of them do not support EIP-1559.\n *\n * @param state\n */\nexport function checkNetworkOrAccountNotSupports1559(state) {\n  const networkNotSupports1559 = isNotEIP1559Network(state);\n  const accountSupports1559 = isEIP1559Account(state);\n\n  return networkNotSupports1559 || accountSupports1559 === false;\n}\n\n/**\n * Checks if the current wallet is a hardware wallet.\n *\n * @param {Object} state\n * @returns {boolean}\n */\nexport function isHardwareWallet(state) {\n  const keyring = getCurrentKeyring(state);\n  return Boolean(keyring?.type?.includes('Hardware'));\n}\n\n/**\n * Get a HW wallet type, e.g. \"Ledger Hardware\"\n *\n * @param {Object} state\n * @returns {string | undefined}\n */\nexport function getHardwareWalletType(state) {\n  const keyring = getCurrentKeyring(state);\n  return isHardwareWallet(state) ? keyring.type : undefined;\n}\n\nexport function getAccountType(state) {\n  const currentKeyring = getCurrentKeyring(state);\n  const type = currentKeyring && currentKeyring.type;\n\n  switch (type) {\n    case KEYRING_TYPES.TREZOR:\n    case KEYRING_TYPES.LEDGER:\n    case KEYRING_TYPES.LATTICE:\n      return 'hardware';\n    case 'Simple Key Pair':\n      return 'imported';\n    default:\n      return 'default';\n  }\n}\n\n/**\n * get the currently selected networkId which will be 'loading' when the\n * network changes. The network id should not be used in most cases,\n * instead use chainId in most situations. There are a limited number of\n * use cases to use this method still, such as when comparing transaction\n * metadata that predates the switch to using chainId.\n *\n * @deprecated - use getCurrentChainId instead\n * @param {Object} state - redux state object\n */\nexport function deprecatedGetCurrentNetworkId(state) {\n  return state.metamask.network;\n}\n\nexport const getMetaMaskAccounts = createSelector(\n  getMetaMaskAccountsRaw,\n  getMetaMaskCachedBalances,\n  (currentAccounts, cachedBalances) =>\n    Object.entries(currentAccounts).reduce(\n      (selectedAccounts, [accountID, account]) => {\n        if (account.balance === null || account.balance === undefined) {\n          return {\n            ...selectedAccounts,\n            [accountID]: {\n              ...account,\n              balance: cachedBalances && cachedBalances[accountID],\n            },\n          };\n        }\n        return {\n          ...selectedAccounts,\n          [accountID]: account,\n        };\n      },\n      {},\n    ),\n);\n\nexport function getSelectedAddress(state) {\n  return state.metamask.selectedAddress;\n}\n\nexport function getSelectedIdentity(state) {\n  const selectedAddress = getSelectedAddress(state);\n  const { identities } = state.metamask;\n\n  return identities[selectedAddress];\n}\n\nexport function getNumberOfAccounts(state) {\n  return Object.keys(state.metamask.accounts).length;\n}\n\nexport function getNumberOfTokens(state) {\n  const { tokens } = state.metamask;\n  return tokens ? tokens.length : 0;\n}\n\nexport function getMetaMaskKeyrings(state) {\n  return state.metamask.keyrings;\n}\n\nexport function getMetaMaskIdentities(state) {\n  return state.metamask.identities;\n}\n\nexport function getMetaMaskAccountsRaw(state) {\n  return state.metamask.accounts;\n}\n\nexport function getMetaMaskCachedBalances(state) {\n  const chainId = getCurrentChainId(state);\n\n  // Fallback to fetching cached balances from network id\n  // this can eventually be removed\n  const network = deprecatedGetCurrentNetworkId(state);\n\n  return (\n    state.metamask.cachedBalances[chainId] ??\n    state.metamask.cachedBalances[network]\n  );\n}\n\n/**\n * Get ordered (by keyrings) accounts with identity and balance\n */\nexport const getMetaMaskAccountsOrdered = createSelector(\n  getMetaMaskKeyrings,\n  getMetaMaskIdentities,\n  getMetaMaskAccounts,\n  (keyrings, identities, accounts) =>\n    keyrings\n      .reduce((list, keyring) => list.concat(keyring.accounts), [])\n      .filter((address) => Boolean(identities[address]))\n      .map((address) => ({ ...identities[address], ...accounts[address] })),\n);\n\nexport const getMetaMaskAccountsConnected = createSelector(\n  getMetaMaskAccountsOrdered,\n  (connectedAccounts) =>\n    connectedAccounts.map(({ address }) => address.toLowerCase()),\n);\n\nexport function isBalanceCached(state) {\n  const selectedAccountBalance =\n    state.metamask.accounts[getSelectedAddress(state)].balance;\n  const cachedBalance = getSelectedAccountCachedBalance(state);\n\n  return Boolean(!selectedAccountBalance && cachedBalance);\n}\n\nexport function getSelectedAccountCachedBalance(state) {\n  const cachedBalances = getMetaMaskCachedBalances(state);\n  const selectedAddress = getSelectedAddress(state);\n\n  return cachedBalances && cachedBalances[selectedAddress];\n}\n\nexport function getSelectedAccount(state) {\n  const accounts = getMetaMaskAccounts(state);\n  const selectedAddress = getSelectedAddress(state);\n\n  return accounts[selectedAddress];\n}\n\nexport function getTargetAccount(state, targetAddress) {\n  const accounts = getMetaMaskAccounts(state);\n  return accounts[targetAddress];\n}\n\nexport const getTokenExchangeRates = (state) =>\n  state.metamask.contractExchangeRates;\n\nexport function getAddressBook(state) {\n  const chainId = getCurrentChainId(state);\n  if (!state.metamask.addressBook[chainId]) {\n    return [];\n  }\n  return Object.values(state.metamask.addressBook[chainId]);\n}\n\nexport function getAddressBookEntry(state, address) {\n  const addressBook = getAddressBook(state);\n  const entry = addressBook.find((contact) =>\n    isEqualCaseInsensitive(contact.address, toChecksumHexAddress(address)),\n  );\n  return entry;\n}\n\nexport function getAddressBookEntryOrAccountName(state, address) {\n  const entry =\n    getAddressBookEntry(state, address) ||\n    Object.values(state.metamask.identities).find((identity) =>\n      isEqualCaseInsensitive(identity.address, toChecksumHexAddress(address)),\n    );\n  return entry && entry.name !== '' ? entry.name : address;\n}\n\nexport function accountsWithSendEtherInfoSelector(state) {\n  const accounts = getMetaMaskAccounts(state);\n  const identities = getMetaMaskIdentities(state);\n\n  const accountsWithSendEtherInfo = Object.entries(identities).map(\n    ([key, identity]) => {\n      return { ...identity, ...accounts[key] };\n    },\n  );\n\n  return accountsWithSendEtherInfo;\n}\n\nexport function getAccountsWithLabels(state) {\n  return getMetaMaskAccountsOrdered(state).map(\n    ({ address, name, balance }) => ({\n      address,\n      addressLabel: `${\n        name.length < TRUNCATED_NAME_CHAR_LIMIT\n          ? name\n          : `${name.slice(0, TRUNCATED_NAME_CHAR_LIMIT - 1)}...`\n      } (${shortenAddress(address)})`,\n      label: name,\n      balance,\n    }),\n  );\n}\n\nexport function getCurrentAccountWithSendEtherInfo(state) {\n  const currentAddress = getSelectedAddress(state);\n  const accounts = accountsWithSendEtherInfoSelector(state);\n\n  return getAccountByAddress(accounts, currentAddress);\n}\n\nexport function getTargetAccountWithSendEtherInfo(state, targetAddress) {\n  const accounts = accountsWithSendEtherInfoSelector(state);\n  return getAccountByAddress(accounts, targetAddress);\n}\n\nexport function getCurrentEthBalance(state) {\n  return getCurrentAccountWithSendEtherInfo(state).balance;\n}\n\nexport function getGasIsLoading(state) {\n  return state.appState.gasIsLoading;\n}\n\nexport function getAppIsLoading(state) {\n  return state.appState.isLoading;\n}\n\nexport function getCurrentCurrency(state) {\n  return state.metamask.currentCurrency;\n}\n\nexport function getTotalUnapprovedCount(state) {\n  const {\n    unapprovedMsgCount = 0,\n    unapprovedPersonalMsgCount = 0,\n    unapprovedDecryptMsgCount = 0,\n    unapprovedEncryptionPublicKeyMsgCount = 0,\n    unapprovedTypedMessagesCount = 0,\n    pendingApprovalCount = 0,\n  } = state.metamask;\n\n  return (\n    unapprovedMsgCount +\n    unapprovedPersonalMsgCount +\n    unapprovedDecryptMsgCount +\n    unapprovedEncryptionPublicKeyMsgCount +\n    unapprovedTypedMessagesCount +\n    getUnapprovedTxCount(state) +\n    pendingApprovalCount +\n    getSuggestedAssetCount(state)\n  );\n}\n\nfunction getUnapprovedTxCount(state) {\n  const { unapprovedTxs = {} } = state.metamask;\n  return Object.keys(unapprovedTxs).length;\n}\n\nexport function getUnapprovedConfirmations(state) {\n  const { pendingApprovals } = state.metamask;\n  return Object.values(pendingApprovals);\n}\n\nexport function getUnapprovedTemplatedConfirmations(state) {\n  const unapprovedConfirmations = getUnapprovedConfirmations(state);\n  return unapprovedConfirmations.filter((approval) =>\n    TEMPLATED_CONFIRMATION_MESSAGE_TYPES.includes(approval.type),\n  );\n}\n\nfunction getSuggestedAssetCount(state) {\n  const { suggestedAssets = [] } = state.metamask;\n  return suggestedAssets.length;\n}\n\nexport function getIsMainnet(state) {\n  const chainId = getCurrentChainId(state);\n  return chainId === MAINNET_CHAIN_ID;\n}\n\nexport function getIsTestnet(state) {\n  const chainId = getCurrentChainId(state);\n  return TEST_CHAINS.includes(chainId);\n}\n\nexport function getIsNonStandardEthChain(state) {\n  return !(getIsMainnet(state) || getIsTestnet(state) || process.env.IN_TEST);\n}\n\nexport function getPreferences({ metamask }) {\n  return metamask.preferences;\n}\n\nexport function getShowTestNetworks(state) {\n  const { showTestNetworks } = getPreferences(state);\n  return Boolean(showTestNetworks);\n}\n\nexport function getShouldShowFiat(state) {\n  const isMainNet = getIsMainnet(state);\n  const conversionRate = getConversionRate(state);\n  const { showFiatInTestnets } = getPreferences(state);\n  return Boolean((isMainNet || showFiatInTestnets) && conversionRate);\n}\n\nexport function getShouldHideZeroBalanceTokens(state) {\n  const { hideZeroBalanceTokens } = getPreferences(state);\n  return hideZeroBalanceTokens;\n}\n\nexport function getAdvancedInlineGasShown(state) {\n  return Boolean(state.metamask.featureFlags.advancedInlineGas);\n}\n\nexport function getUseNonceField(state) {\n  return Boolean(state.metamask.useNonceField);\n}\n\nexport function getCustomNonceValue(state) {\n  return String(state.metamask.customNonceValue);\n}\n\nexport function getSubjectMetadata(state) {\n  return state.metamask.subjectMetadata;\n}\n\n\nexport function getTargetSubjectMetadata(state, origin) {\n  const metadata = getSubjectMetadata(state)[origin];\n\n  return metadata;\n}\n\nexport function getRpcPrefsForCurrentProvider(state) {\n  const { frequentRpcListDetail, provider } = state.metamask;\n  const selectRpcInfo = frequentRpcListDetail.find(\n    (rpcInfo) => rpcInfo.rpcUrl === provider.rpcUrl,\n  );\n  const { rpcPrefs = {} } = selectRpcInfo || {};\n  return rpcPrefs;\n}\n\nexport function getKnownMethodData(state, data) {\n  if (!data) {\n    return null;\n  }\n  const prefixedData = addHexPrefix(data);\n  const fourBytePrefix = prefixedData.slice(0, 10);\n  const { knownMethodData } = state.metamask;\n\n  return knownMethodData && knownMethodData[fourBytePrefix];\n}\n\nexport function getFeatureFlags(state) {\n  return state.metamask.featureFlags;\n}\n\nexport function getOriginOfCurrentTab(state) {\n  return state.activeTab.origin;\n}\n\nexport function getIpfsGateway(state) {\n  return state.metamask.ipfsGateway;\n}\n\nexport function getInfuraBlocked(state) {\n  return Boolean(state.metamask.infuraBlocked);\n}\n\nexport function getUSDConversionRate(state) {\n  return state.metamask.usdConversionRate;\n}\n\nexport function getWeb3ShimUsageStateForOrigin(state, origin) {\n  return state.metamask.web3ShimUsageOrigins[origin];\n}\n\n/**\n * @typedef {Object} SwapsEthToken\n * @property {string} symbol - The symbol for ETH, namely \"ETH\"\n * @property {string} name - The name of the ETH currency, \"Ether\"\n * @property {string} address - A substitute address for the metaswap-api to\n * recognize the ETH token\n * @property {string} decimals - The number of ETH decimals, i.e. 18\n * @property {string} balance - The user's ETH balance in decimal wei, with a\n * precision of 4 decimal places\n * @property {string} string - The user's ETH balance in decimal ETH\n */\n\n/**\n * Swaps related code uses token objects for various purposes. These objects\n * always have the following properties: `symbol`, `name`, `address`, and\n * `decimals`.\n *\n * When available for the current account, the objects can have `balance` and\n * `string` properties.\n * `balance` is the users token balance in decimal values, denominated in the\n * minimal token units (according to its decimals).\n * `string` is the token balance in a readable format, ready for rendering.\n *\n * Swaps treats the selected chain's currency as a token, and we use the token constants\n * in the SWAPS_CHAINID_DEFAULT_TOKEN_MAP to set the standard properties for\n * the token. The getSwapsDefaultToken selector extends that object with\n * `balance` and `string` values of the same type as in regular ERC-20 token\n * objects, per the above description.\n *\n * @param {object} state - the redux state object\n * @returns {SwapsEthToken} The token object representation of the currently\n * selected account's ETH balance, as expected by the Swaps API.\n */\n\nexport function getSwapsDefaultToken(state) {\n  const selectedAccount = getSelectedAccount(state);\n  const { balance } = selectedAccount;\n  const chainId = getCurrentChainId(state);\n\n  const defaultTokenObject = SWAPS_CHAINID_DEFAULT_TOKEN_MAP[chainId];\n\n  return {\n    ...defaultTokenObject,\n    balance: hexToDecimal(balance),\n    string: getValueFromWeiHex({\n      value: balance,\n      numberOfDecimals: 4,\n      toDenomination: 'ETH',\n    }),\n  };\n}\n\nexport function getIsSwapsChain(state) {\n  const chainId = getCurrentChainId(state);\n  return ALLOWED_SWAPS_CHAIN_IDS[chainId];\n}\n\nexport function getIsBuyableChain(state) {\n  const chainId = getCurrentChainId(state);\n  return Object.keys(BUYABLE_CHAINS_MAP).includes(chainId);\n}\n\nexport function getIsBuyableTransakChain(state) {\n  const chainId = getCurrentChainId(state);\n  return Boolean(BUYABLE_CHAINS_MAP?.[chainId]?.transakCurrencies);\n}\n\nexport function getNativeCurrencyImage(state) {\n  const nativeCurrency = getNativeCurrency(state).toUpperCase();\n  return NATIVE_CURRENCY_TOKEN_IMAGE_MAP[nativeCurrency];\n}\n\nexport function getNextSuggestedNonce(state) {\n  return Number(state.metamask.nextNonce);\n}\n\nexport function getShowWhatsNewPopup(state) {\n  return state.appState.showWhatsNewPopup;\n}\n\n\n/**\n * Get an object of notification IDs and if they are allowed or not.\n *\n * @param {Object} state\n * @returns {Object}\n */\nfunction getAllowedNotificationIds(state) {\n  const currentKeyring = getCurrentKeyring(state);\n  const currentKeyringIsLedger = currentKeyring?.type === KEYRING_TYPES.LEDGER;\n  const supportsWebHid = window.navigator.hid !== undefined;\n  const currentlyUsingLedgerLive =\n    getLedgerTransportType(state) === LEDGER_TRANSPORT_TYPES.LIVE;\n\n  return {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: supportsWebHid && currentKeyringIsLedger && currentlyUsingLedgerLive,\n    9: getIsMainnet(state),\n  };\n}\n\n/**\n * @typedef {Object} Notification\n * @property {number} id - A unique identifier for the notification\n * @property {string} date - A date in YYYY-MM-DD format, identifying when the notification was first committed\n */\n\n/**\n * Notifications are managed by the notification controller and referenced by\n * `state.metamask.notifications`. This function returns a list of notifications\n * the can be shown to the user. This list includes all notifications that do not\n * have a truthy `isShown` property.\n *\n * The returned notifications are sorted by date.\n *\n * @param {Object} state - the redux state object\n * @returns {Notification[]} An array of notifications that can be shown to the user\n */\n\nexport function getSortedNotificationsToShow(state) {\n  const notifications = Object.values(state.metamask.notifications);\n  const allowedNotificationIds = getAllowedNotificationIds(state);\n  const notificationsToShow = notifications.filter(\n    (notification) =>\n      !notification.isShown && allowedNotificationIds[notification.id],\n  );\n  const notificationsSortedByDate = notificationsToShow.sort(\n    (a, b) => new Date(b.date) - new Date(a.date),\n  );\n  return notificationsSortedByDate;\n}\n\nexport function getShowRecoveryPhraseReminder(state) {\n  const {\n    recoveryPhraseReminderLastShown,\n    recoveryPhraseReminderHasBeenShown,\n  } = state.metamask;\n\n  const currentTime = new Date().getTime();\n  const frequency = recoveryPhraseReminderHasBeenShown ? DAY * 90 : DAY * 2;\n\n  return currentTime - recoveryPhraseReminderLastShown >= frequency;\n}\n\n/**\n * To get the useTokenDetection flag which determines whether a static or dynamic token list is used\n *\n * @param {*} state\n * @returns Boolean\n */\nexport function getUseTokenDetection(state) {\n  return Boolean(state.metamask.useTokenDetection);\n}\n\n/**\n * To get the useCollectibleDetection flag which determines whether we autodetect NFTs\n *\n * @param {*} state\n * @returns Boolean\n */\nexport function getUseCollectibleDetection(state) {\n  return Boolean(state.metamask.useCollectibleDetection);\n}\n\n/**\n * To get the openSeaEnabled flag which determines whether we use OpenSea's API\n *\n * @param {*} state\n * @returns Boolean\n */\nexport function getOpenSeaEnabled(state) {\n  return Boolean(state.metamask.openSeaEnabled);\n}\n\n/**\n * To retrieve the tokenList produced by TokenListcontroller\n *\n * @param {*} state\n * @returns {Object}\n */\nexport function getTokenList(state) {\n  return state.metamask.tokenList;\n}\n\nexport function doesAddressRequireLedgerHidConnection(state, address) {\n  const addressIsLedger = isAddressLedger(state, address);\n  const transportTypePreferenceIsWebHID =\n    getLedgerTransportType(state) === LEDGER_TRANSPORT_TYPES.WEBHID;\n  const webHidIsNotConnected =\n    getLedgerWebHidConnectedStatus(state) !==\n    WEBHID_CONNECTED_STATUSES.CONNECTED;\n  const ledgerTransportStatus = getLedgerTransportStatus(state);\n  const transportIsNotSuccessfullyCreated =\n    ledgerTransportStatus !== TRANSPORT_STATES.VERIFIED;\n\n  return (\n    addressIsLedger &&\n    transportTypePreferenceIsWebHID &&\n    (webHidIsNotConnected || transportIsNotSuccessfullyCreated)\n  );\n}\n\nexport function getNewCollectibleAddedMessage(state) {\n  return state.appState.newCollectibleAddedMessage;\n}\n\n/**\n * To retrieve the name of the new Network added using add network form\n *\n * @param {*} state\n * @returns string\n */\nexport function getNewNetworkAdded(state) {\n  return state.appState.newNetworkAdded;\n}\n\nexport function getNetworksTabSelectedRpcUrl(state) {\n  return state.appState.networksTabSelectedRpcUrl;\n}\n\nexport function getProvider(state) {\n  return state.metamask.provider;\n}\n\nexport function getFrequentRpcListDetail(state) {\n  return state.metamask.frequentRpcListDetail;\n}\n\nexport function getIsOptimism(state) {\n  return (\n    getCurrentChainId(state) === OPTIMISM_CHAIN_ID ||\n    getCurrentChainId(state) === OPTIMISM_TESTNET_CHAIN_ID\n  );\n}\n\nexport function getNetworkSupportsSettingGasPrice(state) {\n  return !getIsOptimism(state);\n}\n\nexport function getIsMultiLayerFeeNetwork(state) {\n  return getIsOptimism(state);\n}\n/**\n *  To retrieve the maxBaseFee and priotitFee teh user has set as default\n *\n * @param {*} state\n * @returns Boolean\n */\nexport function getAdvancedGasFeeValues(state) {\n  return state.metamask.advancedGasFee;\n}\n\nexport function getEIP1559V2Enabled(state) {\n  return state.metamask.eip1559V2Enabled;\n}\n\n/**\n *  To check if the user has set advanced gas fee settings as default with a non empty  maxBaseFee and priotityFee.\n *\n * @param {*} state\n * @returns Boolean\n */\nexport function getIsAdvancedGasFeeDefault(state) {\n  const { advancedGasFee } = state.metamask;\n  return (\n    Boolean(advancedGasFee?.maxBaseFee) && Boolean(advancedGasFee?.priorityFee)\n  );\n}\n","module.exports={\n  \"de\": {\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"el\": {\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"decimalDigits\": 2\n  },\n  \"en-IE\": {\n    \"symbolOnLeft\": true,\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"es\": {\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"it\": {\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"decimalDigits\": 2\n  },\n  \"nl\": {\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"decimalDigits\": 2\n  }\n}\n","module.exports={\n  \"AED\": {\n    \"code\": \"AED\",\n    \"symbol\": \"د.إ.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"AFN\": {\n    \"code\": \"AFN\",\n    \"symbol\": \"؋\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"ALL\": {\n    \"code\": \"ALL\",\n    \"symbol\": \"Lek\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"AMD\": {\n    \"code\": \"AMD\",\n    \"symbol\": \"֏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"ANG\": {\n    \"code\": \"ANG\",\n    \"symbol\": \"ƒ\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"AOA\": {\n    \"code\": \"AOA\",\n    \"symbol\": \"Kz\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"ARS\": {\n    \"code\": \"ARS\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"AUD\": {\n    \"code\": \"AUD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"AWG\": {\n    \"code\": \"AWG\",\n    \"symbol\": \"ƒ\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"AZN\": {\n    \"code\": \"AZN\",\n    \"symbol\": \"₼\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"BAM\": {\n    \"code\": \"BAM\",\n    \"symbol\": \"КМ\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"BBD\": {\n    \"code\": \"BBD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"BDT\": {\n    \"code\": \"BDT\",\n    \"symbol\": \"৳\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 0\n  },\n  \"BGN\": {\n    \"code\": \"BGN\",\n    \"symbol\": \"лв.\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"BHD\": {\n    \"code\": \"BHD\",\n    \"symbol\": \"د.ب.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 3\n  },\n  \"BIF\": {\n    \"code\": \"BIF\",\n    \"symbol\": \"FBu\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"BMD\": {\n    \"code\": \"BMD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"BND\": {\n    \"code\": \"BND\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"BOB\": {\n    \"code\": \"BOB\",\n    \"symbol\": \"Bs\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"BRL\": {\n    \"code\": \"BRL\",\n    \"symbol\": \"R$\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"BSD\": {\n    \"code\": \"BSD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"BTC\": {\n    \"code\": \"BTC\",\n    \"symbol\": \"Ƀ\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"BTN\": {\n    \"code\": \"BTN\",\n    \"symbol\": \"Nu.\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 1\n  },\n  \"BWP\": {\n    \"code\": \"BWP\",\n    \"symbol\": \"P\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"BYR\": {\n    \"code\": \"BYR\",\n    \"symbol\": \"р.\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"BZD\": {\n    \"code\": \"BZD\",\n    \"symbol\": \"BZ$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CAD\": {\n    \"code\": \"CAD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CDF\": {\n    \"code\": \"CDF\",\n    \"symbol\": \"FC\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CHF\": {\n    \"code\": \"CHF\",\n    \"symbol\": \"CHF\",\n    \"thousandsSeparator\": \"'\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"CLP\": {\n    \"code\": \"CLP\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"CNY\": {\n    \"code\": \"CNY\",\n    \"symbol\": \"¥\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"COP\": {\n    \"code\": \"COP\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"CRC\": {\n    \"code\": \"CRC\",\n    \"symbol\": \"₡\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CUC\": {\n    \"code\": \"CUC\",\n    \"symbol\": \"CUC\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CUP\": {\n    \"code\": \"CUP\",\n    \"symbol\": \"$MN\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CVE\": {\n    \"code\": \"CVE\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"CZK\": {\n    \"code\": \"CZK\",\n    \"symbol\": \"Kč\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"DJF\": {\n    \"code\": \"DJF\",\n    \"symbol\": \"Fdj\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"DKK\": {\n    \"code\": \"DKK\",\n    \"symbol\": \"kr.\",\n    \"thousandsSeparator\": \"\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"DOP\": {\n    \"code\": \"DOP\",\n    \"symbol\": \"RD$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"DZD\": {\n    \"code\": \"DZD\",\n    \"symbol\": \"د.ج.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"EGP\": {\n    \"code\": \"EGP\",\n    \"symbol\": \"ج.م.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"ERN\": {\n    \"code\": \"ERN\",\n    \"symbol\": \"Nfk\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"ETB\": {\n    \"code\": \"ETB\",\n    \"symbol\": \"ETB\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"EUR\": {\n    \"code\": \"EUR\",\n    \"symbol\": \"€\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"FJD\": {\n    \"code\": \"FJD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"FKP\": {\n    \"code\": \"FKP\",\n    \"symbol\": \"£\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"GBP\": {\n    \"code\": \"GBP\",\n    \"symbol\": \"£\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"GEL\": {\n    \"code\": \"GEL\",\n    \"symbol\": \"Lari\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"GHS\": {\n    \"code\": \"GHS\",\n    \"symbol\": \"₵\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"GIP\": {\n    \"code\": \"GIP\",\n    \"symbol\": \"£\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"GMD\": {\n    \"code\": \"GMD\",\n    \"symbol\": \"D\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"GNF\": {\n    \"code\": \"GNF\",\n    \"symbol\": \"FG\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"GTQ\": {\n    \"code\": \"GTQ\",\n    \"symbol\": \"Q\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"GYD\": {\n    \"code\": \"GYD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"HKD\": {\n    \"code\": \"HKD\",\n    \"symbol\": \"HK$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"HNL\": {\n    \"code\": \"HNL\",\n    \"symbol\": \"L.\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"HRK\": {\n    \"code\": \"HRK\",\n    \"symbol\": \"kn\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"HTG\": {\n    \"code\": \"HTG\",\n    \"symbol\": \"G\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"HUF\": {\n    \"code\": \"HUF\",\n    \"symbol\": \"Ft\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"IDR\": {\n    \"code\": \"IDR\",\n    \"symbol\": \"Rp\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"ILS\": {\n    \"code\": \"ILS\",\n    \"symbol\": \"₪\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"INR\": {\n    \"code\": \"INR\",\n    \"symbol\": \"₹\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"IQD\": {\n    \"code\": \"IQD\",\n    \"symbol\": \"د.ع.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"IRR\": {\n    \"code\": \"IRR\",\n    \"symbol\": \"﷼\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \"/\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"ISK\": {\n    \"code\": \"ISK\",\n    \"symbol\": \"kr.\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 0\n  },\n  \"JMD\": {\n    \"code\": \"JMD\",\n    \"symbol\": \"J$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"JOD\": {\n    \"code\": \"JOD\",\n    \"symbol\": \"د.ا.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 3\n  },\n  \"JPY\": {\n    \"code\": \"JPY\",\n    \"symbol\": \"¥\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"KES\": {\n    \"code\": \"KES\",\n    \"symbol\": \"KSh\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"KGS\": {\n    \"code\": \"KGS\",\n    \"symbol\": \"сом\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \"-\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"KHR\": {\n    \"code\": \"KHR\",\n    \"symbol\": \"៛\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"KMF\": {\n    \"code\": \"KMF\",\n    \"symbol\": \"CF\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"KPW\": {\n    \"code\": \"KPW\",\n    \"symbol\": \"₩\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"KRW\": {\n    \"code\": \"KRW\",\n    \"symbol\": \"₩\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"KWD\": {\n    \"code\": \"KWD\",\n    \"symbol\": \"د.ك.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 3\n  },\n  \"KYD\": {\n    \"code\": \"KYD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"KZT\": {\n    \"code\": \"KZT\",\n    \"symbol\": \"₸\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \"-\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"LAK\": {\n    \"code\": \"LAK\",\n    \"symbol\": \"₭\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"LBP\": {\n    \"code\": \"LBP\",\n    \"symbol\": \"ل.ل.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"LKR\": {\n    \"code\": \"LKR\",\n    \"symbol\": \"₨\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 0\n  },\n  \"LRD\": {\n    \"code\": \"LRD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"LSL\": {\n    \"code\": \"LSL\",\n    \"symbol\": \"M\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"LYD\": {\n    \"code\": \"LYD\",\n    \"symbol\": \"د.ل.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 3\n  },\n  \"MAD\": {\n    \"code\": \"MAD\",\n    \"symbol\": \"د.م.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"MDL\": {\n    \"code\": \"MDL\",\n    \"symbol\": \"lei\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"MGA\": {\n    \"code\": \"MGA\",\n    \"symbol\": \"Ar\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"MKD\": {\n    \"code\": \"MKD\",\n    \"symbol\": \"ден.\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"MMK\": {\n    \"code\": \"MMK\",\n    \"symbol\": \"K\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MNT\": {\n    \"code\": \"MNT\",\n    \"symbol\": \"₮\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MOP\": {\n    \"code\": \"MOP\",\n    \"symbol\": \"MOP$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MRO\": {\n    \"code\": \"MRO\",\n    \"symbol\": \"UM\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MTL\": {\n    \"code\": \"MTL\",\n    \"symbol\": \"₤\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MUR\": {\n    \"code\": \"MUR\",\n    \"symbol\": \"₨\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MVR\": {\n    \"code\": \"MVR\",\n    \"symbol\": \"MVR\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 1\n  },\n  \"MWK\": {\n    \"code\": \"MWK\",\n    \"symbol\": \"MK\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MXN\": {\n    \"code\": \"MXN\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MYR\": {\n    \"code\": \"MYR\",\n    \"symbol\": \"RM\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"MZN\": {\n    \"code\": \"MZN\",\n    \"symbol\": \"MT\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"NAD\": {\n    \"code\": \"NAD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"NGN\": {\n    \"code\": \"NGN\",\n    \"symbol\": \"₦\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"NIO\": {\n    \"code\": \"NIO\",\n    \"symbol\": \"C$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"NOK\": {\n    \"code\": \"NOK\",\n    \"symbol\": \"kr\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"NPR\": {\n    \"code\": \"NPR\",\n    \"symbol\": \"₨\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"NZD\": {\n    \"code\": \"NZD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"OMR\": {\n    \"code\": \"OMR\",\n    \"symbol\": \"﷼\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 3\n  },\n  \"PAB\": {\n    \"code\": \"PAB\",\n    \"symbol\": \"B/.\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"PEN\": {\n    \"code\": \"PEN\",\n    \"symbol\": \"S/.\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"PGK\": {\n    \"code\": \"PGK\",\n    \"symbol\": \"K\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"PHP\": {\n    \"code\": \"PHP\",\n    \"symbol\": \"₱\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"PKR\": {\n    \"code\": \"PKR\",\n    \"symbol\": \"₨\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"PLN\": {\n    \"code\": \"PLN\",\n    \"symbol\": \"zł\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"PYG\": {\n    \"code\": \"PYG\",\n    \"symbol\": \"₲\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"QAR\": {\n    \"code\": \"QAR\",\n    \"symbol\": \"﷼\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"RON\": {\n    \"code\": \"RON\",\n    \"symbol\": \"lei\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"RSD\": {\n    \"code\": \"RSD\",\n    \"symbol\": \"Дин.\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"RUB\": {\n    \"code\": \"RUB\",\n    \"symbol\": \"₽\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"RWF\": {\n    \"code\": \"RWF\",\n    \"symbol\": \"RWF\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"SAR\": {\n    \"code\": \"SAR\",\n    \"symbol\": \"﷼\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"SBD\": {\n    \"code\": \"SBD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SCR\": {\n    \"code\": \"SCR\",\n    \"symbol\": \"₨\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SDD\": {\n    \"code\": \"SDD\",\n    \"symbol\": \"LSd\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SDG\": {\n    \"code\": \"SDG\",\n    \"symbol\": \"£‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SEK\": {\n    \"code\": \"SEK\",\n    \"symbol\": \"kr\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"SGD\": {\n    \"code\": \"SGD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SHP\": {\n    \"code\": \"SHP\",\n    \"symbol\": \"£\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SLL\": {\n    \"code\": \"SLL\",\n    \"symbol\": \"Le\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SOS\": {\n    \"code\": \"SOS\",\n    \"symbol\": \"S\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SRD\": {\n    \"code\": \"SRD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"STD\": {\n    \"code\": \"STD\",\n    \"symbol\": \"Db\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SVC\": {\n    \"code\": \"SVC\",\n    \"symbol\": \"₡\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"SYP\": {\n    \"code\": \"SYP\",\n    \"symbol\": \"£\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"SZL\": {\n    \"code\": \"SZL\",\n    \"symbol\": \"E\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"THB\": {\n    \"code\": \"THB\",\n    \"symbol\": \"฿\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"TJS\": {\n    \"code\": \"TJS\",\n    \"symbol\": \"TJS\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \";\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"TMT\": {\n    \"code\": \"TMT\",\n    \"symbol\": \"m\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"TND\": {\n    \"code\": \"TND\",\n    \"symbol\": \"د.ت.‏\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 3\n  },\n  \"TOP\": {\n    \"code\": \"TOP\",\n    \"symbol\": \"T$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"TRY\": {\n    \"code\": \"TRY\",\n    \"symbol\": \"TL\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"TTD\": {\n    \"code\": \"TTD\",\n    \"symbol\": \"TT$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"TVD\": {\n    \"code\": \"TVD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"TWD\": {\n    \"code\": \"TWD\",\n    \"symbol\": \"NT$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"TZS\": {\n    \"code\": \"TZS\",\n    \"symbol\": \"TSh\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"UAH\": {\n    \"code\": \"UAH\",\n    \"symbol\": \"₴\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"UGX\": {\n    \"code\": \"UGX\",\n    \"symbol\": \"USh\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"USD\": {\n    \"code\": \"USD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"UYU\": {\n    \"code\": \"UYU\",\n    \"symbol\": \"$U\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"UZS\": {\n    \"code\": \"UZS\",\n    \"symbol\": \"сўм\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"VEB\": {\n    \"code\": \"VEB\",\n    \"symbol\": \"Bs.\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"VEF\": {\n    \"code\": \"VEF\",\n    \"symbol\": \"Bs. F.\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"VND\": {\n    \"code\": \"VND\",\n    \"symbol\": \"₫\",\n    \"thousandsSeparator\": \".\",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 1\n  },\n  \"VUV\": {\n    \"code\": \"VUV\",\n    \"symbol\": \"VT\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 0\n  },\n  \"WST\": {\n    \"code\": \"WST\",\n    \"symbol\": \"WS$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"XAF\": {\n    \"code\": \"XAF\",\n    \"symbol\": \"F\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"XCD\": {\n    \"code\": \"XCD\",\n    \"symbol\": \"$\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"XBT\": {\n    \"code\": \"XBT\",\n    \"symbol\": \"Ƀ\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"XOF\": {\n    \"code\": \"XOF\",\n    \"symbol\": \"F\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"XPF\": {\n    \"code\": \"XPF\",\n    \"symbol\": \"F\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": false,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"YER\": {\n    \"code\": \"YER\",\n    \"symbol\": \"﷼\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": true,\n    \"decimalDigits\": 2\n  },\n  \"ZAR\": {\n    \"code\": \"ZAR\",\n    \"symbol\": \"R\",\n    \"thousandsSeparator\": \" \",\n    \"decimalSeparator\": \",\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"ZMW\": {\n    \"code\": \"ZMW\",\n    \"symbol\": \"ZK\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  },\n  \"WON\": {\n    \"code\": \"WON\",\n    \"symbol\": \"₩\",\n    \"thousandsSeparator\": \",\",\n    \"decimalSeparator\": \".\",\n    \"symbolOnLeft\": true,\n    \"spaceBetweenAmountAndSymbol\": false,\n    \"decimalDigits\": 2\n  }\n}\n","/*!\n * accounting.js v0.4.1\n * Copyright 2014 Open Exchange Rates\n *\n * Freely distributable under the MIT license.\n * Portions of accounting.js are inspired or borrowed from underscore.js\n *\n * Full details and documentation:\n * http://openexchangerates.github.io/accounting.js/\n */\n\n(function(root, undefined) {\n\n\t/* --- Setup --- */\n\n\t// Create the local library object, to be exported or referenced globally later\n\tvar lib = {};\n\n\t// Current version\n\tlib.version = '0.4.1';\n\n\n\t/* --- Exposed settings --- */\n\n\t// The library's settings configuration object. Contains default parameters for\n\t// currency and number formatting\n\tlib.settings = {\n\t\tcurrency: {\n\t\t\tsymbol : \"$\",\t\t// default currency symbol is '$'\n\t\t\tformat : \"%s%v\",\t// controls output: %s = symbol, %v = value (can be object, see docs)\n\t\t\tdecimal : \".\",\t\t// decimal point separator\n\t\t\tthousand : \",\",\t\t// thousands separator\n\t\t\tprecision : 2,\t\t// decimal places\n\t\t\tgrouping : 3\t\t// digit grouping (not implemented yet)\n\t\t},\n\t\tnumber: {\n\t\t\tprecision : 0,\t\t// default precision on numbers is 0\n\t\t\tgrouping : 3,\t\t// digit grouping (not implemented yet)\n\t\t\tthousand : \",\",\n\t\t\tdecimal : \".\"\n\t\t}\n\t};\n\n\n\t/* --- Internal Helper Methods --- */\n\n\t// Store reference to possibly-available ECMAScript 5 methods for later\n\tvar nativeMap = Array.prototype.map,\n\t\tnativeIsArray = Array.isArray,\n\t\ttoString = Object.prototype.toString;\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js\n\t */\n\tfunction isString(obj) {\n\t\treturn !!(obj === '' || (obj && obj.charCodeAt && obj.substr));\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a string\n\t * from underscore.js, delegates to ECMA5's native Array.isArray\n\t */\n\tfunction isArray(obj) {\n\t\treturn nativeIsArray ? nativeIsArray(obj) : toString.call(obj) === '[object Array]';\n\t}\n\n\t/**\n\t * Tests whether supplied parameter is a true object\n\t */\n\tfunction isObject(obj) {\n\t\treturn obj && toString.call(obj) === '[object Object]';\n\t}\n\n\t/**\n\t * Extends an object with a defaults object, similar to underscore's _.defaults\n\t *\n\t * Used for abstracting parameter handling from API methods\n\t */\n\tfunction defaults(object, defs) {\n\t\tvar key;\n\t\tobject = object || {};\n\t\tdefs = defs || {};\n\t\t// Iterate over object non-prototype properties:\n\t\tfor (key in defs) {\n\t\t\tif (defs.hasOwnProperty(key)) {\n\t\t\t\t// Replace values with defaults only if undefined (allow empty/zero values):\n\t\t\t\tif (object[key] == null) object[key] = defs[key];\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}\n\n\t/**\n\t * Implementation of `Array.map()` for iteration loops\n\t *\n\t * Returns a new Array as a result of calling `iterator` on each array value.\n\t * Defers to native Array.map if available\n\t */\n\tfunction map(obj, iterator, context) {\n\t\tvar results = [], i, j;\n\n\t\tif (!obj) return results;\n\n\t\t// Use native .map method if it exists:\n\t\tif (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n\n\t\t// Fallback for native .map:\n\t\tfor (i = 0, j = obj.length; i < j; i++ ) {\n\t\t\tresults[i] = iterator.call(context, obj[i], i, obj);\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Check and normalise the value of precision (must be positive integer)\n\t */\n\tfunction checkPrecision(val, base) {\n\t\tval = Math.round(Math.abs(val));\n\t\treturn isNaN(val)? base : val;\n\t}\n\n\n\t/**\n\t * Parses a format string or object and returns format obj for use in rendering\n\t *\n\t * `format` is either a string with the default (positive) format, or object\n\t * containing `pos` (required), `neg` and `zero` values (or a function returning\n\t * either a string or object)\n\t *\n\t * Either string or format.pos must contain \"%v\" (value) to be valid\n\t */\n\tfunction checkCurrencyFormat(format) {\n\t\tvar defaults = lib.settings.currency.format;\n\n\t\t// Allow function as format parameter (should return string or object):\n\t\tif ( typeof format === \"function\" ) format = format();\n\n\t\t// Format can be a string, in which case `value` (\"%v\") must be present:\n\t\tif ( isString( format ) && format.match(\"%v\") ) {\n\n\t\t\t// Create and return positive, negative and zero formats:\n\t\t\treturn {\n\t\t\t\tpos : format,\n\t\t\t\tneg : format.replace(\"-\", \"\").replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : format\n\t\t\t};\n\n\t\t// If no format, or object is missing valid positive value, use defaults:\n\t\t} else if ( !format || !format.pos || !format.pos.match(\"%v\") ) {\n\n\t\t\t// If defaults is a string, casts it to an object for faster checking next time:\n\t\t\treturn ( !isString( defaults ) ) ? defaults : lib.settings.currency.format = {\n\t\t\t\tpos : defaults,\n\t\t\t\tneg : defaults.replace(\"%v\", \"-%v\"),\n\t\t\t\tzero : defaults\n\t\t\t};\n\n\t\t}\n\t\t// Otherwise, assume format was fine:\n\t\treturn format;\n\t}\n\n\n\t/* --- API Methods --- */\n\n\t/**\n\t * Takes a string/array of strings, removes all formatting/cruft and returns the raw float value\n\t * Alias: `accounting.parse(string)`\n\t *\n\t * Decimal must be included in the regular expression to match floats (defaults to\n\t * accounting.settings.number.decimal), so if the number uses a non-standard decimal \n\t * separator, provide it as the second argument.\n\t *\n\t * Also matches bracketed negatives (eg. \"$ (1.99)\" => -1.99)\n\t *\n\t * Doesn't throw any errors (`NaN`s become 0) but this may change in future\n\t */\n\tvar unformat = lib.unformat = lib.parse = function(value, decimal) {\n\t\t// Recursively unformat arrays:\n\t\tif (isArray(value)) {\n\t\t\treturn map(value, function(val) {\n\t\t\t\treturn unformat(val, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Fails silently (need decent errors):\n\t\tvalue = value || 0;\n\n\t\t// Return the value as-is if it's already a number:\n\t\tif (typeof value === \"number\") return value;\n\n\t\t// Default decimal point comes from settings, but could be set to eg. \",\" in opts:\n\t\tdecimal = decimal || lib.settings.number.decimal;\n\n\t\t // Build regex to strip out everything except digits, decimal point and minus sign:\n\t\tvar regex = new RegExp(\"[^0-9-\" + decimal + \"]\", [\"g\"]),\n\t\t\tunformatted = parseFloat(\n\t\t\t\t(\"\" + value)\n\t\t\t\t.replace(/\\((.*)\\)/, \"-$1\") // replace bracketed values with negatives\n\t\t\t\t.replace(regex, '')         // strip out any cruft\n\t\t\t\t.replace(decimal, '.')      // make sure decimal point is standard\n\t\t\t);\n\n\t\t// This will fail silently which may cause trouble, let's wait and see:\n\t\treturn !isNaN(unformatted) ? unformatted : 0;\n\t};\n\n\n\t/**\n\t * Implementation of toFixed() that treats floats more like decimals\n\t *\n\t * Fixes binary rounding issues (eg. (0.615).toFixed(2) === \"0.61\") that present\n\t * problems for accounting- and finance-related software.\n\t */\n\tvar toFixed = lib.toFixed = function(value, precision) {\n\t\tprecision = checkPrecision(precision, lib.settings.number.precision);\n\t\tvar power = Math.pow(10, precision);\n\n\t\t// Multiply up by precision, round accurately, then divide and use native toFixed():\n\t\treturn (Math.round(lib.unformat(value) * power) / power).toFixed(precision);\n\t};\n\n\n\t/**\n\t * Format a number, with comma-separated thousands and custom precision/decimal places\n\t * Alias: `accounting.format()`\n\t *\n\t * Localise by overriding the precision and thousand / decimal separators\n\t * 2nd parameter `precision` can be an object matching `settings.number`\n\t */\n\tvar formatNumber = lib.formatNumber = lib.format = function(number, precision, thousand, decimal) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val) {\n\t\t\t\treturn formatNumber(val, precision, thousand, decimal);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(precision) ? precision : {\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal\n\t\t\t\t}),\n\t\t\t\tlib.settings.number\n\t\t\t),\n\n\t\t\t// Clean up precision\n\t\t\tusePrecision = checkPrecision(opts.precision),\n\n\t\t\t// Do some calc:\n\t\t\tnegative = number < 0 ? \"-\" : \"\",\n\t\t\tbase = parseInt(toFixed(Math.abs(number || 0), usePrecision), 10) + \"\",\n\t\t\tmod = base.length > 3 ? base.length % 3 : 0;\n\n\t\t// Format the number:\n\t\treturn negative + (mod ? base.substr(0, mod) + opts.thousand : \"\") + base.substr(mod).replace(/(\\d{3})(?=\\d)/g, \"$1\" + opts.thousand) + (usePrecision ? opts.decimal + toFixed(Math.abs(number), usePrecision).split('.')[1] : \"\");\n\t};\n\n\n\t/**\n\t * Format a number into currency\n\t *\n\t * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n\t * defaults: (0, \"$\", 2, \",\", \".\", \"%s%v\")\n\t *\n\t * Localise by overriding the symbol, precision, thousand / decimal separators and format\n\t * Second param can be an object matching `settings.currency` which is the easiest way.\n\t *\n\t * To do: tidy up the parameters\n\t */\n\tvar formatMoney = lib.formatMoney = function(number, symbol, precision, thousand, decimal, format) {\n\t\t// Resursively format arrays:\n\t\tif (isArray(number)) {\n\t\t\treturn map(number, function(val){\n\t\t\t\treturn formatMoney(val, symbol, precision, thousand, decimal, format);\n\t\t\t});\n\t\t}\n\n\t\t// Clean up number:\n\t\tnumber = unformat(number);\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero):\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Choose which format to use for this value:\n\t\t\tuseFormat = number > 0 ? formats.pos : number < 0 ? formats.neg : formats.zero;\n\n\t\t// Return with currency symbol added:\n\t\treturn useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(number), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\t};\n\n\n\t/**\n\t * Format a list of numbers into an accounting column, padding with whitespace\n\t * to line up currency symbols, thousand separators and decimals places\n\t *\n\t * List should be an array of numbers\n\t * Second parameter can be an object containing keys that match the params\n\t *\n\t * Returns array of accouting-formatted number strings of same length\n\t *\n\t * NB: `white-space:pre` CSS rule is required on the list container to prevent\n\t * browsers from collapsing the whitespace in the output strings.\n\t */\n\tlib.formatColumn = function(list, symbol, precision, thousand, decimal, format) {\n\t\tif (!list) return [];\n\n\t\t// Build options object from second param (if object) or all params, extending defaults:\n\t\tvar opts = defaults(\n\t\t\t\t(isObject(symbol) ? symbol : {\n\t\t\t\t\tsymbol : symbol,\n\t\t\t\t\tprecision : precision,\n\t\t\t\t\tthousand : thousand,\n\t\t\t\t\tdecimal : decimal,\n\t\t\t\t\tformat : format\n\t\t\t\t}),\n\t\t\t\tlib.settings.currency\n\t\t\t),\n\n\t\t\t// Check format (returns object with pos, neg and zero), only need pos for now:\n\t\t\tformats = checkCurrencyFormat(opts.format),\n\n\t\t\t// Whether to pad at start of string or after currency symbol:\n\t\t\tpadAfterSymbol = formats.pos.indexOf(\"%s\") < formats.pos.indexOf(\"%v\") ? true : false,\n\n\t\t\t// Store value for the length of the longest string in the column:\n\t\t\tmaxLength = 0,\n\n\t\t\t// Format the list according to options, store the length of the longest string:\n\t\t\tformatted = map(list, function(val, i) {\n\t\t\t\tif (isArray(val)) {\n\t\t\t\t\t// Recursively format columns if list is a multi-dimensional array:\n\t\t\t\t\treturn lib.formatColumn(val, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// Clean up the value\n\t\t\t\t\tval = unformat(val);\n\n\t\t\t\t\t// Choose which format to use for this value (pos, neg or zero):\n\t\t\t\t\tvar useFormat = val > 0 ? formats.pos : val < 0 ? formats.neg : formats.zero,\n\n\t\t\t\t\t\t// Format this value, push into formatted list and save the length:\n\t\t\t\t\t\tfVal = useFormat.replace('%s', opts.symbol).replace('%v', formatNumber(Math.abs(val), checkPrecision(opts.precision), opts.thousand, opts.decimal));\n\n\t\t\t\t\tif (fVal.length > maxLength) maxLength = fVal.length;\n\t\t\t\t\treturn fVal;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Pad each number in the list and send back the column of numbers:\n\t\treturn map(formatted, function(val, i) {\n\t\t\t// Only if this is a string (not a nested array, which would have already been padded):\n\t\t\tif (isString(val) && val.length < maxLength) {\n\t\t\t\t// Depending on symbol position, pad after symbol or at index 0:\n\t\t\t\treturn padAfterSymbol ? val.replace(opts.symbol, opts.symbol+(new Array(maxLength - val.length + 1).join(\" \"))) : (new Array(maxLength - val.length + 1).join(\" \")) + val;\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t};\n\n\n\t/* --- Module Definition --- */\n\n\t// Export accounting for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `accounting` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = lib;\n\t\t}\n\t\texports.accounting = lib;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn lib;\n\t\t});\n\t} else {\n\t\t// Use accounting.noConflict to restore `accounting` back to its original value.\n\t\t// Returns a reference to the library's `accounting` object;\n\t\t// e.g. `var numbers = accounting.noConflict();`\n\t\tlib.noConflict = (function(oldAccounting) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `accounting` variable:\n\t\t\t\troot.accounting = oldAccounting;\n\t\t\t\t// Delete the noConflict method:\n\t\t\t\tlib.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn lib;\n\t\t\t};\n\t\t})(root.accounting);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['accounting'] = lib;\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n","var map = require(\"./map\");\n\nvar getCountryCode = function(localeString) {\n    var components = localeString.split(\"_\");\n    if (components.length == 2) {\n        return components.pop();\n    }\n    components = localeString.split(\"-\");\n    if (components.length == 2) {\n        return components.pop();\n    }\n    return localeString;\n}\n\nexports.getCurrency = function(locale) {\n    var countryCode = getCountryCode(locale).toUpperCase();\n    if (countryCode in map) {\n        return map[countryCode];\n    }\n    return null;\n}\n\nexports.getLocales = function(currencyCode) {\n    currencyCode = currencyCode.toUpperCase();\n    var locales = [];\n    for (countryCode in map) {\n        if (map[countryCode] === currencyCode) {\n            locales.push(countryCode);\n        }\n    }\n    return locales;\n}","module.exports={\n    \"version\": \"0.20.7\"\n}\n","\n\nvar Settings = function () {\n    this.defaultBlock = 'latest';\n    this.defaultAccount = undefined;\n};\n\nmodule.exports = Settings;\n\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file property.js\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\n\nvar Property = function (options) {\n    this.name = options.name;\n    this.getter = options.getter;\n    this.setter = options.setter;\n    this.outputFormatter = options.outputFormatter;\n    this.inputFormatter = options.inputFormatter;\n    this.requestManager = null;\n};\n\nProperty.prototype.setRequestManager = function (rm) {\n    this.requestManager = rm;\n};\n\n/**\n * Should be called to format input args of method\n *\n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nProperty.prototype.formatInput = function (arg) {\n    return this.inputFormatter ? this.inputFormatter(arg) : arg;\n};\n\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\nProperty.prototype.formatOutput = function (result) {\n    return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;\n};\n\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nProperty.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n\n/**\n * Should attach function to method\n *\n * @method attachToObject\n * @param {Object}\n * @param {Function}\n */\nProperty.prototype.attachToObject = function (obj) {\n    var proto = {\n        get: this.buildGet(),\n        enumerable: true\n    };\n\n    var names = this.name.split('.');\n    var name = names[0];\n    if (names.length > 1) {\n        obj[names[0]] = obj[names[0]] || {};\n        obj = obj[names[0]];\n        name = names[1];\n    }\n\n    Object.defineProperty(obj, name, proto);\n    obj[asyncGetterName(name)] = this.buildAsyncGet();\n};\n\nvar asyncGetterName = function (name) {\n    return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n};\n\nProperty.prototype.buildGet = function () {\n    var property = this;\n    return function get() {\n        return property.formatOutput(property.requestManager.send({\n            method: property.getter\n        }));\n    };\n};\n\nProperty.prototype.buildAsyncGet = function () {\n    var property = this;\n    var get = function (callback) {\n        property.requestManager.sendAsync({\n            method: property.getter\n        }, function (err, result) {\n            callback(err, property.formatOutput(result));\n        });\n    };\n    get.request = this.request.bind(this);\n    return get;\n};\n\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\nProperty.prototype.request = function () {\n    var payload = {\n        method: this.getter,\n        params: [],\n        callback: this.extractCallback(Array.prototype.slice.call(arguments))\n    };\n    payload.format = this.formatOutput.bind(this);\n    return payload;\n};\n\nmodule.exports = Property;\n\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file ipcprovider.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar utils = require('../utils/utils');\nvar errors = require('./errors');\n\n\nvar IpcProvider = function (path, net) {\n    var _this = this;\n    this.responseCallbacks = {};\n    this.path = path;\n    \n    this.connection = net.connect({path: this.path});\n\n    this.connection.on('error', function(e){\n        console.error('IPC Connection Error', e);\n        _this._timeout();\n    });\n\n    this.connection.on('end', function(){\n        _this._timeout();\n    }); \n\n\n    // LISTEN FOR CONNECTION RESPONSES\n    this.connection.on('data', function(data) {\n        /*jshint maxcomplexity: 6 */\n\n        _this._parseResponse(data.toString()).forEach(function(result){\n\n            var id = null;\n\n            // get the id which matches the returned id\n            if(utils.isArray(result)) {\n                result.forEach(function(load){\n                    if(_this.responseCallbacks[load.id])\n                        id = load.id;\n                });\n            } else {\n                id = result.id;\n            }\n\n            // fire the callback\n            if(_this.responseCallbacks[id]) {\n                _this.responseCallbacks[id](null, result);\n                delete _this.responseCallbacks[id];\n            }\n        });\n    });\n};\n\n/**\nWill parse the response and make an array out of it.\n\n@method _parseResponse\n@param {String} data\n*/\nIpcProvider.prototype._parseResponse = function(data) {\n    var _this = this,\n        returnValues = [];\n    \n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\n        .split('|--|');\n\n    dechunkedData.forEach(function(data){\n\n        // prepend the last chunk\n        if(_this.lastChunk)\n            data = _this.lastChunk + data;\n\n        var result = null;\n\n        try {\n            result = JSON.parse(data);\n\n        } catch(e) {\n\n            _this.lastChunk = data;\n\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function(){\n                _this._timeout();\n                throw errors.InvalidResponse(data);\n            }, 1000 * 15);\n\n            return;\n        }\n\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n\n        if(result)\n            returnValues.push(result);\n    });\n\n    return returnValues;\n};\n\n\n/**\nGet the adds a callback to the responseCallbacks object,\nwhich will be called if a response matching the response Id will arrive.\n\n@method _addResponseCallback\n*/\nIpcProvider.prototype._addResponseCallback = function(payload, callback) {\n    var id = payload.id || payload[0].id;\n    var method = payload.method || payload[0].method;\n\n    this.responseCallbacks[id] = callback;\n    this.responseCallbacks[id].method = method;\n};\n\n/**\nTimeout all requests when the end/error event is fired\n\n@method _timeout\n*/\nIpcProvider.prototype._timeout = function() {\n    for(var key in this.responseCallbacks) {\n        if(this.responseCallbacks.hasOwnProperty(key)){\n            this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\n            delete this.responseCallbacks[key];\n        }\n    }\n};\n\n\n/**\nCheck if the current connection is still valid.\n\n@method isConnected\n*/\nIpcProvider.prototype.isConnected = function() {\n    var _this = this;\n\n    // try reconnect, when connection is gone\n    if(!_this.connection.writable)\n        _this.connection.connect({path: _this.path});\n\n    return !!this.connection.writable;\n};\n\nIpcProvider.prototype.send = function (payload) {\n\n    if(this.connection.writeSync) {\n        var result;\n\n        // try reconnect, when connection is gone\n        if(!this.connection.writable)\n            this.connection.connect({path: this.path});\n\n        var data = this.connection.writeSync(JSON.stringify(payload));\n\n        try {\n            result = JSON.parse(data);\n        } catch(e) {\n            throw errors.InvalidResponse(data);                \n        }\n\n        return result;\n\n    } else {\n        throw new Error('You tried to send \"'+ payload.method +'\" synchronously. Synchronous requests are not supported by the IPC provider.');\n    }\n};\n\nIpcProvider.prototype.sendAsync = function (payload, callback) {\n    // try reconnect, when connection is gone\n    if(!this.connection.writable)\n        this.connection.connect({path: this.path});\n\n\n    this.connection.write(JSON.stringify(payload));\n    this._addResponseCallback(payload, callback);\n};\n\nmodule.exports = IpcProvider;\n\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file batch.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Jsonrpc = require('./jsonrpc');\nvar errors = require('./errors');\n\nvar Batch = function (web3) {\n    this.requestManager = web3._requestManager;\n    this.requests = [];\n};\n\n/**\n * Should be called to add create new request to batch request\n *\n * @method add\n * @param {Object} jsonrpc requet object\n */\nBatch.prototype.add = function (request) {\n    this.requests.push(request);\n};\n\n/**\n * Should be called to execute batch request\n *\n * @method execute\n */\nBatch.prototype.execute = function () {\n    var requests = this.requests;\n    this.requestManager.sendBatch(requests, function (err, results) {\n        results = results || [];\n        requests.map(function (request, index) {\n            return results[index] || {};\n        }).forEach(function (result, index) {\n            if (requests[index].callback) {\n\n                if (!Jsonrpc.isValidResponse(result)) {\n                    return requests[index].callback(errors.InvalidResponse(result));\n                }\n\n                requests[index].callback(null, (requests[index].format ? requests[index].format(result.result) : result.result));\n            }\n        });\n    }); \n};\n\nmodule.exports = Batch;\n\n","/*! bignumber.js v2.0.7 https://github.com/MikeMcl/bignumber.js/LICENCE */\n\n;(function (global) {\n    'use strict';\n\n    /*\n      bignumber.js v2.0.7\n      A JavaScript library for arbitrary-precision arithmetic.\n      https://github.com/MikeMcl/bignumber.js\n      Copyright (c) 2015 Michael Mclaughlin <M8ch88l@gmail.com>\n      MIT Expat Licence\n    */\n\n\n    var BigNumber, crypto, parseNumeric,\n        isNumeric = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n        mathceil = Math.ceil,\n        mathfloor = Math.floor,\n        notBool = ' not a boolean or binary digit',\n        roundingMode = 'rounding mode',\n        tooManyDigits = 'number type has more than 15 significant digits',\n        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\n        BASE = 1e14,\n        LOG_BASE = 14,\n        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\n        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\n        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\n        SQRT_BASE = 1e7,\n\n        /*\n         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\n         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an\n         * exception is thrown (if ERRORS is true).\n         */\n        MAX = 1E9;                                   // 0 to MAX_INT32\n\n\n    /*\n     * Create and return a BigNumber constructor.\n     */\n    function another(configObj) {\n        var div,\n\n            // id tracks the caller function, so its name can be included in error messages.\n            id = 0,\n            P = BigNumber.prototype,\n            ONE = new BigNumber(1),\n\n\n            /********************************* EDITABLE DEFAULTS **********************************/\n\n\n            /*\n             * The default values below must be integers within the inclusive ranges stated.\n             * The values can also be changed at run-time using BigNumber.config.\n             */\n\n            // The maximum number of decimal places for operations involving division.\n            DECIMAL_PLACES = 20,                     // 0 to MAX\n\n            /*\n             * The rounding mode used when rounding to the above decimal places, and when using\n             * toExponential, toFixed, toFormat and toPrecision, and round (default value).\n             * UP         0 Away from zero.\n             * DOWN       1 Towards zero.\n             * CEIL       2 Towards +Infinity.\n             * FLOOR      3 Towards -Infinity.\n             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n             */\n            ROUNDING_MODE = 4,                       // 0 to 8\n\n            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\n\n            // The exponent value at and beneath which toString returns exponential notation.\n            // Number type: -7\n            TO_EXP_NEG = -7,                         // 0 to -MAX\n\n            // The exponent value at and above which toString returns exponential notation.\n            // Number type: 21\n            TO_EXP_POS = 21,                         // 0 to MAX\n\n            // RANGE : [MIN_EXP, MAX_EXP]\n\n            // The minimum exponent value, beneath which underflow to zero occurs.\n            // Number type: -324  (5e-324)\n            MIN_EXP = -1e7,                          // -1 to -MAX\n\n            // The maximum exponent value, above which overflow to Infinity occurs.\n            // Number type:  308  (1.7976931348623157e+308)\n            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\n            MAX_EXP = 1e7,                           // 1 to MAX\n\n            // Whether BigNumber Errors are ever thrown.\n            ERRORS = true,                           // true or false\n\n            // Change to intValidatorNoErrors if ERRORS is false.\n            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors\n\n            // Whether to use cryptographically-secure random number generation, if available.\n            CRYPTO = false,                          // true or false\n\n            /*\n             * The modulo mode used when calculating the modulus: a mod n.\n             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n             * The remainder (r) is calculated as: r = a - n * q.\n             *\n             * UP        0 The remainder is positive if the dividend is negative, else is negative.\n             * DOWN      1 The remainder has the same sign as the dividend.\n             *             This modulo mode is commonly known as 'truncated division' and is\n             *             equivalent to (a % n) in JavaScript.\n             * FLOOR     3 The remainder has the same sign as the divisor (Python %).\n             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\n             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\n             *             The remainder is always positive.\n             *\n             * The truncated division, floored division, Euclidian division and IEEE 754 remainder\n             * modes are commonly used for the modulus operation.\n             * Although the other rounding modes can also be used, they may not give useful results.\n             */\n            MODULO_MODE = 1,                         // 0 to 9\n\n            // The maximum number of significant digits of the result of the toPower operation.\n            // If POW_PRECISION is 0, there will be unlimited significant digits.\n            POW_PRECISION = 100,                     // 0 to MAX\n\n            // The format specification used by the BigNumber.prototype.toFormat method.\n            FORMAT = {\n                decimalSeparator: '.',\n                groupSeparator: ',',\n                groupSize: 3,\n                secondaryGroupSize: 0,\n                fractionGroupSeparator: '\\xA0',      // non-breaking space\n                fractionGroupSize: 0\n            };\n\n\n        /******************************************************************************************/\n\n\n        // CONSTRUCTOR\n\n\n        /*\n         * The BigNumber constructor and exported function.\n         * Create and return a new instance of a BigNumber object.\n         *\n         * n {number|string|BigNumber} A numeric value.\n         * [b] {number} The base of n. Integer, 2 to 64 inclusive.\n         */\n        function BigNumber( n, b ) {\n            var c, e, i, num, len, str,\n                x = this;\n\n            // Enable constructor usage without new.\n            if ( !( x instanceof BigNumber ) ) {\n\n                // 'BigNumber() constructor call without new: {n}'\n                if (ERRORS) raise( 26, 'constructor call without new', n );\n                return new BigNumber( n, b );\n            }\n\n            // 'new BigNumber() base not an integer: {b}'\n            // 'new BigNumber() base out of range: {b}'\n            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {\n\n                // Duplicate.\n                if ( n instanceof BigNumber ) {\n                    x.s = n.s;\n                    x.e = n.e;\n                    x.c = ( n = n.c ) ? n.slice() : n;\n                    id = 0;\n                    return;\n                }\n\n                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {\n                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;\n\n                    // Fast path for integers.\n                    if ( n === ~~n ) {\n                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );\n                        x.e = e;\n                        x.c = [n];\n                        id = 0;\n                        return;\n                    }\n\n                    str = n + '';\n                } else {\n                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\n                }\n            } else {\n                b = b | 0;\n                str = n + '';\n\n                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.\n                // Allow exponential notation to be used with base 10 argument.\n                if ( b == 10 ) {\n                    x = new BigNumber( n instanceof BigNumber ? n : str );\n                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );\n                }\n\n                // Avoid potential interpretation of Infinity and NaN as base 44+ values.\n                // Any number in exponential form will fail due to the [Ee][+-].\n                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||\n                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +\n                    '(?:\\\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {\n                    return parseNumeric( x, str, num, b );\n                }\n\n                if (num) {\n                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;\n\n                    if ( ERRORS && str.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\n\n                        // 'new BigNumber() number type has more than 15 significant digits: {n}'\n                        raise( id, tooManyDigits, n );\n                    }\n\n                    // Prevent later check for length on converted number.\n                    num = false;\n                } else {\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\n                }\n\n                str = convertBase( str, 10, b, x.s );\n            }\n\n            // Decimal point?\n            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );\n\n            // Exponential form?\n            if ( ( i = str.search( /e/i ) ) > 0 ) {\n\n                // Determine exponent.\n                if ( e < 0 ) e = i;\n                e += +str.slice( i + 1 );\n                str = str.substring( 0, i );\n            } else if ( e < 0 ) {\n\n                // Integer.\n                e = str.length;\n            }\n\n            // Determine leading zeros.\n            for ( i = 0; str.charCodeAt(i) === 48; i++ );\n\n            // Determine trailing zeros.\n            for ( len = str.length; str.charCodeAt(--len) === 48; );\n            str = str.slice( i, len + 1 );\n\n            if (str) {\n                len = str.length;\n\n                // Disallow numbers with over 15 significant digits if number type.\n                // 'new BigNumber() number type has more than 15 significant digits: {n}'\n                if ( num && ERRORS && len > 15 ) raise( id, tooManyDigits, x.s * n );\n\n                e = e - i - 1;\n\n                 // Overflow?\n                if ( e > MAX_EXP ) {\n\n                    // Infinity.\n                    x.c = x.e = null;\n\n                // Underflow?\n                } else if ( e < MIN_EXP ) {\n\n                    // Zero.\n                    x.c = [ x.e = 0 ];\n                } else {\n                    x.e = e;\n                    x.c = [];\n\n                    // Transform base\n\n                    // e is the base 10 exponent.\n                    // i is where to slice str to get the first element of the coefficient array.\n                    i = ( e + 1 ) % LOG_BASE;\n                    if ( e < 0 ) i += LOG_BASE;\n\n                    if ( i < len ) {\n                        if (i) x.c.push( +str.slice( 0, i ) );\n\n                        for ( len -= LOG_BASE; i < len; ) {\n                            x.c.push( +str.slice( i, i += LOG_BASE ) );\n                        }\n\n                        str = str.slice(i);\n                        i = LOG_BASE - str.length;\n                    } else {\n                        i -= len;\n                    }\n\n                    for ( ; i--; str += '0' );\n                    x.c.push( +str );\n                }\n            } else {\n\n                // Zero.\n                x.c = [ x.e = 0 ];\n            }\n\n            id = 0;\n        }\n\n\n        // CONSTRUCTOR PROPERTIES\n\n\n        BigNumber.another = another;\n\n        BigNumber.ROUND_UP = 0;\n        BigNumber.ROUND_DOWN = 1;\n        BigNumber.ROUND_CEIL = 2;\n        BigNumber.ROUND_FLOOR = 3;\n        BigNumber.ROUND_HALF_UP = 4;\n        BigNumber.ROUND_HALF_DOWN = 5;\n        BigNumber.ROUND_HALF_EVEN = 6;\n        BigNumber.ROUND_HALF_CEIL = 7;\n        BigNumber.ROUND_HALF_FLOOR = 8;\n        BigNumber.EUCLID = 9;\n\n\n        /*\n         * Configure infrequently-changing library-wide settings.\n         *\n         * Accept an object or an argument list, with one or many of the following properties or\n         * parameters respectively:\n         *\n         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive\n         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive\n         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or\n         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]\n         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or\n         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]\n         *   ERRORS          {boolean|number}   true, false, 1 or 0\n         *   CRYPTO          {boolean|number}   true, false, 1 or 0\n         *   MODULO_MODE     {number}           0 to 9 inclusive\n         *   POW_PRECISION   {number}           0 to MAX inclusive\n         *   FORMAT          {object}           See BigNumber.prototype.toFormat\n         *      decimalSeparator       {string}\n         *      groupSeparator         {string}\n         *      groupSize              {number}\n         *      secondaryGroupSize     {number}\n         *      fractionGroupSeparator {string}\n         *      fractionGroupSize      {number}\n         *\n         * (The values assigned to the above FORMAT object properties are not checked for validity.)\n         *\n         * E.g.\n         * BigNumber.config(20, 4) is equivalent to\n         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\n         *\n         * Ignore properties/parameters set to null or undefined.\n         * Return an object with the properties current values.\n         */\n        BigNumber.config = function () {\n            var v, p,\n                i = 0,\n                r = {},\n                a = arguments,\n                o = a[0],\n                has = o && typeof o == 'object'\n                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }\n                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };\n\n            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\n            // 'config() DECIMAL_PLACES not an integer: {v}'\n            // 'config() DECIMAL_PLACES out of range: {v}'\n            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {\n                DECIMAL_PLACES = v | 0;\n            }\n            r[p] = DECIMAL_PLACES;\n\n            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\n            // 'config() ROUNDING_MODE not an integer: {v}'\n            // 'config() ROUNDING_MODE out of range: {v}'\n            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {\n                ROUNDING_MODE = v | 0;\n            }\n            r[p] = ROUNDING_MODE;\n\n            // EXPONENTIAL_AT {number|number[]}\n            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].\n            // 'config() EXPONENTIAL_AT not an integer: {v}'\n            // 'config() EXPONENTIAL_AT out of range: {v}'\n            if ( has( p = 'EXPONENTIAL_AT' ) ) {\n\n                if ( isArray(v) ) {\n                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {\n                        TO_EXP_NEG = v[0] | 0;\n                        TO_EXP_POS = v[1] | 0;\n                    }\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\n                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );\n                }\n            }\n            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];\n\n            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\n            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\n            // 'config() RANGE not an integer: {v}'\n            // 'config() RANGE cannot be zero: {v}'\n            // 'config() RANGE out of range: {v}'\n            if ( has( p = 'RANGE' ) ) {\n\n                if ( isArray(v) ) {\n                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {\n                        MIN_EXP = v[0] | 0;\n                        MAX_EXP = v[1] | 0;\n                    }\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\n                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );\n                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );\n                }\n            }\n            r[p] = [ MIN_EXP, MAX_EXP ];\n\n            // ERRORS {boolean|number} true, false, 1 or 0.\n            // 'config() ERRORS not a boolean or binary digit: {v}'\n            if ( has( p = 'ERRORS' ) ) {\n\n                if ( v === !!v || v === 1 || v === 0 ) {\n                    id = 0;\n                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;\n                } else if (ERRORS) {\n                    raise( 2, p + notBool, v );\n                }\n            }\n            r[p] = ERRORS;\n\n            // CRYPTO {boolean|number} true, false, 1 or 0.\n            // 'config() CRYPTO not a boolean or binary digit: {v}'\n            // 'config() crypto unavailable: {crypto}'\n            if ( has( p = 'CRYPTO' ) ) {\n\n                if ( v === !!v || v === 1 || v === 0 ) {\n                    CRYPTO = !!( v && crypto && typeof crypto == 'object' );\n                    if ( v && !CRYPTO && ERRORS ) raise( 2, 'crypto unavailable', crypto );\n                } else if (ERRORS) {\n                    raise( 2, p + notBool, v );\n                }\n            }\n            r[p] = CRYPTO;\n\n            // MODULO_MODE {number} Integer, 0 to 9 inclusive.\n            // 'config() MODULO_MODE not an integer: {v}'\n            // 'config() MODULO_MODE out of range: {v}'\n            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {\n                MODULO_MODE = v | 0;\n            }\n            r[p] = MODULO_MODE;\n\n            // POW_PRECISION {number} Integer, 0 to MAX inclusive.\n            // 'config() POW_PRECISION not an integer: {v}'\n            // 'config() POW_PRECISION out of range: {v}'\n            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {\n                POW_PRECISION = v | 0;\n            }\n            r[p] = POW_PRECISION;\n\n            // FORMAT {object}\n            // 'config() FORMAT not an object: {v}'\n            if ( has( p = 'FORMAT' ) ) {\n\n                if ( typeof v == 'object' ) {\n                    FORMAT = v;\n                } else if (ERRORS) {\n                    raise( 2, p + ' not an object', v );\n                }\n            }\n            r[p] = FORMAT;\n\n            return r;\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the maximum of the arguments.\n         *\n         * arguments {number|string|BigNumber}\n         */\n        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };\n\n\n        /*\n         * Return a new BigNumber whose value is the minimum of the arguments.\n         *\n         * arguments {number|string|BigNumber}\n         */\n        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };\n\n\n        /*\n         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\n         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\n         * zeros are produced).\n         *\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\n         *\n         * 'random() decimal places not an integer: {dp}'\n         * 'random() decimal places out of range: {dp}'\n         * 'random() crypto unavailable: {crypto}'\n         */\n        BigNumber.random = (function () {\n            var pow2_53 = 0x20000000000000;\n\n            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\n            // Check if Math.random() produces more than 32 bits of randomness.\n            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\n            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\n            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\n              ? function () { return mathfloor( Math.random() * pow2_53 ); }\n              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\n                  (Math.random() * 0x800000 | 0); };\n\n            return function (dp) {\n                var a, b, e, k, v,\n                    i = 0,\n                    c = [],\n                    rand = new BigNumber(ONE);\n\n                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;\n                k = mathceil( dp / LOG_BASE );\n\n                if (CRYPTO) {\n\n                    // Browsers supporting crypto.getRandomValues.\n                    if ( crypto && crypto.getRandomValues ) {\n\n                        a = crypto.getRandomValues( new Uint32Array( k *= 2 ) );\n\n                        for ( ; i < k; ) {\n\n                            // 53 bits:\n                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\n                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\n                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\n                            //                                     11111 11111111 11111111\n                            // 0x20000 is 2^21.\n                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\n\n                            // Rejection sampling:\n                            // 0 <= v < 9007199254740992\n                            // Probability that v >= 9e15, is\n                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\n                            if ( v >= 9e15 ) {\n                                b = crypto.getRandomValues( new Uint32Array(2) );\n                                a[i] = b[0];\n                                a[i + 1] = b[1];\n                            } else {\n\n                                // 0 <= v <= 8999999999999999\n                                // 0 <= (v % 1e14) <= 99999999999999\n                                c.push( v % 1e14 );\n                                i += 2;\n                            }\n                        }\n                        i = k / 2;\n\n                    // Node.js supporting crypto.randomBytes.\n                    } else if ( crypto && crypto.randomBytes ) {\n\n                        // buffer\n                        a = crypto.randomBytes( k *= 7 );\n\n                        for ( ; i < k; ) {\n\n                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\n                            // 0x100000000 is 2^32, 0x1000000 is 2^24\n                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\n                            // 0 <= v < 9007199254740992\n                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +\n                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +\n                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];\n\n                            if ( v >= 9e15 ) {\n                                crypto.randomBytes(7).copy( a, i );\n                            } else {\n\n                                // 0 <= (v % 1e14) <= 99999999999999\n                                c.push( v % 1e14 );\n                                i += 7;\n                            }\n                        }\n                        i = k / 7;\n                    } else if (ERRORS) {\n                        raise( 14, 'crypto unavailable', crypto );\n                    }\n                }\n\n                // Use Math.random: CRYPTO is false or crypto is unavailable and ERRORS is false.\n                if (!i) {\n\n                    for ( ; i < k; ) {\n                        v = random53bitInt();\n                        if ( v < 9e15 ) c[i++] = v % 1e14;\n                    }\n                }\n\n                k = c[--i];\n                dp %= LOG_BASE;\n\n                // Convert trailing digits to zeros according to dp.\n                if ( k && dp ) {\n                    v = POWS_TEN[LOG_BASE - dp];\n                    c[i] = mathfloor( k / v ) * v;\n                }\n\n                // Remove trailing elements which are zero.\n                for ( ; c[i] === 0; c.pop(), i-- );\n\n                // Zero?\n                if ( i < 0 ) {\n                    c = [ e = 0 ];\n                } else {\n\n                    // Remove leading elements which are zero and adjust exponent accordingly.\n                    for ( e = -1 ; c[0] === 0; c.shift(), e -= LOG_BASE);\n\n                    // Count the digits of the first element of c to determine leading zeros, and...\n                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);\n\n                    // adjust the exponent accordingly.\n                    if ( i < LOG_BASE ) e -= LOG_BASE - i;\n                }\n\n                rand.e = e;\n                rand.c = c;\n                return rand;\n            };\n        })();\n\n\n        // PRIVATE FUNCTIONS\n\n\n        // Convert a numeric string of baseIn to a numeric string of baseOut.\n        function convertBase( str, baseOut, baseIn, sign ) {\n            var d, e, k, r, x, xc, y,\n                i = str.indexOf( '.' ),\n                dp = DECIMAL_PLACES,\n                rm = ROUNDING_MODE;\n\n            if ( baseIn < 37 ) str = str.toLowerCase();\n\n            // Non-integer.\n            if ( i >= 0 ) {\n                k = POW_PRECISION;\n\n                // Unlimited precision.\n                POW_PRECISION = 0;\n                str = str.replace( '.', '' );\n                y = new BigNumber(baseIn);\n                x = y.pow( str.length - i );\n                POW_PRECISION = k;\n\n                // Convert str as if an integer, then restore the fraction part by dividing the\n                // result by its base raised to a power.\n                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );\n                y.e = y.c.length;\n            }\n\n            // Convert the number as integer.\n            xc = toBaseOut( str, baseIn, baseOut );\n            e = k = xc.length;\n\n            // Remove trailing zeros.\n            for ( ; xc[--k] == 0; xc.pop() );\n            if ( !xc[0] ) return '0';\n\n            if ( i < 0 ) {\n                --e;\n            } else {\n                x.c = xc;\n                x.e = e;\n\n                // sign is needed for correct rounding.\n                x.s = sign;\n                x = div( x, y, dp, rm, baseOut );\n                xc = x.c;\n                r = x.r;\n                e = x.e;\n            }\n\n            d = e + dp + 1;\n\n            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.\n            i = xc[d];\n            k = baseOut / 2;\n            r = r || d < 0 || xc[d + 1] != null;\n\n            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\n                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\n                         rm == ( x.s < 0 ? 8 : 7 ) );\n\n            if ( d < 1 || !xc[0] ) {\n\n                // 1^-dp or 0.\n                str = r ? toFixedPoint( '1', -dp ) : '0';\n            } else {\n                xc.length = d;\n\n                if (r) {\n\n                    // Rounding up may mean the previous digit has to be rounded up and so on.\n                    for ( --baseOut; ++xc[--d] > baseOut; ) {\n                        xc[d] = 0;\n\n                        if ( !d ) {\n                            ++e;\n                            xc.unshift(1);\n                        }\n                    }\n                }\n\n                // Determine trailing zeros.\n                for ( k = xc.length; !xc[--k]; );\n\n                // E.g. [4, 11, 15] becomes 4bf.\n                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );\n                str = toFixedPoint( str, e );\n            }\n\n            // The caller will add the sign.\n            return str;\n        }\n\n\n        // Perform division in the specified base. Called by div and convertBase.\n        div = (function () {\n\n            // Assume non-zero x and k.\n            function multiply( x, k, base ) {\n                var m, temp, xlo, xhi,\n                    carry = 0,\n                    i = x.length,\n                    klo = k % SQRT_BASE,\n                    khi = k / SQRT_BASE | 0;\n\n                for ( x = x.slice(); i--; ) {\n                    xlo = x[i] % SQRT_BASE;\n                    xhi = x[i] / SQRT_BASE | 0;\n                    m = khi * xlo + xhi * klo;\n                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;\n                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;\n                    x[i] = temp % base;\n                }\n\n                if (carry) x.unshift(carry);\n\n                return x;\n            }\n\n            function compare( a, b, aL, bL ) {\n                var i, cmp;\n\n                if ( aL != bL ) {\n                    cmp = aL > bL ? 1 : -1;\n                } else {\n\n                    for ( i = cmp = 0; i < aL; i++ ) {\n\n                        if ( a[i] != b[i] ) {\n                            cmp = a[i] > b[i] ? 1 : -1;\n                            break;\n                        }\n                    }\n                }\n                return cmp;\n            }\n\n            function subtract( a, b, aL, base ) {\n                var i = 0;\n\n                // Subtract b from a.\n                for ( ; aL--; ) {\n                    a[aL] -= i;\n                    i = a[aL] < b[aL] ? 1 : 0;\n                    a[aL] = i * base + a[aL] - b[aL];\n                }\n\n                // Remove leading zeros.\n                for ( ; !a[0] && a.length > 1; a.shift() );\n            }\n\n            // x: dividend, y: divisor.\n            return function ( x, y, dp, rm, base ) {\n                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\n                    yL, yz,\n                    s = x.s == y.s ? 1 : -1,\n                    xc = x.c,\n                    yc = y.c;\n\n                // Either NaN, Infinity or 0?\n                if ( !xc || !xc[0] || !yc || !yc[0] ) {\n\n                    return new BigNumber(\n\n                      // Return NaN if either NaN, or both Infinity or 0.\n                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :\n\n                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\n                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0\n                    );\n                }\n\n                q = new BigNumber(s);\n                qc = q.c = [];\n                e = x.e - y.e;\n                s = dp + e + 1;\n\n                if ( !base ) {\n                    base = BASE;\n                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );\n                    s = s / LOG_BASE | 0;\n                }\n\n                // Result exponent may be one less then the current value of e.\n                // The coefficients of the BigNumbers from convertBase may have trailing zeros.\n                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );\n                if ( yc[i] > ( xc[i] || 0 ) ) e--;\n\n                if ( s < 0 ) {\n                    qc.push(1);\n                    more = true;\n                } else {\n                    xL = xc.length;\n                    yL = yc.length;\n                    i = 0;\n                    s += 2;\n\n                    // Normalise xc and yc so highest order digit of yc is >= base / 2.\n\n                    n = mathfloor( base / ( yc[0] + 1 ) );\n\n                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.\n                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {\n                    if ( n > 1 ) {\n                        yc = multiply( yc, n, base );\n                        xc = multiply( xc, n, base );\n                        yL = yc.length;\n                        xL = xc.length;\n                    }\n\n                    xi = yL;\n                    rem = xc.slice( 0, yL );\n                    remL = rem.length;\n\n                    // Add zeros to make remainder as long as divisor.\n                    for ( ; remL < yL; rem[remL++] = 0 );\n                    yz = yc.slice();\n                    yz.unshift(0);\n                    yc0 = yc[0];\n                    if ( yc[1] >= base / 2 ) yc0++;\n                    // Not necessary, but to prevent trial digit n > base, when using base 3.\n                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;\n\n                    do {\n                        n = 0;\n\n                        // Compare divisor and remainder.\n                        cmp = compare( yc, rem, yL, remL );\n\n                        // If divisor < remainder.\n                        if ( cmp < 0 ) {\n\n                            // Calculate trial digit, n.\n\n                            rem0 = rem[0];\n                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );\n\n                            // n is how many times the divisor goes into the current remainder.\n                            n = mathfloor( rem0 / yc0 );\n\n                            //  Algorithm:\n                            //  1. product = divisor * trial digit (n)\n                            //  2. if product > remainder: product -= divisor, n--\n                            //  3. remainder -= product\n                            //  4. if product was < remainder at 2:\n                            //    5. compare new remainder and divisor\n                            //    6. If remainder > divisor: remainder -= divisor, n++\n\n                            if ( n > 1 ) {\n\n                                // n may be > base only when base is 3.\n                                if (n >= base) n = base - 1;\n\n                                // product = divisor * trial digit.\n                                prod = multiply( yc, n, base );\n                                prodL = prod.length;\n                                remL = rem.length;\n\n                                // Compare product and remainder.\n                                // If product > remainder.\n                                // Trial digit n too high.\n                                // n is 1 too high about 5% of the time, and is not known to have\n                                // ever been more than 1 too high.\n                                while ( compare( prod, rem, prodL, remL ) == 1 ) {\n                                    n--;\n\n                                    // Subtract divisor from product.\n                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );\n                                    prodL = prod.length;\n                                    cmp = 1;\n                                }\n                            } else {\n\n                                // n is 0 or 1, cmp is -1.\n                                // If n is 0, there is no need to compare yc and rem again below,\n                                // so change cmp to 1 to avoid it.\n                                // If n is 1, leave cmp as -1, so yc and rem are compared again.\n                                if ( n == 0 ) {\n\n                                    // divisor < remainder, so n must be at least 1.\n                                    cmp = n = 1;\n                                }\n\n                                // product = divisor\n                                prod = yc.slice();\n                                prodL = prod.length;\n                            }\n\n                            if ( prodL < remL ) prod.unshift(0);\n\n                            // Subtract product from remainder.\n                            subtract( rem, prod, remL, base );\n                            remL = rem.length;\n\n                             // If product was < remainder.\n                            if ( cmp == -1 ) {\n\n                                // Compare divisor and new remainder.\n                                // If divisor < new remainder, subtract divisor from remainder.\n                                // Trial digit n too low.\n                                // n is 1 too low about 5% of the time, and very rarely 2 too low.\n                                while ( compare( yc, rem, yL, remL ) < 1 ) {\n                                    n++;\n\n                                    // Subtract divisor from remainder.\n                                    subtract( rem, yL < remL ? yz : yc, remL, base );\n                                    remL = rem.length;\n                                }\n                            }\n                        } else if ( cmp === 0 ) {\n                            n++;\n                            rem = [0];\n                        } // else cmp === 1 and n will be 0\n\n                        // Add the next digit, n, to the result array.\n                        qc[i++] = n;\n\n                        // Update the remainder.\n                        if ( rem[0] ) {\n                            rem[remL++] = xc[xi] || 0;\n                        } else {\n                            rem = [ xc[xi] ];\n                            remL = 1;\n                        }\n                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );\n\n                    more = rem[0] != null;\n\n                    // Leading zero?\n                    if ( !qc[0] ) qc.shift();\n                }\n\n                if ( base == BASE ) {\n\n                    // To calculate q.e, first get the number of digits of qc[0].\n                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );\n                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );\n\n                // Caller is convertBase.\n                } else {\n                    q.e = e;\n                    q.r = +more;\n                }\n\n                return q;\n            };\n        })();\n\n\n        /*\n         * Return a string representing the value of BigNumber n in fixed-point or exponential\n         * notation rounded to the specified decimal places or significant digits.\n         *\n         * n is a BigNumber.\n         * i is the index of the last digit required (i.e. the digit that may be rounded up).\n         * rm is the rounding mode.\n         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.\n         */\n        function format( n, i, rm, caller ) {\n            var c0, e, ne, len, str;\n\n            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )\n              ? rm | 0 : ROUNDING_MODE;\n\n            if ( !n.c ) return n.toString();\n            c0 = n.c[0];\n            ne = n.e;\n\n            if ( i == null ) {\n                str = coeffToString( n.c );\n                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG\n                  ? toExponential( str, ne )\n                  : toFixedPoint( str, ne );\n            } else {\n                n = round( new BigNumber(n), i, rm );\n\n                // n.e may have changed if the value was rounded up.\n                e = n.e;\n\n                str = coeffToString( n.c );\n                len = str.length;\n\n                // toPrecision returns exponential notation if the number of significant digits\n                // specified is less than the number of digits necessary to represent the integer\n                // part of the value in fixed-point notation.\n\n                // Exponential notation.\n                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {\n\n                    // Append zeros?\n                    for ( ; len < i; str += '0', len++ );\n                    str = toExponential( str, e );\n\n                // Fixed-point notation.\n                } else {\n                    i -= ne;\n                    str = toFixedPoint( str, e );\n\n                    // Append zeros?\n                    if ( e + 1 > len ) {\n                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );\n                    } else {\n                        i += e - len;\n                        if ( i > 0 ) {\n                            if ( e + 1 == len ) str += '.';\n                            for ( ; i--; str += '0' );\n                        }\n                    }\n                }\n            }\n\n            return n.s < 0 && c0 ? '-' + str : str;\n        }\n\n\n        // Handle BigNumber.max and BigNumber.min.\n        function maxOrMin( args, method ) {\n            var m, n,\n                i = 0;\n\n            if ( isArray( args[0] ) ) args = args[0];\n            m = new BigNumber( args[0] );\n\n            for ( ; ++i < args.length; ) {\n                n = new BigNumber( args[i] );\n\n                // If any number is NaN, return NaN.\n                if ( !n.s ) {\n                    m = n;\n                    break;\n                } else if ( method.call( m, n ) ) {\n                    m = n;\n                }\n            }\n\n            return m;\n        }\n\n\n        /*\n         * Return true if n is an integer in range, otherwise throw.\n         * Use for argument validation when ERRORS is true.\n         */\n        function intValidatorWithErrors( n, min, max, caller, name ) {\n            if ( n < min || n > max || n != truncate(n) ) {\n                raise( caller, ( name || 'decimal places' ) +\n                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );\n            }\n\n            return true;\n        }\n\n\n        /*\n         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\n         * Called by minus, plus and times.\n         */\n        function normalise( n, c, e ) {\n            var i = 1,\n                j = c.length;\n\n             // Remove trailing zeros.\n            for ( ; !c[--j]; c.pop() );\n\n            // Calculate the base 10 exponent. First get the number of digits of c[0].\n            for ( j = c[0]; j >= 10; j /= 10, i++ );\n\n            // Overflow?\n            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {\n\n                // Infinity.\n                n.c = n.e = null;\n\n            // Underflow?\n            } else if ( e < MIN_EXP ) {\n\n                // Zero.\n                n.c = [ n.e = 0 ];\n            } else {\n                n.e = e;\n                n.c = c;\n            }\n\n            return n;\n        }\n\n\n        // Handle values that fail the validity test in BigNumber.\n        parseNumeric = (function () {\n            var basePrefix = /^(-?)0([xbo])/i,\n                dotAfter = /^([^.]+)\\.$/,\n                dotBefore = /^\\.([^.]+)$/,\n                isInfinityOrNaN = /^-?(Infinity|NaN)$/,\n                whitespaceOrPlus = /^\\s*\\+|^\\s+|\\s+$/g;\n\n            return function ( x, str, num, b ) {\n                var base,\n                    s = num ? str : str.replace( whitespaceOrPlus, '' );\n\n                // No exception on ±Infinity or NaN.\n                if ( isInfinityOrNaN.test(s) ) {\n                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\n                } else {\n                    if ( !num ) {\n\n                        // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\n                        s = s.replace( basePrefix, function ( m, p1, p2 ) {\n                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\n                            return !b || b == base ? p1 : m;\n                        });\n\n                        if (b) {\n                            base = b;\n\n                            // E.g. '1.' to '1', '.1' to '0.1'\n                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );\n                        }\n\n                        if ( str != s ) return new BigNumber( s, base );\n                    }\n\n                    // 'new BigNumber() not a number: {n}'\n                    // 'new BigNumber() not a base {b} number: {n}'\n                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );\n                    x.s = null;\n                }\n\n                x.c = x.e = null;\n                id = 0;\n            }\n        })();\n\n\n        // Throw a BigNumber Error.\n        function raise( caller, msg, val ) {\n            var error = new Error( [\n                'new BigNumber',     // 0\n                'cmp',               // 1\n                'config',            // 2\n                'div',               // 3\n                'divToInt',          // 4\n                'eq',                // 5\n                'gt',                // 6\n                'gte',               // 7\n                'lt',                // 8\n                'lte',               // 9\n                'minus',             // 10\n                'mod',               // 11\n                'plus',              // 12\n                'precision',         // 13\n                'random',            // 14\n                'round',             // 15\n                'shift',             // 16\n                'times',             // 17\n                'toDigits',          // 18\n                'toExponential',     // 19\n                'toFixed',           // 20\n                'toFormat',          // 21\n                'toFraction',        // 22\n                'pow',               // 23\n                'toPrecision',       // 24\n                'toString',          // 25\n                'BigNumber'          // 26\n            ][caller] + '() ' + msg + ': ' + val );\n\n            error.name = 'BigNumber Error';\n            id = 0;\n            throw error;\n        }\n\n\n        /*\n         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\n         * If r is truthy, it is known that there are more digits after the rounding digit.\n         */\n        function round( x, sd, rm, r ) {\n            var d, i, j, k, n, ni, rd,\n                xc = x.c,\n                pows10 = POWS_TEN;\n\n            // if x is not Infinity or NaN...\n            if (xc) {\n\n                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\n                // n is a base 1e14 number, the value of the element of array x.c containing rd.\n                // ni is the index of n within x.c.\n                // d is the number of digits of n.\n                // i is the index of rd within n including leading zeros.\n                // j is the actual index of rd within n (if < 0, rd is a leading zero).\n                out: {\n\n                    // Get the number of digits of the first element of xc.\n                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );\n                    i = sd - d;\n\n                    // If the rounding digit is in the first element of xc...\n                    if ( i < 0 ) {\n                        i += LOG_BASE;\n                        j = sd;\n                        n = xc[ ni = 0 ];\n\n                        // Get the rounding digit at index j of n.\n                        rd = n / pows10[ d - j - 1 ] % 10 | 0;\n                    } else {\n                        ni = mathceil( ( i + 1 ) / LOG_BASE );\n\n                        if ( ni >= xc.length ) {\n\n                            if (r) {\n\n                                // Needed by sqrt.\n                                for ( ; xc.length <= ni; xc.push(0) );\n                                n = rd = 0;\n                                d = 1;\n                                i %= LOG_BASE;\n                                j = i - LOG_BASE + 1;\n                            } else {\n                                break out;\n                            }\n                        } else {\n                            n = k = xc[ni];\n\n                            // Get the number of digits of n.\n                            for ( d = 1; k >= 10; k /= 10, d++ );\n\n                            // Get the index of rd within n.\n                            i %= LOG_BASE;\n\n                            // Get the index of rd within n, adjusted for leading zeros.\n                            // The number of leading zeros of n is given by LOG_BASE - d.\n                            j = i - LOG_BASE + d;\n\n                            // Get the rounding digit at index j of n.\n                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;\n                        }\n                    }\n\n                    r = r || sd < 0 ||\n\n                    // Are there any non-zero digits after the rounding digit?\n                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right\n                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\n                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );\n\n                    r = rm < 4\n                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\n                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&\n\n                        // Check whether the digit to the left of the rounding digit is odd.\n                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||\n                          rm == ( x.s < 0 ? 8 : 7 ) );\n\n                    if ( sd < 1 || !xc[0] ) {\n                        xc.length = 0;\n\n                        if (r) {\n\n                            // Convert sd to decimal places.\n                            sd -= x.e + 1;\n\n                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                            xc[0] = pows10[ sd % LOG_BASE ];\n                            x.e = -sd || 0;\n                        } else {\n\n                            // Zero.\n                            xc[0] = x.e = 0;\n                        }\n\n                        return x;\n                    }\n\n                    // Remove excess digits.\n                    if ( i == 0 ) {\n                        xc.length = ni;\n                        k = 1;\n                        ni--;\n                    } else {\n                        xc.length = ni + 1;\n                        k = pows10[ LOG_BASE - i ];\n\n                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n                        // j > 0 means i > number of leading zeros of n.\n                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;\n                    }\n\n                    // Round up?\n                    if (r) {\n\n                        for ( ; ; ) {\n\n                            // If the digit to be rounded up is in the first element of xc...\n                            if ( ni == 0 ) {\n\n                                // i will be the length of xc[0] before k is added.\n                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );\n                                j = xc[0] += k;\n                                for ( k = 1; j >= 10; j /= 10, k++ );\n\n                                // if i != k the length has increased.\n                                if ( i != k ) {\n                                    x.e++;\n                                    if ( xc[0] == BASE ) xc[0] = 1;\n                                }\n\n                                break;\n                            } else {\n                                xc[ni] += k;\n                                if ( xc[ni] != BASE ) break;\n                                xc[ni--] = 0;\n                                k = 1;\n                            }\n                        }\n                    }\n\n                    // Remove trailing zeros.\n                    for ( i = xc.length; xc[--i] === 0; xc.pop() );\n                }\n\n                // Overflow? Infinity.\n                if ( x.e > MAX_EXP ) {\n                    x.c = x.e = null;\n\n                // Underflow? Zero.\n                } else if ( x.e < MIN_EXP ) {\n                    x.c = [ x.e = 0 ];\n                }\n            }\n\n            return x;\n        }\n\n\n        // PROTOTYPE/INSTANCE METHODS\n\n\n        /*\n         * Return a new BigNumber whose value is the absolute value of this BigNumber.\n         */\n        P.absoluteValue = P.abs = function () {\n            var x = new BigNumber(this);\n            if ( x.s < 0 ) x.s = 1;\n            return x;\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\n         * number in the direction of Infinity.\n         */\n        P.ceil = function () {\n            return round( new BigNumber(this), this.e + 1, 2 );\n        };\n\n\n        /*\n         * Return\n         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\n         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\n         * 0 if they have the same value,\n         * or null if the value of either is NaN.\n         */\n        P.comparedTo = P.cmp = function ( y, b ) {\n            id = 1;\n            return compare( this, new BigNumber( y, b ) );\n        };\n\n\n        /*\n         * Return the number of decimal places of the value of this BigNumber, or null if the value\n         * of this BigNumber is ±Infinity or NaN.\n         */\n        P.decimalPlaces = P.dp = function () {\n            var n, v,\n                c = this.c;\n\n            if ( !c ) return null;\n            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;\n\n            // Subtract the number of trailing zeros of the last number.\n            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );\n            if ( n < 0 ) n = 0;\n\n            return n;\n        };\n\n\n        /*\n         *  n / 0 = I\n         *  n / N = N\n         *  n / I = 0\n         *  0 / n = 0\n         *  0 / 0 = N\n         *  0 / N = N\n         *  0 / I = 0\n         *  N / n = N\n         *  N / 0 = N\n         *  N / N = N\n         *  N / I = N\n         *  I / n = I\n         *  I / 0 = I\n         *  I / N = N\n         *  I / I = N\n         *\n         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\n         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\n         */\n        P.dividedBy = P.div = function ( y, b ) {\n            id = 3;\n            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the integer part of dividing the value of this\n         * BigNumber by the value of BigNumber(y, b).\n         */\n        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {\n            id = 4;\n            return div( this, new BigNumber( y, b ), 0, 1 );\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\n         * otherwise returns false.\n         */\n        P.equals = P.eq = function ( y, b ) {\n            id = 5;\n            return compare( this, new BigNumber( y, b ) ) === 0;\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\n         * number in the direction of -Infinity.\n         */\n        P.floor = function () {\n            return round( new BigNumber(this), this.e + 1, 3 );\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\n         * otherwise returns false.\n         */\n        P.greaterThan = P.gt = function ( y, b ) {\n            id = 6;\n            return compare( this, new BigNumber( y, b ) ) > 0;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is greater than or equal to the value of\n         * BigNumber(y, b), otherwise returns false.\n         */\n        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {\n            id = 7;\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;\n\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is a finite number, otherwise returns false.\n         */\n        P.isFinite = function () {\n            return !!this.c;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is an integer, otherwise return false.\n         */\n        P.isInteger = P.isInt = function () {\n            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is NaN, otherwise returns false.\n         */\n        P.isNaN = function () {\n            return !this.s;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is negative, otherwise returns false.\n         */\n        P.isNegative = P.isNeg = function () {\n            return this.s < 0;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.\n         */\n        P.isZero = function () {\n            return !!this.c && this.c[0] == 0;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\n         * otherwise returns false.\n         */\n        P.lessThan = P.lt = function ( y, b ) {\n            id = 8;\n            return compare( this, new BigNumber( y, b ) ) < 0;\n        };\n\n\n        /*\n         * Return true if the value of this BigNumber is less than or equal to the value of\n         * BigNumber(y, b), otherwise returns false.\n         */\n        P.lessThanOrEqualTo = P.lte = function ( y, b ) {\n            id = 9;\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;\n        };\n\n\n        /*\n         *  n - 0 = n\n         *  n - N = N\n         *  n - I = -I\n         *  0 - n = -n\n         *  0 - 0 = 0\n         *  0 - N = N\n         *  0 - I = -I\n         *  N - n = N\n         *  N - 0 = N\n         *  N - N = N\n         *  N - I = N\n         *  I - n = I\n         *  I - 0 = I\n         *  I - N = N\n         *  I - I = N\n         *\n         * Return a new BigNumber whose value is the value of this BigNumber minus the value of\n         * BigNumber(y, b).\n         */\n        P.minus = P.sub = function ( y, b ) {\n            var i, j, t, xLTy,\n                x = this,\n                a = x.s;\n\n            id = 10;\n            y = new BigNumber( y, b );\n            b = y.s;\n\n            // Either NaN?\n            if ( !a || !b ) return new BigNumber(NaN);\n\n            // Signs differ?\n            if ( a != b ) {\n                y.s = -b;\n                return x.plus(y);\n            }\n\n            var xe = x.e / LOG_BASE,\n                ye = y.e / LOG_BASE,\n                xc = x.c,\n                yc = y.c;\n\n            if ( !xe || !ye ) {\n\n                // Either Infinity?\n                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );\n\n                // Either zero?\n                if ( !xc[0] || !yc[0] ) {\n\n                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :\n\n                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\n                      ROUNDING_MODE == 3 ? -0 : 0 );\n                }\n            }\n\n            xe = bitFloor(xe);\n            ye = bitFloor(ye);\n            xc = xc.slice();\n\n            // Determine which is the bigger number.\n            if ( a = xe - ye ) {\n\n                if ( xLTy = a < 0 ) {\n                    a = -a;\n                    t = xc;\n                } else {\n                    ye = xe;\n                    t = yc;\n                }\n\n                t.reverse();\n\n                // Prepend zeros to equalise exponents.\n                for ( b = a; b--; t.push(0) );\n                t.reverse();\n            } else {\n\n                // Exponents equal. Check digit by digit.\n                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;\n\n                for ( a = b = 0; b < j; b++ ) {\n\n                    if ( xc[b] != yc[b] ) {\n                        xLTy = xc[b] < yc[b];\n                        break;\n                    }\n                }\n            }\n\n            // x < y? Point xc to the array of the bigger number.\n            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\n\n            b = ( j = yc.length ) - ( i = xc.length );\n\n            // Append zeros to xc if shorter.\n            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\n            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );\n            b = BASE - 1;\n\n            // Subtract yc from xc.\n            for ( ; j > a; ) {\n\n                if ( xc[--j] < yc[j] ) {\n                    for ( i = j; i && !xc[--i]; xc[i] = b );\n                    --xc[i];\n                    xc[j] += BASE;\n                }\n\n                xc[j] -= yc[j];\n            }\n\n            // Remove leading zeros and adjust exponent accordingly.\n            for ( ; xc[0] == 0; xc.shift(), --ye );\n\n            // Zero?\n            if ( !xc[0] ) {\n\n                // Following IEEE 754 (2008) 6.3,\n                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\n                y.s = ROUNDING_MODE == 3 ? -1 : 1;\n                y.c = [ y.e = 0 ];\n                return y;\n            }\n\n            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\n            // for finite x and y.\n            return normalise( y, xc, ye );\n        };\n\n\n        /*\n         *   n % 0 =  N\n         *   n % N =  N\n         *   n % I =  n\n         *   0 % n =  0\n         *  -0 % n = -0\n         *   0 % 0 =  N\n         *   0 % N =  N\n         *   0 % I =  0\n         *   N % n =  N\n         *   N % 0 =  N\n         *   N % N =  N\n         *   N % I =  N\n         *   I % n =  N\n         *   I % 0 =  N\n         *   I % N =  N\n         *   I % I =  N\n         *\n         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\n         * BigNumber(y, b). The result depends on the value of MODULO_MODE.\n         */\n        P.modulo = P.mod = function ( y, b ) {\n            var q, s,\n                x = this;\n\n            id = 11;\n            y = new BigNumber( y, b );\n\n            // Return NaN if x is Infinity or NaN, or y is NaN or zero.\n            if ( !x.c || !y.s || y.c && !y.c[0] ) {\n                return new BigNumber(NaN);\n\n            // Return x if y is Infinity or x is zero.\n            } else if ( !y.c || x.c && !x.c[0] ) {\n                return new BigNumber(x);\n            }\n\n            if ( MODULO_MODE == 9 ) {\n\n                // Euclidian division: q = sign(y) * floor(x / abs(y))\n                // r = x - qy    where  0 <= r < abs(y)\n                s = y.s;\n                y.s = 1;\n                q = div( x, y, 0, 3 );\n                y.s = s;\n                q.s *= s;\n            } else {\n                q = div( x, y, 0, MODULO_MODE );\n            }\n\n            return x.minus( q.times(y) );\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber negated,\n         * i.e. multiplied by -1.\n         */\n        P.negated = P.neg = function () {\n            var x = new BigNumber(this);\n            x.s = -x.s || null;\n            return x;\n        };\n\n\n        /*\n         *  n + 0 = n\n         *  n + N = N\n         *  n + I = I\n         *  0 + n = n\n         *  0 + 0 = 0\n         *  0 + N = N\n         *  0 + I = I\n         *  N + n = N\n         *  N + 0 = N\n         *  N + N = N\n         *  N + I = N\n         *  I + n = I\n         *  I + 0 = I\n         *  I + N = N\n         *  I + I = I\n         *\n         * Return a new BigNumber whose value is the value of this BigNumber plus the value of\n         * BigNumber(y, b).\n         */\n        P.plus = P.add = function ( y, b ) {\n            var t,\n                x = this,\n                a = x.s;\n\n            id = 12;\n            y = new BigNumber( y, b );\n            b = y.s;\n\n            // Either NaN?\n            if ( !a || !b ) return new BigNumber(NaN);\n\n            // Signs differ?\n             if ( a != b ) {\n                y.s = -b;\n                return x.minus(y);\n            }\n\n            var xe = x.e / LOG_BASE,\n                ye = y.e / LOG_BASE,\n                xc = x.c,\n                yc = y.c;\n\n            if ( !xe || !ye ) {\n\n                // Return ±Infinity if either ±Infinity.\n                if ( !xc || !yc ) return new BigNumber( a / 0 );\n\n                // Either zero?\n                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\n                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );\n            }\n\n            xe = bitFloor(xe);\n            ye = bitFloor(ye);\n            xc = xc.slice();\n\n            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\n            if ( a = xe - ye ) {\n                if ( a > 0 ) {\n                    ye = xe;\n                    t = yc;\n                } else {\n                    a = -a;\n                    t = xc;\n                }\n\n                t.reverse();\n                for ( ; a--; t.push(0) );\n                t.reverse();\n            }\n\n            a = xc.length;\n            b = yc.length;\n\n            // Point xc to the longer array, and b to the shorter length.\n            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;\n\n            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\n            for ( a = 0; b; ) {\n                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;\n                xc[b] %= BASE;\n            }\n\n            if (a) {\n                xc.unshift(a);\n                ++ye;\n            }\n\n            // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n            // ye = MAX_EXP + 1 possible\n            return normalise( y, xc, ye );\n        };\n\n\n        /*\n         * Return the number of significant digits of the value of this BigNumber.\n         *\n         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\n         */\n        P.precision = P.sd = function (z) {\n            var n, v,\n                x = this,\n                c = x.c;\n\n            // 'precision() argument not a boolean or binary digit: {z}'\n            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {\n                if (ERRORS) raise( 13, 'argument' + notBool, z );\n                if ( z != !!z ) z = null;\n            }\n\n            if ( !c ) return null;\n            v = c.length - 1;\n            n = v * LOG_BASE + 1;\n\n            if ( v = c[v] ) {\n\n                // Subtract the number of trailing zeros of the last element.\n                for ( ; v % 10 == 0; v /= 10, n-- );\n\n                // Add the number of digits of the first element.\n                for ( v = c[0]; v >= 10; v /= 10, n++ );\n            }\n\n            if ( z && x.e + 1 > n ) n = x.e + 1;\n\n            return n;\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\n         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if\n         * omitted.\n         *\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n         *\n         * 'round() decimal places out of range: {dp}'\n         * 'round() decimal places not an integer: {dp}'\n         * 'round() rounding mode not an integer: {rm}'\n         * 'round() rounding mode out of range: {rm}'\n         */\n        P.round = function ( dp, rm ) {\n            var n = new BigNumber(this);\n\n            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {\n                round( n, ~~dp + this.e + 1, rm == null ||\n                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );\n            }\n\n            return n;\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\n         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\n         *\n         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\n         *\n         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity\n         * otherwise.\n         *\n         * 'shift() argument not an integer: {k}'\n         * 'shift() argument out of range: {k}'\n         */\n        P.shift = function (k) {\n            var n = this;\n            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )\n\n              // k < 1e+21, or truncate(k) will produce exponential notation.\n              ? n.times( '1e' + truncate(k) )\n              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )\n                ? n.s * ( k < 0 ? 0 : 1 / 0 )\n                : n );\n        };\n\n\n        /*\n         *  sqrt(-n) =  N\n         *  sqrt( N) =  N\n         *  sqrt(-I) =  N\n         *  sqrt( I) =  I\n         *  sqrt( 0) =  0\n         *  sqrt(-0) = -0\n         *\n         * Return a new BigNumber whose value is the square root of the value of this BigNumber,\n         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\n         */\n        P.squareRoot = P.sqrt = function () {\n            var m, n, r, rep, t,\n                x = this,\n                c = x.c,\n                s = x.s,\n                e = x.e,\n                dp = DECIMAL_PLACES + 4,\n                half = new BigNumber('0.5');\n\n            // Negative/NaN/Infinity/zero?\n            if ( s !== 1 || !c || !c[0] ) {\n                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );\n            }\n\n            // Initial estimate.\n            s = Math.sqrt( +x );\n\n            // Math.sqrt underflow/overflow?\n            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n            if ( s == 0 || s == 1 / 0 ) {\n                n = coeffToString(c);\n                if ( ( n.length + e ) % 2 == 0 ) n += '0';\n                s = Math.sqrt(n);\n                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );\n\n                if ( s == 1 / 0 ) {\n                    n = '1e' + e;\n                } else {\n                    n = s.toExponential();\n                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;\n                }\n\n                r = new BigNumber(n);\n            } else {\n                r = new BigNumber( s + '' );\n            }\n\n            // Check for zero.\n            // r could be zero if MIN_EXP is changed after the this value was created.\n            // This would cause a division by zero (x/t) and hence Infinity below, which would cause\n            // coeffToString to throw.\n            if ( r.c[0] ) {\n                e = r.e;\n                s = e + dp;\n                if ( s < 3 ) s = 0;\n\n                // Newton-Raphson iteration.\n                for ( ; ; ) {\n                    t = r;\n                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );\n\n                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =\n                         coeffToString( r.c ) ).slice( 0, s ) ) {\n\n                        // The exponent of r may here be one less than the final result exponent,\n                        // e.g 0.0009999 (e-4) -- > 0.001 (e-3), so adjust s so the rounding digits\n                        // are indexed correctly.\n                        if ( r.e < e ) --s;\n                        n = n.slice( s - 3, s + 1 );\n\n                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\n                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\n                        // iteration.\n                        if ( n == '9999' || !rep && n == '4999' ) {\n\n                            // On the first iteration only, check to see if rounding up gives the\n                            // exact result as the nines may infinitely repeat.\n                            if ( !rep ) {\n                                round( t, t.e + DECIMAL_PLACES + 2, 0 );\n\n                                if ( t.times(t).eq(x) ) {\n                                    r = t;\n                                    break;\n                                }\n                            }\n\n                            dp += 4;\n                            s += 4;\n                            rep = 1;\n                        } else {\n\n                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\n                            // result. If not, then there are further digits and m will be truthy.\n                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {\n\n                                // Truncate to the first rounding digit.\n                                round( r, r.e + DECIMAL_PLACES + 2, 1 );\n                                m = !r.times(r).eq(x);\n                            }\n\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );\n        };\n\n\n        /*\n         *  n * 0 = 0\n         *  n * N = N\n         *  n * I = I\n         *  0 * n = 0\n         *  0 * 0 = 0\n         *  0 * N = N\n         *  0 * I = N\n         *  N * n = N\n         *  N * 0 = N\n         *  N * N = N\n         *  N * I = N\n         *  I * n = I\n         *  I * 0 = N\n         *  I * N = N\n         *  I * I = I\n         *\n         * Return a new BigNumber whose value is the value of this BigNumber times the value of\n         * BigNumber(y, b).\n         */\n        P.times = P.mul = function ( y, b ) {\n            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\n                base, sqrtBase,\n                x = this,\n                xc = x.c,\n                yc = ( id = 17, y = new BigNumber( y, b ) ).c;\n\n            // Either NaN, ±Infinity or ±0?\n            if ( !xc || !yc || !xc[0] || !yc[0] ) {\n\n                // Return NaN if either is NaN, or one is 0 and the other is Infinity.\n                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {\n                    y.c = y.e = y.s = null;\n                } else {\n                    y.s *= x.s;\n\n                    // Return ±Infinity if either is ±Infinity.\n                    if ( !xc || !yc ) {\n                        y.c = y.e = null;\n\n                    // Return ±0 if either is ±0.\n                    } else {\n                        y.c = [0];\n                        y.e = 0;\n                    }\n                }\n\n                return y;\n            }\n\n            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );\n            y.s *= x.s;\n            xcL = xc.length;\n            ycL = yc.length;\n\n            // Ensure xc points to longer array and xcL to its length.\n            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\n\n            // Initialise the result array with zeros.\n            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );\n\n            base = BASE;\n            sqrtBase = SQRT_BASE;\n\n            for ( i = ycL; --i >= 0; ) {\n                c = 0;\n                ylo = yc[i] % sqrtBase;\n                yhi = yc[i] / sqrtBase | 0;\n\n                for ( k = xcL, j = i + k; j > i; ) {\n                    xlo = xc[--k] % sqrtBase;\n                    xhi = xc[k] / sqrtBase | 0;\n                    m = yhi * xlo + xhi * ylo;\n                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;\n                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;\n                    zc[j--] = xlo % base;\n                }\n\n                zc[j] = c;\n            }\n\n            if (c) {\n                ++e;\n            } else {\n                zc.shift();\n            }\n\n            return normalise( y, zc, e );\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\n         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.\n         *\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n         *\n         * 'toDigits() precision out of range: {sd}'\n         * 'toDigits() precision not an integer: {sd}'\n         * 'toDigits() rounding mode not an integer: {rm}'\n         * 'toDigits() rounding mode out of range: {rm}'\n         */\n        P.toDigits = function ( sd, rm ) {\n            var n = new BigNumber(this);\n            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;\n            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;\n            return sd ? round( n, sd, rm ) : n;\n        };\n\n\n        /*\n         * Return a string representing the value of this BigNumber in exponential notation and\n         * rounded using ROUNDING_MODE to dp fixed decimal places.\n         *\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n         *\n         * 'toExponential() decimal places not an integer: {dp}'\n         * 'toExponential() decimal places out of range: {dp}'\n         * 'toExponential() rounding mode not an integer: {rm}'\n         * 'toExponential() rounding mode out of range: {rm}'\n         */\n        P.toExponential = function ( dp, rm ) {\n            return format( this,\n              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );\n        };\n\n\n        /*\n         * Return a string representing the value of this BigNumber in fixed-point notation rounding\n         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\n         *\n         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\n         * but e.g. (-0.00001).toFixed(0) is '-0'.\n         *\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n         *\n         * 'toFixed() decimal places not an integer: {dp}'\n         * 'toFixed() decimal places out of range: {dp}'\n         * 'toFixed() rounding mode not an integer: {rm}'\n         * 'toFixed() rounding mode out of range: {rm}'\n         */\n        P.toFixed = function ( dp, rm ) {\n            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )\n              ? ~~dp + this.e + 1 : null, rm, 20 );\n        };\n\n\n        /*\n         * Return a string representing the value of this BigNumber in fixed-point notation rounded\n         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\n         * of the FORMAT object (see BigNumber.config).\n         *\n         * FORMAT = {\n         *      decimalSeparator : '.',\n         *      groupSeparator : ',',\n         *      groupSize : 3,\n         *      secondaryGroupSize : 0,\n         *      fractionGroupSeparator : '\\xA0',    // non-breaking space\n         *      fractionGroupSize : 0\n         * };\n         *\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n         *\n         * 'toFormat() decimal places not an integer: {dp}'\n         * 'toFormat() decimal places out of range: {dp}'\n         * 'toFormat() rounding mode not an integer: {rm}'\n         * 'toFormat() rounding mode out of range: {rm}'\n         */\n        P.toFormat = function ( dp, rm ) {\n            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )\n              ? ~~dp + this.e + 1 : null, rm, 21 );\n\n            if ( this.c ) {\n                var i,\n                    arr = str.split('.'),\n                    g1 = +FORMAT.groupSize,\n                    g2 = +FORMAT.secondaryGroupSize,\n                    groupSeparator = FORMAT.groupSeparator,\n                    intPart = arr[0],\n                    fractionPart = arr[1],\n                    isNeg = this.s < 0,\n                    intDigits = isNeg ? intPart.slice(1) : intPart,\n                    len = intDigits.length;\n\n                if (g2) i = g1, g1 = g2, g2 = i, len -= i;\n\n                if ( g1 > 0 && len > 0 ) {\n                    i = len % g1 || g1;\n                    intPart = intDigits.substr( 0, i );\n\n                    for ( ; i < len; i += g1 ) {\n                        intPart += groupSeparator + intDigits.substr( i, g1 );\n                    }\n\n                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);\n                    if (isNeg) intPart = '-' + intPart;\n                }\n\n                str = fractionPart\n                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )\n                    ? fractionPart.replace( new RegExp( '\\\\d{' + g2 + '}\\\\B', 'g' ),\n                      '$&' + FORMAT.fractionGroupSeparator )\n                    : fractionPart )\n                  : intPart;\n            }\n\n            return str;\n        };\n\n\n        /*\n         * Return a string array representing the value of this BigNumber as a simple fraction with\n         * an integer numerator and an integer denominator. The denominator will be a positive\n         * non-zero value less than or equal to the specified maximum denominator. If a maximum\n         * denominator is not specified, the denominator will be the lowest value necessary to\n         * represent the number exactly.\n         *\n         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.\n         *\n         * 'toFraction() max denominator not an integer: {md}'\n         * 'toFraction() max denominator out of range: {md}'\n         */\n        P.toFraction = function (md) {\n            var arr, d0, d2, e, exp, n, n0, q, s,\n                k = ERRORS,\n                x = this,\n                xc = x.c,\n                d = new BigNumber(ONE),\n                n1 = d0 = new BigNumber(ONE),\n                d1 = n0 = new BigNumber(ONE);\n\n            if ( md != null ) {\n                ERRORS = false;\n                n = new BigNumber(md);\n                ERRORS = k;\n\n                if ( !( k = n.isInt() ) || n.lt(ONE) ) {\n\n                    if (ERRORS) {\n                        raise( 22,\n                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );\n                    }\n\n                    // ERRORS is false:\n                    // If md is a finite non-integer >= 1, round it to an integer and use it.\n                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;\n                }\n            }\n\n            if ( !xc ) return x.toString();\n            s = coeffToString(xc);\n\n            // Determine initial denominator.\n            // d is a power of 10 and the minimum max denominator that specifies the value exactly.\n            e = d.e = s.length - x.e - 1;\n            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];\n            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;\n\n            exp = MAX_EXP;\n            MAX_EXP = 1 / 0;\n            n = new BigNumber(s);\n\n            // n0 = d1 = 0\n            n0.c[0] = 0;\n\n            for ( ; ; )  {\n                q = div( n, d, 0, 1 );\n                d2 = d0.plus( q.times(d1) );\n                if ( d2.cmp(md) == 1 ) break;\n                d0 = d1;\n                d1 = d2;\n                n1 = n0.plus( q.times( d2 = n1 ) );\n                n0 = d2;\n                d = n.minus( q.times( d2 = d ) );\n                n = d2;\n            }\n\n            d2 = div( md.minus(d0), d1, 0, 1 );\n            n0 = n0.plus( d2.times(n1) );\n            d0 = d0.plus( d2.times(d1) );\n            n0.s = n1.s = x.s;\n            e *= 2;\n\n            // Determine which fraction is closer to x, n0/d0 or n1/d1\n            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(\n                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1\n                    ? [ n1.toString(), d1.toString() ]\n                    : [ n0.toString(), d0.toString() ];\n\n            MAX_EXP = exp;\n            return arr;\n        };\n\n\n        /*\n         * Return the value of this BigNumber converted to a number primitive.\n         */\n        P.toNumber = function () {\n            var x = this;\n\n            // Ensure zero has correct sign.\n            return +x || ( x.s ? x.s * 0 : NaN );\n        };\n\n\n        /*\n         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.\n         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\n         * If POW_PRECISION is not 0, round to POW_PRECISION using ROUNDING_MODE.\n         *\n         * n {number} Integer, -9007199254740992 to 9007199254740992 inclusive.\n         * (Performs 54 loop iterations for n of 9007199254740992.)\n         *\n         * 'pow() exponent not an integer: {n}'\n         * 'pow() exponent out of range: {n}'\n         */\n        P.toPower = P.pow = function (n) {\n            var k, y,\n                i = mathfloor( n < 0 ? -n : +n ),\n                x = this;\n\n            // Pass ±Infinity to Math.pow if exponent is out of range.\n            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&\n              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||\n                parseFloat(n) != n && !( n = NaN ) ) ) {\n                return new BigNumber( Math.pow( +x, n ) );\n            }\n\n            // Truncating each coefficient array to a length of k after each multiplication equates\n            // to truncating significant digits to POW_PRECISION + [28, 41], i.e. there will be a\n            // minimum of 28 guard digits retained. (Using + 1.5 would give [9, 21] guard digits.)\n            k = POW_PRECISION ? mathceil( POW_PRECISION / LOG_BASE + 2 ) : 0;\n            y = new BigNumber(ONE);\n\n            for ( ; ; ) {\n\n                if ( i % 2 ) {\n                    y = y.times(x);\n                    if ( !y.c ) break;\n                    if ( k && y.c.length > k ) y.c.length = k;\n                }\n\n                i = mathfloor( i / 2 );\n                if ( !i ) break;\n\n                x = x.times(x);\n                if ( k && x.c && x.c.length > k ) x.c.length = k;\n            }\n\n            if ( n < 0 ) y = ONE.div(y);\n            return k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;\n        };\n\n\n        /*\n         * Return a string representing the value of this BigNumber rounded to sd significant digits\n         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\n         * necessary to represent the integer part of the value in fixed-point notation, then use\n         * exponential notation.\n         *\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\n         *\n         * 'toPrecision() precision not an integer: {sd}'\n         * 'toPrecision() precision out of range: {sd}'\n         * 'toPrecision() rounding mode not an integer: {rm}'\n         * 'toPrecision() rounding mode out of range: {rm}'\n         */\n        P.toPrecision = function ( sd, rm ) {\n            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )\n              ? sd | 0 : null, rm, 24 );\n        };\n\n\n        /*\n         * Return a string representing the value of this BigNumber in base b, or base 10 if b is\n         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\n         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\n         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\n         * TO_EXP_NEG, return exponential notation.\n         *\n         * [b] {number} Integer, 2 to 64 inclusive.\n         *\n         * 'toString() base not an integer: {b}'\n         * 'toString() base out of range: {b}'\n         */\n        P.toString = function (b) {\n            var str,\n                n = this,\n                s = n.s,\n                e = n.e;\n\n            // Infinity or NaN?\n            if ( e === null ) {\n\n                if (s) {\n                    str = 'Infinity';\n                    if ( s < 0 ) str = '-' + str;\n                } else {\n                    str = 'NaN';\n                }\n            } else {\n                str = coeffToString( n.c );\n\n                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {\n                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\n                      ? toExponential( str, e )\n                      : toFixedPoint( str, e );\n                } else {\n                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );\n                }\n\n                if ( s < 0 && n.c[0] ) str = '-' + str;\n            }\n\n            return str;\n        };\n\n\n        /*\n         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole\n         * number.\n         */\n        P.truncated = P.trunc = function () {\n            return round( new BigNumber(this), this.e + 1, 1 );\n        };\n\n\n\n        /*\n         * Return as toString, but do not accept a base argument.\n         */\n        P.valueOf = P.toJSON = function () {\n            return this.toString();\n        };\n\n\n        // Aliases for BigDecimal methods.\n        //P.add = P.plus;         // P.add included above\n        //P.subtract = P.minus;   // P.sub included above\n        //P.multiply = P.times;   // P.mul included above\n        //P.divide = P.div;\n        //P.remainder = P.mod;\n        //P.compareTo = P.cmp;\n        //P.negate = P.neg;\n\n\n        if ( configObj != null ) BigNumber.config(configObj);\n\n        return BigNumber;\n    }\n\n\n    // PRIVATE HELPER FUNCTIONS\n\n\n    function bitFloor(n) {\n        var i = n | 0;\n        return n > 0 || n === i ? i : i - 1;\n    }\n\n\n    // Return a coefficient array as a string of base 10 digits.\n    function coeffToString(a) {\n        var s, z,\n            i = 1,\n            j = a.length,\n            r = a[0] + '';\n\n        for ( ; i < j; ) {\n            s = a[i++] + '';\n            z = LOG_BASE - s.length;\n            for ( ; z--; s = '0' + s );\n            r += s;\n        }\n\n        // Determine trailing zeros.\n        for ( j = r.length; r.charCodeAt(--j) === 48; );\n        return r.slice( 0, j + 1 || 1 );\n    }\n\n\n    // Compare the value of BigNumbers x and y.\n    function compare( x, y ) {\n        var a, b,\n            xc = x.c,\n            yc = y.c,\n            i = x.s,\n            j = y.s,\n            k = x.e,\n            l = y.e;\n\n        // Either NaN?\n        if ( !i || !j ) return null;\n\n        a = xc && !xc[0];\n        b = yc && !yc[0];\n\n        // Either zero?\n        if ( a || b ) return a ? b ? 0 : -j : i;\n\n        // Signs differ?\n        if ( i != j ) return i;\n\n        a = i < 0;\n        b = k == l;\n\n        // Either Infinity?\n        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;\n\n        // Compare exponents.\n        if ( !b ) return k > l ^ a ? 1 : -1;\n\n        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\n\n        // Compare digit by digit.\n        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;\n\n        // Compare lengths.\n        return k == l ? 0 : k > l ^ a ? 1 : -1;\n    }\n\n\n    /*\n     * Return true if n is a valid number in range, otherwise false.\n     * Use for argument validation when ERRORS is false.\n     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.\n     */\n    function intValidatorNoErrors( n, min, max ) {\n        return ( n = truncate(n) ) >= min && n <= max;\n    }\n\n\n    function isArray(obj) {\n        return Object.prototype.toString.call(obj) == '[object Array]';\n    }\n\n\n    /*\n     * Convert string of baseIn to an array of numbers of baseOut.\n     * Eg. convertBase('255', 10, 16) returns [15, 15].\n     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\n     */\n    function toBaseOut( str, baseIn, baseOut ) {\n        var j,\n            arr = [0],\n            arrL,\n            i = 0,\n            len = str.length;\n\n        for ( ; i < len; ) {\n            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );\n            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );\n\n            for ( ; j < arr.length; j++ ) {\n\n                if ( arr[j] > baseOut - 1 ) {\n                    if ( arr[j + 1] == null ) arr[j + 1] = 0;\n                    arr[j + 1] += arr[j] / baseOut | 0;\n                    arr[j] %= baseOut;\n                }\n            }\n        }\n\n        return arr.reverse();\n    }\n\n\n    function toExponential( str, e ) {\n        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +\n          ( e < 0 ? 'e' : 'e+' ) + e;\n    }\n\n\n    function toFixedPoint( str, e ) {\n        var len, z;\n\n        // Negative exponent?\n        if ( e < 0 ) {\n\n            // Prepend zeros.\n            for ( z = '0.'; ++e; z += '0' );\n            str = z + str;\n\n        // Positive exponent\n        } else {\n            len = str.length;\n\n            // Append zeros.\n            if ( ++e > len ) {\n                for ( z = '0', e -= len; --e; z += '0' );\n                str += z;\n            } else if ( e < len ) {\n                str = str.slice( 0, e ) + '.' + str.slice(e);\n            }\n        }\n\n        return str;\n    }\n\n\n    function truncate(n) {\n        n = parseFloat(n);\n        return n < 0 ? mathceil(n) : mathfloor(n);\n    }\n\n\n    // EXPORT\n\n\n    BigNumber = another();\n\n    // AMD.\n    if ( typeof define == 'function' && define.amd ) {\n        define( function () { return BigNumber; } );\n\n    // Node and other environments that support module.exports.\n    } else if ( typeof module != 'undefined' && module.exports ) {\n        module.exports = BigNumber;\n        if ( !crypto ) try { crypto = require('crypto'); } catch (e) {}\n\n    // Browser.\n    } else {\n        global.BigNumber = BigNumber;\n    }\n})(this);\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file bzz.js\n * @author Alex Beregszaszi <alex@rtfs.hu>\n * @date 2016\n *\n * Reference: https://github.com/ethereum/go-ethereum/blob/swarm/internal/web3ext/web3ext.go#L33\n */\n\n\"use strict\";\n\nvar Method = require('../method');\nvar Property = require('../property');\n\nfunction Swarm(web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) {\n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n\n    properties().forEach(function(p) {\n        p.attachToObject(self);\n        p.setRequestManager(self._requestManager);\n    });\n}\n\nvar methods = function () {\n    var blockNetworkRead = new Method({\n        name: 'blockNetworkRead',\n        call: 'bzz_blockNetworkRead',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var syncEnabled = new Method({\n        name: 'syncEnabled',\n        call: 'bzz_syncEnabled',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var swapEnabled = new Method({\n        name: 'swapEnabled',\n        call: 'bzz_swapEnabled',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var download = new Method({\n        name: 'download',\n        call: 'bzz_download',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var upload = new Method({\n        name: 'upload',\n        call: 'bzz_upload',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var retrieve = new Method({\n        name: 'retrieve',\n        call: 'bzz_retrieve',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var store = new Method({\n        name: 'store',\n        call: 'bzz_store',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var get = new Method({\n        name: 'get',\n        call: 'bzz_get',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var put = new Method({\n        name: 'put',\n        call: 'bzz_put',\n        params: 2,\n        inputFormatter: [null, null]\n    });\n\n    var modify = new Method({\n        name: 'modify',\n        call: 'bzz_modify',\n        params: 4,\n        inputFormatter: [null, null, null, null]\n    });\n\n    return [\n        blockNetworkRead,\n        syncEnabled,\n        swapEnabled,\n        download,\n        upload,\n        retrieve,\n        store,\n        get,\n        put,\n        modify\n    ];\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'hive',\n            getter: 'bzz_hive'\n        }),\n        new Property({\n            name: 'info',\n            getter: 'bzz_info'\n        })\n    ];\n};\n\n\nmodule.exports = Swarm;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file eth.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../../utils/utils');\nvar Property = require('../property');\n\nvar Net = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    properties().forEach(function(p) { \n        p.attachToObject(self);\n        p.setRequestManager(web3._requestManager);\n    });\n};\n\n/// @returns an array of objects describing web3.eth api properties\nvar properties = function () {\n    return [\n        new Property({\n            name: 'listening',\n            getter: 'net_listening'\n        }),\n        new Property({\n            name: 'peerCount',\n            getter: 'net_peerCount',\n            outputFormatter: utils.toDecimal\n        })\n    ];\n};\n\nmodule.exports = Net;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file db.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Method = require('../method');\n\nvar DB = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n    \n    methods().forEach(function(method) { \n        method.attachToObject(self);\n        method.setRequestManager(web3._requestManager);\n    });\n};\n\nvar methods = function () {\n    var putString = new Method({\n        name: 'putString',\n        call: 'db_putString',\n        params: 3\n    });\n\n    var getString = new Method({\n        name: 'getString',\n        call: 'db_getString',\n        params: 2\n    });\n\n    var putHex = new Method({\n        name: 'putHex',\n        call: 'db_putHex',\n        params: 3\n    });\n\n    var getHex = new Method({\n        name: 'getHex',\n        call: 'db_getHex',\n        params: 2\n    });\n\n    return [\n        putString, getString, putHex, getHex\n    ];\n};\n\nmodule.exports = DB;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file eth.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar Method = require('../method');\nvar Property = require('../property');\nvar formatters = require('../formatters');\n\nfunction Personal(web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) {\n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n\n    properties().forEach(function(p) {\n        p.attachToObject(self);\n        p.setRequestManager(self._requestManager);\n    });\n}\n\nvar methods = function () {\n    var newAccount = new Method({\n        name: 'newAccount',\n        call: 'personal_newAccount',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var importRawKey = new Method({\n        name: 'importRawKey',\n\t\tcall: 'personal_importRawKey',\n\t\tparams: 2\n    });\n\n    var sign = new Method({\n        name: 'sign',\n\t\tcall: 'personal_sign',\n\t\tparams: 3,\n\t\tinputFormatter: [null, formatters.inputAddressFormatter, null]\n    });\n\n    var ecRecover = new Method({\n        name: 'ecRecover',\n\t\tcall: 'personal_ecRecover',\n\t\tparams: 2\n    });\n\n    var unlockAccount = new Method({\n        name: 'unlockAccount',\n        call: 'personal_unlockAccount',\n        params: 3,\n        inputFormatter: [formatters.inputAddressFormatter, null, null]\n    });\n\n    var sendTransaction = new Method({\n        name: 'sendTransaction',\n        call: 'personal_sendTransaction',\n        params: 2,\n        inputFormatter: [formatters.inputTransactionFormatter, null]\n    });\n\n    var lockAccount = new Method({\n        name: 'lockAccount',\n        call: 'personal_lockAccount',\n        params: 1,\n        inputFormatter: [formatters.inputAddressFormatter]\n    });\n\n    return [\n        newAccount,\n        importRawKey,\n        unlockAccount,\n        ecRecover,\n        sign,\n        sendTransaction,\n        lockAccount\n    ];\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'listAccounts',\n            getter: 'personal_listAccounts'\n        })\n    ];\n};\n\n\nmodule.exports = Personal;\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file iban.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar BigNumber = require('bignumber.js');\n\nvar padLeft = function (string, bytes) {\n    var result = string;\n    while (result.length < bytes * 2) {\n        result = '0' + result;\n    }\n    return result;\n};\n\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n *\n * @method iso13616Prepare\n * @param {String} iban the IBAN\n * @returns {String} the prepared IBAN\n */\nvar iso13616Prepare = function (iban) {\n    var A = 'A'.charCodeAt(0);\n    var Z = 'Z'.charCodeAt(0);\n\n    iban = iban.toUpperCase();\n    iban = iban.substr(4) + iban.substr(0,4);\n\n    return iban.split('').map(function(n){\n        var code = n.charCodeAt(0);\n        if (code >= A && code <= Z){\n            // A = 10, B = 11, ... Z = 35\n            return code - A + 10;\n        } else {\n            return n;\n        }\n    }).join('');\n};\n\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n *\n * @method mod9710\n * @param {String} iban\n * @returns {Number}\n */\nvar mod9710 = function (iban) {\n    var remainder = iban,\n        block;\n\n    while (remainder.length > 2){\n        block = remainder.slice(0, 9);\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n    }\n\n    return parseInt(remainder, 10) % 97;\n};\n\n/**\n * This prototype should be used to create iban object from iban correct string\n *\n * @param {String} iban\n */\nvar Iban = function (iban) {\n    this._iban = iban;\n};\n\n/**\n * This method should be used to create iban object from ethereum address\n *\n * @method fromAddress\n * @param {String} address\n * @return {Iban} the IBAN object\n */\nIban.fromAddress = function (address) {\n    var asBn = new BigNumber(address, 16);\n    var base36 = asBn.toString(36);\n    var padded = padLeft(base36, 15);\n    return Iban.fromBban(padded.toUpperCase());\n};\n\n/**\n * Convert the passed BBAN to an IBAN for this country specification.\n * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n *\n * @method fromBban\n * @param {String} bban the BBAN to convert to IBAN\n * @returns {Iban} the IBAN object\n */\nIban.fromBban = function (bban) {\n    var countryCode = 'XE';\n\n    var remainder = mod9710(iso13616Prepare(countryCode + '00' + bban));\n    var checkDigit = ('0' + (98 - remainder)).slice(-2);\n\n    return new Iban(countryCode + checkDigit + bban);\n};\n\n/**\n * Should be used to create IBAN object for given institution and identifier\n *\n * @method createIndirect\n * @param {Object} options, required options are \"institution\" and \"identifier\"\n * @return {Iban} the IBAN object\n */\nIban.createIndirect = function (options) {\n    return Iban.fromBban('ETH' + options.institution + options.identifier);\n};\n\n/**\n * Thos method should be used to check if given string is valid iban object\n *\n * @method isValid\n * @param {String} iban string\n * @return {Boolean} true if it is valid IBAN\n */\nIban.isValid = function (iban) {\n    var i = new Iban(iban);\n    return i.isValid();\n};\n\n/**\n * Should be called to check if iban is correct\n *\n * @method isValid\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isValid = function () {\n    return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&\n        mod9710(iso13616Prepare(this._iban)) === 1;\n};\n\n/**\n * Should be called to check if iban number is direct\n *\n * @method isDirect\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isDirect = function () {\n    return this._iban.length === 34 || this._iban.length === 35;\n};\n\n/**\n * Should be called to check if iban number if indirect\n *\n * @method isIndirect\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isIndirect = function () {\n    return this._iban.length === 20;\n};\n\n/**\n * Should be called to get iban checksum\n * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)\n *\n * @method checksum\n * @returns {String} checksum\n */\nIban.prototype.checksum = function () {\n    return this._iban.substr(2, 2);\n};\n\n/**\n * Should be called to get institution identifier\n * eg. XREG\n *\n * @method institution\n * @returns {String} institution identifier\n */\nIban.prototype.institution = function () {\n    return this.isIndirect() ? this._iban.substr(7, 4) : '';\n};\n\n/**\n * Should be called to get client identifier within institution\n * eg. GAVOFYORK\n *\n * @method client\n * @returns {String} client identifier\n */\nIban.prototype.client = function () {\n    return this.isIndirect() ? this._iban.substr(11) : '';\n};\n\n/**\n * Should be called to get client direct address\n *\n * @method address\n * @returns {String} client direct address\n */\nIban.prototype.address = function () {\n    if (this.isDirect()) {\n        var base36 = this._iban.substr(4);\n        var asBn = new BigNumber(base36, 36);\n        return padLeft(asBn.toString(16), 20);\n    } \n\n    return '';\n};\n\nIban.prototype.toString = function () {\n    return this._iban;\n};\n\nmodule.exports = Iban;\n\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\n/**\n * Utils\n *\n * @module utils\n */\n\n/**\n * Utility functions\n *\n * @class [utils] utils\n * @constructor\n */\n\n\nvar BigNumber = require('bignumber.js');\nvar sha3 = require('./sha3.js');\nvar utf8 = require('utf8');\n\nvar unitMap = {\n    'noether':      '0',\n    'wei':          '1',\n    'kwei':         '1000',\n    'Kwei':         '1000',\n    'babbage':      '1000',\n    'femtoether':   '1000',\n    'mwei':         '1000000',\n    'Mwei':         '1000000',\n    'lovelace':     '1000000',\n    'picoether':    '1000000',\n    'gwei':         '1000000000',\n    'Gwei':         '1000000000',\n    'shannon':      '1000000000',\n    'nanoether':    '1000000000',\n    'nano':         '1000000000',\n    'szabo':        '1000000000000',\n    'microether':   '1000000000000',\n    'micro':        '1000000000000',\n    'finney':       '1000000000000000',\n    'milliether':   '1000000000000000',\n    'milli':        '1000000000000000',\n    'ether':        '1000000000000000000',\n    'kether':       '1000000000000000000000',\n    'grand':        '1000000000000000000000',\n    'mether':       '1000000000000000000000000',\n    'gether':       '1000000000000000000000000000',\n    'tether':       '1000000000000000000000000000000'\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method padLeft\n * @param {String} string to be padded\n * @param {Number} characters that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar padLeft = function (string, chars, sign) {\n    return new Array(chars - string.length + 1).join(sign ? sign : \"0\") + string;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method padRight\n * @param {String} string to be padded\n * @param {Number} characters that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar padRight = function (string, chars, sign) {\n    return string + (new Array(chars - string.length + 1).join(sign ? sign : \"0\"));\n};\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nvar toUtf8 = function(hex) {\n// Find termination\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        if (code === 0)\n            break;\n        str += String.fromCharCode(code);\n    }\n\n    return utf8.decode(str);\n};\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nvar toAscii = function(hex) {\n// Find termination\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n\n    return str;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Boolean} allowZero to convert code point zero to 00 instead of end of string\n * @returns {String} hex representation of input string\n */\nvar fromUtf8 = function(str, allowZero) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        if (code === 0) {\n            if (allowZero) {\n                hex += '00';\n            } else {\n                break;\n            }\n        } else {\n            var n = code.toString(16);\n            hex += n.length < 2 ? '0' + n : n;\n        }\n    }\n\n    return \"0x\" + hex;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nvar fromAscii = function(str, num) {\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n\n    return \"0x\" + hex.padEnd(num,'0');\n};\n\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method transformToFullName\n * @param {Object} json-abi\n * @return {String} full fnction/event name\n */\nvar transformToFullName = function (json) {\n    if (json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n\n    var typeName = json.inputs.map(function(i){return i.type; }).join();\n    return json.name + '(' + typeName + ')';\n};\n\n/**\n * Should be called to get display name of contract function\n *\n * @method extractDisplayName\n * @param {String} name of function/event\n * @returns {String} display name for function/event eg. multiply(uint256) -> multiply\n */\nvar extractDisplayName = function (name) {\n    var stBracket = name.indexOf('(');\n    var endBracket = name.indexOf(')');\n    return (stBracket !== -1 && endBracket !== -1) ? name.substr(0, stBracket) : name;\n};\n\n/**\n * Should be called to get type name of contract function\n *\n * @method extractTypeName\n * @param {String} name of function/event\n * @returns {String} type name for function/event eg. multiply(uint256) -> uint256\n */\nvar extractTypeName = function (name) {\n    var stBracket = name.indexOf('(');\n    var endBracket = name.indexOf(')');\n    return (stBracket !== -1 && endBracket !== -1) ? name.substr(stBracket + 1, endBracket - stBracket - 1).replace(' ', '') : \"\";\n};\n\n/**\n * Converts value to it's decimal representation in string\n *\n * @method toDecimal\n * @param {String|Number|BigNumber}\n * @return {String}\n */\nvar toDecimal = function (value) {\n    return toBigNumber(value).toNumber();\n};\n\n/**\n * Converts value to it's hex representation\n *\n * @method fromDecimal\n * @param {String|Number|BigNumber}\n * @return {String}\n */\nvar fromDecimal = function (value) {\n    var number = toBigNumber(value);\n    var result = number.toString(16);\n\n    return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n};\n\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BigNumber|Object}\n * @return {String}\n */\nvar toHex = function (val) {\n    /*jshint maxcomplexity: 8 */\n\n    if (isBoolean(val))\n        return fromDecimal(+val);\n\n    if (isBigNumber(val))\n        return fromDecimal(val);\n\n    if (typeof val === 'object')\n        return fromUtf8(JSON.stringify(val));\n\n    // if its a negative number, pass it through fromDecimal\n    if (isString(val)) {\n        if (val.indexOf('-0x') === 0)\n            return fromDecimal(val);\n        else if(val.indexOf('0x') === 0)\n            return val;\n        else if (!isFinite(val))\n            return fromUtf8(val,1);\n    }\n\n    return fromDecimal(val);\n};\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getValueOfUnit = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    var unitValue = unitMap[unit];\n    if (unitValue === undefined) {\n        throw new Error('This unit doesn\\'t exists, please use the one of the following units' + JSON.stringify(unitMap, null, 2));\n    }\n    return new BigNumber(unitValue, 10);\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n*/\nvar fromWei = function(number, unit) {\n    var returnValue = toBigNumber(number).dividedBy(getValueOfUnit(unit));\n\n    return isBigNumber(number) ? returnValue : returnValue.toString(10);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BigNumber} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n*/\nvar toWei = function(number, unit) {\n    var returnValue = toBigNumber(number).times(getValueOfUnit(unit));\n\n    return isBigNumber(number) ? returnValue : returnValue.toString(10);\n};\n\n/**\n * Takes an input and transforms it into an bignumber\n *\n * @method toBigNumber\n * @param {Number|String|BigNumber} a number, string, HEX string or BigNumber\n * @return {BigNumber} BigNumber\n*/\nvar toBigNumber = function(number) {\n    /*jshint maxcomplexity:5 */\n    number = number || 0;\n    if (isBigNumber(number))\n        return number;\n\n    if (isString(number) && (number.indexOf('0x') === 0 || number.indexOf('-0x') === 0)) {\n        return new BigNumber(number.replace('0x',''), 16);\n    }\n\n    return new BigNumber(number.toString(10), 10);\n};\n\n/**\n * Takes and input transforms it into bignumber and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BigNumber}\n * @return {BigNumber}\n */\nvar toTwosComplement = function (number) {\n    var bigNumber = toBigNumber(number).round();\n    if (bigNumber.lessThan(0)) {\n        return new BigNumber(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16).plus(bigNumber).plus(1);\n    }\n    return bigNumber;\n};\n\n/**\n * Checks if the given string is strictly an address\n *\n * @method isStrictAddress\n * @param {String} address the given HEX adress\n * @return {Boolean}\n*/\nvar isStrictAddress = function (address) {\n    return /^0x[0-9a-f]{40}$/i.test(address);\n};\n\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX adress\n * @return {Boolean}\n*/\nvar isAddress = function (address) {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\n/**\n * Checks if the given string is a checksummed address\n *\n * @method isChecksumAddress\n * @param {String} address the given HEX adress\n * @return {Boolean}\n*/\nvar isChecksumAddress = function (address) {\n    // Check each case\n    address = address.replace('0x','');\n    var addressHash = sha3(address.toLowerCase());\n\n    for (var i = 0; i < 40; i++ ) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\n\n\n/**\n * Makes a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX adress\n * @return {String}\n*/\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined') return '';\n\n    address = address.toLowerCase().replace('0x','');\n    var addressHash = sha3(address);\n    var checksumAddress = '0x';\n\n    for (var i = 0; i < address.length; i++ ) {\n        // If ith character is 9 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n          checksumAddress += address[i].toUpperCase();\n        } else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n\n/**\n * Transforms given string to valid 20 bytes-length addres with 0x prefix\n *\n * @method toAddress\n * @param {String} address\n * @return {String} formatted address\n */\nvar toAddress = function (address) {\n    if (isStrictAddress(address)) {\n        return address;\n    }\n\n    if (/^[0-9a-f]{40}$/.test(address)) {\n        return '0x' + address;\n    }\n\n    return '0x' + padLeft(toHex(address).substr(2), 40);\n};\n\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object}\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object instanceof BigNumber ||\n        (object && object.constructor && object.constructor.name === 'BigNumber');\n};\n\n/**\n * Returns true if object is string, otherwise false\n *\n * @method isString\n * @param {Object}\n * @return {Boolean}\n */\nvar isString = function (object) {\n    return typeof object === 'string' ||\n        (object && object.constructor && object.constructor.name === 'String');\n};\n\n/**\n * Returns true if object is function, otherwise false\n *\n * @method isFunction\n * @param {Object}\n * @return {Boolean}\n */\nvar isFunction = function (object) {\n    return typeof object === 'function';\n};\n\n/**\n * Returns true if object is Objet, otherwise false\n *\n * @method isObject\n * @param {Object}\n * @return {Boolean}\n */\nvar isObject = function (object) {\n    return object !== null && !(Array.isArray(object)) && typeof object === 'object';\n};\n\n/**\n * Returns true if object is boolean, otherwise false\n *\n * @method isBoolean\n * @param {Object}\n * @return {Boolean}\n */\nvar isBoolean = function (object) {\n    return typeof object === 'boolean';\n};\n\n/**\n * Returns true if object is array, otherwise false\n *\n * @method isArray\n * @param {Object}\n * @return {Boolean}\n */\nvar isArray = function (object) {\n    return Array.isArray(object);\n};\n\n/**\n * Returns true if given string is valid json object\n *\n * @method isJson\n * @param {String}\n * @return {Boolean}\n */\nvar isJson = function (str) {\n    try {\n        return !!JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n};\n\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} hex encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} hex encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {\n        return false;\n    } else if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {\n        return true;\n    }\n    return false;\n};\n\nmodule.exports = {\n    padLeft: padLeft,\n    padRight: padRight,\n    toHex: toHex,\n    toDecimal: toDecimal,\n    fromDecimal: fromDecimal,\n    toUtf8: toUtf8,\n    toAscii: toAscii,\n    fromUtf8: fromUtf8,\n    fromAscii: fromAscii,\n    transformToFullName: transformToFullName,\n    extractDisplayName: extractDisplayName,\n    extractTypeName: extractTypeName,\n    toWei: toWei,\n    fromWei: fromWei,\n    toBigNumber: toBigNumber,\n    toTwosComplement: toTwosComplement,\n    toAddress: toAddress,\n    isBigNumber: isBigNumber,\n    isStrictAddress: isStrictAddress,\n    isAddress: isAddress,\n    isChecksumAddress: isChecksumAddress,\n    toChecksumAddress: toChecksumAddress,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isBoolean: isBoolean,\n    isArray: isArray,\n    isJson: isJson,\n    isBloom: isBloom,\n    isTopic: isTopic,\n};\n","var formatters = require('./formatters');\nvar utils = require('./../utils/utils');\nvar Method = require('./method');\nvar Property = require('./property');\n\n// TODO: refactor, so the input params are not altered.\n// it's necessary to make same 'extension' work with multiple providers\nvar extend = function (web3) {\n    /* jshint maxcomplexity:5 */\n    var ex = function (extension) {\n\n        var extendedObject;\n        if (extension.property) {\n            if (!web3[extension.property]) {\n                web3[extension.property] = {};\n            }\n            extendedObject = web3[extension.property];\n        } else {\n            extendedObject = web3;\n        }\n\n        if (extension.methods) {\n            extension.methods.forEach(function (method) {\n                method.attachToObject(extendedObject);\n                method.setRequestManager(web3._requestManager);\n            });\n        }\n\n        if (extension.properties) {\n            extension.properties.forEach(function (property) {\n                property.attachToObject(extendedObject);\n                property.setRequestManager(web3._requestManager);\n            });\n        }\n    };\n\n    ex.formatters = formatters; \n    ex.utils = utils;\n    ex.Method = Method;\n    ex.Property = Property;\n\n    return ex;\n};\n\n\n\nmodule.exports = extend;\n\n","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file shh.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n *   Marek Kotewicz <marek@ethcore.io>\n * @date 2017\n */\n\nvar Method = require('../method');\nvar Filter = require('../filter');\nvar watches = require('./watches');\n\nvar Shh = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) {\n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n};\n\nShh.prototype.newMessageFilter = function (options, callback, filterCreationErrorCallback) {\n    return new Filter(options, 'shh', this._requestManager, watches.shh(), null, callback, filterCreationErrorCallback);\n};\n\nvar methods = function () {\n\n    return [\n        new Method({\n            name: 'version',\n            call: 'shh_version',\n            params: 0\n        }),\n        new Method({\n            name: 'info',\n            call: 'shh_info',\n            params: 0\n        }),\n        new Method({\n            name: 'setMaxMessageSize',\n            call: 'shh_setMaxMessageSize',\n            params: 1\n        }),\n        new Method({\n            name: 'setMinPoW',\n            call: 'shh_setMinPoW',\n            params: 1\n        }),\n        new Method({\n            name: 'markTrustedPeer',\n            call: 'shh_markTrustedPeer',\n            params: 1\n        }),\n        new Method({\n            name: 'newKeyPair',\n            call: 'shh_newKeyPair',\n            params: 0\n        }),\n        new Method({\n            name: 'addPrivateKey',\n            call: 'shh_addPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteKeyPair',\n            call: 'shh_deleteKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'hasKeyPair',\n            call: 'shh_hasKeyPair',\n            params: 1\n        }),\n        new Method({\n            name: 'getPublicKey',\n            call: 'shh_getPublicKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getPrivateKey',\n            call: 'shh_getPrivateKey',\n            params: 1\n        }),\n        new Method({\n            name: 'newSymKey',\n            call: 'shh_newSymKey',\n            params: 0\n        }),\n        new Method({\n            name: 'addSymKey',\n            call: 'shh_addSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'generateSymKeyFromPassword',\n            call: 'shh_generateSymKeyFromPassword',\n            params: 1\n        }),\n        new Method({\n            name: 'hasSymKey',\n            call: 'shh_hasSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'getSymKey',\n            call: 'shh_getSymKey',\n            params: 1\n        }),\n        new Method({\n            name: 'deleteSymKey',\n            call: 'shh_deleteSymKey',\n            params: 1\n        }),\n\n        // subscribe and unsubscribe missing\n\n        new Method({\n            name: 'post',\n            call: 'shh_post',\n            params: 1,\n            inputFormatter: [null]\n        })\n    ];\n};\n\nmodule.exports = Shh;\n\n"]}